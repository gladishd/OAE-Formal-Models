(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2350449,      48224]
NotebookOptionsPosition[   2323998,      47701]
NotebookOutlinePosition[   2342816,      48120]
CellTagsIndexPosition[   2342773,      48117]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"nb", "=", 
   RowBox[{"EvaluationNotebook", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"nb", ",", 
    RowBox[{"Background", "->", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0.1", ",", "0.1", ",", "0.1"}], "]"}]}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<DarkMode\>\"", "]"}], "[", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.962070151296504*^9, 3.96207015129828*^9}},
 CellLabel->
  "In[2884]:=",ExpressionUUID->"6328b647-aef5-4857-9d03-d1caaf65b2af"],

Cell[TextData[StyleBox["Available  for  a  call? I  want  to  give  you  \
something  interesting  to  do\nTopic: \nClos network vs mesh network; \
bandwidth latency, tables reimagined; graph share folder has the original \
spreadsheet numbers files! After that # spanning trees analysis and graph \
LaPlacian edge removal true output should be a story from Clos networks, \
latency & Bandwidth, and resilience to Mesh networks, latency & bandwidth & \
resilience * ", "Abstract"]], "Code",
 PageWidth->WindowWidth,
 CellChangeTimes->{{3.9620802156924973`*^9, 3.962080229698963*^9}},
 FormatType->
  "TextForm",ExpressionUUID->"137da4c0-88e7-4d43-907d-bd24ccfb4bf5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generateHexagonalLattice", "[", "radius_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "basis", ",", "coords", ",", "latticePoints", ",", "neighborOffsets", 
       ",", "adjacency", ",", "edges"}], "}"}], ",", 
     RowBox[{
      RowBox[{"basis", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["3"]}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["3"]}], ",", "1"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"coords", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"-", "radius"}], ",", "radius"}], "]"}], ",", "2"}], 
          "]"}], ",", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"i", "=", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
               ",", 
              RowBox[{"j", "=", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"i", "+", "j"}], "]"}], "\[LessEqual]", "radius"}]}], 
           "]"}], "&"}]}], "]"}]}], ";", 
      RowBox[{"latticePoints", "=", 
       RowBox[{"coords", ".", "basis"}]}], ";", 
      RowBox[{"neighborOffsets", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"adjacency", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"c", "=", "coord"}], "}"}], ",", 
           RowBox[{"c", "\[Rule]", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c", "+", "#1"}], "&"}], ")"}], "/@", 
               "neighborOffsets"}], ",", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"coords", ",", "#1"}], "]"}], "&"}]}], "]"}]}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"coord", ",", "coords"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"edges", "=", 
       RowBox[{"UndirectedEdge", "@@@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"coord", "\[Rule]", "#1"}], "&"}], ")"}], "/@", 
            RowBox[{"(", 
             RowBox[{"coord", "/.", "\[VeryThinSpace]", "adjacency"}], 
             ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"coord", ",", "coords"}], "}"}]}], "]"}], "]"}]}]}], ";", 
      
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{"\"\<Graph\>\"", "\[Rule]", 
         RowBox[{"Graph", "[", 
          RowBox[{"coords", ",", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Sort", "/@", "edges"}], "]"}], ",", 
           RowBox[{"VertexCoordinates", "\[Rule]", 
            RowBox[{"Thread", "[", 
             RowBox[{"coords", "\[Rule]", "latticePoints"}], "]"}]}]}], 
          "]"}]}], ",", 
        RowBox[{"\"\<Coordinates\>\"", "\[Rule]", "coords"}], ",", 
        RowBox[{"\"\<Layout\>\"", "\[Rule]", "latticePoints"}]}], "]"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"buildSpanningTree", "[", 
    RowBox[{"graph_", ",", "root_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"reapResult", ",", "edges"}], "}"}], ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"VertexQ", "[", 
          RowBox[{"graph", ",", "root"}], "]"}]}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}]}], "]"}], ";", 
      RowBox[{"reapResult", "=", 
       RowBox[{"Reap", "[", 
        RowBox[{"BreadthFirstScan", "[", 
         RowBox[{"graph", ",", "root", ",", 
          RowBox[{"\"\<FrontierEdge\>\"", "\[Rule]", "Sow"}]}], "]"}], 
        "]"}]}], ";", 
      RowBox[{"edges", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "reapResult", "]"}], ">", "1"}], ",", 
         RowBox[{"reapResult", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"VertexList", "[", "graph", "]"}], ",", "edges", ",", 
        RowBox[{"VertexCoordinates", "\[Rule]", 
         RowBox[{"GraphEmbedding", "[", "graph", "]"}]}]}], "]"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"healTree", "[", 
    RowBox[{"tree_", ",", "failedNodes_", ",", "physicalGraph_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "liveTree", ",", "orphans", ",", "healingEdges", ",", "newTree", ",", 
       "connectedComponentRoot"}], "}"}], ",", 
     RowBox[{
      RowBox[{"liveTree", "=", 
       RowBox[{"VertexDelete", "[", 
        RowBox[{"tree", ",", "failedNodes"}], "]"}]}], ";", 
      RowBox[{"connectedComponentRoot", "=", 
       RowBox[{"First", "[", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"ConnectedComponents", "[", "liveTree", "]"}], ",", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"#1", ",", 
              RowBox[{
               RowBox[{"VertexList", "[", "tree", "]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             "]"}], "&"}]}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ";", 
      RowBox[{"orphans", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"VertexList", "[", "liveTree", "]"}], ",", 
         "connectedComponentRoot"}], "]"}]}], ";", 
      RowBox[{"healingEdges", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Reap", "[", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"orphan", ",", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "physicalNeighbors", ",", "potentialParents", ",", 
                 "newParent"}], "}"}], ",", 
               RowBox[{
                RowBox[{"physicalNeighbors", "=", 
                 RowBox[{"Complement", "[", 
                  RowBox[{
                   RowBox[{"AdjacencyList", "[", 
                    RowBox[{"physicalGraph", ",", "orphan"}], "]"}], ",", 
                   "failedNodes"}], "]"}]}], ";", 
                RowBox[{"potentialParents", "=", 
                 RowBox[{
                 "physicalNeighbors", "\[Intersection]", 
                  "connectedComponentRoot"}]}], ";", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", "potentialParents", "]"}], ">", 
                   "0"}], ",", 
                  RowBox[{
                   RowBox[{"newParent", "=", 
                    RowBox[{"First", "[", "potentialParents", "]"}]}], ";", 
                   RowBox[{"Sow", "[", 
                    RowBox[{"newParent", "\[DirectedEdge]", "orphan"}], 
                    "]"}]}], ",", "Nothing"}], "]"}]}]}], "]"}]}], "]"}], "/@",
            "orphans"}], "]"}], "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}], "]"}]}], ";", 
      RowBox[{"newTree", "=", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{
         RowBox[{"Graph", "[", 
          RowBox[{"connectedComponentRoot", ",", 
           RowBox[{"EdgeList", "[", 
            RowBox[{"liveTree", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#1", "\[Rule]", "_"}], "&"}], ")"}], "/@", 
              "connectedComponentRoot"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"healingEdges", "=!=", 
            RowBox[{"{", "}"}]}], ",", "healingEdges", ",", 
           RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"VertexList", "[", "liveTree", "]"}], ",", 
        RowBox[{"EdgeList", "[", "newTree", "]"}], ",", 
        RowBox[{"VertexCoordinates", "\[Rule]", 
         RowBox[{"GraphEmbedding", "[", "physicalGraph", "]"}]}]}], "]"}]}]}],
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"radius", "=", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"hexData", "=", 
      RowBox[{"generateHexagonalLattice", "[", "radius", "]"}]}], "}"}]}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"physicalGraph", "=", 
   RowBox[{"hexData", "[", "\"\<Graph\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"coords", "=", 
   RowBox[{"hexData", "[", "\"\<Coordinates\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"layout", "=", 
   RowBox[{"hexData", "[", "\"\<Layout\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rootNode", "=", 
      RowBox[{"First", "[", "coords", "]"}]}], ",", 
     RowBox[{"failedNodes", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"currentTree", "=", 
      RowBox[{"buildSpanningTree", "[", 
       RowBox[{"physicalGraph", ",", 
        RowBox[{"First", "[", "coords", "]"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"updateVisualization", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "initialTree", "}"}], ",", 
       RowBox[{
        RowBox[{"initialTree", "=", 
         RowBox[{"buildSpanningTree", "[", 
          RowBox[{"physicalGraph", ",", "rootNode"}], "]"}]}], ";", 
        RowBox[{"currentTree", "=", 
         RowBox[{"healTree", "[", 
          RowBox[{"initialTree", ",", "failedNodes", ",", "physicalGraph"}], 
          "]"}]}], ";"}]}], "]"}]}], ";", 
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Pane", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<D\[AE]d\[AE]lus N2N Lattice: Self-Healing Trees\>\"", 
                 ",", "Bold", ",", "20", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], 
                "]"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<This simulation demonstrates resilience using only local \
information. Each node builds a logical tree (its Local Observer View) on the \
physical graph.\>\"", ",", "12", ",", 
                 RowBox[{"GrayLevel", "[", "0.2", "]"}]}], "]"}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"Item", "[", 
                RowBox[{
                 RowBox[{"Column", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Left-Click a cell to select a new Tree Root.\>\"", 
                    ",", "12"}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Ctrl + Left-Click a cell to simulate its \
failure/recovery.\>\"", ",", "12"}], "]"}]}], "}"}], "]"}], ",", 
                 RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], "}"}]}], 
             "}"}], ",", 
            RowBox[{"Spacings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1.5"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"ImageMargins", "\[Rule]", "10"}]}], "]"}], ",", 
        RowBox[{"Dynamic", "[", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graph", "[", 
               RowBox[{"physicalGraph", ",", 
                RowBox[{"EdgeStyle", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"GrayLevel", "[", "0.8", "]"}], ",", "Thin"}], 
                  "}"}]}], ",", 
                RowBox[{"VertexSize", "\[Rule]", "0"}]}], "]"}], ",", 
              RowBox[{"Graphics", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"node", "=", 
                    RowBox[{
                    "coords", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"pos", "=", 
                    RowBox[{
                    "layout", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"node", "\[Equal]", "rootNode"}], ",", "Orange", 
                    ",", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"failedNodes", ",", "node"}], "]"}], ",", "Black",
                     ",", "True", ",", "LightGray"}], "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"GrayLevel", "[", "0.3", "]"}], ",", "Thin"}], 
                    "}"}], "]"}], ",", 
                    RowBox[{"EventHandler", "[", 
                    RowBox[{
                    RowBox[{"RegularPolygon", "[", 
                    RowBox[{"pos", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", "6"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<MouseClicked\>\"", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"CurrentValue", "[", "\"\<ControlKey\>\"", "]"}], 
                    ",", 
                    RowBox[{"failedNodes", "=", 
                    RowBox[{"SymmetricDifference", "[", 
                    RowBox[{"failedNodes", ",", 
                    RowBox[{"{", "node", "}"}]}], "]"}]}], ",", 
                    RowBox[{"rootNode", "=", "node"}]}], "]"}], ";", 
                    RowBox[{"updateVisualization", "[", "]"}]}], ")"}]}], 
                    "}"}], ",", 
                    RowBox[{"PassEventsDown", "\[Rule]", "True"}]}], "]"}]}], 
                    "}"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"Length", "[", "coords", "]"}]}], "}"}]}], "]"}], 
               "]"}], ",", 
              RowBox[{"Graph", "[", 
               RowBox[{"currentTree", ",", 
                RowBox[{"EdgeStyle", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Darker", "[", "Red", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "}"}]}], 
                ",", 
                RowBox[{"EdgeShapeFunction", "\[Rule]", 
                 RowBox[{"GraphElementData", "[", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Arrow\>\"", ",", 
                    RowBox[{"\"\<ArrowSize\>\"", "\[Rule]", "0.02"}], ",", 
                    RowBox[{"\"\<ArrowPositions\>\"", "\[Rule]", "0.6"}]}], 
                   "}"}], "]"}]}], ",", 
                RowBox[{"VertexSize", "\[Rule]", "0"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "StringTemplate", "[", 
                 "\"\<Logical Tree rooted at `` | Failed Nodes: ``\>\"", 
                 "]"}], "[", 
                RowBox[{"rootNode", ",", 
                 RowBox[{"Length", "[", "failedNodes", "]"}]}], "]"}], ",", 
               "14", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], 
              "]"}]}], ",", 
            RowBox[{"BaseStyle", "\[Rule]", 
             RowBox[{"Antialiasing", "\[Rule]", "True"}]}]}], "]"}], ",", 
          RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{"rootNode", ",", "failedNodes", ",", "currentTree"}], 
            "}"}]}]}], "]"}]}], "}"}], ",", 
      RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}]}], "]"}]}], "Code",\

 CellChangeTimes->{{3.962071806808156*^9, 3.962071820319277*^9}},
 CellLabel->
  "In[2895]:=",ExpressionUUID->"2d313e57-2e36-4915-a463-9cc710d7cf8c"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`rootNode$$ = {-4, 
  0}, $CellContext`failedNodes$$ = {}, $CellContext`currentTree$$ = 
  Graph[CompressedData["
1:eJxdkYEJQzEIRI1mkQ7SJTpCB/jdH2psQt+BfEEeJF7Uy+P9eV1uZs+dh9+q
MjigzgPOzax/JPVJfVKf1Cf1a1NZ0Dgf0GHAo1OPalqFcT+gw4BHb20nzbqa
1loM6DDg5E6eaNfVeo/2htJhNG/ljXbVzOrpTeto5b08XW1HzRjo5u2P5L28
lCc/q8HRWA==
   "], {Null, {{1, 7}, {1, 2}, {1, 6}, {7, 14}, {7, 8}, {7, 13}, {2, 3}, {6, 
    12}, {14, 22}, {14, 15}, {14, 21}, {8, 9}, {13, 20}, {3, 4}, {12, 19}, {
    22, 31}, {22, 23}, {22, 30}, {15, 16}, {21, 29}, {9, 10}, {20, 28}, {4, 
    5}, {19, 27}, {31, 40}, {31, 32}, {31, 39}, {23, 24}, {30, 38}, {16, 
    17}, {29, 37}, {10, 11}, {28, 36}, {40, 48}, {40, 41}, {40, 47}, {32, 
    33}, {39, 46}, {24, 25}, {38, 45}, {17, 18}, {37, 44}, {48, 55}, {48, 
    49}, {48, 54}, {41, 42}, {47, 53}, {33, 34}, {46, 52}, {25, 26}, {45, 
    51}, {55, 61}, {55, 56}, {55, 60}, {49, 50}, {54, 59}, {42, 43}, {53, 
    58}, {34, 35}, {52, 57}}}, {
   VertexCoordinates -> {{4 3^Rational[1, 2], 4}, {3 3^Rational[1, 2], 5}, {
      2 3^Rational[1, 2], 6}, {3^Rational[1, 2], 7}, {0, 8}, {
      4 3^Rational[1, 2], 2}, {3 3^Rational[1, 2], 3}, {
      2 3^Rational[1, 2], 4}, {3^Rational[1, 2], 5}, {0, 
      6}, {-3^Rational[1, 2], 7}, {4 3^Rational[1, 2], 0}, {
      3 3^Rational[1, 2], 1}, {2 3^Rational[1, 2], 2}, {
      3^Rational[1, 2], 3}, {0, 
      4}, {-3^Rational[1, 2], 5}, {(-2) 3^Rational[1, 2], 6}, {
      4 3^Rational[1, 2], -2}, {3 3^Rational[1, 2], -1}, {
      2 3^Rational[1, 2], 0}, {3^Rational[1, 2], 1}, {0, 
      2}, {-3^Rational[1, 2], 3}, {(-2) 3^Rational[1, 2], 4}, {(-3) 
       3^Rational[1, 2], 5}, {4 3^Rational[1, 2], -4}, {
      3 3^Rational[1, 2], -3}, {2 3^Rational[1, 2], -2}, {
      3^Rational[1, 2], -1}, {0, 
      0}, {-3^Rational[1, 2], 1}, {(-2) 3^Rational[1, 2], 2}, {(-3) 
       3^Rational[1, 2], 3}, {(-4) 3^Rational[1, 2], 4}, {
      3 3^Rational[1, 2], -5}, {2 3^Rational[1, 2], -4}, {
      3^Rational[1, 2], -3}, {
      0, -2}, {-3^Rational[1, 2], -1}, {(-2) 3^Rational[1, 2], 0}, {(-3) 
       3^Rational[1, 2], 1}, {(-4) 3^Rational[1, 2], 2}, {
      2 3^Rational[1, 2], -6}, {3^Rational[1, 2], -5}, {
      0, -4}, {-3^Rational[1, 2], -3}, {(-2) 3^Rational[1, 2], -2}, {(-3) 
       3^Rational[1, 2], -1}, {(-4) 3^Rational[1, 2], 0}, {
      3^Rational[1, 2], -7}, {
      0, -6}, {-3^Rational[1, 2], -5}, {(-2) 3^Rational[1, 2], -4}, {(-3) 
       3^Rational[1, 2], -3}, {(-4) 3^Rational[1, 2], -2}, {
      0, -8}, {-3^Rational[1, 2], -7}, {(-2) 3^Rational[1, 2], -6}, {(-3) 
       3^Rational[1, 2], -5}, {(-4) 3^Rational[1, 2], -4}}}]}, 
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           
           StyleBox["\<\"D\[AE]d\[AE]lus N2N Lattice: Self-Healing Trees\"\>",
            
            StripOnInput->False,
            FontFamily->"Helvetica",
            FontSize->20,
            FontWeight->Bold]},
          {
           
           StyleBox["\<\"This simulation demonstrates resilience using only \
local information. Each node builds a logical tree (its Local Observer View) \
on the physical graph.\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0.2],
            FrontFaceColor->GrayLevel[0.2],
            BackFaceColor->GrayLevel[0.2],
            GraphicsColor->GrayLevel[0.2],
            FontSize->12,
            FontColor->GrayLevel[0.2]]},
          {
           ItemBox[
            TagBox[GridBox[{
               {
                
                StyleBox["\<\"Left-Click a cell to select a new Tree \
Root.\"\>",
                 StripOnInput->False,
                 FontSize->12]},
               {
                
                StyleBox["\<\"Ctrl + Left-Click a cell to simulate its \
failure/recovery.\"\>",
                 StripOnInput->False,
                 FontSize->12]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Column"],
            Alignment->Left,
            StripOnInput->False]}
         },
         AutoDelete->False,
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1.5}}}],
        "Grid"],
       ImageMargins->10]},
     {
      DynamicBox[ToBoxes[
        Show[{
          Graph[$CellContext`physicalGraph, EdgeStyle -> {
             GrayLevel[0.8], Thin}, VertexSize -> 0], 
          Graphics[
           Table[
            
            With[{$CellContext`node$ = 
              Part[$CellContext`coords, $CellContext`i], $CellContext`pos$ = 
              Part[$CellContext`layout, $CellContext`i]}, {
              Which[$CellContext`node$ == $CellContext`rootNode$$, Orange, 
               MemberQ[$CellContext`failedNodes$$, $CellContext`node$], Black,
                True, LightGray], 
              EdgeForm[{
                GrayLevel[0.3], Thin}], 
              EventHandler[
               RegularPolygon[$CellContext`pos$, {1, 0}, 6], {
               "MouseClicked" :> (If[
                   CurrentValue["ControlKey"], $CellContext`failedNodes$$ = 
                   SymmetricDifference[$CellContext`failedNodes$$, \
{$CellContext`node$}], $CellContext`rootNode$$ = $CellContext`node$]; \
$CellContext`updateVisualization[])}, PassEventsDown -> 
               True]}], {$CellContext`i, 
             Length[$CellContext`coords]}]], 
          Graph[$CellContext`currentTree$$, EdgeStyle -> {
             Darker[Red], 
             AbsoluteThickness[3]}, 
           EdgeShapeFunction -> $CellContext`GraphElementData[{
             "Arrow", "ArrowSize" -> 0.02, "ArrowPositions" -> 0.6}], 
           VertexSize -> 0]}, ImageSize -> 800, PlotLabel -> Style[
           StringTemplate[
           "Logical Tree rooted at `` | Failed Nodes: \
``"][$CellContext`rootNode$$, 
            Length[$CellContext`failedNodes$$]], 14, FontFamily -> 
           "Helvetica"], BaseStyle -> (Antialiasing -> True)], StandardForm],
       ImageSizeCache->{1000., {561., 569.}},
       TrackedSymbols:>{$CellContext`rootNode$$, $CellContext`failedNodes$$, \
$CellContext`currentTree$$}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.96207115448595*^9, {3.962071373477586*^9, 3.962071382548806*^9}, {
   3.962071496829863*^9, 3.962071506353447*^9}, {3.962071674918598*^9, 
   3.962071700716875*^9}, {3.96207180730098*^9, 3.962071823490123*^9}, {
   3.962076784101878*^9, 3.9620767996606903`*^9}, 3.962080350842785*^9, {
   3.9620805478075867`*^9, 3.962080560773356*^9}},
 CellLabel->
  "Out[2902]=",ExpressionUUID->"366486a9-fc37-41b1-a36b-0dd57c3466b8"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qe4HlWd+PHbe+/ve3PTbkgPCbkQQpEmTZDeBEFqgAgECQkl1EiTXgIB
BBJKgEAgJMDuqquuuK69666u7tp31b+Cuioqzf+5d8JhMnPOec8578z7vvfm
+3nm8cGbmXnPnDn9974zk047/8gzK8rKyi6sE/9z5KkX77106amXHtUm/s8x
Sy5cfNaSRWe8Z8myRWctWrrwtErxx76GsrIusevwf2cBAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHhb78yh9oPPaD712qZzVjUse6R+xdNN597T
euyFnXsd1TtzfqbYyQMAAAAAANhmde55RMOyhx22C9c2nntP8+kfaT/kzJ7t
FxY7+YXQcuIVTefeE9najjiv2OlSaz7jxvhdaz/krGKnq6DaDzpVWXobL3go
M2GyzRm6F+ynLPy9U2dbpiHTP653xg7dQ3v2DU4bdYlX0rUV7Qefns9pR6/a
Gz9Tfc+3I1vT4juLna7RoWfOAtGQVjz6v2Uv/N2wlT/7at3Vz4t6VKx0+rWo
vbN2bDl5pUh51X3/UfnIL8qf+n35hj9WPPFbUUJEy1CAZHe8+zhlbe3c6yib
wzP9/Y1L7lW0QkvuK0z6E2d/H6nXzsNC69Fj78z5xb44AAAAAICb5kU3mZdu
cizsPPX7+ss29MzdtdjXkaKKR/8nfuE1t3+52OlSq3j8/8VTW3/Fc8VOV0HV
X/KErsQ2L7rZ5gytxy5THt61y3sMR2XGT2o/5Mzaaz9ese5XZZvflEdVrPt1
za2fb1j+aMuJV/RNmVGaic9J11bUr3gqn9OOXuXP/DmeG7XXfaLY6Sp1fRMn
Nyx7JFxBcm+b36y/YmPPvN0Ln1rXFjWTzTYuubds02u6a8kMjC9AshvPvUf5
6U1n3WpzuGjKdOkXty/txKfB/j5Sr0VH4zQOtN869z662BcHAAAAAHCTZ+xg
y7bp9YaLH++ZvWOxryYVxA5GHcPye/kzf7b56qPH8nvb4eeUP/X7nJWl4onf
th291PAklqIk3sboih1k+vvbjjiv9Zilka13lraZcj2ENUYPPdsvrHrgh54d
zeY3hn99U9jvvbu2qE2L7zBfBbGDoiB2YI/YAQAAAABASiZ2ECxsrv9d94L9
in1BySN2MOoYlt+Hc+OyDTnP4LT8nhmY0HDROqfKUn3nV7sW7l8Kibc3umIH
fdvNUqa29X0XJ3UIa4yuMuMnVd/z7Tw7mrqrXyjM8nvAqUXtnTq7/NlXzekn
dlAUxA7sETsAAAAAAEgJxg7EVvHky91DexX7mhJG7GDUMS+/lz3/Vs5VdKfl
98bzVvvUl41/6dr90KIn3h6xgwjWGF01LH8skY6m8fyPFizNTi1q05m35Ew8
sYOiIHZgj9gBAAAAAEBKNnZQNvJo9565uxT7spJE7GDUybH8/sLfq+/Icfvs
l9879zmu7Pm3PCvLky/Hn4dTyMQ7IXYQwRqjk7bDFifW0Wx+s2vXgwqTbKcW
tfbaj+dMPLGDoiB2YI/YAQAAAABASjx2MDzLvvEzxb6sJBE7GHVyLr+Lrf3Q
xYYz2C+/+z+8Pbg1sWcQFTLxTogdRJRv+JOi9bv246ld0+hWfceXdeW5/Jk/
Nyx/rPX4SzsOPKXjgJPajl7asHRNxeO/MfUyN3y6MMl2alGr7/6WMrWilWg6
8xZRkNqOXGJ410mCiB1EOMQOtvl6TewAAAAAACDp1gMbLn68c59jt96Oaz/4
9Nbjljd+6IHKB//LPEPs2P/EYl9ZYogdjDo2y++Vj/wiM36S7gyWy+9dC/fX
nb/i8d/UrXyx+bTrmhfdXHvjZ7Qp2fxmzw7vKkriXRE7iOge2rNrt4Mjm83L
rLdBfZOmlG16Xd3XXLi2b3B6/JBM/zjTe4c3vd47dVYBUu7UolY89sv4zuXr
X8kMTChAUsOIHUTY30fqdc+83dqOXmrYdCPAmpteMh/YN3lqsS8OAAAAAOBG
tx5oWGELdOz3/sq1P9UtL1Td//3CpL8AiB2MOjbL72JrPuNG3Rksl98bl9yn
Lv/3fa9vyszwnm1HnV+28a/qZJx2XVES74rYAbx17H+ipvA8bT6w5YQVumeC
iTpVgJQ7tahlz/0tvnPdlUVofokdRNAzJqhu5T+oe6VFNxU7aQAAAACAhHnH
DoTe6XMrHvmFboWhe+f9zYdnBiZ0HHhK8+kfaVy6pu7qF2pu/1L1XV+rve4T
DRc/If7YvWA/xSH947rnv6v9kLOazr699tqPVa/6Ru31n2xY/qjYv/3g0z2+
29k3abu2wxbXX/JE7Y2fqbr336vu+4/aGz7VsHRN555HyH28YwdFuUDLFRLx
QV27vKdr14MiW9/gNO3ljBuI7y+2zITcS0mdex/dcvLKhmWP1Nz0UuXDPy97
9lWRq9V3flVkS+P5H2076nybk9izXH4vf+bPvTN2UJ7Bcvm98qEfxfepeOyX
vTPmxc/ZdM4q5Tlrbvm3oiTeVWFiB5nh7/3u1XLCivoVT4vCL6pM1QM/rF71
zbprPtaw7GFRETr2O0EUxZznKcTvDubvEa8Olt9P7p051HrccpF1tTd8uvqe
b1d99Ac1N312uGVYdFPbEef1bL/Q5iRbJX7yVNFENFy0rubWz4uzVTz+m8q1
P6u+4yt1K/+h6axbu3fax/WEydItZSubwYiaW7+gPLZp8R3mAxPJE7fYwabX
0q4glooYO0i2KCbVIDj87sC6XvfMWSB2jmyib92S8v7+9kPObFxyX901/1S1
+rtVq79Tt/JF0Qu0Hb1U2UGYidZJNOz1l20QfWjVfd8TOSDKlehVO/c+5p30
zN5JkfKps10/K6f8YwddC/ePpDM8YhR52HbEuY0XPCSax6r7/9M83Eq86Uuj
LS3wEAgAAAAAEpRP7EDoOOADuhWGpsV36o4S88SGi58of+r35tVRMcMSyZBP
hxazOUOoQmwVT/y26Zy7xfTZJuV9EyeLncs2/kV3NjE9D9a1PGIHRbxAyxWS
zj2PUM/9T79Bd+aOfd+nPMT87d/und5dc/O/mvOhbPixHr8TM+ieebsbTmXP
cvm9TL+sZ7P8nukfp3wMS+OS+5Tn7Js8VfnTA1HACp94D2nHDjL9/W2HLc75
PLSykedBNV7wkPJyam/49HClFtvmN7VnCHbY+Je6qzb7HRLwey561y4H1tzy
uRzXuPkN8UFdCw+wybe+wWlNH7yr7NlXzecUGdt2xLmW96Jvyoz4oujwuqjv
e37rL9ugTJUhWCk1n3KNuuBd/qw2/cnlSc4W9Z3yo+9N3tnh2Vd75u1mn2/e
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
Z5E5lQ/+ty4rIrEDXYmKvJchTFyCeuI8tJfuEDPX5Xeha/dDDEVabpHl9+FH
qaheT1k28nsWkcmlnHhXujtbt/LFvikzXDdRv8Q5Kx/8r/gJg4fYxw0/lEOz
pGYfO2g56SrdBboeYrnGKCq18rS1N3wq/u3W4d8pKN9/vek10W4E+7QdvVR5
woonfisOj6dz+BnyT76sLhK7HqS8tKazb698+OfxzbCkZlZ39Qu6YikKvOGt
oKKcNJ9+g+5lIh0HfCDtPCF2ENnCnXvi2Z5egzCKYgdZ/Y8IgjsYaTeGv8ih
GduUja3YQeLlLY12oxSGQAAAAACQIN00R0yfxSw+vFU8+j82z2gdmT/eHPmU
6nu+rfiIp/8Q/1Z2ZmBC7Uf+xXDymls/L/aJHNV2+Ad1aZOLS0Ljknt1p616
4IfhrwH3ztjB8CqHsljsoEQuMOuyQlKhmQKLW99xwElBGvoGp3Xsf2L1nV81
JDgSOxD7K3erXPvTnnm7x5ORGT+x+o6vKA7Z+Je+iYPx/W14LL8PH3XFxpxl
O7L8PryqqStR9/577Y0vWW3XfzL8VeeCJd6Vrq3w21pGnsBTc9sXFf+66fWe
ubtGPr1n3m6Gd03Gv5+pCwQ0LHtEd4Guh1iuMbYef6ku2fUrng4vm/fM2Vn3
E5Lwo85F66RbS69a/d2eOQu2yrc5C6rv+LJy54p1v9Z9nVv3ddy2I87V5Z6Z
9jn2QUoe/R/RjIib2Ddpijykb8pM0bgZFlHLn301M35S2nlC7CCyhWMHiWd7
eg3C6IoddO5zrKG+VK75SdPZt7Uef0njeaur7/qaYc+ysRU7SLy8pdFulMIQ
CAAAAAASlOx6oNhqbvlc/Mu09SueVu98+5d65uwc7CP+o+2wxTU3vZTzIyoe
/d+6K58Tc+fmU6+tv/zZqgd+qN1TTOjeXlzKDi9GzVD+QEBu5U++XPnQj4aj
JDkvc+vYQYlcYNZlhSTHavNzf6t8+Odlm9/MmdpI7KB32vbanTe91rh0Tft7
F3Xt8h6RG90L9m09brnuNyzxtRp7fsvvvTOHynNFxyLL71X3/2fO/LHZemfO
L3ziXSUcOzh5pThnw4Vrlf9add/3gieJicakZ95ujR96QP1tfP2l6QIBohDW
XfNPjed/tOmcVZFv0bseYrvGODChcu3PdCkvf/oPdVdtbrhonWgZdA/2Gb7A
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
x0jiozFvjEZFk+cxwUSRvNXTPTU11d3VVdU93TO73++n/1i763LOqXNq5Per
OgcAAACABFlzB0vPeH8Y+Vlw8XD0pxXHnx0+TzvvyqeiP4VrJa849nfKjzlJ
62AWyjNW1HxRppS5g+41O4w/Qf3kf8XC/kvPuDQsxrJT3l3xyB2vPLhtLDTX
9ujP2w9an7KEhZUawljoxAUdgmPOfPw/SkU97q3Jx8lahe7V27c99JOxAOAv
OvY5fPxQO+w059Y/D7dv368053wT1kou1GLsp5lPvNh+4Ksn1mK868675vdr
nqVj70PC7WNPOC9569Wlrv7Ei8Wu1agGyXGc8DH7GaNz0UefM+/aae2s4R+U
znLf96M/ZV0ruVE9rWdi7iAWwC+86DH20/LXvyN3m4SB7glTqL19KBq9n3vD
n4w31NpXhPeuaHA+jRy5g+CKF/MFUVlvrTmapZoaayVvvyYoz/gdYGw1+RzD
LfcItVYyAAAAQPNlzR2Ezx7P2fz1cG6f0OLzbi7FhR7/ZfiAek+LcgfjD9I/
8WK+I6TMHaxY/+Yw5BWcNHaQ7qDRNn891sjRI3ese1UY6mx76CcpH4kPte93
RPv+R1YMD8790JeKh130rtuTD5K1CiuPPm08rn70abHtO/v2bHvkheKvi8+5
vnSKyc8drFh/5niE8w3vKt8xKHzYJbp6d0k+S7SO5avudqw7qH2//o69Dynf
uJ4GyXGc8UU97v1uV++u8Voc+cZw5q6gp4XfZ80d9DSop/VEcgdzh/4w9lPQ
02Z94n+PVfCGUhWyt0l4W1v4no+HW8655c8KXz7zcukx/id/FS4HsOL4s4rb
z77779M1RqQA2XMHFZODWW+tOZqlmrC5trvjr4L+EH6Wnbxp8bmbZ9/1nfBE
bQ/+S7hwTI7hlnuEyh0AAAAANF+m3EH3mh3Dx1+XnnFp+QarDh6fFaT9VeNT
oLQmdzD2tPzMx3+Z7wgpcweLzr9jPKxX6Tjd26/p2mlt8ClfhXnxuZtnffKf
w7hcxz6H5StqRQvee38pgnrRJ5K3zFqFRZtuK5X54Z9VPODc675Yig9f9wfF
b5qQOxivxaf/veKOqw45ISHcGlN4Fn0s6t72wA+Xnbwp4e2VRjVI1uN079Ab
1qjaasXdO+48eu0mFD5H7iBB+p7WE8kdLH7bdeW/hpPhLxx79j5H2y4/8Zyx
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
4QV3tj3yQlCL9gOOzl2GberSF3XsfWixyovOvyP6/VbTFA3pGI1Vrc2nstY2
Y6NuUxVrMe26+qJ33DL/iidWHLeh1QUBAAAAaLGOfQ5b8N77Zz72ixmf+5/x
z5bfzL3+y8tfd+5knHG7j/y/xbMse+N7JuP4aSwdeN+cm74WfJa++bLJO0t3
T8+CSx6e0LCf+5/u1dtP3hnL5bi+5Rdo1cHHhfvO/8CTuQszFS59k6049oxi
lWfd/0/R77eOpmhUx2isam0+ZbW2GRt1m6pWi+nV1bt22X3Gll8HpV0ymX8a
AAAAAKa+Re+4ZcYzL8eiRtHPgvc92L1mh/Idlw68b/E51wefzt33zXrSqRBK
WvB7D5ViXJd9ZvLOsuy0iydG7H8964Efhg/0tu/XX2zD5Se9c5IKkO/6ll+g
lcecHu4yd+gPc5dnKlz6Jmtg7qCeQTdJGtUxGquBuYPmtHm1ZmzCLaKn1m0q
vWq1mF6jftkpFxRK+8zLnXvs3+qyAAAAALRGd0/P/EsfjUWSZ37634NP7Ms5
t/555yv2ju0+87F/K/664vizs556KoSSmpM7CM/S9vDPlp28qat3l+ivS95y
RfHX7e78m4afup7rW36BulevnnPzn87Y8puZj/1ixasHcpdqKlz6Jmtg7qCe
QTdJGtUxGquBuYPmtHm1ZpzUW0Qo+TaVXrVaTK9RP++a3y80+B3fanVBAAAA
AFpm6envHQ8gP/3Sgvd9qmPvQ4o/dex14LLTLg6DZsXIVewxVLmDNLb76F+X
Hu8f/GT5r5MaGKzn+la7QF0793Xv0FtPqabCpW+yrTt3UFR/x2isaZc7KCpv
xubkDpJvU1mV12IajfruHXee+cSLQVEXn3N9q8sCAAAA0Bqdu60bDx1v+fXy
159Xvk3HXgdud8e3wvDystMuiv7a8txBx14HrDrsxNwTiTQndzDr/v+veJbl
r317+a+TFxis8/pOXqxvGkURG2VbyB1MNdM0d1CuObmD5NtU/abRqF9+wtnF
orbv19/qsgAAAAC0xuK3XRcGjZec9cFqm3WsO6i4amRhZpubvtYzGrFfevp7
o8+0z3//Y8VvVh51anGv5a99e+GbN13ctdPa7h13XnnM6Ys2fWTe1c+ED7U2
JJRUmBzjc/8z75rP59u9ntzByiPfuPjczUHF53/gqYUX3BnUIqhmdIOOfQ4v
tdKTvyo90Pt7DxW/WXHchp5CE70t+Pfc675YmkrosV8Ufw0+XWt3y1ejqNzX
t6jiBQpKPlbCV5QfKih28NPCd39s3pVPLRh8ILj67Qcd2739mthmCZe+Y+9D
w0bo2OvAlDXtXrPDyiNPWXrG+4PeFVyOxefeFJSzc/d9Uu6eowrj2++y+9Lf
uWThhXfPu+rp4PouPuf6YPvyzerPHaQZdJFavKJYi6A15l/26UXvvDXobAm1
SNDVu0tw/CVnXTP/8scXXPLIkg1XBmM51tV7qnSMCTeB4Br1v2HRO24JGmrR
u25ffsLZ3ZHdg2MGV23+FU8Ebb7s1AuDsRM7fvuBxxSP337gqysUcqe1wVmC
X6Nx7+TcQdC7lr/u3EXn3Rw00YL33h/su+rg47rX7Dhxmyxtnq4nJIs1Y/pb
RMrLVKEdat2mQulHWcXOULGr57iswYUrXYL+kwv/c+9Dgn8HnTwo0spj4vNl
1bxLVxQcrdBt7v1u+E3NP2f1nHHV4a9fvPHGBZc8HNxzCq26/szOvr0Stz+p
sP3vPRT0tIUX3bfkrVcH9/DYNl077Rx2lYprFfWMpkhKd9q9D81Xi+RrEXxZ
/DUocMUCBJ2nuMGykzcl1BcAAABoie1u/8tSbG34H2NBs5gF7/tUKXr25H91
r9lh6ZsvG58JJz5t/jeKu8x87BdjT7G+re3BH4UbzHz8P0pnb0zu4P8ZzR38
fr7d8+UOOvY9Ivqs/njVHv35iuPPCjdbfO7maq00a/gHwQZtj/682gYrjzk9
X42icl/f0u6VLtCs+/+p9AD2sWdEj9A9Wt+Zn/3PipVtP+DoCQWrcuk79jm8
7aF/LTXmZ/+zWsQppv2gY2d/7H9VaMZnXl5y1jVpjpCjCmPb31Rx+7nXfTE2
YUv9uYM0g65ndLb5Re+8tTjjSuzT9qkfZ32kfGX/yeEVmdAg93531cGviW5Z
sWOEN4EV698c7BIv9uavd/bt2bnHfnNv/Gr5KZZsuDJ6/IUX3Vf8fuHFw+Xl
XHXYiWPR9X8Lv6zW5kEPX3TezTO2/Kb8pLPvfr5zzwMyt3mWnpAs1owpbxHp
L1O5mrepokyjrGJnqNjVc1zWJWdeXmrbG/5k8cYbJ/SZSElS3qXLdW+/ZuZo
sy86/47wy5p/zvKdsX2/yruMnv2j5QtVB3eh2R/72wrbP/3beVc93bVz3/iW
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
ta7/8dCl4Fmigm7ABB3JMjQZAACow3nL1Bc8Yu/8+fOTyaTrD00rmq3FXdpc
VVssqS3aWN761a06S2rOBs9c/CxRJxcNVXDQLdpIBR11GJoMAADUYcmCvQQX
qtnbGqRWx2esraot/nAZdLfeee+1N9+uuarmZI9sCTqO10bTwZKg43haDwAA
gGpOK2JfKnI5XtvrFaurauX/WRTF2sKshTWqCTqOFxx0mztQgo5qWg8AAIAK
RiRzGBW5HKOlQzzWLFbV7rr6dEXQOdmDCpPJJOBGXRJ0AxMzi1bQcaTg6fAA
AECPaDrgMCcnJ6PRKPJeVZE7GK0e4rHm3JXirqtPnxp09etyy0tdbj7ig248
HvuX8jAkGHR2ENgqPugAAIBe0HTAMYIL1cqvVX7Frj80DYhpOli68IlP1Qk6
J3uwVUzp+JKgGwxBR484uQgAANikvpEjBZ9cNBqNHOjRd5G1uAt7dVdZWGNT
cNBtzuagdwQdvWNoMgAAsMq5yhzPLFH2FVyLe1jQOdmDVYKOfcUH3Ww22/eb
FHSs0noAAAAsla+0k8mk69cUhsDQZOoLXpo4JujU5bJK0FFf+bMriiLyhjlm
s8m0F5a0HgAAAAtGJNMUFbnUVGbOeDyOvFWODzo7CCwIOuoLXoAVdDQlftsL
AABIkBHJNGsymaR/Cg2dCz7Eo8Ggu/XOe/Xrcl978+1GviipiZ8OL+j6qNdB
ZweB4KADAAASpOmAZp2cnIxGo8h72Jjv3kl8cmgdzgbPXHzQmQ7fO4KOvpvP
58EdggAAQFI0HdCG2WwWXJE7nU67/tDsob+1uKvU5WYu+OQiQdc7go4BMDQZ
AABy5ghlWhJ8wnNRFCpy+yK+FrfVzhQLazkzNJldBtB0sErQ5czQZAAAyJPl
Vtpjlii7DHIihpM98iTo2CW46SAm6Ex7yZPWAwAAyJDTimibilw2BS9BBAed
HYQMCTo2xQfdZDIJ+3SCLkNaDwAAIDdGJNM2FbmsGdghHls52SM3ZdAVRRF5
Vwu6xJWZEzxeVtDRtvjp8AAAQIc0HRBjOp0GzxJVkZuyYUwOrcPCWlbig242
m3X9odlJ0Am6QQoOOgAAoEOaDogRX6hWfjnbB2nKoelgjZM9MjGfz4PrzAVd
sgSdoBswJxcBAEAOlCwSKfjkovJrTafTrj80W+RTi7umfl1ueanL7alhn29P
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
nFG/wYpFidqHb6QrFx748/VqjX36QCsexhRJ5qyRk4vWDsIVdNSxGXSlPYLu
w9NeTg06tbg5ayroKqpwVxmrwdKeQXfKWCtBR4XgoDvj5CJ+Z2vQ3fXvvlA/
6Kp3EDaDTtNBtpehyaTJvxAzd0z9xl6PXgtFUdirouLM0nP3PXLpke9tPIa9
+v7Z4Hv0ga5e564Ugi5zwUFnU57bGyVqtYPuwK1SQYegI97+QbfHtJetQaeL
OXOCjnjxQafpIPNL6wGp0fLJYfUbBzx6LVncoPqxv3xeuljc2KzW2NUHeucx
rPLpy44Vgo54dYJu6w7CvkfmLoLO+gaCjnjV09MEHY07OOhqdo8KOjZtbTpo
NeiMSM780npAUrR8srBX/UbNE78reOzPXJ2Tsu48gz343Poxko/td5LkXVef
FnQs7VuoJug4Rp3FDUFH4wQdkSKDbnGIh5OyuH3ajtWuoCvfYQUdBwgOuvLv
9t0v3dv52rWr8+utr5+xfUAiNB2wUL9+45iajVXqN7JV0fK5ZvEMtqOK4/Qh
COX/fPH3EXQsVJyUteaYKtxVgi5bgo6u1J8OL+g4Upk5NSd0CzqaFR90TsrK
Wc1N+d8G3YPP7RF0K9NelkHntCLX4vrN9z/yzWt3HZldcDwlaqyaTqfV2wdN
PXotqN/IVnXL55rlM9i+faCLQtwzgo4Piw86E7rz1GzQ7Zr2IujYKj7oTIfP
k6CjQ6d2MQs6GtFC0G3ZKl0NOiOSXcvLyUWkwO45qyrqN5p99Foqv5ztg9zU
r8Vd+uAZrHYf6KIDdFG8oUSNVfP5fFeRZFNNVWsEXYaODLqa014WQbd42RR0
rNlVJCnoaIqgo3MVQXfkaWxbmZ6WoeODrk7x2zLozl64ounAtXYZmky3VH2z
aevJRW08ei1vQvUbudmrcmPpQ89gp+0grB4dec/nv/3TX/x91x+atFQE3cEH
4VZwOHOG4oPuv/z8f3X9oUlLcNCdcXJRfoKD7lLxrR/+9P/t+kOTloqga+nt
VdDlJj7o/uovHup8sdqV1KX1gA5ZymCX1fqNltoNVtnDykr9sRqb1p7Bdh6Z
+/gHh0aW1x9++ZVv/OCt1958+9Y773X96UmIoKM99cdqbBJ0NEjQ0Z4DanGX
BB0NEnS0Jz7oPveF68/92TduXn/09iv/d+dL1q50Lq0HdEXLJ7ssVncDHr2W
1G/ko+acqV3Wn8G2PYbdefoq//DzL1x86Ponn3xp9PIvyzfNxeV9kyVBR3uC
g+7+P/rOl7/zt4KOTYKO9gQH3T2f/7agYytBR3smk8kBTQdLewTdtRcXQffn
X3v2xp9/fXHZQXAtr998/yOPXm2laRQqmDNFtb+88WLMo9eC+o1MHNbyuWbL
M9hKH2j5MPbbP3zo+qVrLzz+7M+Wr5nL661f/WvX/yRIwre+/bygo3Gnjm6s
ozro7rxpCjrq+cEPfnThE59qJMTqEHSZEHQk5Wc//x8fv+/TjYRYHYIuE8f0
yy9tDbrVaS8r6ffCo3/y7eXGweoOQucL164Urre+fsbJRQTTdEC1Y85bOIz6
jcE7puVzzfZnsPKJ65HvfbB38OBza00Ha5dyNSqmw7dE0A2eoCM18UE3Ho+9
ZQxbRNBde7F+0NlBID7oTIcfvPig+3ePP//cn31jc+9gcf36u/d1vnbt6vb6
Pz/+NzeeuKeRexLq0HRAHdPpNHJbs/xas9ms6w9NixppOlja9QxW/vldV5++
+P6cqcfGr+96zdTwzkJ80JkOP2wxQVemnKCjvkZKxOsTdIMn6EjQ/8/e/T7b
Ud13vn94q1x156aKwpMcy9GRjjhYiF9GNsEObB8khBEGy0bgbRx2EDY5iseI
4LBjMM6NJxE+ZAKyzQPuuKTMzq2aujm5qcpM1VBQkR7lGTuPebT/BP8VzBIN
TdO/9uru1d/14/t+1SoXlsE64vT57O7+ru/6Otkibo+gS5580H3jWz9oKhxw
hBErWwxNhiT2PcLGcrmczWaSVyb7NxLmcOdGrvYe7MDhYxvXB6Ude3j205Yt
ajxvIjfwxOauCLqEyQfdXQ88TdDBhnDQTSYTgi5VBB2CJRx0nFyUMA9Bd/93
W5oOqCCw8sXQZMjgMw72hPdvHDp0aD6f+/5DYxQD50w1qd6DZb+eBd3l/Ws2
T5o0vCsnHHQbVPDT5XaLWq4adNmTJkEHewQdXJEPusViQdDBBkEHV4SDzvxe
/3Bu8+0Lt9nUDjjCSPmi9QACOK0IXbF/A8ONeidfugfb+HQR6tq//fvPfvnP
lg+bbFdTi6DDcMJBt1F4ZUHQwQZBh+FGHYjWHnSGfdA9xbQXrQg6DDdG00Gu
NuguPHpr/mb40rMn7SsINCDoXLQeYGyMSEZX7N/AQKPefWXye7DN42c26oKO
F2toR9BhIJM5Y5/yV3zY3CDo0B1Bh+HGfjFL0GGgUctbtQi69AgH3cnjW++/
eEPxzfDqpc/aVxA4wkjhMhfMuZ3NUa9SaEbTAfph/waGGKnlsyS7B9s8fqYl
6Mzzo/12NfO8KfwvCn6NdKxWE4IuMQQdoiA/HZ6gS0lQQUcFAU3kg26xWPj+
Q8MZ890UuH6KQfcP5zZr3w9TQWC1rMtPbnByEUZC0wH6Mc990+lU8lpl/0Yy
BJoOcuYezNyArQ06jsxFLfmgm81mfCingaBDLOSDjunwySDoEIvlcjl2J2AJ
QZcM+aB7+Ku3/PaVz7S8ImYIAqtpcXIRxkBBHEPI798wv6PvPzQckNmiljt8
9C6b7iq2q6GWzEajHEGXDIIOERE+uYigSwZBh4gIB11x1BqiJh90TU0HxUUD
Aqt2MTQZY2AjNwYSPrmI/RsJkNy5kekUdDxvoko46CaTCUEXO/mg69SxQtCh
irMo0ZV80HXqlyfoUEXQoSv5oFvbdFBcVBBY1UXrAdzi7QSGY8Qeuoripp2G
dxQRdOgqikkZBB2KCDp0JbwXt1/QMe0FRQQdupIPund2b+z6rnj10mftjzC6
9OxJ7y+3WaMuWg/gECOS4UoUr4IRCOHjXwYGHS/WkCPoYE/+VASCDk4QdLAX
1/EvBB1yBB3sme/dZDKRvGAuPHpr7zfGDEFg5evi2S3JmhcSxohkuML+DVgK
vLe9Fg3vyBB0sETQIV7yL0kIukiZzBEeO0vQwRX56fAEXbyEK02dTiuqXRxh
xMrW+y/ecG5nU/LqRZJoOoBbURzOAO+EWz4dBh3Pm1j5mA5P0MWIoEPU5INu
sVj4/kOjM4IOUZMPOqbDx0g+6GxGJNssKggss97ZvZGTizAQTQdwS37/Rqeh
kAhBjHtxS2h4V04+6JgOHx2CDrFbLpfC+8kJuugQdEiA8H5ygi46gY9Itlkc
YcRiaDKGYCsjxiB8jj37N6IjP2dqjK2MbFdTTvjkIoIuOvHuxS2xDzqzCLrE
xHWOPeQlE3RUEDTjLEq0i7fpoLSoIGheDE1Gb9yfYzzC+zcmkwlVsFgkdoQy
FQTNGLGHJvJb1Ag6jISgQxP5oBu115ig04ygQ5MEmg6KiyOMNC9aD9APpxVh
POzfQBPhm3OZoON5UyeCDk2SLKATdDoRdGiS5Iwzgk4ngg5N5Pvl33/xhrHf
IVNB0LloPUAPjEjG2Ni/gapkettr0fCuEEGHKuGD+wg6jI2gQ5X8eVYEHUaV
ZC0MA8kH3cWzW2JvkjnCSOG6/OQG5QN0QtMBxsb+DZQkMFBvLbaraZPYGVwY
jqAj6NIjPx2eoAuchqBbMe1FGfmgG/UMLgxnvjvmeyR5SYx6WlHTsm9AMIsG
hNjX+y/ecG5nU/KqRtRoOoCMvb094Vmi7N8IWdpNB0W8WFNFPujGmP0NVwg6
gi5J8kHHdPiQEXQEXZKE2wYJusAlMyJ57eIII1WLk4tgjxo3ZMjv3zC/HeWD
MCnZolZknh/tt6uZ502PXyqGWC6XwruSCLpgEXQEXcKETy4i6IKlM+ioICiR
5Lgi9JDYiGSbRQVBz2JoMmywNxuShE8uYv9GsOTnTAUSdByZq4H8aajz+dz3
Hxo15IMukCYUgk4DzqJERk/TQQlBpwFBh4yepoPSYgiChkXrAdYK5+4LejBi
D8rfrLJdTQOCDsqHXxB0GhB0IOgIuuQRdJBvOjj/4M1+mw6KiwYEDYvWA7Tz
3vIJhdi/oZz8nKkwg47nzbQRdBB+20DQQR5BB050WRF0qSPoIF8/ev/FG7y/
TC4tKghpL3PJnTy+JXmdIyI0HcAX9m9opra3vRYN7wkj6DQj6IoIuoTN53Od
JxBiJT5JNvCgY9pLwuSnwxN04ZDvlw/ktKLatXrps/ZHGF169qT3L5hlvy4/
ucHJRagV5hY1aKC8wVkzhQP1bNhvVzOL7WqxkJ8OT9AFgqCrRQUhSfJBN5vN
wr/aNSDoahF0SZIPOqbDB0LhiGSbxRCEJJe58M4/eLPk1Y4oBL5zA8mT378R
yARJ5diL24SG9yTJBx3T4UNA0DUh6JIkvPmcoAsEQdeEoEuS8OZzgi4Qakck
r10cYZTkYmgyqtidCL+Wy6Xwoffs3/BOfudGdLsTed5Mj/DJRQSdd+zFXYug
Sw+H3mtD0K1F0KWHsyi1oelg7aKCkN5iaDKKuOVGCOQPD5zP577/0Kpxy22J
hveUMGJPG45/t0TQpYSg00Z4Ly5BhxAQdNrIB907uzd6f3XcY3GEUUqL1gPk
Imr5RPJ4mayHfKko6qBju1pKCDo9qIl3xbSXZBB0evAGtSuCLhkEnR7y8xkv
PHqr9/fGQxYVhGQWrQfIRNfyiYTx9KEEve39UEFIA0GnhMkc4bP4CDqEg6DT
Q/j1KUGHcMi/TybofBEOupPHt95/8QbvL40HLo4wSmOZS/Hczqbk9Y8Axb4X
F+lh/4YGDNQbwjw/2m9XM8+bvr9e1OAcGw0IuiF4sZYA+enwBJ08gm4Igi4B
8kG3WCx8/6HVMf/OhdtIYxmRbLOoICSwLj+5wclFyqWxcwMpMc990+lU8qeA
/RvCaDpwgiNzoyYfdNENCo8dQecEQRc1+aBjOrwwgs4Jgi5qy+VSuMeQoBPG
iGQniyOMYl+cXKQZZWuESX7/hvkdff+hFZGfM5Vq0LFdLWrCW5gIOmHsxXWF
oIua8MlFBJ0wgs4Vgi5qzDZKm3zQpdR0UFr2DQhm0YAQ1GJosmZst0awhE8u
mk6nFy9efD02l375a99fQmevvvoq54K6xfNmvISDzvzoEXQyCDrnCLp4yZ9F
SdDJkA+65BvoCLp4EXQ2CDobSTYdFBdHGMW7aD3QKcmWTyRDfsTeoQgduWPH
95fQh+S31dzsKenqpeE9RgSdDYJuLT3HvDPtJUYEnQ2Cbi2CjqALGUFng6Bb
y1xFCYxItllUEGJctB4odCjdlk8kQ3j/Rox+/5joLojoKAw6KgjRIejWIuja
EXQEXfgIurUIunaH9B3SQtBFh6Bbi6Bb68Kjt3p/Pyy5GIIQ3bp4dku4oAa/
aDpA+OT3b0SHG7B2OoOOhve4EHRrEXTtCDqCLnwm6ITPfIgOQdeOoCPowic/
HT46BF275E8rql00IMS13n/xhnM7m75/ViBE4RY1RGo+n1PWbMENWAvlQcfz
ZkSEp8NHh6BrQdARdLEg6NoRdC0IOoIuFgRdO4KuxaGkRySvXVQQIlrv7N5I
0CmR/JwpJIP9G+24AWuhc4taCQ3vUSDo2hF0LQi6FUEXieVyaR5AfP/EhIug
a0HQrQi6eHByUQuCroXOpoPSWr30WfsjjC49e9L7F6x2MTRZAz1zppCGxWJB
WbMJN2BNCLoi++1qZrFdzQtOLmpB0DUx14z5iPR98YaCF2vhI+haEHRNlDcd
lBB04SPoWhB0TZQ3HZQWQxDCXwxNTp7COVNIAPs3mnAD1sRcM74v27DQ8B4+
gq4JQdeEoCsh6MJH0DUh6JoQdCUEXfgIuiYEXZPzD95M00FxcYRR+IvWg7TR
8okYsX+jCTdgtQi6Jjxvhoyga0LQ1ZpMJnRX1SLoQkbQNSHoatFG2oSgCxlB
14Sgq2WulvdfvMH7q+AAFxWEkBetBwmj5RPxYv9GLW7Aqgi6tWh4DxZBV4ug
qyLo1iLogkXQ1SLoqgi6tQi6YM3nc3MB+/4ZCg5BV2Wuk4tnt7y/Bw55cYRR
sOvykxuUD5LEXlzEi/0btbgBqyLobLBdLUwm6CYTfqjLCLoqgs4GQRcmpsPX
IuiqCDpLjLUKEEFXi6CrYkSy5aKCEOB6/8Ubzu1s+v4ZgmPs3EDs9vb2KB+U
cANWQtB1wou1ABF0VQRdCUHXCUEXIIKuiqArIeg6IegCtFgsCLoSgq6EEcmd
FkcYBbg4uSg9zJlC7Ni/UcUNWMlsNmOLWlfm+dF+u5p53vT99SZuuVyay9j3
T1JYCLoS9uL2wIu10HByUQlBV0LQ9UDQhYagKyHoSmg66LGoIIS2GJqcEuZM
IQ2cXFTCDVgRQTcER+aGg6ArIeiKCLohCLpwEHQlBF2RuTYWi4XvizRWBF04
CLoSgq6IpoMhiyOMwlm0HiSDlk9JP/vlP7OLY1Ts3yjiBixngm4+n/u+POPG
drVwEHRFBF0RbaQDEXThIOiKCLoigm4ggi4cBF0RQVd04dFbvb/1jXq1NCB8
+4nzXz0zN/9J7UBm0XqQBlo+Bbz99tvnz5//43Pf5zZsbOzfKOIGLEfQudLy
vPnIMz+/9Z7TZhF0YyPoigi6HEHnCkEXAoKuiKDLTSYTuqucsAk68xcE3agI
uiKCLmeuivdfvMH7K98EVrWCkBUOzLrz/nO3HL3jvtuP/ONZ/19n2stczCeP
b/n+qcIgNB3IOH/+/P3333/TseP3PvIsfaBjY/9GjhuwDEHnXG3Du3nGPLB1
u1kEnQCCLkfQZQg652qnvTQFHdNexjCfz82F7ftnKwgEXYagc46g847p8DmC
LsNpRc5XVkHIqwbZ+tz2H/zuxsETW/8HtQOBdfnJDYIuaubbZz6tfH9gpu/S
pUv3fPVecwNW3KiWL3ZxuGWeKXjSzHADliHoRlKqIJgHzOxJszboqCC4RdDl
CLoMJ7ONhKDziKDLEXQ5DiwaA0HnEUGXI+hyHFjkdmXjDz7pOHjklVu/8Zef
/+K3/8N/vOl3Nw5+8dixbG6y968z4fUP5zYJutjR+Cng0qVLpQ53TpIcCY2f
RdyA5ZgfOpJiw3u1w52gG4m5mM1nt++fqlAQdDmCbiSlkz0IOhkEXRFBlyPo
RkLQefHee++dOnXK909VKAi6HGcWuVpvX7iteGbRU9Nzpx67kNUOzNrYvudz
23/wxMMPUzsYdf32lc88/NVbfP9UwQH2b4ztyv7VpqoBt2EOmbuv2Wzm++cp
INyAFRF042HonjAOLCoi6IoIuvEQdMIIuiKCroigGw9BJ4ygKyLoimg9GL6y
doPqOvHtP7vzkVfMytoQsqHJ1A7GWxfPbtF0kAb2b4yt9mzwpkUfaG+0fJZw
A1ZE0I2NoJNB0JUQdEUE3dgIOhmLxYI20iKCroigGxtBJ4N++RKCrojWgyGr
qWqQrVOPXSgOPqB2MOoylzFBlxL2b4yNXRxjo+WzihuwEoJOgH3QPcW0l+4I
uiqCroSgE0DQjYqgqyLoSmazmblOfF+qiaOCMCqCroqgKzm3s0n5oOtqrxqU
agdZ1SBb1A7GWL995TPnH7zZ908SXGL/hgwqCONhL24VN2AlJugWi4XvSzV9
BN14CLoqgq6E6fAyCLrxEHRVBF0JQSeDoBsPQVdF0JWYoPvNkxveX//Gst6+
cJtN4SCrHXz7ifPFwgG1g5EWI5KTNJ1OKR/IMLdV9rs4zG2Y7683AuzcqMUN
WBVBJ4bnTecIuloEXRVBJ4agc46gq0XQVU0mE4JOBkHnHEFXi6Cr4uQiy2VZ
NcgnJld/kdqB88WI5FSxf0MYfaAOMWeqFjdgVYcOHZrP574vWEUIOofMpcvO
jSqCrhYnF0ki6BxiL24tgq4WQSeJoHOIoKtF0NViaHL76lQ1MH+z+UcuPXuS
2oHAoukgYZxcJIxdHE4wZ6oJN2C1CDphBJ0TBF0Tgq4WQSeMoHOCoGtC0NUi
6OQx7WU4c9FOJvxE1yDoatF60LR6VA2yRe1AYNF0kDz2b8jjeXMIWj5bcAPW
hKCTR9ANYYJuNpv5/rkJFEHXhKCTR9ANRBtpE4KuCUEnj6AbiKBrQtA1ofWg
tFYvfda+cHDp2ZPFwsEH1A5Elrloff/cYFzs3/CFPtB+aPlswQ1YE4LOF6a9
9EPQtSDomhB0vhB0/RB0LQi6JgSdL1QQ+lksFnRXNSHomphr5p3dG72/DQ5k
9W43yBe1g7HX+y/eQNBpwP4Nj6ggdELTQTtuwFoQdB4RdJ0QdO0Iuhaz2cxc
P74vYaUIuk4IunYEXQumw3tE0HVC0LUj6Fqc29nk5KLhVYNsUTsYdXFakR7b
29uLxcL3R6te7OKwxxa1dtyAtWA6vF8EnT2Crh1B14Kg84ugs0fQtSPoWhB0
fhF09gi6dgRdC3PlXDy75f21sK/lqmqQLWoHoy5GJKvC/g3vuA1bizlTa3ED
1o6g846gW4stamsRdO3MByVB5xdBtxZBtxZB146Ti7wj6NYi6NYi6NqpHZrs
tnDwAbWDMRdNB9ocOnRoPp/7/oAFfaBtmDO1Fjdga3FyUQgIuhYE3VoE3VoE
XQgIuhbmoYMtau0IurUIuhAw7aUFTQdrEXRraRua7LxqkC1qB+Mtmg4UYv9G
OOx3cZilZBeH/JypQxE6cseO7y+hD8lvK0EXDoKuylycBN1aBN1aBF04qCBU
EXQ2CLq1CLpwEHRVBJ0Ngm4tPa0HI1UNskXtYKRlLs6Tx7ckfyIQCPZvhIM+
0CL5ls/JZHLx4sXXY3Pp0q99fwmdmX/PwrfWBF04CLoigs4SQWeDoAsHQVdk
gm42m0n+LBB0Ysy/Z+HDRQm6cBB0JcJtpASdGPPveTqdSn5zk289ePvCbbXv
9puqBquXPtv1t6B2MNIyF6fkzwLCwf6N0HAblnldtuXT/F7md/T9h1ZE+OwC
gi40BF2GoEvb3t6eZPmAoAsNQZch6NImH3SLxcL3HxqfIOgyBF3a5IPuN09u
eH9LPNIatd0gX9QOxljv7N4ovDMKQWH/RoCU94HK78U1v535TX3/uRV59913
hfdvzGYzvsWhIegIurTJBx3T4QNE0BF0aVsul8J9JQRdgAg6gi55wn0l53Y2
0zu5SKZqkC1qB84XI5Kxvb29t7fnO4xRpnkXh/DODfZqeiE8z4KgCxNBJ/kj
wF5NecKnHxN0wVI77YW9uBoIB535Ls/nc99/aNRQW0Eg6DSQn2eR0slFklWD
bFE7cL4YkYyND4/L491pmBS+WJP/XKb1xhf5c0EJujDpDDrOiFZCOOiohgdL
YdDJ78Ul6Hwh6JAh6ATQTO2LfNAl0Hqweumz9oWDS8+edFI4+IDagetF0wFy
3GyHzNxW2e/iMLdhvr/eQYQ/lGn59Ig6EYpUPW9SONODoEMRQTce3id7RNCh
SFXQMcRND1oPui75doN8UTtwu2g6QI6PofBp6AOl5VMbXiygREPQCR/YRdB5
R9ChREPQyZ9jQ9D5RdChhKBzjgO7vJMvFUXaeuCxapAtagcOl7kIGZGMIvZv
hC/tXRzMmVKIjWqoIujcIui844gqVBF0bhF03slPhyfowpd80AkPCifovJMP
uvMP3vzbVz7j/e2x/fJeNcgWtQOH68Kjt0pe8wgf+zdikeptGE0HOu3t7QnP
EiXookDQOUHQBUI+6BiNHQWCzgmCLhDyQcd0+CgQdE4QdIEQbh82v9dvntzw
/vbYcgVSOPiA2oG7xWlFqMXknYgk1gfKnCm15PdvmN+O8kEsOk17Ieiq2KIW
iOVyKbw7kaCLSGJjrQg6zYRPLiLoIpJYBYGg00w46E4e3wr/5KJwqgbZonbg
ZDEiGU3YvxGdZCoIzJnSjMNC0S6ZoBPeokbQBYUj2tCOoOuHLpugEHRoR9D1
Q9NBUBiaXFyhVQ2yRe3AyaLpAC141RCdBHZx8OoYjNhDO4KuB96ohIagQ7s0
go7pHsoRdGiXQNDJNx0QdKGRD7oAWw/evnBb7Sv6pqrB6qXPin1t1A6GL5oO
sBafTTGK9zaMOVNY8VoVduINupX4UwZBFyCCDjYIOnuTyYT3xqEh6GCDoLNH
gSxAtB6E2W6QL2oHw9fFs1s0HaAdH0/xirEPlJZPZLgPhyWCbi2CLlgEHSzF
GHTCEyQJumBxEiksxTjtRb5fnqALk/x0+EBaDwKvGmSL2sHAZS424eoYIsX+
jajZ7+Iwy+8uDuZMIcdBB+iEoGtB0AVLfjo8QRe1iCoIBB1y8kE3m824GOJF
0LUg6IIlH3Tndjb9lg+iqBpki9rBkPXbVz5z/sGbJa9txIv9G7GLpQ+Uvbgo
kt+/wYDFqBF0tQi6wAnvzTa/l4lW339o9EfQ1SLoAkfQoROCrhZBFzj5JpSL
Z7e8vEx++8Jt9oWD7G/2+/ab2sGQxYhkdDKdTikfxC7w2zDmTKFK+EAPgi4B
BF0J2y/Dx5nw6IqgK2Evbvg4og1dEXQlBF34NAxNjqjdIF/UDnovRiSjq0OH
Ds3nc99hDAeC7QPlmQJVjNhDP8EGHcc+o4qgQz/BBp3wXlyCLgoEHfoh6DL0
R0ch7aHJMVYNskXtoPei6QA9cGeejAB3cTBnCk0oKqEfgo6if0QIOvQW2rQX
XhGjCUGH3gIMOuayoVaSrQfxVg2yRe2g36LpAL3xmZWScF6s0fKJFryFwBBB
Bd1sNpO8kgm6iBB0GCKcoFuJvzYh6CJC0GEIzUHHYYMRka8rjdp6sHrps/aF
g0vPngywcPABtYO+y1xaklcyUsL+jfSY2yr7XRzmNmyMr4E5U2jHRjUMRNAh
fJxnhYFCeLFG0KHd3t6e8NBkgi4xIQSd8Oxvgi468kH3zu6NY7w6jr3dIF/U
Dnqs91+8Qbjcj8SwfyNJHk+SpOkAa5nnvul0KnmREHRJIugQMvmgY452kgg6
hGy5XAq34JlcpXyQHoIOgRPe+XZuZ9PtyUXJVA2yRe2g6+K0Igy3vb29t7fn
O4zhnq9dHMyZgg3hHT4EXaqUBB1b1CIlfKAHQZcqgg4hY/QPnCDoELJ4hyYn
VjXIFrWDrosRyXCC/RsJE74NY84U7HGyKFwRDjr5LWoEXbw4og2uJB90NM7E
i6CDK8kHHU0H8YpxaHKShYMPqB10XDQdwCHeS6RNrA+Ut8Gwx4g9uJVq0PGS
JGoEHdwSm/bCwA7YI+jglljQyffLE3Txiqv1INWqQbaoHXRaNB3AIT7INLDf
xWFWj10czJlCV7yDhXNjVxDkD2cg6GJH0MG59IKOU2hiR9DBucSCboOaV/yi
aD1Iu2qQLWoH9stcQiePb0let0gen2UajNcHSssneuCmHWMg6BAUgg5jGDXo
hKffEnQJ4NhSjGHUI4yE3wMTdAkwQTedTiUvm06tB29fuK32pXpT1WD10me9
v9nut6gd2C9zCUlesdCA/Rt6jHEbxpwp9MOpCBgJQYdw7O3tCQ9NJuiUIOgQ
DvmgWywWvv/QkEDQIRzCJy0cveOe3zy5YfOKWEO7Qb6oHViud3ZvFN6/BCUY
UqaKwz5Q9uKiN/n9G0yHV4WgQwiWy6XwRm6CThWCDoEQ3shN0KlC0CEQYkG3
efzMwWOTk8e32k8uUlU1yBa1A5vFiGSMZ3t7e29vz3cYQ46rXRzMmcIQwgd6
EHQKOZn2Ih907KhMCQfIY2wxBh17cRPDEW0Ym5MKAkGHIWSCbvP4ma17nzH/
udF8cpHCqkG2qB3YLEYkY1STyYS3stoMrCDwmIDhGLGHsQ0POk5yxkAEHcY2
MOjk9+ISdOkh6DC26IKOsx3SM3bQZYWDbG3UDU1++8Jt9oWD7G/2/irb4aJ2
sHbRdAAB3Mbr1Ps2jDlTGI4KFGTEEnTU8ZNE0EFGLEHHW98kEXSQ0TvoGLWG
4UYNumLhIKsdbHy69UBtu0G+qB2sXTQdQAAfcJo19YGeff4ts6p9oLR8whVe
WUBM16ATHotG0CWMoIOYrkEnf6wWQZcqgg5iwg86zg9M1UhFqFLhwKwDh49t
fNx6QNUgW9QO2pe5VBiRDBns39CsdheHufu6e/raztNvmJXfjE1feOuLD5zL
Ps5k0HSQMDaqQVJL0GVZR9BhDBx+BUkEHbwwQTedTsWupQ3OhFHPPujuPjMn
6ODEGEFXLRyYdfDY9ftG859ffejZZ777lPKqQbaoHbSvC4/e6vbKBJqwfwPV
5838Hiy/E/vS4/95e+eH2RAfgdswtqglb29vT3hoMrNolSPoIE8+6JgOrxxB
B3nC/XoEHToE3WSXoIMTbne+1RYOss/lg8cm5i+2d5596My59qrBpWdPJl84
+IDaQevitCIIm06nlA9Q6gMt3oN9+Tu/+MLDr9z0wE+ur5MvmHXwthOjXpPs
KUrecrk03+VRr6ISgg6rD5837YPu0N1PjHpNskVNA+EDPQg6rCov1tYG3agv
1gg6DZgTBHnVoNt5+g2CDuNxFXRNhYMjO88dOfHj/L9u7zz7ve88rbbdIF/U
DpoWI5Ihj/0byBUrCPnD5m3f/PnND71y04MvfXQP9vE6fM/3Dh6bOL8ToxdG
CeGTiw4fvesv/uKnvv/QCEJt0N1x5q8JOjgnHHQHDt/6/T/Z9f2HRhACCTqa
/jQg6OBLafNbVj4QDjqaDpRwEnS1hYMjO8/lV+knvz7Z/cNv/KnmqkG2qB00
LZoO4AUvMZAr7uIwD5vHH391+8GXr999PfjTm8xffPoe7KaTL5jPtbzzffjN
GHOmVJHZqGaeMX//+pPCrQQdcn6DboOj6TUh6OBLNei+cJqgwygIOvhSakCY
zP7uetOBRdC5qiMQdHoMDLpq4aBYNciW+RVziX74n+dLrQfaqgbZonZQu2g6
gEd86qEouw2bvvDWnY/MP/k4u/5u7afVXRz5bVh+Ul/vp05aPlUZe6Na/oyZ
/wpBh6L8efOub/6EoMNICDr41RR023X7ch0GHQfLqELQwa886L7y2EtHTvxY
LOgoY6kyJOhsCgfZFbs1OZ//PX/48HnNhYMPqB00rItnt2g6gC988KHqJ6/+
P0cm3zefX4VPtGwXR82Ltev18cq4n04Dqmj5VGikjWrm6fLzN3+5+IyZIehQ
5SroLLOOoFNoPp+PcYdvIi5bBB3W+qtXL23vPGuC7pO3atezjqCDMwQdvPuv
/+0frwfdvc/YBN31CgJBh4729vZ6lA9KhYO6qsFLH25eern0EWyu55e/e6/3
N9UeF7WD6nr/xRskzwkEqti/gaL33nvv1KlTG9mHXfGtWvHFWulT74GfFHdx
dK0jsBdXIfPcN51O3UZZ9oz5uYNbBB3WyoPu4LGJfdBVX6wRdGgxXtBV36dl
ZrMZlxlynwq68lu1DqVSgg4t5IOO6fAoIuggYLlcmlusTjmWXZCNVYNPWp5f
Ll2W5h80//i5nc33X7zB+/tqX4vaQWn99pXPnH/w5k5XIOAcE81Q9Prrr+fb
h8yN06G7n6jWxz/sA208SbJp1Z4wyc4Ntfrt36hVbWmvDTqmwyNH0EGGub8i
6OBLKehMOn3qrdonL9b6BF319RpBp5bDk4sIOnRF0EFGp6DLCwdHdp4rX5Cf
HKtVvibN33zwthP5lXbx7Jb3V9a+FrWD0mJEMgLB/g1k8p0bRZ+/6Yu1H3k2
Z4O33IxlnaHsBtds+MlFNs+YBB1KJIMuqyOwG1wz4aDjtHlkaoPOxNHhrz49
UtCxF1cz4aDj5CJkCDpIsgy6YuHAsmpQ7IUxF1sedGpbD6gdFBcjkhGOQ4cO
zedz32EM/5o+EM2dUsMBfd36QEv3YEfvuIc7f82GbFRr72dvQq0Kq+bDma8/
bN7zPYIObg0Jus8d3CLo0E9xL24JQQfnCDp4IRl0Zpmg47gGzWyC7qOzsxoP
KWqrGpS2WZr/twuP3ur9xbWXRe2guGg6QFDYv4H2T0Pz+VWetTegD9R8qtLy
iVXfjWr9CgcEHVYWt/013e4tQdc87SUPOkrz6B10tcPfCTqsNSzoOoy12vr4
ZGZe5IKggzBzAUwmkzVB17L5zeIVLkGHkvagM9dJU9Wg6ZCillqV+X9T23pA
7SBfNB0gQHwaalbb8llyvXxgPsjqKwjZB6JVH2h290XLJ1bdN6p1amkn6FBi
Msdm0lk2Kd7+eFKCDu0IOgizeYvbHHQdpr0QdMitfZFL0MEt4aDjSECsWqfD
b975kP0hRdfnINi19elsPaB2kC9zAfT+lARGwv4NzVpaPos+Kh98WEGoK6nX
94Fevw37+BMw67+j6QC5pgNkKtfe0GdMgg6WQbeRPWw2l0rXHplL0KHEcjo8
QYfhxIIue59G0CEnH3QcIKOW+dZbFuUJOrhVG3Sbdz7UcHVZHVJULVdl8zWy
oPvNkxve32ALL2oH2Xpn98be5wECo2L/hk42TQc58yn20T1Y/QCgxpMkD9/z
vfz/hC1qyLXs38j0Owi3BYNrdeoUdBv5w2b3oMtu9TcIOhSsDbqNj09j6x9t
n8Z0eJ1kgs78zQQdqpbL5drmPoIOwxF08KvY81J/TlE22qDLZI18Hnf1Aj63
s6nt5CJqBx9wWhHCtr29vbe35zuMIc1+i1ouvwezHIJg/p587g/bhFDSsneo
90G4LQg6nYSDji1qKGk5ucjVLtwigk4ngg5+CQcdQ4V0GhR09z5jH3RZJylB
h5Is6OrHInccbZC1GKy9gLWdXETt4ANGJCN47N/QpuvxpLniPVh7H2h+95Wt
P3zkh9f+7d99/7kRluqZpWM8Y+Y4s1SbrlvUcjZBl017IeiwlnDQcXKRNuMH
3culoPvKN87/0//8V99/boSFoMOoBILupk8PiP/iA+cIOpR883sXyoWDprFo
lcJB8Ugi+6BT1XpA7YCmA0SBk4tUsZkz1eRT92DNfaBHTlzYuu/Z7O+5/es/
euxHv3rqLy5f3r/q+4+OgBQ3qo36jJkj6FRxGHRN016KQXfz1/4kC7qf/fKf
ff/REZBS0Dlvqqoi6FSxnB9Uyy7oXibosBZBh1H1aDrIVYOutoLQFHTsCYFx
Zf+quR7MVbF94s8+fUJRW9Wg5UgiS6paD6gd0HSAKLB/Qw/7OVNNyvdglQrC
9S1q9z175Gs/NOumr+0+MLtoPm3zRQUBueztrtuDcFsQdHq0HKFgiaCDK8Wg
+9zBLUd51oig00M+6O77zs8IOtQi6DAS4aAzf/GVx14i6JDJqgbZOr375u3f
/Pn2qcbCQVY1sDySyDLo9LQeKK8dmG/0yeOjf3QCTrB/Q4PeLZ8l1Xuw4i6O
T1o+73v2zod/PH3hreINGLs4kDOPA7d86YRM4SBD0GlA0CEoJujuf/g7BB3c
IugQFBN03/3jPyXo4JYJurXDuG20B90nx8sQdPhYsWqQFQ7unr52/PFXjz36
V9WqweadDw1sMWhy/sGbf/vKZ7y/2RZYymsHFx6V+/QEBmL/hgZDWj5Lau7B
Pr4Ny580j0y+X9qLy20YSvb29gbuJuqEoNOAoENo5INusVj4/kNjXAQdQiMf
dEyHTx5BBy9qCwfZuvPbf739Ye3AXDnXq06T8666DGqZoPvNkxve32wLLM21
A04rQnRms9l7773nO6oxFldb1HL192Afduplf3HH6eerOzdKiz5Q5d59993p
dOrwslyL6fBpI+gQoOVy6WTnpD2CLm0EHcI0ZNJQDwRd2sSC7sDhY/ZBx7SX
tJWqBqXCgVnmv971zZ/mH5EOr88mJ49vaTi5SG3tgBHJiBH7N9LmcOdGrnoP
Zn4l+5+O/uE0mzNls9jFodnwg0w7IejSJh90p3/wtwQd1hIOOvNTMJ/Pff+h
MRbhoNu8badlLy4VBOSEg26Dk4uSRtBBUrVqkBcOzH+adfb5j+pKj/3oVzcf
f9DtldlOw9BktbUDmg4Qqclkwv6NJI13M1+6B8tvwMzN/LV/+/ef/fKfLe/B
6APVTHijGicXpcp8W82n2BjXDEGH4Qg6OOF8L26OoMNwBB2ckA+62Wz2T//j
Xwk6ha7sX236vuf1gkLZ6Jr5vssHXfKtBzprBzQdIGrs30jSqB9wxXuwrHfP
3Ozl51/xvIm12KgGJ4SDrlhtJ+iwFkEHJ4SDrvhulqDDWgQdnJjP5+PtxSXo
kKttN2hal/evZf+UfNAl33qgs3ZA0wGixv6N9IzR8lmS34MdOHzM/F7mdyx9
Deajtsvn8lUf/57gExvVMBBBh/ARdBhosViM/b4iD7qDxyYEHXoY9a1vFUGX
HoEXswQd+lUNcvLT4dNuPVBYOzDfUOEKFOAc+zdSMl7LZ0l2D3bg8LFi00ER
uzjQYrzTZpoQdCkh6BAF+enwBF1Kwgk6wz7onmLaizLyQTebzZouVESHoMPY
BlYNMvJBd25nM+HygbbawW9f+cz5B2+WvH6AMbB/IyUCe3Fz5h7s8NG7qjs3
inixhiby+zcWi4XvPzTcIOgQC/mgYzp8Mgg6xEKgQaaIoEsJQYfxmO+OfeHA
fDebCgcZ4ZOLzO/1myc3vL/0Hmlpqx1wWhGSMZ1OKR8kQGznRs5y54/54LYv
95sPboF/V/BuuVya60fyciXo0iAfdC1b1Iq6Pm8K/LtCCIRPLiLo0iAfdF9/
9DtjBB0v1pQQDrriBCLEi6DDeJy0G5QwNNnVUlU7YEQyUsL+jTQEfuIoJ0mi
RHj/hvnpMD8jvv/QGEpyi9oGQYfBmCWKHuSDrlNrHkGHEoIOPQgHXe2kgxYE
XaTGqBpkGJrsaqmqHdB0gMRwclHsongNyy4OlDBLFJ1E8XaCoEMJQYdOohgJ
RNChhKBDJ/JNBwRd8sarGuRoPXCy9NQOaDpAkti/Ea9gD/GoxW0YclG8CkYg
TOYIn3NF0MEJgg6dCL+aIOjgBEGHTiI654qgi4JA4WDlo7ifZOuBntrBxbNb
NB0gPezfiFfgLZ+16ANFho1qsETQIV6BHyqIcMQYdIy1QkZ+OjxBFynh+dqu
go4KQphkqgY5+aB7Z/dG7+/A3S4ltYP3X7xBuKQOiGH/Roziajoo4cUazHPf
dDqVvIAJuhgRdIiafNDNZjNXFzDEEHSImnzQMR0+RgQdXBGuGmSWy6VwH/S5
nc3ETi7SUDvgtCKkreusNIQgxi1qRezigPz+DabDR4egQ+yEt1kSdDEi6BA7
4ZOLCLoYEXQY7sr+VfvvwuX9a26/C/KDJi+e3fL+Mtzh0lA7YEQyksf+jbhE
MWfKBrdhygmfXETQxUU+6Ebas03QKRfR8c6QF/Ve3CKCTjnOokQLgg7DeWk3
KGFo8pCVfO2ApgNocOjQofl8PkbAYgyJvYigD1QtRuyhRWJnxRN0ahF0aCG8
F5egw0gIOrSQD7pRD1Ug6ISFUDXIyAddSkOTk68d0HQAJdi/EYsY50zZsN/F
YRa7OJLBRjXUku8LJugwHoIOteSDTmanEC/WdCLoUCvVuhJBJyCcqkGO1oPe
K+3agfk2nTy+JXltAB6xfyN8ybR81qIPVKFUHygwBEFH0CWGoEOVyRzhwYsE
HUZlgm4ymUhe0gRdFITftRJ0abiyf9W+cHB5/5pM4WDlYzp8Mq0HadcOzLdJ
8qoA/GL/RvhinzNlg9swbRI7mgbDEXQEXXrkp8MTdIEj6Ai69MgH3ahH02A4
go6g6yHAdoMi+aD7zZMb3t+ND18J1w7e2b1ReI8Q4B37N0KW9l7cEvpA9ZDf
vzHSSFw4QdARdEmSDzqmw4eMoCPokrRcLoW7aQi6kBF0BF1XgVcNcsLdNOd2
NhM4uSjV2gEjkqHT9vb23t6erxBGu8TmTK3FLg49hKd4EHQh07BFrYig00P4
5CKCLmTagm7FtBc1Up3igR4IOoLOXixVgwxDk6kd5IsRyVCL/RthUnuIKC/W
lBDev2F+mgi6ABF0BF3amCWKlY+9uIF02xF0ShB0WClrOigi6Loy/wbsCwfm
35j3wkGGocnUDj6g6QDqBfIuBUUJz5myYW4q7LcimJsK318vOmOWKFbqS0gE
XfIIOqzUv1nlxVryCDqs1I8zI+gsxdVuUETrAbWDD2g6gHqhffhCYctnLU6S
TJvy1ykQPrqKoIMXBJ1y8ie6EHSQR9Apx9FVGYKuRbxVg5x8gSzq1oP0agfm
28GIZID9G+FQ2/JZi10cCWOjmmYEXRFBlzC1B3NhRdB9GkGXMPnp8ARdOEzm
CI/MJujikkDVICMfdOcfvPm3r3zG+ztzagfZuvDorZLffSBM7N8IB00HVdyG
pWpvb094lihBFwiCroqgS5V80C0WC99/aFxH0FURdKmSDzqmwweCoKsi6HLJ
FA4ywk3T5vf6zZMb3t+ZUzv4gNOKgIJABqspxxa1FvSBpkd+/wbT4UNA0LUg
6NKzXC6F92QSdCEg6Fow7SVJwicXEXQhIOhaKA+6xKoGOeGgO3l8K9KTi1Kq
HTAiGShi/0YIlM+ZsmG/i8OshHdxJEP45CKCLgTCW9Ri3IZNBSExnAWtEHtx
1yLoEsNZlAoRdGspDLpUqwYZhiYrrB3QdACUTCaT6N4kp4R3C5boA00MI/ZU
4d2CJYIuMQSdKsy5sETQJYagU0W+6YCgC9yV/av2f9LL+9ci/ZPKB12MrQfJ
1A5oOgBqRfqJnADmTHWl5zYsebxMVkX4fpugQyAIOlWEgy72zT8EXTIIOlUo
FXWSfNCl3W5QROuBqtrBxbNbNB0AVbF/KMeLls9+FPaBJomnDyUIun4IujQQ
dEoIz1Ik6BAUzl9VQr5fnqALlp6qQU5+Onx0rQdp1A7Mv3bhOhEQEfZvyGPO
1BDJ7+LQgOMdNCDoBmLaS+zkp8MTdPIIuoEIutjJB91sNkvpRyAKBN1AyVQQ
FFYNMvJBd25nM67yQQK1g9++8pnzD94s+V0G4sL+DXnsxR2OCkLs5PdvRDc/
N3YE3XAEXezkg47p8MIIuuEIutgJt94QdPIIuuFiD7or+1ftCweX96+lVDjI
CLfemN/rN09ueH+drqp2wIhkYK3pdEr5QIz8zo2E9+eY2yr7zQ/mNsz314tP
LJdL4ZEfBJ0kgs6h2J83lRM+uYigk8ReXIcIuqgx8iNhBJ1DkQad2naDEoYm
J1w7YEQyYMPk0vPPP/96hC798te+v4TO/uiP/kj4m5v83XUyfaDayB+duru7
6zsA+ogx6MzdNQcgu0XQRUp+xN7jjz/uOwD6IOjWIugIumARdJYIurU0dApH
FHRUDYrkg+57J2/5h3ObUaxzT5z9xrd+kK2Hv/Un2V+YX/T+hVmuC4/eStMB
YONQhA5v33746F2+v4rOhL+tryfX8lkr0l0cEN6/4funvw+CzubbOp/PfV/L
Egi6SBF0axF0NpTMsyDoIkXQrUXQ2VASdKvgp71QNahF0Bk33fVANcoOf+nb
Rybfv76+tru988Psr80v2vyzIZD8tgIQduDwrWb5/iqClnDLZy2eN6Mjv38j
OgTdWgQdQRc4gm4tgm4tgo6gCxxBtxZBt5a206jCDDrzu9gXDsxXpadwsPow
6MxV6vsHxbODxyZb9z6zefzMgcPH8l80/9X84vU1Ob812c3+2vxi6Z8yq/hP
AYAAbsDaHVLTdFASUR8oVuL7N6JD0LVTG3RMe4nLfD5nU1MLgq6d5qDr9GLN
99ernfB0+OgQdO0IuhAqCLQbrEXQHTh87KMywccFAvMrTbUD8z/lVYNs+f7y
AajDDVg7bVvUSqggxOLdd9+dTqe+f1zCRdC1I+gIuigQdO0IunYEHUEXBYKu
HUHXjqDzG3RUDSwtl8vZbOb7x8WzYi0gW0dO/Pimky9sTXaP7Dx35P7/dP0/
P1ylv63YiQAAMrgBa6FhztRaQe3iQAv2b7Qg6Fqo3aJWRNDFwnwoE3RNCLoW
BN2KoIsHJxe1IOhaEHQrf0FH1aArgq7USvBR7eCBn1xfD758fX341+YXS38b
BxYBkMcNWAs9c6bW4nkzCpxc1ISga0HQ5Qi6KBB0TQi6FrPZTPNe3CKCLgoE
XROCroXypoMi4aCjcNCP8qCjdgAgItyANdE2Z8qG9z5QtGP/RhOCrom5YAi6
EoIucARdE4KuCUFXRdAFjqBrQtA1IeiqBMZaUTUYgqDrVzvw/VUD0IgbsFq0
fLaw38VhFtvVhCnfv9GEoKtF0LXgxVrICLpaBF0tE3Tz+dz3NRsogi5kBF0t
gq4JbaRNRgo6qgZOKA+6HrUDhh0A8IIbsFq0fLaj4T1Y7N+oRdDVIujaEXTB
IuhqEXS1CLp2BF2wTNBNJhPfP0DBIehqEXTt3Abdlf2r9v9vl/evEZstlE+H
Lx1bZFM74MAiAF5wA1bFXlxLPG+GaT6fm2vY949RWAi6KoLOEkEXJqbDVxF0
VQSdJYIuTARdFUFXRdBZchJ0tBs4pznoqB0AiAU3YFXs3OiEhvfQKN+/UYug
qyLoOiHoQkPQVRF0VQRdJwRdaJbL5Ww28/1jFBaCroqg66R30FE1GI/mk4s6
1Q44sAiAL9yAlTBnqge2q4VmsVio3b9Ri6ArMZeHuUh8X6fxIeiCwslFJQRd
CXtx+2GsVVAIuhKCroSg66dTBeHP9/4/qgaj0hx0m8fPUDsAED5uwEqYM9Ub
FYSgaN6/UUXQlRB0vRF0QSHoigi6EoKuN4IuKARdEUFXMpvNaDroxybozj7/
1undN++evrbz9Bs2YUjhoDe1QVc8tmht7YADiwD4wg1YES2fw5nbMPuNGeYW
y/fXmyzN+zeqCLqiyWRCd9VAvFgLBEFXRNAV0UY6HEEXCIKuiKArIuiGawm6
rGqQL9oNRqU26A4cPmZfO/D9xQLQixuwHC2fDrX0gd77yLO33nPa/GfhXuuq
7683TWr3b1QRdDmCziGCLgQEXY6gyxF0DhF0ISDocgRdzgTdfD73fW0mohR0
xarB1le+u3H0/q88/AOqBmMz17O5qn3/YHlgWTvgwCIAHnEDlqPpwK3aXRyP
PPPzA1u3Z8v8NdvVRqV2/0YVQZcj6NxaG3TFt2oE3RhM0E0mE98/WEEg6HIE
nVsEnXdMh88RdDmCzjkTX6Veg9seeuF3No7ecOCWUtBRNRiD2qDLjy2idgAg
WNyA5cxHFV2fzpWeN81NV23tgOfNMZgHCvNY4fsHKwgEXY4Di8ZA0HlE0OUI
uhzneIyhFHRNu0EIujEQdDmCLkfQOXdl/+rZ59/aefqNu6evHX9i79g3/8as
//M/3vx//d7R39k4ettDL5hfN38DhYORqA06y9oBww4AeMQNWBFj9UZS7AOt
drhXtnBc9f31JoIO9xxBV0TQjaQ47WVt0DHtxRWCLkfQFRF0IyHovFB7lEcV
QVdE0LlyZf9qMbvOPv/WfU+9ntUOPn/8iY2j92995btZJ4L5n6gajOT1119X
G3Q2tQPfXyMA1bgBK2L/xqhajsylguDcYrHgwKIcQVdE0I2KoJPEyWxFBF0R
QTcqgk4SQVdE0BURdMOVqgbF8sEXz/7i2Df/5vgTe/kRRqd336SjaiTKg25t
7YADiwD4xQ1YCfs3RlV7ZG7LdjVuz/pR2/LZhKArIehGRdDJIOhKCLoSgm5U
BJ0ME3Sz2cz3D1NACLoSgq63pqpBXjvITi7KqwbZrxNlI1HeRpodW9RSOzB/
g++vEYBq3ICVsH9DAM+bY9Pc8lmLoCsh6AQQdGMj6EoIuhITdIvFwvd1mjiC
bmwEXQlBV2KCbm9vz/d1Gp/2wkFeOygVDqgdjISgW1s7YNgBAL+4AauazWbv
vfee74/Q9NHwPhL24lYRdFVMh5dB0I2EoKsi6KoIOhkE3UgIuiqCroqg62Rt
1aBYOyhWDagdjISgy7TXDnx/dQC04wasiv0bkuy3q3G3ZomdG1UEXRVBJ4mg
c46gqyLoqsxFMp/PfV+tWlBBcI6gqyLoanFykQ3LqkHeJ8VNmgyCLrN5/ExT
7YBhBwC84was1mQyYf+GGBreHVI+Z6oJQVeLk4skEXQOmevWfEz7/gEKDkFX
i6CTRNA5xF7cWgRdLYKu3ZX9q/aFg8v710w0mUXtQABBlzt4bNJUO+DAIgDe
cQPWhP0bwnjedEL5nKkmBF0Tgk4YQecEQVeLoGtC0Akj6Jwg6GoRdE0Iuiad
2g0u71/L/ilqBzLm8zlNB5kDh49ROwAQLG7AmrB/wwsa3oeg5bMJQdeEoPOC
oBtisVjQXVWLoGtC0HlB0A1BG2kTgq4JQVfVr2qQoXYggKAraaod+P66AIAb
sDbs3/CC7Wr90PLZgqBrQdB5QdD1Q9C1IOhaEHS+MO2lB4KuBUHXYjabmYvH
9/UbhCFVgwy1g7GZa9Vcsb5/aMJy+J7vVWsHh7/6tO+vCwC4AWvD/g2PeLHW
FU0HLQi6FiboFouF7+tXKYKuK4KuBUHXgunwHhF0XRF0LQi6FgTd6sPAsS8c
mMCpLRysqB2Mj6Crqq0dHLr7Cd9fFwBwA7bGdDqlfOBR021b0+2f76/XG7ao
tSPo2hF0fhF0lgi6dgRdO4LOLyoIlgi6dgRdu8lkojnohrcb5KgdjIqgq7V5
/Ay1AwBh4gas3aFDh+bzue9PV+04Mnct5ky1I+jaEXQhIOjWYotaO4JuLU4u
8o6gW4uga0fQraUz6BxWDTLUDkZF0NXaPH7mo5EHH9cOzH81v+j76wIAbsDW
4+SiELBdrQVzptYi6NYi6EJA0LUg6NYi6NYi6EJA0LUw1+dkMvH9gxI0gm4t
bUHnvGqQoXYwHpoOmlyvHew8R+0A0OBQbA4fvevw9u2+v4o+JL+tOvdvBIjn
zSovc6Z8//R3RtDZIOgCQdDVMten5I/DBkEnSPLbStAFgqCrRdCtRdDZ0BN0
IxUOVtQOxkTQNTn8pW9vn7iwfeon219/+aYHf3r9L3Z+aH7R99fVgfB3FoiR
+UkxMfh6bC5d+rXvL6GPxx9/XPKbq23/RuBoeC96Xbblk6CTRNBpRtAVvU7Q
WYg06HZ3dyW/uQRdUJj2UrRYLCS7qwg6Sc8//7zkN1dD0I1XNchQOxiJcBtp
XEE3/dFrD8wu3n7m53ec+Wvzn2aZ/2p+0ffXZUs46IBInTp16r333vMdxlrI
t/Tq2b8Ri04v1lK9zZNv+SToJJmgm06nkt9fgi40VBBWBF3q5INuNpvx/Q0K
Qbci6FInH3QJT4cfu2qQoXYwBoKuXdaOt/P0G3dPXzPL/EVcdfPlcil/HgIQ
l+3t7cVi4fuHVZe9vT3h/Rt8i0NDw/vr4ntxze/o+w+ti3zQmd/R9x8an0LQ
EXTJE95uTdAFiKAj6JInvN06yaC7sn/VPigu718bEhTUDsZA0LXLLu/Tu29G
WjtYMZ4MWIe9mvLky5oJ79+ImtrnTfmdGwSdF8KHgk4mE4IuQASdGDaleyEc
dBoO9IgRQScmrr24ySDohpBpN8hRO3COoFsr+wQ8+/xbWe3A/EV0tYOVj3kW
QCx40+KLfFmTd6fBUtjwzgOIEgQdcgqDbj6fcxi+BgQdcgqDTngvLkHnC0HX
j3DVIEPtwDn5oIvu1Ii8ep7VDvJCue+vqxtaD4Ba0XVCJYbXp8ip2q4mP2eK
oPOIoEORfdDF/pArH3Tz+dz3H1ovgg5FeioIvE9WhaDrxEvVIEPtwC2mVdrI
7/BP776ZHVgUY+1gResBUCe6TqjEcL+NEg0VBFo+tSHoUKIk6IRPJiTo/CLo
UKIh6Fbi71gIOr94g2rpyv5V+8LB5f1rbgsHK2oHrnEEq41i7cCseGsH8tPh
gcCxFzcE7N9AVdrPm8yZUoiTW1BF0DlE0IVAfjo8QRc+gs4hgi4E8kEX3ckt
HtsNctQOHDJXIP3yNoofdtmwg0hrByvxoAMCx86NEMiXNSPdv6FQkg3vNB3o
JB90TIyNBUHnBEEXAvmgM78d5YMoEHROEHQhWC6Xwl11EQVdCFWDDLUDVwg6
e7WF8khrBytOLgI+xm6lcAjXss3vtbe35/sPDSvpbVdjzpRaBB2aEHQDxbtF
LT0MuUALgm7g1U7QBYIj2qrCqRpkqB24QtDZS6x2wNBkIBP+R7AqnKGHFsm8
WOOUVOU4og0tkgk6+S1qBF1QCDq0IOh6o50wKARdzvyQ2hcOzA+1QOFgRe3A
EZoOOkmsdrCi9QCIPJSSxP4NrNV0E9h0a+r7661BjUw5gg5rEXRdhfxGRSeC
DmslUEFgjJFyBF0mtHaDHLUDJ+T75aMOuvRqB7QeQLmoO6ESxtsG2Ij3yFzm
TGFF0MFOvEEnf2QNQRcggg42CDpLnM0VJuVBF2zVIEPtYDgKZF2lVztYiRfK
gaDQdBAmPp5gKcbtarR8IkPQwRJBZ4OgCxMH9MFSpEEnPCqXoAuT/HT4QIIu
8KpBhtrBcMLVsQSCLsnagXzQAYFgi1rI6P+FvbieN5kzhdze3p7w0GSCLl4E
XQuCLmTyQbdYLHz/odETQdeCoAuZfNCZ39HvHzmKwsGK2sFgBF0PSdYOVuKH
JwCBYM5UyOTLmlwPsYui4Z29uChaLpfCWxZNrlI+iBpBV4ugC5zwlkWCLnZR
THsh6FCiZ5ZZLFWDDLWDIQi6flKtHawYmgx92H4ZPuEDPULYv4Hh7Lereblp
ZM4USjgqGT0EXkGQDzr2mQeOI9rQA0FXlMZe3LRpCLq4qgYZagdDEHT9JFw7
YGgyVOHlSSyUT55CP8E2vGt4pkAPBB16CDnoON8eVQQdegg26OT34hJ0UUg4
6K7sX7X/Yby8fy2cN/PUDnqTD7pkDoJIuHawovUAmqTRCaUB71rRW4DPm8yZ
Qi2CDr0RdB4PbUAnBB16I+iohcUi1aCLsd0gR+2gNwZQ9pZ27YDWAyiRTCeU
EtycY4hwGt5p+UQLgg5DhBN0wjPUCLq4EHQYIpygkz9skKCLSGKvW6OuGmSo
HfTDqapDpF07WIlPhwe8YC9uXFLdvwExIWxXY84U2nHMC4bzPu2FoEM7E3TT
6VTyCiHo0kPQIXDyQTfSMS8JVA0y1A56MFeUua4kL+PEgi752sFyuRS+QgBh
7NyIkXBZk6mLSfJbQaDpAGsRdBiOoEPghDtTzO9lotX3HxqOEXQInPDON+dB
d2X/qn3h4PL+tZALBytqB70QdAMlXztYcXIRUscGpBjJlzWn0yl97klqunts
et508psyZwqWhA/0IOhS5eXFGntxYYmJGHCCoEPI4j2iLZl2gxy1g64IuuE0
1A5WDE1Gujj4NF4cuAeHhI/MTezgU4yHI9rgkHDQCW9RI+jiRdDBoeSDjg7B
SMUYdOlVDTLUDrqi6WA4JbUDWg+QpCRDSZV4928gQGLb1Sh7oROCDg6lGnQb
vA2OHEEHhySDjslEsBdR0KVaNchQO+hEvukgyaBTUjtY0XqAFKXXCaUNrybg
3NjPm8yZQlcEHZwTeLEm/OBA0MWOoINz6QUdx23FLoqgMz8I9oUD84MTXeFg
Re2go4hqXiHTUzuQr6oDo6LpIA18lmEM4zW80/KJHgg6jGG8aS8EHXrgND+M
YbygEx7zTdClYW9vT3hocqegS7vdIEftwJ58v3yqQaendrASDzpgVGxRSwPN
whiP8woCc6bQjwm66XQqeeUwXFsPgg6BkA86psPrQdAhEMvlUrIB+eCxiWXQ
KakaZKgdWCLoHFJVO1hxchFSwZyplMjv3zC/o+8/NIS4bXhnLy56E97fSNCp
QtAhEML7Gwk6VQg6BEIs6A4em2zd+8zawWeqqgYZageWCDqHtNUOGJqMNLB1
PDHCZU02qmnj5HmTOVMYiHOVMapIg44emcRwRBtGFWnQJbwXVyeBoMsKB2Yd
OHysJegUFg5W1A7sEHRuaasdrGg9QPx4H5KeKCZPIXYDG955H4KBCDoIGBh0
HFmPgQg6CBgYdMJ7cQm69IwddHnhwCzz1xt1QaezapChdmBDPujSPhhEYe2A
1gNELe1OKM14MQsZ9tvViregzJmCEwQdZHR6seYx6NrPYUCkCDrI6FdBoLwF
J8YLumLhIK8dFINOc9UgQ+1gLWZKOqewdrCi9QAxS7sTSjPu5CGmqeH97PNv
mVW9Jfin//mvtHzCCYIOYnoEneT8xw2CLl0EHcS0B10p67IjjITfhBB0qRrp
3WypcGDW5vEz2f9kLt0r+1ftN0Fd3r+W6rt0agdrcVCqczprB+bbOp1OJa8l
wAn24qaNoxIgqfZ58/Tum3dPX9t5+g2z8kfOB2YXD3/p2wcOH5O5Mgm6tBF0
kETQwYu9vT3hoclpH5WAdgQdvHAedNXCQbay//Xm4w+efOpvNLcb5KgdtDMf
iPTLO6ezdrASv5wAJ9i5kTb5siYjGlFteM8eNvM1mf3dnd94aWuym3cNj42g
S5t80DEdHgQdhC2XS+E2FoIOBB3kOdzd3VQ4yC7X7C++/OiLj/3oV5qrBhlq
By0YkTwStbWDFScXITZsntRAuKxpfq+9vT3ff2h4Vt2uVnzYvP3Mz7dP/eSm
Bz5cJ184dPcTn7/pi6Nek2yeTJ7wgR4EHVaBBZ2SLWrKMT4DXtgH3dZkl6DD
QK6CrqlwcGTnOXO5mv/Mf+Urj72kuWqQoXbQQnhEsp6g01w7YGgy4sJZpkpI
ljUPHL71/oe/Q00Kq8qLtexh8/jjr37h9F/e9OBLHz1pPvCpd2sHDh9z3vZO
0CkhHHS3fOkEQYdVQ9B9+Tu/uOUbP7vpwZcJOrhF0MGLQIKO7mYlhgddfeFg
spsVDj5VO5jsfuGB56utB+aC11M4WFE7aGYy5+uPTs0HopMQs6Gk6WClu3aw
ovUA8dATSpApa5qP1N8/Nsk+WHmJgVzxXtQ8bN76yF9dv2l/8KcfrpoKQjbC
zCwnT50a5kwhQ9DBo+KLtULQvdwYdJNdh0FHG6keBB08KgXd7d/8sOmAoINr
A4OutnCQVw3ydb2U8LUfbk3OV1sPVFUNMtQOmmRNB+YD8fM3f/lzB7cG5tha
qoJOee2A1gNEQU8nFDJjlzXN52mxHK/qUw82siNzT//gb7dP/NlHN+3mMbOh
glDsI86fOntclgSdNgQd/MqC7rEf/Zqgw3gIOvjlK+g4QUuV3kFXLRxUqwZZ
cf/I/X+2dd+z2d+zvfNs1nqgsGqQoXZQq/h293MHtz5/85fHriCoqtcrrx0Y
5nNN8jgsoAeaDrQZr6xZ3JxWpOqDDzb+6X/8610PPF2+h//oebOm4T0bvVdc
5pHz4PWLzfapk6DTxgTdZDLKrEaCDpacBF2n12sEnTbjTYcn6GDJBN1XvnGe
oMN4+gVdqXDQVDXYfuiV7EItXplfP7ur+RqjdlCrWsPKKggjHWGkLeioHYx3
Rwc4wRY1nfb29tyWD5qeMTNsVEPJxy2fx8zTYvlmvrXhvXbS2doWeIJOJ/mg
YxI3itqD7sP3Fd2Crr1gStDpJB90TIdHEUEHAeb+qlPQrS8cFKoGxZOLzN9s
/lnlQUftoKplRHL7h2Y/CoOO2sGKk4sQNuZM6eSwrGn5cWl+O8oHyJjMOXXq
VH5tmFv0ysOmVcO7fR1B284NZJbLpfmMcxV0NjuLCDrkSkFnQqnu3UXbtBeC
DpZcnVxE0KErgg5i7IOuWDiorRp8tCptCOZvzq83zVPSqB2UlIKu5QPU1RFG
CoOO2kGGockIE7vBNXNS1iwdhNt+sWnev4Gi2p0bm3c+VLm3/7iCUHdv3/68
WWyBJ+g0cxh0No8DHMKMXOeg614qLQUdbS9qCQfdBicX4WMyQZfXERTuxUXO
MujywkHTIUW1hYPidWj+H5QHHbWDkpamgyJXQxB0Bh21gwytBwgQrzgwpKzZ
ozuPV7hYtX4gHrztxJETP64+b1Z7itsb3ovL3P+rvfNHhqCDvJZxG01BZ382
OEGHKoIO8lr24hJ0GMPaoMsKB0d2nqu7/GoOKfqoalC5/LLygdqgo3ZQZNN0
UDR8CILOg0GoHeRoPUBoFHZCoaRfWXPImX7c86P90/D6Pf/kfO0Nf9chCGYd
OHyMoANBB3mSQWf+3zQfrYAMQQd5wkGn9kUucu1BlxcOLKsG7W0vWauLzqCj
dlA0n89tmg5Kso/XHg0IaoOO2kGuZQMSIE9nJxSqOpU1LQ/CbaH20xAZm5bP
5jv/Dg3v2X4hgg6ZrkFnfxobQYcqm5GOToJu8/gZgg65Tu83Pndwi6DDEAQd
vGiaDt8wa+OlltEGNodlHb3jHoVBR+0gN/AAma5HGGk+GITaQVFT0AHy2IuL
jH1Zs9NBuC107t/AqkvL5ydHldo3vD/wk3y7Wn5OKUGHjP10+OGFgwxBp5bT
oKuZ9kLQoUmnoBu4FSSj81wFrPoFXa8KAkGHktqgO3jbierH5ccdLm2jDZo6
Dg5eb8j6aGiywunw1A4yXU8rqtVpCILmoKN2ULRcLs0t1sBrDxiOnRsoWlvW
HNLSXsU8R7Us50xl8ofNpob3piEI2f60DYIOnyYfdEyH18lp0DVOeyHoUGvt
VnCCDk64DbqmIQgEHWoVt4Kbq6umcNA82qClcHD9/+pYzYY6hUFH7SDTKeja
2QxBUB501A5KGJqMELAfEkUtZU23z5g5hfs30GPnxicPm80VhNJ2teyJIDuh
lP2QKGk6uYiggyvyQad5ixpqCQcdszYUIujgXRZ0H87U2LXaXNTQbpDVC/IW
gybajmijdrBy1HRQkjX9NTUgKA86agdVDE2GX9o++2CjWtYcfhBuC81H+anV
b87Upx421zW8Fx8Kbv7an7z66//u+w+NsAgH3QaVen36bVEj6OBQ7UY1gg4O
yQfd//23f+/7D42wmM8+c2FUCwc2VYPSkUQEXRW1g5XTpoOipiOMlDcdrKgd
1KH1AB4RSmhSLGu6Ogi3BTUsVYZ88JUeNhsb3k99cgz4kcn37/vOz7L7DVV3
uViLoMN4hIPOrK889hJBh6pS0I3RblBE0KliPyitqhx0TdNe6oJO23tLNLmy
fzW7Hv7g7M9sDilaeyQRQVdF7WCMpoOivIKQ/4qq4lQtage1aD2AL8o7odAi
e+kh8IyZ4yNSieF3X9WHzeqLteuPmeYXzTPCfc/ecfr56QtvFe869Nzroh1B
h5GYoBs41Kxb0E12CTo0IegwnoHvMboG3e1f/9FjP/oVQYfVhy+088LB2eff
Ov74q184/XJj1eDEj80lZHkkEUFXQu1A5oXt5w5uZR/TqipTTagd1KqdDg+M
jaYDtPvB+edknjEzfEoq4aTls+Zh88PnzfwBodAF/8NTT/+Cew80+clP/+rw
0buchJgNgk4JgaC7/kotD7qv7RJ0aLH3d7/6wm1fchJiNgg6JUYNuryCYBN0
et5hIpNXDbLCwd3T18y6/Vv/efvrNVWDzTsfclUvKDJBt1gsfP+bkKC8dmC+
y5IHxRzevv3SL3/t+w/tH7WDJnt7e5xcBGE0HaCdfFlTz/4NtRy2fNY/bH54
ZG6xdlDai1tal/ev+v5XAs/kg46x3ckj6BAa+aBjOnzyCDp4UawaFAsHZn35
O7+45Rt/mR9PlDUaOLlEmygJOs21g7FPK6riHV2G2kELTi6CJD2FcgwhXNY0
v5f5HX3/oTEit3Ommh42za9vHj+TTTp4YHax6TGT7WrICG8oIuiSJxN0JuUI
OtgTHrFH0CWPoIOwUtWgVDgw6/Tumyee/rubd/5T9izg6uJsYX4E5vO5738x
o9NcOxhpRHLLFcXBIBlqBy0YmgxJbPCGJeGyppL9GzqNsXOj9mEza0w2//mN
P36l/TGT501khINuMpkQdKmSD7qHZz9t2YtL0CEnHHScXJQw+aC764GnCTrN
mgoHO0+/cXr3TfPX+a9/5bGXZAoHGQ1Bp7Z2QNOBR9QO2tF6ABm8tYA9+bIm
ha1UjfQZV33YzH49u5m/vH/NsnzwFA3vihF0cGU+n4+xRa0adNkrNYIO9gg6
uDLSXtz2oGt6gdlUQfD9LwluVKsG2Tq9+2bdB9w1gs45tbUD4aYDDgYponbQ
jtYDCKATCl2xUQ3DjXosTOlhc6MSdLW3H00r+Tth1CLoMNyod/K1QVc8LYEK
AtYi6DAcQQcZTVWDhu/1tfwfJOjc0lk7MN/TyUSugWVDQRGqE2oHa420WwnI
0QmFrti/gYEEWj7zh83N42c26oLO3N/aVxBoeFeIoMNAkkGXvVIj6NAVL0Mw
kMmc2Ww26jVD0OHK/lX7b/Hl/Wulb7H8dPi0g05n7UC4AsU7uhJqB2vJBx1U
oekA/QiXNZPfv6GNTMtn9rC5efxMS9DxvIkW8tPhCbqUEHSIgnzQcQhDSgg6
jK13u0GRfNAlPB1eYe2AEcneUTuwMerBDlCOgib6kS9rzmYzrtU0SM6ZMg+b
5klzbdDR8I5a8kHHdPhkEHSIxXK5HHvfeAlBlwyCDqNyUjXICe8bTzjotNUO
GJEcAmoHlhiajDGwxRFDCJc1096/oUqYc6bYroZawicXEXTJEA66w0fvstyi
xrQXVAkHXem8esSLoMNI3FYNMpxF6Yq22gFNByGgdmCJockYQ6ofZxAjXNac
TCZUu2IX+NHKVBBQxYg9dCW/RY2gw0AEHbqSD7pOPcgEXaSu7F+1Lxxc3r9m
WTjIEHROqKod0HQQCGoH9mg9gFuEEoZj/wa6imLOFM+bKCLo0FUUhXWCDkUE
HbqKYvYZQReXMdoNigg6J1TVDuT75ZOsNw1H7cAerQdwiE4ouML+DdiLq+WT
I3ORI+hgT/hAP4IOrhB0sCd/zhVBl7axqwa5KGpegdNTO+BAv3BQO+hEeDo8
EkbTAVxh/wYsxdjyyXY1ZAI/awvhIOgQL/np8ARdpAg6OCRWNcjIB12ns7ai
oKR2YL5r5nsneanwjq4FtYNO5IMOSaLpAG4JlzWT3L+hQVxNB0U8b2LlI+hs
ZnwjNAQdoiYfdEyHjxFBByfMv177woH5dgwvHGSE2wPTCzoltYN4gy5J1A66
4uQiDJde7Rt+yZc1zW9H+SAuMW5RK2m6T27YFnXV4W+NECyXS+HdRwRddLQF
HY9sSRI+uYigi04aQUcFwTvhdoOSKMYSBUtD7SCBoEsMtYMeGJqMIdizjTEI
lzXT27+RvGTmTHFkrmaceop28kE3UnMKQacZZ1GiXTJ7cQk6X/xWDTIE3RAa
agfJBF0yqB30QOsBeiOUMB5G7KFJYm9c2a6mGUGHJokNxSDoNCPo0ISgG++L
0SCEqkGOoOst+dqBfNMBB4OsRe2gH1oP0A+dUBgP+zdQK9U5Uzxv6kTQoYnw
zTlBh/EQdGiS5EkvBJ2MoAoHK4JugORrB9SVAkTtoB/5ij8SQNMBxsbnLKrS
bvmk4V0hgg5VBB1Bl5j5fJ7GSYNwSHjCrHDQMe1lPKFVDXLy0+HTCLq0awfy
/fK8o7NB7aA34aBDAmg6wNgSa2TGcErmTNlvV0vmvloz+enwBF3glAQdFQRV
5IOOExsCR9ARdD0EWzXIyAddGtPhE64dKAm6GFE76G25XAqfAoGoUdCEDPn9
GyNNioQTae/FLaLhXRX5oGM6fMgIOoIuScKbzAm6wBF0BF0nV/av2v9rvLx/
zde/RuFN5mkEXcK1Az1BFx1qB0MwNBn22LUIGfJlzTT2byRJ4Zwpnjf1ED65
iKALlsItagSdHkkebo8eCDqCrpPA2w1KOIuyq1RrBwqDLiLUDgZiaDJscCsO
SfKHBM7nc99/aNRQeytOw7sGjNhDRu2x8ASdBgQdMsJ7ccNpKybouoqrapAh
6LpKtXagNuiiQO1gIFoPsBadUJCn9qUxcsrnTLFdTQOCDtTKmfaSPIIOvFkl
6GzEWDXIEXSdJFk7YG5j4KgdDEfrAdrRCQV5PGUoR8tnhgpC2gg65UzmCJ/R
R9BBHkEH4bcNBF10ruxftS8cXN6/FlrhYMV7446SrB1wRl/gqB0MJz8dHhEJ
bS8u9GD/hmbMmSpqusFuet70/fWiA7Xn1WBF0H0aL9YSJj8dnqALB0FXRNBV
Rd1uUCQfdPGeV5Ne7cB8LzT3y0eB2oETwkGHiIS5cwMayJc1o96/kRKaDmpx
ZG6S5IPO+0BwZAi6WgRdkuSDjunwgSDoahF0mWSqBpnlcincSxhv0CVWOyDo
okDtwBVOLkJV1OVsJEB+/4b5HX3/ocEWtUZsV0uS8FYlgi4QBF0Tgi5JwicX
EXSBIOiaKA+6xKoGOWYYWUqsdkDQRYHagSsMTUYV27DhnXBZM979G8ngvNC1
lD9vJokjUrWR36IWXb8JQZcezqLUhqBbS2fQpVo4yBB0NlKqHdB0EAtqBw7R
eoAiQgkhYMSeNrxEtUTDe0oIOm14t2CJaS8pIei0YaCPJT1Bl3bVIEPQ2Uip
diDcdBBv0HlH7cAhWg+QoxMK4eAdix7MmeqKCkIyCDo95M80IOgQCIJODw5v
6SrtoNNQNcgRdGslUzugVBQRagduCW8PQLBoOkA4+FBWgpbPfnQ2vKeHoFOC
oOuHoEsDxxIqYTJHeGgsQRcsVVWDjPx0+OiCLpnagXCdKI2g84XagVvyQYcA
JbBFDYmh61kD5kwNkeTzpjby0+EJOnkE3RAEXQLkg26xWPj+Q6tD0A2RUtAp
LBxk5IMurunwadQOCLq4UDtwTvjICASIgiZCI1/WjG7aWuzYi+tE2g3vyZMP
OqbDCyPonCDoorZcLoV3pBN0wgg6J2IPOrVVg5zwjvS4gi6B2gFBFx1qB2Ng
aLJmbEREmITLmtHt34gdc6Ycst+uFtddugYcEJ02+aBLeMc1QRcvgi5t7MV1
KMYKAlWDDGdRtkigdkDQRYfawRgYmqwWd9cImXBZczKZXLx48fXYXPrlr31/
CZ29+uqr3F27lVLDuzbyI/YIOhkm6Djp3S2CLl4EnQ2CzgZBF07QXdm/av+l
Xt6/lnwmE3RNXv75f3lgdjFbp57+Rf7X5td9f2lW5IOOIxGGo3YwEloPdKIT
CiGTL2seitCRO3Z8fwl9SH5b9QRdRM+byBF0Ngi6tcxTbcLdVUUEXYwIOhsE
3Vppt5EWhR90tBtUEXTG4aN33XTXA9VfPDL5/kfr/h/lf21+vfR3Vv/ZQEh+
W/UE3aioHYyE1gOFDtEJheBR1lzr94+J7oKIjsKgi7HhXTmCbi2Crh1BR9CF
j6Bbi6BrR9AFEnRUDVrM53Ph98wB2rr3GbM2j585cPhY9ivmL7JfNOvIznP5
Xxf/hoPHJtk/5e8LD8IhDgZxhNrBeISnw8M7PXtxES/KmmvxpNlOZ9CFv10N
RSbohFuho0PQtSPoCLrwyU+Hjw5B105n0K1CmvZC1WAtgs7YPH4mrw5kFYSs
LlBbOzD/U/Hvz6sJaqkNOueoHYyHoFNF4c4NRIqyZjueNFsoDzperEWEoGtH
0LUg6Ai6WBB07Qi6FgSd36Az/4f2hQPzBegsHGQWi4XyoCtWCj5ak92bTr5w
vWow2T1y8s+u/+fOc9l/Lf2dymsHyoPOLWoHo2KLrx7Jz5lCMihrtuNJswVz
plYfPu7ZbxLjhsqX5XJpLlffPzHhIuhasEVtFcCLNVji5KIWBF0Lgm7lL+ho
N+hKedAVTyj6pHbwwE+ytf3QK/lfV2sHvr92zwg6h6gdjE150CnB+BXEhbJm
C540mxB0RWEemYsigq4FQdeEoCsi6MJH0LUg6JqYa2axWPi+eEMhGXRUDfoh
6PrVDpQPO6DpwC1qB2Mj6JJHKCFGlDWb8KRZizlTVezLDR9B14Sga0IbaQlB
Fz6CrglB14SgKxEIOqoGAykPuvKxRXa1A+UHFhF0blE7EKA86JJHJxRiRFmz
CU+atQi6JrxYCxlB14Sgq0XQNSHoQkbQNSHoak0mE7qrao0XdBQOhlMedNQO
uqKN1DlqBwLMRWs+o33/9GAUNB0gXpQ1a/GkWUXQrcXJHsEi6GoRdFUE3VoE
XbDm87m5gH3/DAWHoKsi6NZyO9aKqoFDyqfDd60daD6wiKAbA7UDGcqDLmFs
UUO8KGvW4kmziqCzxIu1ADEdvhZBV0XQWSLoAkTQ1SLoqgg6S8ODjqqBc8qD
bvP4GWoHlgi6MVA7kLFcLmezme+fITjGnCnEjrJmFU+aJezc6ISTPQJkPqkJ
uhKCroSg64SgCxBBV0XQlRB0nfQOuiv7V+3/wcv710hIe5pPLvrUsUUWtQO1
BxYRdCOhdiBGc9ClivErSAAHepTwpFlC0PXAi7XQEHQlBF3JbDZji1pXBF1o
CLoSgq6Evbg9dA26N//hHdoNRqU26LrWDnx/vd4QdCOhdiBJbdAliTlTSANl
zRKeNIuYMzUEJ3uEg6ArIeiKCLohCLpwEHQlBF0RQTeETdCd3n3z7ulrZpm/
oGowHs1BZ187UHtgEQeDjIfagSTNQZcYOqEkmURiu9qoKGsW8aSZI+icsN+u
ZhZBNx6Croigy5mgm8/nvi/P6BF0gSDoigi6ItpIh2uqIORVA5vaAVWD4dQG
3SetB9QOGhB046F2IExt0CWGTigBb7/99vnz5//43PeL0cTz5hgoaxbxpJkj
6FxpaXh/5Jmf33rPabMIurERdEUEXY6gc8Um6MxfEHSjIuiKCLocQedKKehO
776ZFw5ue+iFjaP3f/7WE/c+8mxT1YDCgRMm6CYTjT/d9rUDncMOOBhkVFn0
5Xd0WdBROxiP8unwaWAvrozz58/ff//9Nx07XroBI6DGQFkzx5NmhqBzrvbF
mrn1OrB1u1nVoOPFmnPz+dxc2L5/toJA0GUIOucIOu/29vYoH2QIugxB51wW
dKV2g42j9//OxtHfO3Rbbe2AqoFbOoPuwOFjlrUD31+pBwTd2LK7u/yOLtv5
xqu5UekMupSYb5/5Jvq+jtJ36dKlO+66p/qk+fEN2FXfX2BSqB3keNLMcI7H
SEoN7ybfijdgBN2oqB3kCLoc7e1jIOg8ev311wm6DEGXI+jcurJ/tXhU0e3f
unjsm39z4PgT/+F3v/A7G0c3jt5vfnHn6TeoGoxHbdDZ1A44sAhjyGoHpTs6
agejUht0KWHalIC33367dJRH9XQ1tqs5QYd7EU+aOYJuJKV9uQSdDIKuiKDL
EXQjqQ26/Mwigm4kBF0RQZcj6FzJqgbFtfP0G1ntwKzfO7qzcfT+2x56Iasd
UDUYidozizbyY4taawcHtUYfQTeq/KaueEdH7WA877333qlTp3z/VMEByppj
q96b8bw5BkKphCfNIoJuPC1ngxN0zpmgm81mvn+eAkLQFRF04yHohNFGWkTQ
FRF0A5l0ano4ve+p12//1sUvnv1Ffn7RztNv/OnP/1/fX3KyNAedTe1A57CD
DEE3HmYlC9McdImhrDm2UsN7+6LhvTc6oUp40iwi6MZmHkXtg47bs94IuhKC
roigGxtBJ4OgKyHoigi6Idq3tO08/UZx8MHp3TeJsvEsFgvl3VVrawe+v0Cf
zLVhrhDfF2maqB1Ioo00MZQ1BVBBGBVNB1U8aZYQdAIIulERdFUEXclsNjPX
ie9LNXEE3agIuiqCrmQ6nVI+6MqmET6vHWRVA16pjYegMzaPn2mpHagddpAj
6EZC7UAMQZceypoyaHgfD1vUqnjSLGE6vAyCbjwEXRVBV0LQySDoxkPQVRF0
JQRdJ5bH52a1g2LVgFdq4yHoNrJji5prB5oPLMqYK2Q+n/u+VBNE7UAMQZck
yppieN50TvOcqRY8aVYRdGIIOufYuVGLoKsyH4gEnQyCzjmCrhZBV8XJRZbs
CwdmnX3+LV6pCSDoMgcOH6N20I6gGwO1AxkEXaooawqj4d0hxq/U4kmzFicX
SSLoHCLoahF0tQg6SQSdQ+ZhhC1qVQRdLYKuXaeqgcmxFa/UpLAXN9dSO/D9
pYWCoHOOoJNB0CWMsqY8++1qZrFdrRZzpprwpFmLoJNH0A3HnKkmBF0tgk4e
FYThCLomBF0tgq5Jj6pBhldqAgi6ooO3naitHRy6+wnfX1ooCDrnCDoBHAyS
PMqa8mh4H4JOqBY8aTYh6OQRdEMQdC0IuiYEnTyCbggTdLPZzPfPTaAIuiYE
XcmV/av2KXR5/1ophXilJoA20qKm2sHnb/qi7y8tIASdWwSdAIIueZQ1feF5
sx86oVrwpNmEoPOFoOuHoGtB0DUh6Hwh6Poh6FoQdE1M0C0WC98Xbyh6txvk
eKU2NoKu5PM3fZHawVpMh3eLoBsbB4MoQVnTIxreO2EvbjueNFvMZjNz/fi+
hJUi6Doh6NoRdC2YDu8RQdcJQdeOoGtB0K1cVA0yvFIbFUFXdeDwsWrt4MiJ
HzMouYSgc4igGxVBpwdlTb/YrmaPnRvteNJsQdD5RdDZI+jaEXQtCDrvmPZi
iaBrR9C1MFfOfD73fQl746pqkOGV2qgIuqoDh48d2XmO2oENtvi6QtCNiqBT
ZTKZUNb0ixdrazFnai2eNNsRdN4RdGsxZ2otgq4dJxd5R9CtxRa1tQi6djqD
7sr+VfvCweX9a2sLByteqY2JoKtVWzvYmuxSO6jSGXRjIOjGQ9ApRFkzBOb5
0X4niba4Y/zKWjxprkXQhYCga0HQrUXQrUXQhYAKQguCbi2Cbi1tQee23SDH
K7XxzOdz9uJWHTh8bOveZ8q1g3ufoXZQS1vQjYSgGw9NBwpR1gwHR+ZWyYfS
doRu+dIJ319CH8LfVoIuEARdlfycKd8//X0QdDbfVoIuEARdlXwbqe+f/j4I
Optvq5KgG6lqkOGV2kgIuiZHbvnSzV/7k5tO/vn2gy9vP/TT6//5wJ+bXzl6
xz2+vzRbwt9WJUE3KoJuJBwMohZlzXCwXa1IvhPK/Hb/8i//8i7G9/d///fC
nzgEXTgIuiKCLmEm6ISPoiLowkHQFRF0CTNBN51OJb+5yQfdqFWDDK/UxmCC
bjabSf4sRBR0//W//eNjP/rViaf/7vjjr2brvqf+i/mV//7//y/fX5oV+aAz
15K5onxf1HEj6EZCG6lalDVDw/NmRrjpwPxe5nf0/YdWZG9vT7J8QNCFhqDL
EHRpkw+6xWLh+w+NTxB0GYIubfJBl+p0eJMA9oUDkxj9CgcrXqmNg6BrkZ1c
evb5t+6evpYt89fmVyL61BNuE0446MQQdGPgtCLlKGsGSHnDu/wWNX4KhL37
7rvC+zfMb0f5IDQEnfxeXIJO0nK5FN6FSNAFSPm0F4JOA+FdiEkGnUC7QY5X
as4RdO3yz8G8dpD914hqByvxoJtMJukFnSSCzjlGJIOyZrDUvlgTnjPFpnQv
3pU9K89cUea68v2HRg21QSe8c4Og80I46DYUHOgRKYJOBt03XhB0Q0hWDTK8
UnOOpoN2ee3g9O6bd09f23n6jRhrBwRdXAg652g6wAavFAKmsOGdV8p6CO/f
IOiCRdAJ4AHEF4IOGZ1Bx9QPJQi6HuSrBhleqbklvxc3uqAr1Q7Mf8ZYO1gR
dFEh6Nyi6QC56D6DVNHzvOllzlRELZ+J4fUpivQE3Ur86YOg84igQxFBNx5O
ePCIoOvKV+FgxSs113ifvFZeO8hGHmTDDmKsHRB0ESHo3BI+GAQhi/FjSBsN
De+0fGrD/TZKCDrnCDrvCDqUaAg64cmSBJ13nDhqyWPVIMMrNYfk++VjDLri
3J982EGMtYOVj+nwkQaddwSdQ/JVMwSOsmb4Om1Xi+4TmTlTCnGgAWoRdA4R
dN7JT4cn6KKQcAWBoFNIPuhms1lc33TvVYMMr9RcIegsFWsHedNBdDfwGfmg
S3I6vACCzhX5g0EQPsqasUi14Z29uDrJ799gkGIUCDonCLpAyAed+R19/6Gx
HkHnBEEXCOFmk4iC7sr+Vfuf9Mv710b9SeeVmisEnaVi7SDezT85hjNGgaBz
hRHJqEVZMyKJPW8yZ0qt5XIpXMsm6CJC0A0U3bbMhHH2O5oQdANFuhc3SRzR
VhVIu0GOV2pOEHT2EqsdrAi6GBB0TjAiGU0oa0YnmYZ3PoI1Y/IU2iUTdBwH
rRlBh3bJBJ3wFjWCLigEXVFoVYMMr9SckA+6ePum06sdEHThI+icoOkALbgD
j04C29WYMwWKR2hH0HXFZoAAEXRYK/ZpL7xRAUG3CrVqkOGV2nDMa+skvdrB
iqALHkE3HE0HWCvqzya14n2xRssnVrxtgJ2og074bC6CLkAEHWzEG3Qr8dcp
BF2AlAed+Xm0LxyYn1/hwsGKV2oucAhhJ0nWDqgfBY6gG0446BAjyprxavpo
brpf9f31XsecKWTYvwFLBN1aBF2wOLcKlmKsIBB0yMhPhw8k6EJuN8jxSm0g
4ZngCQRdkrWDlY+gi/fcKnkE3UDy2wAQKcqaUYvoyFyaDpAzn1DT6VTyYiDo
okbQtSDogiUfdMzLjhpB14KgC5Z80Jnfzm/5IIqqQYZXakMQdD2kWjtYLpfC
PcXegy4iBN0QnFYEe5Q1YxfLdjXmTKFIeCeP+b329vZ8/6HRH0FXK4EtamkT
3slD0MWOoKtF0AVOz4ifiKoGGV6pDUHQ9ZBq7WCl/oi2kBF0QzAiGZ1Q1kxA
4M+bnBOIKk4QRVeBB538zg2CLnwc0YauCLoSGmrCpyHooiscrHilNgBNB/0k
XDtY6Qi6GBF0vdF0gB54/5CGYBveeUuMKvZvoB+CLsMzRRQIOvQT7LQXBnmg
Ku2gi7FqkOGVWm/y/fJpBF3atYO0gy5eBF1vNB2gh2Q+sLBqyM+mJfBRzpwp
NOFdK3oLrYIgf2gDQRcLgg69EXS+TqdBV0kGXbxVgwyv1PrhFXFvadcOVokG
XewIun7kDwZBMpL5zMIqpIZ3Wj7RgptzDEHQjfTHgVsEHYYIKuiEh0USdBFJ
7HjS2KsGGV6p9SP8fjiloEu+diA/HZ47urUIun6Egw4poayZnhCeN5kzhXac
foCBCDqEb29vT3hoMkGXGIIO4ZMPusViMcYfJI3CwYpXar0QdEMkXztYiZ+o
YH4vE62+/9BBI+h6EL6MkR6GkSXJY8M7e3Gxlvz+DabDJ4mgQ8iWy6Xwhm2C
LkkEHQInvI/RedAlUzXI8EqtK4JuIA21gxWTHAND0HXFiGQMR1kzVb62qzFn
CjaED/Qg6BLmZdqLfNCNtNMSo+KgeLiiIegS24urR7xHtCVWNcjwSq0rgm4g
JbWDeIMuSQRdV4xIhhOUNRMmXEHgUxX2mDwFV+SDLqUTnjEqgg6uCAed/BY1
gi5e0QXdlf2r9oWDy/vXYikcrHil1pF80KV35oOS2sEqwqBLGEHXCU0HcIjb
9bQ1faY3PW/2/o2YMwV7VJrgltiLNdqWYY+gw/9m7/6f7KrOe8//BXfimls1
d9yW01LrC5bbgI2wDAkchBAycogVI0i7bE50sWUxBCKD0wPCmQmJwU1icGzq
FjVVUubcH25leuaH1FRNaqhp/XR/49w/4fw3s1pLbDb721l777WevdZ63q86
RYnmi7rVuz9n7+dZ61l+5Rp0FEmSllbQZbndoEBJrReOYBtPT+8graDLG0HX
C5sO4FGWb2SoCD0yly2f6IvSBLwLHXTC50wRdBkg6OBd6KCTH7dF0KUuiaDL
u2tgUVJzx1xBL/T0DlY0m6JB0LmT73khe7Q1NQi3XI1zpjAA6zcQAkGHqDDk
CiEQdIiKCbqdnR3Jy6ZX0GnoGliU1ByZzJnP55JXbK5Bp6p3IB90+Q258oKg
cyfc2YcGtDX1CPG8yaYDDLO3tyd8aDJnzipB0CEe8kHH6fBKEHSIh/C+vNMP
PuISdOaad28cmJ+RpBsHK0pqzgg6X1T1DlbiK9+4o2tE0DliWhEC2dnZoX2g
h8cN75wzhcGWy6Xwsh+CThWPp72wFhdjCC/7IehUIegQCbGgO3rm8ub2bO15
QHq2GxQoqbkg6DzS1jtYJTKiLW8EnQuOSEY4tDUV8tJBYPQfxmDcKELzEnTC
KzcIuswwog2hJRp0bAbMiUzQHT1z+fhjL5m/brQHncKugUVJzQWbDjxS2Dvg
jm5yBJ0LNh0gKIoVCo3c8E7hF+OxfgOhpRV0Gzwm5IigQ2jjg46zOTBS6KCz
jQP72mgKOrVdA4uS2lrya3HzDjqFvYMVd3RTI+jWYtMBBOT97oY2w543OWcK
XlCYhYzBhTXhZwSCLksEHWSkEnRrB84gRUGDrtw4sL2DjS8GnfLGwYqSmgOq
vn7p7B1wRzctgm4t4cEg0Cn7Nzh0aNvwfun6R1dufFy75T5gyyd84U4eYgg6
TIWgg5i2oDMp1xh0wgfdEnQZC1SyqDQOzOvI1vbGZ0FH18CipNZNfr989kGn
s3dg7O3tCR+azIi/AkHXTb63BbVoaypXT2PzmHl2533zOnf1w+Kpc+f1jx+8
dMPet8tgLW7GzHvczs6O2LW0QdCpVy+sdQTd5rbcHA+CLmPyQTefz7mcNGvs
IJiII+gQToigqzcOzMteseav3/7Tv37u1d8p7xpYlNQ6cERyCGp7B8vlUnj8
gslVFoRYBF0H+cEg0Iy2Juob3ouqWvF6+Pm/O3XuleOz6+Z+XqCDoGHlhnLy
6zc4HV45gg7yhFd3E3RoHGFk2wcEHQLxu+ixsXFgXsfOvmD/0alz15568Vdr
uwbZFzNXlNQ6sY00BLW9gxXHPk6HoOvAEckQRlsTq9rzZrmq9u0///XXvvfL
kxfePHw99bp5mRv4oM+brBLXQHigB0GHVVPQFVW1xqD76slvhbsmWSWuAVPl
Ia/eQZgw6DSsxYWvoGtrHJw499qJ828Uf3vq3LWOrQfZbzcoUFJrw6aDQDT3
DlbMopwIQdeGI5Ihj7YmCuUN70X7YPvZvz158e2TF9+697D52WvrkR+FWLTG
G6USkus3jmx9w7x+8rPrU3/RiEJlsoetqt3//Xfue+aXBB38kgy6r2weJ+hQ
aAy6By//PUEH77wEXWPj4MS514qr9N4HH792fHb9kSs3NXcNLEpqbX77298f
3/6OeU/0kmNr6RnjoLx3ILz1gDs6i6Brw6YDTIJ7exTKy9Wu3Pj4zPPvnbp4
8/Ax87B9cLPysHnyqdfNDby5kzc3/Jvbs/FPnUq2fMKSWb9hGwfmRdChUFmX
++gPfy0cdLTs9RALuq/e922CDhXtQfd2NeguvFkEna8+AttI9RgZdPXGQblr
YF/mI+YSPfHEK8dnL1e2HmjrGliU1BqZd8DZbPaVzePmPdG8xufYWnqCTnnv
YCV4R/eHh48b3NEdIugasekAE9LzrgcXtrB2eKDe9974/L794s1TTcvVisKa
fdlHzmFPnUq2fMIKvX6juPUqPkLQoawIurOXd0+cf+OLQdfaQSiCbnAfgaBT
haDDtIpW6aPPvVUKurcIOnhkC7bDQqzSODicUFRrHNi35uOzl4t/zVzPtmug
s3GwoqTWolzd/crm8cr7o3eqRgXSOwhxOnwZd3R1BF0j4QlaQBltTdTdfOcf
T8x+Ym7UP3/YPLx7f7txhNHh82Ztr3GvPgKbDhTa3d0NsduufutF0KGNCbqt
h39wWK/4QtDdbA26UmGNoIOLQKfDE3RwR9AhtGFBV28cNHYNbJ/rcOtB6dSD
1976zdRf9JQoqdUtFov6RWj35YUYYaQt6OgdrELe0dndo5WPm9/L/I5Tf9FT
IujqhMdnAXW0NVFW7ITa3J7VHjbfausglO/qK4+ca586WaKmkPf1G3bid8cS
Iw6oRRlBBwEhFqp1Bx2nw6PMb9C59BEIOoWWy6W5xeqVY+XGQUPX4F5762b9
sjRXMkFHSa2iY4hHMcLIbwdBW9DRO7C8L/m2d3RtFydBR9CVMa0IMaCtibLy
8Svm8dDc3n/hYfPz5801G947ymuVy0/JOVOoaFwjNEzbmg2CDm2Eg07bEjUU
PK4RattuQNChDUEHGb2CrmgctHUNGsdqmX/ZNg421B8eREmtYu3JobaD4GuE
kcKgo3dgCd/Rbehe4kvQVXBEMiKhvK2JQuPYUvNsuPVHV5tWBLlueO946tT8
nojx6zccb70sVbNJ0aFx5UZb0Lmc9kLQoYNw0DG5CJZ80LG/TzPHoLvXOJhd
7x5S9IWuwfk3ir0w5j8n6Ciplbmvxe31TtpB26aDFb2DEu7oxBB0ZWw6QFSo
bGDV+Ya49ciPajf5Qza8F6/N7Rm1XOXGrN8Y9ghA0GHVGXTHzr7QtAyyx2kv
9aqa5jt/rEYH3YDVkgQdVp3nChF08M4l6GzjoLFr0Lz/peWBwm54URt0lNTK
+q7FHXkIgs6go3dQGHlH1z12shFBR9Ct2HSAyOh8K0TZ2hkyh7vdG274h3QQ
NrdnCrd8om7Y+o0Bt14EHay1t/0EHbwbE3QDShwEHeSDTvMMGVjdQdd8yV34
7GiDnsuQzFWnNugoqRWGFXLHHIKgs5BL76Csoy/fYVjjYEPxHR1BV2gcDAJM
S+e7ISzHnVCHS4ZmL1fn5V7oNzLXDixVuOUTdX1v+8fvOCboNCPoMIm+t/0E
HcYwmeNydi1BB786Todv2LzcMaTIYfOyvfZ0Bh0lNcsx6NoMOARBbdDROyjr
CLpG4+/odM4DJOgK3g/pBsZT29bEqs9OqM9GlTY+b64/BMFuNGYtLgp7e3su
7QNfc0oJOs0IOkxFPugWi8XUXzSmQdBhKo1B1zT1tLlr4NI42NyeFYcm6zwd
npKa5WWIh33PddmAoDno6B1UrJ3VUL66vNzREXQEHRAbnW1N9D1+5d7DZvPM
0tYN7+bZofg/qF25gbq16zeGTfzuwOnwOhF0mNByuexeITl4P3sbgk4ngg7T
Kq+Q3NyeVdtShxfVzb5dA9svsL0qgo6S2sr3yaEuI4w0Bx29g7rupeDmWvJ7
R6fwjEiCbsURyYibzrYmBjQ0i4fNw+fN1g3vb3/+RHD+jWKVGgu/UdExuWjw
xO8OBJ1O8kHHwm+UrQ06j4+ZG3cXSTKCXqGxQefQQSiCjiNdUGeDzlwbDe+b
LWciN3YNzGXZ1i+o0Da5iJLaKsBa3O5DEJQHHb2Duu47Or9r3iyCjqADYqOw
rancsHOmNr74sNk2MtduSS4eM+3rj599RfPNBhrV12/42unZiAaWNoPPmSLo
4BFBh6AGL1FzCTpb9SXo0O32/sGf/MUvq42DjqMNvniIRnkkEUHXiJJauLW4
bYcgKJ/MQO+gEXd0QRF0bDpAErS1NZUbc/zKFx4220fmnjj/V8cfv2b/nQcv
3dh5/WMb/spvOVBW7mEFvfUqEHSqCAfdA9999blXf0fQoYKgQ1DCQXffEz8j
6FB2e//AXA/mqjh14RfuRxt0jCQi6Oooqe3u7gZdi2vXjRcbELTVbOvoHTTi
ji4ogo5NB0gCb5F6jA+l6sNmbcP74RK1x6+deOIV8zr5xPUL83fLbwG39g+m
/jNALMwdkff5kB0IOj0IOsSDoEMgjqc3diDoMJjtGtjXpesfPfD9d049/WbH
0QbuI4kIugrlJbXB++V7KUYYHTtxmul/9A7a2NPhuaMLgaATCDrAC1VtTbV8
7YSqP2yWl6t9vhn58Wvf/N4bdtNB5V2Aew+s7r5Lnnv6WZm7L4ug04CgQ1QO
T4f/8X8k6OBXwKArDZ9ZG3RUkxQqdw1s4+Dszvtnnn9v+0//tt44OPrNZ/qO
JHKkZ6qM5pKa8BCPr2we/+6zV5RcVx3oHbQxd3Q//Iv/SfKOTs/p8MqDzryj
iV1UwEiq2ppqedwJ1fiwaQtrnz97zn5SWaJGYQ0Vdv2Gl2vSBafZaiAUdJ+V
1Ag6rCUfdJwOnz2CDvJu7x80Ng7s65s/+PtTd3sHJ869Zl6b958P1DWw9ASd
5pKa8BAP5UckF+gddBBeH07QTf15SWBaEZKjp62pk/eVG40Pm+aDR7a27a/P
Xt5tXKKm8B0BbZbLpXCfnaDLm0zQmVcRdMWRLgQdOoyZSz8AQZc3yaCz/8gx
6KgsZazSNag0Ds5d/dD87Xeu/E1xooHH67PNbDbTEHRqS2ryJ4ea345NByt6
B+sI39EpWeJL0AEJ0dPW1CnEOVP1h03zEfuP7jtz0R6o5/JiZK5mwus3zE8B
g0wzFmLlBkGH8eQHmTK5KGPyQXfpp/9A0KlV7xoUjQPzV/MqPmjeEM3V4vfK
7KYh6NSW1Nh0MBV6B924owuBoAPSoqStqVC497jKw6ZdaGTLs+YGo/FdgOVq
qGD9BrwQC7qipGYuXYIOjgg6eGG+rbNZkEXdBB0qGrsG9nXlRnUfyq39OyuC
LgCdJTX5tbgayrOO6B2sRdB5R9AByeF9Mz+hQ6n8sGl7B+UtnzxvYi3Wb2C8
0OdMEXQYiaCDF0FLFgQdLPO962gc1L/XtnGwIugC0FlSE67NKpl/5YjewVrh
mvhtCLoshRgMAojR0NbURmAnVPGweWRru3HLp3mmcHwAeZEN7yqxfgMjEXSI
n/AzAkGXnxiCrq2s1FZVnuQPCmO4dw1e/Gy7QZn86fB5B53CktpisRAeZ8q0
ojJ6By7kg878XEz9RQekMOjkW+2Ad9m3NVUR2wllHzbNk2bHOVMU1tDGvHvu
7OwIXKgFgi4nBB2SIB908/mckx+zIRZ0m9szgk6nkV0DSz7o8j4dXltJjSOS
J0fvwMVyuQy637mOoMsJ04qQh+zbmqpIHr9y9MzlrdMPda/cYMM72siv3+B0
+GwQdEiF8HJKgi4nkkG3uT0j6FTx0jUoCC+nzDvotJXUOCJ5cvQOHAkHnT1Q
cuovOhSCDkhU3m1NPaI9Z4rnTTQSnlxE0OVBPugc13ITdGjEGGcMEO1aXIIu
A34bBxazKH1RVVKLNuhUoXfgjqDzhaADEpV3W1OPyN/O2PCOCo7YwwCRz5An
6FBB0GEA4SVqBJ0SIboGFkHni6qSmnzQMWyhjt6BO4LOF4IOSFfGbU0lkjhn
iuVqqIi84YXYyO8XHra33T3oeDrTgKBDL6kMRqCDkJBwXYMCQeeFnpKa+fbN
ZjPJaybXMuxI9A56Iei8IOiApPF+mq60tnzSQUCB9RtwR9AhUQQd3JnMET6Q
kaDL2+39A/fv0a39O4O/R5SCvdBTUhOuwTKtqA29g17kT4cn6JImHHSAjFzb
mhqkeM4Uz5uwIh9Bg3gQdEiX/OnwBF2iCDp4JLDdoEw+6PIbQaOkpJZi0OWK
3kFf8kGX3+nwSoJOeDAIICnLtmb20lqLW8GGd8iv33A8+hZRIeiQNPmg43T4
FBF08EW4a2Atl0vhXTP5BZ2GklrSQZcfegcDCC8mJ+hSxBHJyFuWbc3spX7O
FMvVINyUJ+hSlPoSNYIOwpOLCLoUEXQYb5KuQSGV0zqipaGklnrQZYbewQDM
ohyJoAMykF9bM2/ZDBfleVM54fUb5qeGoEuI/MoNgg4hcMQeOsgHXaBdeATd
VMyfpHvjwPzJe28cWATdGNmX1Nh0EBt6B8MQdGMQdEAeMmtr5i2zc6ba7l7a
nnrCfSYQxvoNdMistUTQqUXQoUNmp//QQRA27XaDMoJujOxLapkFXQboHQxD
0I2RfdCx6QBK8Cabily3fDIyVyfWb6CR8Egrgg5BEXRoJD/phaDLRjxdgwJB
N1jeJTVGWkWI3sFgNMIGI+iAbOTU1sxV3ls+Wa6mEOs3UEfQEXSZyWbSIDwi
6Ai6YSLsGljyp8NnE3QZl9RM5ggfpc20Ihf0DgaTD7pAkwblZRx0K/HuOTCt
nNqaucp100EZz5va7O3tCZ8lStBFjqAj6PIjH3SLxWLqLxpdCDqCboBoGweW
fNDlcTp8xiU1DUGXInoHYwhvjibo4se0IiiUTVszS3kvUatgw7se8us3OB0+
ZgQdQZel5XIpvPaSoIuZqqDjtBcvIu8aFITXXuYRdLmW1FQFXVroHYyU2aFs
Mgg6ICfZtDWzJNzQjGF5tvtyNe52kiY8uYigi5l80E2+PJsOghLMfEZB4Vpc
gm6wVLoGFrMoB8i1pKYw6FJB72Akgm4Agg7ITB5tzfyorTmw4V0JjtjDSvGt
OEGnBEGHleLzLwi6vvp2DSL5EyPo+sqypCa/FjeSoEsCvYPxCLq+CDogP7zz
xoZzpnjezJ7aojHKhO/DCToII+iwUj/rgKBzlNZ2gzKCrq8sS2pUVmNG72A8
gq6vLINud3eXTQfQjDff2LDl02LDe954ylCOoLMIurwRdMoJn7FI0KUo3a5B
QbicknrQ5VdSk98vH2fQRYvegRfyp8MTdFGR7x8BEUq9rZkTzpkqY7laxtSO
ccCKoKvhtJdcyZ8OT9DFg6CrIOgqMugaWPJBN5/PY77Uu2VWUiPo4kfvwAv5
oEv6dPj8gk54MAgQp9TbmjlhLW4dHYRcya/fmPycXFgEXR1Blyv5oON0+EgQ
dHUEnXV7/8C9cXBr/07MjQNLeItN0kGXWUmNoIsfvQNfhFeeE3Tx4IhkoJB0
WzMb8is3Elq303bb0/a8OfXni/WWy6VwB5+giwFB14HCWpaEJxcRdDFgLW4H
5UGXzXaDCuVHe7jLqaRG0CWB3oFHzKJ0RNABuUq6rZkN3ozWYmRuZuRHpO7u
7k79RWvHYOS1CLrMcMSeQsJL1Ai6JOTaNbAIOkc5ldTkg44dxAPQO/CIoHNE
0AEZS/G5IyecM+VI+XK1/NAyU4VukSOCLjMEnSrUFhzpCbq8uwYFgs5FNiU1
Ti5LBb0Dvwg6F9kEHZsOgEa8I0+FLZ996XnezB41Fj3kz5ki6BAJgk4V4cIC
QRcz89m6Nw7MV5du42BF0LnJpqTGlKpU0Dvwi66ZC4IOyFuibc0McM7UMAo3
vGeJ9RtKEHTDcNpLHpjWpQRBN0yWQadku0GZ/OnwyQVdHiU14dOxswm6SdA7
8E4+6JKb1pVH0Mk3xIGEpNjWTB2bDkaig5A68768s7Mj+SNA0Mkj6EYi6FIn
H3QJnRKeDYJupGyCTmHXwJIPuuROh8+gpEbQpYXegXfL5VJ4JzVBJ49pRUC3
FNuaqeOcqfHy3vCugfz6DU6HF8Za3PEIutQJL9Qk6OQRdOOlHnRquwYF4YWa
yQVdBiU1gi4t9A5C4AS3bgQdoEFybc2kMTHPo9SfN5VjbmrG5FduEHQEXZwI
uozJB13GW0sSDToaBxazKDukXlJj00Fy6B0EQtB1IOgAJZ5//vkPEvTbf/r9
1J9Cbz/+8Y8lv7MaygjZbHjXRn6iIEEnRjjo0rq7HoagSxRB5yjFoLt27RpH
WviVUNDRNSgj6DrsvPr+hfm79vX01V/bX5gPTv15uSLokkPvIBCCrgNBByhx
LEFbpx7YOv3Q1J9Fb8Lf1g/UbPl0X67GvVM8hNdvTP3TPwRB5/JtJegIupgR
dGsRdC7f1rTGF4wReQeBrkEjgs44+dCFepRtPfyDE7OfHL6euH7q3Cv21+aD
Lv9tDCS/rRtZbyMVQ+8gHILu2OigMy+pz7QHyW8rAGFHtr5hXlN/FlHTtuUz
0Q3vmsmv30gOQbcWQUfQRY6gW4ugW4ugiyHobu8fuH9Wt/bvqIpf+aGsEdrc
nh1/7KWjZy4f2douPmj+1nzw8DV7+fjsuv21+WDlvzKv8n+lk7agC4TeQTjy
p8NHqAg684vigwQdgGjxpNntmKa1uGVxPm+ize7uLr3+DgRdN4KOoEuC8Onw
ySHouhF0MQQd2w3WIuiObG3fq559VjczH2krqW1uz4pimn1N/elPTG3QeUfv
ICiCrlfQmX9E0AGYFk+a3ZSv3Ih8wzsKrN/oRtB1I+gIuiQQdN0Ium4E3bRB
R9fA0XK5nM/nU/+4TKxcIrOvE+ffOPnU68dn10+ce+3Ek395+FfzOv9G5V8r
L9DVSXnQeUTvIDThyUURIugAJIQnzQ6cM7WKbLkaOiwWC+XrNzoQdB3MZWMu
nqmv34kRdKlgclEHgq4Da3GtSU57oWvQF0FXWWF7r6R24c3D18Wbh6+7v66X
1JTP8SDoPKJ3EBpBR9ABSAhPmh04Z6pAYS0JrN9oQ9B1IOgKBF0SCLo2BF0H
gq4gGXS39w/cGwe39u/QOCgoDzpKasPM53M2HfhC70AAQUfQAUgFT5pt2PJZ
13YT1fa8OfXnqw7rN9oQdG1msxm7qyroIESOoGtD0LVhG2mdQNCx3WAMgm5A
SU35HA+Czi96BwIIumG9g6k/awAa8aTZiC2fHSYfmYsOytdvtCHoGhF0HQi6
mBF0jQi6RgRdh0BBR9fAC+VBR++gFxN0u7u7U1+zWaF3IMNct+bqnfoHaDIE
HYBU8KTZiE0H3ViXGy3WbzQi6BoRdN0IumiZoJvNZlP/AEWHoGtE0HXzG3R0
DTxSfjp8ZZqHS0lN8xwPgs47egcyCDqCDkASeNKsY4maIwprcdrb26N9UEHQ
1RF0jgi6OBF0dQRdHUHnaHzQmY+4Nw7M/4HGgQvNQTegpDb1pzwZgi4Eegdi
FosFQUfvAEDkeNKs45ypXpjsEZvlcmmu4al/jOJC0NWxRK0XTnuJDUFXR9DV
EXS9DA46thuEo3lyUa+SmuY5HgRdCPQOJBF0BB2AyPGkWcE5U8PQQYgKk4sq
CLoKgm4Ygi4qBF0FQVdhLo/FYjH1dZqeXkH3i71/oWsQlOagO3rmMiW1tdh0
EAi9A0kEHUEHIHI8aZZxztQYTPaIiub1G3UEXYW5PKa+QlNF0EWFoCsj6CoI
usFcgu7S9Y/O7rxvXueufkjXICi1QVee5rG2pKZ2jgdBFwi9A2EEHUEHIGY8
aZax5XM8CmuR0Lx+o46gKyPoxiPoIkHQlRF0ZbPZjN1VI3UEXdE4cOkd0DgY
SW3QHdnadi+pTf3JToNtpOHQOxBG0BF0AGLGk2aBLZ8edWx4f+zZa9945JL5
a+mh8mDqzzdPatdv1BF0BYLOI4IuBgRdgaArEHQeVYKu3DU4/ugPN04/+ej3
fkrXILTd3V1zVU/9gzUBx5KazjkeBF1QRe+gckdH7yActafDE3QA4seTZoG1
uN7Vl6s9+9I7R44/YF/lqhp3YiF88skns9ls6h+sKBB0BYLOO4JuWibodnZ2
pv7BigJBVyDovLu1f6fcNTCv+595/Usbp//9ka/Xg46ugXdqg66Y5tFdUjP/
2tSf6QQIuqBs76B+R8eNXDjL5XI+n0/9gzUBx6CjdwBgQjxpFtjeHkJlw3v5
Bsz8mskeQand+1lH0BXY3h4CQTchmqQFgq5A0Pl1e//ABNeVGx+fu/rh2Z33
z7ywt/39X5nXv/sP9/3Bl09/aeP0/c+8bj5u/gXbNSDivPv000+ffvrpqX+w
JuBYUtM5A5ygC6rYd1C5oyPfwiHoCDoA0eJJs4zTpgIpF9bMfddjz16rL1Gj
sOYdozwKBF0ZQRcIQTcJgq5A0JURdL7c3j8oZ9eVGx8//uIHtndw+ukbxx/9
oXnZnQjmH7HdIBDNQedSUpv6c5wMQRdO0Tuo3NFx8xaO2uFsGwQdgOjxpFnG
+o2gOmaDN83IPZj6803bBx98oPbuq46gKyPogiLoJC0WC3ZXFQi6MoJuvErX
oNw++NaVX29//1flEUaXrn9ESS0Q5dtI15bUNM/xIOjC4axkYcqDzuQYQQcg
ZjxpVrB+I6jKZI/uF+tyB1O75bMNQVdB0AVF0Mkg6CoIugqCbrC2rkHRO6h0
DSiphUPQ2WkeHSU15XM85vM5px6EQO9AkrmGdZ50UFgbdDpPdQEQD540K1i/
IYDCWmhsOqgg6CpM0C0Wi6mv08wRdKERdBUEXYUJur29vamv08Tc3j/obhyU
eweXrn9UNA4oqQVC0NE76EbQBULvQBJBR9ABiBxPmnU7Ozu0DwS03ZK1Fdam
/nyTwRK1OoKujqCTQdAFQtDVEXR1BF0va7sG5d5BuWtASS0Qgs7qLqlN/dlN
bzabEXTe0TsQQ9BZBB2AmPGkWXfs2LHd3d2p30W1YDa4d5rPmWpD0NURdJII
Ou9YolZH0DVicpELx65B0eWkpCaDoLOOnrncVlJjBrhF0HlH70AMQWcRdABi
xpNmIyYXSWKyh0fKz5lqQ9A1IugkEXQeEXSNCLpGBF23Xl2DW/t3VpTUpJjr
djZjwPWhze1ZW0mNOR4WQecdQSeDTQcFgg5AzHjSbMP6DWEU1sbjnKk2BF0b
gk4YQeeFuW6n/tGJEUHXhqBrZOLFvXFg4sg2DlaU1KQQdIUjW9uU1NYi6Pwi
6GQQdAWCDkDMeNJsw/qNSTDZYwy2fLYh6NoQdJMg6MYg6NoQdG0IuroB2w0K
lNQELBYLdleVNZbUtv7o6tSfV0QIOr8IOgFsI61o6x1M/XkBAE+aXVi/MRX3
dbncwhXY8tmBoOtA0E2FDsIABF0Hgq7DfD43F8/U128UxnQNLEpqoRF0dVuP
/IjewVqcDu8RQRcaQVdH0AGIFk+aHU6dOrVYLKZ+X1WKyR59sRa3A0HXwQTd
3t7e1NevUgRdXwRdB4KuA0G38tE1sCiphUbQ1TWW1I6dfWHqzysuBJ1HBF1o
BF0dQQcgWjxpdmP9xrQorDli5UY3gq4bQTctgs4RQdeNoOs2m800B52vxsGK
klpgBF2jo2cu10tq5oNTf17RYXKRLwRdUARdo8ago3cAIAY8aa7FQI/JMdlj
Lc6Z6kbQrUXQTY6gW2t3d5clah0IurV0Bp3HroFFSS0o1uI2qpfUTpx/g95B
I51B5x1BFxRB18hk2r0jDwg6AJHhSXMt1m/EgHW5HThnai2Cbi2CLhKc9tKG
oFuLoFtLW9B57xpYlNTCIejaHJbUzr1GSc2FtqALhKALx1yfs9ls6h+UGBF0
gBLHjh07lZqv3f+weU39WfQm3Kdm/UYk6CDUyW/5JOjEEHQ6EXR1Jujm87nk
jwNBJ4agC+H2/oF7jNzav9MrRiiphSO8jTShoDvxnSunzv/81MWbp75793Xx
5n3n/vL0H+9M/Xm5IuiSQ9CFQ9C1IegADcxPyrvvvvsJRPz4xz+W/OaeYv1G
TCislQlv+SToJL366quS31yCLioEXRlBl7Hd3d1TggutNQRdoO0GBUpqgRB0
HX721n967tXfnXn+veJl/vaNd//z1J+XK/mgWywWU1/RaSPoAjFXpuTPAkEn
STjogEQ9/fTTn3766dRhrIWJpp2dHcnvL+s3YsNs8NUUmw4IOknyQTefz/n+
RoWgWxF0uZMPuoxPhw/dNbAoqYVA0HWzzfRzVz88u/O+eZlf2L751J+Xq+Vy
Kbx7LuOgk0HQhUDQdbNBd+n6R4kG3YpDGIF1NKxiio1wz9r8Xnt7e1N/0fgC
1uUKL1FjFZM8gg4EnfxaXPM7Tv1F6/KJ7Ix38y3e3d2d+ov2TKZrYFFSC4Gg
61YpqZlfJFdSI+jSQtCFQNB1y6B3IBx0QHJYlD4J4bbmbDajQxQhtYW1T8TP
mSLoJiEcdLTC46Q26OSXqBF0kyDoBjM/7O6NAxMOIxsHK0pqAcgHXXLbDO07
4JUbH9uSmvlFciW1FUGXFILOOzYdrEXQAXlLLpSyId/WpKQQrV6TPZJ7C25E
70wJgg6FtidZgs4XKi1TIeiGkdxuUKCk5t3u7i7HG3Uruue2pJbo2xxBlxCC
zjv5/fIE3STYegA0Sm4nVGaoKqBMz2xw+XOmCLoJEXQo0xN08hMeCLoJEXS9
TNI1sCip+cUoGxdFSe3S9Y/sHI8US2orgi4dBJ1fNM5cZBN0wg1xIAlsOpgW
b0Oo0DDZgy2f2hB0qCDoQiDopsUgPkcTdg0sSmoemcwRPkI30aArl9TsHI9E
S2ryp8MnGnSTI+j8Eu6aZRB09lQXgg7IA0vUYsA+X9TlXVjjnCmF9vb2hA9N
JujiR9B5RNDFQD7oFovF1F90P5M3DlaU1Lwi6ByV3+yS7h2spgg68ztO/UWn
h6DziKBzlFPQCQ9JACKX3DlTWZJva/J9T0WWkz1Yi6vTcrkUXppocpX2QRII
Oi8IukgIL01MKOhi6BpYlNR8IejcNTbKEy2prTizLAUEnS8EnTuCDsgSyzLj
ITzQg/UbaXFfl5vEDSHnTKnFSGR0yKyDIB90ya0/zxUj2uri6RpYlNR8YS2u
u8xKagRd/Ag6Xwg6dwQdkB+KKrHh5Cl0yGayB88ayhF06JBT0DH3XjOCrnB7
/8D9h/rW/h2ZH2pKal7Ir8VNOugyK6mtCLroEXReyAdd0gMiCDogP+nuhMoV
NVWslUFhjXOmlCPosBZB1xfDHGJD0FmxbTcoUFLzgtJxL/mV1Ai6yBF0XnAw
ZS8EHZCZpHdCZYybcLhId7IHWz6xIujgJt2gEz5bjaCLk/Kgi7ZrYFFSG09+
CGHqQZdfSW1FWTVuBN14TFvtK8ugEz4dHogKa3HjxPoNOEpxXS7nTMFinAvc
JXfaC0EHywTdzs6O5JUQSdBF3jWwKKmNRNANkGVJTT7okh7nIoygG8lcaeZ6
k7y8Cbo4yQcdEIkMVm5kTLityfqNpKXVQWDTAQryQccxsuki6DoQdDET3oFi
fi8TrRN+vbf3D9wbB7f270zVOFhRUhuNoBsgy5LaSnzl2+RBlxCCbiSCbgCC
DshJJAuT0Gi5XAo3uHd2dmgfJK3tzrCtsDbJJ8k5U6gQHuhB0KUuiQ4Ca3FR
oefkiyS2GxQoqY1B0A2Ta0ltpX5EW7QIujEIumEIOiAbvNvGj8F6GCDy2eAM
REUFI9owQORBJ7xEjaCLn4agS6trYFFSG0M+6PLYOZhxSU1D0KWIoBuDTQfD
EHRAHrIJpeyxfgMDRLsul3YYGhF0GICgK1A8SULGQZdi18CipDYYJxYNlnFJ
bZV10KWLoBtMftMBQZcEth5Ajzx2QmlACQKDxVZY45wptCHoMFhsQbcSf6Ag
6FKRZdCZHyj3xoH5AYyqcbCipDaCnjFc3uVdUssy6FJH0A1GL2yw7INOuHsO
TIJNB2nhPQtjxDPZgy2f6EDQYYx4Tnsh6NAhs6l96W43KFBSG0b4+O/Mgi7v
kpqxt7cnfGgyd3TdCLph5PfLE3QJEQ46YBIsUUsLm4Ix3uQdBM6ZQjcTdDs7
O5JXCIdo54egQ+SyCboMugYWJbUBCLqRsi+pLZdL4Y3GJldpH3Qg6AYg6EbK
PuhWTC5C7rI5Z0oV+fUb5nec+ouGZ9NO9mAtLtYSXsdI0GWJoEPkhNcxeg+6
bLoGFiW1AQi6kTSU1DjgLCoE3QAE3UgEHZA6lpQnSrityfqNXE1SWOOcKThi
fjK8UBJ07J1JVLoj2jJrHKwoqfXHWtzxNJTUVikHXX4Iur4IuvEIOiBp1EnS
xclT8Eh4sgePD3BE0MEj4aDLbJQ9wkkx6PLrGliU1PoSXoubZdApKamlGHS5
Iuj6kg+6/AaDEHRAuvLbCaUNBVj45b4ud8ztJedMoReCDn7lGnTMZ0haQkGX
a9fAoqTWC9VgL5SU1FZJBV3eCLpeOGvSC4IOSFd+O6G04Y4d3oWe7MGWT/RF
0ME7gaATPheSoEtdEkF3e//A/Qfn1v6dFMtQlNR6Ea6Q5Bp0ekpq1GAjQdD1
wgBVL1QF3c7OjuQ1AwTFWtw8MBIBIYQrrHHOFAYg6BACQYeo7O3tCR+a3Gsk
Qt7bDQqU1NwRdL7oKamtpgg6v6fD54Ggc2feKNkv74WqoBO+bICgcl25oY18
W5OjGPXwPhucTQcYRj7oOB1eD4IOkVgul5LbVTa3Z45Bp6RrYFFSc0TQeaSq
pLYSX8XNHV0dQeeIoPOIoANSxKLKnAi3NVm/oYrfdbmcM4XBhAd6EHSqJB10
GS9RU0gs6Da3Z8cfe2ntMRmqugYWJTVHBJ1H2kpqSYxoyxtB54ig84igA1LE
G2hmmMKHoLwU1phxipE4Yg9BeQk6+SVqBF1mBILONg7M68jWdlvQ3d4/cG8c
3Nq/k0fjYEVJzY180OW961lbSW3FHd3UCDoXbDrwi6ADkpN3KOnE+g0IaLvP
bCusVf5zOlwYiaCDgJEdBOohGCl00BWNA/Myv95oCjqF2w0KlNRccAiRXwpL
atzRTYugcyG/X56gywxbD5C0vHdCaUa9AjKGzQbnnCl4QdBBxrCgE35GIOhy
FS7oyo2DondQDjrNXQOLktpa8kHXPVkrAwpLaivu6CZF0K1Fe8s7nUEn3GoH
PGLTQa54g4OYtnW5V258bF+VW4L/8//+/9jyCS+YfAUxBB2mEuh0+ErjoOgd
bNwNOroGFiW1biZzJE/03tARdDpLaoGCrkPek696IejWEu5tEXS5kg86wAuW
qOVtb29P+CxR1m9o1lhYu3T9o7M775+7+qF5FeW1C/N3tx7+wZGtbZkrk6DL
m3zQceK2ZgQdJuE96OqNA/M6euay+Ufmor3vzMWnXvyVS9fA/Dhk3DhYUVJb
h5NDQ9BZUluJ70o2v5eJ1qm/6CgQdN0IuhDUBh2Ti5Aiuu15k29rmt+O9oFy
9cketqpWvGbz33z90pvHZ9fLSxyD0rByQ7Plcim86JGgA0EHeR4XPTY2Doqt
B/YX3/7Tv37u1d+p3W5QoKTWgZNDA1FbUltxGtpECLoOBF0gBB2QClaJayDc
1mT9BqxKYa1cVXvg8junnn7z5IW7r6deP3Hutc37zwe9Jgm67DFsGZNwDzrz
Ch10bIfJnq+ga2scmLdjc7nahpd9PfrcW5q7BhYltQ6sxQ1Ec0mNobuTIOg6
EHSBEHRiFxUwBqUPPSTbmke2vvH1h89TqsWqNtnDVtXOPP/eqWfePnnx5r2S
2oXPa2vHzr6wuT3zPt+DJwIlCDpMoi3ovnbpbwg6eDc+6BobB7ZrYF/m1/c+
Prv+tQs36lsP9HQNLEpqbT799NPvPnvFvCF6CTEXeoJOc0ltxR3dFAi6NvJB
p2cwCEEndlEBYyjZCYWVVFvTvKX+4WE95PCNVc+9PdYqF9YuXf/oG8/+7WF1
4uLNkxffPnnxrXphza54PHrm8pGt7fHlNYJOD4IOE5o26Bi5oMfIoFvbOLAv
c30edhBmL9e3HmhrHKwoqbWzdQ/zhvjV+779lc3jI3NsLVXbSJWX1Lijk0fQ
tdnd3T127Ji9Wgg6vwg6th4gfnp2QsEK2ta0Tw3ldryqdz24sJM9LszfPXX+
r+5VJy6+dbeq1lBY+3zR493a2uDyGkGnTeigs6/iIwQdKmzQXfrpP5w6//Ne
QTemj0DQaWPrGANCrN44qHcN7l6xN088+fPi3zl17prdeqCwa2BRUmtULnp8
ZfO4eRAI2kHQFnTKS2qrAKfDl5kLlTu6CoKuUaW6KxB0qgaDEHRBgw7wgrW4
2pg3vtksyFmN9tar/h7K+g1UmMx56MLVarHiXmGtNtnjiyOXK30Ex4uToNMm
3Onw9caBRdChojPo3iboMN6woKs0Dhq6Bp/vlLlZuTK/e+W65muMklpd48mh
RQeh78XpQlvQUVILekdXWfNmmd9Oc/uAoKszmTOfzyvXSdBWKUGnLeiWy2X9
GgPioW3lBizvbc3yTs86zm1EhT1n6sjW9tEzl6tVi4s3Tz3zy8bZ4PXCmmN5
jaDTST7oOB0eZZ1B9xZBBy/M/VWvoCs3DsxleeL8G/WuQf3iNJelPZtDedBR
UqvrODn0K5vHO940h1EYdJTUVgEGenBH14Ggq+sOusYO1BgEHUEHxIZ1kjp5
bGt233oVlK/fQFllidqRre2tR37UsuKxdTZ42+vomcv1s0f1nDOFCl+Tiwg6
9CUfdNqWqKHgHnSVxoFL16AYq1Vcb5rP1KCkVtG46aD+BupxXa7CoKOkZgnf
0WmeXETQVRB0Agg6i0OTESfN74kY39asz4fsoG1kHzo0zmc++s1nmiYtO80G
7yiv2UWSBJ1awkG3QUcen2lcokbQIQTHoCsaB+1Dipq7BsXFZv4PyoOOklpF
x1rcyjupl8keOjcyU1KzvKzI5Y7OBUFXIRx0CjcdrAi6z7D1ABHSGUooG9PW
bJsP2YHKBladb4ib959vGp7QcgjCunW59nXyoQs0rZQj6CBPOOg2t2dqSxyw
1gadbRy0dQ0atxs0dq+OnrmsOegoqZX1PUBt/GQPnUFHSa0w8o6u7wQtgo6g
W7ltOigbf9oLQUfQDb54gBAU7oRCxbC25oBbr4LOt0IUGs+ZKjssbsxebh+/
3G+yx5GtbYIOBB3kdd/2rwu6fh0Egg6rdUFnLrnDow2chxTZf7l7q4vOoKOk
VjasvjH47VXtsCxKaoW+7aqRl9yG1js6gq5sWNANPu1FbceKoCuEOx0eGIBN
B7B6vRuOufWy1L4bwnLZ8nlvqMLs5aa1kc2TPQ4La7VVuAQdCo1jsgg6BDI6
6NoPQSDo0K7tdHjbOGi5zNYMKep4nX7wEYVBR0mt4DjEo03f2eCag46SWllb
0HVcZiPv6BSOySLoCua7P2aADEHnjqAr6xV0QFAsUYPl3tbsNR+yg871G1j1
2fLZNZPZYTZ4MZCZoIMlH3Qcz60WQYepNAZdwxEbxdEG/Y/YMFdd+ZBuhafD
U1Kz+g7xaNRrNrjmoKOkVrZcLru3MBfsHd34s2sJOoJuDILOEUFXweQixEBn
Ax1t1rY1x6/CrVx+5nec+ovGBHotUSuqai2TPVpng9tRzBu6V26gbu3CIYIO
XhB0mFB5clHbdgP3ow2KCUXlfoHyoKOkZo3cdFDmcgiC8qCjpFaxdhal3zs6
c/lpOzqNoLMIOkkEXQWHJiMGLPxGRVtb0++tV0Hh+g0MWLnxeVWttbBWnexh
qx+aRzGjg3DQqZ3MrJl80LHDBRU26BoaB22nabQ0DuwWg7UXsLYRbZTUVp7W
4lbYN+K2dbma1+KuKKk1Eb6jI+gIOi+6r0+CjqCrYOsBpkU1A3X1tub4+ZDd
qOtqM+y97wtVtXWTPcrVj/ue+Nl7v/8vU3/RiAtBh9B6naxRIOjgkbkkzIXx
havo3oSi9V2Dykgigq6OktrK61rcisbJHtrKtnWU1Orqd3TmsvE1drIRQUfQ
+dJ4CAKDQQi6OrYeYELKd0KhQ7m062s+ZAceBFQZc85Upap2WFhrnOzx9Jsn
nnjl3r8w+8mF+bsK73KxFkGHcMbc4TcEXWMHwQbd49ds0D3+539jg+7W/sHU
Xz2md3v/wF4PD33/7bWNg6Jr0DGSiKCro6QWupRRnw2uqmbbiJJao8odXdCl
IBsEnb6gm83W77wbjKCrI+gaDVuVBIynfCcUOthngUA7PRvxFqnE+C2f9apa
fbLH8dn1449fOyyGzK4/eOnGzusfl+869NzrohtBh0BEg+6JVwg6lBVdA/O6
dP2jM8+/97VLN7uPNnAcSUTQVSgvqZmgczymdqRiNjiPritKai3s6fDc0YWg
POhWUrNiCLoygq6RDTqBqxEoY9MBur359t9unX5I7IJUtX5DMy9bPhuqaqXC
mvnr54t1n7j+9NVfN9576LnjRYe93/zua/c/7CXEXBB0ShB0mEqlcXB2533z
euDP/u7Udxu6Bke/+cyYLQZt9AxbUF5SCzfEo9HWqQd++0+/n/qLnh4ltTby
d3RKTocn6Ag6eQRdmzEDHIBhaGiim3xbk0Mes+fxnKnmqtrdyR7lklplLW7l
xWQPyAcdp8Nnj6DDJMpdg3LjwLy+/ee//vqf/C+25XR3R97LHncZNFISdJpL
aiFODu3Go6tFSa2D8FmiBN3Un1pwBN1UCLoOHJoMSSx9hAvhtqae9Rtq+V25
0VZVMx8/euayPTn00k//oa2exrpcWMInTxF02ZMJuiNb2zboyke6dLwIuoxV
ugbmdeXGx0XjwLwuXf/o/NXfmPdE+xbp6+LsYH4Ednd3p/6DCU5zSU14LS77
5QuU1DrInyWqYXIRQSd2ORF0BYKuA4cmQ5KGtzl4IdzWnM1mdLVyFeKcqcaq
mp3AYP76J3/xy7X1NDoIWIkHHe37jIVYokbQoc3t/YP687VtHFy6/pF5mV8X
H//+j/4qxISiNhqCTm1JTX4tLnuTC5TUunFH5x1BJ4ZNBwWCrhtbDyCDUII7
1m/Al0DvcfWqmv247UOZ29rGe4+2wtrUf0iYBkEHX8SCzhaBhwVd9s/7StS3
GxS9g/oHb+3fIei8U1tS293dlVyLq6E8646SWjeCzju1QSe86YCgKyPourH1
AALYCYW+WL+B8YLefVWqahu1oLu1f8exqvYis8G1IugwXtBBf0e2tgk6WG1d
g5bv9Z3iPyTo/NJZUhMuWfDoWkFJbS16W34RdAKUDPpzR9Cttbe3R/sAQbHp
AH2xfgMjCWz5LNoHR89c3mgKOtbloluImVrdCLrMCARd0T4g6NQa3DWw5E+H
zzvoFJbUGOIxOUpqa8kHXd4ztXQGnfmeSl5CBF0FQbeWfNBBFVZuYBjhtmb2
6ze0kdnyadsHR89c7gg6CmvoIB90i8Vi6i8a3sgEnW0fEHQKmW+Te+PAfFvr
jQNLPugyPh1eYUmNk0MnR0nNRdBtgHUEXWYIuskRdC6YXIRw8u6JIxz5tqb5
7Wgf5EFyidrm9uzomctrV24w2QONlsul8Cojgi4bkkF3ZGvbJejaHvbbSs1i
f1YYYOR2gwrhyUUZB522khqbDmJASc2RcNDZ44em/qKDIOhCI+jqCDpHHJqM
EFjLjTGE25p5r99QJdpzpuggoI7pphhGOOhOP/iI46YVgi51frsGFrMofdFW
UmMtbgwoqTki6Hwh6IIi6BoRdI7YegDvKFBgPI7YQ1+RV2KZ7IE6gg59RX5Y
BkGXqBBdgwJB54Wqkpr8WtxcK7EjUVJzR9B5QdAFxWCQRgSdO7YewC92QmE8
1m+gl1TOmaKwhjKCDn0J37QTdBoEbRysCDpPVJXUmAATCUpq7gg6L1QF3e7u
bpz75bUh6NzJL2FCxtgJBV9YvwF3aW35ZLIHCgQd3BF08Ct016BAhWQ8PSU1
4ZNneXTtQEmtF/nT4Qm6dMnvlyfo2hB0vQgHHTLGpgP4EvlkBsQj0XOm3Nfl
ZnnPDEv+dHiCLlGJBh0dhDiJdQ0s+aDLbzKDkpJaokGXK0pqvcgHXX6nwxN0
gRB0HQi6XpbLpfC0B2SJhib8kl+/4XgiJKKS1lrcMiZ7YDVF0HE6fIoIOnhx
e//A/dtxa/+Or2+H8GLy/IJOSUkt3aDLEiW1voQXkxN0iSLookLQ9cWhyRiP
1YzwS76tmd/6jexlcM4UhTUITy4i6JKTwRI1gi4GwtsNKhhiP4aGkloGQZcZ
SmoDMItyDIIuBIKuG0E3AIcmY4zMbtERCflhgLu7u1N/0eghmynKTPbQjCP2
0E14iRpBl59puwYWQTeGhpKafNCx3bgbJbUBCLoxCDrv2HSwFkE3AFsPMBih
hHBYv4E2mZ0zxbpczQg6tMmvh85pL5Ji6BoUCLrBsi+pUXGNECW1YQi6wTQE
Hec5xoagG4atBxiGnVAIh6cJNMp1yycdBJ0IOjQymSM8u4+gy8bt/QP3xsGt
/TuhGwcrgm6E7EtqwlUIHl1dUFIbhvrwYASdXwwGcUHQDSN/OjwywKYDhMb6
DdTlveWz7ea5rbAm9okhnGwGcMGj7IOODkIgUW03KJM/HT6PoMu7pJZ30KWL
ktpg8kGXxwCuvIPOfI9y2i+fDYJuMOGgQwZYuYHQ5Nua2azfyFWumw4qmA2u
inzQeT/4G34RdATdANF2DSz5oMvjdPiMS2pKgi5FlNQGWy6XwnsGCbrIEXTR
IujGYHIR3GXT5kbk5NdvmN9x6i8arfQsUWNdrirCS5IIusgRdARdL5F3DQrC
k4vyCLqMS2p6gi45lNTGyO+sIgEEncfrgaBzRNCNwaHJcMfybIgRbmvmsX4j
SwrniFJY04NRqLDkl6hNvg+FoBvM/FG4Nw7MH92EjQOLWZR95VpSYy1uzCip
jUTQ9UXQ+ULQuSPoRmLrAVwQSpDEEXuw1BZXmeyhAUEHS23NgdNe+kplu0EZ
QddXriU1DvqJGSW1kQi6vnINOuFNBwRdLwTdSGw9wFrshII8tbUUFDhnig5C
9gg6yM86IOhSlGLXoEDQ9ZJlSY2hLpGjpDYeQdcLQedF6i0kYQTdeMLLAJAc
Nh1AHm++yrHl02KyR94IOuUIOoug65B018BSOH5wjPxKaiZzhA+TjTPoYkZJ
bTz50+EJutgI948Iur4IuvHkgw4JiXCJGpRgd7NmnDNVRmEtY/KnwxN08SDo
ygi6ugwaB5Z80C0Wi6m/6IHyK6kRdPGjpOaFfNClezo8QTcSQTcAQeeF8GgI
JISGJqYi39ac/PhIWKzFbcRkjyzJBx2nw0eCoGtE0FnZdA2s5XIpvPI83aDL
rKRG0CWBkpovwivPCbpIEHRJIOh84dBk1LFAEdMSbmsmvX4jJ/LnTCW0QNF9
XW66d+DaCE8uIugiQdB10Bx0mXUNCky8d5RZSY21uEmgpOYLsygdEXRjEHTD
EHS+cGgyKtK960ZOhNuas9mMftm0uOtei8ke+eGIPW2YAL+WwqC7vX/g/iXf
2r+T3JdM0LnIqaQmvxY3uaCLBCU1jwg6FwTdGIxKGIag84itByhjJxRiQCVZ
G86ZcqSwsJYxgk4b2uKO9ARdrtsNygg6FzmV1CiipoKSmkcEnYucgo4jGlNB
0HnE1gMU2AmFePDooQdbPvtiNng2CDo9hMfxEXSR09A1KBB0a2VTUpOfUpV6
0E2IkppfFJPXIuiGYTDIGASdX8KnwyNa6a7FRX5Yv6EE50wNo2ddbt4YYqME
QTdMlkGnqmtgyZ8On1zQ5VFSI+jSQknNL/mgS26ITTZBZ/7kJb/RBN0YBJ1f
8kGHCLFyA7ERbmumuH4jA2w6GCPLwpo28kGX0OG52SDoxsgm6G7vH7g3Dm7t
38mjcWDJB11ap8PnUVIj6NJCSc074Q2GBN0kCLq0EHTeMbkIyXWukT35tqb5
7WgfSOKcKS/absXbCmtTf774guVyKbx+iaATxlpcL1IPOoXbDSqEJxelFXQZ
lNQIuuRQUguBg406EHQDEHQjEXQhcGiyZqy4RpyE25rJrd9IHaNBPcp7Nnje
mJuaN+ElagRdbEFH18BiFmWHDEpq8kHHHrqRKKmFQNB1IOj6YtPBeARdCGw9
UItQQszkj9h79913P0jNb//p91N/Cr2999571Ev9ymayh0IEnQuCzkVCZYRh
Ego6ugYVBF2bm+/844X5u/b19NVfF782H5/6U3Nigo6ze5JDSS0Qgq4NQdcX
QTceQRcIWw90YicUYibf1jyWoBMPnpv6UxhC8tuqJ+gSKqyhQNC5IOjWIugi
CTrz27k3Dsynp6FxsCLo7jp6/7mTD13YOv1Q+YPmb0/MfnLv9eSrxa/r/5r5
b2U/X1eS39a05rREi5JaIATdsc/CaljQGQTdRu7bSMUQdIGYi1O4lYbJHWPT
AaJHW3OtP9wmursoDLoUJ3soR9CtRdB1I+giCTq2G3QQnlUYp+OPvWReR89c
PrK1bT9ifmE/aF4nzr1W/Lr4Fza3Z+Zl/6vpPvEoKAy6QCiphSN8OnycCLox
CDpfCLpwCDpt9CxRQ7poa65FSa2b2qCLs7CGRvKnwyeHoOtG0E0edHQN1iLo
jKNnLhdFM/Nr87LlssaSWvkflYtsaqkNOu8oqYVD0G3cbQQQdIMRdL4QdOEs
l8v5fD71zwqEcM4UUkFbsxsltQ7KV25EPtkDZQRdN4KuA0E3bdDRNXBnHj2U
B12lSnb4ml0/+dTr5mV+ceKpnx/+9dxr9m8r/6bykpryoPOLklpQnCVK0A1G
0HlE0AVF0OnB8StIBW3NbpTUOhB0qwgKa3DE5KIOBF0H8xbJErWpgo7GQV/K
g648uOPzktqFN+3r1DO/LH5dKakxx4O1uB5RUguNoCPohiHoPCLoQlMedEpw
zhTSQluzAyW1NpwzVRbPZA+0Ieg6EHRtCLoyyaCjazAMQUdJbQCCzi9KaqER
dATdAAwG8YugC42gyx47oZAi2pptKKk1Iugaua/LNS82IMgj6NoQdI1M0O3u
7k592UYndNDRNRhJedBVp3m4ldSUz/FgG6lflNQEEHQEXV8EnV8EnQDlQZc9
dkIhRbQ121BSa0TQtWGEUcwIujYEXSOCrk2goLu9f+D+v721f4f8bKQ86IaV
1Kb+rKdE0HlHSU2ACbrZTO+tC72DvhgM4h1BJ4DT4TPGWlyki7ZmI0pqdQTd
WnQQorW7u2su4Kl/hqJD0NURdGv5DTq2G3ik/HT4viU1zXM8CLoQKKnJIOgI
OkcEXQgEnQzlQZcxVm4gXbQ1G1FSqyPoHHEIQoQIukYEXR1B52h80NE18E55
0B09c5mSmiOCLgRKajKWy+V8Pp/6Z2gyBJ07gi4Egk4MS3zzwzlTSN1isaCt
WUFJrYJzpnphA0KElA/0aETQVbBErZfBQUfXIBzNQfeFaR4OJTW1czwIukAo
qYkh6Ai6tQi6QAg6MZqDLlccv4IM0NasoKRWQdANQAchNgRdBUFXQdAN0Cvo
frH3Lx/95//XPRVpHAygNuj6ltSm/nwnM5/PWYsbAiU1SWqD7sjWNkHngk0H
gRB0ktQGXZYIJeSBtmYFJbUyzpka485//W/uK2y59QqKoKsg6MrYRjqGS9Bd
uv7R2Z33zcv8gu0G4WgOOveSmto5HgRdOJTUJBF0BF0Hgi4cgk6S5qDLDDuh
JNmYYjZ4OLQ1yyipFQg6LzgEIRIEXRlBVyDovGgLuqJrYF9XbnxM1yAotUH3
+STwdSW1TZXpZ4Jud3d36sszW5TUhKkNus/3WNE7aME20nAIOmHmXdu8d0/9
I4Wx2HQg4N/+7d+efPLJR/7osXI0MdkjBNqaZZTUCgSdLx2TPZ596Z0jxx8w
L/MLgi4ogq6MoCsQdL5Ugq7cNbj/mde/tHH63x/5+mPPXqNrEJQJutlM40+3
e0lN5wxwgi4oG33FHZ0NOkpq4ag9HZ6g60bQBUXQCVMbdDlhiZqMl19++ckn
nzy5fabypElhLQS16zfqKKlZBJ13jR2EbzxyqXwDRtAFtbe3R/vAIugsgs47
G3RF4+DMC3vm9eXT5/7gy6f/h81vPPq9n1658XFl9wGNA790Bt3nk8DXldSm
/kwnQNCFZu/uijs68wtKaqEtFguCjqArI+hCqwSdeRF0oekMupyw61PGb3/7
2wcfeqReUmOyRwj0DgqU1Ars+gyhMtnD5Ftj74CgC4G9nwWCrkDQ+XV7/6C8
6eCBP3t3+/u/OnLmhf/uf/zalzZOb5x+0nzw3NUP6RqEozboXEpqzPFACLak
VtzR0TsQ8MEHHxB0BF0FQRcUQSdPbdDlhENYZJhoatvebl+sy/WChmYZJbUC
QRdOeQMCQSeDmUVlBF2BoPPFdg0qhx3Y3oF5HX/0h+ZlGwrnrn5I1yAQzUF3
b5pHZ0lN5xyPDYIusOKmzt7R2SmUlNTCIei6g07nqS4bBF1gBJ0wtVMo80Nb
M7S28eD181korI3x6aefPv3001P/PEWEkloZQRdOxyEIBJ13BF0FQVdG0I1U
7xoUr8df/OCBP3v3W1d+XZx9cOn6RzxpBmKCbj6fT/3zNBl6B90IunA4QlSY
5v3yBF03gi4cgk6Y5qDLDG3N0CisyWAnVAUltTKCLjSCTgZBV0HQlRF0Y3Q0
Dszr3NUPi66BbRzwpBkOQbe2pDb1JzglE3SLxWLqizRPlNQkEXQEXQcTdHt7
e1NfpHki6CQxGCQztDUFVGaDd7+YDd4Xa3HrKKlVzOdzc51MfalmjqALiqCr
I+gqdnZ2aB/01d01qPQObNeAJ81wCDrj6JnLHSU1tTPACwRdIJTUxBB0GwTd
OgRdIASdGIIuP7Q1ZbAuNxxWbtRRUqsg6GQQdOEQdHUEXQVB14tL16DoHZS7
BjxphkPQbdhpHu0lNc1zPCxzhezu7k59qWaIkpoYgm6DoHPAEt8QCDoxBF2W
aGuKobDmneZzpjpQUqubzWYEnQyCzjvOmWpE0NUxucjF7f0D94xq21HFk6Z3
LFGzKKmtRdCFQElNBkFnmSgj6LoRdCEQdDIIuozR1pR057/+N8cnVqJsLY5f
aURJrRFBJ4mg84iga0TQNSLourlvN7CNgxVPmlIIukJbSe3Y2Rem/tRiQdB5
R9DJ2N3dZS2uRdCtRdB5R9DJYNNBxmhrymM2+HiEUhtKao0IOnkE3XicM9WG
oGtE0LUZ0DWweNIUwDbSsmNnX6Ck1o2g846gE0DQlW3ef56g60bQeUfQCSDo
skdbUx6TPcZgJ1QHSmptCDp5BN0YBF0Hgq4NQVcxuGtg8aQZGkFX0VZS++rJ
b039qUWEoPOLoAvNBN18Pp/65yYiBJ0Lc82YK2fqizcfBJ0AtpFmj7bmVCis
DcOmgw6U1NoQdFMh6IYh6DoQdG1M0C0Wi6kv3iiYJHFvHJjkqTcOVjxphkfQ
VXz15LcaS2rMAC/jdHi/CLrQCLoKE2j0DtYi6Pwi6EIj6JSgrTkhJnv0whK1
bpTUOnA6/IQIul4Ium4EXQeCbjV6u0GBJ82gCLq6xpLaifNv0DuoIOg8IuiC
IujqCDpHs9mMoPOFoAuKoNODtubkKKw54pypbpTUOhB0kyPoHLFyoxtB18Fc
OeaNcupLeDK+ugYWT5pBEXR1R7a2T5x7jZKaCyYX+ULQBUXQ1RF07gg6Xwi6
oAg6VRjoMTkme6zF8StrUVLrRtBNjqBbi6Bbi6DrpjPo/HYNLJ40wzGX6GzG
D3JVY0nt+Ow6JbU6nUEXAkEXDmtxGxF07gg6Xwi6cAg6hWhrxoDCWhvOmXJB
SW0tgi4GBF0Hzplai6BbS1vQhWgcrHjSDImga3Rka/v4Yy9VS2qPvURJrZG2
oAuEoAuHoGtE0PVC0HlB0IXDYBCFaGvGg8kedfI7oU4l6OsPn5/6UxhC+NtK
0EWCoKsj6FwQdC7fViVBF6hrYPGkGchisZD/iUjCia8/fN8TPzv51C9OXbx5
6pm3D/964RfmI6cffGTqT82V8LdVSdAFRdAFIr+NdOqfflcEXd9vK0E3HkEX
CPvl1aKtGQ/W5ZbJ74Qyv92//uu/foLw/vmf/1l4cAFBFxX3oDMvgs4vgk6M
CbqdnR3Jb272QRe0a2DxpBkCQdfhf/vf/4/nXv3d+au/OfP8e/Zlfm0+8l/+
r/9n6k/NiXzQzedzc0VNfVGnjaALgaDrUA+6x1/8R4KuA6fDj0fQhcBgEM1o
a8aGDoIlvBbX/F7md5z6i1Zkb29PsmFtfq/FYjH1F43PEXQWQZc3+aDL9XT4
2/sH7olxa//O4MTgSTMEgq6DuVbNNXblxsdnd963L/PrtPrmwptKMg46MQRd
CARdhwyC7hPZtdYE3XgEXQgckawcbc0IKS+sya/cyH65ZmyWy6Vwz5qgixBB
Jxx0LNeUJzz6eDab5Rd0AtsNCjxpejfJWtyEgs6W1MyrKKm9mOCeO4IuLQSd
dwRdN4JuAJb4jkTQeccRyTh27Nju7u7UVyIaqJ0NzluzBsLrNzboEMVKbdAJ
nzNF0E2CoBtDsmtg8aTpnfASteSCriipXbr+0dmd989d/TDFkhpBlxaCzjv5
oEtrPzVBNwxBNwZB5x2bDrCR4J22HgrX5Qq/L6e15TMzNIlgEXShsUhgQgTd
APJdA4snTb+otKxVKanZOR7JldRWBF1SCDq/zKXIOW7dKkFn/krQuSDoxiDo
/GLTAQrJvQepoqewxpZPVagqoExV0AnP7CLoJkTQ9XJ7/8C9cXBr/47HxsGK
J03fhMssKQZdUVKzk8DT7R0QdAkh6PxiZtdaRdC9eHdsUdJBR58oFQSdX8JB
h5jR1oxf+W3XpbA29ec7BOdMacP6DVQQdN4RdJNjPpWjqbYbFHjS9Iigc1Ep
qRW/Tq6ktpridPhEg25yBJ1HwmeFE3STkw+6tOZTxYOg80h+eQAiR1szCRnP
BmfTgULmnWhnZ0fym07QJYGg84igm5x80CV3LvbkXQOLJ01fCDpH5ZJasRY3
0ZKafNCZ3472wQAEnS8EnaOcgm65XArvHSbohiHofGFaEepoa6Yi18kenDOl
k/CKHfN77e3tTf1FYz2CzotEl6jlR3jFTkJBF0nXwOJJ0xeCzlHbVrtU3tEq
OMonCQSdLwSdI4JuJFa+DUDQ+cIRyWhEWzMhmRXWmB+oGZNC0SazoJNfuUHQ
xYMRbRXmp9W9cWB+ukM3DlY8aXoiH3TJbbQpZFZSWxF0KSDovGDTgTuCbiSC
bgCCzgs2HaADdYa0ZDPZg+qxZqzfQDeCbhieNaJC0JVFtd2gwJOmFxzw4S6/
khpBFz+Czgv5/fIEXTwIuvgRdF6w6QAdkn5jUst9XW6cb9OcMwVqqlgr9Q6C
/DAHgi42BN0q1q6BxZPmeEyt6SW/ktqKoIseQTcepeNeCLrxCLq+CLrx5AeD
IDlJvzeple5kD7Z8YsVNONwQdO4IuggpD7qYuwYWT5ojmcwRPkQy9aDLsqTG
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
SejywptmXPKhW6/XeT3/hM4PoQtB6OKSD112t8MTOj+ELgShi2u73QqfF4EF
4p4pLI38+g3+CMhjLW6IYo4wUjhrUJMPXV63w5fxpkno8sKbZnTCy9EJ3SwI
XV4IXXTCy9EJ3SwIXV4IXXRcmozs1iKiePLTmtmt38gd90xFkfsMguaJA4vT
oUcU8KYpH7rsFl0vDW+aKRC6EYTOA2txAxG6FDiLcgSh80DoAhG6FLg0WbO8
BtjQg5unysYAO6IcL0Fg1sAidCMKeNPksPfs8KaZAqEbUUDohNfiErpwhC4F
QjeC0E3FqQjhCF0KbD1Qi51QWDLhj5fNH4ff/d3ffTk333n19bl/Cj64Zyqu
jDYgMGvQ8jKhG/Bvrn/v0efesl+PXPth/dff/O0X5/6puRIO3Wazmftxzh5v
mom8TOgGELqpXs7n89LFInSJvEzoBhQQOm5jzA6hS+Rlth6oxE4oLBnTmi5+
8UB0JJMjPaFb+AzCrZPb7j+9myd3MlqMFILQGacPVmcuXT117qD5N82/Pf/Y
S/brwuXX679u/WPmv9v6OzrpCV1SvGkmQuj2CF0MhC4KQpeICZ3wJ8wLZEoV
ErrTvNhyMEgkhC4R+dvhMTsNa3GRO6Y1d2LuYJzC0C1zBoHtBiOET7ZZJvsW
2Xzf3PmmaV4w6//WfD/xRVAYukR400xH+Hb4ZfILnfnnCd0eoYuH0KVD6PZ8
Q2cHdYSO0MVC6NIhdNqwcgPLx7TmTswdjFMbuuVcgsCswU6EzrAfjtVf5t/W
UwOtN836BXNo3ZpCakMXHW+a6RC6PUIXhtDFQujS2W636/V67j8rM2u1i9BN
QuhiIXRJscRXD+6ZQi6Y1hzH3MEI5fdMzb4BgVkDd+ZBVR661svj3a/V9fue
/L75Mn9x4cnvmZdN83XfUz8w/7b1T879c58ZS9Qi4k0zKU4uCgmd8o/UCF1E
hC4pQtcfuqd+YEJ3N3GEbhihi4jQJUXo9OD6FWSEac0RzB2MIHTVTDMIt05u
u08c3Dy5o3ziwFIeuuZ+9k+9ad772n/mR/Vft9402d5O6CLiTTM1Qkfo/KzX
a9bixkLoUlMeur2Pjy0idFOx6SAiQpcaodOAKCEvTGuOYO5gCPdMNd3553+Z
sgXgdsiPxXYDP4SON00PbCONizfN1AgdofNA6OIidKkROkLngdDFRehSI3TF
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
AAAAYEH/B5/JzFM=
    "], {{0, 1292.}, {1034., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1034., 1292.},
  PlotRange->{{0, 1034.}, {0, 1292.}}]], "Input",ExpressionUUID->"edaa4611-\
e7c0-4c41-9388-867897e9c4bb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateEncode", "[", "s_List", "]"}], ":=", 
   RowBox[{"FromDigits", "[", 
    RowBox[{"s", ",", "4"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateDecode", "[", "n_Integer", "]"}], ":=", 
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"n", ",", "4", ",", "4"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isWall", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"s", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    "\[Equal]", "1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isReceiver", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "\[Equal]", "2"}], "||", 
    RowBox[{
     RowBox[{"s", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isSpecial", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "\[GreaterEqual]", "1"}], "||", 
    RowBox[{
     RowBox[{"s", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
     "\[Equal]", "1"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hasPacket", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"s", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
    "\[Equal]", "1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hasPosAck", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"s", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
    "\[Equal]", "1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hasNegAck", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"s", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
    "\[Equal]", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hasAck", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"s", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
    "\[GreaterEqual]", "1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"isHold", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"s", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
    "\[Equal]", "1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"packetGlyph", "[", "pos_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Opacity", "[", ".9", "]"}], ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{".2", ",", ".4", ",", ".8"}], "]"}], ",", 
     RowBox[{"Rotate", "[", 
      RowBox[{
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"pos", "+", 
          RowBox[{"{", 
           RowBox[{".1", ",", ".3"}], "}"}]}], ",", 
         RowBox[{"pos", "+", 
          RowBox[{"{", 
           RowBox[{".9", ",", ".7"}], "}"}]}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"-", "45"}], " ", "\[Degree]"}], ",", 
       RowBox[{"pos", "+", 
        RowBox[{"{", 
         RowBox[{".5", ",", ".5"}], "}"}]}]}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ackGlyph", "[", "pos_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Opacity", "[", ".9", "]"}], ",", "Orange", ",", 
     RowBox[{"Rotate", "[", 
      RowBox[{
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"pos", "+", 
          RowBox[{"{", 
           RowBox[{".1", ",", ".3"}], "}"}]}], ",", 
         RowBox[{"pos", "+", 
          RowBox[{"{", 
           RowBox[{".9", ",", ".7"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"45", " ", "\[Degree]"}], ",", 
       RowBox[{"pos", "+", 
        RowBox[{"{", 
         RowBox[{".5", ",", ".5"}], "}"}]}]}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nackGlyph", "[", "pos_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Opacity", "[", ".9", "]"}], ",", "Red", ",", 
     RowBox[{"Rotate", "[", 
      RowBox[{
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"pos", "+", 
          RowBox[{"{", 
           RowBox[{".1", ",", ".3"}], "}"}]}], ",", 
         RowBox[{"pos", "+", 
          RowBox[{"{", 
           RowBox[{".9", ",", ".7"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"45", " ", "\[Degree]"}], ",", 
       RowBox[{"pos", "+", 
        RowBox[{"{", 
         RowBox[{".5", ",", ".5"}], "}"}]}]}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"wallGlyph", "[", "pos_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"Black", ",", 
     RowBox[{"Rectangle", "[", "pos", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"errGlyph", "[", "pos_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RGBColor", "[", 
      RowBox[{".8", ",", "0", ",", "0"}], "]"}], ",", 
     RowBox[{"Rectangle", "[", "pos", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numberToGraphics", "[", 
    RowBox[{"num_", ",", "w_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"state", "=", 
        RowBox[{"stateDecode", "[", "num", "]"}]}], ",", 
       RowBox[{"pos", "=", 
        RowBox[{"{", 
         RowBox[{"w", ",", 
          RowBox[{"-", "h"}]}], "}"}]}], ",", 
       RowBox[{"g", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "state", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[Equal]", "1"}], "||", 
         RowBox[{
          RowBox[{
          "state", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[Equal]", "2"}]}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"g", ",", 
          RowBox[{"wallGlyph", "[", "pos", "]"}]}], "]"}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "state", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "\[Equal]", "3"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"g", ",", 
          RowBox[{"errGlyph", "[", "pos", "]"}]}], "]"}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "state", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
         "\[Equal]", "1"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"g", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", ".4", "]"}], ",", "Gray", ",", 
            RowBox[{"Rectangle", "[", "pos", "]"}]}], "}"}]}], "]"}]}], "]"}],
       ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "state", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "\[Equal]", "1"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"g", ",", 
          RowBox[{"packetGlyph", "[", "pos", "]"}]}], "]"}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "state", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
         "\[Equal]", "1"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"g", ",", 
          RowBox[{"ackGlyph", "[", "pos", "]"}]}], "]"}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "state", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
         "\[Equal]", "2"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"g", ",", 
          RowBox[{"nackGlyph", "[", "pos", "]"}]}], "]"}]}], "]"}], ";", 
      RowBox[{"Flatten", "[", "g", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OutputGraphic", "[", "arr_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", "w"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"h", ",", "w"}], "}"}], "=", 
       RowBox[{"Dimensions", "[", "arr", "]"}]}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "[", 
             RowBox[{"GrayLevel", "[", ".9", "]"}], "]"}], ",", 
            RowBox[{"FaceForm", "[", "]"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Rectangle", "[", 
               RowBox[{"{", 
                RowBox[{"c", ",", 
                 RowBox[{"-", "r"}]}], "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"c", ",", "w"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "h"}], "}"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"numberToGraphics", "[", 
             RowBox[{
              RowBox[{"arr", "\[LeftDoubleBracket]", 
               RowBox[{"r", ",", "c"}], "\[RightDoubleBracket]"}], ",", "c", 
              ",", "r"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", "w"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "h"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"450", ",", "350"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"w", "+", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "h"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotRangePadding", "\[Rule]", ".2"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}]}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"handlePacket", "[", 
    RowBox[{"left_", ",", "centre_", ",", "right_", ",", "st_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", "=", "st"}], "}"}], ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hasNegAck", "[", "right", "]"}], "||", 
         RowBox[{"hasNegAck", "[", "centre", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"s", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
           "=", "0"}], ";", 
         RowBox[{"Return", "[", "s", "]"}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hasPacket", "[", "left", "]"}], "&&", 
         RowBox[{"!", 
          RowBox[{"hasPacket", "[", "centre", "]"}]}], "&&", 
         RowBox[{"!", 
          RowBox[{"isHold", "[", "centre", "]"}]}], "&&", 
         RowBox[{"!", 
          RowBox[{"isHold", "[", "left", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"s", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "=", "1"}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hasPacket", "[", "centre", "]"}], "&&", 
         RowBox[{"!", 
          RowBox[{"hasPacket", "[", "right", "]"}]}], "&&", 
         RowBox[{"!", 
          RowBox[{"isHold", "[", "right", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"s", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "=", "0"}]}], "]"}], ";", "s"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"handleAck", "[", 
    RowBox[{"left_", ",", "centre_", ",", "right_", ",", "st_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", "=", "st"}], "}"}], ",", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hasAck", "[", "right", "]"}], "&&", 
         RowBox[{"!", 
          RowBox[{"hasAck", "[", "centre", "]"}]}], "&&", 
         RowBox[{"!", 
          RowBox[{"isHold", "[", "right", "]"}]}], "&&", 
         RowBox[{"!", 
          RowBox[{"isHold", "[", "centre", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"s", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
           "=", 
          RowBox[{
          "right", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"hasPacket", "[", "s", "]"}], "&&", 
            RowBox[{"hasNegAck", "[", "right", "]"}]}], ",", 
           RowBox[{
            RowBox[{
            "s", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "=", 
            "0"}]}], "]"}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hasAck", "[", "centre", "]"}], "&&", 
         RowBox[{"!", 
          RowBox[{"hasAck", "[", "left", "]"}]}], "&&", 
         RowBox[{"!", 
          RowBox[{"isHold", "[", "left", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"s", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
         "=", "0"}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"isReceiver", "[", "right", "]"}], "&&", 
         RowBox[{"hasPacket", "[", "centre", "]"}]}], ",", 
        RowBox[{
         RowBox[{"s", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "right", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[Equal]", "2"}], ",", "1", ",", "2"}], "]"}]}]}], "]"}], ";", 
      "s"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"caRule", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "nb", "}"}], ",", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"l", ",", "c", ",", "r", ",", "st"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"l", ",", "c", ",", "r"}], "}"}], "=", 
         RowBox[{"stateDecode", "/@", "nb"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"isSpecial", "[", "c", "]"}], ",", 
          RowBox[{"stateEncode", "[", "c", "]"}], ",", 
          RowBox[{
           RowBox[{"st", "=", "c"}], ";", 
           RowBox[{"st", "=", 
            RowBox[{"handlePacket", "[", 
             RowBox[{"l", ",", "c", ",", "r", ",", "st"}], "]"}]}], ";", 
           RowBox[{"st", "=", 
            RowBox[{"handleAck", "[", 
             RowBox[{"l", ",", "c", ",", "r", ",", "st"}], "]"}]}], ";", 
           RowBox[{"stateEncode", "[", "st", "]"}]}]}], "]"}]}]}], "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"wallS", "=", 
   RowBox[{"stateEncode", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"packetS", "=", 
   RowBox[{"stateEncode", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"receiverS", "=", 
   RowBox[{"stateEncode", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "0", ",", "0", ",", "0"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorS", "=", 
   RowBox[{"stateEncode", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "0", ",", "0", ",", "0"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"holdS", "=", 
   RowBox[{"stateEncode", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"runSim", "[", 
    RowBox[{"width_", ",", "steps_", ",", "holds_", ",", "recvErr_"}], "]"}], 
   ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "=", "1"}], ",", "st", ",", 
       RowBox[{"out", "=", 
        RowBox[{"{", "}"}]}], ",", "col", ",", "t0", ",", "t1"}], "}"}], ",", 
     
     RowBox[{
      RowBox[{"st", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"width", "+", "2"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"st", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "=", "wallS"}], ";", 
      RowBox[{
       RowBox[{"st", "\[LeftDoubleBracket]", 
        RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", "receiverS"}], 
      ";", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"t", "\[LessEqual]", "steps"}], ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"EvenQ", "[", "t", "]"}], "&&", 
            RowBox[{"!", 
             RowBox[{"hasPacket", "[", 
              RowBox[{"stateDecode", "[", 
               RowBox[{
               "st", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "]"}], "]"}]}]}], ",", 
           RowBox[{
            RowBox[{
            "st", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+=",
             "packetS"}]}], "]"}], ";", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t0", ",", "t1"}], "}"}], "=", "recvErr"}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"t0", "\[LessEqual]", "t", "<", "t1"}], ",", 
           RowBox[{
            RowBox[{"st", "\[LeftDoubleBracket]", 
             RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", "errorS"}], 
           ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"st", "\[LeftDoubleBracket]", 
               RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "===", 
              "errorS"}], ",", 
             RowBox[{
              RowBox[{"st", "\[LeftDoubleBracket]", 
               RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", 
              "receiverS"}]}], "]"}]}], "]"}], ";", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"col", ",", "t0", ",", "t1"}], "}"}], "=", "h"}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"t0", "\[LessEqual]", "t", "<", "t1"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"isHold", "[", 
                  RowBox[{"stateDecode", "[", 
                   RowBox[{
                   "st", "\[LeftDoubleBracket]", "col", 
                    "\[RightDoubleBracket]"}], "]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{
                 "st", "\[LeftDoubleBracket]", "col", 
                  "\[RightDoubleBracket]"}], "+=", "holdS"}]}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"isHold", "[", 
                 RowBox[{"stateDecode", "[", 
                  RowBox[{
                  "st", "\[LeftDoubleBracket]", "col", 
                   "\[RightDoubleBracket]"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                 "st", "\[LeftDoubleBracket]", "col", 
                  "\[RightDoubleBracket]"}], "-=", "holdS"}]}], "]"}]}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"h", ",", "holds"}], "}"}]}], "]"}], ";", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"out", ",", "st"}], "]"}], ";", 
         RowBox[{"st", "=", 
          RowBox[{
           RowBox[{"CellularAutomaton", "[", 
            RowBox[{"{", 
             RowBox[{"caRule", ",", 
              RowBox[{"{", "}"}], ",", "1"}], "}"}], "]"}], "[", "st", 
           "]"}]}], ";", 
         RowBox[{"t", "++"}]}]}], "]"}], ";", "out"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Daedaelus Network Automaton\>\"", ",", "18", ",", "Bold"}], 
        "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<One-dimensional resilient link \[Dash] local rules only\>\"", 
         ",", "12", ",", "Gray"}], "]"}], ",", 
       RowBox[{"OutputGraphic", "[", 
        RowBox[{"runSim", "[", 
         RowBox[{"width", ",", "100", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"h1c", ",", "h1s", ",", "h1e"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"h2c", ",", "h2s", ",", "h2e"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"recStart", ",", "recEnd"}], "}"}]}], "]"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"width", ",", "25", ",", "\"\<Link Width\>\""}], "}"}], ",", 
     "10", ",", "40", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "Delimiter", ",", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<Receiver Error (Neg-ACK burst)\>\"", ",", "Bold"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"recStart", ",", "20", ",", "\"\<Start Time\>\""}], "}"}], ",", 
     "1", ",", "100", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"recEnd", ",", "30", ",", "\"\<End Time\>\""}], "}"}], ",", 
     RowBox[{"Dynamic", "[", 
      RowBox[{"recStart", "+", "1"}], "]"}], ",", "100", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "Delimiter", ",", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<Stalled Node 1\>\"", ",", "Bold"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h1c", ",", "5", ",", "\"\<Position\>\""}], "}"}], ",", "2", 
     ",", 
     RowBox[{"Dynamic", "[", "width", "]"}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h1s", ",", "40", ",", "\"\<Start Time\>\""}], "}"}], ",", "1", 
     ",", "100", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h1e", ",", "60", ",", "\"\<End Time\>\""}], "}"}], ",", 
     RowBox[{"Dynamic", "[", 
      RowBox[{"h1s", "+", "1"}], "]"}], ",", "101", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "Delimiter", ",", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<Stalled Node 2\>\"", ",", "Bold"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h2c", ",", "15", ",", "\"\<Position\>\""}], "}"}], ",", "2", 
     ",", 
     RowBox[{"Dynamic", "[", "width", "]"}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h2s", ",", "65", ",", "\"\<Start Time\>\""}], "}"}], ",", "1", 
     ",", "100", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h2e", ",", "85", ",", "\"\<End Time\>\""}], "}"}], ",", 
     RowBox[{"Dynamic", "[", 
      RowBox[{"h2s", "+", "1"}], "]"}], ",", "101", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.962072021099596*^9, 3.9620720211020613`*^9}, 
   3.9620720562746763`*^9},
 CellLabel->
  "In[2848]:=",ExpressionUUID->"dce894fa-a1b3-48c7-b092-d13292e82a71"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`h1c$$ = 5, $CellContext`h1e$$ = 
    60, $CellContext`h1s$$ = 40, $CellContext`h2c$$ = 15, $CellContext`h2e$$ =
     85, $CellContext`h2s$$ = 65, $CellContext`recEnd$$ = 
    30, $CellContext`recStart$$ = 20, $CellContext`width$$ = 25, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`width$$], 25, "Link Width"}, 10, 40, 1, ControlType -> 
      Manipulator}, {
      Hold[
       Style["Receiver Error (Neg-ACK burst)", Bold]], 
      Manipulate`Dump`ThisIsNotAControl, ControlType -> None}, {{
       Hold[$CellContext`recStart$$], 20, "Start Time"}, 1, 100, 1, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`recEnd$$], 30, "End Time"}, 
      Dynamic[$CellContext`recStart$$ + 1], 100, 1, ControlType -> 
      Manipulator}, {
      Hold[
       Style["Stalled Node 1", Bold]], Manipulate`Dump`ThisIsNotAControl, 
      ControlType -> None}, {{
       Hold[$CellContext`h1c$$], 5, "Position"}, 2, 
      Dynamic[$CellContext`width$$], 1, ControlType -> Manipulator}, {{
       Hold[$CellContext`h1s$$], 40, "Start Time"}, 1, 100, 1, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`h1e$$], 60, "End Time"}, 
      Dynamic[$CellContext`h1s$$ + 1], 101, 1, ControlType -> Manipulator}, {
      Hold[
       Style["Stalled Node 2", Bold]], Manipulate`Dump`ThisIsNotAControl, 
      ControlType -> None}, {{
       Hold[$CellContext`h2c$$], 15, "Position"}, 2, 
      Dynamic[$CellContext`width$$], 1, ControlType -> Manipulator}, {{
       Hold[$CellContext`h2s$$], 65, "Start Time"}, 1, 100, 1, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`h2e$$], 85, "End Time"}, 
      Dynamic[$CellContext`h2s$$ + 1], 101, 1, ControlType -> Manipulator}}, 
    Typeset`size$$ = {563., {238.67974853515625`, 248.32025146484375`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`h1c$$ = 5, $CellContext`h1e$$ = 
        60, $CellContext`h1s$$ = 40, $CellContext`h2c$$ = 
        15, $CellContext`h2e$$ = 85, $CellContext`h2s$$ = 
        65, $CellContext`recEnd$$ = 30, $CellContext`recStart$$ = 
        20, $CellContext`width$$ = 25}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Column[{
         Style["Daedaelus Network Automaton", 18, Bold], 
         Style[
         "One-dimensional resilient link \[Dash] local rules only", 12, Gray], 
         $CellContext`OutputGraphic[
          $CellContext`runSim[$CellContext`width$$, 
           100, {{$CellContext`h1c$$, $CellContext`h1s$$, \
$CellContext`h1e$$}, {$CellContext`h2c$$, $CellContext`h2s$$, \
$CellContext`h2e$$}}, {$CellContext`recStart$$, $CellContext`recEnd$$}]]}, 
        Alignment -> Center], 
      "Specifications" :> {{{$CellContext`width$$, 25, "Link Width"}, 10, 40, 
         1, Appearance -> "Labeled"}, Delimiter, 
        Style[
        "Receiver Error (Neg-ACK burst)", 
         Bold], {{$CellContext`recStart$$, 20, "Start Time"}, 1, 100, 1, 
         Appearance -> "Labeled"}, {{$CellContext`recEnd$$, 30, "End Time"}, 
         Dynamic[$CellContext`recStart$$ + 1], 100, 1, Appearance -> 
         "Labeled"}, Delimiter, 
        Style[
        "Stalled Node 1", Bold], {{$CellContext`h1c$$, 5, "Position"}, 2, 
         Dynamic[$CellContext`width$$], 1, Appearance -> 
         "Labeled"}, {{$CellContext`h1s$$, 40, "Start Time"}, 1, 100, 1, 
         Appearance -> "Labeled"}, {{$CellContext`h1e$$, 60, "End Time"}, 
         Dynamic[$CellContext`h1s$$ + 1], 101, 1, Appearance -> "Labeled"}, 
        Delimiter, 
        Style[
        "Stalled Node 2", Bold], {{$CellContext`h2c$$, 15, "Position"}, 2, 
         Dynamic[$CellContext`width$$], 1, Appearance -> 
         "Labeled"}, {{$CellContext`h2s$$, 65, "Start Time"}, 1, 100, 1, 
         Appearance -> "Labeled"}, {{$CellContext`h2e$$, 85, "End Time"}, 
         Dynamic[$CellContext`h2s$$ + 1], 101, 1, Appearance -> "Labeled"}}, 
      "Options" :> {ControlPlacement -> Left}, "DefaultOptions" :> {}],
     ImageSizeCache->{996., {274., 284.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`OutputGraphic[
         Pattern[$CellContext`arr, 
          Blank[]]] := 
       Module[{$CellContext`h, $CellContext`w}, {$CellContext`h, \
$CellContext`w} = Dimensions[$CellContext`arr]; Graphics[{{
             EdgeForm[
              GrayLevel[0.9]], 
             FaceForm[], 
             Table[
              
              Rectangle[{$CellContext`c, -$CellContext`r}], {$CellContext`c, \
$CellContext`w}, {$CellContext`r, $CellContext`h}]}, 
            Table[
             $CellContext`numberToGraphics[
              
              Part[$CellContext`arr, $CellContext`r, $CellContext`c], \
$CellContext`c, $CellContext`r], {$CellContext`c, $CellContext`w}, \
{$CellContext`r, $CellContext`h}]}, ImageSize -> {450, 350}, 
           PlotRange -> {{0, $CellContext`w + 1}, {-$CellContext`h, 1}}, 
           PlotRangePadding -> 0.2, AspectRatio -> 
           Automatic]], $CellContext`numberToGraphics[
         Pattern[$CellContext`num, 
          Blank[]], 
         Pattern[$CellContext`w, 
          Blank[]], 
         Pattern[$CellContext`h, 
          Blank[]]] := 
       Module[{$CellContext`state = \
$CellContext`stateDecode[$CellContext`num], $CellContext`pos = \
{$CellContext`w, -$CellContext`h}, $CellContext`g = {}}, If[
           Or[
           Part[$CellContext`state, 1] == 1, Part[$CellContext`state, 1] == 
            2], 
           AppendTo[$CellContext`g, 
            $CellContext`wallGlyph[$CellContext`pos]]]; 
         If[Part[$CellContext`state, 1] == 3, 
           AppendTo[$CellContext`g, 
            $CellContext`errGlyph[$CellContext`pos]]]; 
         If[Part[$CellContext`state, 4] == 1, 
           AppendTo[$CellContext`g, {
             Opacity[0.4], Gray, 
             Rectangle[$CellContext`pos]}]]; 
         If[Part[$CellContext`state, 2] == 1, 
           AppendTo[$CellContext`g, 
            $CellContext`packetGlyph[$CellContext`pos]]]; 
         If[Part[$CellContext`state, 3] == 1, 
           AppendTo[$CellContext`g, 
            $CellContext`ackGlyph[$CellContext`pos]]]; 
         If[Part[$CellContext`state, 3] == 2, 
           AppendTo[$CellContext`g, 
            $CellContext`nackGlyph[$CellContext`pos]]]; 
         Flatten[$CellContext`g]], $CellContext`stateDecode[
         Pattern[$CellContext`n, 
          Blank[Integer]]] := 
       IntegerDigits[$CellContext`n, 4, 4], $CellContext`wallGlyph[
         Pattern[$CellContext`pos, 
          Blank[]]] := {Black, 
         Rectangle[$CellContext`pos]}, $CellContext`errGlyph[
         Pattern[$CellContext`pos, 
          Blank[]]] := {
         RGBColor[0.8, 0, 0], 
         Rectangle[$CellContext`pos]}, $CellContext`packetGlyph[
         Pattern[$CellContext`pos, 
          Blank[]]] := {
         Opacity[0.9], 
         RGBColor[0.2, 0.4, 0.8], 
         Rotate[
          
          Rectangle[$CellContext`pos + {0.1, 0.3}, $CellContext`pos + {0.9, 
            0.7}], (-45) 
          Degree, $CellContext`pos + {0.5, 0.5}]}, $CellContext`ackGlyph[
         Pattern[$CellContext`pos, 
          Blank[]]] := {
         Opacity[0.9], Orange, 
         Rotate[
          
          Rectangle[$CellContext`pos + {0.1, 0.3}, $CellContext`pos + {0.9, 
            0.7}], 45 
          Degree, $CellContext`pos + {0.5, 0.5}]}, $CellContext`nackGlyph[
         Pattern[$CellContext`pos, 
          Blank[]]] := {
         Opacity[0.9], Red, 
         Rotate[
          
          Rectangle[$CellContext`pos + {0.1, 0.3}, $CellContext`pos + {0.9, 
            0.7}], 45 
          Degree, $CellContext`pos + {0.5, 0.5}]}, $CellContext`runSim[
         Pattern[$CellContext`width, 
          Blank[]], 
         Pattern[$CellContext`steps, 
          Blank[]], 
         Pattern[$CellContext`holds, 
          Blank[]], 
         Pattern[$CellContext`recvErr, 
          Blank[]]] := 
       Module[{$CellContext`t = 
          1, $CellContext`st, $CellContext`out = {}, $CellContext`col, \
$CellContext`t0, $CellContext`t1}, $CellContext`st = 
          ConstantArray[0, $CellContext`width + 2]; 
         Part[$CellContext`st, 1] = $CellContext`wallS; 
         Part[$CellContext`st, -1] = $CellContext`receiverS; 
         While[$CellContext`t <= $CellContext`steps, If[
             And[
              EvenQ[$CellContext`t], 
              Not[
               $CellContext`hasPacket[
                $CellContext`stateDecode[
                 Part[$CellContext`st, 2]]]]], 
             AddTo[
              
              Part[$CellContext`st, 
               2], $CellContext`packetS]]; {$CellContext`t0, $CellContext`t1} = \
$CellContext`recvErr; If[
             
             Inequality[$CellContext`t0, LessEqual, $CellContext`t, 
              Less, $CellContext`t1], 
             Part[$CellContext`st, -1] = $CellContext`errorS, 
             If[
             Part[$CellContext`st, -1] === $CellContext`errorS, 
              Part[$CellContext`st, -1] = $CellContext`receiverS]]; 
           Do[{$CellContext`col, $CellContext`t0, $CellContext`t1} = \
$CellContext`h; If[
               
               Inequality[$CellContext`t0, LessEqual, $CellContext`t, 
                Less, $CellContext`t1], 
               If[
                Not[
                 $CellContext`isHold[
                  $CellContext`stateDecode[
                   Part[$CellContext`st, $CellContext`col]]]], 
                AddTo[
                 
                 Part[$CellContext`st, $CellContext`col], \
$CellContext`holdS]], 
               If[
                $CellContext`isHold[
                 $CellContext`stateDecode[
                  Part[$CellContext`st, $CellContext`col]]], 
                SubtractFrom[
                 
                 Part[$CellContext`st, $CellContext`col], \
$CellContext`holdS]]], {$CellContext`h, $CellContext`holds}]; 
           AppendTo[$CellContext`out, $CellContext`st]; $CellContext`st = 
            CellularAutomaton[{$CellContext`caRule, {}, 1}][$CellContext`st]; 
           Increment[$CellContext`t]]; $CellContext`out], $CellContext`wallS = 
       64, $CellContext`receiverS = 128, $CellContext`hasPacket[
         Pattern[$CellContext`s, 
          Blank[]]] := Part[$CellContext`s, 2] == 1, $CellContext`packetS = 
       16, $CellContext`errorS = 192, $CellContext`isHold[
         Pattern[$CellContext`s, 
          Blank[]]] := Part[$CellContext`s, 4] == 1, $CellContext`holdS = 
       1, $CellContext`caRule = Function[{$CellContext`nb}, 
         Module[{$CellContext`l, $CellContext`c, $CellContext`r, \
$CellContext`st}, {$CellContext`l, $CellContext`c, $CellContext`r} = 
           Map[$CellContext`stateDecode, $CellContext`nb]; If[
            $CellContext`isSpecial[$CellContext`c], 
            $CellContext`stateEncode[$CellContext`c], $CellContext`st = \
$CellContext`c; $CellContext`st = $CellContext`handlePacket[$CellContext`l, \
$CellContext`c, $CellContext`r, $CellContext`st]; $CellContext`st = \
$CellContext`handleAck[$CellContext`l, $CellContext`c, $CellContext`r, \
$CellContext`st]; $CellContext`stateEncode[$CellContext`st]]]], \
$CellContext`isSpecial[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Or[Part[$CellContext`s, 1] >= 1, Part[$CellContext`s, 4] == 
         1], $CellContext`stateEncode[
         Pattern[$CellContext`s, 
          Blank[List]]] := 
       FromDigits[$CellContext`s, 4], $CellContext`handlePacket[
         Pattern[$CellContext`left, 
          Blank[]], 
         Pattern[$CellContext`centre, 
          Blank[]], 
         Pattern[$CellContext`right, 
          Blank[]], 
         Pattern[$CellContext`st, 
          Blank[]]] := Module[{$CellContext`s = $CellContext`st}, If[
           Or[
            $CellContext`hasNegAck[$CellContext`right], 
            $CellContext`hasNegAck[$CellContext`centre]], 
           Part[$CellContext`s, 2] = 0; Return[$CellContext`s]]; If[
           And[
            $CellContext`hasPacket[$CellContext`left], 
            Not[
             $CellContext`hasPacket[$CellContext`centre]], 
            Not[
             $CellContext`isHold[$CellContext`centre]], 
            Not[
             $CellContext`isHold[$CellContext`left]]], 
           Part[$CellContext`s, 2] = 1]; If[
           And[
            $CellContext`hasPacket[$CellContext`centre], 
            Not[
             $CellContext`hasPacket[$CellContext`right]], 
            Not[
             $CellContext`isHold[$CellContext`right]]], 
           Part[$CellContext`s, 2] = 
           0]; $CellContext`s], $CellContext`hasNegAck[
         Pattern[$CellContext`s, 
          Blank[]]] := Part[$CellContext`s, 3] == 2, $CellContext`handleAck[
         Pattern[$CellContext`left, 
          Blank[]], 
         Pattern[$CellContext`centre, 
          Blank[]], 
         Pattern[$CellContext`right, 
          Blank[]], 
         Pattern[$CellContext`st, 
          Blank[]]] := Module[{$CellContext`s = $CellContext`st}, If[
           And[
            $CellContext`hasAck[$CellContext`right], 
            Not[
             $CellContext`hasAck[$CellContext`centre]], 
            Not[
             $CellContext`isHold[$CellContext`right]], 
            Not[
             $CellContext`isHold[$CellContext`centre]]], 
           Part[$CellContext`s, 3] = Part[$CellContext`right, 3]; If[
             And[
              $CellContext`hasPacket[$CellContext`s], 
              $CellContext`hasNegAck[$CellContext`right]], 
             Part[$CellContext`s, 2] = 0]]; If[
           And[
            $CellContext`hasAck[$CellContext`centre], 
            Not[
             $CellContext`hasAck[$CellContext`left]], 
            Not[
             $CellContext`isHold[$CellContext`left]]], 
           Part[$CellContext`s, 3] = 0]; If[
           And[
            $CellContext`isReceiver[$CellContext`right], 
            $CellContext`hasPacket[$CellContext`centre]], 
           Part[$CellContext`s, 3] = 
           If[Part[$CellContext`right, 1] == 2, 1, 
             2]]; $CellContext`s], $CellContext`hasAck[
         Pattern[$CellContext`s, 
          Blank[]]] := Part[$CellContext`s, 3] >= 1, $CellContext`isReceiver[
         Pattern[$CellContext`s, 
          Blank[]]] := 
       Or[Part[$CellContext`s, 1] == 2, Part[$CellContext`s, 1] == 3]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.962072021380519*^9, 3.962072058273077*^9, 3.962072088439898*^9, {
   3.962076688740617*^9, 3.962076701116945*^9}, {3.962076763221909*^9, 
   3.962076776038216*^9}, 3.962076816289475*^9, {3.962077874345098*^9, 
   3.962077901256609*^9}, 3.962080244459093*^9, {3.9620803131807747`*^9, 
   3.9620803467631187`*^9}},
 CellLabel->
  "Out[2875]=",ExpressionUUID->"02058f8a-f51b-4eed-b852-5f86f0ddeb8d"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
zKJTU1NlW3OiFS0mJka1SvarFy5atEiWqPy8evXqGRkZetX06dNlYY0aNTIz
MwM1WJPWzpkzZ/Xq1WqtNVeXOmWrp556Ss0hs69Qbm6u2RfZdvHixcuXLy83
088CQaiZ1bOysuTClx/8fYmTCqVaqVzNsh7pvgL+K+FcXb1d1qpVy/YO9dJL
L8nyW2+9VS/ZsGGDLLnmmmv87G3pQ64OAAAAABVTacjV1SwrI0aM0EuuuOIK
WTJu3Lgnn3xSfYtcyA8ffvihde9mri59Ofvss2Xh448/Hmh3ubm5devWlTKT
J0/WC6VmWSK7u/jii+WHGTNm6FXt2rWTJffcc0+QBot169bde++91atXV61t
1KjRmDFjrLl6ly5dzAlmY2JirH3p06dPmzZtdCU1a9a03utepPz8/NTU1P37
98f/1z6gdNtbaPfu3XFxcTt27CiOVzmpViqXXah9RbrHQBH0C7i8mMtLepGf
B1nTcnN2l5OFrLn6rELmVi7faKRkq1atPv30U9ty9R73pz/9SS+ZN2+eLPnf
//1f9+9iZRG5OgAAAABUTKU5V//jH/+o/m3atKkOogcMGKCL2XL11atXn3PO
ObLkX//6V/BGPvLII1Ls3Xff1Utuuukm1YbXXntNfnj77bf1qmbNmsmS7t27
B2lwYmLiJZdcoloojb/hhhvU3e+XX365ztXHjh0rDW7UqJEsadiw4V2FNm/e
bO2L6vKFF174l7/8Rd08Lz755JNgo2yRmpoa/3uRzoeAIsirxJ49e3bu3Llx
48aEhITieJWTaqVy2YXsiFwdpZ/tZTwtLS34K38J5+qBqGeUtGzZUi8ZNWqU
LGnVqlVKSoq8U7/66qvydrZw4UL1ZbRyg1wdAAAAACqm0pyri++++04t2bZt
2+233y5LLr/8cl3MmquvXbu2fv368utLL72Ul5cXvGEDBgyQkjfccIP6NSkp
qXKhgwcPTps2TVZdddVVapX0V90wL/UHafADDzwgS84888yVK1fqvquQvFIo
86tXsjw1dc+ePY8++qgsufjii4N3R7PeqU6ujjJB3awuLxHr1q07fPhwcbzK
SbVSuexC3bIe6R4DRbC9jMsLe/BXfqdnkAabByYQl280jubMmaPewubOnasX
9urVS5bcd9999erVs35Rq2HDhps2bQpnd6UKuToAAAAAVEylOVf/5z//aS2m
/myvUqWKntNV5+qxsbENGjSQn9988003Uyhv375d3U+empoqv44bN05+bdas
2bHCWdBr1Kghv+7evVvv9LzzzrNWa2twTk5OtWrVzJlh1q5dK60NKVe//fbb
rQs3bdqkBvDgwYNFduoYuTrKIJWr79ixY/Xq1Xl5ecXxKifVSuWyC3J1lAll
Llfftm2begu2zcDWvn179RZ29tlnt23bNioq6vnnn1dztZ1//vmylec9lirk
6gAAAABQMZXmXL1fv37WYjt37lS1HThwQC1RWfTLL7987rnnyg/t2rVz2TCh
bib/8ccf5ecXXnhBfv7ss8/Uqvvvv19+/fbbb+XnDz74QH5+5plngjRYBlA1
LD093baXP/3pTyHl6u3bt7cuPHLkiJoNxuUxYh4YlDk6V5eT/OTJk8XxKifV
SuXk6igrvM0DY6boboSfqx88ePCyyy6T96nrrrvO1tTnnntOljdp0kS/a4vY
2Fj15bJXXnnF2x5LG3J1AAAAAKiYSnOuPmnSJGsx+ePdMVfXVBLuUuvWrXWO
3bhxY/l51apValVUVJS+7+6vf/2r/Dx8+PAgDR4yZIj8eskll5h7admyZUi5
uvUZrMoZZ5xhbVtwPLcUZY7K1bdv3y4nefHl6lK57IJcHWWCt+eWRiRXT0tL
u/HGG9V8ZdJy29q4uLj58+cnJCTYlss7nWxy5ZVXethjKUSuDrh3+vTp1atX
ryqKlJH3a3n1i3R7I6Nbt24NDNOnT490u4rWs2dPs+VTpkyJdLvC5Xjeuj8/
9+zZY57kx48fL9Y2I5CvvvrKPEvHjx9fws3Izs7WJ8OyZcv69OkjDVO/yn8t
SrgxAIBwlKdcvXr16vKu5LJtUrma+2Xjxo3qO+k6u9ixY4csOeecc6SzKtaO
j48P0mD5QX5t3LixuRf1gNQSy9WBMkeuO3lJyczM3LdvXzH9BS3VSuWyC9mR
m3migLIlUrl6VlbWHXfcoeZL18/gdmP16tXqXTs5OTnUnZZC5OqAe3v27KkU
Cvnf+LXXXvvGG29UqKusXbt25lCMHDky0u0q2n/+8x+z5cOHD490u8LleN6+
+eabLje/7bbbzM2XLFlSnE1GQJ9++ql5OAYOHFjCzejRo0eg171x48aVcGMA
AOEoB7n65ZdfLq265ppr5OcLL7zQvDXO0aFDh6pUqVK1atXPP/9cNnzhhRes
a6+88kpZ2LVrV/n36quvDt7g9evXq4ZJnbaSarYZcnUgEJWrZ2dny5WbkZFR
HK9yUq1ULrsgV0e5FJFcXa6mhx9+WKVe69atcywzYMCAXr167dq1y7Y8Ojpa
NqxVq5Z+WkqZRq4OuBdqrm71pz/9qWfPnhXhLl9y9dIm0Hkrb51uNo9Iri7/
+039vczMzGLdY1lRSnL16667LtBrXfPmzUu4MVacOWFiAIEKqBzk6iqL3r59
u3oamvzXxeWf6rfccouUr1Onjvw7ceJE66r33ntPr5Kfgzc4NzdXPerUloov
WLBANdjM1e+77z5bneTqqJh0rp6YmJicnFwcr3JSrVROro7yKvjTSAOl6Cb3
e5TrqFWrVvLeVLdu3SBvT+pu9nfffde2XL3D3nPPPR47XMqQqwPuhZOrK82a
NUtISIh0P4oXuXppE+i8Pe+889LS0orcvORz9ZMnT1atWtW2x+rVqxffHsuQ
0pCrb926NcirnPz5/8svv5RkezTOnDAxgEDFVDK5+oYNGzIM2dnZqpgvubqY
MWOGesrnq6++6qZ5H3/8saqwWrVqtqetqbvplFmzZtk2NBv89NNPq3p++OGH
3NxcWbJy5Ur5v5aqwZqrd+zYsVLhfXqbNm2y1kmujoopPz8/Ly8vJycnJSUl
Pj6+OF7lpFqpXHYhOyJXR/lT8rm6CsaFvFeab+66mHr4iLyLDRs2TC2RC1D+
dFXbdu/e3eeBiBBydcC98HP1SoVfk5kzZ06ku1KMyNVLmyDnbYsWLYrcvORz
9RMnTph7rFq1avHtsQwpDbm6TiECkf9BlWR7NM6cMDGAQMVUMrm6o1tvvVUV
8ytXF506dVJlBg8eXGTzfvrpJ1X4zjvvtK06cuTIWWedVanw48XMzEzbWrPB
MizXXnutqq1u3boNGjSQH2rWrHnDDTdU+n2uPmPGDD0C559//po1awL1RSFX
R7mXn58vV1x6evru3btzcnL8fYmTCqVaqVx2QaiOcsmajc8pZF1yqpCPufr0
6dOD/zGo51rPyMi499571cKLL75Yfj733HPVr//85z/d/1+ilCNXB9zzJVcX
NWrUiIuLi3Rvigu5emkT/Lz95ptvgm9Orl6qlIZc/bLLLgtyRlUqTCdKsj0a
Z06YGECgYirWXD0+Pj7I+4X8H0MVu/HGGysV/ndRb6imN588ebK1tqSkJLVh
YmKiWnLPPffIr1FRUbpMfn7+Y489VqnwBrnY2NjgzcvNzVUzvfTs2dNcq+q5
++67zVVmg8XOnTtbtWql71G/+uqrFyxYoGZ9sc0k07lz54YNG6piMTExgfqi
qBlmdPwOlD9y2crFmJmZmZCQcODAAX9f4qRCqVYql12Qq6NcKuFcfdSoUcH/
GIyLi9OF5bp78803zzzzTL1W3v7efvvtchOqHyNXB0IRKJ+89dZb//pf8t9s
+e+0+gpqENdcc41cgJHuULEgVy9tgufqtWrV+vnnn4NsTq5eqkQ8V5e/64Oc
TkqVKlUSExNLrEkaZ06YGECgYirWXL0Cys/P37Jly/79+4ssmZmZefjw4RJo
ElDK6algUlNTd+7c6eOzXaQqqVCqZRIYlGPBc3XrPDCzCoWZq3sg/21Yu3bt
xIkT9a3s5Qm5OuBeoHzyxIkTtpLqJeuRRx4x56rV/v3vf0ekF8WNXL20KfJ7
Fk2bNv3tt98CbU6uXqpEPFeXF67gp5PSt2/fEmuSxpkTJgYQqJjI1QFEnL5l
PT4+fu/evX69vklVUiE3q6N8K/25evlGrg645z5X15YsWaKnkLKpVq3a4cOH
A20oda5YseLTTz995pln7rvvvhtuuOGmm276+9///sILL/Tp02fnzp2hNl72
NXDgwPfee++xxx6Tqm6++eaWLVvKr4MHD87IyHBfz4EDB/r16/fWW29JY+66
66433nhDqo2NjdUFQs3V/e1pON0sMlePiYmZ8nszZsw4ffq0Y22pqalTDMG7
ExcX16tXr+eee+6BBx5o2rTpjTfeKD/Ir127dt20aVNI42DlZv6iDz/8MNDm
HnJ1b0dh//79apQmTZrk2EjbSKakpJgj7DjD0smTJ82SK1eudGzG/PnzbSXn
zp0bpLNHjx4dO3asnDxPP/307bff3qRJEzlqr7zyyhdffCEndpANhVw4ZsPk
//wFhZ/Nffvtty+//LJcZXfffXerVq3UQ2bd5+qnTp2aPn26WX84n4nISJ5/
/vm2vd9yyy2NGze2LZTjHrwqH6+mUM+cQE0qpkMpZKcdO3aUy0Euajma//73
v0eNGuV4L9bGjRu//vrr1q1by6g2a9ZMLpyPP/54165dwfeueXs59WsAC4pz
DOUc6NGjx7PPPivVSr+eeuqpTp06SQH5M9nl4AAIhFwdQMRZb1nfsWNHQkJC
+C9uUolUxc3qKPesibpV8FlfyNX9Qq4OuOchVy8ojCwaNWrkuOHgwYPN8nJh
fvnll/Xr13fcRLvuuusWLlzoptmbN29+9tlnq1evHqiqGjVqtGrVatu2bcHr
kY48//zz1apVc6zk6aefTklJKQglV/e3p+F3s8hc/ZJLLjELZGdnO9Y2evRo
s3CgLyn88MMP6vlcQVx++eVTpkwpchxMbnL1KlWqLFu2zHHzkHL1cI5Cz549
i2yn9u6773733Xfm8scff9ysecOGDWZJGXCzpFzLNWvWtJU866yzTp065Tiw
r732mpqXNZCrrrqqT58+x48fdxyuBx54wNxk7dq169atu/jii23L1aC5z9Xb
tm3r2KTnnnvOsTFuLF682KywR48ebdq0MZfv3r07SFU+Xk2hnjlm/cV3KOUv
OBlwx5nBLrroIut1JH/xvfHGG4HmEPvnP/8Z/DFe4bychj+AxTqGJ0+ebN++
faBXlcsuu2z58uVBRgZAkcjVAZQG6pb1rKws+aNyx44dYU60LptLJVKVVMjN
6ijfyNUji1wdcM9bri6mTp3quOEdd9xhK7l79+4inwlo9corrzgmftqYMWPM
nNBR7dq1J02aFKiebdu2XXDBBcFrqFu3bmxsrMtc3d+e+tLNiOTq8n+8hx56
yP04PPLII8dCnJnf5fN2pXeOfXGfq4d5FEIN9xwfhSa9MBvWv39/x0rUJ0FW
mzZtMou1aNHCrHPatGlywrts7V/+8peDBw+alTgGiZMnT9aPPLMKKVcfMmSI
Y0vuuuuuX3/91WyJS61btzbr3L59+/z5883lnTt3DlJV6cnVi+9QxsTE3Hnn
nUFqq1Klyvjx42Xzffv2mff821x11VXyh6Hj+IT5chp+rl58Y7hy5Up50Qte
oQxjjx49HEcGgBvk6gBKCT0bTGJiovwPU/6D5O1lTTaUzaUSZoBBRRBqfk6u
7i9ydcA9z7l6QYDEoHLlysnJybrMrl27zDkWitSmTZtAO3WM4IJzTCekYUXe
BqlceeWVr7/+urnclqv721O/ulnyufrJkyfvv//+UBvfvHlz2TDQQTe5zNXF
s88+a27uMlcP/yh4CPccs0Q1X4rVE0884VjJ999/bysph9ssFhUVZSvWrVs3
901Vzj33XHMyH8eXhRtuuMGxBve5+qJFixy/V3LNNdcECmbdOH78+DnnnGOr
U932L6vMG5X//Oc/B6mtlOTqxXooW7RoUWRtjRs3lr/17rvvPje7fvLJJ83B
Cf/lNMxcvVjHMNDFa1O1alX58znI+QYgCHJ1AKWHvLwcOXIkIyMjMTFxy5Yt
O3bsCGnOUiksm8iGsrn8LFXxeoVyj1w9ssjVAffCydUdcyGxYMECXeaee+5x
HUv8ztKlS809RkdHe6iqSpUq5iy4Dz74oLeGabZc3cee+tjNks/Vx4wZ46Hx
lUJ8Dqz7XF1MmDDBtrmbXN2Xo+Ah3HP8EMecDt3x9m/x1ltv2Uq+8cYbZjH5
n7m1zOLFiwNN1hHcVVddlZeXZ63KMUgMxGWu/vPPP5999tlmmcaNGzveJOze
zJkzzWo7dOig1j711FPm2iDPBSgNuXqkDqXNTTfd5L7w+vXrbYMT/stpOLl6
KRlD8dBDDwU5ewEEQa4OoFRR0XpmZmZKSor8z3bz5s27du1yfDCNlRSQYlJY
NpEN5VdCdQAlgFwdcC+cXD0jI8PxDtLRo0erAgsXLgwUF9SvX/+BBx648847
a9Wq5VigefPmtt3JfyQuvPBCx8JSyYMPPvjYY4+Zt54ql156qfVJcLNnzw7U
MPesObCPPfWxmwWRyNWvvvpqx5Z36NBh/PjxU6dO/fjjjx0z0ssuu6zIU05z
PG8vuuiiZ5991lxer14922SGRebqfh2FqKgoxzKO5GAVFM5Lb66yTT+yc+fO
QJVce+21trFq2rSprUyjRo2sBeRCDtTZSoWz0Fx//fVBJsR4/fXXrbX5nqv/
8ssvl19+uVlADqvt0wEPnnnmGbNmPbW1nLHm2vfffz9QbT5eTR7OnIKIHspw
vPfee9b9+vJy6m0AS+EYyp/Sbs5kADbk6gBKG3mRURPCpKWlJSQkbN++PTY2
Ni4uTv6uSU1NPXLkyMlC8oP8KgtllRSQYlJYNlHTv/BKBaAEkKsD7oWTqwvH
B1P26tVLrXUMda+77rqtW7eePn1alUlKSrr33nvNYjVr1tRllK5duzo2tW/f
vnp25VOnTk2ePLlq1apmMWuY/Pe//92xqho1arzzzjvyArJ79+7o6OjmzZs7
FlOsubqPPfWxm4EaVny5urwCV6lSxVZARnXHjh3WehITEx33a51BKLhAubq0
3LHmu+66yzr3cpG5ul9HQY7s8UJ5eXlmscqVKx+3UC2UP+3NMXz44Yet3R82
bJhj81Sd1i+WSmvPOOMMWxnb3Djdu3d3rOqqq67S995LPV999ZXZMLVHOaC6
tiBBYq1ate65556PPvpowoQJQ4YMee+991RTg+TqMiyOs3lXr149JibG5dkS
iPxtUrt2bVvN5557rp6SSP5+MT86lBPM9tKk+Xg1eThzSuxQyjn//vvvy/Ui
f+7JqRjoqxPKM888M3PmzJ07d06dOjXQXeh/+ctfrCPjy8uptwEssTEUDz74
4IgRI2RkNm7cKDuV10nHYubXbQC4Qa4OoBSS/5bIS01OTo78Hzg1NfXAgQO7
du2S/+HExsbKS9aqQvKD/CoLZZUUkGJSWDaRDWXzSPcAQIVArg64F2au/te/
/tXcVkdDZu5Rp04d+R+CrZK0tDTHmw+TkpKsxRxvhG7btq3ZqgEDBpgl77nn
HrVW/kMS6EmUY8eOtVX18ssvO5as9Ptc3cee+tVNpYRz9R07dpgF5CQxqxo1
apRZcuXKlY77NQXK1WXV0qVLHfOunj176s2LzNX9PQpCLiizWNWqVR17Z86h
cf7551sLPP/882Zt2owZM3TJtWvXmgVsU+78+c9/NsvINSL/n7c17JNPPnHc
45dffqnLBAoS69evv3HjRsf+BsnVX3rpJXNV5cqVgzyP2L0JEyaYlcserWUc
w1tzwiWlOJ4CHNKZUzKHcsiQIdaq4uLiHL+BIlq3bm0tKa+9t956q1lMXblB
xjycN46QBrDExvDxxx+3PbR6+fLljpPPBH9ULoBAyNUBlE75+flHC+Xk5GRl
ZaWnp6empqakpCQmJh4sJD/Ir7JQVkkBlagLHlQKoMSQqwPuhZmrP/bYY+a2
+m5YqXz57/3888+O9dxyyy1mPdYULi4uzixw3XXX2aIJ7X//939thatUqSL/
RZFVc+bMceyy7fv7ivwHJtAjF63hpF899bGbSgnn6klJSWaBevXqmVMZHD9+
fLchUDdNQXJ10bFjR3PtGWecsWHDBlUgeK7u+1EoCDHc++CDD8zC1ptg//CH
P5gFtPbt2+uS33zzjVnAOie5jIljJbKh2TDphWMu2qRJE13GMUisU6dOkGnJ
A+XqvXr1cmxbnz59AlUVkocfftisfPr06dYyjp+bmJPYK5HN1UvmUNq+OqE4
fv549tlnmw8jluE1S9auXdtaxsc3jpAGsMTG8Morr5T/rJoVtmzZ0iz8/PPP
OzYVQHDk6gBKM52uHzlyJCcnJ7tQViH1syxUU6mTqAMoeeTqgHth5uqOE6q8
+uqroTajRYsWZj06BS0IEA+++eabgSp0TOoWL14sq3r06GGuqlev3jGnoEPE
xsY6DlFIz9l02VMfu6mU/Pzql112mVmmVq1arVu3njdvnvzP0MOgmYLn6seP
H7/xxhvNAv/zP/8j/y8tKCpX9/0oFIQY7i1atMgs/OOPP6q1Bw8etC6vUqXK
008/bV1y880366rMwPPKK6+07suxsw0bNgzU2UDPJlADWxAgSHz00UcDVRho
AO+55x7H23fN5NmbjIwMc4acmjVr2p47mZCQYLbhvPPOc3yFjGyuXjKH0noz
tvbtt9+aJWVzs2R8fLxZ0paru1fkG0dBiJdeyYxhoM9lHIdR3mS9DQ5QwZGr
AygT1Mwwjpj1BUCkkKsD7oWZq5uPRBSfffaZY+H9+/fPnj3766+/7tChw8sv
v9yyZct7771XanBMYiv9Ph4J9I37swNwLKymeWnXrp256vbbbw/URxkKx5lv
g+TqnnvqYzeVks/VHSfu0KpWrXrddde9+uqrw4YNMyd2cC94ri62b9/uOEdE
mzZtCorK1X0/CgUhhnvyRmZOVSStUmtts5fceOONU6ZMsVWrH5x67bXX2uqx
ZXqOnb3rrrsCjfy+ffsc+7t3715VwDFItE7CY3LM1R09+eST7r/UEJzjHPWO
N2Nff/31Zsn58+ebJSObq5fMoXSc1n7evHlmyY4dOzru15yyPniuHs4bR0gD
WGJjOGrUKMfaoqOjzcLk6oA35OoAAADekKsD7oWZq1944YXmtravzOfm5nbv
3t0xmwrOGo+88soroW5uUg9UbdWqlbnqjTfeCNJNx6lgzFw9/J762E2l5HP1
lStXOgbajmTv77///oEDB4IMvqMic3UxcOBAx53OmTMneK7u+1EoCH2SZ3Nu
GX33r5yr1uXt27dPT0+33dq9YMECKXn06FHzsaq2eU4cZ/AIcnP+qVOnHB9P
oKccdwwSbXfv27jP1UeMGBGknpDcfffdZv3vvffeFsM//vEPs+SLL75o1hnZ
XL1kDuXatWvNqhxzdTmsjvs1vybgmKv78sYR0gCW2BiuXr3asTZZbhYmVwe8
IVcHAADwhlwdcC+cXH3nzp2O206bNk2XmTVrlmP27oY1HmnevLm3Sqw+/PBD
qeqhhx4yV3311VdBevrss8+am9hydV966mM3lZLP1cVPP/1Uu3Zt9w2uVq1a
586dzamYg3CTq58+fdpxnqLzzjvP8U5Xnav7fhQKQs/VzanFGzRooFbZnqk6
e/ZsWdikSRPrQnVz+8qVK809ZmVlWXfk2Nl+/foFGfxrrrnG3GTKlClqrfsw
VnOfq9erV8/DpzCmpKQkx4fbule3bt1jxsxRkc3VI3gofc/V/XrjCGkAIzuG
BeTqgK/I1QEAALwhVwfcCydX79Onj+O2a9asUQVmzpxpRijuWeMRxwekhkpF
nY8++qi5qlu3bkF66njDqjVX96unPnZTiUiuLpYuXRrqjaavvfZakaec5iZX
FykpKeeee67LBuhc3fejUBB6rr5+/XqzfHx8vO3WdKkhJydHyrdt29Za8o47
7pCFX331la2GW265xbYjx3O7a9euQQb/0ksvNTeZNWuWWlusuXqlwkk5wp8K
Jioqyv0eA5k6daqt2sjm6hE8lP7m6j6+cYQ0gJEdwwJydcBX5OoAAADekKsD
7nnO1aWA4316DRo0UNvm5ubWr1/fsfJKhUHKFVdccfPNN99///1PPfWUYxlr
PPLmm2+aBS655JKXAnj++eelctvCOXPmSFWtW7c2q3rmmWeCdNbx9madq/vY
Ux+7qXjL1W23NGtDhw41Cwd5jmRcXFyHDh3OP//8QINjoz+RKZLLXF38+OOP
LveuJ472/SgUhJ6rnzp1Si4lW/nJkyfbutOsWTNVfubMmdblNWrUkHfD5557
zlbDxx9/bNtRmzZtzIbJhoEaJtU63ukdGxurChR3rl4pwKMzQyLjFtIeHT3x
xBO2aovjanJ/5kTwUPqYq/v7xhHSAEZ2DAvI1QFfkasDAAB4Q64OuOc5V+/Z
s6fjhvqu4wEDBphrq1Wr1rFjR9np6dOnrbU5zs1ijUe6dOliFujTp4+HLn/4
4YdmVddee22g8rm5ubbJqxWdq/vYUx+7qXjL1Xfs2OFYm/TILBwkV1dkBH7+
+ecxY8a89dZbN910U5D5N2xzkgfhPlcvCPBJiknn6r4fhYLQc3Vhxobvv/++
7am7+tGQ2dnZtqnUly1bduWVVwbqo9a1a1ezYU2bNg3Uqri4OMfRS05OVgVK
IFevXr36pk2bXI27k0AveqGqVavWkSNHrDUXx9Xk/syJ4KH0MVf3940jpAGM
7BgWkKsDviJXBwAA8IZcHXDPW66+YMGCQM+mXLRokSrj+HhQx3Dy9OnTjRo1
Mgtb45GRI0eaBf71r3956HL//v3Nqs4444zdu3c7lp8wYYJjT3Wu7mNPfeym
UmSu7jiJge1ea818mGYlF7m6TXp6elRUVJ06dcyqmjdv7rKSkHL13NzcK664
wixvozNn349CQYBwr0qVKkE2Me9nvvvuu2+++WbrkujoaF3edg+2HHrb50Fy
zf7666+2vYwaNcpsWO3atdX0MqZhw4aZ5eXy0dPj+5irHzp06IsvvnBcdc01
1xwzpjd3yTE79WbMmDHWmovjanJ/5kTwUPqYq/v7xhHSAEZ2DAvI1QFfkasD
AAB4Q64OuBdqri7Lo6KibHfGao0bN9Z5wt/+9jezgOOtm2vXrnWszRqPpKSk
mPc5N2zYMDEx0bGdsqN3/uvtQm3bts3IyJBVGzdudNxdkyZN8vPzbfXs2rWr
bt26juV1ru5jT33splJkrm7LaZXHH3/c3NeKFSscG29NAqdMmfK5ITMz06yt
e/fuZlWXXnqpYzdNIeXqBYWBVbVq1Rzbr+lc3fejUBAg3KsUeJIQsW/fPlvh
ypUrWxsmPcrNzdXlbfc/mxfpAw88YO7FsbOVAsx9EWi++hYtWugyfuXqMoZq
3P7yl784Dl2oH+hof/7zn83arrzyyhlB1ahRw9zKlnn6ezUp7s+cCB5KH3N1
f984QhrAyI5hAbk64CtydQAAAG/I1QH33OTqclnt3bt3yZIln3zyyYUXXuhY
Xpk9e7be6q677jIL2G7vFMnJyTfeeKNjbbZ45N577zXLNGnSxLyTMDc3t2nT
pmbhXbt2FRTe5RioFy+88MJvv/2m60lPT7/uuusCdVbn6v721K9uKkXm6i1a
tDALVK5ceezYsdZ9SQsdJ5mv9Psk0PGpf45z1ztOe/63v/3NLOko1FxddOrU
ybH9mnWOFH+PQkHhfOmOn0bNnDkzSJsDjbly2223WQvPnz8/eAd79+7tuJf7
7rvPsfy4ceOsxeTCuf/++x1LTpgwQRfzK1cfOHCgWivH+swzzzQLyFm6cOHC
INU62rx5s2MXVq5cGXzDiRMnmltVq1bt8OHDuoy/V5MS0pkTqUPpY67u+xtH
qJdeBC8HcnXAR+TqAAAA3pCrA+75NdWwePXVV601v/jii2aZs846q1evXnFx
cVIgMTHx+++/v/jiiwNVaItHHGfnqFSYLo4bNy4pKUnKZGZmTps27Q9/+INZ
7L777tNVvf7664F2Ku1p165dhw4dWrdu7ZjmaTpX97enPnazwEWu7jjJs/L3
v/+9c+fOPXr0ePrpp80oTLMmgY5z7Iivv/761KlTuti2bduuv/56s5iMeTjn
bfBc/cSJE7feemugXlT6fa7u71FQHOeiadSo0Ycffrhq1aqEhATz6xJBTtRK
xkNIjx49GuQwVTIuKG306NGO5WvUqNG2bdu1a9du3bp19uzZd999t2OxOnXq
yK51bb7n6gUBZtuoVPgFGdv3Aor0wQcfmPU0bNjQen46ysrKchzewYMH6zL+
Xk2a+zMnUofSx1zd9zeOkAYwgmNYQK4O+IpcHQAAwBtydcA9v3L1yy+/3PYI
vyFDhgQp7zipgo1526HjFAFavXr1gqy13p24f//+QPPDu6dzdX976mM3C1zk
6o5JTkisSeDBgwdr1qzpWOyPf/zjE0888cwzzzRr1ixQrrhs2bJwztvgubra
6qyzzgrUEWuu7u9RUBxvZrYyM9UffvghSPnFixfbyt9+++2BCjdo0MD2zEdr
Z++8887gbQtixIgR1tqKI1cXjz76qOPen3rqqSA128gIOH4O8sorr7jZ3PFO
5jvuuEMX8Pdq0tyfOZE6lD7m6r6/cYQ0gBEcw0DnD7k64A25OgAAgDfk6oB7
vuTq9957r3UyBEX+PDn77LPDqdaMR+Lj4x2fd1mkDh062Kr6/PPP3W/uODW3
ztV976mP3SwyVz99+vS1114bTuNtSeBnn33mrR73Dy0NdN4WmauLESNGBGqA
NVf39ygogZ7Oqb377ru2TeTPfMfZnkX16tXN+9uDDH7w/PnAgQPBPykIpGXL
lraqiilXl1cYx4dUVnKaJCSQVatWOdYQfDYe7euvvza3rVy58sGDB1UB36+m
IONjZT1zInIofczVi+ONI9RLL1KXA7k64CNydQAAAG/I1QH3ws/VP/jgA/2s
Upvly5e7SUiaNm3q+J16x2krFi9e3KBBg5Ba+OSTT5p36sprxd///nc3mz/0
0ENt27Y1l+tcvTh66lc3i8zVCwof/xfoQbRW55577pdffmkutyWBv/3221NP
PRVSy0WzZs2CPMHT5DlXLwgwCXwlI1f38SgoOTk5l1xySZBtzVxd3HTTTY6F
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
A0AjVwcAAPCGXB3w4MSJEzocXr58eZHlt2/frvOBjIwMtVAneIMHD/7yyy/N
sEKFLbZUOSsrywyftT59+jjeFenN6dOnzTxEGz58uG62y1xdeuoYbclCGaKu
Xbs67mjMmDGnTp0KZxB0wjNq1KhAW61du9a6SUJCgmNTlV69eqn7mZVAufrC
hQsD1dCpMFnatWuXtby3U2LWrFlB9jJkyBDrvayeM0PrrEedLLl6qMdCTqrv
v/8+SINnz56tC4efq4favFAPQQnn6u5PYMfK8/Ly9EdFcg77/jFccIFy9VAv
ExETExNkk379+tm6FsFrxN9cfdmyZUE6YttFSNdakUI9TL6ctCNGjFBL5s2b
ZzbpwIEDam3nzp1L8psXQPlDrg4AAOANuTrggfxBoZMBPSlKEMePH9cPMNXh
g07wlEGDBsXExOzcuVOWDxkyRC+3TTIzevRovWrs2LFy/W7cuPHHH3/s0aOH
Wjh48GC/nt64efNmva8vv/xy+vTp0rYVK1aMHDnSFo+4zNWVESNGrFmzZsuW
LVKhrZ4+ffr89NNPUon0yxqHHjp0KJxBsN3XKvuV8j///PPChQv1cenVq9cx
y9wIOuGR5bGxsdKAvXv3Ll68WH+eMnPmTF3YMQuVA22OnnR8woQJ1p1a7631
cEroXE71WlbJfmUAp06dqpdbP/rxnBkqw4cPX7Bgwbp162QAvR0L3QDx/fff
x8fHy9iuX79en1SdO3fWWXf4uXqozQv1ECQkJMiu5WRQy/v377/jvxy/Z2Hl
IVdXQjqBdeX5+fk6VO/du3egCXOKj2N/PVwme/bs0Zv07Nlz2rRp8kolo2F9
TvTAgQP1vdCRvUZ8zNXlZNN76du379y5c+Pi4qQ71pvkZfTMejq5uNaC83CY
fDlp5bVXLenXr595N350dLRaO3HiRDe9ABAIuToAAIA35OqAB/v379e5RPAJ
wLVBgwapTfS3760J3uDBg/Pz83XhkydPDh8+XK0aMWKEXq7DQ7Fo0SJr/fv2
7dNf9o+Ojg6/j9av2Pfo0cP2ZNKffvrJmpm4z9XHjBmjpttVdOjUqTDrs94E
np2d3adPH7Vq/fr14QyCNeGxzX5gzYv27t2rFsqx0PXY7jqWlqjlPXv21HfR
O2ah+nMBKWmbvMX6gcWcOXMcB8rlKTFv3jy1cODAgcd+P2eyvr903LhxemE4
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
woULrSVjY2NH/pdt5uqkpKRJkya98847Xbp0WbJkyZEjR6xr8/PzZddqwy1b
tsi2P/74Y8eOHaOiokIaPUfr1q1TNcsgHCu8/b5v374yJhs2bHC5XykmgzBg
wIDXX3990KBBmzZtst197aH9Qo6Oar/1gbDmffi9e/e2bhUkVw8+yFpaWprs
Wpo3ePBgdbhlK9X4tWvXBmmwS1KnbVKXSoWzl5gl27dvrwv88Y9/3LVrl1ou
V8Hbb7+tV+lpZMyDnp2dfcstt+iFEydOLLJ5tlxdfPfddx988MHw4cP3799v
LZmRkaHP5z179ujl8rNerqaOd3MCSJnly5fLmL/11lv/+c9/5CKSU9G6O6mh
R48eum2tW7eW2vQXGWyDVrt2bVtrAaAUIlcHAABAKbRjx44VK1bI/1T37t17
jMcBA8Wj5HN1pVWrVnrVsmXL9PIFCxacc845tsTy7rvvtj0XMisrS90IbWMm
sW4q/Pjjj9XymjVrqiWXXnqpzkKttT366KNqeZ06dfRjJXNzcx9//HHbLmrX
rv3999/rDXNycvSqzz///PLLL1c/N27c2MPo2bz//vu6Vdb5Sb799ls3+3Wc
qKRRo0Zr1qwJp/15eXlXX311pcKnwQbql1K9enXrvhxzdTeDrLz77rtVq1bV
ZaS2iRMn1q9fX/3atm3bICPpUu/evVVt5513Xt++fdXPDRs2tF0a+fn5+r70
atWqScdt9ejA/MILL1RflzAP+nPPPaeXuLyB35qrz5kz5/zzz7cOmpzD+qsZ
8j6rl48fP17XMGHCBL18+/btx1ycAAcOHHjggQcqGdq1a6c+OJPRMNcKudZs
7V+1apVa9c4777g+JgAQGeTqAAAAAFAxRSpX/89//qNXLVq0SC1cs2ZN3bp1
HcO3+++/X9+cnJub27x5c8dilX4/M7PLCs1c/cMPP9Qlt23bpkdA1/bcc8+p
hfn5+dbPCKyqV68+d+5cVcwaS9apU0f/7G+uXrly5dq1a+utbLm6435liOrV
q+fY/nPPPXfz5s2e269vVr/zzjsD9Uv705/+pD/pMHN1l4MsBgwYYJY588wz
q1Spon72JVe/+eabVW0vvvjizp079Y5mzZplLRYbG6tXtWzZ0qxHWv78f6l5
5m0H3Xp391NPPeWyedZc3XFqd7n6VElvubrjCXDbbbfphdbPNfTu3OfqWVlZ
qoYaNWokJSW57DUARAS5OgAAAABUTBHJ1bOysvR9vGeeeabKt/Pz8y+88EK1
sGHDhpMmTdq0aVPnzp11DZ06dVKbd+/eXS/861//Om7cuCFDhlx//fVqSe3a
tfXMFS4rNHP1DRs26GL9+/dXC5csWaIXzpw5Uy0cNGiQXvjiiy+uWbMmOjpa
N0Z6l52dfez3sWSlwpuo//GPf3Ts2LFDhw5uRu++++77t0FHjjpXV5o0adKm
TZt333138eLFwfcrQ3TBBReoVZUrV5blM2bMkJp1+SuuuELtwkP7Za0qbLvr
2Nqv559/3jp6qoCZq7sc5P3791sT3X/9619RUVFPP/20teXh5+rbt2/XtU2d
OlWWXHfdderXVq1aWUv++OOPuuQnn3zipnLr4Dz55JN6tpn69evr70cUyZqr
i1tuueXTTz994oknrHPXqPlwvOXq5gmQkJBg7Wlubu7u3btbtGihlpx//vnq
RWPy5Mn9+vXTJeUslavS+rGI9uc//1mVWbBggcteA0BEkKsDAAAAQMVUYrn6
Y4891rnQs88+q4PTSpbnlm7evFkvtE7H/frrr6uF999/v1ryyCOP6LxOZ8vb
tm2rVq2aWq6mSXdfoZmri2uvvVYtbNGihVryySefqCUNGjTQc8I/+eSTauHf
/vY3Pb3G3r17dWPULDfWWPKcc85Zt25dSKPnaMuWLaqkNVd/+eWXrVOjB99v
XFycXmtNyF999VW9PD4+3lv7W7Zsqcp36dIlUL9iYmKss7uoA2fm6i4HecaM
Gbqq9u3b6z22bdtWLw8/V//iiy9UVXK2ZGZmypKPPvpILalbt65K+JWhQ4fa
ulakQAf9oosusj2GIAhrri4jpjfULRfffPPNMa+5unkCREdH67UjR45UC9PT
01f8lz5qRT63VLnrrrus7QSAUotcHQAAAAAqphLL1R3dcMMN+mmJw4cP18vf
euutd//rkksuUQvPPvtslRg3btxYLdF3OCvx8fE7C6WlpYVUoWOu3qVLF7Xw
rLPOUnfU33rrrWpJ69atdbE//OEPei/vWuiFffr0Ofb7WNJ2V7Pn0XPM1W0P
bw2+32HDhum1W7du1ctXrlypl0+ePNlb+/Vd3P369QvUr5iYmEOHDl188cXq
13r16kn7zVzd5SB36tRJL7E+nVZODL3cmqu3b9++gTvWJ6vqW6n1By7W4bLO
924d3lGjRrkZtCAH/dNPP3VTw7Hf5+qzZ8/Wy3Nzc8844wy1vE2bNse85urm
CZCammq9Gb5JkyZvv/326NGjU1JSbCVd5uoPPfSQKqOf6AoA/w97dwIfVXX3
fxyVWpe64dZNa7X6tFjb2lqtVMVan0IFHrXWVi1YsGpxedr+W9m0pVVEcaNa
Hy2IskQQFQFBBGUTFWQPZE8m62w3kwkJk4SEnfx/mQOnhzuZO5PJMjPk8375
8jVz7j3n3jOZcO985+Z3UxO5OgAAAAB0T0nM1S+99FLz5qH33Xefw8pKYWGh
x+PRT20XQtvEOeDOKLm6WTd76dKlgUBA1+jWtSl8Pl/MTagQ0owln3zyyba+
en/605+WRNCXRutc/cQTT7QN4rzd4cOHq0XHHHOM+WMNBoO616hRoxLbfx2G
v/DCC9HmtXLlSmlZvny5fm1/+MMfyk9BPVa5evwvsq7Bbv4cFV123szVf/e7
38Uc2dyTnYeXTO/Zs+c9YeY4v/jFL/T4Cxcu1O0jR46M50Wz/cqcccYZOq+W
n1HknU9bZebq6sbfmv5SoG/fvjsTzdVbfQNIY+TrJi/RwIEDKyoq9Gpx5ur6
b1LkLRrPlAEgWcjVAQAAAKB76rJcfcyYMatXr16+fLm+Gvmkk04yb0po3ir0
vw3f+973zjjjDPW4vLx8+/btuvqHc1YZ54A7o+Tq4oorrlDto0aN0nfh/PKX
v6yLWpg7Y9uKPL3++uvlgQohzVjyqaeeauurF+d9S+UltS1y3q4uYCKqq6t1
e2lpqS1ETWD/f/rTn6r1J0yYEG1eKlffadTYMak0O/4XWdbXq5lZrtvt1u1m
ri69rojPlClTbC91NPIWCgaDauXs7Gzd3r9//8iXSH4dHjxE/S7YcnXLssw7
Alx44YWq8owzM1fXd55V9J8GDBo0aOfhuXpGRoZeTR7r9shcPdobYMmSJb/+
9a/NKk/KBRdcoGvRxJmry49VrfPEE0/EnC8AJBG5OgAAAAB0T11/39JRo0bp
xj/+8Y965blz56rGo446SrbiMKy+YeXAgQPN9tdee+3FMFXSJP4Bo+Xq+h6L
P/jBD3TJ8f/93/8117n00ktVu1nQO1Jq5ur6JepxqES5Yl5ovWzZssT2X/+9
wNixY6PNS+fq8qbq06ePLY/VV4nH+SLPmzdP9zWrppihfTvrq5sVaaIx4+Jv
fOMbul3f61bTX9ycffbZ6tfKfHHkbalemcsvv1w3/v73v4+5k2auPnnyZN1u
fl2iBi8oKNAtZoH9cePG6fb4c3WlsbFx06ZNTz75pPla6XeXmavrbysi/fjH
P1bryFs05nwBIInI1QEAAACge+r6XN2yrJNPPlk1fv7zn9f11c2LilXop7z9
9ts3hd1+++2qHPrQoUPVakcddZQuySKr6e4qrY1/wGi5enl5uapPIhs6++yz
1TqffPKJuc4999yj2r/0pS/pmhu1tbW//e1vZRM33njjnDlzdqZqrm6+RH36
9FHX4UuX73znO6pRpq++kkhg/3W6e8cdd0Sbl87VRVFR0SmnnNLDoHP1OF/k
iooKfWW7/MiGDx8+efJk3VdpT66+atUqPc7gwYOzDOvXr9eL+vXrp7uYJd/P
OOOMFStWqLdcKBQaNmxY5F61+kPPzs4+/vjjdbtZMt35lRe9evVSdfjl53jN
Ndfo9jfeeEMa6+vrjz32WNXyrW99y+Px7Ay/7fU9CHrEl6vPmjXrrrD77rtP
f4c1f/583eX9999XjTKabpRXINoUzjrrLLVObm5unD8dAEgKcnUAAAAA6J66
Plffefj1w+a9R/v376/bb7jhhrFjx9522226vrSuXP3+++/rctzHHXecrHn9
9dfrePD8889v64DRcnXxk5/8pIfhvPPOs62wYsUKfS/Ic84554EHHhg1atQF
F1ygu2zatGlnu3P1VukwNuFcXfzsZz/TK3z961//5S9/aWaq8jTOcSIVFxer
H8o3v/nNaPMyc3Uxc+ZMc4I6V4/zRRYvvfRS5AslP1adt7cnV7///vv1mJs3
b7YtvfHGG9Ui2ZYucBQKhWT65s6cffbZV1xxha73rtbPzMyMfHHMXxn9pxM9
wl8u+P1+h/00c3Xla1/7mv4FEWeddZbX61Urf+9739Pt8iL36dPH9u1GPLn6
okWL9NIrr7zyhRdemDx5sr5xrQyo7vy7M1zVx7zDae/evSPT9ZKSErVU9k19
DQEAKYtcHQAAAAC6p6Tk6oFA4NRTT1XtRx99dFZWlmqvqam58sore7TmvPPO
MytmT5kypdXVTjzxRLPaRpwDOuTqkyZNMnu1WtF99uzZOue3GT9+vFqnM3J1
XZGmPbm6vESRBViUn/70p9I94f0XDzzwQI/wpeNut7vVedly9Z3GHyP0MHL1
nfG9yMro0aPN1Prkk0+eNWvWmWeeqZ4mnKs3Njbqv1n4+te/HrmCvMP1Rl98
8UXdLm/v888/P9oP8YwzzlCVdiJfHPNXpqmpqW/fvnrRLbfc4rCrZq6uS81o
xxxzzNKlS/XKkydPjtwrHYn3iC9Xl90zL4a3GTdunLlyv379zKWRL+b06dPV
ovnz5ztMEwBSAbk6AAAAAHRPnZqrr1mzRqdntnsU/v3vf9eLzDohgUDg97//
fe/evfXS448//v7771cVKkxTp0697rrr9E0SjzvuuD59+mzcuNG2WjwD6uvn
TzjhBFv3yspKfaW0iBxfefPNN/v3729e6HvJJZeYpaHNWPKZZ55p66vXKl2d
Xpeslx2wDRLPdquqquQluvjii9VqRx111He+850HH3ywpqamPfu/M1xn5sQT
T+xx+PcR5rxWrVpl6yIbveiii9RSeZOYi2K+yObeLlmyZMKECbNmzfL7/fX1
9fp9MmLEiDh33mbFihV6u7Ya+4rX69XJ/09/+lNzkezD8OHDTzrpJPPHd/LJ
J/fr16+oqMhc0+FXRtY0R3jrrbei7eq//vUvvZr0Gjx4sNqxY489VnZs9uzZ
tvUff/xx/b2DrCk/+tdff12PUFBQsDOON0BjY+Njjz325S9/Wa/Ws2dPeSPp
CjDmC/XnP/9Zr/mtb33LtsIPfvCDHuHCRNEmCACpg1wdAAAAALqnTs3V28Pv
93/88cdFRUXOhSBkZzaHxdyrOAdsj8bGxszMzHXr1lVXV3fSJjqVZVmffvpp
VVVVB465cOHCnj17nnLKKR01rMOLXFhYOPKQ1atX63Z9/XOP1m4e2mVkhz/6
6KMZM2a8/vrrWVlZXVnhJBQK5ebmml+URMrJyVm7dm0wGGznttS7aNOmTbr2
SzTyOxu5zvvvvy8/pnPPPVcX0geAVEauDgAAAADdU8rm6jhiZGRkHHXUUVdf
fbVzrtt+oVBIl2o5/fTTR40a9fLLLw8ZMuS0005TjSeccIKs06n7gPbIyso6
66yzzjzzzJycnGTvCwDEhVwdAAAAALoncnV0gQULFpx55pk/+clPOvvN8+KL
L5q3xTQdf/zxr776aqduHe1RUFDwpS996Qc/+EF+fn6y9wUA4kWuDgAAAADd
E7k6ukZZWdnw4cMbGho6e0OrVq364Q9/2LNnT52on3XWWT/72c8yMzM7e9No
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
fX5/W+PQBLoAkaZPn97q+1NkZGSQqwNACuqyXP1f//qX+kvwyPt7ygFi69at
6o/HH3vsscgvZ1euXKlXfuWVV3RhFnHssccOGTLE/HQvByNpv/jii+XQc/LJ
J6vVioqKZE3bsNddd12cO++Qq8+ZM0cWnXfeeZE7MH/+/F69eun9VBfkP/74
47omrQx7xx132F7PioqKW2+9VXc89dRTb775ZjO3d9DU1BQIBGSEskNKu7GS
MJfLlZWVlZ+f3xm/PjKsDC6bUNtK9owBHAn0P+Dyj7n8kx7zazszLY+s7rIv
zMzVF4ZF9ornKKM2N3jw4L/+9a+2dnX4vvDCC3XLr3/9a2mJrJP29NNPS/sl
l1wS5xZTHLk6AKQLK9b16lVVVc+/VfLoNFewulp98tWB57bD6fIslZWVSz7z
3vtMXpmnSi3StVbkQ66tVzyjxdnFYZGujiLDxtlFdjXaDnTsdPRo1Yde4fin
Iw/i7OKwSO9A/C9OV07H+Xr1yGL+AICk67JcfePGjeqIcM899ziMkJGR0bdv
X3Ux25lnntk3bOvWrWrpU089pQZRi04//XT1dODAgXoEFWufcsop6kZp5557
bu/evSsqKvr163fFFVeo9X/4wx9K94ceeijOnU8gVz/ttNNOOukkVUleV5S9
/fbbVVT+k5/85JxzzlGNf/nLX3Tf2trayy67TLVfHKYey55v37495n7K0bns
cMnOh5KppKSkuLi4sLAwMzOzvLy8M359ZFgZXDYhGyJXB9AhbP+Mm5XTWtXF
uXo0ciCWo9XNN9+sWy699FJpef75521rysFU2o877rgj4y99yNUBIF3EvG/p
S/Pc6rakT8327D9woPnw+5aadAHtJZ95B4zOli7DJ7pCO/Y2c99S7ltq7AD3
LQWAI16X5eqNjY3XXnutOiicddZZ991335w5c8x7lZpara8uR9IvfvGL0i5L
9ZhPPPFEj/CF33LMUo0q1ha9e/e21VEv7YT66tFy9R7h6+HlcLkzfEH+5Zdf
rhqvv/561Sgvo0ohvv3tb+u+MmVp6dWrV2ZmpmrZsGGDuuo+nru8mVeqk6ur
i9ULCgrkNeykP5qTYWVw2YS6ZD3ZMwZwJLD9My7/sDv/y9/qTUgd6sBEE8fB
MKpFixapY9z777+vG1XF9Xnz5tlWLiwsVCsXFRW1Z6MpglwdANKFc66+Odcz
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
ubrP779rQq7uoqJ1cnVydQCAg9TM1adNm/ZhBDNsV7m6eO2111RLbm7uj3/8
Y2m54IIL9Go/+9nPpOXEE09cvXq13oRK4zs7VxfXXXedqlQjh8jLL79cNV5/
/fWqUV7GgQMHSsu3v/1t3feOO+6Qll69emVmZqqWDRs2nHzyydJ4zz33xNxP
80r1lM3VXS6X/ChlXp1UIE6GlcFlE+qS9WTPGADaxvbPuK5hHk3rdyGNXgcm
mjgOhoeRo9jChQsXLFgwceJEObTJcUqOVuvWrdMrqHov3//+9yP7Dh48WBYN
GTKkrRtNQeTqAJAuYl6v/smWoLr4XEfrlZUxrlcvKK1SF5/raN1rbXPO1T2+
SnXxuY7Wc0u3O+fqYtaygC1ad87VxWc51ericx2tV8a6/N5VXjVsQqEZrbv9
28jVydUBANGkZq7eqvvvv1+vqXL1X/3qV2b3RYsWSePRRx9dX1+/M1z5vGfP
ntIihydztfXr18s6XZCrl5aW6sYpU6aoRrOc7HvvvWfusLywqkTMvHnzzE3I
MVQazz333Jj7mS65en5+/tq1axsbGzvjLS3DyuCyCXJ1AOkoXXJ1n89nHqMv
vPDCNWvWmCvcdddd0n7TTTdF9n3kkUdk0Y9+9KO2bjQFkasDQLqImas3NTWt
z68zo/WnZ7qcg+iamprKmt1mtH7vM3lur1OuLv/fvfeAGa3/4m85m3K9zrm6
PJ659LBo/Z3lpc65uny6zCxuMKP1x6cXOU9HPuxXh/aY0frdT+eXu/3k6uTq
AIBWpWau/p3vfOdHEZ577jm9psrVzZadRnFXt9u9M/xRVz2V46ltQ/Lxv7Nz
dVsMLn2l8ZRTTjEbc3Nz1R7KMVqebt68WT1du3btFoP6vkCoe6E6SIs6MCpX
l5/Ovn37OuMtLcPK4OTqANJUYnVgIlP0eLQnV5fzgV+F9e7dWx2kPve5z40f
P16vcO+990rjoEGDIvuOHj1aFl111VVt3WgKIlcHgHQRT64uq+lofdCY7OXr
PTFz9ZaRjWh9yoJytcghV5fHZrQ+alKxiuKdc3Whr1qXzWUVeGPm6vJUR+sy
qQ8/c8fM1Vs2akTrL80rU4vI1cnVAQCRUjNXj7O++uzZs81Gj8dj5uqTJk2K
zLeVm2++ubNz9YsvvthcTeXqp59+utmYn59v5uqvvPJKtMOosmTJEuf9TIv7
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
mZnQLFMXuToApIv25Ory2BatL15d4Zyr79mzp7JmtxmtP/tGkXOuLsfT3XsP
mNH63U/lqgA/cjpmED1z6X+i9QGjtua5vM65ujy2RevvripzztV3795dHdpj
RutPZrQ+HXL1ZnJ1AOg2ukmujpSiL1kvKysrKSnpqDezDCUDcrE6gG4libk6
dpKrA0D6aGeu3mxE669/ePAel865estGD0XrD08p8/ic6sCoXF2e6mhdOuYV
VzpHxzqIVlety+6t2nxwn51z9WYjWn/1/YOXuDvn6vJUR+sjJ5e6W8J7cnVy
dQDo1sjV0fXMS9bz8/PLy8vb/06WQWQoLlYH0N2YibrJueoLuXpHIVcHgHRh
WZZzrq5iVZN1iG5Zsrp80rxiyxCzS3ah77FpBSpUd+6iF8nK0kU6RuvS6oYm
zy+W3WvTvi1f735pbtumk+fyPTa1UIXqcU7HYbSYizpptKTvQKuLnHP1yG89
AABJR66OpFCXrKvrH/Lz89tZaF26yyBW+KIILlYH0K2QqycXuToApAv5sHD3
3Xdf2ZprrrnGApItIyOj1fenmDlzZjAYTPbvEADAjlwdyaKrwXi93ry8vNLS
0sTew9JRussgVIAB0A21NT8nV+9Y5OoAkC6sOK5XX7K6/J0VZW266ji70Pev
t116FXNRtF4eX+VzbxSVlPvbdEX0qwuK1271tGnflq1zv7m0tE1dcot8L7zl
8h9aJ5598/qs52a33MY0/i7OM21nl44drSunw/XqAJB2yNWRRPJeqq+vr6mp
8Xq92dnZ+fn5kSUKHcjK0kU6Snd5LEPx5gTQ3ZCrJxe5OgCki8pY9dU/2RIc
MDr75yOzl28+WEnbVl9d279/v2ovKK1S5dP/Ocd74EDLIlt9ddsOWOFQXZVP
f+B5V0PTvuaI+uqm6upqtUjdmfSWsbnFvoNF4FV7ZEHyhoYGtWhNdvWgh3P6
j8xavO7gJ6xoBcn1dIrKqlT59Kdme/aH52Orrx45Ha/P+vu0cukyfKIrtGNv
M/XVjR2gvjoAHPHI1ZFcKlpX558FBQVbt24tKiqKPGmxkRVkNVlZuqiTHEJ1
AEDXI1cHgHThnKtvzvXeMCqr34iW/3S07pyre73+IeNzVBcdrcfM1R+bVqC7
qGh9Z6xcfe6KMt1FR+vOuXpWgXfgmGzVRUfrzrm6z++/a0Ku3pCK1mPm6k/P
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
tR4tV2/Z7dpdtmhd1VonVydXB4D0Qq4OAACQGHJ1AEgXMXP1pqamXXv2m9H6
2FcLYubq8tSM1n8zLsftjZGry2MzWr9hVNa6rR7nXL2l++HResbiEudcXT62
7957wIzWx0yKMR35sC9PZy79T7R+26M5ZRV+51xdHpvR+s9HZX262e2cq8sW
g9v3mNH6qwuKydXJ1QEg7ZCrAwAAJIZcHQDSRTy5uqymo/WHp5R5/THqwKhc
vflQtD5kfH5h2cE7jTrn6s2HonX579OtB8Nz51y92YjWX1usmmPk6vJUR+sy
qZjTUbm6UFet3z4uL7/04HScc/XmQ9H6DaOzV205GJ475+otswsdjNYnLfRH
mw65Ork6AKQycnUAAIDEkKsDQLqwLMs5V9cqPP4X57jcXqtNprzryipoW58l
q8vlvzZ1kU3IhtrURSYi05FJtanX1PdKMvM8beqybF3Fwo/L2tQlt8j7yrvF
bepyBHPO1SO/JgAAJB25OgAAQGLI1QEgXViWdffdd1/RmmuuuSbZkSpgZWRk
tPr+FDNnzgwGg8n+HQIA2JGrAwAAJIZcHQDShRXrevXKysrA4XTg6fUH/v5q
wcYcr63dCtf6aLWLjDZpfvHcleWRi6J1EcvXe56e6dI7Eq2LuSjP5X/klYLS
CityB6J18fkrH51auC6rbdN5bWHJ7A/L2jSdVRs9T2QUWYf2JJ7pFJb4H55c
UFxun47DhhxGc5hOW7t07A60usj5enVdpQcAkDrI1QEAABJDrg4A6SLO+uom
lXa6vZYqUX7rP/LKrJZ1Iuura7W1tWrRjCX+lpt4jsxevrlW74DVWgVvOZqo
Lp9sCai7f/5zjvfAgZZFtvrqJtWeX2ypEuUPPO9qaNrXHFFf3aQKknu8/r9P
K5cut4zNLfYdNp3I5Hb79u1q0RvLWqbTf2TW4nU1ztPZvXu36vJZVuDGR1qm
8/Rsz/7wfGz11SOnU1Rq/e7plukMn+gK7djbTH116qsDQGojVwcAAEgMuToA
pIuEc/UX57j6jchS/6loPWauvnxdhe6io3XnXL2k3H/TX7N1LxWtx8zV//iv
fN1FResxc/VJ84p1FxWtx8zVP9ns/tlDW1UXHa075+plFf5f/O0/03kqHK3H
zNVHvFSgu6honVydXB0AUhm5OgAAQGLI1QEgXSScq1d4/CMnl5rReolvh3Ou
Lqa857NF6zGvV1+50Row+rBoPRiMkavnuqwh4w+L1gPVdc65ur78XkfrRZ4d
zrm6yPjAr7uoaD3m9eqfbKlUl9/raD146GuCaEF0QcnBy+91tG4F68jVydUB
IGWRqwMAACSGXB0A0kXCubrYtWe/LVpfn+V2ztX37NkzdXGlGa2/s6LMOVcP
hULr8+vMaP2JDJff7xQdV1VVVdbsNqP14c8VFJf5HHJ1sXvvAVu0/tkWt3Ou
vnv37plLA2a0PvvDUudcXfpmFjeY0fqj01y+8HyiBdGyh9WhPWa0fs8zBa5S
H7k6uToApCZydQAAgMSQqwNAumhPri6PzWh9yPj8rAJvzFxdnupofcD/Z+9M
4KOqzv5f1+prfa222s2qrW3f921rq75/rbW1vt1eWWqpIiIqL+4ouC9JBFkC
giyyExCQHWSXPci+yJJgIJk1s2TWO/fOkkxWkpBgyP9MzuTk5M7MuTMj28Tf
95MPn3vPPc+557kTmDvfuTwnR7/toEvTq5NdXq3PWFsmVsfBYDCSGqfW38yz
ur2y2KuTbV6t9xttOm7yanp1srt8Z1St98jRbz4QPx3eq5NdXq1PWVUmFtE0
HV6tvzrd4nDDq8OrAwDABQq8OgAAAABAesCrAwBApqAoitirV1VVNXRGaYfu
VtWceGuW7YnRxjJvJfPAqhAme2tra2nLnI3eHtm6A8Uh1WgM5q7Ly8tpC+lM
Qj7a6GFivyEG2u73++muS64hEyPT8wcrmAcWp1NdW5/9kb1vrsHmSZhOKBRi
Hpi2LMqXumfr9hxLmA5z1ySWthwxVvzjXf3MTz3s4tTX14vTkQK1A8aaX51u
kQPJphN7iFw9VTurV08mmeRoJHFVOgyWTl1dXZKjsa9dKioqVIdI7mKvHiv2
AQAAnHfg1QEAAAAA0gNeHQAAMgVNr54Mbq9ssPqS7Mw4ZpTOQYjR6qNPqieP
R1L0lnMxtzRCTDaJPqn+9UHs1UOh0Pn+OwQAAEANvDoAAAAAQHrAqwMAQKag
KEqvXr2uisf1119PxaZHUhyulF2upexchNgctDZ5CnglucyVYsw5S8cpp5qP
JMm0dHxXZf78+XF/PwmLFi2CVwcAgAsQeHUAAAAAgPSAVwcAgExBs766P1jx
zizr4CmlgVBVTRtMeNZ0hlVuCQQCH29y9x5u0NtC9BCrDVJZWamKYqMdKA48
+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
YV6dxC7fGeDV+updHrGIJjM8bq/j1fr7Sxy01rqgDkx5dbNKrdNa6/DqAAAA
zjbw6gAAAAAA6QGvDgAAmcJX8epkm1frPXP0ewrdYq/e3Nx8srmFV+sffWrX
9Opkl1frr083U0kemw4T0WSbV+t9cw1mm0/s1SNXg1PrPXL0Ow67xV69iXDq
NK/WZ66Jnw7v1ckur9ZfnmKmklzg1ck2r9b7jDAYrD6xVyfbvFrvnq3PP+iG
VwcAAHAOgFcHAAAAAEgPeHUAAMgUvqJXb21X6z1z9AWmqJ4Ve3Wyy9T6/HxF
sw4ME6dUrZNA2R/iJ8DDi+jWdrVOpmfzRCcg9uqt7Wq9R47+c31Unou9Otll
av2jTbJmHRjq1Vvb1fobeXZJCYlFNEuHqvW+uSaLq/35f6FXb21X692z9XuL
o3OGVwcAAHC2gVcHAAAAAEgPeHUAAMgUFEURe/VkKDZJnx1yJdmZ4vbKK3c4
UgohkBASmFIImdhxkzelEF2pRB/tTh6PpHzyWcrprNrpdLh9KYXsKnAXGVJL
x2iVNu93phRyQSH26qFQ6Hz/HQIAAKAGXh0AAAAAID3g1QEAIFNQFOXpp5++
PR6/+93vzrdSBUA5vnjx7ttvj/tTvHQpvDoAAFyAwKsDAAAAAKQHvDoAAGQK
itbz6oFA4KNPyyYut4XaYcIz1BlWH4aw+6j06jSzRwqoQoLBoCqKHSot8780
yVRk9NF2WoFEaStCkihE8Qff/aj0071uzbmx0cgkF2x2jF1iYxNJJp0Dx3wv
TzG5vCmkY3P6B00yHTXIyafj9weHfWxducOVfDpkY9k2V+4Ca6B9JolC+EOH
SnyDp5gcHnU6JOVEIYkujiAdwQQE6cSGOD7+uOgb34j741iwILboEAAAgPMO
vDoAAAAAQHrAqwMAQKagWV994VaJLnyZt95HQ1T11RktLS20fW+RTFfYfG2G
vb7xy9aY+uqqCSiRWiU+usJmn5EmpxKp6N4YU1+dUV5eTtq9kjxioSuyImeW
ftexaJVvprtVIXV1dfTQsu3RdKaskU6fjhxSFSSPTefz43KvoZF0Bk+11TVE
0lHVV49Np9Tue3ZCJJ3ew412XySd2PrqjIqKCtIuSfL7S9wkpFuWLr8gLE7n
xIkT9NDq3TJNZ/wKb0tbPonSYaMd1skPDTOSkBcn26pPnGq94Ouri7066qsD
AMAFCLw6AAAAAEB6wKsDAECmIPbqx4xSj2wdNbdMrYu9uiTJ/d83shCq1jW9
+qgFpSyEqvVGLa++dpeDhTC1LvbqulKpJ5cOVetir+6T5ac+6EiHqnVNrz5u
qZWF9B5utEkNml59w14nC2FqXezVTTapZ05HOlSti726LCvPTzCxEKrW4dUB
AACcWeDVAQAAAADSA14dAAAyBc3n1fceC/XM0fNqXfN5dZM92G+0iVfrsr9C
7NU9kpI1x8Gr9VJXldirExbk+1VqXezVCfuPB/l0pqyRAgGN59XNZYH+Y8y8
Wvf5w2KvLsn+IfOcvFo3u2rEXp2wbIdfpdbFXp1wSB+i/zWAqXV/glentV1r
W50B+l8DmFr3KmF4dQAAAGcQeHUAAAAAgPSAVwcAgExB06s3NDQcNFTzLnry
CptYRIfDYbm8iVfrgyabPZLIq5M/Tza38Gr9kRHGY0av2KuTbZVa37DXJfbq
5GN7obmGT2fcUo10yId9f7iJV+sDPzS7PLLAq5M/m06d5tX6w8MMR/VesVcn
Z1y2I8Cr9VU7HGKvTvI6bq/j1frohVaxVydXr7y6mVfrz00wO1w+eHUAAABn
Cnh1AAAAAID0gFcHAIBMIRmvTroxtU7+/OyQW9Ork11erc9c56CHBF6dbPNq
/a1ZNrdX1vTqrZxaJ6c7bvJqenWyy9R6jxz9ls810iEf9iPz5NT61NXRdARe
nWzzav21GVaH26fp1cnu8p1Rtd4311RkiJ8O79XJLlPr3bP1G/bFT6eV8+qR
a8ip9YmfOOTIlYZXBwAAcGaAVwcAAAAASA94dQAAyBQURRF7dfJRt6aNHYXK
g+/q9hb5lXZqOsOqjgcCAdpidYUfHamftd7FSsdUVlaqolSjhSqq3phpIT9K
ICrPQ6GQKoTKXn4Cs9e7yYksropEcyODMElOW0giJB2SVKIQVnWcpWP3hB8f
ZZi2xpl8OuXh6ndmWV+ZVurzR9MJBoOa6czf7O4zwmAqK080N/bNAtmgLZ+X
BP45RLf1kJwohM2NnI7uOqXw/40xTfzEwSrhhMNhcToMVjCfXRwGuzjkAiY5
Gksn9rUmjWKvHiv2AQAAnHfg1QEAAAAA0gNeHQAAMgVFUXr16vWteNxwww1K
Z2wOn5IiaYS4vTJ9Uv1sn+jchHgkxem+UNNxynLKUzvXOObPL/rWt+L+OBYt
CoVC5/vvEAAAADXw6gAAAAAA6QGvDgAAmYKi9by6mCKjlKomNdkkWs07ebyS
XGxO+US0iEpKHDNKqXpms12yO1NLR5JkWq8mJdJKx+tLMR+rw2dN3c+fVcTP
q8OrAwDABQi8OgAAAABAesCrAwBApqBZX72qqqqhM6xuyWFDxT/e1U9b46bt
rIZ5MBhUhbAyLE6pcsBY88tTLRWVdfQQ06eqkI4yLMHy9z4u6z3cYHZW0kOs
0khDDLSdzHD5Dl+3d3T5RwK0nRX9rqysTJTOF+bwP4foJ65w1ddH2uvr6xOl
w+qWeOTKp8eZX5psKa88IU6HVUEJBEK5Cx0PDzMYHdELS8anh+rpieOls2aP
QtLZcMBP21kZFpJXonSKbZX/es8wZqnzRPuwmul4lfDzE0tf+NASqNB4dVg6
5JVVHWLpkN+HROmo2lkFoYqKCtUh8lqLvXpsvXoAAADnHXh1AAAAAID0gFcH
AIBMIcl1S3mo1t5xxE3XyiQ/eet9rTHrlvJQD2y0+p76oLR9HU97feOXrYlX
xiTvJkrbk+rvzrHSkD4jTU4lMhnVuqU8tH3+pjIa0j1Lv+tYpP62at1SHuqB
9xS6ew2NpjNljXT6tHrdUh7qgc026Znx0XQGT7XVNYjSaWpqUtqeVB8x305D
eg832n2RdFTrlsamszQ/uvhptyxdfkHk2qrWLY1N58Axz0PDjDRq/ApvC8mn
87qlPPQrDKvD9/zEaDovTrZVnzglSAfrlgIAABAArw4AAAAAkB7w6gAAkCmk
7dU373f2zNFTDUvVuqZXLzZJj40yshCq1sVe3e2V35hpYSFUrWt69emr7SyE
qnVNr77toItPZ8oa6csvNby63iI9+b6JhVC1LvbqXp/ydl5HOlSta3r1OevL
WAhV65pefWdBx7ceTK2LvbrRKg0Ya2YhVK3DqwMAAEgDeHUAAAAAgPSAVwcA
gEwhba9OOGio5l30zE8lsVcnePz1/UabeLVO1/RM5NUJoYqqrDkOXq0fM8li
rx4MBhfk+3m1vuWQIvbqhEJzDZ/O5NVeWps8kVePePLAif5jzLxaL3PFT4d6
9cjcyiuHzHPyav0LoyIW0WSGy3cGeLW+fr8i9uqE4/Y6lVqntdYTeXWCL1j3
9DgLr9ZtzvjpwKsDAAAQAK8OAAAAAJAe8OoAAJApfBWvTrZVaj3/oFvs1Zub
m+XyJl6tf/iJVezVq6urTza38Gr9ufFGarxj02Eimmzzar1nts5kk8RenWyr
1PqGvU6xV29qavKHm3i1PnZJ/HSYVyexTadO82p9wFgDNd4Cr062ebXePVun
K5XEXp1sq9T66p0OsVcn17y8uplX67kLLPDqAAAAUgVeHQAAAAAgPeDVAQAg
U/iKXr2VU+sfb40+Ri726mSXqfWsOQ5P20PuYq9OdplaJ4EGm5+fAA8volvb
1XqPHP3Oo9EQsVdv5dT67I0+2i726pFr2K7W38izOz0az6vTdTaZWu+ba9JZ
/GIRzdKhar17tn7bkWiI2Ku3cmp9+joq7zW8Otllav2V6XaHO/6rA68OAABA
wLnx6uTtw2g0Ll269L333ps7d+7Ro0dra2tTHSQZZs6ceUkbl156KZkqbfzh
D39IG996660zdaI5c+Zc0g55803Ujbz729pwOp1xO5B22oG86Z/juaWH1+sV
ZwQAAAB8fYBXBwCATEFRFLFXJx+dAp1R2mEtWz53560tUzgShbDRdKXy8I9L
vT6/Zgg7RDqTkJJSX6KQuHMjEyPTS2ZurOWzQ+6pq+wppWOwysPmWVxe7RB2
SJIDI+ZbjhmllNL5aL19/V5XSunsPur98BMbmWny6Zjt8nvzLE5PCq+OYAKa
h8Sjib167LceAAAAzjvnwKtv3br1hhtuUN26XH755R9++KGqp16v397GwYMH
UzoFY+rUqewUoVCINn73u9+lLa+++mp6w8aSl5fHTiTLcqJun3/+Oeu2ZcuW
2A7f+ta36NFhw4ad47mlSm1tbVZW1sUXX0xH/va3v32mRgYAAAAyFHh1AADI
FBRFee655+6Jx5/+9CcFgPONc8kS/T33xP1xLlsWCoXO998hAAAAas62V584
cSIzsbE8/vjjfOfHHnuMtv/kJz9J7WNtOxeyV//e977n9XpVHTLFqx8/fvz2
22/nXzt4dQAAAABeHQAAMgVF63l1wo4jblppPHmMVt/sdbaUQrySPG2VzeHy
aXflWLLVUajzpBSyp9C9dpcjpRCzTcpba5PlFEIkSZ6+2mZ3ppbOsm1lh4u9
2v04DhzzrNqR2qtjdfhmrLH5UsmHdJ65xk4CUzrRGUH8vHpsWRsAAADnnbPq
1UOh0GWXXUbvVS666KLevXsPHTp0wIABTCYT9uzZw/p3ba9OeOCBB1QdMsKr
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
czrkbd56n+bz6hZnRb/RJl6te31BsVeX5EDWHAev1o1lFWKvTliQ7+fV+s6i
sNirR9S6PsynM2WNRFIReHWC1VXef0yH9h881ebxhcQi2qcEh8xz8mpdbw+L
vTph+c6ASq2LvXpErZvCDw7p8OTjV0RXnBU8r17mKaf/bYGpdZekkQ68OgAA
dHnOqlcnPZ966qm4ty6Uhx56iC/Dsm/fPramJ2X+/Pmk3WKxXHfddarYH/7w
h2w7Da9OboF+//vfx53VLbfc4na7Wc9BgwbF9vnd737HttPz6gT+4jCvTlix
YoXqOlAuu+wy9gR7GnNLNCxhzJgxSb6m8OoAAAAAA14dAAAyha/i1cm2Sq3v
LHCLvXpzc/NBQzXvomeutYu9enV1tVzexKv1l6eY6dKasenQkGAweLK5hVfr
vYcbTDZJ7NXJtkqtbzvoEnv1pqamQnMNn87UVfHTYV6dxPrDTbxaf3GSmS4V
mkhEkxk2nTrNq/WH3tPrLZLYq5NtlVrftN8p9urkmh+31/FqfcIyq9irk1e2
vLqZV+vPjTfSpWnh1QEA4GvLOVi3dMmSJTfeeKPq1uUHP/hBbm5ubOdVq1bd
fffdV199Ne22bNky2l5SUvL//t//u+SSS2j73//+94KCAjbaokWLaLfp06ez
RvI2ShtvuOEG2qJaCZS8zQ0cOPCXv/wlC7nyyisHDRrk9Xr5buQdPDs7+1e/
+hXtc911102ZMmX27Nksirz5Jsr90KFDrNu+fftUR8lt2C9+8Qt6lH9un16H
bt26sVox5KQ9e/bcuHGjaoRU57Zy5Up+WMJtt922bt26RPOPhdXkIedKPgoA
AADoksCrAwBApvAVvXorp9bf+ajM3faAs9irk12m1vuNNhWbJU2vTnaZWu+R
o88/5OUnwMNENNnm1fr0tS56SOzVWzm1/vpMm8Pt0/TqZJep9b65pmPG+Onw
Xj1y2dvVevds/aYDXvED3jQdXq1PWumi3yyIvXorp9ZfmW4vc8maXp3sMrXe
Z4SxUB8/Hd6rk12m1rtn6dft1UgHXh0AALo858CrU8h7x86dOz/++OP8/HxJ
kjT719bW0vVJech9i16vZw+inylkWd6/f7/VaqU11RPh8Xg0+5xZyLmKi4tL
Sko0T5rS3MiFPX78eEFBAfvqAQAAAABpAK8OAACZAvlAKvbq5GNmZWeUdljL
tNWO12eUyv5oARC/368KocVeqKOmLZ8d8fUbZTCVBWNHo5DzMg1LW8xlIRJC
AhOFxM4tEAqTiU1d7WDfBSSTTt4658tTzT5/uWY65JMjbdl9VCZzM9hSSMfi
DD35vmHz5xIbjXyu10zn7TzLhOVlgUCQKXfNdD7e5Io8Eu8PJ0qHXRyWzv7j
ymO5hmJLwnRYiXs2WpmnvP8Yw6f7pNjXWjA3CvsugF0cPkTs1WO/xAEAAHDe
OWdeHQAAAACgiwGvDgAAmYKiKP369bslHv/5n/+pJI3Xp90nU0LO2YnSCZFk
+qT6WT/RubrUmjgWLiy+5Za4P84lS0Kh0Pn+OwQAAEANvDoAAAAAQHrAqwMA
QKagaD2vTjBafbS8SfJ4JXnPUXeqBpWWZ0+Jg8c8DldqPtdsk47qvSmFSCSd
wpTntqvAnaoDP1zstTtTS8fq8BXoUkvHJ8u7Ur/UJMSXYj4FJV4yvVRPpEL8
vDq8OgAAXIDAqwMAAAAApAe8OgAAZAqa9dWdUuVTH5Q+lmtyKfWn2mCFPk51
hpUQ9wdCwxc4e+To9xyroIfI52V6qKGhQRUVDfH7V+6OFDafsc5L2+vq6uih
cDisCmE1VYptNf8con91uq2m7iQ/WiAQUIWwEuJuX/iZ8aWPjDDapTp6iFVB
UYWwEuKBQGj0Ylf3LP32o+X0EJkSPVRfXx83HcL6A6FIIfRVnubmSPuJEydo
O7kUidLRl1X/6z3DoCnWqlqNdGpqaughrxJ+4UPLw8MMFo9GOh2jBYMfLHd3
y9JtPhRSpUMmqQphrzXpTEJIYFNbPqwiemw6rESMyVlDJjZwkrWiupGfABlT
FVJbW0sPVVVVqQ4Fg0HUVwcAgIwDXh0AAAAAID3g1QEAIFMQe3WTTRow1kwX
vuw3yuwNnmyNWbeU0dLSorQ92p3zkYWG9MjR7y+JLNNZ2XndUtUESPv8TWU0
hPzkrfe1xqxbykPN7d6j7l5DDTTktRn2+sYvWzsv9MlDLX2p3ffUByYa0mek
yalElmRVLfSpSscny8PmWWlI9yz9rmORZTpV65bGprMk38HSmbJGOn1avW4p
D/3S4fNjnoeGGWnI4Km2ugZROtTS25zycxOir07v4Ua7T5QOHU2WldyFNhrS
LUuXXxApTq5atzQ2nRXbHaQzjRq/wtty+rRq3VIeaumPlHjIlGjIi5Nt1SdO
tWLdUgAA+NoArw4AAAAAkB7w6gAAkCmIvbrTLb863cIUMVXrYq9OmLqqQ5JT
ta7p1TcfcPXM0fNqvVHLqxebpH6jTSyEqnWxV3d75TfzrCyEqnWxVyfMXNsh
yala1/Tq2w52SmfKGunkSQ2vriuV+o8xsxCq1sVe3SMpWbNtLISqdbFXJ8zd
0JEOVeuaXn1XoefBIQYWNX6F92T71wSJvLrRKj09ruM3h6p1eHUAAPiaAK8O
AAAAAJAe8OoAAJApaNaBCVedeCPPzqv14yafWESHw+E5m2RerW89KIm9Ovnz
oKGad9HT1rjFXj3y9HV5k0qt01rribx6Wzq1WXM6xHKfkaYio0Y65MP+gnw/
r9Y3HpDEXp38WWiu4dP5cGW01noir96WTqNKrdNa64m8Ok1nyDwnr9YL9fHT
aW336uTqLd8Z4NX62j2S2KuTP4/b63i1/sHyaK31RF49Mu3Kkyq1Tmutw6sD
AECXB14dAAAAACA94NUBACBT0PTqDYSTLbxaHzbPounVyS6v1h8fZfBIGl6d
bPNqvXu27kiJR+zVybZKrS/eWib26uRj+8nmFl6t58wu1fTqZJdX64+ONDjd
stirk21erXfL0h0ocou9OjmjP9zEq/W5G+xir07yajp1mlfrb8wwaXp1sr1s
R4daf3iYvswli7062ebVerd3dHRdWoFXJ+mUVzfzaj1vrQ1eHQAAvg7AqwMA
AAAApAe8OgAAZArJeHXSjan1rDkOr8+fjFdvbVfr/UabTGXR4iRir97artbb
1jyNruYp9uqtnFr/aJMcfVJa6NXJLlPrJCm3pJEO9eqt7Wq9b67JYIumI/bq
re1qvXu2fucX0TmLvXpkhHa1Pn0dfSRcw6uTXabWX5lud3njV+lp7ezVCfSp
9T4jjCXW6KVuFHr11na13j1Ln18QTUfs1ckuU+uTVnlpPvDqAADQ5YFXBwAA
AABID3h1AADIFBRFEXt1qlUJLo8yaYXNEy0Z0tHOUJQ4h2avsxebpbiHVFGs
ZfMBF/lJKaTE7CMninso0dxIIiQdp0dOKZ25G+zHjKmls+2ga/3epNJhh/QW
38y1drKXfIjX55+80uZwJzxL3LnN31RWqE8tnV2FntU7nSmlY7L5pq+2yamE
8IfEXp19TQAAAODCAV4dAAAAACA94NUBACBTUBTlueeeuycef/rTnxQAzjfO
JUv099wT98e5bFkoFDrff4cAAACogVcHAAAAAEgPeHUAAMgUlCSeVw90hglP
n+x/f5H1uMmnaheE0GekN+5zxR5KFELY94V3ykqbZgh/yFImj5hvcXmU5Ocm
y/6xiy1fGKSU0lma71y3J7V0DhZLH35i8/vjjJYoyu5SSDoOdwrpkOHGL7MV
6KTk50YmsGK7k/yklM6REmnCMpvSPvlk0ikj6XxcSpJKJh3x8+qsSg8AAIAL
B3h1AAAAAID0gFcHAIBMwZ9cfXUeaju9kjxioStSPn2U2Rs82RqvvjqjsrKS
HlqxSyEhPXL0+0uq2AQUroI3g7yb0JDDukCvoZHlMvPW++ghVX11HtpudSjP
TojU9H5thr2+8cvWmPrqPMFgpFi6JMljlnoi9cZHmpxKQ2u8+uqMqqoqemjd
vkiJ8u5Z+l3HKsXpNDU10ZBCY+ChYUYSNWWNdPp05JCqvnpsOmVu/8BJVhIy
eKqtriGSjqq+emw6Plkev8JLQnoPN9p9DfxosYVTqqur6aGNnwe6ZUWWWM0v
CIvTaW5upiFFpgA5BTkROV1LWz6q+upx0nEpg6bYSMiLk23VJ061or46AAB0
OeDVAQAAAADSA14dAAAyhbS9+sw1kWVM6Q9V65pefXeBm4UwtS726mUu+V9D
dSyKqnVNr/76dDMLoWpd06t/9GlHOlSta3r1A8c8//t2CQ1hal3s1Z1uufcw
PTsRVeuaXv2dWaUshKp1Ta++YFNHOkyti7364WLPA+9E02FqXezVPZLy6MiO
dKha1/TqQ+Z0pEPVOrw6AAB0MeDVAQAAAADSA14dAAAyhbS9utMtv5HXSa27
/Q1ir06YvUFSqXXN59W3F8g9czrkbd56n6ZX11uUfqNNvFoPVdSIvbrbK2fN
cfBqvcx3QuzVCfM2+1gIVeuaz6vvPtopnSlrpPJyDa9utCn9x3R8UzB4qi1Y
USv26h5JGTLPqVLrYq9OWJTfkQ5V65rPq+8/rjw4xMCr9XKtrwnMdvnpcRZe
rQcq6uDVAQCgKwGvDgAAAACQHvDqAACQKaTt1SOHTrao1PoxoyT26s3NzXM2
ybxa37DXKfbq1dXVBw3VvIueuNwm9urBYFAub+LV+uAppQ6XT+DVCSebW1Rq
vVDnEXv1pqamBfl+Xq2v3R0/HebVSWyhuYZPZ+wSmyyLRDSZoT/cxKv1FyeV
2p0+gVePzO3UaZVaP1zsEXt1cs2X7wzwan3F9vjpMK9OXtnj9jperecutPna
8kmUDvn9Ka9u5tX6Cx9arA4fvDoAAHQZ4NUBAAAAANIDXh0AADKFr+LVyTav
1vuNNh03eTW9Otllar1Hjn7zAZemVye7vFqfvNKu6dXJNq/WX5lW6nBreHWy
zav1vrmmIoNX06uTXabWu2fr1++Nnw7v1ckur9bHL7NrevXIK8Wp9UFTLGUu
WezVIyfl1HqfEcYCnVfTq5Ndpta7Z+lX7dT26mSXV+tjFmt7dbLNq/WBk0pt
ThleHQAAugzw6gAAAAAA6QGvDgAAmYKiKGKvXl1d3dAZpR26G6468ep0S99c
g80TleehUEgVQlroobq6OtqS96mne7Zuz7GQajQGk73kszZtIZ17ZOtmfurp
eGA+Btru9/vprkOqIRMj0/P5y5nWFqdTVXPirVm2PiMMFlcl09qqEFaIpra2
lrbM2ejtlqXbXhhMlA7pSdtJLG05UBxJZ/IqdyAQjaqvrxen45JrnhhtHDSF
pBNmWlsVQiu3sAlU19Znf2R/ZLjB5KxiWjtROjU1NbRlUb7U7R3d5kOB5NM5
Yqz4x7v68cud/vZXJ1E6bDQpUDtgrHngpFKvEk0nHA7HpiP26vR7CgAAABcU
8OoAAAAAAOkBrw4AAJmCpldPBqdbLjFLSXZm0Menz3YImRh9Uj153F652HQu
0inUe+mT6sljsEj0SfXk8UjKMeO5uNSFOo8vxXyMVok+qS5A7NVDodD5/jsE
AABADbw6AAAAAEB6wKsDAECmoCjKww8/fG08fvSjH1Gx6ZVklydF/6sotAD4
2Q5JVTITJElO1bQr5ywdZ6pmWiEBtHR8SpybdMjEUs2HdC/rfCLHggXHrr02
7o9j0SJ4dQAAuACBVwcAAAAASA94dQAAyBQ066sHguXvzrG+Oq00WF5V3QYT
ntWdYUXUA4HA4nz3oyMMprJyeohVbiF9VFFstMO6wL/e0287LNN2VpwkGAyq
QlipE5dUMWCscfJKh2o00kEVwgrRBAKhEfPtg6eU+oOV4nRYEXUy+ZU7pd7D
9DprdCashrkgnaOm4L+G6jZ97qPt4XA4UTrs4niV8LPjTeOWlVVVqUdThbCL
EwgGRy8uG/ihWQ5Uqi5OdQzs4qzdIz08TF9sCanSqaioSJTO8dIQCSGByacj
KeEXJprJ9CqrNH5zuNc69MHSsucmmMmlYOmIn1enBd4BAABcUMCrAwAAAACk
B7w6AABkCmKv7pXk9z4uo4tLvjWrrLEpshIlv24pT0tLC21fuCW6Vma/UWZv
8GRrzLqlqgmQ9r1HPb2GGuhKpvtLIhWzGzuvW8pDNazZJj07IbrwZd56Hz3E
ZK8qpK6uTml7Uj13YXRZ0tdm2Osbv2ztvNBn3HSWf+aOLv050uRUIqu4qtYt
jU3n8+Peh4YZ6dKfu45FxK9q3VKeiooK0m51+F74MJrOlDXS6dOidE6cOKG0
Pan+/pJoOoOn2uoaROmw0VbtdHfLioT0Hm60+yLpVHdetzQ2ncPFXtKZhJDA
/ILIorSqdUt5qHK3O+WXJlujC7Ou8La05RP9LqBt3VIeWnpdlpVxy6LpvDjZ
Vn3iVCvWLQUAgMwEXh0AAAAAID3g1QEAIFMQe/USs/ToSANVnUyti726JMmD
p5hYCFXrml592iobC6FqvVHLq2876OqZo2dRVK2LvbrR6uub25EOVetir+6T
5TdmlLIQqtY1vfrsdXYWQtW6plffVeDm06FqXezVzXbpidFGFkLVutiry7Ly
zqyOdKha1/TqH2/sSIeqdU2vvu8L94NDOi41Vetir25z+P5vTMdvDlXr8OoA
AJCJwKsDAAAAAKQHvDoAAGQKmnVgrO6qx0Z12M63ZpV5JL/4AW/ZX/FGXoeJ
7TfKbLAFxV6d/Dlnk8yr9Z1Hg2KvTjhkqFapdbFXjzxH7anqN7ojnddm2N1e
jXSUQHnWHAev1nXWoNirkz8X5Pt5tf5ZYUjs1QkFpmqVWqe1yRN5dUKZt7L/
GDOv1p2e+Om0tn/poARCQ+Y5ebVebAmJvTr5c/nOAK/WNx8Kib06ochao1Lr
tNZ6Iq9OcErhp8dZeLXu8ATg1QEAIOOAVwcAAAAASA94dQAAyBQ0vXpDQ4Mn
0Mir9ffmWcQiOhwON5xs6azWDR5Jw6uTbV6td8/WHSnxiL062T7YWa0v2lIm
9urkY7tc3sSr9ezZpeJ0yIf9k80tvFp/dITB6ZbFXp1s82q92zu6A0VusVcn
Zyw01/DpzNsQPx3m1Ule/nATr9bfmG4Se3Vy9ZpOne6k1ofp6fKvjYm9Otle
tqNDrT/wTsmeQrfYq5N0jtvreLWet9Ym9uo1NTXl1c28Wn95igleHQAAMg54
dQAAAACA9IBXBwCATCEZr066MbXeb7SppNSn6dXJLlPrPXL0nx2Jhoi9eiun
1md+6qEhYq/eyql1cjqH26fp1ckuU+t9c03HTRrpkA/7ZJep9e7Z+i0HoyFi
r97KqfUpqz304XOxVye7TK2/Mt1OdbfYq0dO2q7W+4wwfmGUNb062WZqvXuW
fv3+aDqNQq9OYE+tT1zhpg+fi7062WVq/aUpVptT43n1mpoassvU+sPDDAU6
H7w6AABkHPDqILNoEHK+ZwcAAODrBbw6AABkCoqiiL16IBAob6OkVHl+gslg
i5YZoYaWh1X2ZockOfTqNHP+IS9rJ31UUbGjTVlpn7zSzqq4+/1+zRByCnIi
r6yeAIP6YT4doy1A0ikpVRKFxKYj+0NvzjBv3O9JKZ0Za8rGL7P7/drphEIh
2rLjiPflKWaPL5R8Oia7/4WJpiJTwnRi5xapbzPLsnZPaunM3eB4f5FV8Sf8
NYhNZ2+Rb9Akk9Ob8NWJfa2tzsALE42F+oiHF3t1+iUOAACACwp4dZAR8PK8
PgEQ7AAAAM4x8OoAAJApKIry1FNP/SYed911lwLA+ca5eLHuN7+J++NcujQU
Cp3vv0MAAADUwKuDCxyVTie/frVt1HDQFnJIJdjP99wBAAB0ceDVAQAgU1C0
nlcXs2630+WRU9Kke4+6jxmllELMNin/oDulEEmSV+10phRC2LDX5XD5Ugo5
UOQu1Hm0+3FYHb7N+1Obm0+OpCOndqVJOk67M7V0Dhd7Dxenlo7dKZMTpRRC
EiHp+IT5VH30keKJzET8vDq8OgAAXIDAq4MLGWbUqU6vrq4ub/uPin6/X5Zl
qQ2yQXbpf+UjHZhgh1oHAABwtoFXBwCATCHJ+uo8rGrH6r3BB97RvTWrrLEp
UklbVV+dp7Kykh46bq3uNdTQb5TZGzzJJqBwFbwZ5N2EhrikimcnWHrk6PeX
RCuTl3eur87TLmUDY5Z6IgtlrvfRdlV9dR5W72XjwQoS8toMe33jl60x9dV5
qqqq6CFdWfVDw4x9RpqcSoM4naamJhrikSsGTrJ2z9LvOhatTK6qrx6bjj8Q
GL/CGynSvkY6fTrSrqqvHjed/IJwtyzd4Km2uoYv+dHK2+qr85BPi/SQoayq
93Aj+bH7NNJpbm6mIV65YtAUGzkROR09pKqvHicdf2DyaomkQ5JqactHVV89
wqhRrT/4QeuAASFZRn11AADIOODVwQULb9TJDSq5cfL5fPR+j7ScPHmypQ2y
QXbpTRrpQLqRzrxdP995AAAA6LLAqwMAQKaQtldfku+gS1gyta7p1Q8d9/xz
iJ6GMLUu9uplTt+AsUYawtS6plcfMd/C5kbVuqZXX7G9Ix2q1jW9eoHO+6/3
DDSEqXWxV3e65WfHm2gIU+uaXn30oo50qFrX9Oprdzm6ZUVDmFoXe/Uig/fh
YdF0mFoXe3WPFCm5T0OYWtf06hOW2Vg6VK2rvXpubkSqt/00Pv44vDoAAGQc
8OrgwoRJdXL/QG+ZyH1R7L2uCtKB3nySEBIItQ4AAOCsAq8OAACZQtpevcjg
fWyUiVfr9Y2nxF7d6ZZfm2FlIVStaz6vPn2Nk4VQta7p1bd87u6Zo+fVuqZX
LzZJ/UabeLVeV98s9upur/z2bDsLoWpd83n1WZ+6WAhV65peffthD5/OlDVS
XZ2GV9eVSv3HmFkIVetir+6RlOyPOtKhal3zefWPN3WkQ9W6plfffdT74BAD
r9bJp9MOr06fVKc/N95Ys3gxvDoAAGQc8OrgAoRKdXLvRG/kyA0t2U3+t5p0
pvfAJJwMArUOAADgLAGvDgAAmcJXqQPjCTTyav3NPDuttS6oA1NTd/KNvA55
22+UmdZaF3j16urqOZtkXq1vPuARe/VgMHjQUN3JRa9yir06QS5v4tX6q9Nt
tNa6oA5M7YnGrDkdD7r3GWk6qveKvTqJXZDv59X6+n0esYgmMyw01/DpTPgk
WmtdUAfGH25SqXVaa11QB6amrmHIvI5vMXoPNx4piZ8O8+rklV2+M8Cr9dW7
NNIhvz/H7XW8Wh+zNFpr/eTQobxUb12/PhQKwasDAEDGAa8OLjSYVCe3qbIs
x94OJQkJJOFkEKh1AAAAZwl4dQAAyBS+ilcn27xa75Gj31XgFnv15ubmhpMt
vFqftc6u6dXJLq/WX5tWSq1ybDpMRJNtXq33GWEw2SSxVyfbvFrvnq3fdtAl
9upNTU0nm1t4tT5tlU3Tq5NdXq0PmmymVlng1ck2r9Z7D9PrLZLYq0deXE6t
d8/S08VSBV6dXPOmU6d5tT5hmVXTq5NdXq0/P8EkSaJ0yO8P2ebV+kPv6YtN
UsBo/PK223ipTrrBqwMAQCYCr5489fX1Z7wnUMGkOrlv8fl8sbd2KUHCySBk
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
7lqxVycs2+FXqfUOr85J9dYbb2xatYoeglcHAICuQVfy6iUlJfSQ0WikLfPn
z6ctV1xxxR//+Mfvfe97dLdv3768qcjOzqbt99133xNPPEH99jc6/yd33pYv
WbLk/vvvp6Ndf/3197dBzh7bM6Vp0PPecsst9M8777yT3elNmzYtmYtD3rid
nTnffihZyMtqt9stFsvx48ddLtfZ+FUnw5LBySnIieDVAQAXLKp/xskHTPG/
/Ofeq996663kjYn8c7p9+/Z33nnn2WefnTt3rs1mS36ErgS8OgAAZAqaXp18
NNtbXMWr9WmrbGIRHQ6HPYFGXq2/Oq3UI4m8Ovmz4WQLr9YfyzUVmyWxVyfb
KrW+ab9T7NXJx/aDhmreRX/4iUY65MO+XN7Eq/VBk81uryzw6uTPk80tvFp/
ZISxyCiJvTo544L8DhfdPUv/6Z746TCvTvIqNNfw6XywxCr26uTq+cNNvFof
+KHZ4fYJvDr5s+nUaV6tPzzMUKDzir06SWfZjgCv1lftjKRTl5PDS/XW9evJ
7xi8OgAAdCW6klefOnXqN9oWM6W7JK9LL72UtPTv359WZSHvYgsXLqTho0eP
pt1I4/e//33S8v7777OhXnjhBdJy6623spZYW56ovrqqZ5LTaGz36oT58+fT
FqPR+Ic//EE1EwH8k+oZ59VtNht5TY8ePRo6Owudk2HJ4OQU9JH1850xAADE
R/XPOPmHXfwvf/xVSBPXgUlEMu8yFPrfu2gxNJ5ztr7JBQW8OgAAZArJeHXS
jan1Hjn6LZ+7Nb062fUEGh8bFXXRU1c76CGBVyfbvFp/bYaVyl6xV2/l1Hrf
XFORwavp1ckuU+skqQ37NNIhH/bJLq/WJ37ikCNaXeTVyTav1gdPtZa5ZE2v
TnaZWu8zwkjdtdirk12m1rtn6dfsjp9OK+fVI/Pk1PrYJXZfWz6Nib062ebV
+ouTLTanrOnVye7ynQGm4g8d90SuwPLlrT/+MZPqpA+8OgAAdDG6jFffunXr
NddcQz/p05bc3Fyy+8tf/lJV6vzll18m7b///e/prizLdMAtW7awPiRH+mAz
a0nbqyc5jcZ2r/7oo4/y3cisSOPFF18cW7smlkz36maz+ciRI/X19WfjV50M
SwYnp4BXBwBcyFzgXp18qGQW4i9/+cvYsWOHDh16zz330JbXX389yXG6DPDq
AACQKSiKIvbq4XC4to38w0rP7JKdR/1KO7WdYWW6A4EAbTE7Kh4daZi+1sVq
rVRVVamiVKOFKmpemVZKfnz+qDwPhUKqECp7+QnMWOvqM8JATkfbSQdVCFPx
5JM7bSGJkHRIUonSqampUaVjc1f2zTV8uMLJaq1oplMern4zz/rS5FJJic6N
XApVCKurw1pmr3f3HqbX2ysSzY2lQzZoy94if88c3YYDcqIQNjeWTpm38vFR
hg+WlvnbJ0DuZ8TpVFTWvDPL+sKHZq8S1kyH/D7QlgVbPP8aqjteGmKjNaxd
23LTTQ2ffEI7MBXP0mGQl1Ls1WPFPgAAgPNO5nr13/72t73a6Nat289//nPa
eOuttzrai6uTQ6TljTfeUI2wfft20n7llVeyRH7605+Slmuvvfa9994rLCyM
XbS08St49eSnQb36pEmT+G4Wi4Wm5vF4NC9ORteBoV6d/DZ++eWXZ+NXnQxL
BodXBwBc4KRXBybWoidDGl69tLSUvivl5eWxxoaGhmeffZa2kzknOVTXAF4d
AAAyBUVR/vGPf1wWj29/+9tKZ8w2n5IiZpuUaojTLdMn1c/2idJJxy7JsnY3
HrdXLnNeoOmU2n2+FPPxSIrdmeIliDe3gE6XZGzZxx8XXXZZ3B/HwoVn6b91
AwAA+CpkrldXcfnll99///0ObsXSm266ibTPnTtXNYLP56MhRUVFtOXzzz8n
t1JsKLL95JNP7tq1i49K26snPw3q1VesWMF383q9yXv1jF631GazmUymQ4cO
nT2vTgYnp4BXBwBcyKS3buk58+rV1dWfffbZ3r17Y9+ArrvuOvJutWTJkiSH
6hrAqwMAQKagaD2vLqbY7E1VsZbafS5PamJWkmSDJWXPnMbcSswpn8Xq8Dlc
qQltnyzrz1U6qX4LYHfK9hS/BSCn0LxuwcLC1ObBIX5eHV4dAAAuQDLXq48a
NWpJO9u3b6+qqlL1/MlPfkK6zZ49W9XucrnoCDqdjjWWl5fPnTuX3Gjxgn38
+PGsQ9pePflpfHWvnrk0NDSQ36vKykqHw0ELG55xyLBkcHIKciJNTwUAAJnC
OfbqAnr27EnerQYNGvTVh8og4NUBACBT0KyvTj8p8DDhWWgsf/BdXd6nbtrO
yoYEg0FVSCgUrQHi9oWf+sD0+gxrRWWtajRVCPkkS9sDgVDuQkffkUaru4oe
YpVGTsRA20lSq3fL3bN12wv8tJ3VMA+Hw6oQVlXmWGl5r6H6qatdtJ2VZBek
41XCz00wvzzVUh5OOp1g8P0ljt7DDSZHdCasSA45Y6J01u9XSDpbD0fTYYVT
qIiIm47OFn7oPf2ET5xs1PbrGVCFsKoykhIe+GHpi5NKgxUa6bCaP8FgaPxy
JzmR3q5Oh/w+0Jam995r+clPGvbsYemoRiO/Y4nSIbMVe/XYevUAAADOO5nr
1WPXLVXxyCOPkG4vv/yyqn3r1q2k/eqrr44rV+vr6zds2HDXXXeRPpdddhl5
46PtaXv15KcBr05uWlwuF13954xDhiWDk1OcgFcHAHQhzrFXLywsHDdu3OLF
i2MP0YW2R4wYcUbzu9CBVwcAgEwhyXVLeajW3lPo7jXUQJeknLclskqmat1S
HipOzTbpmfGlNOStWWWNTS2tnVfG5CHvJkrbk+oj5kdXMu03yuwNnmyNWbeU
h7YvzY8ur9kjR7+/JOJdVeuW8lAPfKDI/dAwI43KW+9rjVm3lIdKcqvD9/zE
0vZVVu31jV8K0mlqalLanlQftSiaTp+RJqcSubaqdUtj01m5w9UtS0eXJd11
LFJO/ETndUtj0zlc7O09PJrOlDXS6dMdo9F1S3moJLc75RcnWdpXWbXVNYjS
aW5uVtqeVB+7JJoOOZ3dF0lHtW5p66hRkSVKyc+tt5Zv3kzFvmo0rFsKAABd
jC7s1ceOHUu63XLLLeTtjG9/4oknSPt9991Hdx0Ox8aNG3fu3Mn3KSoqomcp
LCykLYm8+l//+lfVeVU9k5xGI7x6m1eXyA2lLJ+NX3UyLBkcXh0A0MUQr0aa
yKLHkuTp6OIgl112GXl74tvJ7uWXX04O7d69+yxkeeECrw4AAJlC2l59/V5n
92w9dapUrWt69SKj1DfXyEKoWhd7dZdHfnmqmYVQta7p1SevsLEQqtY1vfrm
A66eOR3p5K33aXr1YrP02KiOdKhaF3t1j1d+Y6aFhVC1runVZ6yxsxCq1jW9
+rZDndKhal3s1fUW6YnRHelQtS726l5JfjuvIx2q1jt5dSbVyc+NN1YuWgSv
DgAAXwe6sFfX6XRXXXUV6Ulun+gyamTy77//Pg2fOXMm7bZr1y5VC3mze/fd
d0nLd7/7XZZsrFfPysr6RtvCo8XFxfx5VT2TnEbj196r19fX05XoyVU6G7/q
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
ACBX4NUBAAAAAPIDXh0AAAoFwzowDdETj81zimq9tl7RF9GNjdH562VRrW8/
ouh7dfrv7upmUa2/vCGg79UJf6hTo9ZZrfVMXj2RTtsTC5yiWq+2GabTuGiT
Iqr1LQdkfa9O/91vbhHV+rx1fn2vTkjhTo1aZ7XWM3n1+NiaWosXuUW1fswi
63t1evXe2BIU1fqmfcmQDyZNEqV6rKKCp6PpCl4dAACADvDqAAAAAAD5Aa8O
AACFgqFX7+joONlxWlTrE16t1xfR0Wi0tzcmqvXbp5j9koFXp21RrY8srj1U
49f36rStUetL3nbpe3X62N7R1SOq9eKFNkOvTruiWh8z2eTxKfpenbZFtT5y
XC1b+VTHq9MVlYZuUa2/usGp79Upr65TPaJaf2Je+nRiglenbVGt3zLR5PIq
kV27eq+8UpTqmnRE4NUBAADoAK8OAAAAAJAf8OoAAFAoZOPV6TSu1p9Y4PQm
J5LreXXa5Wr9tilWsyNZnETfq8f61Dp9bT+aXP5S36vHBLU+7y1ZScw91/fq
tMvVOiXlDeiVteFePdan1sdMttTYk2PT9+qxPrVeVGx651AyRN+r0y5X67NW
B1g++l6ddrlaHzvH7vIFs/HqsT61fstEc5Wt77uzZk3cqPdJ9dR0OPDqAAAA
dIBXBwAAAADID3h1AAAoFFRV1ffqTKsSbq8yfbnD409WTeHtHFWgryU4d7Wj
yiKlHkqN4i0Vu730lVMIXeLF1XZqyH5sXr9K6bh9xlcRD720znnElFs6b7/v
Xf2eO6eQGps8Z5VDySKEH/JL8XSc3owhaS/0ynrnweqA2FvzkiX0pROi8+Lo
h+Tdm75X538mAAAAMHyAVwcAAAAAyA94dQAAKBRUVX3ggQd+mI7rr79eBWCo
KSsrS/v+JJYvXx6JRIb6ZwgAAIAWeHUAAAAAgPyAVwcAgEJBzXq+eursYllW
Zyy319TJOc1hLt/ifme/L6c5zPuOB15a58xpRrTDozxbVu8LqKm9ZQpRVPWF
FfYqi5R9CLFym2fDbk9O6RysDry42p5TOi6vOnVpvcen5DK24OxVjqOmgM6F
2iZObNy2LZvedNLJMiTv3vTnq/MqPQAAAIYP8OoAAAAAAPkBrw4AAIVCMLv6
6iKhULwguSQpzy7z3zCu9q6pNqUxXmZcU19dpKmpiR1avzdMITeNNx20tvIB
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
HE9n8ebk+MMZCpLzdI6a1dGT4uk8udDV2R1PR1NfPTUdl1d9ZI6DQu4otQXC
XbF09dU5jY3xYumKos5aHU/nxvGmvTXN6dMpLY0vUfqFL3S9/jo7lPqxJVM6
MdRXBwAAMFgMmlenQPbR+9Zbb6U7IG+nGwRrf/7553nj0Hr1VD784Q9T1LZt
2wZ2PAAMPuJk9dTn8LOEOsSUdQAGGWbFNwuItrxLIPVM8fw8Lk0/6f/xH/9B
98fvfve7ab26JEl///d/T+033XQTfVqkFvoU+eijj7KTDxw4MDAvwZACrw4A
AIWCvlevskgjE1JdVOv6Xl2SlLueMfMQptYNvfqUN+p5CFPrnUZefc17bh7C
1bq+V6+tk4pKzqTD1Lq+V5cV5f+mnUmHqXVDrz6t3M5DmFo39Oobdnt4CFfr
/dJhUj3x1fvFL4YrK+HV4dUBAGB4MmhefdWqVXQ7+NjHPpZaUP3hhx+mQ9/6
1rdom+5Nbrd7zJgx1PK///u/7gSa0uV0M6qvr9+4ceORI0fa2to0vdHthkJk
WWZj3rdvX0VFBTX6fL79+/ezu9LOnTvpHHY/zQYdr043ROoqEAikHUB7ezu9
vFu3bhWvRXfMXbt2USOTDGmhwH0JsCgqGFhYZXV6ypUkiTYG9vcJdUjdUues
yvpQ5wrABcEQevXZs2fTzfGyyy47cOBAWq/+zDPPsFu/WFOdHiQ+97nPnYu/
ng8J8OoAAFAoGM5Xf/tAsKjYJKp1w/nqx+tCYyZbRLUejkT1vbrbqzw2zymq
dY/Spu/VFUWdv17WqHV9r068eyhYVGIS1brhfPXa+uDtpVZRrYciTfpe3etX
n1jgFNW6Wz6h79WJVzbKGrV+Jh1BqsdGjOhcuZIdgleHVwcAgGHIoHn1efPm
fSjxz8BT1/ekO0hNTU1dXR1tl5aWpt5Edu3axU9+9dVXeWEW4hOf+MQ999wj
2vWlS5dS+zXXXFNeXv4P//AP7DS73U5narr92c9+luXgdbz62rVr6dCXv/zl
1AFUVFRcfvnlfJxsQv7UqVPZ5D2Cur3zzjs1r6fP5xszZgwPvPTSS0eNGiV6
ex3oNk33burB04cbAAFXAofDUVtba7PZzsWvFOqWOqdLsGsNdcYAFB78Fzj9
Mqdf6YZ/ohJteWp1l9MJRK++KUFqVDZ3GRGn08kWTFm8eDFtp/Xqt912GzWm
lkqbMWMGtV977bW5XnQYAq8OAACFgqFXp3vutsqoqNYXvOXUF9HxWWFqp6jW
n5hfF5D1vDr992THaVGt31FqqbFJOl6d6O2NadT6lv0+fa9OHzN3VzeLan3u
Gpd+OvRh3x/qFNX6H+fW+QOKjlen/3Z09Yhq/fYp1uPWgL5Xpysu2qSIan3D
bk98zOPHi1I9VlFBWcCrw6sDAMCwZdC8emVlJbsjPPjggzo9lJeXX3/99Wwm
2xVXXHF9gpqaGnZ0+vTprBN26DOf+Qzb/dWvfsV7YFr705/+NFsl7Utf+tLV
V1/t8/luuOGGH/zgB+z8733vexT+l7/8JcvB5+HVL7vssksuuYRVkuflZO+4
4w6myv/rv/7ri1/8Imt88skneSzdrPm/pr8mAdumkdNjieE46cbt6c9Q+yEw
vHC5XE6ns76+/vjx416v91z8SqFuqXO6BF0IXh2APND8Ghcrp6VlqLw63Xnp
9vTzn/+8M+HY03r1b3/729T44osvamLpfkrtn/zkJ8+Df9gCrw4AAIVCNl6d
TuNqvajEVLHba+jVaVdU6zNWuBTFwKvTtqjW//Ci3eVV9L06bYtqnS53uDZg
6NVpl6t1SmrtTp+hV6ddUa1PK3fKioFXp21RrT80q87hUQy9Ou1ytX7LRPOB
4/64bX711diVV3KpHkv8e1h4dXh1AAAYtgyaV29vb//pT3/Kbgqf/exnx44d
u3btWnGtUpG09dXpTvr5z3+e2uko73PatGkfSkz8pnsWa2Ram7j66qs1ddTd
56C+eiav/qHEfHi6XXYmJuR///vfZ42/+MUvWCO9jExKfPOb3+SxlDK1XH75
5cePH2ctR48eZbPus1niTZypDq8OUmGT1evq6uh9RW/Lc/ErhbqlzukSbMr6
UGcMQOGh+TVOv9j1f/OnX4U0cx2YTGRxMzzD6tWr6cZ00UUXsX9rlsmrswnt
69ev14TX19ez8+12e07XHYbAqwMAQKGgqqq+V29qajqRYOM+5caS2ncPBdU+
TvSHPtCx9nA4zFrMrujoiaaZKz2hUFL2trS0aKI0vYUbWh+ZU09fcjCpZ+lB
WhPCZC8PaWs7MWuVhy5El2PtdIImhKt4+uTOWigRSmfjPlUzAE5bWxv3wKyl
zhP9zdPm55e7g32VcAzTaYi2PTa37vczbQE1Yzq8rg5dkbXMX+e9+ana6voG
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
1DoAAAwC8OoAAFAo6Ht1f0D5y0IHd9RMrTOvfqA6cMtEMz808XVv16nkBO+X
13t4O1Prg+zV1+700nVFtd7PqwtSPTZiRMvSpfDq8OoAAAAGEHh1AIYnolGn
pzh6bpRlmT3uUktXVxf7B4O0QbvsGZVOoNPoZNGuD3UeAABwPgOvDgAAhYJh
HZiW1pMli9yiWj9qTlZUt0sdolqf8JqH1VqPRqNlW0OiWl+/JzCYXp0e/rdV
RkW1vnhTsj5894QJolSPVVRkEtHw6jrpwKsDAADQAV4dgGEIl+r0+MSeGOmx
kBr1f5zpBPbsTSEUCLUOAADnGnh1AAAoFAy9Oj02d5/qEdX65NfquLkV1Xp8
avpBL/PqdEhU63dPNTvdg+rVaVtU6zc/VWt1SOHKyp6vflWU6rHMIhpeXScd
eHUAAAA6wKsDMNxgUp0eHdlzLD2P0W72P9R0MvsnqxROnUCtAwDAuQNeHQAA
CoVsvDqdxtX6hNc9shoSzS1T64lVSpNClXn1WJ9av3dancMbGeT56myXqXUa
XnV9MqRj797Y17/OpXoMXh1eHQAAwEADrw7AsIJLdXpOUxQl9WkwSyiQwqkT
qHUAADh3wKsDAEChoKqqvlfn+APKS+scAVlN5UB1YO0Od5oDqvrGJqe5XqIN
5tXTYjab08YOCDSwA8f9YkvDli1NfTXVwfBH36vn/cEQAADAuQNe/expb28f
6iGA8wQu1ZuammRZTp0xkhMUTp1QV1DrAJzHvD1ADHUehQq8OgAAFAqqqj7w
wAP/kY7rrrtuAO2oz+fbmwGr1TqAFwLnGeXl5Wnfn8Ty5csjkchQ/wwBAADQ
Mqy8ekdHhyMzbrd7oC40adKkb33rW9OnT890gs4wOM3NzZ0JoXHZZZf98Ic/
PHHixEAND1yYdCRgNdXPZqa6CJu1zmqts/6HOksAwAAzhF69urr6tddemzp1
6po1a1wul86Z27dvnzNnzowZMzZu3Hie3S7h1QEAoFBQjearB4PBlds8r25w
hfrgwlNSQhMX1x81y5p24lCNNOm1Olk9E8Lmq+9Kgc9XD/VH7C3ToVAKqYdO
jB/fXFbG2ymdLHvLZgAD21s26ZzT3oZnOvrz1c9yzhUAAIBzwbDy6vSpPNN9
hPj4xz8+UBf6v//7P+rw0UcfTXvU4/HoDEO8tdHJ9913H9s9evToQA0PXJiw
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
6V6f3y8fqK4ekerqza5k+fKWmBZ7mH1Xb6GfEwEAu6NtdvWI5Ed4vafq6rfc
cov58FmzZslgp06dqqqqakMrn++7774yIi9P5t1Wrlyp7q3W0l3d7XbrwbFj
x6pB83Ky3377rfkJyydWLRHz5Zdfmh9CXkNVr4j5POnqDqW6enp6+vLly6ur
q1viK12mlcnlIejqQBvXxru6+vffgw46SP7bvXv3hx9++J133unbt696/ZJX
Q/kOo/a89957ZeSGG26wTqLufHr++efH+aBtGV0dAJzCMIzrr7/+wEiOOOII
FTYLvEZuni9i80zPiZzTrZtauqsXt0ycR6sbN25cxL+fYsKECXR1AGiD2mZX
/93vfne+xZtvvqn3VF3dPCIyMzPV4QUFBbWhH3XVb0tLS8Me6OSTT27prh6W
weVYGTzkkEPMg6mpqeoZlpeXy2/Xrl2rfrt8+fIkE/XvBSLmYrasA+NQuqvL
X9rt27e3xFe6TCuT09WBti+xdWCsFT0eCXT1a665Rr0k/d///Z/H4zG/zKnY
3r9/fzXywAMPyG+vu+466yQDBw6UTRdddFGcD9qW0dUBwClirq9eVFL2zAdZ
/3oroziwoSpEB8+kzNLez6dM+K5QjeuVW+Tnr7HfFvz9hZSUnDK1SV64VVdf
vHjx0qZ0V69qSq8NEggEwjapRb/Nh2weNGjHGWdsSkpS47JD2CF6SXb5yT3m
bIpe6kROJ2yTXsNcfmIN26Q/OdFOR44N26QXTqmyiHY6ekl2Oa84T0fPZnM6
8iTjPB39Z21zOhs2bIhzNn06Ef+sWQcGABynbXb1ONdXnzZtmnmwsLDQ3NU/
+uijaJd59+7du6W7+umnn27eTXX1I444wjyYnp5u7upjxoyJ9jKqfP/99/bP
k/uWOpTq6mlpacuWLWu5ri6Ty0PQ1YE2LrH7lu6xrq6Xf7G+JD322GN7ma5C
Hzly5F6hfyi3TqLuNnLPPffE+aBtGV0dAJzCvqsXeI3+H2are48++m7Oppr6
9+QqnP6cVPj3F1PVpmnz6m+sqW/0+dFXeWr85pdS3Ub9rTDlJzvV1VvkvqVD
hzbcpfR3vwssW2ZEutEn9y2t476lAIA9pR13dfWq1K1bN+vh1113XRvs6vpl
tK+FzCb/Xb16dZxPGM4i76/ky0r+Grjdbvm4Jb7SZVqZXB5CHihmpgPgIHu4
q6taLsLuUlrbeEvTfffdtyq0uNk333yzV+hW3dZJLrjgAtk0fPjw3Tz3toCu
DgBOYd/VXZnePkMb4rlO66qrT//RfVX/ZL1p2rwSFaK9Xv8TozP0uErrLdjV
dVSXX927BydOpKvT1QEArasdd3V566J+Ky+OYYerW5e2ta6+bt26vULLravf
ouNQXV3eKXk8Hnl71hJf6TKtTC4PQVcH2pk93NW//PJL9cqVlZUVtundd9+V
8WOOOUb9Vi/OlpycbN5Nfmw85JBD9rLcTMSh6OoA4BQx14Fx+zbcMSzdnNbz
8lUENWYvLzOn9alzGxYAKS4pG/Cx25zWkzJLWqSrN43qdTNnRgvRdPU6ujoA
YE9px11dXnkPOOAA+e3IkSPNu6nE3Qa7enV1defOneW3MoN5N9k6NUTemcT5
hOEsuqt7vV6/398SX+kyrUxOVwfaH/u7kUar6FZxPpz8JHjooYfKS9Wrr75q
HpdvLJdeeqmM33rrrWpEXtQOP/xwGfnb3/5m3lMtrt6pU6ecnJzm+AS0Mro6
ADhFzK4ur2X+si3mtD5oTIYut7OapvXvlniM0DLdW7buMKf1Wwe7ctzN3NXL
x4wJi+p10UM0Xb2Org4A2FPaZldfu3Zt0MJ8FXc8XV3IT/d7hf6f9M8++0xe
iGVk6dKlRx99dNvs6uIf//iH/PbAAw+cOXOm+jx7vV61ak23bt3U/1mP9kfe
X1VXV6sbBuXl5bXEV7pMq96/yQPR1YH2ZA93dTF8+HAVxvW/Asv3lvvuu0+9
oo0bN07vOXjwYDX4xRdfqJFVq1ap25vedtttzfhJaEV0dQBwini6uuzmL9us
0vqdr2akZfvN5VZftT5yeoHP71ddXcZ1Wr92YMq8Vf7mv169sLDuvvvMUb2O
rk5XBwC0AW2zq0e0//776z3j7OrybH/729+qwYMPPviII45Q1fqss85qm11d
Xl7//Oc/q8EuXbqccsop++23n/qngRkzZsT5bOFE8harqqpK3vtlZ2db32Xt
JplQppXJ5SGI6kA7Y27js0LMIztCmrery7eUc845R71UHXPMMT179vx//+//
qd8+8cQT5j3l583f//73atNFF130l7/8Rb2ode/eXV7xm/sz0Tro6gDgFIZh
2Hf14uLiQIgru+jht9LScwwt0Gj6j55hE7OMUIM1b/IbJc98kPHj8kIZUV19
/vz5C5qSQZfLZZ5NKWqcTT4I2/S/RzGM2rvuqpw4McKmKIfo04l5iFpGvrlm
K7J8cqyHlJSU7Opsdp8cC4eejn1Xt/6rBwCg1bWprp6Xl2fT1Q844AC95ymn
nCIjn376qflwn8+n9vR6vXowMzOzb9+++hr10047bc6cOffcc498/O9//zvO
J7bPPvvI/j/99JN104wZM2TTiSeeqEcmTZokI2eccYZ5tx9//FEGjzrqKPOg
XnvWvMCLvMQ/9NBD8jz1iffs2VPeg8X5VOFQNTU1GzduLC8v93g8BQUFzftl
LhPKtDK5PARdHWhn9nxXrw2l9SeffLJTp076papHjx6DBw+27llYWNi7d2/z
q/lFF12UkpLSTGff+ujqAOAUhmHIj4HnRHL++ecbzSc/P39RFKqrAxFNnDgx
4t9PMWXKlEAg0NpfQwCAcG2qq7ecmpoa+Sle3uG09hPZBQUFBfKcuYdpB6GX
gikuLs7MzLT+b4YJk6lkQpmWRWCAdsm+q5vXgfkmpFm6uiJvCebPnz99+nT5
JmO/Z0ZGxhdffPHZZ5+tW7cuobNsu+jqAOAURqzr1cXPSYVzV+RHbJ5Tf3Dn
5vms4zl5/uk/us0j6nr1iOLv6hXvvFOUm7sLTRbOZ3+9unVZGwBAq+sgXR1o
+/Ql63l5ebm5uc31NS5TyYRcrA60V63Y1VFLVwcA54i5vrort+LvL6Ze95wr
KadhKW+9QMqkH4uvfCb50XdzNtVsrzMtSF7gK33o7WzZNG1ew8Lg8q67GdZX
Hzq0fjX1G24oKyhQm6yno8ZZX93mk8P66gCAlkZXB9oI8yXr6enpHo9n97/A
ZRKZiovVgXbMXNTN7Fd9oas3F7o6ADiFfVdPSvPe+ILrymfqb0uq07rq6p98
k6PGdVpXIdrr9f9zZJrepNJ6M3R1FdVDvzZfe60RukGq9XTo6nR1AECro6sD
bYe6ZF29fU1PT9/NhdblcJlEvaflYnWgvaKrty66OgA4hX1X9/n8wya5dSRX
aV119aR07x3D0s1pvWpTQ2v9dG7BVf2TzWl9d7u6KarXde9eOXGifTqmq9PV
AQCtiK4OtCl6NRiv15uWluZ2uxP70pYD5XCZhBVggPZtV/s5Xb150dUBwCli
rgOzaVP18KkF5rQ+b2XDMiz+si3mtP7IqGy11nowGJy1vMyc1sd960m4q9c+
95w5qtfNnFlaWkpXp6vT1QGgzaKrA22NfIlVVVXJ+zSv15uSkpKeni4fx/9F
LTvLIXKgHC4fy1R8zQLtGF29ddHVAcApYnb1mpqaHTt2mtP68MlZutya0/q1
A1Pmr8xXXV02mdN6v9dTc9yJdPWirKzt559vjuqyia5OV6erA0BbRlcH2iCV
1uXNm7zpysjIWL9+fVZWlvW9XBjZQXaTneUQ9d6PqA4ALYquDgBOEU9Xr6uP
zA1p/c1PC41Qa9XlVqX1awemrEyvVOP66pfZobT+r7ezCvxlCV+vXpmdXXfh
hTqq19HV6ep0dQBo2+jqQNskX2hqQRh5x+jxeNLS0lavXp2cnJyTkyPv0Kqq
qraHyAfyWxmUTbKD7CY7yyFq+Re+WgGgRdHVAcApDMOw7+qaz+efNsftC90w
NExSuvfHn/Ot4+KrBZ7svPpDVFePyOVyRTxWK05ODk6dar8P2iv7rh4IBFr7
awgAEI6uDrRZ1dXV8uVWWVkZDAaLi4sLCgqysrLk3fjq1avly3ZZiHwgv5VB
2SQ7yG6ysxwiB8rhrX0GANDO0dUBwCkMw7j77rvPjOS8885rxjrq8XgWRpGa
mtqMD4R2ZuLEiRH/forJkyfT1QGgDaKrA21ZTU3NppDKysqKiorS0tLi4mJ5
0+X1egtD5AMj9P8YyibZQRV1wY1KAWAPoKsDgFMYsa5Xl3fUH850j5iSXVIS
UHTwzCsofvjttAWrvWpcvSFX5q4sfPSdtPzCYn2Iul59gYW+Xj3QaNOAAZv6
99ezFRUVBZrSjxKwiLapqHHtGpk2zkPMpxNtthL9SYl7tuY9neadrW2ejv31
6rt0yy0AwJ5BVwfaPl3Xq6qqKisrN4RUhKiPZVAtpU5RB4A9ia4OAE4Rc331
cbO96t6jo7/07dxZf4hqqjl5/ofezpbx655zJeXUr/KtFyRfsMZ/3bMpsunR
d3M21WyvC93wKN711YcOVXcp3fbCC2o26wLarK/O+uqsrw4AbRldHXAQtTJM
RKz6AgB7Hl0dAJzCvquvTfVeMyBZdXWd1lVXf++LbD2u0roK0V6v/85hLr1J
pfV4u3pjVJdfO7t1C8yfT1enq9PVAcBx6OoAAACJoasDgFPEvF59YVJpr4Ep
5rReVFTf1X0+//CpBea0vjarUtXRtNySO4alm9O6zyiL3dVNUb2ue/etn32m
ZqOr09Xp6gDgLHR1AACAxNDVAcApYnb1mpqan9MqzWl95NTsxnC6MyytL1pd
IOPBYNBftsWc1h98Mz3HbdfVqwYNMkf1upkz5dWErk5Xp6sDgBPR1QEAABJD
VwcAp4inq8tuOq1fOzBlzs8Futya0/qDb2Vm5/lVV5dN5rT+4cw8++vVg998
U3fiiTqqy+G1dHW6Ol0dAJyJrg4AAJAYujoAOIVhGPZdXX7U3RDy0yrjb8+l
LFhTZDRS4+XlFUMn5Nz/RlqBv0yHU7Up01N22xDXR195ZER19cWLFy9pSgZd
Lld9Iv7hhx2//nX1f/+rjtW1ORAIbGhKxV79BMzCnpsmk+iqHOchOp7r09HU
CvOqKsc5mz6dkpKS3T8d/S8L1k9OtEP0Jnm4sHGd4oPBYJyzyYnH/OTIJ7BZ
Tse+q1vDPgCg1dHVAQAAEkNXBwCnMAyjd+/eB0fStWtXoyl1ObqVz+fPzfNF
3KQP8Xg886NITU1tiLQZGREnQUc2bty4iH8/xYQJEwKBQGt/DQEAwtHVAQAA
EkNXBwCnMGJdry5y8vxp2d6IzXO1q9AfqbXLoGwyj6jr1SNS16trxampxY2l
HbC/Xp2uDgBtEF0dAAAgMXR1AHCKmOure43gg29m3vVqmq+kqiZEr1uyLKX0
2oHJb3+WX11dP67XMC8pCbw+1XPtsykrUsvUIYFAQHX1pUuXLm9Kd3W1Z63X
u+PPf97Rs2el261mk5+1a5rSK43UWKhxeYZh43rdEvkgbJM+nbDx6urqxtMp
Cduk1y2pqqqK+ASss1VWVqpxOTZsk16GpVp9HnfldILBYJyno2ezOR15knGe
jpy4Gpc/2Wins2nTpjhPRy+5Yz0d+bO27+rW9eoBAK2Org4AAJAYujoAOIV9
V8/J8z/4Zqa69+g9wzPKKrfKISprz/nZc92zKWrT6C99O3c23OjT7zdenZSj
xq97zpWUU39jzfLycvv7ljbcGbO0tO4vf6m/e2nXrjt69lRXrW/gvqXctzR6
V7f+9QAAtDq6OgAAQGLo6gDgFPZdPTPX1+/1DBXJdVpXXX3WEk+vgSl60+gv
fdu314don88/ZHy2HldpPa6uborq9V39vPOK16+nq9PV6eoA4Dh0dQAAgMTQ
1QHAKWKuA1NUuvGBkVnmtJ6R27Ci+s9plea0/u4Mr1prvbS0bPjUAnNaX7zO
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
rY6Vx9UZNtiU9QnE3KTWhFeNOs5DdO7Wp6Op2qwadZyztfrp6E3W09GzJXA6
1tn0IfIJjHM2/W8BET859l09GPpHHABAm0JXBwAASAxdHQCcwjCMPn36nBjJ
aaedZjRV6PUbUUTbpMc9Hs+CKFRXr1dQEG1+dFgTJkyI+PdTTJo0KRAItPbX
EAAgHF0dAAAgMXR1AHAKI9b16sKV5VuT6o3YPOeuyI9Y1GVw3op884i6Xj2i
/3X1kJKVK+VX8zRZOJ/99ep0dQBog+jqAAAAiaGrA4BTxFxf3e0t/8er6bcO
Sc3zb9oWoldB+WFl6dX9U176xF27eauM6yXEi4oDz4/Lu3pAytw1ZeoQ+XlZ
dfXly5evakp1dZlT7bk9N3fn2WfvPOus6rQ0NVt5efm2pvQiJNss1HhxcXHY
uF5CvLKyMmyTXgUlbFwvIV5aWhq2SS9pUl1dHfEJWGfTK6LLsdFORx4xztOR
s1Cb5LziPB09mzxc2Lh8htUmeZJhm/Sfddi4XhHdejp69Xv5+xDxCeg/a62q
qkptqqioCNtUUlLC+uoA4Dh0dQAAgMTQ1QHAKey7emqW985X0tRtSW8bmlZQ
XH9fS1Vuv5jrvrp/ito0ZIJn2/ad6kafXq+//4eZavzqASkLkupv01leXm5/
39KGO2N6PHXnnFN/99KuXXeceWbJqlUG9y3lvqV0dQBwmpbr6j8DAAA4HF0d
ANoH+67uKfA/PjpLRXKd1lVXX7SmoPfzqXrTkAmeLVu3qzr67uduPa7Selxd
3RTV67v6lVcWZWXR1enqdHUAcJx4fmakqwMAgI6Jrg4A7UPMdWDKN2x66oNc
c1pf27jWelp+tTmtDx6fp9ZaDwaDY2cZ5rT+7RKvfVcPrFpljup1V19d29iH
6ep0dbo6ADhLPD8zJtbVAQAA2je6OgA4RcyuXlNTU7tlhzmtvzA2U5dbc1q/
qn/y90s9qqvLJnNa7zPUleO26+qbHnzQHNXrKivl1YSuTlenqwOAE9HVAQAA
EkNXBwCniKery246rQ/42O31FZnLrUrrV/VP/vbnhtytunpdY1q//eX0dHcg
xjowhYV1d96po3r9I9LV6ep0dQBwJro6AABAYujqAOAUhmHYd3XNU+B/e3p2
QaHfsFi0pmDqD27ruPjoy5yk9Pp1Y1RXj8jlctXvWlBQ1b+/WlMd0Oy7uvWf
CQAArY6uDgAAkBi6OgA4hWEY/fr1Oz+SP//5z81YR/Pz8xdF0dDVgUgmTZoU
8e+nmDJlSiAQaO2vIQBAOLo6AABAYujqAOAURhzXq38xzzP+29ziRjp4+vxF
L4/PWpvqDRsXq1N9L0/IlB30JnW9+nwLfb26nn/D6NEb3n3XPFtxU9HGbTYl
MFs8hxQVFbXcE9jzs7XN07G/Xt26Sg8AoNXR1QEAABJDVwcAp4i5vvrsn4uv
7p9y5TPJMxY1XBisameh1//CJx4Zv21oWkFx/brcekHypMzimwenyaYhEzzb
tu+UTeXl5THWV9creE+aVHfssfJr63/+o2ZjfXXWV2d9dQBwFro6AABAYujq
AOAU9l19bar3qv7JVz7T8EulddXVR3+ercdVWlch2uv13/GyS29SaT3erq6i
eteu8mtn166BefPo6nR1ujoAOA5dHQAAIDF0dQBwipjXq38239CRXKV11dU9
Bf6nPsg1p3WPUa3q6PKUot7Pp5rTeqA0GLurm6K6/No6cqSaja5OV6erA4Cz
0NUBAAASQ1cHAKeI2dVrampmLik1p/Xx3+aqClqzeUdYWl/jKpTxYDCYll9t
TuuDxmTluj02XX3D6NHmqF43apS8mtDV6ep0dQBwIro6AABAYujqAOAU8XR1
2U2n9av6J//3B7cut7Vb/pfWb385PSndq7q6bDKn9cGfZOfl2XX1ijFj6rp1
01G9fma6Ol2drg4AzkRXBwAASAxdHQCcwjAM+65eUVFRExJaEGb9l4sMTY2X
b9j0+Ois24ak5hRW6A6sNq3LKr9hkOvlie7i4hK1DszSpUuXNyWDLpervlFP
mbLz2GO3jhypjtWxV37WrmlKLUSjn4CZGi8qKgob17FXn07YIdbZqqurw05H
CwQCalNVVVWcs1VWVuqsHbZJl3B5xDhPp7y8XGftsE2qhNt8cuSzFzau/51C
Pue7ejryqYh2Ops2bYpzNv3vFPLHZD0d+65u/XcKAECro6sDAAAkhq4OAE4R
s6ubrUwuMCLxFPiTM7wRN61J9fp8fvlAdfWIVFevj7SLFkWcBB2ZfVcPBAKt
/TUEAAhHVwcAAEgMXR0AnMIwjN69ex8SSdeuXVXYLPT68/L9EZtndl7kceum
/Pz8+VHorq4UeTzya3drLNqLcePGRfz7KSZMmEBXB4A2iK4OAACQGLo6ADhF
zPXVi0tKB36c/cg76cWBig0hOngmZwdufCFlyg8FalwvTlJcXDxhdsHNL6Wk
5gTUJhlR16svXrx4SVP6evUNjbtuveEG+RX0N2T5kpKSDU3ppU42WKhx2SFs
XK/cUlpaGvEQ62x6cRJ58mGb9FIncspxzqYXorGejl7WJtrpWDfplVvkvMI2
JfDJ0adTVlbWjKcjn8BmOR3769WtC7wDAFodXR0AACAxdHUAcAr7rl7o9T83
tuG2pE+8n1Ozuf5OlCqcrkwpvHlwmto0Y1H9NcP6Rp/jZ+Wr8duGphUU198K
s7y8XHX1aPctbbgzZm1t3c03q7uXbr/xRnXV+gbuW8p9S6N3detfDwBAq6Or
AwAAJIauDgBOYd/VkzO8tw5OVZFcp3XV1ad8n6vHVVpXIdrr9T/6TroeV2k9
rq5uiurya+eppwZ+/pmuTlenqwOA49DVAQAAEkNXBwCniLkOTHbBhj5D081p
Pb+wYaWRmUtKzWn9i4UNRdcoLnvqg1xzWndll9h39eL8fHNUrzvttM3r1qnJ
6Op0dbo6ADgLXR0AACAxdHUAcIqYXb2mpqawZLM5rT8/NlOX27C0/v3S+pVb
gsFgzeYdTdL6EFeO266rb7r/fnNUr0tLk1cTujpdna4OAE5EVwcAAEgMXR0A
nCKeri676bR++8vpyZl+c7nVaf3VKfk+n191dRmv3dKQ1nsNTJmzwm9/vXog
KanuvPN0VK8/nK5OV6erA4Az0dUBAAASQ1cHAKcwDMO+qxcXFwdC1mcY/3wj
1ZXdsAiMCDSa9F3eS+MyDSN8k9df8vi76d8tK5QR1dUXWMigy+Wqz9fJyVsu
uyy4ZIk6Vq3irqJuoCnrE4i5SfVh8+nEPEQ/AesmPV5SUrKrszXv6TTLbLtz
Ojazxf8E7D859l3d+q8eAIBWR1cHAABIDF0dAJzCMIy77777zEjOPfdco/nk
5+cvjCI1NbUZHwjtzMSJEyP+/RSTJ08OBAKt/TUEAAhHVwcAAEgMXR0AnMKI
db26WJlSuHB1fsTm+flcd16+3zru9vi+mJdnHlHXq0ekrlfXSufOLf3pp+Zp
snA+++vV6eoA0AbR1QEAABJDVwcAp4i5vnq6p+LmwWk3PO9K9TSsTK5X7fh0
fuDKZ5KfeD+nZnP9Stp6QXKfUfrY6BzZNGNRQ/MsLy+3X1/9fyt4r19f95vf
yK8tK1eq2VhfnfXVWV8dAJxlz3R1eflITU2dPHny888/P2bMmFWrVlVVVe3y
z65xeO+99/YJ2XfffeWpqsFjjz1WDT711FPN9UAff/zxPo3kxTfabvLqnx2S
l5cXcQcZVzvIi/4efm4JqK6uljeEH3744UsvvfTll196PJ5mnBwAAMehqwOA
U9h39aT0wr+/6FK3JdVpXXX1ibNz1bhO6ypEe73+h95K15tUWo+3q6uo3rWr
/Np5yimBpUvp6nR1ujoAOM4e6OqzZ88++uijw14X9t9//5EjR4btmZKSMidk
6dKlu/QQ2jvvvKMfQl6Y1OCRRx6pRv79738nNq3V+++/rx/I7/dH223JkiV6
t1mzZll3+MUvfqG2vvDCC3v4ue2qsWPH6merXXrppeptCQAAHRBdHQCcwr6r
e73+lz75Xz9XaV119bWp3j5D081pfVPNNlVHp/yQr8dVWo+rq5uiuvza3qdP
UUEBXZ2uTlcHAMdp6a7+xhtvdOrUKdqrw+23327e+bbbblPjv/rVr3bpp1qt
LXf1X/7yl4WFhWE7OKWrv/jii9H+EE866aScnJxmeRQAAJyFrg4AThFzHZiN
G6tfnpRvTuuL1xaqClpYstmc1h9/L1uttR4MBmcuKTWn9cnf59t39dK5c81R
va5v39rKSvUodHW6Ol0dAJylRbu6vDTst99+6oVg7733/vvf/z5o0KC77rrL
fNmzvLvQ+7fvri6uvPLKsB0c0dXT09P1hN26dZM/xNdee+3MM8/Ug0OHDt39
RwEAwHHo6gDgFDG7ek1NzfbtO81p/ZWJWbrcmtN6r4Ep81bkq64um8xp/d7h
aTluu66+8cknzVG9bssWeTWhq9PV6eoA4EQt2tWnTJmiXwgmTZqkxzMzM7t0
6aLG77//fhmRtxnySnHuueeqwSOOOOKTkKysLPOEycnJ48eP79+//yOPPDJq
1Ch5uxK2TvuudvXq6urly5cPHz78X//614QJE9xud7RzkfdFw4YNGzJkyOzZ
s2sT7eri9ddfN+9g09XlNf3LL798+umnBwwY8PXXX8vbhmZ5bj6fb9q0afIJ
HDp06IIFC+JZ6F4+1Wq2zp07y5+dGpR3Kccdd5wav+CCC2JOAgBA+0NXBwCn
iKery246rb/23wLDKDKXW5XWew1MWepqyLOqq9c1pvX7R2Z5vKUx1oGR2VRa
D0V1ObaWrk5Xp6sDgDO1aFd/+OGH9QtBdna2edO0adNeDBkzZoz89rnnnov4
8jFu3Di1v7wm/vOf/7Tu0LNnT6/Xq6fdpa4+Z86cww47LGzCv/zlL/L6aN5N
3vx0797dvM/FF1/8xhtv6N/uUlfff//9V6xYoXeI2NXlM9ynT5+9997bfKD8
9t5775UX4oSfm7wVufHGG8Oej7yHnD59uv2f49133y2fwyOOOEION4/fcMMN
apKuXbvazwAAQLtEVwcApzAMw76ra16vf9Jst8/nNyzWpnq/W+KxjovPfnJn
5vrkA9XVI5If3+p39fs3vP22WlMd0Oy7eiAQaO2vIQBAuBbt6uYLpy+44ILl
y5dH2zNmV7/nnnuivcScffbZep74u/qKFSsOPvjgiBNeccUV+ipuOd/TTjvN
us/hhx+uP96lri5OPvlkne6tXb2mpubOO++MdrIPPvignnyXnptM27dv34hz
7r///upC912yYcOGHj16qBn++te/7urhAAC0A3R1AHAKwzDkh8pzIvnTn/7U
jHXU4/EsjCI1NbUZHwjtzMSJEyP+/RSTJ0+mqwNAG9SiXT0lJSXsouvu3bv/
/e9/f+utt/Ly8sx7JicnT5s2Td7PqN2OOuqoaSG5ubmy1e/3H3jggWrTdddd
99NPP82aNeuSSy7R0+rZ4uzqNTU1xx57rPmxkpKShgwZoo8dPHiw2vPpp5/W
g0cfffQjjzzy6KOPHnPMMeaTirOrm2v5XXfdpXawdvXRo0fr3c4+++zx48eP
HTv29NNP14MTJkxI4Lm999575kdfsWLF999/r9dI79y584YNG+L8Y1XM/zOC
fkoAAHQodHUAcAoj1vXqxcXF477Je3t6TqCRDp4F3uLH301fss6rxmVPvWnR
Gu+T76UX+kr0Iep69QUW+np1Pf+mF1/c9MILagUSI7QISaAp/SgBi2ibEpjN
fDrRDpF9mvEJlJSUtNzp2GzandOxma25Tsf+enW96BAAoO1o0a4uxowZE5bW
FRm86KKLwh462n1L5UFnNdL5d+XKlXq2qVOnqsE4u/r69ev1bt99951+oAce
eEANXnHFFWrk4osvViMHHnjgqlWr1GBSUlLnzp2t7drK3NXnz59vXoZl8uTJ
tZG6+s0336xGDjvsML3ee1pamn7Ee++9N4HndtNNN6kR+bRXV1erwdzc3H33
3VeNL1q0KNYf5v+Y/w1Cf64AAOho6OoA4BQx11efMsev7j368Td+dYgKzm6P
77HROTJ+w/OuVE/9ouV6QfLFa/3XP+eSTU+8n1OzuX6R7fLy8hjrq+sVvEeM
UHcv3TZsmJqN9dVZXz3i38+9WF8dANqqlu7qYtasWddff/1+++1nfXXo0qXL
Tz/9pPeM1tU1v9//1VdfjRkz5o033jBfLy2vMmqHOLv62LFj9W4PPfTQo430
wiaHHnqoWslcH3vLLbeYn4n54vP4u7q8TOt7fR5yyCGZmZnWrq6fw6233mqe
6qqrrlLjZ5xxRth5xfPcjj/+eD34qIkelE9p9D/DJl599VV91KmnnlpYWBjn
gQAAtDN0dQBwCvuuvjbVe/WAZNXVdVpXXf29z3P0uErrKkR7vf6+w1x6k0rr
8Xb1xqguv3Yee2xg3jy6Ol2drg4AjrMHuroirx2TJ09+4oknzjnnHPMLRM+e
PfU+Nl09KSnp/PPPt3mVUbvF2dX/9a9/RZtKy8zMLCws1L996aWXzM/ntdde
05vi7+oyMnfu3E6dOqmRP/7xj3p9G9XVfT6f3n/QoEHmqXQDl8PlLcouPTfz
tNH07ds3nj/HYcOG6UNOPvlkedMYz1EAALRLdHUAcIqY16v/tKrkmoEp5rSu
urrX6395Ur45rae4q1QddWWX9Bmabk7rRnEwdlc3RfW6bt22Tp6sZqOr09Wj
/bROVweAtmmPdXUzeY8hb13UC8QBBxwgrylqPFpXT0tL0/15r9ACKb/73e/O
OOMM86uM2jPOrj5w4EC92xUmZ511luysPvZ4PPJCqRexefLJJ81PadCgQXqG
XerqYcdqqqvLew+9MMvjjz9unkrfubVLly7V1dW79NzM04adsvz28ssvlw9e
e+21mH9w5uVffvOb3+hlagAA6Jjo6gDgFDG7ek1NzaL1Fea0/s6nOaqCbt++
MyytL16TL+PyQ1lhyWZzWn/knfQct11Xr3rpJXNUr5s+vTZ0ERpdna5OVwcA
x2nRrv7ggw/eEvLWW2+FberTp496gdhnn310ANdd/fjjjzfvPHz4cDXeqVOn
7777Ti0PnpGRYX6VUXvG2dVnzJihRvbee285I5tT+PWvf632vOiii8zjl112
WVi7jihiV5dP4AUXXBD2QqnXgTn77LN1/TZPde6556rxiy++OIHnpqcNi/Dx
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
n28hgy6Xq74eZ2XV9OlTmpSkjrXOpkUbt9mkx/XpxH/IHputRU+neWfbk6dj
39Wt/+oBAGh1dHUAAIDE0NUBwCkMw+jXr995kfTs2dNoPvn5+YuiSEtLa8YH
QjszceLEiH8/xZQpUwKBQGt/DQEAwtHVAQAAEkNXBwCnMGJdry7mrcj/dlFe
xOb58cycjByfdTw92zfmqxzziLpePSJ1vbpW9tln8qt5miycz/56deuyNgCA
VkdXBwAASAxdHQCcIub66itTy65/ztVrYMpSV8NC1nrhjvdn+utXXH8js7xq
W51pQXJ3QalajP3jb/zqkPLycvv11f+3gve8eXXHHy+/tnz/vZqN9dVZX531
1QHAWejqAAAAiaGrA4BT2Hf1tamF1z1bf09S+aXTuurqH32Zo8Z1Wlch2uv1
3zM8TW9SaT3erq6ieteu8mtnjx6BBQvo6nR1ujoAOA5dHQAAIDF0dQBwipjX
q4/6PF9HcpXWVVdPz/api9J1Wi/b0JCOZy/1XjMwxZzW4+rqpqguv7Y98ojh
89HV6ep0dQBwHLo6AABAYujqAOAUMbt6TU3N+zN95rQ+a0m+qqDBym1haV2t
tR4MBhetrzCn9VGfue27evDzz81Rve7xx2urq9Wj0NXp6nR1AHAWujoAAEBi
6OoA4BTxdHXZzZzWR32arcutOa33fj51ydoC1dVlkzmt/3tURo7brqtXDRli
jup1O3bIqwldna5OVwcAJ6KrAwAAJIauDgBOYRiGfVffuHHjjpD3vvTWL+ry
rd9opMZLK7bcOyKz9/OpKblVutyqTQuTyq8ZmPLk+zk+o1Rdr75ixYrVTcmg
y+WSo3a+/nr9suqPPbZjW/1S7dWN16uXl5fvaEqn4x0WutyGjet0XFVVFbZJ
pWPrbNu3b1fjgUAgbJNOx/KSF/EJWGfT6ViODdsk86tN8ogRZ5NnGDYuZ6FD
dNgmfVfZHRa60oeNy2dYbZLPeZyno/+ZoKysLGyT/lePbaE/x3hOR/+rR0VF
hfV07Lu69d8pAACtjq4OAACQGLo6ADhFzK5u9u1ijxFJerZPXalu9ePy/Lz8
+hSvunpEqqvXN+epU9Wa6oBm39UDgUBrfw0BAMLR1QEAABJDVwcApzAMo2/f
vr+J5Mwzz9Rt0+fzR2yeXm/kcesmj8ezMArd1fWDUdehTZgwIeLfTzFp0iS6
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
ADiFEcf16l8t8Ez+Ltd6dbHPZwyfnLU+3We96nhNqvf1Kdl+v5HARdQVH30k
v8yzxXnZc8JXRDfXIR1ntj35BOyvV7eu0gMAaHV09fhVV1c3+54AWpqO6uXl
5T6fbzffkcrhMolMRVpHG/FtM2nt83AqujoAOEVRrPXVf1oVuHpAypXPJH+z
rOEaDPW/K3q9/qET8+uXT385zV9av8y4XpA8Jbukz9B02fTKlPwdO3bKJnmX
qDZt3brV+gQM8wre06fXdesmv7ZOnqwOYX111ldnfXUAcBbHdXV5JcrKypo/
f778N7uRvKK19OPKe7AuXbpMnjy5GfcE0NJqQtSa6rtzpbqZumpdrbWu5m/t
s0SH1opdXX72lJdgr9cbNu7xeLKjqKqqao6TbkPo6gDgFPZdfW2q9+oByVc+
0/BLpXXV1d/7PEePq7SuQrTX6+87zKU3qbQeb1dXUb1rV/m189hjA/Pm0dXp
6nR1AHAcx3X13Nxc66vMPvvs88c//rF///7yWtMSD+p2u9UDXX/99XrQ4/Gs
Xbs2Ly8v5p4AWou6WL2qqkre1lrfJydMppIJZVouWUera62uPmbMmM6dO8vr
3UUXXRS2qWvXrtF+Kvzxxx+b6bzbCro6ADhFzOvVp8zx60iu0rrq6m6P77HR
TdK6t6RW1dEl6/zXP9ckrZeVBWN3dVNUl1/bXnlFHUJXp6vT1QHAWRzd1X8Z
csghh+iRyy+/XF6+W+JxH3/88XPPPdccBO655x55xNtvvz3mngBahbqYXC2r
7vP5rO/GEyZTyYRqoXUuWUfr2vNdXX5IvOmmm/Qrb1hXly+HffbZR8aPjGTx
4sXN/QloZXR1AHCKmF1dXsI+nR8wp/Up3zfcZrS6dntYWk9K88q4vBtMzt1o
Tusvjsvy+fw2Xb3io4/MUb1uxAh5NaGr09Xp6gDgRM7t6hkZGXrQ7/e/8MIL
nTp1kvEHH3xwzzyTaF0dQBthvljd+i59N8mEXLKOtkBV8Vkm5lq+2cS6p3n/
OB9u/vz5PXr0kJe/Aw444KyzzrJ2da/XK4OHH354C5xrW0RXBwCniKery27m
tD5hlluXW3Na7zM0fU1qQ1eXTea0PmhMltdr19U3vP9+3bHH6qgu47V0dbo6
XR0AnKl9dHXlqaeekvETTzzRepS8Ps6aNct6iJm8xiUnJ3/11Vcul8t641Gf
z+d2u9U6M/ICKh/ffPPNe4XWe3GHyAu9dc9dehper1cOlFdY+Vg+zz/88MOC
BQvkEJvnDMCGWlld3tLLF5f1J4vdJBPKtDK5WmW9tc8VHdce7uq9evWS175T
Tz11zZo1L730krWrr127VgZPP/30FjjXtoiuDgBOYRiGfVeXH8TUK+Z/fzT+
+vT6z+YXGY3UePmG6kdHZd02JC0zv6E2BwIBtWlNRvl1z6a89Im7qKhEd+DN
TenZto4fvzO0/Isal8fVWTvsELUQjX4C1tnkp8WwcR175W1q2CaVjq2z1TaG
/ZKSkrBNOuxXVVVFO52wcdkz2unoEi6PGOfp6PXq5YM4T0fPZj0dHfbjPx39
7xTyqYh2OtXV1XHOpsO+/DFZT8e+q1v/nQIA0OraU1dfsWKF2uR2u/XgBx98
cNZZZ+29995qU48ePR544AHrfdNGjBjxi1/8Qr9sdenSRQ4073DmmWfKuLzS
ycdDhw61vtLNnz/fuucuPY1f//rXsmny5Mk33XST+p/o9wotHT9w4MA4P+c1
NTXy1is/Pz+vkRvoqHJDsrOzk5OT09PTW+L7p0wrk8tDqMdq7TNGO6G/gcs3
c/mWHvNfbcy13Lq6y/YQ9fOaGvkmxHpUPK8y4tprr+3Xr5/8bCsfR+zq3333
3V6hZdninNDp6OoA4BQxu7rZsqRCIxK3x6dWgLFakVyorlSPR+ncuXHuiY7D
vqsHAoHW/hoCAIRrT119/fr1alNqaqoaGTdunBo58MAD5Qf/X/7yl+q3t956
q7lUDBgwQI337NnzjjvuUH1bvPXWW3ofcy2fNGnSxRdfrGY76qijLg6RR7fu
uUtPQz3uCSecoP57zjnn6JfRUaNGxfPJKS4uzmuqtfsQ0Grke0VOTk5mZua6
des8Hk9LfP+UaWVyeQh5ILo6mkvYt/GSkhL77/x7uKu7Tf9yHbGrjx8/Xgb7
9u0rPx6OHDmyX79+gwYN+vHHH9X/jdX+0NUBwCnkhemmm246KpIePXqosOn1
+gsKI7dxt8eXcC8tys5O+Fh0HJ988knEv59i4sSJdHUAaIPaU1d/55139grd
zFT9Vs5r3333lZE777xTrcpSU1Ojft4XL7/8stpNBo855hgZGTZsmJ7qgQce
kJGTTjpJj1hrebT11cP2jPNp1DZ2dTFu3Dg1kpqaeuGFF4Y9ExvmK9Xp6ujg
1MXq8o1i1apVLfQuVKaVyeUh1CXrrX3GaCfCvo3LN3b77/yR70IafR2YaOJ5
lQkTsasPHz5cBi+77DLzXcXVP0MnJSUl8ChtHF0dAJwi5vrqxcWB58dmP/Fe
ZqCsYkOIDp6puaW3vOT6dG6hGtdrrRQXF29oSq/cIvuokepPPtl+6qlVK1bo
2cIO0WutlJSUhG3SS51ssFDjskPYuLxBVZvkg4iHWGfTi6hbZ9NLnZSVlcU5
m/7kWE9Hf3LkEeOczeZ0Evjk7M7p2PxZl5eXxzmb/rOOeDr216tbF3gHALS6
dtPVZ8+erX6Ev/nmm9XIkCFD5LennXbahqZLnT/yyCMy/qc//Un91u/3qwln
zZql95FzVNeg6pGEu3qcT6O2savfcsst5t3kWclgp06drGvXWNHVAU119fT0
9OXLl1dXV7fE90+ZViaXh6Croxk5vas/+eST6lX10EMPffzxx996660777xT
PpaRY445Rv8PZe0GXR0AnMK+q3u9/pc+cat7j/b/2L15a/2dKFU4XZPq7TM0
XW36Zln9rTD1jT7VfUvN9HrgDfctnT69rlu3+luUnnZa6aJFRqQ7Y9Zy31Lu
W8p9SwHAmZzb1c8888y/hVx11VUnn3yyGjzppJPcjf+LumySkSeeeCJshjlz
5sj4QQcdpE/kxBNPlJHDDjvs+eefX7lypfWmpbW70dXjfxqqq7/55pvm3TIz
M9WpFRQUxPzksA4MoOmuLt/itm/f3hLfP2VamZyujuaV2Dow1ooej5bo6nfc
cYcM/u53vzO/bK1evfrwww+X8XvvvTeBB2rL6OoA4BT2XT0pvfDvL7pUPNdp
XXX1SbPdelyl9Xi7uo7qoV+Vw4bR1enqdHUAaE+c29XD7L///hdffLHbtO5r
jx49ZHzMmDFhM/h8PnXImjVr1MiSJUvUpXSKfNy3b9+5c+eaj0q4q8f/NFRX
nzZtmnm3wsLC+Ls69y0FNNXV09LSli1b1nJdXSaXh6Croxkldt/SttPVk5OT
f/jhB4/HE7bzyJEjZedTTjklgQdqy+jqAOAUMdeBSc8rv3lwmjmtF/oaVhr5
dH7AnNa/XhqI2dW3//e/5qheN2JEtHJbS1enq9PVAcCZnNvVhw4dOqnRnDlz
5FU7bM9f/epXstuHH34YNi4/7KsZ5Gd/PSivuWPGjJE3WubAPmLECL1Dwl09
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
XpiFnHzyyXfddZeYrq9evZraL7300pycnDPOOIOtZrVaaU3VsGPGjElw5zVy
9Y0bN9Kib3/725E7sHnz5rPOOovvJ7sgf86cOXTaxhpp2IkTJ6pez9ra2ttu
u413HD169C233CLm9ho6Ojr8fj+N4DzGAQBDwh5ms9mMRqPZbB6Mt2salgan
TbBtpXvGMFj4Gzi9mdNbetxfo4hpeWR1lyNhYq6+LSyyVyJHmc7wvUrp2PTV
r341kRuPsvowu3fvTnBwPUKuDgCgF4qi3H777RdE873vfS9u5lnrSS4zJ25J
YbXWk5LChjLQ3r17C6IpKipK965lrjfffDPq9ydZs2YNcnUAgAw0ZLn6/v37
WVD8wAMPaIyQk5Nz3XXXnX/++bTmueeee11YeXk5W/r888+zQdiis88+mz0d
N24cH4HF2l/72tfoUz89uOiiiy655JLa2tobbrjhyiuvZOv/9Kc/pe6PP/54
gjufQq5+5plnjho1ilWSP+ecc9h277zzThaV//rXv77wwgtZ42OPPcb7NjY2
/uQnP2Htl4axx7TnTU1NcffT7/c7+0p3PgQwUtjt9pqaGovFUlZW5nK5BuPt
moalwWkTtCHk6sOY6m1crJwW1RDn6uyvz/7nf/6HHtNH5lmzZv3xj3/Mzs6m
Q2Rzc7Nq5e9+97u0Mn3T0tJp06bdd999K1assNlsCW5LF5CrAwDoRdz66nV1
dU198cCz2ll353OV7++WWDsvJ0Jjqrrwyi0+f90/X7XMzalpaGxUjabqwmut
UN+lm533P1/lkevZIl7qpClCrNF41fFgMJhgF/oQGnc6NOUER2MvjsFgyM/P
N/RFLex69cZjr0nc0XitlcSnwxdFToe/OBpf66jTYV8d1SL+1UlhOrQnkV20
r1ePLPAOAABpN2S5ent7+69+9St2UDjvvPP+8pe/bNy4UbxXqShqffW2trav
f/3rxwl/e05jzps3j134TYc51shibXLJJZeo6qg7BqG+eqxcnV0P39LS0hm+
IP9nP/sZa7z++utZI72M48aNOy58lzfel6ZMLWeddVZZWRlrKSkpYVfdP/DA
A3H3U7xSHbk6wFBiF6tXV1fTz+wgXUxCw9LgtAl2yXq6ZwyDRfU2Tm/s2u/8
0e9CGrsOTCwJHAxDnn32WTok/elPf3rooYdUn/guuugii8Uirnz66adTO6vt
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
a6+9ljXSi/ODH/zgpJNOOi5crnbTpk0J7i0ApEVHR0dra2tdXZ3NZossmdhP
NCANS4PTJhCqg0jMxreHiS1HwwY2V6fvxiuuuIIfo6+55ho6pLKn//jHP8Q1
6RB56qmnUvspp5xy5ZVXUq8TTjiBHeCS/cOxjIVcHQBAL+LWV6/xNE2cbZ4w
y2STDrIDKC8bcrSvw4cP9yahvuD0ZfYbpxt3FNezRbzmNh15Vb16e/h8b+5Q
bphmfOFd9+EjR6id19xuampSdeEVWorNLeOyKh5caGlq7RJHCwQCqi7sMg9C
J42qRbymiqr9yJEjrJ1ONVWLeLn4WNOJHK0z/NdtBoNhz549+/vavXs3y9WP
hCceORrtoaqdl4uneakW8ZoqRyOwdnr1VO28XDy95qpFsb7WrFy8Eq6lr1pE
LxdbRN8PUXeAxow1nebm5sjpoL46AIDuDPF9S5cvX37BBReozmFuvvlmOuKo
1nz22WfPPfdctk5+fj5rtFqtv/zlL7/yla+w9p/97GclJSUXX3wxPX7nnXfY
Ojk5OfT08ssvj7oDRqPx1ltvZWH1mDFjEtxttsVdu3ZFLmJV37/zne/wlqg7
sHPnzuPCt1sVGy0WC5uIWOCFziUeeughfodWcs011wyPP5YHGN7o/JxOlenT
h8vlcrvdA/teTQPSsDQ4bQK5OoiGPlfvDEfr//znP1lIzn/f/cwzz0SuSR+r
f/jDH/LVqMsVV1xBjQM0+/RDrg4AoBfauXqlRfrjsyZ2W9IJs0x2OXQPU9V9
SzkWnEqS/I9XqlmXG6cbc0tC5a9V9y1V7QC1v7aphnWhfwvXe452d3f2vW+p
iCW3u4pqx2VVsC5TF1lbDh7uwX1Lcd9SAADIAEOcqzNer/ejjz5av3690Wjk
NdWjooMXHV8iG8vKyiRJSnkH6JBER8wM/wt0t9tdUVGBe5gC6AUvBUOn0BaL
JfLcO2U0FA1Iw6IIDETSztXFOjDbwgYkV2folCA/P//dd9+l70/tNemQvXXr
Vtq3yGO63iFXBwDQC+1c3S0p05fZeOLNonXtXJ0s3+LkXVi0HjdX37XPPT67
QozW249lrbFy9Uqrd8r8at6FRevI1ZGrAwBA2qUlVwcAGJb4JetOp9Nutw/U
GzUNRQPiYnWIKo25OnQiVwcA0I+4dWCaW9uzVzrEaL24QtIOohsaGtbu9IvR
+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
dx27k+kji20HO4/2xL4zJh1NlPCV6jOWWVmXCbNMdjm0M6r7lopY+4otvTc/
vXG6MbcktDOq+5aK2I0+PymqHf9EJeu1cL3naHe36r6lIpYDV9mku+f3Tmfq
ImvLwcMa08F9S3tw31IAgBEDuToAAABAapCrAwDoRcq5+kd7a8cey9VZtH7k
SJxcvdws/WlOFe/ConXtXN0tKY+/ZuFdWLQeN1df+r6dd2HRetxcfednteOz
v5zOwvWew0eOaOfqlVbv5Hlm3oVF68jVkasDAABydQAY9iL/OFSU7r0DAB1D
rg4AoBcp5+qkyNwqRusvbeyttR4rVycef/ukuWYxWnfUKhq5OgnWN2WvdIjR
+n6TrB0dBwKBtTv9YrS+xSBr5+qk1NomRusvvNtbaz1Wrk68wfYp86vFaL3G
KSNXR64OADDCIVcHgOFKDM/bY0DADgD9gVwdAEAv+pOr02NVtP7R3lrtXD2U
x9Z3idH6wret2rl6c3Nz1+Hu7BVfRuv3P29iAX7kdMQgWozWx84or7JJ2rk6
PVZF61t2O7Vz9a6urkDTITFan5cTfTrI1XuQqwMAjBjI1QFg+FHF6fSu1RrW
ImAttEgVsKd73wFAT5CrAwDoRT9z9R4hWl/zce8dM7VzdXrKo/XsFQ6PV6sO
DMvV6WkoWg9ftU4dTTafdnTMg2gWrdPuFZT2ps3auXqPEK2v/KD3EnftXD00
wrFofdpSR61HQa6OXB0AYIRDrg4AwwxP1FmcTqegdFJNJ950nizLshRGD+gp
NdIiWoEH7IjWASApyNUBAPRCURTtXJ1ODv19Kcfwlh2F7mXv1yiCWF34aBUW
efabVkmOMpqqC19EK1MX6hirS9R9ox2j3Utk33jLJ0WeV99Lbjomm/zsGxa3
5NPuYjAY8vLy8vuiFparJ/JSx3px4nZJZLSB3YGBGk07V4/8rQcAAKQdcnUA
GE7ERL2xsTEQCHi9XiV8+Q21fPHFF0fD6AE9pUZaRCvQarSymK6nex4AoA/I
1QEA9ILO+u6///6rorn22msVGFB0cNwTTUlJSbp3LXPl5ORE/f4k69atCwaD
6f4ZAgAANeTqADBs8FC9ubmZ/WVoXV1d5J/0qtAKtJoS/stT6ohoHQASh1wd
AEAvlHjXq5PcwtpN+S7fMTzw9PUlZqEmq/fVjTV8FXFRrF6S7Hvx3dBtTBPv
Qo/f2GYvMnqS2re8Yvf6Xc6kuphrvIvX22QliX2TvMq/37XVOGWxXft6de2Z
xtq3BLsM7GiJdBmo0bSvV48sawMAAGmHXB0AhgcWqre1tbE6kH6/n54m/mZI
K7M/wKTuNAiidQBIBHJ1AAC98MWrr/5ped24rIrfzqjIK2tiXfx966tzR48e
Ze1WZ2DyvFC98cXvSd3doUWq+uqqHVDCofqTq5zU5ZHFtoOdobrcnX3rq4vY
tR/k7U8C1GXCLJNd7r1ihLVHFiSn81i2aF9l3fgnKm+cbswt6S0CH6sgOZ9O
TW3gngWh6Sxc7zkano+qvnqU6XiVZ1e7qMvURdaWg4d7UF9d2AE/6qsDAAx3
yNUBYBjgoTqd38qynPLlHNSRutMgiNYBIBHI1QEA9EI7Vy81SWNnGG+YFvrH
o3XtXF2S5MlzTawLj9bj5uqz37TwLixa74yXq2/Kc/IuPFrXztWN1dK48D1J
6R+P1rVzda8s37vgy+mwaD1urv6vdVbehUXryNV7kKsDAIwYyNX7r729Pd27
ADCi8VCdTne9Xm8/7+lD3WkQGgrROujCBwMk3fPQK+TqAAB6Efd69WVb3Dwi
ZtF63OvVdxXLY7MqxGi9oSFOrm6s9k6aaxaj9fqmdu1c3S0p2SsdqmhdO1cn
q7Z7eBcWrce9Xr1gvzw+u0KM1huO/ZogVq5usslT5leL0XpdYztydeTqAAAj
REbl6nSUscXmcDgGakNPP/30j370o+effz7WChq7wTU1NXWGA40zzzzz5z//
OR3oB2r3ACBxHWGspnp/rlQXsavWWa11Nn66ZwkQUxpzdfrs+dFHH7311ltV
VVVRV6DPm7GOoV6vt3/zzhTI1QEA9CJurk6nfKs+VMRofVO+SzuIpiNdkblV
jNafX1cjy1q5euj/+i4xWn/o3xa7S9bI1UOx9uFuVbS+r9ytnavTeezanX4x
Wt/wSZzp0If9UmubGK3PzanxhucTK1en/wNNh8Ro/c8vVNscXuTqyNUBAEaC
jMrV7XZ7rOMIOemkkwZqQ1OmTKEBH3nkkahLnU6nxm6IhzZa+d5772VPS0pK
Bmr3ACBx7GL11tZWOnGNPBNOGQ1FA9KwuGQdMlxacvXS0tLLL79cPCaOHj36
xRdfVK22ZMmSWMfQa6+9duBeg3RCrg4AoBeJ5Oq0mhitv7apJm6uTk/FaP2x
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
kqStW7fSvtFnxpRmmbmQqwMA6EXcOjCNzQenLXWI0frnJq92EN3Q0LDqQ0WM
1rcaJO1cnf4vMreK0fqid3trrcfK1UPqu1TROqu1HitXD0+nLXuFQ4zWSyrj
TIcO6Gt3+sVo/f3dvdNpaO54+CWbGK1XWLxsOqXWNjFaf/7tUK115OrI1QEA
RoIRkqsDwHDFL1l3Op12u32g3htpKBoQF6tD5ktjrg6dyNUBAPQjbq4eOuXr
OipG60+/bombq9NTMVqf+FylW4qTq9NjMVq/aYaxqNyjnavTY1W0nvORQztX
p4/tXYe7s1d+OZ3s5XGmQx/26akYrd/xTKWzNhTgd3V1tXUcEaP1f62z8umI
0fpvZxg/LXUjV0euDgAwEiBXBwBdEy9ZN5vNLper/2+MNAgNhYvVQRfERF2k
XfUFufpAQa4OAKAXieTqtBqP1rNXOCQ5Th0Ylqv3HIvWJ801Vzt67zSqnav3
HIvW6Z+hvPdWp9q5eo8Qrb++XYkVRIu5Oj3l0TpNyuONMx2Wq/cci9bvnG2u
svdOp6srVFOdR+tz17q94Yvf+XRYtH5TVkV+aWg6yNWRqwMAjATI1QFA79gl
66z8o9ls7mehdepOg9BQNCAuVofMh1w9vZCrAwDoBZ3daefqnMstv7Te6paU
pKzcYi83J9fno7219C+pLrQJ2lBSXWgiNB2aVFK9Vm2tKTV5IttrnN5XNtok
KcpoOz+r3VLgZI8NBkNeNCxXh6i0c/XIXxMAAEDaIVcHgGGAV4ORJKmqqsrh
cKT2lkgdqTsNggowoBfJ5ufI1QcWcnUAAL1QFOX++++/Kpprr7023ZHqcEMH
xz3RlJSUpHvXMldOTk7U70+ybt26YDCY7p8hAABQQ64OAMMDvTW1trY2NDRI
klRRUWE2m/lf5iaCVqYu1JG602MaCu91oAvI1dMLuToAgF4o8a5X9/l8/r54
4OlV/M+ssnxu8qralXCtj6hdaLQVW+yb8l2Ri2J1IXnF7hfesvEdidVFXFRt
l59caXG6fZE7EHM6sm/2m9biCilyB0pN0qxVFkmOMp03ttnX73JGjubyKE+t
tFRaZbGdXa+e3xe/Xl1jOhovToJdEhlN48UZmh2Iukj7enVepQcAADIHcnUA
GDZYtN7Y2Bj6iFFdXV5ebrVaI2shqtAKtBqtTF2UcO1EhOoAkCDk6gAAepFg
fXURSzs9XuXJVc4bphlvf6bK5QvV5Y6sr86xE1Gy9mMlfBPPiryyJr4DSrQK
3nQ0YV32lvvHP1FJvRa/J3V3hxap6quLWLvFodyzoJq6/HWx7WBnqMq3qr66
iBUk90jys6td1GXCLJNd7hCnY7T47ni2ihY9sdLZdTi0B6zQInn3k9B0bpxu
zC1pEKfjdMv/WFJDi+6aa/Y1hGqwd3V1Kaivfiw5V7WjvjoAwDCDXB0AhhN6
g2IFYehM2+VyVVVV7d+/32g01tTU0Jlta2vrkTB6QE+pkRbRCrQarUxdWPkX
vMsBQIKQqwMA6EXKuforG0N36mT/WLQeN1f/pKiWd+HRunaubnfJN8808l4s
Wo+bqz/6spl3eSQcrcfN1Ze9X8O7sGidTccry1PmVfJFLFpnubqh1P2bx8tZ
O4/W2XTm5Vh5FxatI1fvQa4OADBiIFcHgGGmvb2d3qboZJXOdels1u12W63W
ysrK/fv309tdYRg9oKfUSItoBVqNVqYu1JG6p3sGAKAbyNUBAPQi5Vzd5Zan
LXWI0bpDbtfO1cmKbZIqWo97vXreft/YrAoxWg8G4+TqlVZl0tw+0XqgvlU7
V3dLSvZKhxit26Te7Hq/Sbn1aZMYrQfqeqezeofM21m0zqZjd8kPv2QTo3WP
/yBydeTqAAAjBHJ1ABh+6JT1YBidsjY1NdFJNftYJEmSJ4wesHNdWkQrsESd
4EalAJAU5OoAAHqRcq4eimG7jqqi9f2VHu1c/dChQ6s+VMRofVO+SztXb25u
LjK3itH6grU2WdaKjkPZcn2XGK3/5cVqu0vWyNVJ1+FuVbS+r9xN7fRhv8bb
IUbrjy+xeLzhLl1da3f6xWh9/U4nm05bxxExWp80p6rCIiFXR64OADASIFcH
gOGKp+utra107toc1hTGHlMjK6WORB0AUoNcHQBAL/qTq9NjMVqfNNdcbpbi
5ur0lEfrY7MqPtpbGzdXp6ditP7yBrt2dMyCaDFa/8crVpc7Tq5Oj8Vo/c7Z
5lKTh+XqtEiM1metqpEkmeXqtIhH6zdlVWzd/eWvCcRo/d7nq8025OrI1QEA
RgTk6gAw7LHKMFGh6gsA9AdydQAAvVAURTtXb2pq6uhLOYY9bWw++M9XbRNn
m2rcjTwHVnXhYW9raytrWbbFfdMM454DdarROB721tXVsRZambos3ezmwX5H
BNbu8/nYU6e3hXaMdk/x1/McWHs6za3t05fZ7njWZHM3qaZjcjT94anKZ990
+HwBngOzRW98KP12hvGT/UHVaHWNB//youWeBWaXFNoBg8FQUFCwry/WQkvp
DFx7Ohz/PUXkdFgSrvHi0Kunauf16uk1135xOJo4aw8Gg6pF/Gvd1taW4Gh8
Og0NDZHT0c7VI4N9AABIO+TqAAAAAKlBrg4AoBdxc/VEuNxypUVKcGXu83DR
mMHuQjvGrlRPnFtSjNXRp1NW5WFXqie+bzVOr7mmdzSDwZAXDcvVISrtXD0Y
DKb7ZwgAANSQqwMAAACkBrk6AIBeKIpy8803nx7Neeedx4JNj1dx1HqTjUNt
jiHp4pTl5FJzxSPJdmf0DWnsQKxFzlrZHeNXCpFd9u7dmx8NcnUNq1ativr9
SVavXo1cHQAgAyFXBwAAAEgNcnUAAL2IW1/dF6ibscz6yL+r/XWhm9rzAiBK
uAqKqKmpt3CK3+9/Y7t7wtOVlTV1bBGv3NLY2KjqxUfbW+7/3RPG7YW9w9JH
bNYeDAZVXXipE5e3YfJc0wtvO8I3CPpyNFpB1YWXOvH5g0+utE1dZPYFm1Wj
VdnrbptV+fq2WtbOC9HQzq/L9fzhqYpya++e8FInsr/+r4urp71mrWtoVk2n
qDLw+5kVm/d4WTurOs7qwOzti+fqzXwaES+Oqp2/ODSvWC9OS4RYLw6fDu1k
gjvAK7dQX9Ui/rWm74dkpxP1a406MAAAuoNcHQAAACA1yNUBAPRCO1f3eJXs
FTXszpuPvlLT/sWRnr73LRUdPXqUtb++zcW63P5MlcsXuhWm6r6lqh2g9rxi
9/gnKqnLb2dU5JU19UTct1TEQvIqm3TPgmq2ocXvSd3doUU87FV1aWtrU8JX
qj/1eu90HllsO9gZurEmS5U/r/Tc8WwVW7Rup1+czpoPe6czYZbJLofu4sp+
g+Co9f79FStb9MRKZ9fhbj6d3fvdNz8Zms6N0425JaG7uHZ1dbFcHfctxX1L
AQCGPeTqAAAAAKlBrg4AoBfauXqFRbrjWROLjnm0rp2rS5L898XVvAuL1uPm
6q++V8O7sGi9M16u/vFnrrFZFbwXi9a1c3WTVZo4+8vpsGidBdEbdjlunG7k
i9bt9LPpeGX5n6+aeTuL1lmuXlLh+cNTlXwRi9bZdJZv/nI6LFpHrt6DXB0A
YMRArg4AAACQGuTqAAB6EbcOjF1qvnO2WYzWXcfuz6kail/grfjrpy11iNG6
0RrQztXp/1UfKmK0nlsc1M7VSZG5VRWts1rrsXL10HQ8TZPmmsVo3eXp/TXB
R0UNfaP13oIqvkB99kqHGK0fsPROx+xqufVpkxite7y901m70y9G69s/CyBX
R64OADBCIFcHAAAASA1ydQAAvYibq3d0dHjrvhCj9SdXWLRz9YaGhs6uo2K0
fsczlezmnhq5Oj0Wo/Ubpxv3lbu1c3V6rIrW3/zArp2rhxLp+i4xWp++tJqP
porWtxQ4qZ0+7Hcd7u4TrT9d4awNJfhdXV013g4xWl+w1sqnI0brN0wrN5S6
kasjVwcAGAmQqwMAAACkBrk6AIBeJJKr02pSsDdanzTXXGGR4+bq9JRH62Oz
Kj4pYUvi5Oo9QrS+bEvvZfHauXqPEK3T5lxuOW6uTk95tE6TKq/uMx0erc/J
qZUkmeXq1M6j9ZuyKnZ81tulq6uLFvFo/b5/WaprvOJ0eLT+yqbQdJCrI1cH
ABgJkKsDAAAApAa5OgCAXiiKop2r+/3+YJjRokxdVGWy9VZHIcG+eN11vkiS
A/981fzxPom3BwIBVa/I0V7eULN4fQ1LdFmoG7cLbeKfr5hpc7H2jY/Gp0MT
oekYLUpkl3d3up563SrL6pnKvuC0JdUfGNyR0ymplB9aVGVzRnlxlr5vX/h2
73QMBkN+fn5BX3l5eSxXD0aIO51EXpy4i5L66jCRX+v+jKY9He1cnf3WAwAA
MgpydQAAAIDUIFcHANALRVHuvvvu/47myiuvVGBA0cFxTzTFxcXp3rXMtWbN
mqjfn2Tt2rXBYDDdP0MAAKCGXB0AAAAgNcjVAQD0Qol3vbq29bscjlpvUjHp
J0W1JRWe+OsJqmzStj3OpLp4JPmtHXZZjrLo80oP7UPUXhs/cdhdUfrQHNfv
ir4Du/fXsjrwkd7OdbilPi0GgyEvGna9OkSlfb06cnUAgAyEXB0AAAAgNcjV
AQD0IsH66iJeA+TtTwI3TDM++kpN+xdHeiLqq4saGxvZov3VTeOfqLz9mSqX
r5PvgBKtgjcdTVgXp1R/z4Lq386oyCtrYotU9dVFrF1W/M+udtG+LX5P6u4O
tfP66hZX4x3PVtE+lNX0VibnBcnf2x2kLo8sth3sPCpOR1KC/1hSQ4vW7ewt
DN7U1MQWlVmbbn6ycsIsk13uUE1n2TaZujyx0tl1OLQHXV1dCuqrh6G+OgDA
sIdcHQAAACA1yNUBAPQi5Vx99XY7uyMnj9bj5uqflrrHZVewLjxa187V7U7v
5Lkm1oVH63Fz9SdXWvi+sWid5eqVFum2WZWsnUfrLIh+a8eX02HROpuOV5Yf
+beZL2LROsvV95W7fz+zdzo8WmfTeWWjjXdh0Tpy9R7k6gAAIwZydQAAAIDU
IFcHANCLlHP1UpPnztlmMVpv6ziknau73PJj4Qu/xWg97vXqSzY5eRcWrcfN
1XM/84zNqhCj9dbWNhaSz8lx8HYWrbMgutwsTZprFqP11vbDbLQNn7hvnG7k
i97a5We5ultSZiz/cjosWmfT2VfuufVpkxitt7V/gVwduToAwAiBXB0AAAAg
NcjVAQD0oj91YKTgF2K0/veXbazWukYdmNaDX0xb6hCj9f2Vknau3tzcvOpD
RYzWN+92a0fHgUCgyNwqRusvvO1gtdZb29qef8cjRut5JceKvdd3idH6wy9Z
Wa11+rD/UVGDGK2/vs3VG2u3f5G90iFG60VGD5tOjbdDjNazltvdEnJ15OoA
ACMCcnUAAACA1CBXBwDQi/7k6vRYjNbHZlXkF9dq5+qHDh3q7DoqRuvLNtfE
zdXpqRitP/qymYXkkdMRg2gxWr/jWZPZFsr86WP70e5uMVp/9g0rn44Yrd+U
VfHxZy6Wq9MiMVqfMs/krA3tQRc53C1G6y9vsPHp2KQvo/XfPVGxr9yNXB25
OgDASIBcHQAAACA1yNUBAPSin7l6z7FofWxWxb6qFtaunavTUx6tv75diVsH
hgenLFqnjl4lqB0d8yCaReu0e9ba3h2gj+3UzqP1uWvditJnOixavymrYk95
781JWa7ecyxav+9fFqentxBNV1cXtfNo/bUtsmo67Kr138+sLLWERkOujlwd
AGAkQK4OAAAAkBrk6gAAeqEoinaunohSk2dHoSvBlRmXW34r15FUF0JdqGNS
XWjHaPci272ynPNhjSRFGa3cLG3/NPp0Nhc4zTYpst0tKet22KN2+eyAh13G
r4Rz9bxoWK4OUWnn6v+fvTsLjuLM834fcS5PxFyduXkjJs5FX0zEuZiLiZg4
Z87ETPRddxtMY0+3sZm222Bw2+e1uxv3a4xAYLEJhGiwAQPGLAKEjZHBrIa2
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
bNn/U8x//Md/aPCDunPnzq1i7t27N9eX9vQ6fvx40b+fzIkTJxKJxFz/GwIA
ACN0dQAAAIDyoKsDAFQKrdT96sy1Nol2Gp85h1c+cNZX+usEEVn95CtfQFIK
hx7aIscvBwqPZ6PrN7771kjhcXaePV956TGmBs33pTPXiy/ns3M+u0cuPO7y
KfvPeNUiJ9Mu3ApebZMKjyuKyi7AH5oyh+5XL0T3q0NR5verF25rAwAAcw5d
HQAAAKA86OoAAJWi5P7qbfbUgjW2eVXWFou+kXVs6v7q3NjYGB33hxNL61w/
X2nZd06lIcP+6oYLYMdlRdtwNERblPcNjk4I+6vbfYmXNzjYUFOzvs14Mpmk
odM3E+z4ovWOUFTfGJyOS3L0vb0+NlTTEBoZHWfHe3p6aOi+I/nCWttzq6zX
O7poCt+Q/NMLKpuytM6dzAyLywmEE29ud7OhXafl8ezJJrq6umjo5qMUe2fY
+9Ph6xGXo6pa7QmJTfn9Lm/vQHab8ewTTrG/ek4M+6sDAPzYoasDAAAAlAdd
HQCgUph39XZ75PnV2Yd40tM/Ka2bd3VZVpdutdMUntZLdvUtx9x8CqX1gVxX
94fUl2qsfIjSOnX1c80hfpyndXqV9/c6+RClderqFpf8yzX6cZ7WKUQfOu/j
Uyit03IUVV2+Lb8cSuvU1W+3h59bpR/naZ2WU3/Cw6e8m0vr6OoT6OoAAM8M
dHUAAACA8qCrAwBUipL3q+8+HeaJmNJ6yfvVv2mV2VeKab1kV+9wyIs3OcW0
ns7o6fjLqzI/TmmdunoorK7cHzCkdZrS2hF5cZ1dTOtdmW4a2n9W4scprVOI
9gSUt3d6xbQe7xykKd+1KfOF5ew6LXd2dlFy33Ii3/YprdNyLC7l1dr8ct7d
5e18MoCujq4OAPCMQFcHAAAAKA+6OgBApSjZ1fv7+/edU8W0fuGWZN7V0+l0
iyUjpvWdXwbMuzr7r5wYFNP6H3Z5aK/1TCZzvjUlpvUjF/WzDQyNGdI67bUe
j8edUq+Y1qsP+mivdfZj++FvNDGtf92sLyfTO2JI67TXOvthv83ZLab1+s/9
tNf6wODgtpMRMa1fuxem5WipITGt/8+P3P6Qiq6Org4A8CxAVwcAAAAoD7o6
AEClmElXZ18mpvXdTb6SXZ19Kqb1FbvdYblEV2cfi2n95Q32R06ZujobEtP6
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
AJVC07RXXnnl/yzmH//xH7UZiyilv8YgLBc/Lssq3ak+8ykmQyYXVsbZypii
qGpkmuXATDQ0NBT9+8kcP348kUjM9b8hAAAwQlcHAAAAKA+6OgBApdBK3a/O
OLxyhyMyqxYakdXm+1LRoYd2mXZrKUTbsxcKSMqdjnDRoTuPIrRby8zP5vIp
D23Fl3PzgVS0gSuKeuNe8bM9csh2z/S1vRgporY8LH42KGR+vzq6OgDAUwhd
HQAAAKA86OoAAJWi5P7qktq5ZKvzlY2OkNY7nMM3+hieanBwUC+h0XjNkcBz
qyw32lM0xLcNcYc6F623v7HNFUv10ZA+Ixo9dT3685WWT76W6Xh3dzcNKdHk
H/d4frnG2uHJ0BDfNuSRN7Ow2vrH3d5Mz4B4tlgstu+cnH2M6TX9Iru6umgo
rHYur3e9VGP3yT00xHdBufkoxa553eFA/8CQuJxYLL7pePAXH1i+e6Avh++I
7ot0vbLRvmSrS0tOWU7hm8N3RNdiyff3+55fbb3v6qKhRELfImZoaMgwiy/H
cJzviM4+MAzx5QwXoOPs3TMc5zui9/T0GIam+1739fXRcfZWGIb4ctgbWPQC
2DkNx/n3urOzs3A52F8dAKDioKsDAAAAlAddHQCgUph3dadXeX2Lg568uXiT
U04MThQ8t5QbGxvTcru4rDngpinzqqwtlmz2pI2yH9rlRevt/Bmj6e7hickn
YzZc9NNx9mffOZUdZ/9rwo6Hwuq7Hzvp+MJqmzWQfeooVfpbD8IvrLXR0Io9
vr7B0YnJJ2PuPOnlZ2tqzj70s6enJ1v1/cobdfpyFq13hKLZx3RSpb94K0iP
UmV/ahpCI6PjtBxFVdcd0pfz3Crr9Y7sU0ep0j9yyq9s1JeztM6dzOSXU/ig
z6GhoWzVj6jvfaKfbcEaW4cv+9RRPLcUzy0FAPiRQVcHAAAAKA+6OgBApTDv
6gFJ+f3Hbt6oKa2bd3Vmx8l8JKe0Tl3d6ZOX1bv4EKV1KrcXboV41qa0PpDr
6rKs1hz28eOU1qmrdzgi7Hr4EKV1uoDGy0F+nNI6dfVQWH1vj4cfp7ROIbrl
ofTiOjsfqmkIDQ3rZ9vzVX45lNapq3sCyu/+nH9zKK2bd3VFVTcezS+H0jq6
Oro6AMCPDLo6AAAAQHnQ1QEAKkXJfWBSXT0r9uRT8OJNzkdOxbyrp9PpfedU
Ma1fvqNPiaX7lm/Pt+hl9W6XX6Fy22LJiGl99+nw5Nm6ahvDYlpvadfPpiQH
DWmd9lqPx+PnW1NiWm/8i76heqqze+X+gJjWH9r1szmlXjGtf3gkSHutsx/2
D3+jiWn9wm19SqKz7+2d+Xvjl9a5HV7FpKtnl9PZue1kREzrN9tVdHV0dQCA
HxN0dQAAAIDyoKsDAFSKkl29v7+/b3BUTOtrD7pKdnX2qZjWF2+0hXPP9szu
5t09LKb1j7708nIrpvXnVlm+f5xN65lMZnR0XEzrv9tuV1X9AuTElLR+9JKf
h2gxrS9YbXHkHpaa/bF9aExM66v255djSOsXbgWpq7MhMa0vqrEFpewVDA0N
ZXpHxLRefyK/HBHv6l1dXWPj42Jaf6POruTWg66Org4A8OOArg4AAABQHnR1
AIBKMZOuzr6Mp/WV+wNhOTqTrj4xmdYXb3LafXrsHR7ObkLO03ptY1jJ3frN
yy2ldfbn2gP98ZcUTnlaX1bv9oWmbETD0zp7OUOIprS+sNp2z64/OJX92M6O
87TOFiVNXQ5P66du6K9CXX1iMq0vWu+wevNPGmXHeVqvaQjJU5fDiV09+15N
pvWldW5PMG4eotHV0dUBACoLujoAAABAedDVAQAqhaZp5l2dsioTDKt//sIj
6fup5I9zmlZkaN8ZX4dDLhxy+ZWPvvQqSpEp52+G2J/CKeyL2RSXTymcwl5i
7xmfeA186MSVQPP9cOHZ2ELYctiiCqfcbg8fvRQoupxPz/oe2IosxxtUd5z0
ysWWM92bw1541ymv3aMUDhXOmslbbT7lhz3bTKb8UGcz7+qFvyYAAIA5h64O
AAAAUB50dQCASqFp2vLly/+1mJ/+9KcawFw7fvx40b+fzIkTJxKJxFz/GwIA
ACN0dQAAAIDyoKsDAFQKbcb3qxfeXSwr2pZj7g6HXHjXcbtd3nrcoyha4Y3K
DRf952+GCs8WDKsbG9wun1J4tpsPwh9/6S162/PHpzzN98OFQ25/9mzsnIVn
u9gSOnzBXzhFVbW6Rs8DW5HlPHLKtcfccrHlTPfmhGVt45HsY0xndRf33jO+
a/eKLGe6KeZnm+HQXzPlb3A28/vV+S49AADw9EBXBwAAACgPujoAQKWIzmx/
dVEslt14PCKrG46GaPt0OTE4IeyvbvXEXt7goO3TR0fH2VBnZycNnboeZcfn
VVlbLBl+AVouqr+310fbp6efZPdgZ/9rQlO+t8ZeWGuj7dNpSjKpb5b+6QWV
tk+3BnppiI57g9E3c/u3r9jj6xscZcd7enpo6NqDGD0atalZ37ScNiRXFLX2
hETbp4eiA+Jy7L7Y4k0O2j59JLecrq4uGqL91Q3vp5aL6h8cCND26clMdjmG
/dVFqVSKhg59k13OgjW2Dl+PuBzsr4791QEAKgu6OgAAAEB50NUBACpF2V39
k6+yGZz+UFqnEC3L6qubbXyI0jp19ettEj/O0zqV240Nbj5EaX0g19X9IfWF
agsforROXb3paoAf52md8uyK3U4+RGmdurrFJc9blT8bpXUK0Z9+nV8OpXVa
jqKqr2/JL4fSesmuvvW4h0+htF6yq5+7GeRTeFpHV0dXBwCoROjqAAAAAOVB
VwcAqBRld/WApKzYMyWth2N6HW19pC2snpLWk0m9tX7ytWxI61RuXX5l+fYp
aV1L6neYX7mr0h3mPK1TV5dllZ3ZkNZpymOXyq5HTOuJ9BMaarqu8uOU1ilE
h8Lqyv35UL9ovSOg9tGU7y3qi+vsYlpPpjrNu7o3qL690yumdS3ZZ97VFVWt
+yK/HErr6Oro6gAAlQhdHQAAAKA86OoAAJWi7K7O9A2OGtJ6uz3CjqfTaWug
V0zrHx7yyrLKhoaHh/edy5fteVXW8zdDVG7T3cNiWl9a53T6ZDaUyWRaLBkx
rf/5Cx9dwOjouCGt37gnUYiWE4NiWn/3I1dAUtgQ+7H9fGtKTOuHL/j1qjw0
Zkjr963Z5bAf9p1Sr5jWVx/wRHLLma6rs/9mekfEtL5kq8vukU26OjMyOrrt
ZERM61fbJHR1dHUAgIqDrg4AAABQHnR1AIBK8dd0dfaxmNbFrs6GxLQudnU2
xNO62NXZcTGtZ7u6V+/qbEhM67yrs+NiWhe7OhsS07rY1dmQmNZ5V2fHxbQu
dnU2JKb1mXR19rGY1nNdXTHv6mPM+DhP6wvW2L77Hl0dXR0AoPKgqwMAAACU
B10dAKBSaJpm3tUzmYzh/5PXJtGn6UzvH3Z5Xt5g94b1XccTiQQNPXR1/nKN
dePRYDQa5x2YhnafDj+3ynLtQcJwNi3Z88Y259I6Z0jWazP7WZuG2BezKWwi
D/t0vLe3n70EeyH2cnQ8Go3SkF9+wi6MXZ4S1R912tXVRUOnm6M/e//x598p
hgvoetL3p0+8L9XYXSF9OfF4nIYeeztfWGtbe8gfjemX3d3dbf7mxNO9v/uz
+/UtzqDcybO2YQov4f39/ezTvv7+LSdCz6+2fm9PG5bD8efAsg8MQ1TC+QUU
XhtfDsfD/pMnT8yXw/HnwJosp6+vb4Zn4/vVp9PpwuWYd/XC31MAAMCcQ1cH
AAAAKA+6OgBApSjZ1WciICmPnHLRoXuWMN2pXuj7x+Gix50+me5Un/kU9hLs
hYoOPXJG6E71mZ8tFFY7HJGiQw9skcg0y5mOJ6DQDjAzp6hqm6X4BTyDzLt6
IpGY639DAABghK4OAAAAUB50dQCASqFp2q9+9av/o5h/+Id/oLAZkVUpUjwm
+0PTRubphkJhdbrSbna2YPE2Pt1xk7MpihqUZn0B02HvzGxLe3kvVMaUH4cj
R44U/fvJHD16FF0dAOAphK4OAAAAUB50dQCASlFyf/VoLFH9mWfFbnc82ZXJ
4cHT7ku8VGP98qpMx/nmJLFYrPFKeNF6mzOQpCG+c4sSTb77sbPmsC+dNp7t
e2vshWrLlbsqHU8m9Z1b4vH4rq+Cr2+xh5QUDfGtTiQlvXSr/aNTwcwkOs6+
4Ns2lZ3triVGxxOJxOTZEjVHvO9+5IomOg0X4AomF623Hrss0XG+OQm7+MxU
fKuTaDz13ifu1Qc8qYLlGKbwXcfZ3L1fB39b6whEUoY3h72iYRY/240H2gtr
rbcfxwxvDluXYQp/czIF+Jsz3XJSqdR0FzDdcgrfnJksx3DcfDnm96sXbvAO
AABzDl0dAAAAoDzo6gAAlcK8q0dk9cPDfnqM5sr9gYGh7JMoKZw+tEVe3uCg
ofOt2Sd7jo2NUR099k2IP8lUTgyyIUruAUn54x4PDdU2hkdHxycmn4x580H4
hbU2epJpiyX7JMqBye24d30VpCnL6t3p7uxjTynDunzKm5MPOd13TqXl0JRL
tyV6yOnCaps1kH1QKe0HrijqhqP6clbs8fUNjk5MPuizwxFZvElfTlNzXFwO
PbdURMldiqjv79ef2VrTEBoRllP4oM+hoSE6296vg5MPZnUnM9nliM8tNcyi
49/eDc/PLWfBGluHL/ugUjy3lHf1DJ5bCgDw9EFXBwAAACgPujoAQKUw7+qP
nfKvP7RRB+Zpnbr68csBfpzSOoVoWVbf/cjJj1Nap65+pyP8yzVWPkRpncrt
rlNefpzS+kCuq/uDypKtdj5EaZ26+pU7IYrnYlqnPFtz2M2PU1qnrm73KC9v
yJ+N0jqF6C+/m7KcpuZ4ya7eZonQ7wLEtG7e1YOSurw+/+ZQWi/Z1Tcf9fAp
lNbR1dHVAQCeZujqAAAAAOVBVwcAqBQl94FxS12L1jvEtB6W9Z1GmprjYos+
d1vfzUOJJlfs8Ylp3e7TY2+HJ7OwOt+iaxvDSm5/dHYZ+86pYlq/9kDfuSWk
pJZvz3fyZfVun6TvNNJiyRjSuqaLsTOLaf2eXb82b7iLXY+Y1qXJ5ZxvTYnL
OXUjZt7VGYuv68V1+VBf0xCSJ5djmMLvVw+rqbd35n+JsLTO7Q3FzUN0NBbb
djIipvW7tiS6Oro6AMBTC10dAAAAoDzo6gAAlaJkV+/v75diA2JaX3vQxcut
Ia1fuRNix9PpdN/g6JS0vtEWlrNThoeHrYFeMa1/9KWXl1sxrT+3yvL947CW
24s73T0spvXfbberqn4BhrR+9JJfy+1hPjo6Lqb1BastDm/2CtiP7XJiUEzr
q/bnl2NI6xduBc27+tDQkFPqFdN6/Yn8ckS8q2d3He8dEdP6G3V2Jbee6UI0
W87Y+LiY1p9fbbW4ZHR1dHUAgKcTujoAAABAedDVAQAqxUy6OvsyntYXb3I+
cipiueVpffNxSZZV6ursOE/r86qsl+/oU4aHszuK87S+rN7t8iliueVpfffp
ME2hcMrTOpvY0j7lAnhaZy8XkBQK0ey4mNYb/xKhKezHdjbE0zpb1EP7lLPx
tP7hkWAktxzzrs4+5Wl9aZ3b7pmyHE7s6uxTntYXrLE1P1TNQzQtR0zrRy7p
y0FXR1cHAHgKoasDAAAAlAddHQCgUmiaZt7VY7FYMueRS1u+zW716LumUKEl
Ry4G1h30sK81DEXU+B92OS/djvDjiUSChlrald9tt/tCxinMn7/wsT+0iztF
XTruk2JsCo/q4hT2EuyF2MsZhmKxxLpDHnZ51IfF5bCFsOV0OLXCs33+F6lq
v0stWA7Hj8fjcTpy97HyZr3DHZh2SuFyAuHY2zscNx7kl8PfnMIXok/jicSG
Bu+BswF+Nr6c6abMZKhwOSWn8AswOVvJ5Zi8OeIU865Ov8QBAICnCro6AAAA
QHnQ1QEAKoWmaa+//vo/FfMv//Iv2lSqqk1nuqEyppj4m13AD3ttczul0h09
erTo30+msbExkUjM9b8hAAAwQlcHAAAAKA+6OgBApdBK3a/OPLRFWh5KRZvn
2eZgKFwk9QYk5VxzsOiUWw/C7fZI0aGmqwHaScbA5VOutIaKTrlyJ+T0yYXH
FUVlZys65ZFDbr5ffDnTkSLq2WmWY+Kra4FIseWY+O6uZPcUWY4Ji0u+3ja7
5VQW8/vV0dUBAJ5C6OoAAAAA5UFXBwCoFCX3V/dIXS9vcLy4zu6UemkK37Xj
9M3Ez1daVu4PDAxld9IeGxuj40o0+d7e7M7q51v1nck7Oztp6JE388Ja2+JN
TjkxyC9Ay20A8umF7M7qtY3h0dFxdpz9rwlNkZT0m9vd86qsLRZ9J22+o0ir
Lbuz+rJ6d7p7mIboeDQaqz0hsbPtO6fS8Z6eHhryhjsXb3IsrLZZA/pyptuQ
nC9HiyU/OBBgZ2tqjtOQYX91w/tJyzl8WWNTahpCI7nlGPZXF6VSKRpqc2Tm
V1mX1rmTmSnLof3VRb29vTTkj3S+VutcsMbW4esxX84E9lcHAIC/FXR1AAAA
gPKgqwMAVArzrv7YKb9UY6NnZfK0Tl39+Dc+Os7TOoVoWVbf+cjBhyitU1e/
8yiysNpKx3lap3L78SkPn0JpfSDX1f1BZelWOx3naZ26+pU7IXpcKT3/lNI6
5dn1h938bJTWqavbPcrLG/Tl8LRu3tUVVV2xx8XPRmm9ZFfffyb/5lBaL9nV
r7VJ8yeXw9O6eVd3euXfbNLfHJ7W0dUBAGDOoasDAAAAlAddHQCgUph39Yis
rj3k54mY0jp19Qe2yKL1+X6+cn+gb2CE6mjDpSA/TmmdunpAUv6428uPU1qn
ctt8P7yw2iam9d5evbV+dCp/Nkrr1NWdPnn59nw/p7ROUy62hHlyp7ROXV2W
1Q0NAX6c0nrJ+9U//4skLqepOV6yq99uD7P3Skzrff2D5l3dE1De2pH/5QKl
dfOurqjq5uP55VBaR1cHAIA5h64OAAAAUB50dQCASlFyH5junr6ahpCY1ls7
9N3RpdiAmNbf3+envdbT6XRTc1xs0Se/06dkegZW7Mnfy714k7PDIVO5tQZ6
xbS+8WiQ9lrPZDL7zqliWr90Wz9bunvYkNZpr/V4PN5iyYhp/eOm0GS57alt
DItp/dZD2byrsx/2z7emxOUcuyyZd3X2X6fUK6b1dYf1vdZN9oHp7B56e2f+
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
/vwvknlXj8fj1kCvmNbXH/HTXusm+8Cku4cNad3pk026enY5/YO1jfnsz16x
+X7YvKuzuedbU+JyGi4FzUM0u0Kn1Cum9eqDPtpr3WQfmEzviCGt017rJvvA
9PX3bzuZz/4L1tiu3Su+HHR1AAAwga4OAAAAUB50dQCASlGyq/f394+PT4hp
feeXXp61xbS+sNrWkovk6XSaDYlp/Z2dznDu+ZnDw8Mjo+NiWj96KcDLrZjW
X6qxdzgi1NXZkJjWq/a7VLVEV2cfi2n9t7UOl08x7+rsYzGtL1hju3FfMu/q
Q0NDo6PjYlo/eM5fsquzT8W0/r8+cSm59Zh0dfaxmNZ/s8nuyD1f1aSrs4/F
tD6/yvrdXcm8q7P/BR8bHxfT+t4zPnR1AACYLXR1AAAAgPKgqwMAVApN08y7
Ovs5d2xsbHR07OPTcja0nlVobxAKp0y8c3BpnXthte2R9wkdTyaTNHStvfO5
VdY/7vbKWoKGBgcH2fGh4dEPj2QfxHnqhv4IVH62oNa3aL2D/XGFuniIpiH2
xWwKm6hqMXGKiJdb+vSxr5tdGLu8oKw/OLWnp8cwxbCcZGZw+Xb3gjW2B259
OYlEwjCFP4aVljM8PLr5eHa3nMZvo4blcAOTj2Flc+nIudtJNmX1ZwE1qr85
o+xdLrYcdoX0qT3Y/eI6+2u1Tn9Ev4Du7m7DFP5UWf1Su4fe2uHJbuDjyPBK
b5gi3H7fzz4dGR2t+yL7m4LD3/DVGJfDf02QTqcNQ3yXnpGREfPlcHy7+Ewm
U7gc865Ov6cAAICnCro6AAAAQHnQ1QEAKkXJrs6pqnauOagVY/fItx6Eiw5d
uRMKSErh8YisXrhV/GwPbJH71kjRITaF9j+ZOXZhdk+RCzDh9Ml0p/rMybI6
3Ztj4mJLiG7jn7nb7WGLa3ZzPAHlWtvslqOo6rmbs17OfxPzrp5IJOb63xAA
ABihqwMAAACUB10dAKBSaJr22muv/V/F/PM//zNvm7RRSaHpjv+wU0yUMeVv
9kJYzg/i6NGjRf9+MsePH0dXBwB4CqGrAwAAAJQHXR0AoFJope5Xj8fjH53y
b2jwJpJJ+smXB89AOLF8m/27NoWO8529o9Holbvym/WOYCROQ3yvlVgsvu6Q
e3eTPzWJn83ui72+xfa9RTWcLRaLpabKJ9dYcsUe1+d/kQqHDFP47ijstHtO
+9cd9MTjxuUYpiQSCb6cq23ysjq7P2xcDvua6a7N6Y8t2Wq/3WFcDptrmMLP
xpbzvz5xNVwKznw57IMDZwNVn7pjpZYjDjU/VN+os3tDxuWwi5xuiicYX7rV
frN9FstJTv6FmdVyCqeY369Om/kDAMBTBV0dAAAAoDzo6gAAlaLkc0s/+Vp/
KOe2k5Gx8XE2hSqoy6e8mXvEZ3bvbmc3O8430L5yV55XlX1i6Vs7PJneETZE
G5IrirrpeJDOduiSxi+ADT1yyos3ZZ9Y+uI6u1PKPlp0YHJD8sIHU9IO3lJE
/eBAgM52vlV/tCjvw4YpPT09NLT/nERTahvDo6PZ5YgP+hTx5Vxtk+fnlrOs
3p3uHp6Y+tzSwveTHbe6lddqnfQsV2sguxzDc0tFVI/Dsrb6M305Tc1x8+Xw
DckPX9S/OzUNoRHT5fCz3XigLFidXc7SOncyk12O+NzSosuxe5QldS56lmuH
L/ukVDy3FAAATKCrAwAAAJQHXR0AoFKYd/V2e+T5XIMV0zp19f1nvPw4pXUK
0bKsLtlq50OU1qmr37gn/eIDCx+itE7ltvaYmx+ntD5QqqufbQ7yKTytm3d1
i0tesDo/hdK6eVdXVHVZXX45lNZLdvX6Ex4+hdJ6ya5+sSUkLofSunlXd3jl
hdX57w6ldfOurqraW3928CmU1kt29Y+/zH+vKa2jqwMAgAl0dQAAAIDyoKsD
AFSKkverf29PLVhjE9O6lmutqqrtOqOIaf17xxOqoz4psbQu38nf2uGRlCQN
ffcg9dyqfAo+dEmjcisrWk1DPiy/uM7+2Ntp3tWZpua4Ia2bd3Xmnj25sDq/
nNrGsKbFTLo64w/Hl2/PL2dZvTsoJ827uqJo7MxiWm93d5l3debc7aQhrZt3
deahM8HeKzGtq9MsZ2IyawfCsbd35js5+04FIinzrq5qGvu+i2n9vqsLXR0A
AKaDrg4AAABQHnR1AIBKUbKr9/f3d/h6xLS+5ZibKuj4+IQhrd+4J7Hj6XQ6
mRkW0/ryemdYzk4ZHh6+3tElpvVPz/q03DbdI6PjYlp/Ya3tgS1i3tXZx4a0
fupqwLyrsx/brYFeMa1vOOIx7+rsh/1097CY1l/fYg9KqklXZ/8dHR0X0/ov
11i/fxw27+rsFc+3psTlnLjiN+/qbF1OqVdM62s/c5t3dfbuZXpHxLT+21qH
P6SadHX237HxcTGtP7/a2vJQQlcHAICi0NUBAAAAyoOuDgBQKWbS1dmX8bS+
sNp280GEl1sxrf9xtzcgKdTV2ZCY1o9+E6Ipw8PZDb15Wl+03vHAJlO5ZcfF
tL72kD8iqyW7+oSQ1tnL2T1Kya7OPuVpnS3q2r2IeDZO7OrsUzGtHzyvL8ek
q7OPxbRedcBPv1kw7+rsU57WX6t1Wlxyya7OPuVpfX6V9du74ZJdnX0spvV9
X+vLGZi+q2ffECGtv7/fJ0VUdHUAACgKXR0AAACgPOjqAACVQtM0866eSCS6
cloeRf9znfWuRd9mhBIx09nZVf9F4J2dTllL0PFoNEpDgUjqtc32Y5clyrPU
qGnowm1lUY3N6k0YzpZMda4+4GF/ojF9KB6Pd01lmMKwl2Av5A+nCocI33Wc
L4cthC3nVkd0uim0J7y4nKCcXLLVfvB8iHaYF5cz3bWlUp01h33v73VH4yle
lQ1T+JvDXpGOnPwu8l+b7J5QcubLuWeL/mqd9fp9dbop/Nr4csJqanm9c9/X
+eUkk0nz5aQ7Ozce9b33iVuLJWe+nOnOxrFVmHyvzbs6/RIHAACeKujqAAAA
AOVBVwcAqBSapr300kv/o5if/OQn2lShsKoVo6oa3b1caLopJkMRWaU71WfF
5IXmdorMlqPMdtLTuxxFVcPTfK//mxw5cqTo30/m2LFjiURirv8NAQCAEbo6
AAAAQHnQ1QEAKoVW6n51xuVTHjvlos3zdntYUYtUVkVRW9vDRac8csqewOxC
sxRR2yyRWU1hbj0sfgEm7nSE5VkmfYtLdvqKvznTCcsa7bU+K+Us51Fktr+h
sHsUu2d2y2EvcffRrL87M2d+vzq6OgDAUwhdHQAAAKA86OoAAJWi5P7qYbVz
eb3rN5sd4WjvUA7f6OPmo9RzqyxbToQGBgfZcb5LdiwW33Q8OG+VpdXaSVP4
jujecOcrG+1vbnclOvtoiI6zcw5N1d3drQ/FU+/v972w1mbxddEQ3wVlqMDk
BcQ+uyj/7P3HZ27G6DjfhCSTyRim8OXcsabZNW86Furvzy5ncHCQjicSCcMU
viO6P9L56mbHG9tcsfSU5RReG98RnS2n6oD/l2us7W59OXwXlMHc21h0Oceu
qGw5X1xVDcthHxim8E1d2hydz1dZ1h0O9PUPimdj755hCt8RPSh3vr7VuWSr
S0v2Gd6caZcTS6w95H9+tfWes9OwHPb3oehyCr/XT548oaHOzs7C5WB/dQCA
ioOuDgAAAFAedHUAgEph3tVdPmXZNic9qvLVWqeWyj6mk8rthVvBeVVWGtp2
MjI2Pk4P+lQU9cPDHjo+v8ra5uxmU2iv8kcO+ZWNdhp6a4cn0zsyMfXJmCL2
vyZa7k719z7Rnxb64jq7U8o+ddTw3FIRHd/d5KMp7M/51uxTRw3PLRVRpb/S
Gpo/uZzaxvDo6LjhuaUiytoWl/zqZgdNWVbvTncPmyyHqnJE0d7fqy9nYbXN
GshejOG5pYXL+fRrP19OU3P2GaaG55YWLue776UFq/Xl1DSERkbHJ6Y+t1SU
yWS07J3q8m+3OPgTYJMZs+UMDw9ruTvVqz7Vl7Ngja3Dl70YPLcUAADQ1QEA
AADKg64OAFApzLu6P6T+z50uHnUprVNXv9omLVhj40PbTkZGRke13F7r2z7P
d2BK69TV7R55ydb82Sitm3f1iKyuPuDhUyitl+zqhy/kL4DSesmufuOetLA6
v5zaxvDw8Kh5V3f65GX1+eVQWjfv6rKs1hzON39K6yW7euPloLicpuZ4ya7e
8lBi7xWfQmndvKt7Asrv/uzmUyitm3d1RVU3Hs0vh9I6ujoAAKCrAwAAAJQH
XR0AoFKU3Acm2dn7+11eMa1b3fqW3R2+HjGt132h77WeSqV3nVHEtH7tvqZL
9i2ty8fbt3Z4vEHVpKtnz5buqmkIiWn97mPFvKvH4/Gm5viUFn1dNe/qjDXQ
K6b1zccl2mt9uq6eTcTpvuXb88tZVu92+RWTrp47W2dtY1hM67c7VPMQza7w
fGtKXM6Jb2Xzrp7N/lKvIa3TXuvTdfXsC6V7396Z/16z75TDW3w51NVz3530
tpMRMa3fbC+xHHR1AIAfPXR1AAAAgPKgqwMAVIqSXb2/v793YExM62s/c/Os
bUjrV1pD7Hg6nR4fnxDT+svrbeFcCR4eHk5mhsW0vuOk17yrZzKZkdFxMa2/
We+gZ6UWLoeHaPaxmNbnV1kcXtm8q7OPDWn9XHPQvKtnNyfvHhbTel2jx7yr
s7mjo+NiWl+y1U6/jzDp6uxjMa3PX2WxuGTzrs4+NqT109cC5l2dveeZ3hEx
rW884jLv6p2dnWPj42Jaf22znX4fga4OAPDMQlcHAAAAKA+6OgBApZhJV2df
xtP6ij2+UETj5XZCSOunbuhPzEyn0+w4T+uL1jssHj32Dg9nd+3mab2mISTn
7j037+rsU57W2UR3ICZegEgM0ROTaZ1dXqtFf5imeVefENJ647f6IzvNuzr7
lKf1NQeDEcVsHxjq6uxTntZfq3U6/THzG7z5ciitz6+y3urQr9m8q08Iaf3I
ZX055l09++lkWv/gQIB+G2Le1dmnPK0v3uRw+OLmy0FXBwD40UNXBwAAACgP
ujoAQKXQNM28q1NWZQKStuW4JxjWd/ngx5lr98INF/2agI6z//fjL70PbHLh
kMOr1J/wyorxOFc4hX0xm2L3KNNNEWfxIw2XAlfbwoVnM5nSfD988FyR5Zhc
m8uv1DV6KKrPcIqSXY7H6p7dco5f9tP/UcDMl3O7Pbz/jK/o0HTX5g2qW497
wnLpV+FD7K/Fji88j52zW850ZxOHzLt64a8JAABgzqGrAwAAAJQHXR0AoFJo
mrZ8+fL/t5if/vSnGsBcO3bsWNG/n8yJEycSicRc/xsCAAAjdHUAAACA8qCr
AwBUCm0G96tfbAmd/DZYeHexqmbvuLa4lMK7jh87lR1feNT8jes6k3uYw7K2
9Xj2MaYzuYeZH99/xne7PTyrO6KvtIaOX/bPaorVrWw74VYU43JMZkWUaF2j
x+Uv8uaYLOezc77m+7NbztW27P+xQMkp4pDdo/8fC8z82uj/WMDhnd1y2IVd
uze75RQOmd+vXrhLDwAAzDl0dQAAAIDyoKsDAFSKaKn91W+0J+ZVWX/xgeVy
W5qmxGLZ/cAVRa09If18peXVWqeWym4zPjY2pmdbX2zxJgcb2nYyMjY+zoY6
OztpiPZXN1yAlovqHxwIsClv7fBkekcmCvZXFyWTSRo6fFljU15cZ3dK+q7p
dJxvSM719PTQ0K2O+PwqK5t1vlXvsYYNyTm+HKc/9lqtk02pbQyPjmaXY9hf
vXA5ESW65mCQTVlW7053Z5ds2F9dlEqlaKjx2yibsrDaZg2UWE5vby8NtVoS
C1Znl9PUHDdfDj+bOxBbUueize1Hcssx7K9euBxZ0T48EqTN7ZOZ7HIM+6uL
0uk0DZ2a3Ny+w9cjXgD2VwcA+NFDVwcAAAAoD7o6AEClMO/q7Xb5uVWWn6/M
/uFpnbr6nq+8dJyndQrRsqy+ttnOhyitl+zqG4+4+RRK6wOluvrpawE+had1
865uccnzJpfD07p5V1dUdcnW/HIorZfs6nWNHj6F0nrJrn6uOcin8LRu3tUd
Xnl+VX45lNbNu7qqam/WO/gUSuslu/qOk/nvNaX1kl39SmuIT+FpHV0dAOAZ
ga4OAAAAUB50dQCASlHyfvWjl2UeSCmtU1f3h9Tf75qS1pWEXsJvtqsL1tjE
tJ6avId5uq7u8CpL66ak9Xi617yrR2S1piEfbymtm3d15sS3+eVQWi95v/rt
DnVhdX45tY3hVKrTvKu7/Mry7fnlLKt3x9J95l1dltXNxyVDWjfv6kzTdVVc
TlNzvOT96ncfK+y9EtN6Kt1l3tW9QfXtnVPSupbsM+/qiqrWfRE2pHV0dQCA
ZwS6OgAAAEB50NUBACpFya7e39//+dWYmNZPfhukCto7MGZI64+dMjueTqc7
fD1iWt941KeoqklXZ/9NZobFtP7mdpcnoJh0dWZkdNyQ1lseSuZdnf3Y3pTb
n4T/abwcNO/q7Id9a6BXTOs1h32yrJp0dfbfdPewmNbf2OZy+mSTrp57c0Zr
G/Mtmr3ijXvFl8O7OlvX+daUuJzDF/zmXZ29e06pV0zrqw94IrnlDEzT1dl/
M70jYlpfstVl98gmXT333RnddjIipvWrbRK6OgDAswBdHQAAAKA86OoAAJVi
Jl2dfZmY1sVyK6b1Resd960R6upsSEzrvNyadHX2sZjWX9/ipHJr0tXZx2Ja
5+XWvKuzT8W0fuBs8RAtdnX2qZjW39/rjihm96vTcsS0/upmh9VdoquzVxwd
HedpfX6V9UprqGRXZ5+KaX13k69kV2cfi2n9vU/cUqREV2cfi2n9lY32R44S
XZ0tZ2x8nKd1tpyLt4Lo6gAAzwJ0dQAAAIDyoKsDAFQKTdPMu/qTJ08Gc45d
UX72/uMvrqraJDqezvS/85H7pRq7K6RvJ5JIJGjonrPz+dXWtYf8WjTOs/bg
VIazqYne17c42Z9ARM+z6XTaMIU2ouFTevsG2EuwF2pz6NuzRKNRwxS+I3om
k6EjbCFsOUcvK5SO+dm4gckN3uPxOB1pd3f9co216oBfiyVnuJxoqveNbc5X
Nzv8kU5e6Q1T+M4t7BXZp319AxuPBuetsrRaUiWX09nZSUfO3Iyx5Xx2QZ5u
Ofza+HIeeztfWGt7f7+PL6e7u9t8OYnOvt/92f3KRrsv3MUr/XTL6e/vZ5/2
DwxsORFiy2nuSE63HL7Be+H3mn2xeVcv/D0FAADMOXR1AAAAgPKgqwMAVIqS
XV3U0h7WivGH1Id2uejQ3UcRulN95uwe2e5RZjWFvQR7oVlN0aZfjonvH4fD
xRc6LadPpjvVZ06W1Tsds762MpbTZonQneoz5wkoj5yzW46iqq2zvzbOvKsn
Eom5/jcEAABG6OoAAAAA5UFXBwCoFJqmLVq06H8U85Of/ETvooo6XUwOSrOr
skw4otJe67NSxgv9baZEFE2e5S8Oynuhv9FyZHW2vwcp74VmPuXIkSNF/34y
x44dQ1cHAHgKoasDAAAAlAddHQCgUpTcXz0eT9Qc8b6/1x1Pdnbl8ODpDCRe
2WA7fUOm43yf8Fgs1jUV37klGk+994l741FfutN4NsMUvol6PB7f+3Vw2TZH
WE3REN/qpKsAP9v1++qv1ln///buLLit607Q+MO8532epuZx3ibVk67qVJ56
qt3uyIzjuCcpx6WOFHni1GSqJ07HMklZkhWZMi3HjsexbO20tiimN8myJWul
ZNEStVEiCILYCeDiXmxcQHARNxFzwANeHILkuQSqJxLC71csFXDBA94/IFWi
T/C5N7oT8ri9OUk6nV5uia8v89Pt7uPnYvL44GBpVxnNOOKV2Xog0N/vMI79
4ogz2Xey72c73GEjUzbO4PxrsvjcrnQmfrTZda2r+MKKKRzHCUb7177qPnQ6
UvbQ4nHsFyeRTNfv9jbs8WVWPI54KQ6diYofFIr1l704mnG+6SqM8/XdRNk4
4kzKljjuA7N4g3cAwENHVwcAAKgOXR0AaoW+q8fj5rYPgsVrj+4NTU7PiiUy
nHb2xJ7Z3iOOP76x63RH4UKl9oU+5XVLVbJRR2Lmb98PyGd7/XjswexsfuGV
MVX357c33/VpWC55/k1fdnQ6v/C6pWXk8bPXomvqXWLJU5vdnkjhQqVl1y1V
yarc1WusbfLIH3SyvT+/6LqlKpmIo4ZVv6f44jQdic7M6MaZnJyUz7bvZPEq
qxt2egdyhau4qtctXXKcCzdidQ2FcZ7c1O0KFc6/7Lqli8dx++LrmnvlD2pt
S6nPJq9bqpLbm8cMc9O+4ruztaVvWjvO1NSUfLYPTkfkkvXN3ky2MI563dIl
x2m7FZVXgK1r7O4MFM6f65YCwF8ZujoAAEB16OoAUCv0Xf2ux3h6S7cMp3Za
l1295VTQPi7TumNXv3on+sRcH1bTur6rB/vMf2nqsZfItO7Y1V/e67WXyLTu
2NWPnimNI9O6Y1e/fi/6g8bSODKt67t6OGKue81tL5Fp3bGr/67FZy+Rad2x
q394PqSOI9O6vqvf6o798OXSey3Tur6rRw3ruZ0ee4lM645dfceh0rsj0zpd
HQD+ytDVAQAAqkNXB4Ba4bgPTE946J+3llJww96QYRY3+jh2Pqmm9S+v9+u7
unCzd6iusRRvXz9evGqm5vPqoVj/+uZSiX3+TV8omtR3ddNKbm3pU9P6bU9a
39WF1raU2qJPXM3ou7pwxzskP3ptp/V4fOlx7M+rh43Mc2+Uxtmw0xuMpvQh
2rKS4pnVtH7DndF3deFke39ZWtd3deGef1C8VmpaN5YZx/68eiSe+eVbfjWt
ByJph3ESCfG+q2n9urufrg4Af03o6gAAANWhqwNArXDs6uPj40FzXE3rW/Z7
7axdlta/+qZP39WnpqY6AyNqWn/7z359V89ms5ns1IK0/vseeeHTxePIJalU
anpmVk3rT25y9fgNfVcXt8vS+qmv+/RdfXJy0hUaVdP6zqM+fVcXawdyUwvS
erNbXsh1uRAtznBmZlZN63UNXV29hr6ri9tlaf2ztrC+q4vX3BMZVdN60yGv
vquLdzY7Oq2m9XWvueWFXJcbJ5lMPpidVdP6Ew2uO+4YXR0A/mrQ1QEAAKpD
VweAWrGSri6+zU7rP36l57Y7bpfbvJLWtxwMx+aCqr6ri7t2Wl/f7HX74o5d
Xdy107pYeOnWghNQ2SFa3FbT+oFTUfmQvqvnlbTesDcULaRrh64u7tppfW2T
x+Vdehy1q4u7dlpfU+8632HoP+Atx1HT+u4TxXH0XT2vpPWNe0KRuf84QN/V
xV07rT+zveeeZ+lx1K5eeIb5tC7GOXPNYZxkMiluq2l916fFcejqAPDXga4O
AABQHbo6ANQKy7L0XT2VSsm/8N7usX62o/tub8Ka1z9v74lQ/W6vlSgW3UQi
0b+QvSSdTssjl++YP292+8Kpxc8m2X04mUzKI/6+lFjSdttcbon6g+TdZCoj
TmzPZyG5T7g6znJLhJYvwr/d1Wsm0isf52pnYeN0TzDpOI79bMFo6rnX3XZU
l8Vbf26pVGbzPt+7H4fkFvfqi6MZ59hXkRf+2GslM8udm/3i2ONc7zLX7eh2
+ysYJxxL/eKNHjuqr2ScdCazrcX/9ofBxe+1ukTf1Rf/Iw4A4KGjqwMAAFSH
rg4AtcKyrLVr1/6XpXz729+2FpLblSxJ81DNLfmL/SDGWcmSQ4cOLfn7Uzh8
+HA6nX7Yf4YAAOXo6gAAANWhqwNArbCcPq8udPbErt2NVtRLIzHzy6t9lVbW
E5fDlbbZCx0RXyhe0ZKuXuPqncrGiRqW3Gu9IifawnKn8ZW7dDPiCRjO36dw
++JXblU2TswwP78SrmiJIJbEKhxHnJjbV9k4Hr8hXgT1iP7z6nR1AHgE0dUB
AACqQ1cHgFrhuL96IDb0zPaep7e4vdHRB3PsbUMeLDQ9PV0socnMi7uDj2/s
+vJ6v3zI3l99cnKybJU8Lp5z/5fmP77Y1fyn6PTMjDg+Pj4uHxoaGipbkk4X
d2jp6MmuqXf94vfewdyk+mypVKpsSS6Xkw8FY4NrmzxPbXa7wzn5kL2nStmS
mZkZe5yGvSFxbieuZsrGmZiYWHIc4cjZhFjy6uHI1FRhnPvz28WLtWVL7A1S
bnmH6xpcG3Z6M9kJ9dkKF/pcaGRkRD4UNgbXNfc+uan7XqA4jr2nyoNFimeW
SG0+UBjnw0vFp7W3ixevedkS+73+cG7b+S0Hw5Nz49jbxQ8MDCw3Tqc/K05s
fbM3NbhgHPGcZUvGxsbkQ5H4gBi/rrH7tm/YHof91QGg5tDVAQAAqkNXB4Ba
oe/qLq/xk23d8uKST29x+43CNUztEF32VDKcGob56z/2yiWPb+w63VHY/rrs
uqVlJyCO7/okIJeIr9ePxx7Mzt5feN1SVSZT2Cr83LXImnqXXPL8m77s6HR+
4YU+VTJE9/iNZ7e75ZKnNrs9kcI1TMsu9Fk2Ttw0/+3dXvvcTrYXrmFadt3S
xePsPVEap+lIdGZmtuy6pSoZoi/djNQ1FMfZsNM7kJvSjDM6OiqO9wbia5uK
4zy5qdsV0o0jn800rfrdXvvcWtsKz1x23dLF43zwRchesrWlb3pmtuy6paqB
gQFx/Os7UXktV3l12ky2NI68bqlK/huKP2yue61HLqlr7O4MFC7JynVLAaAW
0dUBAACqQ1cHgFqh7+qxuFW/p5SIZVrXd3Vh38mwvUSmdceufuFGtK6xW03r
Y/OfV1+uq7t9xvrmUiKWaV3f1WOGuWlfaRyZ1vVdvVCVv+yzl8i07tjV226W
qrJM6+PjE/qu7gkYz71RGkemdX1XNwzzlYNBe4lM6/quLhw7G1HHaW1LOXb1
q3ei4rVS0/r4/Ul9V/eF4uIdsZfItK7v6nHTfPVQaRyZ1unqAFCL6OoAAADV
oasDQK1w3AdmeGRs0/5SJ396i/v6PUMfogcGBo6dT6pp/aOLMX1XF792BkbU
tL7jaJ/ca325ri5kslNlaV3utb5cVy882/DI1pZSJ39qs7u9M6YfR/xlv3Vu
FxT76/i5mL6ri19doVE1rW8/1Cf3Wl+uq8+NM1GW1uVe68t19bkXJ9d0JKqm
9Su3l3538vNdXbx6J7/pV8c5dDqi7+riV09kVE3rmw+E5F7ry3X1wkO5yV++
5VfTutxrfbmuXnhxstnXj8fUtH7plkFXB4CaQ1cHAACoDl0dAGqFY1cfHx+f
mplV0/q2g17Hri7uqml97avdUcOhq4vbalp/osHV0RXTd/XC7YVp/eiZoL6r
i7+2T8/Mqmn95b0O44i/7Iu7alr/6XZ3OGLqu7q4rab177/U9U1nVN/VxU8c
yE2pab3l1NLj2F1dzDUzM6um9Y3veRy7urh9sr2U1n/8iivYZ+q7uritpnUx
zuVbEX1XF+NkR6fVtL73REDf1YeHhx/Mzqpp/YV3PHR1AKg5dHUAAIDq0NUB
oFaspKuLb7PT+taWvriZWElXz8+n9fXN3kCkWML1XT0/n9bF13X3wPxHsnVd
Pa+k9aPnihvU6Lu6uGun9cZ94bjlsA+M7Or5+bS+tsnj6yuegL6r5+fT+pp6
1zeu4jj6ri7u2mn94OnEcuOoXV3ctdP6xj0hw1x6l578wq6en0/rz2zv8YaL
J3Bf29Xz82ldjHP5bnGJvquLu3Za3/O5KY/ru3rhlZ9P6y/sCsTiXLcUAGoP
XR0AAKA6dHUAqBWWZem7ui0Wt3Z/GpC7f6zc4dMhty9e0ZLzHZFz1yMVLXH7
DPGDKloiBhHjRI2KFllHzwS7eitbc+lG5Ex7X0VLPAFDflJ95Yy5cSKxyt6d
P58L3e2pbJyvb0dOXQlXtMQXiu8/GahoSdw0954IyP8oQN/V7X8mAAA8Oujq
AAAA1aGrA0CtsCxrw4YNf7uU733vexW1UOD/h8OHDy/5+1M4cuRIOp1+2H+G
AADl6OoAAADVoasDQK2wnD6vnkgkjpwJvf9pMDXPDp6GmWzY4+3oisvjcs8Q
KbWQfTyZTL7TGvjzub7FDy23RDh7Lbr9A28imdQvUR9y+60Xd/UGI4my4+Ik
l1sSt1Iv7/W2d8YqGmf3p8Ejp8MVjXPhRmzbQZ9YvfjZllvlCRTG8YWslY9j
Wskt+71XbhsrPzfxbAdOhQ58vsR7rRnn8u2Y+EFmJeOIQcQ4vcFlx0kbgfvH
f9wfuGk5fV7d3nQIAPDooKsDAABUh64OALXCcX/1j9pMeQXJI+eK22Ink4Ud
vCMxc+OekDj+9Ba33yjswb54f3Xb4OCgfGjvKUMseXxj1+mOAfsELGUHb5v4
XxO55NIta029S6x6/XjswexsftH+6ip53O231jZ5xJLn3/RlR6fzi/ZXV8mu
GzWsxn2FDeSf2uz2REbzS+2vbhsaGpIPHTpTfHFOtvfrx5mcnJRLrnQm6hoK
4zQdic7MFMYp21998TiegLWuuVcs2bDTO5ArbFBftr/64nFihrnlYGGcJzd1
u0Kj6rMt3jglm83Kh46dL47T2pbSjzM1NSWXtN+z5LVZt7b0Tc+NU7a/+uJx
vEFTDCI33s9kC+OU7a+en8jmD/9D/vf/Mf/+fx0I3mJ/dQCoOXR1AACA6tDV
AaBW6Lv6Hbfx+FxoVdO67Op//MhvH5dp3bGrX+iI2EvstK7v6sE+84cvu+xV
Mq07dvX/847HXiLTumNX3/1pwF4i07pjV//6TvSx396zV8m0ru/q4Yj5o82l
cWRad+zqL+7qtZfItO7Y1Q+cLI1jp3V9V792d8E4Mq3ru3rUsH78Sre9RKZ1
x67euKc0jkzrC7q6HdXnviZbHqOrA0DNoasDAABUh64OALXC8fPqp9qTj29c
kNZlV4/FrU37w2pa90ZH9V1dOPyVWZbWHT+vfvVesq6xFG9fPx5LpdP6rt4b
tNY3e9W0bqay+q4eM8ytLX1qWneHc/quLhy/YNlLZFp3/Lz6ta6k/IC3ndZT
qYw+RPvC1nNvlMbZsNNrJLP6rm4YpnjmsrSu7+rCx20JdZzWtpTj59U7XJZ4
rdS0nko7/DNBoM/65Vulf5QR75SRLL7UuYyRP/yYHdXze7/TH7pLVweAmkNX
BwAAqA5dHQBqhWNXHx8fP3tzUE3r730SkBV0ama2LK1fvxfVd/Wpqalj55Nq
Wj9+NqTv6tlstjMwoqb1bS1+09R19VQqlclOqWn9uZ0ef9jUdHVhema2LK1f
vRPVd/XJycnWtpTaog+fDuq7uljrCo2qaX3zPl98bp7lQrQ4w4HclJrW173W
0xuIa7q6MDMzW5bW225G9F1dvOYn2/vVcQ58vvQ4dlcX76wnMqqm9frdXsPQ
jZNMJrOj02pa/9kOT4/fSER80wf/Xo3q+WwsnU7T1QGg5tDVAQAAqkNXB4Ba
sZKuLr7NTuv/tNH1yaU+++Pialpf3+x1++KOXV3ctdN6XWP3+Y6oY1cXd9W0
vuezkH0CZewQLW6raX3j+/6oYem7uritpvW1TZ6uXsOxq4u7dlpfU+86097n
2NXFXTWtv/txSP8BbzmOmtZ/s8sXiZn6ri5uq2n9me09d3sMx64u7tppXYxz
6uulx1G7urirpvW3Pwzqx0kmC7sJqWn9X9/xhiOmFY9Otf5Ujeri2+jqAFCL
6OoAAADVoasDQK2wLEvf1QcHB0fnfH418U8vdZ2+nrTmyeNDwyMv7fb/bIcn
FBuwO/DoQnbszWaz8kjLl7EnGlzfuDJlz2az23Umk5FHrnVnxJKDX8Tk5iSL
l9i7jotvkHejVlac2Mb3/YlUcXOSgYGBJZfYz5YdHtm0L/DsdncwNmh3YMdx
jp411rzUdaUz5ThOOp2WR264M3UNXbtPROW+OjKS68/NSGbXN/f8ZpfPShZf
NxkiNEuGh0e2tYR+sq07EB1abpz0/L464iTlkdaL5vdf6rpwq/y9ttkp3n6v
7/RmntzkeveTiD1OLpfTn5uVHv6fb/T+6zteM1F8d/rTiemPnn2w+2/GLK/8
HvFW6ru6DPsAgEcKXR0AAKA6dHUAqBWOXV0lP7+9WCxuefxLP6Sx3LP9+y4R
JxatcFHMMHse1XF6A3H5SfWVMwxT/ncEFfnLjOMPxQufVFfFo8ngPfWAvqun
0+mH/WcIAFCOrg4AAFAdujoA1ArLsp544on/sJRvfetbMmxGYmYgXHGYrSJN
V7HE4zfk5uQrFzUsudd6Rf4y4/QG4nJz8pWLGaYv9Ii+O+LEYtpxEhFvwgir
R8T4cut424EDB5b8/Sm0tLTQ1QHgEURXBwAAqA5dHQBqheP+6olU/292+X75
Zm8yMzwyxw6eIwupe4O8fyLy1Muue75++ZC6cUrZKvvZLt9Jrnnp3qeXTXnc
3pI9nU6XLbF3GgnGBp/d7n71cGg4l1OfTQxVtiSTKW6cIsbZ+L7/uZ0eM1U8
E3tXmbIluVxOHhc/7sCp6JObXLc9xTNRN05Zbpz2rvSa+q7WixWMEzYG1za5
XzkYzGYdxunvL26ckkimG/f6173WE0sM6cexn038uCNnjbqGrhvuTNk44iSX
G6fDnRZLjnwVk8fV97psif1eR+ID4sQ27QsMLRzHPrfRAXOm5b9P/+mHg2lz
/tzSWw8G/qWpJ2KWxtF/Xl3uVw8AeKTQ1QEAAKpDVweAWqHv6pGY+W/vFS8u
+au3/SPjM2KJ3YHLnurBgwfy+LufhOSSp7e4/Ubhsqdl1y0tOwFx/Ex735p6
l1jy+Mau0x2Fy57eX3jdUpWM5F29xtomj/xBrx+PPZidzS+80KdKRt2oYW18
vzjO82/6sqPT+YUX+lxynD2fFcd5arPbEylc9rTsuqWLxznfEa1rcMlVJ9sL
lz0tu26pSkZyty++rrlXLmk6Ep2Z0Y0j9yqPGWbj3uI4G3Z6B3JTmnHsZzv4
RfE6s09u6naFCuOUXbd08TiXbkbsq6y2thVOpuy6paqBgcI2+x6/IU5JLtna
0jetjCOvW5qfyOYPPyavUjpz/KmEETYMc8sBv30N3Ey2MA7XLQWAWkRXBwAA
qA5dHQBqhb6ru33xZ1/tkanTTuv6rm4Y5ovvee0lMq07dvU9nwXsJTKt33fq
6hc7InWN3fYqmdb1Xd3jN362w2MvkWld39Xjplm/uzSOTOuOXb3lVNBeItO6
Y1e/citqt2s7reu7ui8UX99cendkWtd3ddO0Nu/z2UtkWnfs6kdOLxintS3l
2NW/6YyK18peItN6qasrUV18Pdj9N6ng3UDYfG5n6d2RaZ2uDgC1iK4OAABQ
Hbo6ANQKx31gItbw2h29aloPRSz9B7yT6f5N+8NqWr/dk9R3dfHrsfNJNa2f
vJrUd3WhMzBSltblXuvLdXUhamXXN5c6+fNv+oKRhMM4qczWlj41rd/oTui7
uvi1tS2ltuhPLif1XV24F8iVpXW51/pyXV2IJYaee6M0zoadXt/8buWL3+v5
rJ0Wz6ym9WtdSX1XF7+ebO9Xxzl+wdJ3dcEdzpWldbnXeirmV6N6fu937if9
comRGPzlW341rXtDDvvA0NUB4BFEVwcAAKgOXR0AaoVjVx8fH08OTqppvXFP
rz5EDwwMTM3Mqmn9x6+4ooZDVxe31bT+jy/eu3Y3qu/q4nZZWj/4eUDf1cVf
2zPZKTWtv/iewzjiL/vTM7NqWn96syscMfVdXdxW0/pjv7339Z2ovquLn+gK
jappffenS49jd3Ux10BuSk3rv37Ho+/q4tWbmZlV0/oPN3UF+0x9Vxe3y9L6
xY6IvquLcTyRUTWtv/tRYZzxD59Vo3o+GxO/x+SS4eHh7Oi0mtZ/9VYPXR0A
ag5dHQAAoDp0dQCoFSvp6uLb7LS+vtnb4zcdu7q4a6f1usbuy3eKH2/Wd/W8
ktY/OB2XS/RdPa+k9cZ9YVnv9V298AzzaX1tk8ftX/oD3mpXF3fttL6m3nXx
ZvEV0Hf1vJLW950qjqPv6uKundY37glFYg6fVxdzibt2Wn9me4/Lu/Q4eaWr
i9t2WhfjnO0ojnNf29XzSlp//4Qhl+i7urhrp/UXdgXkP0akQ/fy+//Ojuri
e9SuLu7aaf0n23rueky6OgDUHLo6AABAdejqAFArLMvSd/VEIpGa0xOwfv2O
xxOwbKmFZINVHzITqYY93gs3YvbxZDJZtmrxs+35LLj706D9bPYJaJZcvBlr
2N0bt5Z4qGyJ/Wy9wcI4dlRf0ThW8uW93rPXohWNc+Dz4DutgcXPplly5bax
8T2PYSZXPo4vXBjHjuqLlyz+QeL0tx7wfnE1Yh9fyThHToffOu6vaJz2zthv
d3miRmmcTLhr4sgP+kN3lxsnGEm88I6ns6fwjxH6ri7/1QMA8EihqwMAAFSH
rg4AtcKyrJ///Of/bSnf/e53LeBhO3z48JK/P4WjR4+m0+mH/WcIAFCOrg4A
AFAdujoA1ArL6fPqwtU70XPXIks3z9PBQDheUSY9803ftbsx5+9TdPUaH18I
VbQkalgHPw/Iy5iu3NEzQV+osnHOXY98fXvpF2c5bl/8w/OVjRMzzAMnA/Iy
pit3/GzIEzAqWnLpZuTSjcrG8fgN8YM035CIeLNtf1CPGHPjxDTjmGb24s6E
UbgIq/7z6nJbGwDAI4WuDgAAUB26OgDUCsf91e/5B3+0xV3X4Lrty8klyWRx
Q48Dp63ClSXf9o+Mz+QX7a+uGhwclA994xpYU+96eovbb4zbJ2ApO3jbxP+a
yCX+SP/aJs/jG7tOdxSftmx/dZU8HrdSjfsKW7u/fjz2YHY2v2h/dZW9D8nR
c4Wt3Z9/05cdnc4v2l9dNTQ0JB/q6BkUr8xTm92eyKh+nMnJSbkkGO1f11zY
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
    "], {{0, 560.}, {996., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{996., 560.},
  PlotRange->{{0, 996.}, {0, 560.}}]], "Input",ExpressionUUID->"578b47b4-84dc-\
45c9-8a2e-b7dd0529b13d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hexLattice", "[", 
    RowBox[{"r_Integer", "?", "Positive"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"basis", ",", "coords"}], "}"}], ",", 
     RowBox[{
      RowBox[{"basis", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["3"]}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["3"]}], ",", "1"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"coords", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"-", "r"}], ",", "r"}], "]"}], ",", "2"}], "]"}], ",", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"i", "=", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
               ",", 
              RowBox[{"j", "=", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"i", "+", "j"}], "]"}], "\[LessEqual]", "r"}]}], "]"}], 
          "&"}]}], "]"}]}], ";", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{"\"\<Coords\>\"", "\[Rule]", "coords"}], ",", 
        RowBox[{"\"\<Points\>\"", "\[Rule]", 
         RowBox[{"coords", ".", "basis"}]}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hexGraphFromCoords", "[", "coords_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nbrs", ",", "edgePairs"}], "}"}], ",", 
     RowBox[{
      RowBox[{"nbrs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"edgePairs", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"c", "=", "coord"}], "}"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"cand", "=", 
                    RowBox[{"c", "+", "#1"}]}], "}"}], ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"coords", ",", "cand"}], "]"}], ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"{", 
                    RowBox[{"c", ",", "cand"}], "}"}], "]"}], ",", 
                    "Nothing"}], "]"}]}], "]"}], "&"}], ")"}], "/@", 
               "nbrs"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"coord", ",", "coords"}], "}"}]}], "]"}], ",", "1"}], 
         "]"}], "]"}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{"coords", ",", 
        RowBox[{"UndirectedEdge", "@@@", "edgePairs"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"initEdgeDelays", "[", 
    RowBox[{"g_Graph", ",", 
     RowBox[{"max_Integer", "?", "Positive"}]}], "]"}], ":=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#1", "\[Rule]", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "max"}], "}"}], "]"}]}], "&"}], ")"}], "/@", 
     RowBox[{"EdgeList", "[", "g", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tick", "[", 
    RowBox[{
    "g_Graph", ",", "delays_Association", ",", "clocks_Association", ",", 
     "failed_Association"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"propagatedClocks", "=", "clocks"}], "}"}], ",", 
     RowBox[{
      RowBox[{"Scan", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"u", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"failed", "[", "u", "]"}]}], ",", 
            RowBox[{"Scan", "[", 
             RowBox[{
              RowBox[{"Function", "[", 
               RowBox[{"v", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"!", 
                   RowBox[{"failed", "[", "v", "]"}]}], ",", 
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"d", "=", 
                    RowBox[{"delays", "[", 
                    RowBox[{"u", "\[UndirectedEdge]", "v"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"propagatedClocks", "[", "v", "]"}], "=", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"propagatedClocks", "[", "v", "]"}], ",", 
                    RowBox[{
                    RowBox[{"clocks", "[", "u", "]"}], "+", "d"}]}], 
                    "]"}]}]}], "]"}]}], "]"}]}], "]"}], ",", 
              RowBox[{"AdjacentVertices", "[", 
               RowBox[{"g", ",", "u"}], "]"}]}], "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"VertexList", "[", "g", "]"}]}], "]"}], ";", 
      "propagatedClocks"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"palette", "=", 
     RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}]}], "}"}], ",", 
   
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "=", "3"}], ",", 
       RowBox[{"maxDel", "=", "3"}], ",", 
       RowBox[{"autoRun", "=", "False"}], ",", "lattice", ",", "coords", ",", 
       "pts", ",", "g", ",", "delays", ",", "clocks", ",", "failedQ", ",", 
       "root", ",", "rebuild", ",", "step"}], "}"}], ",", 
     RowBox[{
      RowBox[{"rebuild", ":=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"lattice", "=", 
          RowBox[{"hexLattice", "[", "r", "]"}]}], ";", 
         RowBox[{"coords", "=", 
          RowBox[{"lattice", "[", "\"\<Coords\>\"", "]"}]}], ";", 
         RowBox[{"pts", "=", 
          RowBox[{"lattice", "[", "\"\<Points\>\"", "]"}]}], ";", 
         RowBox[{"g", "=", 
          RowBox[{"hexGraphFromCoords", "[", "coords", "]"}]}], ";", 
         RowBox[{"delays", "=", 
          RowBox[{"initEdgeDelays", "[", 
           RowBox[{"g", ",", "maxDel"}], "]"}]}], ";", 
         RowBox[{"failedQ", "=", 
          RowBox[{"AssociationThread", "[", 
           RowBox[{"coords", ",", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"False", ",", 
              RowBox[{"Length", "[", "coords", "]"}]}], "]"}]}], "]"}]}], ";", 
         RowBox[{"root", "=", 
          RowBox[{"First", "[", "coords", "]"}]}], ";", 
         RowBox[{"clocks", "=", 
          RowBox[{"AssociationThread", "[", 
           RowBox[{"coords", "\[Rule]", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"\[Infinity]", ",", 
              RowBox[{"Length", "[", "coords", "]"}]}], "]"}]}], "]"}]}], ";", 
         RowBox[{
          RowBox[{"clocks", "[", "root", "]"}], "=", "0"}], ";"}], ")"}]}], 
      ";", 
      RowBox[{"step", ":=", 
       RowBox[{"clocks", "=", 
        RowBox[{"tick", "[", 
         RowBox[{"g", ",", "delays", ",", "clocks", ",", "failedQ"}], 
         "]"}]}]}], ";", 
      RowBox[{"rebuild", "[", "]"}], ";", 
      RowBox[{"RunScheduledTask", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{"autoRun", ",", 
          RowBox[{"step", "[", "]"}]}], "]"}], ",", ".5"}], "]"}], ";", 
      RowBox[{"Panel", "[", 
       RowBox[{"Column", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Dynamic", "[", 
            RowBox[{"Show", "[", 
             RowBox[{"Graph", "[", 
              RowBox[{"g", ",", 
               RowBox[{"VertexCoordinates", "\[Rule]", 
                RowBox[{"Thread", "[", 
                 RowBox[{"coords", "\[Rule]", "pts"}], "]"}]}], ",", 
               RowBox[{"EdgeLabels", "\[Rule]", 
                RowBox[{"Tooltip", "/@", 
                 RowBox[{"EdgeList", "[", "g", "]"}]}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "550"}], ",", 
               RowBox[{"EdgeStyle", "\[Rule]", 
                RowBox[{"GrayLevel", "[", ".5", "]"}]}], ",", 
               RowBox[{"VertexShapeFunction", "\[Rule]", 
                RowBox[{"Function", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"pt", ",", "v", ",", "size"}], "}"}], ",", 
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"isFailed", "=", 
                    RowBox[{"failedQ", "[", "v", "]"}]}], ",", 
                    RowBox[{"clockVal", "=", 
                    RowBox[{"clocks", "[", "v", "]"}]}], ",", 
                    RowBox[{"maxClock", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"Cases", "[", 
                    RowBox[{
                    RowBox[{"Values", "[", "clocks", "]"}], ",", 
                    RowBox[{"_", "?", "NumericQ"}]}], "]"}]}], "]"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"bgColor", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{"isFailed", ",", 
                    RowBox[{"GrayLevel", "[", 
                    RowBox[{"0.7", ",", "0.4"}], "]"}], ",", 
                    RowBox[{"clockVal", "===", "\[Infinity]"}], ",", "White", 
                    ",", "True", ",", 
                    RowBox[{"palette", "[", 
                    RowBox[{"Rescale", "[", 
                    RowBox[{"clockVal", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "maxClock"}], "}"}]}], "]"}], "]"}]}], 
                    "]"}]}], ",", 
                    RowBox[{"textColor", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{"isFailed", ",", 
                    RowBox[{"GrayLevel", "[", "0.4", "]"}], ",", 
                    RowBox[{"clockVal", "===", "\[Infinity]"}], ",", "Black", 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ColorConvert", "[", 
                    RowBox[{
                    RowBox[{"palette", "[", 
                    RowBox[{"Rescale", "[", 
                    RowBox[{"clockVal", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "maxClock"}], "}"}]}], "]"}], "]"}], 
                    ",", "\"\<Grayscale\>\""}], "]"}], "\[LeftDoubleBracket]",
                     "1", "\[RightDoubleBracket]"}], ">", ".5"}], ",", 
                    "Black", ",", "True", ",", "White"}], "]"}]}], ",", 
                    RowBox[{"label", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"clockVal", "===", "\[Infinity]"}], ",", 
                    "\"\<\[Infinity]\>\"", ",", "clockVal"}], "]"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"EventHandler", "[", 
                    RowBox[{
                    RowBox[{"GraphicsGroup", "[", 
                    RowBox[{"{", 
                    RowBox[{"bgColor", ",", 
                    RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
                    RowBox[{"Disk", "[", 
                    RowBox[{"pt", ",", ".3"}], "]"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "label", ",", "11", ",", "Bold", ",", "textColor"}], 
                    "]"}], ",", "pt"}], "]"}]}], "}"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<MouseClicked\>\"", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"failedQ", "[", "v", "]"}], "=", 
                    RowBox[{"!", 
                    RowBox[{"failedQ", "[", "v", "]"}]}]}], ")"}]}], "}"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}]}], "]"}], "]"}], "]"}],
            ",", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<Coordinator:\>\"", ",", 
                 RowBox[{"PopupMenu", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"root", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"root", "=", "#1"}], ";", 
                    RowBox[{"clocks", "=", 
                    RowBox[{"AssociationThread", "[", 
                    RowBox[{"coords", "\[Rule]", "\[Infinity]"}], "]"}]}], 
                    ";", 
                    RowBox[{
                    RowBox[{"clocks", "[", "#1", "]"}], "=", "0"}]}], ")"}], 
                    "&"}]}], "]"}], ",", "coords"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<Step:\>\"", ",", 
                 RowBox[{"Button", "[", 
                  RowBox[{"\"\<\:25ba Step\>\"", ",", 
                   RowBox[{"step", "[", "]"}], ",", 
                   RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<Auto-Run:\>\"", ",", 
                 RowBox[{"Checkbox", "[", 
                  RowBox[{"Dynamic", "[", "autoRun", "]"}], "]"}], ",", 
                 RowBox[{"Spacer", "[", "10", "]"}], ",", 
                 RowBox[{"SetterBar", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "autoRun", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"True", "\[Rule]", "\"\<Run\>\""}], ",", 
                    RowBox[{"False", "\[Rule]", "\"\<Stop\>\""}]}], "}"}]}], 
                  "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<Rebuild:\>\"", ",", 
                 RowBox[{"Button", "[", 
                  RowBox[{"\"\<Reset All\>\"", ",", 
                   RowBox[{"rebuild", "[", "]"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<Radius r:\>\"", ",", 
                 RowBox[{"Slider", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"r", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"r", "=", 
                    RowBox[{"Round", "[", "#1", "]"}]}], ";", 
                    RowBox[{"rebuild", "[", "]"}]}], ")"}], "&"}]}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "5", ",", "1"}], "}"}]}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<Max Delay:\>\"", ",", 
                 RowBox[{"Slider", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", 
                    RowBox[{"maxDel", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"maxDel", "=", 
                    RowBox[{"Round", "[", "#1", "]"}]}], ";", 
                    RowBox[{"rebuild", "[", "]"}]}], ")"}], "&"}]}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "8", ",", "1"}], "}"}]}], "]"}]}], 
                "}"}]}], "}"}], ",", 
             RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
             RowBox[{"Spacings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"1", ",", ".5"}], "}"}]}]}], "]"}]}], "}"}], ",", 
         RowBox[{"Spacings", "\[Rule]", "1"}]}], "]"}], "]"}]}]}], "]"}]}], 
  "]"}]}], "Code",
 CellChangeTimes->{{3.962076060864258*^9, 3.962076063408298*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"8e3696f5-bcbf-43ca-b573-df7c60f6588a"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`r$$ = 3, $CellContext`maxDel$$ = 
  3, $CellContext`autoRun$$ = False, $CellContext`lattice$$ = <|
  "Coords" -> {{-3, 0}, {-3, 1}, {-3, 2}, {-3, 3}, {-2, -1}, {-2, 0}, {-2, 
    1}, {-2, 2}, {-2, 3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {-1, 
    3}, {0, -3}, {0, -2}, {0, -1}, {0, 0}, {0, 1}, {0, 2}, {0, 3}, {1, -3}, {
    1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {2, -3}, {2, -2}, {2, -1}, {2, 
    0}, {2, 1}, {3, -3}, {3, -2}, {3, -1}, {3, 0}}, 
   "Points" -> {{3 3^Rational[1, 2], 3}, {2 3^Rational[1, 2], 4}, {
     3^Rational[1, 2], 5}, {0, 6}, {3 3^Rational[1, 2], 1}, {
     2 3^Rational[1, 2], 2}, {3^Rational[1, 2], 3}, {0, 
     4}, {-3^Rational[1, 2], 5}, {3 3^Rational[1, 2], -1}, {
     2 3^Rational[1, 2], 0}, {3^Rational[1, 2], 1}, {0, 
     2}, {-3^Rational[1, 2], 3}, {(-2) 3^Rational[1, 2], 4}, {
     3 3^Rational[1, 2], -3}, {2 3^Rational[1, 2], -2}, {
     3^Rational[1, 2], -1}, {0, 
     0}, {-3^Rational[1, 2], 1}, {(-2) 3^Rational[1, 2], 2}, {(-3) 
      3^Rational[1, 2], 3}, {2 3^Rational[1, 2], -4}, {
     3^Rational[1, 2], -3}, {
     0, -2}, {-3^Rational[1, 2], -1}, {(-2) 3^Rational[1, 2], 0}, {(-3) 
      3^Rational[1, 2], 1}, {3^Rational[1, 2], -5}, {
     0, -4}, {-3^Rational[1, 2], -3}, {(-2) 3^Rational[1, 2], -2}, {(-3) 
      3^Rational[1, 2], -1}, {
     0, -6}, {-3^Rational[1, 2], -5}, {(-2) 3^Rational[1, 2], -4}, {(-3) 
      3^Rational[1, 2], -3}}|>, $CellContext`coords$$ = {{-3, 0}, {-3, 
  1}, {-3, 2}, {-3, 3}, {-2, -1}, {-2, 0}, {-2, 1}, {-2, 2}, {-2, 
  3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {-1, 3}, {0, -3}, {
  0, -2}, {0, -1}, {0, 0}, {0, 1}, {0, 2}, {0, 3}, {1, -3}, {1, -2}, {
  1, -1}, {1, 0}, {1, 1}, {1, 2}, {2, -3}, {2, -2}, {2, -1}, {2, 0}, {2, 1}, {
  3, -3}, {3, -2}, {3, -1}, {3, 
  0}}, $CellContext`pts$$ = {{3 3^Rational[1, 2], 3}, {
   2 3^Rational[1, 2], 4}, {3^Rational[1, 2], 5}, {0, 6}, {
   3 3^Rational[1, 2], 1}, {2 3^Rational[1, 2], 2}, {3^Rational[1, 2], 3}, {0,
    4}, {-3^Rational[1, 2], 5}, {3 3^Rational[1, 2], -1}, {
   2 3^Rational[1, 2], 0}, {3^Rational[1, 2], 1}, {0, 
   2}, {-3^Rational[1, 2], 3}, {(-2) 3^Rational[1, 2], 4}, {
   3 3^Rational[1, 2], -3}, {2 3^Rational[1, 2], -2}, {
   3^Rational[1, 2], -1}, {0, 
   0}, {-3^Rational[1, 2], 1}, {(-2) 3^Rational[1, 2], 2}, {(-3) 
    3^Rational[1, 2], 3}, {2 3^Rational[1, 2], -4}, {3^Rational[1, 2], -3}, {
   0, -2}, {-3^Rational[1, 2], -1}, {(-2) 3^Rational[1, 2], 0}, {(-3) 
    3^Rational[1, 2], 1}, {3^Rational[1, 2], -5}, {
   0, -4}, {-3^Rational[1, 2], -3}, {(-2) 3^Rational[1, 2], -2}, {(-3) 
    3^Rational[1, 2], -1}, {
   0, -6}, {-3^Rational[1, 2], -5}, {(-2) 3^Rational[1, 2], -4}, {(-3) 
    3^Rational[1, 2], -3}}, $CellContext`g$$ = 
  Graph[{{-3, 0}, {-3, 1}, {-3, 2}, {-3, 3}, {-2, -1}, {-2, 0}, {-2, 1}, {-2, 
   2}, {-2, 3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {-1, 3}, {
   0, -3}, {0, -2}, {0, -1}, {0, 0}, {0, 1}, {0, 2}, {0, 3}, {1, -3}, {
   1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {2, -3}, {2, -2}, {2, -1}, {2, 
   0}, {2, 1}, {3, -3}, {3, -2}, {3, -1}, {3, 0}}, {
   Null, {{1, 6}, {1, 2}, {1, 5}, {2, 7}, {2, 3}, {2, 6}, {3, 8}, {3, 4}, {3, 
    7}, {4, 9}, {4, 8}, {5, 11}, {5, 6}, {5, 10}, {6, 12}, {6, 7}, {6, 11}, {
    7, 13}, {7, 8}, {7, 12}, {8, 14}, {8, 9}, {8, 13}, {9, 15}, {9, 14}, {10, 
    17}, {10, 11}, {10, 16}, {11, 18}, {11, 12}, {11, 17}, {12, 19}, {12, 
    13}, {12, 18}, {13, 20}, {13, 14}, {13, 19}, {14, 21}, {14, 15}, {14, 
    20}, {15, 22}, {15, 21}, {16, 23}, {16, 17}, {17, 24}, {17, 18}, {17, 
    23}, {18, 25}, {18, 19}, {18, 24}, {19, 26}, {19, 20}, {19, 25}, {20, 
    27}, {20, 21}, {20, 26}, {21, 28}, {21, 22}, {21, 27}, {22, 28}, {23, 
    29}, {23, 24}, {24, 30}, {24, 25}, {24, 29}, {25, 31}, {25, 26}, {25, 
    30}, {26, 32}, {26, 27}, {26, 31}, {27, 33}, {27, 28}, {27, 32}, {28, 
    33}, {29, 34}, {29, 30}, {30, 35}, {30, 31}, {30, 34}, {31, 36}, {31, 
    32}, {31, 35}, {32, 37}, {32, 33}, {32, 36}, {33, 37}, {34, 35}, {35, 
    36}, {36, 37}}}], $CellContext`delays$$ = <|
  UndirectedEdge[{-3, 0}, {-2, 0}] -> 2, UndirectedEdge[{-3, 0}, {-3, 1}] -> 
   3, UndirectedEdge[{-3, 0}, {-2, -1}] -> 1, 
   UndirectedEdge[{-3, 1}, {-2, 1}] -> 1, UndirectedEdge[{-3, 1}, {-3, 2}] -> 
   1, UndirectedEdge[{-3, 1}, {-2, 0}] -> 2, UndirectedEdge[{-3, 2}, {-2, 2}] -> 
   2, UndirectedEdge[{-3, 2}, {-3, 3}] -> 3, UndirectedEdge[{-3, 2}, {-2, 1}] -> 
   2, UndirectedEdge[{-3, 3}, {-2, 3}] -> 1, UndirectedEdge[{-3, 3}, {-2, 2}] -> 
   3, UndirectedEdge[{-2, -1}, {-1, -1}] -> 1, 
   UndirectedEdge[{-2, -1}, {-2, 0}] -> 1, UndirectedEdge[{-2, -1}, {-1, -2}] -> 
   2, UndirectedEdge[{-2, 0}, {-1, 0}] -> 2, UndirectedEdge[{-2, 0}, {-2, 1}] -> 
   3, UndirectedEdge[{-2, 0}, {-1, -1}] -> 1, 
   UndirectedEdge[{-2, 1}, {-1, 1}] -> 3, UndirectedEdge[{-2, 1}, {-2, 2}] -> 
   1, UndirectedEdge[{-2, 1}, {-1, 0}] -> 2, UndirectedEdge[{-2, 2}, {-1, 2}] -> 
   1, UndirectedEdge[{-2, 2}, {-2, 3}] -> 3, UndirectedEdge[{-2, 2}, {-1, 1}] -> 
   2, UndirectedEdge[{-2, 3}, {-1, 3}] -> 3, UndirectedEdge[{-2, 3}, {-1, 2}] -> 
   3, UndirectedEdge[{-1, -2}, {0, -2}] -> 2, 
   UndirectedEdge[{-1, -2}, {-1, -1}] -> 2, UndirectedEdge[{-1, -2}, {0, -3}] -> 
   3, UndirectedEdge[{-1, -1}, {0, -1}] -> 3, 
   UndirectedEdge[{-1, -1}, {-1, 0}] -> 1, UndirectedEdge[{-1, -1}, {0, -2}] -> 
   3, UndirectedEdge[{-1, 0}, {0, 0}] -> 1, UndirectedEdge[{-1, 0}, {-1, 1}] -> 
   3, UndirectedEdge[{-1, 0}, {0, -1}] -> 2, UndirectedEdge[{-1, 1}, {0, 1}] -> 
   3, UndirectedEdge[{-1, 1}, {-1, 2}] -> 1, UndirectedEdge[{-1, 1}, {0, 0}] -> 
   3, UndirectedEdge[{-1, 2}, {0, 2}] -> 3, UndirectedEdge[{-1, 2}, {-1, 3}] -> 
   3, UndirectedEdge[{-1, 2}, {0, 1}] -> 2, UndirectedEdge[{-1, 3}, {0, 3}] -> 
   2, UndirectedEdge[{-1, 3}, {0, 2}] -> 1, UndirectedEdge[{0, -3}, {1, -3}] -> 
   2, UndirectedEdge[{0, -3}, {0, -2}] -> 1, UndirectedEdge[{0, -2}, {1, -2}] -> 
   2, UndirectedEdge[{0, -2}, {0, -1}] -> 2, UndirectedEdge[{0, -2}, {1, -3}] -> 
   1, UndirectedEdge[{0, -1}, {1, -1}] -> 1, UndirectedEdge[{0, -1}, {0, 0}] -> 
   3, UndirectedEdge[{0, -1}, {1, -2}] -> 3, UndirectedEdge[{0, 0}, {1, 0}] -> 
   3, UndirectedEdge[{0, 0}, {0, 1}] -> 3, UndirectedEdge[{0, 0}, {1, -1}] -> 
   1, UndirectedEdge[{0, 1}, {1, 1}] -> 1, UndirectedEdge[{0, 1}, {0, 2}] -> 
   1, UndirectedEdge[{0, 1}, {1, 0}] -> 3, UndirectedEdge[{0, 2}, {1, 2}] -> 
   3, UndirectedEdge[{0, 2}, {0, 3}] -> 1, UndirectedEdge[{0, 2}, {1, 1}] -> 
   1, UndirectedEdge[{0, 3}, {1, 2}] -> 3, UndirectedEdge[{1, -3}, {2, -3}] -> 
   3, UndirectedEdge[{1, -3}, {1, -2}] -> 3, UndirectedEdge[{1, -2}, {2, -2}] -> 
   1, UndirectedEdge[{1, -2}, {1, -1}] -> 3, UndirectedEdge[{1, -2}, {2, -3}] -> 
   1, UndirectedEdge[{1, -1}, {2, -1}] -> 1, UndirectedEdge[{1, -1}, {1, 0}] -> 
   3, UndirectedEdge[{1, -1}, {2, -2}] -> 1, UndirectedEdge[{1, 0}, {2, 0}] -> 
   1, UndirectedEdge[{1, 0}, {1, 1}] -> 1, UndirectedEdge[{1, 0}, {2, -1}] -> 
   1, UndirectedEdge[{1, 1}, {2, 1}] -> 2, UndirectedEdge[{1, 1}, {1, 2}] -> 
   2, UndirectedEdge[{1, 1}, {2, 0}] -> 3, UndirectedEdge[{1, 2}, {2, 1}] -> 
   3, UndirectedEdge[{2, -3}, {3, -3}] -> 2, UndirectedEdge[{2, -3}, {2, -2}] -> 
   1, UndirectedEdge[{2, -2}, {3, -2}] -> 2, UndirectedEdge[{2, -2}, {2, -1}] -> 
   3, UndirectedEdge[{2, -2}, {3, -3}] -> 1, UndirectedEdge[{2, -1}, {3, -1}] -> 
   1, UndirectedEdge[{2, -1}, {2, 0}] -> 2, UndirectedEdge[{2, -1}, {3, -2}] -> 
   1, UndirectedEdge[{2, 0}, {3, 0}] -> 1, UndirectedEdge[{2, 0}, {2, 1}] -> 
   2, UndirectedEdge[{2, 0}, {3, -1}] -> 3, UndirectedEdge[{2, 1}, {3, 0}] -> 
   2, UndirectedEdge[{3, -3}, {3, -2}] -> 2, UndirectedEdge[{3, -2}, {3, -1}] -> 
   2, UndirectedEdge[{3, -1}, {3, 0}] -> 
   1|>, $CellContext`clocks$$ = <|{-3, 0} -> 0, {-3, 1} -> 
   DirectedInfinity[1], {-3, 2} -> DirectedInfinity[1], {-3, 3} -> 
   DirectedInfinity[1], {-2, -1} -> DirectedInfinity[1], {-2, 0} -> 
   DirectedInfinity[1], {-2, 1} -> DirectedInfinity[1], {-2, 2} -> 
   DirectedInfinity[1], {-2, 3} -> DirectedInfinity[1], {-1, -2} -> 
   DirectedInfinity[1], {-1, -1} -> DirectedInfinity[1], {-1, 0} -> 
   DirectedInfinity[1], {-1, 1} -> DirectedInfinity[1], {-1, 2} -> 
   DirectedInfinity[1], {-1, 3} -> DirectedInfinity[1], {0, -3} -> 
   DirectedInfinity[1], {0, -2} -> DirectedInfinity[1], {0, -1} -> 
   DirectedInfinity[1], {0, 0} -> DirectedInfinity[1], {0, 1} -> 
   DirectedInfinity[1], {0, 2} -> DirectedInfinity[1], {0, 3} -> 
   DirectedInfinity[1], {1, -3} -> DirectedInfinity[1], {1, -2} -> 
   DirectedInfinity[1], {1, -1} -> DirectedInfinity[1], {1, 0} -> 
   DirectedInfinity[1], {1, 1} -> DirectedInfinity[1], {1, 2} -> 
   DirectedInfinity[1], {2, -3} -> DirectedInfinity[1], {2, -2} -> 
   DirectedInfinity[1], {2, -1} -> DirectedInfinity[1], {2, 0} -> 
   DirectedInfinity[1], {2, 1} -> DirectedInfinity[1], {3, -3} -> 
   DirectedInfinity[1], {3, -2} -> DirectedInfinity[1], {3, -1} -> 
   DirectedInfinity[1], {3, 0} -> 
   DirectedInfinity[1]|>, $CellContext`failedQ$$ = <|{-3, 0} -> 
   False, {-3, 1} -> False, {-3, 2} -> False, {-3, 3} -> False, {-2, -1} -> 
   False, {-2, 0} -> False, {-2, 1} -> False, {-2, 2} -> False, {-2, 3} -> 
   False, {-1, -2} -> False, {-1, -1} -> False, {-1, 0} -> False, {-1, 1} -> 
   False, {-1, 2} -> False, {-1, 3} -> False, {0, -3} -> False, {0, -2} -> 
   False, {0, -1} -> False, {0, 0} -> False, {0, 1} -> False, {0, 2} -> 
   False, {0, 3} -> False, {1, -3} -> False, {1, -2} -> False, {1, -1} -> 
   False, {1, 0} -> False, {1, 1} -> False, {1, 2} -> False, {2, -3} -> 
   False, {2, -2} -> False, {2, -1} -> False, {2, 0} -> False, {2, 1} -> 
   False, {3, -3} -> False, {3, -2} -> False, {3, -1} -> False, {3, 0} -> 
   False|>, $CellContext`root$$ = {-3, 0}, $CellContext`rebuild$$ = 
  Null, $CellContext`step$$ = <|{-3, 0} -> Min[0, 
     Missing["KeyAbsent", 
      UndirectedEdge[{-3, 0}, {-3, 0}]]], {-3, 1} -> 
   DirectedInfinity[1], {-3, 2} -> DirectedInfinity[1], {-3, 3} -> 
   DirectedInfinity[1], {-2, -1} -> DirectedInfinity[1], {-2, 0} -> 
   DirectedInfinity[1], {-2, 1} -> DirectedInfinity[1], {-2, 2} -> 
   DirectedInfinity[1], {-2, 3} -> DirectedInfinity[1], {-1, -2} -> 
   DirectedInfinity[1], {-1, -1} -> DirectedInfinity[1], {-1, 0} -> 
   DirectedInfinity[1], {-1, 1} -> DirectedInfinity[1], {-1, 2} -> 
   DirectedInfinity[1], {-1, 3} -> DirectedInfinity[1], {0, -3} -> 
   DirectedInfinity[1], {0, -2} -> DirectedInfinity[1], {0, -1} -> 
   DirectedInfinity[1], {0, 0} -> DirectedInfinity[1], {0, 1} -> 
   DirectedInfinity[1], {0, 2} -> DirectedInfinity[1], {0, 3} -> 
   DirectedInfinity[1], {1, -3} -> DirectedInfinity[1], {1, -2} -> 
   DirectedInfinity[1], {1, -1} -> DirectedInfinity[1], {1, 0} -> 
   DirectedInfinity[1], {1, 1} -> DirectedInfinity[1], {1, 2} -> 
   DirectedInfinity[1], {2, -3} -> DirectedInfinity[1], {2, -2} -> 
   DirectedInfinity[1], {2, -1} -> DirectedInfinity[1], {2, 0} -> 
   DirectedInfinity[1], {2, 1} -> DirectedInfinity[1], {3, -3} -> 
   DirectedInfinity[1], {3, -2} -> DirectedInfinity[1], {3, -1} -> 
   DirectedInfinity[1], {3, 0} -> DirectedInfinity[1]|>}, 
  PanelBox[
   TagBox[GridBox[{
      {
       DynamicBox[ToBoxes[
         Show[
          
          Graph[$CellContext`g$$, VertexCoordinates -> 
           Thread[$CellContext`coords$$ -> $CellContext`pts$$], EdgeLabels -> 
           Map[Tooltip, 
             EdgeList[$CellContext`g$$]], ImageSize -> 550, EdgeStyle -> 
           GrayLevel[0.5], VertexShapeFunction -> 
           Function[{$CellContext`pt$, $CellContext`v$, $CellContext`size$}, 
             
             With[{$CellContext`isFailed$ = \
$CellContext`failedQ$$[$CellContext`v$], $CellContext`clockVal$ = \
$CellContext`clocks$$[$CellContext`v$], $CellContext`maxClock$ = Max[1, 
                 Cases[
                  Values[$CellContext`clocks$$], 
                  PatternTest[
                   Blank[], NumericQ]]]}, 
              With[{$CellContext`bgColor$ = Which[$CellContext`isFailed$, 
                  GrayLevel[0.7, 0.4], $CellContext`clockVal$ === Infinity, 
                  White, True, 
                  ColorDataFunction[
                  "TemperatureMap", "Gradients", {0, 1}, Blend[
                   "TemperatureMap", #]& ][
                   
                   Rescale[$CellContext`clockVal$, {
                    0, $CellContext`maxClock$}]]], $CellContext`textColor$ = 
                Which[$CellContext`isFailed$, 
                  GrayLevel[0.4], $CellContext`clockVal$ === Infinity, Black, 
                  Part[
                    ColorConvert[
                    ColorDataFunction[
                    "TemperatureMap", "Gradients", {0, 1}, Blend[
                    "TemperatureMap", #]& ][
                    
                    Rescale[$CellContext`clockVal$, {
                    0, $CellContext`maxClock$}]], "Grayscale"], 1] > 0.5, 
                  Black, True, White], $CellContext`label$ = 
                If[$CellContext`clockVal$ === Infinity, 
                  "\[Infinity]", $CellContext`clockVal$]}, 
               EventHandler[
                GraphicsGroup[{$CellContext`bgColor$, 
                  EdgeForm[Black], 
                  Disk[$CellContext`pt$, 0.3], 
                  Text[
                   
                   Style[$CellContext`label$, 11, 
                    Bold, $CellContext`textColor$], $CellContext`pt$]}], {
                "MouseClicked" :> ($CellContext`failedQ$$[$CellContext`v$] = 
                  Not[
                    $CellContext`failedQ$$[$CellContext`v$]])}]]]]]], 
         StandardForm],
        ImageSizeCache->{688., {376., 382.}}]},
      {
       TagBox[GridBox[{
          {"\<\"Coordinator:\"\>", 
           
           PopupMenuBox[
            Dynamic[$CellContext`root$$, ($CellContext`root$$ = #; \
$CellContext`clocks$$ = 
              AssociationThread[$CellContext`coords$$ -> 
                Infinity]; $CellContext`clocks$$[#] = 0)& ], {{-3, 0}->
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "0"}], "}"}], {-3, 1}->
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "1"}], "}"}], {-3, 2}->
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "2"}], "}"}], {-3, 3}->
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "3"}], "}"}], {-2, -1}->
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", 
              RowBox[{"-", "1"}]}], "}"}], {-2, 0}->
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "0"}], "}"}], {-2, 1}->
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "1"}], "}"}], {-2, 2}->
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "2"}], "}"}], {-2, 3}->
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "3"}], "}"}], {-1, -2}->
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"-", "2"}]}], "}"}], {-1, -1}->
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"-", "1"}]}], "}"}], {-1, 0}->
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0"}], "}"}], {-1, 1}->
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], {-1, 2}->
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "2"}], "}"}], {-1, 3}->
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "3"}], "}"}], {0, -3}->
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", "3"}]}], "}"}], {0, -2}->
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", "2"}]}], "}"}], {0, -1}->
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", "1"}]}], "}"}], {0, 0}->
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], {0, 1}->
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], {0, 2}->
            RowBox[{"{", 
             RowBox[{"0", ",", "2"}], "}"}], {0, 3}->
            RowBox[{"{", 
             RowBox[{"0", ",", "3"}], "}"}], {1, -3}->
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "3"}]}], "}"}], {1, -2}->
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "2"}]}], "}"}], {1, -1}->
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}]}], "}"}], {1, 0}->
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], {1, 1}->
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}], {1, 2}->
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], {2, -3}->
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "3"}]}], "}"}], {2, -2}->
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "2"}]}], "}"}], {2, -1}->
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "1"}]}], "}"}], {2, 0}->
            RowBox[{"{", 
             RowBox[{"2", ",", "0"}], "}"}], {2, 1}->
            RowBox[{"{", 
             RowBox[{"2", ",", "1"}], "}"}], {3, -3}->
            RowBox[{"{", 
             RowBox[{"3", ",", 
              RowBox[{"-", "3"}]}], "}"}], {3, -2}->
            RowBox[{"{", 
             RowBox[{"3", ",", 
              RowBox[{"-", "2"}]}], "}"}], {3, -1}->
            RowBox[{"{", 
             RowBox[{"3", ",", 
              RowBox[{"-", "1"}]}], "}"}], {3, 0}->
            RowBox[{"{", 
             RowBox[{"3", ",", "0"}], "}"}]}], "", ""},
          {"\<\"Step:\"\>", 
           ButtonBox["\<\"\:25ba Step\"\>",
            Appearance->Automatic,
            ButtonFunction:>$CellContext`step$$[],
            Evaluator->Automatic,
            ImageSize->Medium,
            Method->"Queued"], "", ""},
          {"\<\"Auto-Run:\"\>", 
           CheckboxBox[Dynamic[$CellContext`autoRun$$]], 
           TemplateBox[{10},
            "Spacer1"], 
           InterpretationBox[
            StyleBox[GridBox[{
               {
                
                SetterBox[Dynamic[$CellContext`autoRun$$], {
                 True}, "\<\"Run\"\>"], 
                
                SetterBox[Dynamic[$CellContext`autoRun$$], {
                 False}, "\<\"Stop\"\>"]}
              },
              BaselinePosition->{1, 1},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}}],
             Deployed->True],
            SetterBar[
             Dynamic[$CellContext`autoRun$$], {
             True -> "Run", False -> "Stop"}]]},
          {"\<\"Rebuild:\"\>", 
           ButtonBox["\<\"Reset All\"\>",
            Appearance->Automatic,
            ButtonFunction:>$CellContext`rebuild$$[],
            Evaluator->Automatic,
            ImageSize->Medium,
            Method->"Preemptive"], "", ""},
          {"\<\"Radius r:\"\>", 
           
           SliderBox[
            Dynamic[$CellContext`r$$, ($CellContext`r$$ = 
              Round[#]; $CellContext`rebuild$$[])& ], {1, 5, 1}], "", ""},
          {"\<\"Max Delay:\"\>", 
           
           SliderBox[
            Dynamic[$CellContext`maxDel$$, ($CellContext`maxDel$$ = 
              Round[#]; $CellContext`rebuild$$[])& ], {1, 8, 1}], "", ""}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{0.5}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
    "Column"]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.962076055078969*^9, 3.9620760670896997`*^9}, {
  3.962077869996931*^9, 3.962077897116118*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"d38b26ae-5d88-47ad-a493-5f8105f63e55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hexLattice", "[", 
    RowBox[{"r_Integer", "?", "Positive"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"basis", ",", "coords"}], "}"}], ",", 
     RowBox[{
      RowBox[{"basis", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SqrtBox["3"], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            SqrtBox["3"], "2"], ",", "1.5"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"coords", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"-", "r"}], ",", "r"}], "]"}], ",", "2"}], "]"}], ",", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"i", "=", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
               ",", 
              RowBox[{"j", "=", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "i", "]"}], "\[LessEqual]", "r"}], "&&", 
             RowBox[{
              RowBox[{"Abs", "[", "j", "]"}], "\[LessEqual]", "r"}], "&&", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"i", "-", "j"}], "]"}], "\[LessEqual]", "r"}]}]}], 
           "]"}], "&"}]}], "]"}]}], ";", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{"\"\<Coords\>\"", "\[Rule]", "coords"}], ",", 
        RowBox[{"\"\<Points\>\"", "\[Rule]", 
         RowBox[{"coords", ".", "basis"}]}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hexGraphFromCoords", "[", "coords_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nbrs", ",", "edgePairs"}], "}"}], ",", 
     RowBox[{
      RowBox[{"nbrs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"edgePairs", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"c", "=", "coord"}], "}"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"cand", "=", 
                    RowBox[{"c", "+", "#1"}]}], "}"}], ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"coords", ",", "cand"}], "]"}], ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"{", 
                    RowBox[{"c", ",", "cand"}], "}"}], "]"}], ",", 
                    "Nothing"}], "]"}]}], "]"}], "&"}], ")"}], "/@", 
               "nbrs"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"coord", ",", "coords"}], "}"}]}], "]"}], ",", "1"}], 
         "]"}], "]"}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{"coords", ",", 
        RowBox[{"UndirectedEdge", "@@@", "edgePairs"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "=", "3"}], ",", 
     RowBox[{"delays", "=", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{"\"\<Datacenter (1 km)\>\"", "\[Rule]", "3.3*^-6"}], ",", 
        RowBox[{"\"\<Earth <-> GEO Sat (36,000 km)\>\"", "\[Rule]", "0.12"}], 
        ",", 
        RowBox[{"\"\<Earth <-> Moon (384,000 km)\>\"", "\[Rule]", "1.28"}], 
        ",", 
        RowBox[{"\"\<Earth <-> Mars (56 Gm)\>\"", "\[Rule]", "187."}], ",", 
        RowBox[{
        "\"\<Earth <-> Proxima Centauri (4.24 ly)\>\"", "\[Rule]", 
         "1.338*^8"}]}], "]"}]}], ",", "lattice", ",", "coords", ",", "pts", 
     ",", "g", ",", "root", ",", "scenario", ",", "rebuild"}], "}"}], ",", 
   RowBox[{
    RowBox[{"rebuild", ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"lattice", "=", 
        RowBox[{"hexLattice", "[", "r", "]"}]}], ";", 
       RowBox[{"coords", "=", 
        RowBox[{"lattice", "[", "\"\<Coords\>\"", "]"}]}], ";", 
       RowBox[{"pts", "=", 
        RowBox[{"lattice", "[", "\"\<Points\>\"", "]"}]}], ";", 
       RowBox[{"g", "=", 
        RowBox[{"hexGraphFromCoords", "[", "coords", "]"}]}], ";", 
       RowBox[{"root", "=", 
        RowBox[{"First", "[", "coords", "]"}]}], ";"}], ")"}]}], ";", 
    RowBox[{"rebuild", "[", "]"}], ";", 
    RowBox[{"scenario", "=", 
     RowBox[{
      RowBox[{"Keys", "[", "delays", "]"}], "\[LeftDoubleBracket]", "1", 
      "\[RightDoubleBracket]"}]}], ";", 
    RowBox[{"Panel", "[", 
     RowBox[{"Column", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Clock-Coherence Explorer\>\"", ",", "18", ",", "Bold"}], "]"}],
          ",", 
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Propagation Model:\>\"", ",", "Bold"}], "]"}], 
               ",", 
               RowBox[{"PopupMenu", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", "scenario", "]"}], ",", 
                 RowBox[{"Keys", "[", "delays", "]"}]}], "]"}]}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Coordinator (Time Source):\>\"", ",", "Bold"}], 
                "]"}], ",", 
               RowBox[{"Dynamic", "[", "root", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Radius:\>\"", ",", "Bold"}], "]"}], ",", 
               RowBox[{"Slider", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"r", ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"r", "=", 
                    RowBox[{"Round", "[", "#1", "]"}]}], ";", 
                    RowBox[{"rebuild", "[", "]"}]}], ")"}], "&"}]}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "5", ",", "1"}], "}"}]}], "]"}]}], 
              "}"}]}], "}"}], ",", 
           RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "distances", ",", "offsets", ",", "maxOffset", ",", "colors", 
              ",", "vcoords"}], "}"}], ",", 
            RowBox[{
             RowBox[{"distances", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"GraphDistance", "[", 
                  RowBox[{"g", ",", "root", ",", "#1"}], "]"}], "&"}], ")"}], 
               "/@", "coords"}]}], ";", 
             RowBox[{"offsets", "=", 
              RowBox[{"N", "[", 
               RowBox[{"distances", " ", 
                RowBox[{"delays", "[", "scenario", "]"}]}], "]"}]}], ";", 
             RowBox[{"maxOffset", "=", 
              RowBox[{"Max", "[", "offsets", "]"}]}], ";", 
             RowBox[{"colors", "=", 
              RowBox[{
               RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "/@", 
               RowBox[{"Rescale", "[", 
                RowBox[{"offsets", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "maxOffset"}], "}"}]}], "]"}]}]}], ";", 
             RowBox[{"vcoords", "=", 
              RowBox[{"AssociationThread", "[", 
               RowBox[{"coords", ",", "pts"}], "]"}]}], ";", 
             RowBox[{"Column", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Graphics", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"GrayLevel", "[", "0.5", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.5", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"vcoords", "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"First", "[", "#1", "]"}], ",", 
                    RowBox[{"Last", "[", "#1", "]"}]}], "}"}]}], "]"}], "&"}],
                     ")"}], "/@", 
                    RowBox[{"EdgeList", "[", "g", "]"}]}]}], "}"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"node", "=", 
                    RowBox[{
                    "coords", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"pt", "=", 
                    RowBox[{
                    "pts", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"dist", "=", 
                    RowBox[{
                    "distances", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"offset", "=", 
                    RowBox[{
                    "offsets", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"color", "=", 
                    RowBox[{
                    "colors", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"root", "===", "node"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Black", ",", "Thick"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Black", ",", "Thin"}], "}"}]}], "]"}], "]"}], 
                    ",", "color", ",", 
                    RowBox[{"EventHandler", "[", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    RowBox[{"RegularPolygon", "[", 
                    RowBox[{"pt", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", "6"}], "]"}], ",", 
                    RowBox[{"Pane", "[", 
                    RowBox[{
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<Coord:\>\"", ",", "node"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Hops (h):\>\"", ",", "dist"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<\[CapitalDelta]t (s):\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"offset", ",", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "4"}], "}"}]}], "]"}]}], "}"}]}], "}"}],
                     ",", 
                    RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], ",", 
                    "150"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<MouseClicked\>\"", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{"root", "=", "node"}], ")"}]}], "}"}]}], "]"}]}], 
                    "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", 
                    RowBox[{"Length", "[", "coords", "]"}]}], "}"}]}], 
                    "]"}]}], "}"}], ",", 
                   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
                   RowBox[{"Background", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.95", "]"}]}]}], "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Worst-Case Time Skew (\[CapitalDelta]t_max): \>\"", 
                    ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"maxOffset", ",", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "4"}], "}"}]}], "]"}], ",", 
                    "\"\< s\>\""}], "}"}], "]"}], ",", "Bold", ",", "14", ",", 
                   RowBox[{"Darker", "[", "Red", "]"}]}], "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<Model: \[CapitalDelta]t = h \[Times] d  (h = \
hop-count, d = one-way delay)\>\"", ",", "Italic", ",", "Gray"}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
               RowBox[{"Spacings", "\[Rule]", "0.5"}]}], "]"}]}]}], "]"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
       RowBox[{"Spacings", "\[Rule]", "1"}]}], "]"}], "]"}]}]}], 
  "]"}]}], "Code",
 CellChangeTimes->{{3.9620766170968103`*^9, 3.962076628079296*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c5e4e1d5-8b9c-4981-a3c6-c97630ddfb7c"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`r$$ = 3, $CellContext`delays$$ = <|
  "Datacenter (1 km)" -> 3.3*^-6, "Earth <-> GEO Sat (36,000 km)" -> 0.12, 
   "Earth <-> Moon (384,000 km)" -> 1.28, "Earth <-> Mars (56 Gm)" -> 187., 
   "Earth <-> Proxima Centauri (4.24 ly)" -> 
   1.338*^8|>, $CellContext`lattice$$ = <|
  "Coords" -> {{-3, -3}, {-3, -2}, {-3, -1}, {-3, 
    0}, {-2, -3}, {-2, -2}, {-2, -1}, {-2, 0}, {-2, 
    1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {0, -3}, {
    0, -2}, {0, -1}, {0, 0}, {0, 1}, {0, 2}, {0, 3}, {1, -2}, {1, -1}, {1, 
    0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 0}, {2, 1}, {2, 2}, {2, 3}, {3, 
    0}, {3, 1}, {3, 2}, {3, 3}}, "Points" -> CompressedData["
1:eJxTTMoPSmViYGBQBWIQ7RCW7OqlK3+AAQyEDqzyiXhRtU0ayuc4IOrs273a
XgLK/7G/wdJJ784JESifgQFVXugAqjzHgVf65hd5ggTh+iHmc8P1Q9SzwOTt
UdXD3MMNNw9NPdS83/th5kH4r/fDzGNAARwOqPph5sP0cxxA07+fAQ1A5e1h
5kP126OZ7wA13wHN/gNo+vej6oeHhwOq+dwOMPOh4QM3H039flT1DAyo6n/Y
Q+MHbh40/tDME4HrR5WHuUcarh+afuD6AdtqmOc=
    "]|>, $CellContext`coords$$ = {{-3, -3}, {-3, -2}, {-3, -1}, {-3, 
  0}, {-2, -3}, {-2, -2}, {-2, -1}, {-2, 0}, {-2, 
  1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {0, -3}, {
  0, -2}, {0, -1}, {0, 0}, {0, 1}, {0, 2}, {0, 3}, {1, -2}, {1, -1}, {1, 0}, {
  1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 0}, {2, 1}, {2, 2}, {2, 3}, {3, 0}, {3, 
  1}, {3, 2}, {3, 3}}, $CellContext`pts$$ = CompressedData["
1:eJxTTMoPSmViYGBQBWIQ7RCW7OqlK3+AAQyEDqzyiXhRtU0ayuc4IOrs273a
XgLK/7G/wdJJ784JESifgQFVXugAqjzHgVf65hd5ggTh+iHmc8P1Q9SzwOTt
UdXD3MMNNw9NPdS83/th5kH4r/fDzGNAARwOqPph5sP0cxxA07+fAQ1A5e1h
5kP126OZ7wA13wHN/gNo+vej6oeHhwOq+dwOMPOh4QM3H039flT1DAyo6n/Y
Q+MHbh40/tDME4HrR5WHuUcarh+afuD6AdtqmOc=
  "], $CellContext`g$$ = 
  Graph[{{-3, -3}, {-3, -2}, {-3, -1}, {-3, 
   0}, {-2, -3}, {-2, -2}, {-2, -1}, {-2, 0}, {-2, 
   1}, {-1, -3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {0, -3}, {
   0, -2}, {0, -1}, {0, 0}, {0, 1}, {0, 2}, {0, 3}, {1, -2}, {1, -1}, {1, 
   0}, {1, 1}, {1, 2}, {1, 3}, {2, -1}, {2, 0}, {2, 1}, {2, 2}, {2, 3}, {3, 
   0}, {3, 1}, {3, 2}, {3, 3}}, {
   Null, {{1, 5}, {1, 2}, {2, 6}, {2, 3}, {2, 5}, {3, 7}, {3, 4}, {3, 6}, {4, 
    8}, {4, 7}, {5, 10}, {5, 6}, {6, 11}, {6, 7}, {6, 10}, {7, 12}, {7, 8}, {
    7, 11}, {8, 13}, {8, 9}, {8, 12}, {9, 14}, {9, 13}, {10, 16}, {10, 11}, {
    11, 17}, {11, 12}, {11, 16}, {12, 18}, {12, 13}, {12, 17}, {13, 19}, {13, 
    14}, {13, 18}, {14, 20}, {14, 15}, {14, 19}, {15, 21}, {15, 20}, {16, 
    17}, {17, 23}, {17, 18}, {18, 24}, {18, 19}, {18, 23}, {19, 25}, {19, 
    20}, {19, 24}, {20, 26}, {20, 21}, {20, 25}, {21, 27}, {21, 22}, {21, 
    26}, {22, 28}, {22, 27}, {23, 24}, {24, 29}, {24, 25}, {25, 30}, {25, 
    26}, {25, 29}, {26, 31}, {26, 27}, {26, 30}, {27, 32}, {27, 28}, {27, 
    31}, {28, 33}, {28, 32}, {29, 30}, {30, 34}, {30, 31}, {31, 35}, {31, 
    32}, {31, 34}, {32, 36}, {32, 33}, {32, 35}, {33, 37}, {33, 36}, {34, 
    35}, {35, 36}, {36, 
    37}}}], $CellContext`root$$ = {-3, -3}, $CellContext`scenario$$ = 
  "Datacenter (1 km)", $CellContext`rebuild$$ = Null}, 
  PanelBox[
   TagBox[GridBox[{
      {
       StyleBox["\<\"Clock-Coherence Explorer\"\>",
        StripOnInput->False,
        FontSize->18,
        FontWeight->Bold]},
      {
       TagBox[GridBox[{
          {
           StyleBox["\<\"Propagation Model:\"\>",
            StripOnInput->False,
            FontWeight->Bold], 
           
           PopupMenuBox[Dynamic[$CellContext`scenario$$], {
            "Datacenter (1 km)"->"\<\"Datacenter (1 km)\"\>", 
            "Earth <-> GEO Sat (36,000 km)"->"\<\"Earth <-> GEO Sat (36,000 \
km)\"\>", 
            "Earth <-> Moon (384,000 km)"->"\<\"Earth <-> Moon (384,000 km)\"\
\>", "Earth <-> Mars (56 Gm)"->"\<\"Earth <-> Mars (56 Gm)\"\>", 
            "Earth <-> Proxima Centauri (4.24 ly)"->"\<\"Earth <-> Proxima \
Centauri (4.24 ly)\"\>"}]},
          {
           StyleBox["\<\"Coordinator (Time Source):\"\>",
            StripOnInput->False,
            FontWeight->Bold], 
           DynamicBox[ToBoxes[$CellContext`root$$, StandardForm],
            ImageSizeCache->{54., {3., 10.}}]},
          {
           StyleBox["\<\"Radius:\"\>",
            StripOnInput->False,
            FontWeight->Bold], 
           
           SliderBox[
            Dynamic[$CellContext`r$$, ($CellContext`r$$ = 
              Round[#]; $CellContext`rebuild$$[])& ], {2, 5, 1}]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]},
      {
       DynamicBox[ToBoxes[
         Module[{$CellContext`distances$, $CellContext`offsets$, \
$CellContext`maxOffset$, $CellContext`colors$, $CellContext`vcoords$}, \
$CellContext`distances$ = 
           Map[GraphDistance[$CellContext`g$$, $CellContext`root$$, #]& , \
$CellContext`coords$$]; $CellContext`offsets$ = 
           N[$CellContext`distances$ \
$CellContext`delays$$[$CellContext`scenario$$]]; $CellContext`maxOffset$ = 
           Max[$CellContext`offsets$]; $CellContext`colors$ = Map[
             ColorData["TemperatureMap"], 
             
             Rescale[$CellContext`offsets$, {
              0, $CellContext`maxOffset$}]]; $CellContext`vcoords$ = 
           AssociationThread[$CellContext`coords$$, $CellContext`pts$$]; 
          Column[{
             Graphics[{{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Map[Line[
                  Map[$CellContext`vcoords$, {
                    First[#], 
                    Last[#]}]]& , 
                 EdgeList[$CellContext`g$$]]}, 
               Table[
                
                With[{$CellContext`node$ = 
                  Part[$CellContext`coords$$, $CellContext`k], \
$CellContext`pt$ = 
                  Part[$CellContext`pts$$, $CellContext`k], \
$CellContext`dist$ = 
                  Part[$CellContext`distances$, $CellContext`k], \
$CellContext`offset$ = 
                  Part[$CellContext`offsets$, $CellContext`k], \
$CellContext`color$ = Part[$CellContext`colors$, $CellContext`k]}, {
                  EdgeForm[
                   
                   If[$CellContext`root$$ === $CellContext`node$, {
                    Black, Thick}, {Black, Thin}]], $CellContext`color$, 
                  EventHandler[
                   Tooltip[
                    RegularPolygon[$CellContext`pt$, {1, 0}, 6], 
                    Pane[
                    
                    Grid[{{"Coord:", $CellContext`node$}, {
                    "Hops (h):", $CellContext`dist$}, {
                    "\[CapitalDelta]t (s):", 
                    NumberForm[$CellContext`offset$, {8, 4}]}}, Alignment -> 
                    Left], 150]], {
                   "MouseClicked" :> ($CellContext`root$$ = \
$CellContext`node$)}]}], {$CellContext`k, 
                 Length[$CellContext`coords$$]}]}, PlotRange -> All, 
              ImageSize -> 500, Background -> GrayLevel[0.95]], 
             Style[
              Row[{"Worst-Case Time Skew (\[CapitalDelta]t_max): ", 
                NumberForm[$CellContext`maxOffset$, {8, 4}], " s"}], Bold, 14, 
              Darker[Red]], 
             Style[
             "Model: \[CapitalDelta]t = h \[Times] d  (h = hop-count, d = \
one-way delay)", Italic, Gray]}, Alignment -> Center, Spacings -> 0.5]], 
         StandardForm],
        ImageSizeCache->{625., {213., 221.}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
    "Column"]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.962076503764749*^9, 3.9620765150603228`*^9}, {
  3.962076612608543*^9, 3.962076628376822*^9}, {3.96207666581878*^9, 
  3.962076677866126*^9}, {3.962077877776787*^9, 3.962077894097467*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"7caa2329-bfad-4666-9ded-e380f6a7cbf4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hexLattice", "[", 
    RowBox[{"r_Integer", "?", "Positive"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"basis", ",", "coords"}], "}"}], ",", 
     RowBox[{
      RowBox[{"basis", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["3"]}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["3"]}], ",", "1"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"coords", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"-", "r"}], ",", "r"}], "]"}], ",", "2"}], "]"}], ",", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"i", "=", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
               ",", 
              RowBox[{"j", "=", 
               RowBox[{
               "#1", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"i", "+", "j"}], "]"}], "\[LessEqual]", "r"}]}], "]"}], 
          "&"}]}], "]"}]}], ";", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{"\"\<Coords\>\"", "\[Rule]", "coords"}], ",", 
        RowBox[{"\"\<Points\>\"", "\[Rule]", 
         RowBox[{"coords", ".", "basis"}]}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hexGraph", "[", "coords_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nbrs", ",", "edgePairs"}], "}"}], ",", 
     RowBox[{
      RowBox[{"nbrs", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"edgePairs", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"c", "=", "coord"}], "}"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"cand", "=", 
                    RowBox[{"c", "+", "#1"}]}], "}"}], ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"coords", ",", "cand"}], "]"}], ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"{", 
                    RowBox[{"c", ",", "cand"}], "}"}], "]"}], ",", 
                    "Nothing"}], "]"}]}], "]"}], "&"}], ")"}], "/@", 
               "nbrs"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"coord", ",", "coords"}], "}"}]}], "]"}], ",", "1"}], 
         "]"}], "]"}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{"coords", ",", 
        RowBox[{"UndirectedEdge", "@@@", "edgePairs"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "=", "3"}], ",", 
     RowBox[{"basis", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["3"]}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["3"]}], ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"delays", "=", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{"\"\<Datacenter (1 km)\>\"", "\[Rule]", "3.3*^-6"}], ",", 
        RowBox[{"\"\<Earth <-> GEO Sat (36,000 km)\>\"", "\[Rule]", "0.12"}], 
        ",", 
        RowBox[{"\"\<Earth <-> Moon (384,000 km)\>\"", "\[Rule]", "1.28"}], 
        ",", 
        RowBox[{"\"\<Earth <-> Mars (56 Gm)\>\"", "\[Rule]", "187."}], ",", 
        RowBox[{
        "\"\<Earth <-> Proxima Centauri (4.24 ly)\>\"", "\[Rule]", 
         "1.338*^8"}]}], "]"}]}], ",", "lattice", ",", "coords", ",", "pts", 
     ",", "g"}], "}"}], ",", 
   RowBox[{
    RowBox[{"lattice", "=", 
     RowBox[{"hexLattice", "[", "r", "]"}]}], ";", 
    RowBox[{"coords", "=", 
     RowBox[{"lattice", "[", "\"\<Coords\>\"", "]"}]}], ";", 
    RowBox[{"pts", "=", 
     RowBox[{"lattice", "[", "\"\<Points\>\"", "]"}]}], ";", 
    RowBox[{"g", "=", 
     RowBox[{"hexGraph", "[", "coords", "]"}]}], ";", 
    RowBox[{"DynamicModule", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"root", "=", 
         RowBox[{"First", "[", "coords", "]"}]}], ",", 
        RowBox[{"scenario", "=", 
         RowBox[{
          RowBox[{"Keys", "[", "delays", "]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vlist", "=", "coords"}], "}"}], ",", 
        RowBox[{"Dynamic", "[", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "distances", ",", "offsets", ",", "maxOffset", ",", "colors"}], 
            "}"}], ",", 
           RowBox[{
            RowBox[{"distances", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"GraphDistance", "[", 
                 RowBox[{"g", ",", "root", ",", "#1"}], "]"}], "&"}], ")"}], "/@",
               "vlist"}]}], ";", 
            RowBox[{"offsets", "=", 
             RowBox[{"N", "[", 
              RowBox[{"distances", " ", 
               RowBox[{"delays", "[", "scenario", "]"}]}], "]"}]}], ";", 
            RowBox[{"maxOffset", "=", 
             RowBox[{"Max", "[", "offsets", "]"}]}], ";", 
            RowBox[{"colors", "=", 
             RowBox[{
              RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "/@", 
              RowBox[{"Rescale", "[", 
               RowBox[{"offsets", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "maxOffset"}], "}"}]}], "]"}]}]}], ";", 
            RowBox[{"Panel", "[", 
             RowBox[{"Column", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<Clock Coherence Explorer\>\"", ",", "18", ",", 
                   "Bold"}], "]"}], ",", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Propagation Model: \>\"", ",", 
                    RowBox[{"PopupMenu", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "scenario", "]"}], ",", 
                    RowBox[{"Keys", "[", "delays", "]"}]}], "]"}]}], "}"}], 
                  "]"}], ",", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Coordinator (Time Source): \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"root", ",", "Bold"}], "]"}]}], "}"}], "]"}], ",", 
                 RowBox[{"Graphics", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i", "=", "k"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"root", "===", 
                    RowBox[{
                    "vlist", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Black", ",", "Thick"}], "}"}], ",", "Black"}], 
                    "]"}], "]"}], ",", 
                    RowBox[{
                    "colors", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"EventHandler", "[", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    RowBox[{"RegularPolygon", "[", 
                    RowBox[{
                    RowBox[{
                    "pts", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", "6"}], "]"}], ",", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<Hops from Coordinator:\>\"", ",", 
                    RowBox[{
                    "distances", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<\[CapitalDelta]t (Signal Delay):\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{
                    "offsets", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "3"}], "}"}]}], "]"}], ",", 
                    "\"\<s\>\""}], "}"}]}], "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"\"\<MouseClicked\>\"", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{"root", "=", 
                    RowBox[{
                    "vlist", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], "]"}]}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", 
                    RowBox[{"Length", "[", "vlist", "]"}]}], "}"}]}], "]"}], 
                   ",", 
                   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "460"}], ",", 
                   RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<\[CapitalDelta]t_max = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"maxOffset", ",", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "3"}], "}"}]}], "]"}], ",", 
                    "\"\< s  (Worst-case Synchronization Error)\>\""}], "}"}],
                     "]"}], ",", "Bold", ",", "14", ",", 
                   RowBox[{"Darker", "[", "Red", "]"}]}], "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\[CapitalDelta]t = h \[Times] d   (h = hop-count, d = \
one-hop delay)\>\"", ",", "Italic", ",", "Gray"}], "]"}]}], "}"}], ",", 
               RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
               RowBox[{"Spacings", "\[Rule]", "0.5"}]}], "]"}], "]"}]}]}], 
          "]"}], "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.9620764097282677`*^9, 3.9620764118330717`*^9}, 
   3.962076447643147*^9},
 CellLabel->
  "In[2816]:=",ExpressionUUID->"ac9c1d7c-e84c-4fd9-9279-64f42dea01d7"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`root$$ = {-3, 0}, $CellContext`scenario$$ = 
  "Datacenter (1 km)"}, 
  DynamicBox[ToBoxes[
    Module[{$CellContext`distances$, $CellContext`offsets$, \
$CellContext`maxOffset$, $CellContext`colors$}, $CellContext`distances$ = 
      Map[GraphDistance[$CellContext`g$302569, $CellContext`root$$, #]& , \
{{-3, 0}, {-3, 1}, {-3, 2}, {-3, 3}, {-2, -1}, {-2, 0}, {-2, 1}, {-2, 2}, {-2,
         3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 1}, {-1, 2}, {-1, 3}, {
        0, -3}, {0, -2}, {0, -1}, {0, 0}, {0, 1}, {0, 2}, {0, 3}, {1, -3}, {
        1, -2}, {1, -1}, {1, 0}, {1, 1}, {1, 2}, {2, -3}, {2, -2}, {2, -1}, {
        2, 0}, {2, 1}, {3, -3}, {3, -2}, {3, -1}, {3, 
        0}}]; $CellContext`offsets$ = 
      N[$CellContext`distances$ \
$CellContext`delays$302569[$CellContext`scenario$$]]; $CellContext`maxOffset$ = 
      Max[$CellContext`offsets$]; $CellContext`colors$ = Map[
        ColorData["TemperatureMap"], 
        Rescale[$CellContext`offsets$, {0, $CellContext`maxOffset$}]]; Panel[
       Column[{
         Style["Clock Coherence Explorer", 18, Bold], 
         Row[{"Propagation Model: ", 
           PopupMenu[
            Dynamic[$CellContext`scenario$$], 
            Keys[$CellContext`delays$302569]]}], 
         Row[{"Coordinator (Time Source): ", 
           Style[$CellContext`root$$, Bold]}], 
         Graphics[
          Table[
           With[{$CellContext`i$ = $CellContext`k}, {
             EdgeForm[
              
              If[$CellContext`root$$ === 
               Part[{{-3, 0}, {-3, 1}, {-3, 2}, {-3, 3}, {-2, -1}, {-2, 
                 0}, {-2, 1}, {-2, 2}, {-2, 3}, {-1, -2}, {-1, -1}, {-1, 
                 0}, {-1, 1}, {-1, 2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0,
                  0}, {0, 1}, {0, 2}, {0, 3}, {1, -3}, {1, -2}, {1, -1}, {1, 
                 0}, {1, 1}, {1, 2}, {2, -3}, {2, -2}, {2, -1}, {2, 0}, {2, 
                 1}, {3, -3}, {3, -2}, {3, -1}, {3, 0}}, $CellContext`i$], {
               Black, Thick}, Black]], 
             Part[$CellContext`colors$, $CellContext`i$], 
             EventHandler[
              Tooltip[
               RegularPolygon[
                Part[$CellContext`pts$302569, $CellContext`i$], {1, 0}, 6], 
               Grid[{{"Hops from Coordinator:", 
                  Part[$CellContext`distances$, $CellContext`i$]}, {
                 "\[CapitalDelta]t (Signal Delay):", 
                  NumberForm[
                   Part[$CellContext`offsets$, $CellContext`i$], {6, 3}], 
                  "s"}}, Alignment -> Left]], 
              "MouseClicked" :> ($CellContext`root$$ = 
               Part[{{-3, 0}, {-3, 1}, {-3, 2}, {-3, 3}, {-2, -1}, {-2, 
                 0}, {-2, 1}, {-2, 2}, {-2, 3}, {-1, -2}, {-1, -1}, {-1, 
                 0}, {-1, 1}, {-1, 2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0,
                  0}, {0, 1}, {0, 2}, {0, 3}, {1, -3}, {1, -2}, {1, -1}, {1, 
                 0}, {1, 1}, {1, 2}, {2, -3}, {2, -2}, {2, -1}, {2, 0}, {2, 
                 1}, {3, -3}, {3, -2}, {3, -1}, {3, 
                 0}}, $CellContext`i$])]}], {$CellContext`k, 
            
            Length[{{-3, 0}, {-3, 1}, {-3, 2}, {-3, 3}, {-2, -1}, {-2, 
             0}, {-2, 1}, {-2, 2}, {-2, 3}, {-1, -2}, {-1, -1}, {-1, 0}, {-1, 
             1}, {-1, 2}, {-1, 3}, {0, -3}, {0, -2}, {0, -1}, {0, 0}, {0, 
             1}, {0, 2}, {0, 3}, {1, -3}, {1, -2}, {1, -1}, {1, 0}, {1, 1}, {
             1, 2}, {2, -3}, {2, -2}, {2, -1}, {2, 0}, {2, 1}, {3, -3}, {
             3, -2}, {3, -1}, {3, 0}}]}], PlotRange -> All, ImageSize -> 460, 
          Background -> White], 
         Style[
          Row[{"\[CapitalDelta]t_max = ", 
            NumberForm[$CellContext`maxOffset$, {6, 3}], 
            " s  (Worst-case Synchronization Error)"}], Bold, 14, 
          Darker[Red]], 
         Style[
         "\[CapitalDelta]t = h \[Times] d   (h = hop-count, d = one-hop \
delay)", Italic, Gray]}, Alignment -> Center, Spacings -> 0.5]]], 
    StandardForm],
   ImageSizeCache->{597., {386., 393.}}],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.962076412099785*^9, 3.9620764478767633`*^9}, 
   3.962076497313121*^9, {3.962076664122423*^9, 3.962076713440976*^9}, 
   3.962076769651808*^9, {3.962076808964368*^9, 3.962076830235837*^9}, 
   3.962077904763752*^9, 3.9620800608530703`*^9, 3.96208024860437*^9, {
   3.962080302094864*^9, 3.9620803344926367`*^9}},
 CellLabel->
  "Out[2819]=",ExpressionUUID->"ae739fc4-656b-43b9-a972-98e9ef1b10ba"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qd4FEXjBvCj99BRkCJNpCiighQp0gTpioKAH4gICghKURBBQIooUpUO
ShEQUIqANOnSizTpoSQkAf4hzXCA4P1fbj7mW3b37vYue9m75P099/CQvdm5
2dm97LzZVrxz71e7prXZbH0z459X3/7kpT593h74Wi788Hqvvu936/Vul8a9
+r3b7d0+VTunw8RCGW22Jelttvv/dxARERERERERERERERFRCnX79u2EhIQb
N278HxEREREREQWP6OjomJgYBDrEOo+5L8YpLi4O5f8mIiIiIiKioIIoh0An
kp2rDJiYmIh34+PjE53sREREREREFFRuOolMh3CHiIf/6EY/5ESUtLq9RERE
RERElFQId4h4qgAoTvhk9CMiIiIiIkpJZACUp4DeuHFDnPBpddOIiIiIiIjI
TOIUUIQ+RL9bt26JQ4FWN4qIiIiIiIjMJy70Q/RDDIyLi+M5n0RERERERCkS
4h5CnzgCmJCQYHVziIiIiIiIyF/EI92jo6P//vtvq9tCRERERERE/oLQJx4H
z/RHRERERESUgjH9ERERERERpQZMf0RERERERKkB0x8REREREVFqwPRHRERE
RESUGjD9ERERERERpQZMf0RERERERKkB0x8REREREVFqwPRHRERERESUGjD9
ERERERERpQZMf0RERERERKkB0x8REREREVFqwPRHRERERESUGjD9EaUqkZGR
M2bMGDBgQPv27WvVqlXSqWbNmm+88caHH364cuXKhIQEj5UMHz48j8aPP/6Y
DO1Poq+++krb8jlz5iRzM0xZC+YK3nVKyePmzZtbt27dnARXr161eiE84xeB
iFI8pj+iVGL79u1vvfVWlixZbG7ly5eva9euJ06ccFMVEop2xilTpiTbsvgM
gUvb8nHjxiVbA0xcC+YK3nVKyeP48ePuN1qPpk6davVCeMYvAhGleEx/RCle
VFRUo0aNvBqnIZ58+eWXiYmJuhUG7wDJwvRn+lowV/CuU0oeTH9ERCkD0x9R
yvbnn3+WKlXKt9Fa1apVkVm0dQbvAMmq9OePtWCu4F2nlDyY/oiIUgamP6IU
bNOmTTly5EjKgO3FF1+MiYlRVRu8AyRL0p+f1oK5gnedUvJg+iMiShmY/ohS
qmvXrhUtWjSJAzZo1qyZqubgHSAlf/rz31owV/CuU0oeTH9ERCkD0x9RStWp
Uyc3I7EqVap8+umnM2bM+Prrr9u0aVOiRAk3hZctW6asOXgHSMmf/vy3FswV
vOuUkoer9Fe1atXqxqxdu9bqhfCMXwQiSvGY/ohSpFWrVrkKEaVLl9Ydhq1Y
sSIkJER3lqeeeurmzZuyZPAOkJI5/fl1LZgreNcpJQ9X6S/5n07iV/wiEFGK
x/RHlCLVr19fd6hWvnz5S5cuuZrrzz//LFmypO6MygNPPgyQ8Etm1qxZmLF1
69bVqlWrUKFCvXr1/vOf/wwaNGjTpk3eLt2VK1cmT57cs2fPVq1aValSBbGo
bt267du3R2179+51M6Px9JeYmLh48eIfNdavX2+8nX5dC1pJ6WT36zQ6Ovrb
b7996623ateujcbXqlWrQ4cOEydO9OoJbpcvX0ZXd+/evWnTppUqVXr22Web
N2+OH1EPVqibGXfu3KldETdu3MBbsbGxkyZNQsNqOr355ptuOtYfDYCLFy8O
GzasTZs26POnn3761VdfRYejwPXr1w32jM/bs4nL6JFZ6Q/N0HYmHDp0SLf8
4cOHtYWXLl0q3nW/amJiYvAtHjx48GuvvYa1g1XTt2/f77//Pi4uzlXzfEt/
SfnqBfLm7VUDiChYMP0RpTzh4eHp0qXTjmGyZ89+4cIF9/MeOXJEd4zXq1cv
WcarARIGjW+//TY+WrdaoXTp0qNGjXIzJJN27dr1+uuvZ8yY0X1tGODpzm48
/WEorlt527ZtPTZS8PdaUEp6J7tZp/g3d+7cunVmzZr1iy++8NgViDAIRxky
ZHDVNqxQDCwPHjyoOzsG0tpZtm/fvmPHjsKFC6um61bipwZgv4k14qraxx9/
fOPGje57Jonbs4nL6JFZ6W/Pnj1p0qTR1lOmTBntOCQxMbFs2bK6fSs+19Wq
sTuPvBcvXly3zQULFhw9erTusMfb9Jf0r17Abt7GG0BEwYXpjyjl+e6773TH
AEYG6tCwYUPtvFWrVpUFjA+QFi1aZPx2l5UrVz5z5oybhk2aNMnNCEelSZMm
2r94G0x/kydP1q2zZs2asbGxRvrQ7v+1IJnSya7W6WeffeaxTgws3ZySOnPm
zEyZMhlpW5YsWebOnautQXd0On/+/Pz582una0enfmrA77///sorr7ivEDFn
2LBhrnom6duzicvokYlnfr733nu6VU2bNk27XLolf/31V1HAVXLR/aartGrV
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
CjbR7Nmza2eRzfOY/kz/6gXm5m38oDARBR2mP6IUBsOb9OnTa/fmyvsMJJH7
AZLurRXcjMegbNmy2ll+/PFHvNWwYUPtW998841vLTee/pBuTp8+7dun2P2/
FsztZLs3D7kWdA8oyPTn6vYaXunXr5+oTXd0un37dm/7J3ka4D79mbg9m7uM
Hpn7vD+VGTNmuGphunTp3Fwtq7tqVqxY4eaznn32We0s8rafHr8Ipn/1gmvz
JqIUgOmPKOUpXLiwdm9u/P5++G3w2Wefffowj/eHlAMk3ftUDBkyxM0nFitW
TDvLsmXL7C7uoeHzWUnG05/NeTZXUk7+9OtaMLeT7Wanv6ZNmxrvZ1eSMjq1
sAHu05+J27O5y+iRX9PfsGHD3DTyl19+cTWj7qqRwUqX7h07FyxYIN71+EUw
/asXXJs3EaUATH9EKc8bb7yh3ZunT5/+woULRmbH2Ek7e+bMmeUwz/0A6d13
39W+q7ynukpMTIzuU7HEo/F0a3NzXY97XqU/W9IO1fl1LZjbyXaz01+XLl20
7xYpUqSDC+3atXv22WdVE+WY34fRqYUNcJ/+TNyezV1Gj/yX/k6cOIENW7dy
oWjRosoHsivprhrxxEBdsbGx6dKl086yfv16UcDjF8H0r15wbd5ElAIw/RGl
PEuWLNHuzaFjx45GZn/hhRe081avXl0WcD9A0n0M8TPPPOPq43TvXg7nz5+3
u3i4QOXKlV3Vhl9l15yuOkVFReH3m3zX2/SXIUMGn2977te1YG4n281Of7pr
zefHZ/gwOrWwAe7Tn4nbs7nL6JH/0p/2eQRaffv21Z1Xd9U0bdrU1We5+iLI
R/V5/CKY/tULrs2biFIApj+ilCc2NjZHjhzaHXqaNGm2bNnifl5Xj6v+6KOP
ZBn3AyTdS3iyZMmCsavuJ3733Xfa8unTpxe/lKZPn659F0unzHRKX375papw
xowZ5TPWXaW/CxcuDBo0SPetsmXL6j7WzSO/rgVzO9ludvrTXWtvvPGG153o
5MPo1MIGuE9/Jm7P5i6jR35Kf7NmzdKtVgXb6sGDB7Wz666avHnzykd8qujm
JggLCxMFPH4RTP/qBdfmTUQpANMfUYrUrl073UFOSEiIq3sVwvLly13dHnzN
mjWymPsBUmhoqO6ZTronR6Ewhmrawo0aNXJfm+4RNKSPihUrqkqmTZtWPlpL
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
xMRcuXKNHDly06ZNSD379+/v3r27TIV9+/YV5W/fvn3UqUOHDuKtGjVqHH1A
PlUQK06unaZNm86dOxfLde7cuUWLFsmDjGnTplU9hfCbb76RcyFZ9OvXb8uW
LUgZq1evVh5CGj58uJwlMTFRhgi0FnEDwfbIkSPTp09/+eWX5SxvvfWWnEUZ
T0QS+eSTT9atW4eE+/vvvyvvi9KuXTuvltqHxjgU6U8ueK9evRYuXLh+/XpX
T3AQ5Nr88ssvPa59wW5S+rt48SI2bzG9VKlSly9fdtW9+fPnHzNmzOHDh7Es
4nshiMc3IO1ibe7atQu9NHPmTGVwxt5ctz0TJkwQBUJCQgwuNRH5CdMfWYvp
j5RcpT84dOiQGDxgSCamLF++fPTo0RhuYePBiGvgwIGtWrXCj8q5MKTBKOid
d97BEAij4hkzZty4cUNVs6wH/z99+vSwYcMwesRIDyNqjI5024lfXKtWrfri
iy9QskuXLsgae/bs0S2Jj5syZQqWqHXr1gMGDMCoGBO3bt2KT/zuu++8rRZT
MGPevHnRDxUqVBjttHnzZvHumjVr8CNG7NpqMQ7v06cPAiOGwUgQ+/bt0zZV
2Q8Y12Hsh/I9evQQzxzXXTolZfpzFeuwpuQpZ7rFDDZVwFsY/6Mk1u/kyZOj
o6PdpD/UvHLlyo8++ggrAuN2LB2ykqpMYKY/aNSokSiPJRVTVqxYIaZkyJAB
2UdV/rPPPhPvPv/886q33N//RB74a9iwoeosvqioqHz58ol3sY7kdCy7PPKF
yKAMFA7nGaGdOnUS7z722GOyziFDhsjNAF8E5SwItvI4Ecir85TxBBkNm6uq
8U2aNHGVL9wvtQ+NcTyc/tDPqiODriCQigAFP/zwg5FZHCalP3Tg448/LiaW
LVs2IiJCWV7ZvdmyZcOXS/kufinJdzNmzKg6NIlfU/KAvuotafHixbKGuLg4
gwtORP7A9EfWYvojJTfpD7Jnz25z/gVe/Ciuh0KC6N27txxXYJgnyyPIYGxs
exhGsIcPH1ZWK+tBrsRoXFkYP27YsEHVjFOnTmkvirE5j8toSxYsWFBVrGvX
roiB+A8W1ttqMbrWFujXr594Fz2DH5999llltYifNWrU0M6lvbOl7Ac5bpTK
lClz4sQJ3ZUiiXX34osvillUnSwsWbJEvFutWjWbJv0Zbyp8/vnnqmKFChWS
J0mq0l9MTIxsmISVu3btWmUx3fSHTF2/fv3+/ftjh6VtRvKkPxmgXnnlFTEF
42dxACs0NFRb/sKFC6I8UpJqpO0+B509e1ZUq7rAUJCnLKI35ER8a+Rnbd68
WTsXqpIPL/j111/FRHmsTfch4ImJiYgnogACvpiojCd9+vTRzoUMIgtcvXrV
+FL70BiHIv3hl4z2qkBX5KoBbFoG57InOf0hlZcoUUJMefrpp69du6Yqr+ze
kSNHqt5Ff8p3dU/vrFChgngXOVG3PfJqRzh58qSRRSAiP2H6I2sx/ZGSm/SH
MVimTJnw7vvvvy+miLQijjtg5InU07Jly5kzZ4p3McAW5dOmTVu1alWMn598
8kkx9ihSpMj58+dlzaKevHnzij9fox6Mcp944glRGGlRdRNLeWsI/Efc3jBj
xoxiCkZcshjGS+XKlRPTH3vsMQyZECJEuhSP81alPyPVYtDbuXNnkYIRUjo7
LV26VLyrTX/4WiEviEoeeeSRtm3b4sds2bKJKQhQygaIfkDladKkQQtbt26N
FVGyZElRGI03su5GjRol7mcoV5MSKrE5z77r0qWL7eH051VT5Z0wsXIRJLHg
4lImefxRmf6wl5FXpaHTOnTogM8VfxbImTOnMqVq0x/mlQcrEV21S5Q86a9X
r16iPFpubM/+rzzAdObMGeVbSXn2gUzc8tRKh+KIW506dVzNGBkZGepkd97k
5MiRIzIIqI4xSfJsw2eeeUZMUcaTFStWaGdB5XKpkQQNLrVvjXEo0p/BlSIo
L0Xcu3evwbnsSUt/4eHh8ov8/PPP6z50T9m9O3fu1BYQDyiEGTNmaN+Vj6f8
6KOPdNuj7GflnXmIKPkx/ZG1mP5IyU36++2338TIYdGiRWKKvBdihQoVxMBS
wmhH3IIS/x47dkxOl2cfVa5cWU6U9Yh7Gsjpc+bMEdOrVKkiJ65Zs0ZMHDBg
gJwYFRUlPq527dpyoshitocPR6KkjITK9Ge8Wrvr6/606U8cZIRu3brJiTEx
MVh8OYrW9oM4jU0WxqheTD958qTdNbHuxowZI86jCwkJwSBTWeDEiROinrlz
52rTn/GmYl2LVIiPwJBSFsZHy+GlMv0NHz5cTOzbt6+ciHG+CNEYFcuJusf+
5N8BVq9erV3q5El/SFuifKtWrXQLXLlyZfPmzb/88sv3338/fvz4oUOHyq7w
Of1hoXbv3r127Vp846ZOnfrll1/KOpXpr3z58mKi8Ue5/fzzz7KqH374YbEe
ecFdvnz5xFzKeILl1a1Znpu6fft2g0vtW2McivSnPBLq0dKlS+XHnTt3zuBc
9iSkP/z6kpeIFixY0NVZl6p7fmoLyEOHGzZs0L7bvXt38a6r9IffybJ+7Vm7
RJScmP7IWkx/pOQq/R08eFBesSKvxZNpBeNbVXkMg8Vb2uM1ffr0EW9FRESo
6tFeiCdvLRgZGSmmYFs94aT63fXee+/ZnIN5uSWLo1GITqqSp06dEuFFmf6M
V2v3Jv2JG7MjzaluwolhpzgZr0ePHnKi7Ae0UFl43bp1YvqqVavsrsn0d+HC
BXEUdcqUKcoCGBbaHtwRVJv+jDf1xx9/FO2RfweQ5DE+ZfpDnZjy0ksvqfp2
9uzZquXVTX979+5FaydPnqy7t0qe9IfGi/IYYyunIxG3bt1aHpTR5W36Q2ZH
P1SoUEEeR9NSpr88efKIiehPg4uPL5qbBqugGeJqQWU8cfXMuEKFCokCxtOf
b41xPPzEB4ML7lBcsAmnT582OJc9CelPqWTJkrrJzmGge5OY/pT1iydHEJFV
mP7IWkx/pCTP3Ov3QLdu3erWrSvvYTh69GhZWKSVJ554QlvPoEGDbM6TQrW/
YXbv3i2qWrNmjbIejOtUx6rg999/F4XXr1/vptkxMTHyABP+jymIqOLH8ePH
a8uLo2mqMz+NVCsYTH9xcXHi/MYRI0ZoKxcn7FWrVk1OEf1QsGBBVUl5pdKM
GTPctFamP/uDFFapUiX5bmxsrLhZjXgaoCr9edVU1CBWLsaxqpLLli0TTZXp
D1lSnACsPClXCA0NFYXlnYIC864vWMysWbOK8vKiKozPlXdidMOr9Ld//375
ZxY3lOlPtg2db3DxlUdpjRCBxU/pz7fGOHxNf3/88YesCr+LDM5lNyn9QZs2
bXTL+zv9HT58WNavvU8RESUnpj+yFtMfKbl/2vuoUaOUheVdSrT1NG7cGG89
99xz2rcQo8STrBGslPVgbKMtHBUVJT5ahBoBw785c+Z06NDhySefzJ8/v7w6
TxAxbdWqVeLHTZs2aasV43ZV+jNSrWAw/clx5vLly7VtEONhZCj51XPVnzdu
3BD1GE9/CMtiFgzCxbviQBt6XhyoVaU/r5oqTsNT3dxGOHXqlKhHpj/lnUCy
aojp/fv3F4UDM/0pT03ctm2bmDhy5Eg5sUiRIn369Jk+ffrKlStR4OjRo/KP
DzZv0t+tW7dy5Mgh3sWaatGiBb5xixYtwtrcu3cv6unZs6d4V5n+5C1Thg0b
ZnDx5TnVYgtxBcuCf7FtiLn8lP58a4zD1/SHbpQflzx3fYFmzZphbcof8SXV
lvd3+pN/SYNjx44ZWQQi8hOmP7IW0x8pyfTXUKFz587ff//9uXPnVIXdpD9x
GmGDBg10P0UMceWZhKIe5cV9En5BiWNS8r6a4eHh9erVsz1M3u3c9iCmbdmy
RfyoG2fEuFGZ/gxWKxhMf/L0VwxctW2QhzzkSa0mpj8Q99hBmBU/Vq1a1eZ8
hJz4UZX+vGqqm5UbHR0tSsr0J2t2A6tDFA7A9IdxuHwKA6LNvXv3xHR5c1SM
6rVjdfxGlUtnPP3JVmXMmFH3iXW66U/cvhVee+01g4u/du1a2TzVzTnd8FP6
860xDl/TH77I8uPmz59vcC570tIfugt72Keeekr8mC5dOiR6VXl/pz/lBY9R
UVFGFoGI/ESZ/nKPcPnq9LPjh0OOlj+6LPDS7PsFPlzjrhKmP9Ji+iMl9098
UHGT/sSt6XWH8fJ8P/ncQFFPzpw5tYXljUrmzJkjpvTv319MQa5Zt24dhtbY
ejF92rRpYrqIaUhM4mxV1c0qBXF7T2X6M1itYDD9nT17Vswr74OqhExtcx42
klPMTX/jx4+3OdNNRETEvn37RA2//vqreFeV/rxqqnhyd9GiRbUld+7cKeqR
6e/06dNiyty5c2NdkL98AjD9iXOYBfno9ri4OPmXAeUT6CR5aaTNdfqTD4+Q
5EbYrFkz3cbIm4co01+/fv3ExIIFC6IrdGfEVoHK0X7RGAz+xfF3m/NiUvc9
IJmS/rRL7VtjHL6mP5CPoZk4caLBWexmPO/v3Llz8rHsefLkOX/+vLK8v9Of
fDKI8tpJIrKEMv3l/MLlK8b+3/K91+i8W3vW/wrg/64qucL0RxpMf6RkVvqb
PHmyGGlgaKd6S951Yf/+/cp6bHr3tFy4cKF469ChQ2KKCG6lSpVSXXTWrVs3
UVLGNPGX9scee+zChQvKkgsWLBAllenPeLX2B+mvdevWqtZq7/ryyCOPYMoH
H3yg7SJxL5QWLVrIKeamv6tXr4qb22CKyHoYPcpf+Nq7vhhv6tixY0V75H17
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
pSVt+rM5D4++++67169f97bBgvz9A59++qnq3WnTpsl3tdue/cGVkja980KJ
iCzE9EdEAQthSgyfVPdRdOOPP/4Qsyxfvlz7rrhBKFKP+I3nVWE56l6/fr2q
5I4dO8Rb8ll1SuJsOoPpT1u5OBinSn/Hjh3DkLJmzZqYHhISohzxGkl/jRs3
xkQkDm1rZZIdPny4mCLvtaItrEtc/1i9enX3xZJy1xdVSZH+lCfHCuJySJn+
9uzZI3spq4aY3r9/f4OLaXceDlu6dCniubz7Sv78+cXJsV5tWnaf0p+b7VD3
Q5WaNm3qvh+wDURHR6vmEldc6t46yQ0srMikVatW1f4ZRz4F3iDt3TUFcUNa
9NKkSZNatmyp/FL4/BDGoUOHykr+85//qN6VJ9naXFzMmJCQ0KNHD1HglVde
Ud1ul4jIKkx/RBSwZsyYIcZO48ePNziLPKdx27Zt2nfHjBkj3o2MjPS2sJtR
t/t6xPmrJqa/uXPnam/4KW8nYiT9ifMDGzRooG2t/cEgX56X6G36q1+/vs15
8qH7Ysmf/uRqcuPtt982uJhKCDUvv/yyqAEbrd3LTctuUvqT53N6vM+J8nF4
rijv/COIU4uxPRvrlf86c+aMOBycKVMm7ZFQs9KfCvotc+bMci7fzr389ttv
ZQ1169ZVvdupUyf5ru5tRX/++WdxvuuTTz6JYO5DA4iI/IHpj4gC1vHjx8Xg
CkHATbGdO3dicCWuSjt79qyYRfemlOKstiJFiogfvSrsZtR96tQp8ZYY+as0
atTIZl76u379uriQsHDhwlOnTt2/f394eLi4BYo40dFI+uvYsaPNedNLbWvl
OZDTp08XU7xNf2+++aay31xJ/vQnL8VCfI51weddIdaCuMxQ5EevNi37g/TX
rl07VUl5Iq6R9CfXnfLpJ7pE35YuXdpVP6guG4SrV6+KynXPZXUPkU3edxRb
rPItZMz1hm3YsEF5rvKuXbvmP6C6DBZeeOEFmc60D/4wQna+zXkdq6pPnn76
afmu9mmkMTEx4upOmzenLhARJQOmPyIKZOXKlbM5z0NzNYJasmSJGGLJ44Pi
ZoYffPCBtrC46UeLFi3kFOOF3Yy6QYz0evbsqZqemJgoHhhtVvqTj3tQ3ZXx
0qVLYrpu+lM97FvcvR+UD4gX5PEjOUr3Nv2Jq6WyZcvmvljypz8Q94fx7QFw
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
i62EPAbbH7FLjh8/7uHhYdw8nzdAvAE5sk5+UiEq1BNGZM6c+datW1rM/fDD
D9Un4+jRZcTLkd1r4ADL85tffPGFFvsuXbrk7++PCxYokO+v++fES5DDCsOH
BTACdsAULeYiJJbnQzsNEC9Hdq8+A19X08aSqMU+LNFYqI1IBGcdMPGyeAly
ZEXmKONknKPrgc2MFnMJeRS2P2KXNGzYUH0sfj+muHgDcnB9OCC/5enLIUO0
mPvw4cOiRY1K4uPjduZ0R/F+ZMc6dLCdm5tx726lSpW0eAc6duxo+d/8/jPx
BuTgggXKC5iiy19ExSnlQNEVqw6I9yM71o+bT3l7G++xxWKo6756LNEqD/U7
zhOvPw6u9kM2KC+wmdFiLiGPwvZH7I/Vq1erZbN15XDx7kNBZWID1NeYR48e
1WLx+vXrlcVt2+QVr0h2rDp1jPvKXFxc9uzZo8W4Xbss5xM2bFRbvPtQUIOG
tZxSXuQBa7RYjKioA0UrVqotXpHsWHUbtlFrIBZDLcZhcVY3zETlLCfefSio
UJnnlcXY0mixmJBU2P6InfHgwYOCBQtiwfT1ct03s6x48aGgVeOKp2z5nerV
q6fL6ObNm6tPxi0/NRdvSXapb76urybco0cPXa5VqFDBKeV8wsO/bRMvPhQE
I9Q5urBGl8sIjErOjNlfi7cku9SCzzerCWMZ1OUaFmenlC8Cnh+2Wbz4UFCv
N4+5exqvzcWWBhsbXUYT8n9sf8TumD59uvpYfK1tjHjroVLVrmqE8uWHH37Q
YvTvv//u5WWcRlKqVOYHSX3Eu5Kd6f5fvfLmNc6EDAwMvHLlihbLPv3007+P
Mugr3nqoVMEO5QsM0mI0AoPY4ILZY/LuOnRPvCvZmfYeTSxUpBTGiwUQy6AW
y7AsqwwULtdBvPVQqXquwRvKF2xstBhNiILtj9gT165dCwkJMXYd4V6nF1YU
rzxUqvZ/WNbP2xXW5M+fPykpSYvdr732mvpknDu3mnhdsjO9805FNdvJkydr
Mevu3bvR0dFOxvk/ma7fOC5eeahUwQ6YAmtgEGzSYjdio/Iz9JWJ4nXJzvTm
BMt7bLEAajELCzKWZePmfE//Xm+dEK88VKoGTfojMDQG1mBjg+2NFrsJ+T+2
P2Jf9OnTR30szhtaULzvUI9pZPucyp2pU6dqsRsrT2Skei+Sz62b3cUbk93o
8qUugYHGE0D58uVLTEzUYtaIESOU+3M+mired6jHNHvOFOXOyJEjtdiN2CA8
TsaBooEbfr4o3pjsRtv23sgUZtxHgaUPC6AWs7AgK/crNXpLvO9Qj6lxV8sr
HbG90WI3If/H9kfsiAMHDri5uWGRjC8UJN50qP/W6YUVYyKMezWDg4Oxbmgx
fcGCBeqT8eWXSoqXJrtRt64F1VRXrlypxabTp097e3vjgiVKFElMuihedqjH
BFNgDQyCTTBLi+kIj0pRs1ZdxUuT3ahLj5fUVLH0abEJSzEWZFwwKCzXoEl/
iJcd6r+VLW9lp5RzdLHJ0WI6IWx/xG6oUaMGVkgXZ6cNE0uKNx3qH7XgRUut
6NmzpxbTk5OTy5Yta9yz5OFy/NgL4r3JDrT7l9bqiJ46depo8Qi0bNlS+b5h
49fiTYf6R8Ea5RHM0uU7IpRyjojz51/vEu9NdqCV6466pxzLiUUPS58Wj7AU
K9+bdP9cvOZQ/6gOL213djbO0cUmR4vphLD9Eftg+fLl6iOsU61I8Y5D/Ysq
FTG+Z3Z1df3111+1WP/zzz+rlwg0bpxTvDrZgSpVinJSx3IePqzFoM2bLecT
tm7dRLzjUP8iGKScgmVarEeE1IGicaWfE69OdqCqNRqpNo1FT4tBWISxFOOa
OWKriXcc6l9UPL67+t/EVkeL9cTBYfsjdkBCQkLu3LmNe1d83Q7NKSdecKh/
0cZ34lyNbzGdqlatqisAHTp0UJ+Ma1Y3Fm9PNq3PltRWkxw0aJAWax4+fFii
RAl1S+HJ338RLzjUvwgG/X2DbgldLxBHkFSi3nl3iXh7smnNXmB5jy2WOy3W
ACzCRp10ce30yk7xgkP9i/qMPeXlY3xxiq0ONjy6AkAcFrY/YgeMHz9efSyO
7ZRLvN1QT1TXOpHKr6+++kpLAC5cuODnZ7wXqVCh0MSE3uIdykZ198+e2bP7
Y4yZMmW6ceOGFmtmz55tOU5k1DDxdkM9UbBJ+QXjtAQAQUKcjFNKorLvOHBH
vEPZqHb/dj9PvsIYIxY6LHdarMHyq7wuUamXeLuhnqhqzd9RfmHDoyUAxJFh
+yO2zqVLl/z9jS1r3qw+Zz+NF6821BN1eE65YD/jfJ6cOXPev39fSwzGjh2r
PhlnzKgkXqNsVG+8UUbNcObMmVpMuXXrVubMmZ2MVwlE3b7zu3i1oZ4o2ASz
nIwXc2SGfVpigDipXPUdNFq8Rtmohr9ueY8tFjotpmDhxfKLC3r5hPQdd1q8
2lBP1ODJ10MjYp2Mc3T9se3REgPisLD9EVunU6dO6mNxyfDC4r2GekqN65xb
+2YmJsZ4L1JoqNe1P7qJNymb09kzHX18jEpetGhRXXf9DRkyRLm8aPGH4r2G
ekrBLOUa7NMSA8QJoUq5+9dn9U+nxZuUzWnzL1eDgkMxQCxx2r8uq95isniv
oZ5SzXv9fb5Bp05aYkAcFrY/YtPs2rXLxcV4iqxWXKh4o6GeXucWxcdG++i9
kWnp0qXqk7Ff3yLiZcrm1K5tXjW99evXa7Hj6NGjHinnE1aoUFq80VDPJFjm
ZJyj6wETtYQBoVLpqteorXiZsjm1faGvmh6WOC12pN4qnylLgcFTboiXGurp
latQXRiHbQ82P1rCQBwTtj9i01SoUAErobur89appcQbDfVM+uK1wmpL88IL
L+jKQ5UqVZyMA0WdD+xvK96nbEhbtzRXXjRv3lyXF/Xr13dS5xPu+FG8zlDP
JFimztGFibrygGipjC344ifxPmVDWva95VhOLG66vMCSq7xo0ecb8TpDPZO6
vLbHxdU95Vu1CrryQBwQtj9iuyxatEh9hPVukFW8y1BpUN3Soaog7NixQ0sk
9u3bp3ZKNWtmE69UtqIHSX1KlTKezvPy8vr999+1GLFq1Sr1v9m5c1vxLkOl
QTBOOQgrtUQC0ULAcMFCRUrtPZoo3qpsReUr1kj5RssVi5sWI7DYqmqfp0gD
8S5DpUGlqg2w3FG/aJGWSBAHhO2P2Ch3796Njo427l0JdD/2cXnxIkOlQdun
lfJwM/YhGl9e3KtXL/XJuGJ5PfFiZRP6+OPqamKvvvqqFguSkpLy58+fcjqB
3/kL+8WLDJUGwTjYBxNhJQzVEgwETCXtzbfnircqm9C7H1qe88KypsUCLLNY
bFPqpEfXEfvEiwyVBvWfcN7HPyzlNK1obIS0BIM4Gmx/xEYZOXKk+lic0jOv
eIuh0qx+jaIt94MtWKAlGFevXg0KCjK+2c4TdP+vXuLdyuS6dbN7liy+GFdk
ZCRWci0WTJ06VXk64e1R4i2GSrPGT7CssdOmTdMSDAQMMcMFwzJn2bb3hni3
Mrl2HbqXPUcejAsLGpY1LRZgmVWelqk+WLzFUGlWrTbvKR+xEdISDOJosP0R
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
y1RatrSumkyfPn20jDo5OTkuzvh21MvL68TJXeJthdKo4yd2wlbjG864OBit
JTAInkrgtJlLxTuXqTT307VqMli+tIwaYFE1dinOLh1f/lm8rVAa1XvM757e
xj1R2Bphg5TOnGAzHxkZ+WjH8QooULjBVfHyZQaFZHv+//tJ1NV1//79Wv49
RWD7Syep36q1CAgWb1tm0+6Y/LEexp7B29v7zJkzWgb+7bffqoG3rxYhXlgo
jYovFARb3dzcDhw4oCUqW7duVQeet2yRW7xtmVBVqkSpgR88eFDLwLds2aL+
N5s2qy9eWCiNgqHKWVisJSqIHIKHC5YuW1m8bZlQteq2SClrzljEtAwci6oa
eLa8lcULC6VRRcp3VP+b2BqlPycvv/zyY79w5Sy/Qrx2mUT5a/7m4ur36HCq
V6+e/plLwfaXHhITE/Ply4cM+Lu4rM+eV7xtmVAfR+ZQ/yYtW7bUNXb1Y6uL
s9PaCSXEOwulRR8NLqBy0r9/fy0hSU5OLlWqlJNxPqHryRMviFctE2rf3jYu
Kb+21qxZU8vMQfv27ZWP69YvF+8slBbBSssXbu3b68oJIueUcj7hlyv3iFct
E+r7Dcc9PIxzdLGI6fqxNfV0gkadPxXvLJQWdXhxq7OzcRY6NkXpT8jvv/+u
fuJPJTCykXjnMpWyFBj9WDteunRp+icvAttfekg9TevF0HDxnmVa1fELUFP6
6aeftIz98OHD6mvM8gUCxWsLlX6dXlgxe7jxoRMSEqLrSeq5c+eq1I14rZR4
zzKt+vS2vFpx+fLlWsZ+9uxZHx/jhR3FihVKSLwg3lyodAomwkoYClthrpaQ
IGwqda3b9xbvWaZVj76vqSlhKdMydiytWGCNLX1ozKBJf4g3Fyr9is4dr+7f
wKYo/QlJfXOrwtnFI7baHvHCZSoVqn/Jwzfm0SnlypVL1wl1VobtL81cuXJF
HUGZw91jZ0x+8ZJlWv2QLY9nyg14JUuWfPjwoZbhDxo0SP3rzRqYX7y8UOnU
K60tPxC///77WuJx586dLFmMA2QiI31v3+ohXrJMqyuXuwQFGT8x5MmTR9dH
2Jtvvmlx84OJ4uWFSqdgonITtmqJB2KGsBk3zAQEbdxxSbxkmVbb9t3MHG48
gYWlDAualuFjgVVuVqw/Sry5UOlUg06fKDexHUp/NtavX//Yr1qZ8wwRb1sm
VI7Six8b1NixY9M/f+vD9pdmunbtqqyfEREt3rBMrl7BYWpWs2fP1jL81Bcs
Rod5nVpQUby/UGnWvpllfb2Ms2ELFiyo6/VzL774osrbwoU1xRuWyfXuu8+p
WY0fP17L8O/du5ctWzZcMCws0x/Xjor3FyrNgn0wEVbCUF3nNiNmKm+vjJom
3rBMrvGTF6hZYUHTMnwssFhmcUF3T79ebx4T7y9UmjVw0tXAEPUe20zYDqU/
GEWKFHm00bh5RhSse0a8aplTfmGVH52Vv7//xYsXtfyHWhO2v7SxZ88eFxfj
dut4Hz/xbmV+bcsRG+5q3KsZHh6u611RM2fOVP96L7XMIV5hqDSr5XPhysfV
q1drCcaJEyc8PY3fs8qWjXiQxLc8PEEJ93vnzx+McQUEBFy6dEmLBV98YXn1
8IAB3cUrDJVmwT7lIwzVEgwEDDHDBXPmzv/L4b/E65XJtfdoYpFiZZ2Mh5c9
saxpsQDLrPK0YOm24hWGSrMq1huhfMRGKP2pSP1ROJXoEh+KlyzTKm/lLU7O
ro+Oq0OHDul3wcqw/aWNSpUqGV+PODktz5pLvFvZhCZkjlL/JkOGDNFiQeq3
VT6eLnveLyPeYqg06PsxxVUqmjRpoiUVoFGjRuqa27e1EO9WNqHvv2uoJtap
UyddLsTHWx5IOXhoi3iLodIgGKcer4aVulKBgKmkfTD3O/FuZRP69KutamJY
1nS5kPp4V/shG8RbDJUG9XzjiLuH8R5bbIHSf8NM6p1UqXgHlSzc4Jp4yTKz
QmO6PzoxZ2fnnTt3avn3tBpsf2lgyZIlyvEXAkPFW5UNqZinN4bm4eFx7Ngx
LUasW2d5/2azipnFiwyVBsXlDVCROH78uJZIrF1reVVWxw75xVuVDalhQ+NJ
dhcXl19++UWLEbt371Z3R9SuU028yFBpEIxTkYCVWiKBaKlIVK7WQLxV2ZAa
Neug1jQsblqMwGKLJRcXjMxRRrzIUGlQ/rhWKhLYAqU/D6mHwaaSO/5H8Xpl
chWofcLVPejRoZUvXz79XlgTtr9nBX9w9uzG7dbBLq6bc+QTr1Q2pEVRMSlv
83aqX7++LjuaN2+u/vW+e6uYeJehnkkz+uZT3r388stawvDgwYPChY1DLH19
3c+d7SReqWxIvx1u7+5u7MwrVqyoxQvQvbvl29GVKxeLdxnqmQTLlHcwUVce
EC3j52B3969XHxKvVDakNVvOePsYP/RgcdP1ZHTqa93qPj9bvMtQz6R2gy1f
emPzk/4kHD582N3d/dEWExzdWrxb2YSiCr/zWGtesGBB+h2xGmx/z8ro0Zb3
fYzMlEW8T9mcmvhbvi358ccftdhx8uRJ9ZBX8dz+FxbHizca6il1Yn6FLCHG
988RERG6HgWdPn26Ste4ceXF+5TNadhQy124ixYt0mLH5cuX1UNesbF5/rp/
TrzRUE8pmAXLnFIeBYWJWsKAUFl+lO82VLxP2ZwGDhurpoclTosdWHKx8OKC
foGRAyZeEm801FNqyNRbWbLHOaU8CorNT/qTULt27Uf7i7OrT/6aB8WLlU2o
cIOrnv6xj04va9asd+/eTb8p1oHt75k4d+6cr6/xLVw+D8/dfMvDs2tttrw+
KS8nLVCgQFJSkhZTXn31VfWvN613PvFSQz2lBjbJplybN2+elhhcv349NDQU
F4yJCbh3t5d4mbI53bjePXNm495sjQc8Tpo0Sbn8zqQ3xEsN9ZSa+I7lG87J
kydriUHqMbAhoZm37L4mXqZsTjsP/BkVbdybjSUOC50WU7DwKpfL1hwmXmqo
p1SddpbD7rDtSX8Gvvnmm8d+vYqIHSHeqmxIMeWWPjbA1157Lf2+WAe2v2ei
TZs2yuI5WbKLNykb1aCQzJayNm2aFlPu3LkTGWm8Fyk82OPEvArivYZ6onbO
KO2Vcp9hXFxccnKylhj07dtX5WrpV3XFm5SNas6cqpYbG0aO1GJKYmJi3rx5
ccHAwICLlw6K9xrqiYJNMAuWwTjYpyUGiJPK1ehxs8WblI1q6gdfqRliodNi
ChZeLL9Oxr24Xt1HHRTvNdQT1f/ti74Bxi+22PCk/xWQqYtzKu7e0YXqXRCv
VLalgIh6j87Q29v79OnTWv5DMxq2v6dn27ZtzilvLa/pGyDeoWxXO2PyR7sZ
95mHhIRcu3ZNizULFljei9SvUbR4taGeqAZlLSeMbdmyRUsADh48qM4nrFIl
SrxD2a6SEvsUL268mtPHx+fMmTNarFm5cqXyulu358WrDfVEwSblF4zTEgAE
CXHCBWMLFN9zJEG8RtmuSpet7JRyju6hQ4e0WIPlV3mdt1hj8WpDPVFlqg9W
fml5vmzixImP/W6VvdQn4mXK5pSv2i/Ozv/fg5Nanse0Amx/T0lycnKpUqXg
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
iljQkKEtwwOtbN16TrpHbnk4WvrNeO7mU0CQxsoKpjfita5QoYKuPZEpbCOr
XCT3TSZAbM2/LO1i3nHWHh4vXrwQL1keBXd/Hw1ojN7e3iCls1y+n9/+gMcP
3kGynDGSlJSEJVbjxo3ZuNs4sgC53+HoMbNrGFNn6NChKHJnZmZGRERIhHuR
LB6ktid3TCbDtautVCrhs8rixYtnZ2ejiJWSksLU37BhCbnf4egBojB1QCYU
uaFsoHgkwoGiqi07r5A7JpNh58H7NjbCPbbQ+rA2zEBDZuonNfuG3O9w9GjS
8zemDkxvxGt9+vRp9sm8Nhx9m5NbJxPAO2663sLf4sWLxeuVd8Hd36fEihUr
mJpt7Z3JTZPJUNRSWKRTKBTnz59HkWnfvn1MpjoJruROh/O/3F9VumCQ8IWR
paXlzZs3UUTfunUrE71D+yhy02Qy1K0rfB4iHMt58CCKTGfOnGFTjoqVypA7
Hc57AWkkOaeIgFgookPxsFNEKlapQ26aTIZ6jdqzjgetD0Um7ectHn6F+81M
Izc7nP8lorDmHF2Y5IhXXPsi7j8hDSmzk9w9GTXR1W7KLVx0c1q0aFGsF6d5
FNz9fUqAiOyDaKVEutk3hNw3mQBT3XzYGOnduzeKRm/fvo2PF/aqWSplR+cW
I3c6nPfy8+iCTPcGDRqg6A5RvXr1HKsiOXa0MblvMgH+2F6HadSyZUssjSpW
rMicxanTu8ltDue9gDQah16xIpbuUEKslr5bvp3cN5kAazYdYYYamh6WRtCK
mUbNev9ObnM476XTyPMKpeDQYZIDUx2Rims34WvDyqkEuYEyalyC9Ay1ZP/+
/SjDM++Cu79PDO1hyOWtbMmtk7FzODDCSyF8Aubi4vLs2TMUgb777js26Po1
8Cf3OJwPUK+UG1Nq9+7dKNJfunRJqRTKqXRpL3LrZOxkZqTExQnXc1hbW9+7
dw9FoPXr1zPFu3fvQO5xOB8ABGJKgWQo0kMJQSHBA8Mi4o5fTCd3T8ZO4aKl
hbfQSiU0PRSBtNdaRcY3Ivc4nA+QkPSl5kXKd9+J13327Nl6bsUv/ltyD2Wk
hFc4LJEqdJPZvHlz8RrldXD39+nRpk0bpux8Tz9yA2XUdHd0ZZn85ptvUKR5
8eKFu7twc4SXs+raklLkBofzAY59VVxtIXzxWbBgQfGvMVn07duXVdSqVVXJ
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
2qG1oo7Vms9mH6ElJDTvvQE1haGIpEggYFTT2EnjDu8fYL9BHaTPlFvWdh6Q
Ii8vL6qvLFlCur/8xJAhQ/DRm+Dmze6zdJaWdk6YpTVr1pCk/fr167jDapSf
9Y3l8vQHvefcl2Wd7cQnooS7UE6ZMgWrbubMJHafpbOMHFkas/T555+TpP3B
gwe4w2pgoN8fT6+wOxdJPgERQUoQFGQFcUmKBIoNqy659wh2n6WzDBkxA7ME
rYwk7bk7rFrZuvaefJ19ipbkk5d3oYShiKRIYEjDqitRLpn9BnWW2m21HQws
AEnaWUK6vzzHpUuX8AS6GHPLo/KUh3/mZ/9wO81XDMHBwVSbxY0fPx6fvkmd
Q9jNiySfJNf2/usHo69JyuOlE+gcM56nsJssneXJ4+7e3uJFioeHB9XpinPm
zNH+jDtuKLt5keQTEBHVBFlJygPKDIpNLEH08N7/Szq7ydJZDp/+MzA4QkV6
uiI0WFQztmJv9hFakk+qNNW+H4BxiKQ8YDyDIQ0uaGHl2HPCb+w3qLNoTlfE
1QvmYARIkl/4Id1fnqNBgwb46C3xCmR3WDrOUGcPzNXEiRNJkg9l4+/vL95I
26rPflmW3b9I8syeGaXUJuJDzsTERJLagOjUqRPW24b1ddkdlo6zbFk1zNWg
QYNIkp+dnR0TE6N5I2119dpxdv8iyTMgH4go3nDGxFAd2wplpn1xN2Mpu8PS
cT77UrvDPDQ0kuRDQJuFCxqbqDsPP8I+RUvyTO9J1yyt8RzbAKopGsYzrLfK
Taax36CO03rANswVGAGS5Bd+SPeXt9i2TSt9PRt7dm+l+6QFRgarxe+ktra2
t2/fJpFg1apVKEHXmt7sFkaSZyoXFwuDjY2NDx8+TFIYR45od8yrWzeQ3Vvp
BfHx4uWMmZnZhQsXSCTYunUrPputWzdhtzCSPAPyoY4gKElhQIFBmcEFixaP
Z/dWekH5SnWwPUJbI5EA2iy2x6Co6uwjtCTPlCiv3ZYTBiGSwoDBDMYz8Ubd
I2LA9AfsN6j7RJdujRKAHSCRoJBDur88RHZ2dpEiRUB0SyOjTX6h7N5KL5jr
4YdPSvv27amEKF9ecy6SidGu6bHsLkaSB1YMfU9r4bt2paqKpKQkURWmxqdP
tWY3VnrBgf1NUYW6detSqdCokfZEib37fmR3MZI8AMKhgiAlVVVAgeE1l6/Z
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
nLAwZ8zGzJkzSdL77NkzX19fuKC/f56nzy6zOxRBR4C4IDEIDXKD6CTFA0Wo
/t8MCy5UKNrEiYxUX3xByyJJL7RQaKRwQWcXtz3x99gdiqAjjiX9GRIWBULD
mATDEknxwPCG1ejnH5w3qpCJExYRjdmAUZ8kvewh7o8kkpKSrKwUv1PC1v54
WH5hX0iUu4WFRntS28uXL0mSPHXqVPU/Y9swdpMi6Ij21fOgyj/88ANJ2dy8
eRNPjSxSxPNVaq83r3ubOC9f9AgNVQwg4UltS5YsQdWGDu3HblIEHQHiosog
N0nZpJ8aGRoaJKdGAimpt4sUKaDRntQGjYskydBIUbXmrbqxmxRBRwwc+hmq
PG3aNJKygbEt/dTI/QkP2W9QHyhRStmAAkZ9GPhJkswb4v5IolatWlAV5hrN
Gv8wduelJ4zx8sN2NGLECJIkp6amRkZGKq8x7S1OzS/L7lMEcnZ9XtxcOeRB
U716dZKagWjZsiXW4a6djdidl56w/vs6mJNevXqRJDktLa1EiRJwQVtb24uX
4tmnaIEckBXEVd5wligBcpOUDZQf1uH33y9hv0E9YcfO9ZiT999/nyTJENBO
NdrPwb7bnMg+Qgvk7D58x8nJRbu4JRLGJJKagbEN63DspIXsN6gnrP3hGG5A
AQM/SZJ5Q9xfzmPTJnW5dXNnN3bPpT8khEbns1amBTs7u+vXr5Ok+scff8RU
t6nqy25VBHLiCrqCuJaWlqdPnyYpmAMHDpiZKX6yebMIds+lV1SpEkCb6v37
9+Oz2bhJPfYRWiAHZEV94ZkiKRgoPNyfsHKVOPa70yuaNWsAaYHGRZ7qUmUr
s4/QAjlNWqibu8KARFIwMLDB2AYXzJc/JvFcCvsN6g/NW3fHVMPYT5JqxhD3
l8NI/0HKydx8V3Aku+fSKxb7hai+uHlzqoTXqaP8bGFuptkxuRi7WxEIWfRh
ftp19WlpaSVLltQo+xNaXL7Ujt1w6RUnjr9vrv2dtUaNGiTZhmjTpg0quGPn
evYRWiAk/QcpkJiqWqDw8AepxOO72G9Qr7h4KR730YX2RfUza/q+BFO/XMs+
QguEpP8gBaMRSalAwMCG1bJ41S72G9QrdPEzK1eI+8thfP755/iYDPHwYXdb
ekhtR3WLCaod5pOSkvA1Zmx+F3bDIlBxdVlcsI/yS7G7u/vDhw9JSmXRokVY
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
tsCffvqJRLKMjAw7O+VtdnyYY6bc2KgfZCxKDfNV9mq6ubnB+k8i9MKFCzW9
yuAy7C20UQKJxQxDqkkkA+mhAFTKPeMuTx73YB+gAOTl9kpM9AJRYNmExZNE
6HXr1mHldOnSlr2FNko+Ga95wwktColk0DJB46RS7hn3vnvvPPsABaRqtVSV
+hxdMB0kQhclxP1BvPHGG6CIuUq1IjCc3fUIBXzk5Y9L4rBhw0iELtin5Ghn
cXRWefYu2sj4ZXyiufpIkFq1apHoBdGsWTOsgbWjS7EPUChgwcA41KV79+4k
Qufn5ycnJ6v3KZmfO9uOvYs2MiClkFhILySZai89SI818P3at9gHKBSw7bfG
qAssniRCQ8CSrlKf4Xzg4Gb2FtrIyLx21MnJkXYvPbRMmr30X09lH6BQwKHD
W/AcXTAdJEIXJcT9rVmzBqdJC2c3dr8j/JNDYbFxNspPDLa2tpcuXSKRe8MG
zd0rrar6srfQRkaF4sr5AFZWVidPniQRa/v27ShWwxQv9tEJz1E5XvndRytn
FDQIZ2+hjQxIqUp9jhYkmUQsEB3P0XrjjSD20QnP0bKF5lIPWEJJ5IYlHRZ2
eGClyhXZW2gjo2PHVigWNCckYkGzhOdolS2bkJt3nX2Awj/p2bMjyg3Wg0Tu
QoeJu7+cnJyIiAgQwtnc/LeQaHa/IzzHAv9QnCmNGzemEv2tt95SN0Kqn8cl
srfQRsPsdzVXgffr149EpmfPniUmKkfY2Vmb75+exD5A4Tm2flrGQnmLqapW
rRqJ4v/vH+eT/7KpAXsLbTRAMjGrhHfogOhq72927Ggr9gEKz3Hp4tt2dsp3
E7CEwkJKojgs7FhFy5bNYW+hjYa9+zbhKy9oS0hkgoBmSeP9d6xjH6DwHH/e
POnm5qreMB8BBoRK9EKEibu/8ePH4zQZ7OHL7nSEF1LH0QU12rp1K4nop0+f
xteYyTHO7C20cXBxQWqglw2k1NPT8+7duyQyzZkzB3Uf0CSEfYDCC+lcS7M3
e+XKlSSiZ2Zm4t3EJUt65Ob0ZO+ijQBIIyRT2e7u6AjpJZEJ5Ebd+/QuxT5A
4YV88EESagQLKYnosLDD8g4PDAkJevjoEnsXbRykpibjhhloS0hkgjZJs7up
VWP20QkvZPKUsagRGBAS0QsXpuz+bty44eSk3CsXbmW9PyyW3eYIL2RjcKSt
+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
JtQLCqGs+Prrr6Uz1HeF4JMLTSpHifcdipvQvr7zZBZM3dIZqlKpXCXt/lQq
lUvVokUL1BJmk2lBapZ436GI81qyncrLrl27SuemrwsWkBeLH64i3nco4qx4
sobZ8V0uJm3p3FSpVC6Udn8qlcql+u677ywWCyqKWoHB4q2HIsumzIJ8WyCS
ITg4ePfu3dK56euCBTACdlSyh+6b11C8+1BkaVDB+CYX0zUmbencVKlULpR2
fyqVytUqPVDs6fhU8QZEEWR0bBJlwmOPPSadlSpDjz76KDnyVP9y4t2HIsiM
uwr0OE6Vykek3Z9KpXK1Dh8+HBNjHCaVYrGuy9S9X3yU1fa8KLM/0iA9Pf3U
qVPSWakyBCNgB0yJCbf++Gp98R5EEeGXOYXp8cZLeUzUmK6ls1KlUrlW2v2p
VKoy0NSpU+nB8tCoOPE2RBGhW0Q05cBbb70lnY+q/wh2kC8D26aItyGKCPd1
cn6Ni4laOh9VKpXLpd2fSqUqA509e7ZSpUqoLoL8/D5KLyfeiShlzLtp2RZH
eVlYWCidjKoLBVNgjdXf7/Pnaol3IkoZs+XlOsEBxiEsmKIxUUsno0qlcrm0
+1OpVGWj5cuX0+PltqER4s2IUsYUBoUaW7+azRs3bpTORNWFgilmxyGMzapF
izcjShnTsWE8zcyYoqUzUaVSlYW0+1OpVGWmDh06UJkxNzlTvB9RyoyXEtPJ
9/79+0vnoOrigjXk0fwHKor3I0qZsWxcNfIdk7N0DqpUqjKSdn8qlarMtGPH
joCAAGOJUUDQ5swC8a5EKQM2ZBZkWW0wPTw8/LfffpPOQdXFBWtgEGzKTQne
84ae/uAT7J/fsEa5MJiOaRmTs3QOqlSqMpJ2fyqVqiw1atQoetT8eFyyeGOi
lAH3xCSQ48888wxXFhWr/iSuqMIgcuqRHlnijYlSBkwZkkeOY1rmyiKVSuX+
0u5PpVKVpU6cOJGUZBz6Fu9vWWvX0x+8nJUZuWGOD8rKlSt35swZlhR65JFH
TKo/CQFhCSwMgk24YESIZeuMeuK9ieJSdsxqkBhlvJTHhIxpmSWFVCqVR0i7
P5VKVcaaPXs2Va19I2PF2xPFpXQMiyKvlyxZwpI8e/bsCQ4Oluqz3FMICMLC
El7YRNfs0TxJvD1RXMqd7dPIa0zILMmjUqk8Rdr9qVSqMlZJSUmtWrVQddj8
/Jal5Yh3KIqLWJCaZXaUly1atOBKns6dO1PJ2isiZmhUnI+DIFA0EBauCMMs
XNDsZ1rxZA3xDkVxEeuerx1g9YPRmIoxIXMlj0ql8ghp96dSqcpea9as8fMz
ao9mIWHiTYriImoFGi/pLBbL1q1bWdLm888/p2anZUi4+OjcBISCYoLgsAQZ
ZsEyXLBBhUjxJkVxEW1rx8JiTMKYilnSRqVSeZC0+1OpVCLq3r07Va0zkzLE
S2iFnafjU8nf4cOHsyRMSUlJzZo1ccEAP79/ppcTH6CbgFAEOB6kIDhcL3GG
DRvmvDfvKi/epyjsvD22MvmLSZglYVQqlWdJuz+VSiWivXv3hoSEoALJswVs
0tMfvIt1mfkpFivMjYmJOXz4MEvCzJw5k0rWQVFx4gN0KxAQZ7M2cyZLqGEZ
jMMF0+MDf5lTKN6tKIzsm9ewQoYx8WL6xSTMkjAqlcqzpN2fSqWS0rhx46hq
fTA2UbyEVhi5/Xw/8vLLL7OkyvHjxxMTE026VezFQEAQFgQHIUKgWAIO48jB
+zvbxRsWhZEJfXPIWUy/LKmiUqk8Ttr9qVQqKeH2z8jIQB0SZfb/zJ4nXkUr
LHyUXi7IsRaxUqVKZ8+eZUmVkSNHUsk6IT5FfIBuCMJC8UGgWAIO4ypWrGhs
KBpg3vJyHfGeRWHhh1frx4QZL+Ux8Wr1pVL5rLT7U6lUglq4cCFVrV3Do8VL
aIWFtqER5Ony5ctZkmT79u02m3EwWZWAIPHRuS0IjrGPrs2GcLGEHfaRj7c0
jBdvWxQW+rd2PiXAxMuSJCqVyhOl3Z9KpZJV48aNjZ0hTabFqdniJbRyjcxN
zqTy8uabb+bKkBtvvJGu+UZKpvgA3RYEh6KEcHFFHibSNZeNqybeuSjXyGfP
1rT4///2zgNMjuJa29pdrXLOOSGQhG2SwSRhX4yxLxjbFxOcwGDsC0b4+idc
J5JFEhKggLgESQgjJBGUs1DOOaxyXoVVzmFZLQYj/2e2RNGqnpntmemZ6pl5
3+c8PGK2p6f6nNPV5+uurgo9lJcu168MAYB0BPUHAHYpKCjIzQ2tC9e5ag3r
JTSWiBW07XRR2ROoypUrFxYW+pIe06ZNUwLkv2rWsX6AATdxkfKVOM0X50sQ
JZSyw2+eX3PfB9dZ1y9YInbDJXVDKznm5kqX60t6AECagvoDAOs88MADqmp9
rUlL6yU0Frc937CZiuPjjz/uS2J89fZZTu70VhdYP8CAm7hIHCXuEqf59cal
hFLFtG+XDtb1Cxa3Df7L11UcpbP1JTEAIH1B/QGAdQ4dOlS7duhlsTb5lZax
+kN6mp55smnTpsXFxb4kRt++fc8uGlivkfUDTAsTR50Va337+hICCaUENDSh
aN1Khe9ea13FYHFY0ZDO7ZuFHspLNyudrS+JAQDpC+oPAIJA7969VdX6WL3G
1ktoLA77XZ0GKoKDBg3yJSWOHj1ar1492WGLivlL27LKgycTR7UoW2lRXCcO
9CUQElAV2f93a0vrQgaLw/5+VzsVQelmfUkJAEhrUH8AEAQ+++yzDh06SH1S
Mzd3VmvG+KWZTWrZvlLZKg9XXHHFmTNnfEmJLl26qJL11caMB47BxF3Kb+JA
XwIhAZWwhl7nzM9Z+tq3rGsZLCZb1//qWtXyJHzSwUo360tKAEBag/oDgIAw
ceJEVbXexvwe6WY3VK8pgcvJyVm4cKEvybBu3bqKFUPjSL9Vpbr1o0s7E6eF
5tGtWHH9+vW+hEPCmlOm7n/4rQbW5QwWk911QxPVr0oH60syAEC6g/oDgOBw
8803h0REhQofNW9nvYTGPNrApq1VeXn33Xf7lQk33nhjaH7CChVGtCATYjZx
Wm5ZRMSNfkXkrrvuUlEe9feLrCsazKNN73FZmWqvIF2rX5kAAOkO6g8AgsPG
jRvz80NvLV1epZr1EhrzYivbdupQKbQoQPXq1ffs2eNLGowePVoJjZ/Xqmv9
ANPUxHXKh+JMX4IiwZUQyw6/1rr63vdZ/SE97OoLQ7NpSacqXasvaQAAGQDq
DwACxaOPPqqq1pcatbBeQmPl2hMNmqp4Pf/8874kwD//+c/27dvLDmvl5s5p
3cH6AaapietqlS2jKc4Ul/oSGgmxinWP37W3rmuwcq3/w51UvKRT9SUBACAz
QP0BQKA4fvx4gwah2SObVcxf0oaZHgNt89p0qJsbmlCidevWfnXm3bt3VyXr
X+s3sX6AaW3iQOVJcakvoZEQS6Blh/Vr5m9+5xrr6gaLYjve69yiYeihvHSn
0qn6kgAAkBmg/gAgaPTr1+/spIV1G1ovobEo9qta9VSkRowY4UvoDxw4ULNm
aAKZdvmVlrPyY2ImDhQ3hubRrVlTHOtLgIYPH64ifv/Nza0LHCyK/fnOs2/j
SnfqS+gBIGNA/QFA0PjXv/518cUXS91SJSdnaqvzrVfRWFgb2+K8imXl5be/
/W2/Qn/vvfeqkvXNJq2sH2AGmLhR+VMc61eMJNyhCUXzcub3uty6xsHCWsEb
V1atHBr3Kx2pdKd+hR4AMgPUHwAEkFmzZqmq9eYatayX0FhY61y1Rmhaztzc
goICX4K+fPny3LJX1a6vVtP60WWMiTNVmMS9voRJwq3CdMMlda3LHCys/fTa
Rqr/lI7Ul6ADQCaB+gOAYHL77berAmZwszbWS2jMsNeanF1S/IEHHvAr4tde
e23ooVKFCuNatrd+gBlj4kz1iFbc61ekJOhnz82/fN260sEMm/jcJSo60oX6
FXEAyCRQfwAQTHbs2FGlShWpYb5euWoBr4AFyZa17dSm7IWy2rVrHzp0yJdw
Dx06VJWsv6ld3/oBZpiJS5Vvxcm+BEuCLqEPTSjarGrRkM7W9Q6mbd8H113a
PvS0VzpP6UJ9CTcAZBioPwAILE8++aSqWp9t2Mx6CY1pe6xeYxWXXr16+RLo
kpKSli1DDxPr5eUtaMMqDz6buFQcK+4VJ4urfQmZhF7lQNe721mXPJi2Pg9e
oOIinacvgQaAzAP1BwCBRfqWZs2aSSXTMK/iQlZ/CIbNan1BzbLXvi644ILP
PvvMl0A/9dRTqmR9BpmfHBPHKg+Lq30JmYReEiC0LGO1vHX9r7auejCxbe9e
27hu6KG8dJvSefoSaADIPFB/ABBkBg8erKrW++owIDAQdlvNOioiEydO9CXE
RUVFVatWlR12qlRlJUN8k2PiWHGvOFlcLQ73JXCSACoT7rqhiXXhg4n9z0/O
vo0r3aYvIQaAjAT1BwBB5syZM1deeaXUM/kVciYyGYhtG9a8Xa6ai/Xmm/0K
8Z133qlK1n8wvU8yTdyr/CwO9yt2N910U2hC0ZwKM3pcZl37ZLkt6XtFpYo5
Eg7pMKXb9CvEAJB5oP4AIOAsXrw4JydU1XyXhQBs2+VVqoWUeH7+xo0bfQnu
vHnzlCS5iaU9km/iZOVtcbsv4ZM0kGSQHV59YW3r8ifL7aYrQnP7SFcpHaYv
wQWATAX1BwDB55577lFVa/+mra2X0FlrLzdqoaLwyCOP+BLWL7744rLLLgvN
T5iT83Gr860fYMabOLlK2Y0Ucbs435cgSjKcPTcf7mRdAWWtjXjqIhUF6Sp9
CSsAZDCoPwAIPnv37q1RI7S2+PmVKq/g1TAbtqRNx2YVQ095GjRocPz4cV/C
OmDAAFWyPli3ofUDzBITVyufi/N9CaIkg6SE7LBFw8o73mP1Bwu25/3rOrWq
LiGQTlK6Sl/CCgAZDOoPANKCbt26qar18QZNrJfQWWhdvlQN/fr18yWgJ0+e
bNw4tHJE47yKi5nQNVUmrhaHh9zeuLGEwJdQvvXWWyo3/nJnG+tSKAvtxfva
K/9LJ+lLQAEgs0H9AUBa8Omnn7Zt21YqnDq5eXNbsyRcSm3qlyMGL7roon/9
61++BPSxxx5TJWuPRs2tH2BWmThceV5C4EsoJSUkMUITilbOLXjjSutqKKts
08Br6tUMyXnpHqWT9CWgAJDZoP4AIF0YNWqUqlp/Uaue9RI6q+yHNWorz8+a
NcuXUG7ZsqVSpdDCZJdUqWr96LLQxO3ifAnB1q1bfQmoJIbKkNs6N7IuiLLK
fvufZ1dylO7Rl1ACQMaD+gOANOL666+XOievQoXRLc6zXkJniQ3+cqWA22+/
3a843nLLLaH5CStU+KB5W+sHmIUmbs8pi6kEwq+YSnqoPJn43CXWNVGW2Nye
l+eVLcEiHaNfcQSAjAf1BwBpxOrVq/PyRPxVuKZqdesldDZYQdtOX68cek5U
pUqV7du3+xLEKVOmKJlwa8061g8wa02cr6Ig4fAlrJIekiSyw0vb19z3wXXW
lVE22PUX1w3dDcvLk47RlyACQDaA+gOA9OLBBx9UVWvfxi2tl9AZb881PDuu
7IknnvAlfJ9//vmFF14oO6yekzuj1QXWDzBrTZwvIZBASDgkKL4EV5JEZcur
XTpYV0YZb+/96Wtnp8x98EFfwgcAWQLqDwDSi8OHD9epE3ps0Sq/0jJWf0im
LWrTsWHZ/JDNmjWTft6X8PXp00eVrI/Wa2z9ALPcJAQqFhIUX4IrSSKpEppQ
tG6lwnevta6PMtiKhnRu1zT0UF46Q+kSfQkfAGQJqD8ASDtQEKmx++rUV34e
PHiwL4GT60XduqGxai0r5qPcrZuEoGXZGo4SFAmNLyGWVFE58z8/aWldImWw
PX1XO3+VOwBkD6g/AEg7Pv/8844dO4ZWN87Nndma0YNJsYkt21cqW+Xhyiuv
PHPmjC+BY9Ru0EwC4e/oQUkVSRjZYeX8nCV9r7CukjLS1va7qmbV0OvP0g36
NWoXALIH1B8ApCOTJ09m5pCk2ner1QxNy5mTs3jxYl9CtnbtWjVjz9XM2BMk
k3ComUMkQL4EWhImp+y+wc3fqm9dKGWk/fL6Jqr3k27Ql5ABQFaB+gOANEWv
GvBh83bWS+gMs/5NW6vy8te//rVf8brhhhvUah0jWa0jSCbhyCuLtQTIr1hL
2qj8GfnURda1UobZtO6XlWlrP1frAICsAvUHAGnK5s2b8/NDby1dVqWa9RI6
k2xF207nV6ocmpazevW9e/f6EqxRo0YpOfCLWvWsHyBmmATF3xXDJW0keWSH
nVpV3/M+qz/4aVd1rC2Ola5POkBfggUA2QbqDwDSl8cee0xVrT0aNbdeQmeM
Pd7g7Liybt26+RKmTz/9tF270CQVtXPz5rbuYP0AMcMkKBIaCZCESYLlS9Bf
eOEFlUXdf9veumLKGOv3/zopr0rX50uYACALQf0BQPpy4sSJhg0bSi3UtGL+
4jYdrVfRGWAiBOqUCYG2bdv61T+LilQlq+hK6weIhTXfJb8kj6SQ7LBezYqb
Bl5jXTdlgG1/79oWDUIP5Rs1aiRdny9hAoAsBPUHAGnNgAEDzk5aWLeh9RI6
A+yXXw4CHDlypC8B2rdvX40aNWSH5+VXXsEqD0E1CY0EKDSPbo0a+/fv9yX0
kkIql353UzPr0ikD7H9vP/s2rnR6vgQIALIT1B8ApDVffPHFJZdcIhVRlZyc
Ka3Ot15Fp7WN/nICkP/4j//wK0D33HOPKln7NW1l/QCxKCYBUpGSkPkVfUmk
0FQ/uRXm9rzcunpKa1vx+pVVK+WKM6W7k07PrwABQBaC+gOAdGfOnDmqar2p
Ri3rJXRa2zVfTv6/evVqX0KzdOlSNfn/d6vVtH50WLmml/mQwPmSAJJIapmP
6y+ua11ApbXdem1D1ctJd+dLaAAga0H9AUAGcOedd6rSaFCzNtZL6DS1vk3O
Lvz9+9//3pegnDlz5uqrrw7NT1ghZ0LL9tYPECvXJEz5oUVUKkjgJHy+pIGk
k8qrwX/+mnUNlaY2/tlLlA+lo/MlKACQzaD+ACAD2LlzZ5UqVaQ6+lrlKgW8
XBa7LWvbqVV+JXFgnTp1Dh8+7EtQBg8erErW++rUt36AmEeTYJ0Va4MH+5IG
kk6SVKEJRZtWLRrS2bqSSjvb98F1l7QLvTkrXZx0dL4EBQCyGdQfAGQGTz31
lKpan2nYzHoJnXb2aL3Gynt9+vTxJRwlJSXNmzeXHdbPy1vIdKzpYxKs+mVj
NSV8EkRfkkGSSmXX03e1sy6m0s76/P4C5T3p4nwJBwBkOag/AMgMpFJt0aKF
khsL2rCoXAw2s/UFNXJDE0p07Njx888/9yUcTz75pCpZn0WMp5tJyFTsJIi+
JIMklaSW7LBm1by1/a+yrqfSyLb+45qGtfPFddK5+SXGASDLQf0BQMYwdOhQ
VbX+pjZDDWOwn9aso/w2efJkXwLBQNy0NgmZBM7foYaSWirHfvXdJtYlVRrZ
Qz9uofwmnZsvgQAAQP0BQCbBNCOx2ofN2+WUlZc//OEP/YrC7bffziQ8aW0S
OBVBCaVfWSEJVjahaIVp3S+zrqrSwha/ekWlimcn4fErCgAAqD8AyCT0EgPX
s8SAN7usSrWQXs7P37x5sy8h0Atw3MwCHOlsEj5/lxiQBJM0kx1e1bG2dWGV
Fvafl9f3dwEOAIB/o/4AIOO49957VdXK8uLlWo9GzZWvHnvsMV+c/8UXX1xy
SWh2+io5OVNanW/9ALG4TcJXpexGio/Liz/66KMq3/o/3Mm6tgq4DXviG8pX
0qH54nwAAAXqDwAyjP3799esGVq0+rz8yit46SyyLWnTsWnF0LOYhg0bnjhx
whfn9+vXT5WsXeo2tH6AWIImQTx7I6VfP1/SQ9JMki00h0mDyjveY/WHiLbn
/es6tAg9lJeuTDo0X5wPAKBA/QFA5tG9e3dVtf61fhPrJXRgTdf2/fv398Xt
urYXUbmEVR7S35Jxf0CSTWXdn+5obV1kBda6/eY85SXpynxxOwCABvUHAJnH
p59+2q5dO6mdaufmzW3N6g9hLKnj+l5q1ML6AWK+mIRSxVSC60uS6LHBVSvl
rnzjSus6K4C28e2r69aoKC6STky6Ml/cDgCgQf0BQEYyevRoVbX+vFZd6yV0
AO2mpM3pcVmVataPDvPRkjcv0E+vbWRdagXQ7vvB2fUWpRPzxeEAAE5QfwCQ
qdxwww1SQeVVqDCyxXnWS+hAmZ7P/4477vDL2zfffHNofsIKFT5s3s76AWI+
ml4TRELsV7ZI4qkMHP/sJdbVVqBs9ivfzMsNeUa6L7+8DQDgBPUHAJnK2rVr
8/LyQjPMV61uvYQOjiV1Le/bataxfoCY7yZhVfGVQPuSMJJ4kn6hgcftauz7
4Drrmis49p2L6obuWeXlSffli6sBAAxQfwCQwXTp0kVVra82bmm9hA6IPdPw
7Liyp556yhcnf/755x07dpQd1sjNndn6AusHiPluElYJroRYAi3h9iVtJP1U
Hvb5/QXWNVdAbNCfvnZ2ytwuXXxxMgCAG9QfAGQw0kHVrRu6l96yYv4yVn9o
d+HCNh3rlz0Pbd68eUlJiS9O7t2799lFA+s1tn6AWJJMgquiLOH2JW0k/SQJ
ZYeN6lTa9u611pWXdds1pHObxqHnodJlScfli5MBANyg/gAgs+nbt6+qWmvm
5tbNzctyq1n2BEcYMmSIL+49fPhwnTqhYYGt8iuhrzPYJLgSYgm0hFuC7kvy
SBKqbKxVLa9+rfwst9rVKypvSJfli3sBAMKC+gOAzObzzz+/8MILK4CDq6++
+syZM76494EHHlD7fK0JY2sz3CTEKtYSdF+SR5JQUtHeeRBEpLPya2wtAEBY
UH8AkPEsWLDgQXBQUFDgi2NXr16t5tW5hnl1ssMk0BXK5iSR0PuSQpKKts+G
YCGdlS+OBQCIBOoPAADi4/rrr69QtqbGaNbUyA6TQOeVPaKS0NvOPgAAiAfU
HwAAxMGIESPUWLVf1apnXZVgKTMJt4q7JIDtHAQAgJhB/QEAQKxI1922bVuR
AHVy8+a27mBdkmApMwm3BF1CLwnAFRwAIO1A/QEAQKy88MIL6gHQEw2aWNcj
WIpNgq6iL2lgOxMBACA2UH8AABATe/furV49NPvH+ZUqr2CVh+wzCbqEXhJA
0kCSwXY+AgBADKD+AAAgJu6++2716Kd/09bWlQhmxST0KgckGWznIwAAxADq
DwAAvLN48eKcnBwp+2+oXtO6BsEsmiSApIEkg6SE7awEAACvoP4AAMAjZ86c
ufLKK6Xmr5STM7Fle+sCBLNokgD5FUL3ASQlJDFs5yYAAHgC9QcAAB557733
1Hi/39ZpYF19YNZN0kDlgySG7dwEAABPoP4AAMAL0tU3a9ZMSv2GeRUXtulo
XXpg1k3SQJJBUkISQ9LDdoYCAED5oP4AAMALK1asUG/8XVethnXdgQXEJBnU
23+SHrYzFAAAygf1BwAAHrnrrrvUSL93mO0Ta3fhO1/O/CmJYTs3AQDAE6g/
AADwyO7du6tVqybVfodKVVay0l92mySApIEkg6SEJIbt3AQAAE+g/gAAwDvP
PfecetzzZIOm1gUIZtEkAVQmSErYzkoAAPAK6g8AALxz+vTpVq1aSc1fNzdv
fpsO1jUIZsUk9JIAkgaSDJIStrMSAAC8gvoDAICYGD58+Nm3vWrXsy5DMCsm
oVc5IMlgOx8BACAGUH8AABAr1113nVT+FStUGNvyPOtKBEuxSdArlkk/SQPb
mQgAALGB+gMAgFhZuXJlbm6u1P+dq7L6Q9aZBF1CLwkgaWA7EwEAIDZQfwAA
EAf333+/Gvv3RpNW1vUIljKTcKu4SwLYzkEAAIgZ1B8AAMTBwYMHa9WqJSqg
bX6l5az+kB0mgZZwS9Al9JIAtnMQAABiBvUHAADx0atXL/UY6LF6ja0LEywF
JoFWEZfQ284+AACIB9QfAADEx2effXb++eeLFqiZmzu79QXWtQmWVJMQ1yx7
2VOCLqG3nX0AABAPqD8AAIibiRMnqodBt9esY12eYEk1CbGKtQTddt4BAECc
oP4AACARfvCDH4RmgKxQYXiLdtYVCpYkk+Dmlkk/CbftjAMAgPhB/QEAQCJs
2LChYsXQ+m9XVKlmXaRgSTIJbmiFx4oVJdy2Mw4AAOIH9QcAAAny8MMPqzGB
rzRqYV2nYL6bhFXFVwJtO9cAACAhUH8AAJAgx44dq1+/vqiDZhXzl7btaF2t
YD6aBFTCKsGVEEugbecaAAAkBOoPAAAS56233lKPhx6q29C6YMF8NAmoiqyE
2HaWAQBAoqD+AAAgcf71r3994xvfEI1QNSdnWqvzrWsWzBeTUEpAJawSXAmx
7SwDAIBEQf0BAIAvzJgxQz0k+mGN2tZlC+aLSShVTCW4tvMLAAB8APUHAAB+
cdtttymxMLhZW+vKBUvQJIgqmhJW25kFAAD+gPoDAAC/KCwsrFy5cmigYOWq
BW07WdcvWNwm4ZMgSigloBJW25kFAAD+gPoDAAAfeeKJJ9QDo+caNrMuYbC4
TcKn4igBtZ1TAADgG6g/AADwkeLi4qZNm4pqaJRXcVEbVn9IS5PASfgkiBJK
CajtnAIAAN9A/QEAgL+899576rHRb+s0sC5ksDhMAqciKKG0nU0AAOAnqD8A
APCXM2fOfOtb3xLtUCknZ2LL9ta1DBaTScgqla3yIEGUUNrOJgAA8BPUHwAA
+M6iRYtyyhTEd6vVtC5nsJhMQiaBk/BJEG3nEQAA+AzqDwAAksHdd9+tRg++
3bS1dUWDeTQJloqahM92BgEAgP+g/gAAIBns2bOnevXqoiMuqFR5Jas/pINJ
mCRYEjIJnITPdgYBAID/oP4AACBJvPDCC2dXDWjQxLq0wco1CZOKlwTOdu4A
AEBSQP0BAECSkB6+TZs2oibq5ubNa9PBurrBopgESMIkwZKQcWkGAMhUUH8A
AJA8RowYoR4n/apWPesCB4tiEiAVKQmZ7awBAIBkgfoDAICk8p3vfEc0RcUK
Fca0OM+6xsHCmoSmYpn0k2DZzhcAAEgiqD8AAEgqq1atys3NFWXRuWoN6zIH
C2sSGgmQhEmCZTtfAAAgiaD+AAAg2fz+979Xowr7NmlpXelghklQVHQkTLYz
BQAAkgvqDwAAks2hQ4dq164t+qJ1fqVlrP4QJJNwSFAkNBIgCZPtTAEAgOSC
+gMAgBTQu3dv9YDpsXqNrUseTJuEQ8VFAmQ7RwAAIOmg/gAAIAV89tlnHTp0
EJVRMzd3ZusLrKseTEwCUbPslUwJjQTIdo4AAEDSQf0BAEBqmDhxonrM9NOa
dawLH0xMAqEiIqGxnR0AAJAKUH8AAJAybr75ZtEaORUqfNS8nXXtk+UmIcgp
k34SFNt5AQAAKQL1BwAAKWPTpk35+fmiOL5ZpZp1+ZPlJiGQQEg4JCi28wIA
AFIE6g8AAFLJo48+qkYbvtSohXUFlLUmzldRkHDYzggAAEgdqD8AAEglx48f
b9iwoeiOZhXzl7TpaF0HZaGJ28X5EgIJhITDdkYAAEDqQP0BAECK6devn3rw
1KVuQ+tSKAtN3K78L4GwnQsAAJBSUH8AAJBivvjii4svvljUR5WcnCmtzreu
hrLKxOHidnG+hEACYTsXAAAgpaD+AAAg9cyaNUs9frq5Ri3rgiirTByuPC8h
sJ0FAACQalB/AABghTvuuEPJkPeatbGuibLExNXK5+J82/EHAAALoP4AAMAK
O3bsqFKliiiRr1euUtC2k3VllPEmThZXhwbcVqkizrcdfwAAsADqDwAAbPHk
k0+qR1HPNmxmXRxlvImTlbfF7bYjDwAAdkD9AQCALeTy0axZSJI0yKu4kNUf
kmniXnGyuLp58+bidtuRBwAAO6D+AADAIkOGDFEPpH5Tp751iZTBJu5VfhaH
2445AABYA/UHAAAWOXPmzFVXXSWqJL9CzsSW7a2rpIw0cay4V5wsrhaH2445
AABYA/UHAAB2WbJkSU7ZCnTfrVbTulDKSBPHinvFyeJq29EGAACboP4AAMA6
99xzjxqX2L9pa+taKcNMXKp8K062HWcAALAM6g8AAKyzb9++GjVqiEJpX6ny
ClZ/8M/EmeJScay4V5xsO84AAGAZ1B8AAASBbt26qUdUjzdoYl00ZYyJM5VX
xb22IwwAAPZB/QEAQBD49NNP27ZtKzqlTm7e3NYdrOumDDBxozhTXCqOFffa
jjAAANgH9QcAAAFh1KhR6kHVL2rVsy6dMsDEjcqf4ljbsQUAgECA+gMAgOBw
/fXXi1rJE8HS4jzr6imtTRyYVyb9xKW2owoAAEEB9QcAAMFh9erVeXkh1XJ1
1erWBVRamzgwpKPz8sSltqMKAABBAfUHAACB4sEHH1TjFfs2bmldQ6WpieuU
D8WZtuMJAAABAvUHAACB4vDhw3Xq1BHl0iq/0jJWf4jdxGniutD8OXXqiDNt
xxMAAAIE6g8AAILGq6++qh5dPVKvkXUxlXYmTlPeEzfajiQAAAQL1B8AAASN
zz//vFOnTqJfqufkzmx9gXU9lUYm7hKnievEgeJG25EEAIBggfoDAIAA8vHH
H6sHWLfWrGNdUqWRibuU38SBtmMIAACBA/UHAADB5JZbbhEVk1OhwofN21pX
VWlh4qicMuknrrMdPQAACCKoPwAACCabN2/Oz88XLXNplWrWhVVamDhK3CVO
E9fZjh4AAAQR1B8AAASWxx57TI1j7NGouXVtFXATFylfidNsxw0AAAIK6g8A
AALLiRMnGjUKzWDZpGLFxW06WldYgTVxjrhIHCXuEqfZjhsAAAQU1B8AAASZ
AQMGnF24vG5D6yIrsCbOUV4Sd9mOGAAABBfUHwAABJkvvvji0ksvFV1TJSdn
SqvzreusAJq4RZwTekHy0kvFXbYjBgAAwQX1BwAAAWfu3LnqwdZNNWpZl1oB
NHGL8o84ynasAAAg0KD+AAAg+Nx5551K4LzbrI11tRUoE4coz4iLbEcJAACC
DuoPAACCz65du6pWrSoa58JKVQradrKuuQJi4gpxiLhFnCMush0lAAAIOqg/
AABIC55++mn1kKtrw2bWZVdATFyhfCLOsR0fAABIA1B/AACQFpSUlLRo0UKU
Tv28vAVtOlhXXtZNnCCuEIeIW8Q5tuMDAABpAOoPAADShaFDh6pHXbkVKuRl
veVWOIu4xXZkAAAgPUD9AQBAGnHNNddUAAfiENsxAQCAtAH1BwAAacTatWuf
AAfiENsxAQCAtAH1BwAAAAAAkA2g/gAAAAAAALIB1B8AAAAAAEA2gPoDAAAA
AADIBlB/AAAAAAAA2QDqDwAAAAAAIBtA/QEAAAAAAGQDqD8AAAAAAIBsAPUH
AAAAAACQDaD+AAAAAAAAsgHUHwAAAAAAQDaA+gMAAAAAAMgGUH8AAAAAAADZ
AOoPAAAAAAAgG0D9AQAAAAAAZAOoPwAAAAAAgGwA9QcAAAAAAJANoP4AAAAA
AACyAdQfAAAAAABANoD6AwAAAAAAyAZQfwAAAAAAANkA6g8AAAAAACAbCIL6
AwAAAAAAgCCD+gMAAAAAAMgGUH8AAAAAAADZAOoPAAAAAAAgG0D9AQAAAAAA
ZAOoPwAAAAAAgGwA9QcAAAAAAJANoP4AAAAAAACyAdQfAAAAAABANoD6AwAA
AAAAyAZQfwAAAAAAANkA6g8AAAAAACAbQP2lI0UTJqx++umS4mLbDQGA+Ckc
OnTrwIG2WwEA2cXuKVOW/eEPy7p0KZo40XZbYiN9W549bH7rrR3Dh9tuBZQD
6i/tOF1SMqFNm2EVKmx5+23bbQGAePjkxImlDzwgZ/HounVttwUAQhxYtEgK
V207Royw3aKksHP0aOl5tG3s29d2i7ySvi3PHqRAHVmtmkRn+R//WHLqlO3m
QERQf2nH9g8/VF3f5K99zXZbwDLHtmzZ3K9fwV/+Mv+OOxb87GcFf/vblv79
j+/YEcBfCc5OrHNkw4Ypl14qp/Dw/Pydo0apDz85duzkvn1OO336dNivFx8+
7Nws0q8Ym506eDApBwOZjmTmjuHDVz3++JLf/nbuT34y/847l/3hD2tfeGH/
woW2m+Yzy//nf5ziYlKHDrZblBRmfPvbzsMc26SJ7RZ5Jb1aLh240aWXa5kh
l7Z/8MHwvDwJ0NRvfevo5s22mwPhQf2lHdM7d9a9384xY2w3B+wgneri++4T
+eC8GiobUbnysi5djm/fHpBfCc5OgsCBxYtH1a4dkn4VKzqHxyz4xS+M4zq0
YkXYPYxr1szLZhPbt3duNrpevaQcD2QuJ4qKFt9778iqVd0nnbJxLVps7Nv3
dEmJ7Zb6Q5aoP6MXlf89nSblX3q1fO+sWZFOnEi26oknbLfaHwoHDx6WmytH
NKZ+/UMrV9puDoQB9Zde7F+40NlXzLjuOo9f3Dtz5uz//E9tc26+ufjQoaQ2
FZKHKAjpVKNfR8Y2bXp4zRrrvxKcnQSBI+vXj2nUKFS35OVt/+AD55829Olj
HNHmN9907+Hw2rXGZht69nRvdnLvXmMzOeuTdFDJgP7KOjtHjRpdp46XknXq
FVdIvtlurw9kifqbduWVzsNc+Mtf2m6R1/M9gC2Pwt4ZM2JVfwV/+5vtVvvG
1n/8Y1hOjhzUuGbNjm7aZLs5YIL6Sy+kuzO6i33z5nn5YuhMPPeLaTdeDhQi
hUbXrevlUjK2ceO4BZEvvxKcnQSB49u3j2/dWjV18b33Gn+VlhuH495G2Pja
a8Zmc265xb3ZrnHjjM3Wv/RSUo4qOdBf2WX35MkjKlXyXrVOueyy4sOHbbc6
UbJE/R1culSPH5A+M9LggVTi8XwPYMujkOXqT1jw85+r45rYvv2JoiLbzYFz
QP2lEVI9uke+zfuv//LyXaqpzOB0ScnHF13kvmqMrlNnVK1a7s+nd+5s61eC
s5Mg8MmxY5O/9rWz7czJObx2rXubcS1aOI9l8oUXureZf/vtxiGPql3bPfRu
1RNPGJsdXL48KQeWHOivLFJy8qSRitrU6zxhLQMGrWWJ+hOKjxzZM22aWEAe
qXs/34PW8iig/uSiow9tyqWXSsdiu0XwFai/NKLgr38N02Pk5BxZt67c71JN
ZQZb+vc34jimYUM9c0jh0KHuwVrbP/rIyq8EZydBYN2LL+oWioILu82iu+82
Tm13haMGjhrmHgAw+/vfd24wtnHjZBxU8qC/ssjmN980RV9+/ppnnz28evXp
Tz45dfCglLWzbrzR2GZkjRrFR4/abntCZI/6CxoZeb671d+M665b8tvfRrFd
Y8fabrXPzPnhD/Xhb+jTx3Zz4CtQf+nCJ8ePR3r1STqNiN86cUIqQ7GCv/3N
+NbOkSPVnw4sWeJjO49s2KB2q0zP+HRo1SopgJc++ODyP/5RSnr3CL2jGzfK
JWDl//7vsoce2jZo0LFt26L/UElx8aGCgsL331/15JPigbXduu0aNy7S1B/7
5893tkrMPaHisa1bjW0COJZJDx3UAmHP1KnODUQZGYH++BvfsPIrwdmJFyTW
+2bP3vR//ycpuuKRR7a8/faBxYvl9IljV2F37jx5Zc9hN9v6zjvGsRRNmuTc
4NDKlWF7gLXPPWfsanS9es4NFvzsZ5HadmTdOjkfVz/99JLf/W7ZH/4gJ6mc
U1Huq0c6wcV7G199ddUTT8iZ6O5SPLo39f1VuRxYtGjT66/LcUknI/4REbT9
ww/LlTkx9U4GiaSibCmtLfjrXxffd9/KP/1JIrJ31iwvX3Tifr/AyEOFoZXE
9kybVnLypNGLHlm/PuyvHN20ybmZdNHq80gJJheI9S+/LD+69IEHNvTsuXvy
ZC9iM6bwRVJ/J3bv3vjaaysefVS8Kpm5deDAsJeG+E6NUv/OQY8uMjzvfCdL
3GWEL4rJz4Vtnvfkj/V8j9LyRFzqb8pp3OqvcMgQj9+NKZesJ16UH3JOfTO2
adNPjh3z6AFINqi/dGHTG2+oM2jLgAFGlzKicuUTu3aF/ZaUymHLxXO+XqmS
j+2c+d3vOnc+79Zb5UO5BJi/m5srQk+VNMVHjqx4+GH3mKKPL7oo7A1A6UBE
Qg6vWDHs4Yxp0GDNM884xxiIcJZux9hMKm3nPk+XlEzq1Mlo4cFly3z0TOI4
x1Eom3/HHe7NZv/gB8ZmImxT/CvB2Um5HF692phMQJvk5Nwf/ejknj3e9xaW
1X//+1dXwMiP4STbjQas6drVucGGXr3CtlNOunOOyDUzzOZ+/dw/t2v8+BnX
XRd2hyOrVVt0991h3eg+weV8NPYjp+dXjYnFvanvr6IgddHkr389vH+qVpXu
K+xcl7H2Tk4SScUdw4dPveKKsN+d1LFj2ASIhNGGSBl7cu9etbCXNpFIUk8a
vy4+DPt1I2fkKiYddWmEK0hIl5XNIOG0CW3a7Jk+PdJRxBG+sOpvY9++0jb3
CVI4dKjx9VhPjVL/zsGYXOR8HDPMMR+UqLZyzz6nzbrhBmPPsSZ/rOd7pJYn
6FK/Us4gEfUXUy5ZTLxyf0hQc1wrW9e9u0cPQLJB/aULky+8UM6daVddVeo6
B8UK/vKXsN8Kgvpb16NHpJ9e+sADcgmO1AsNK6tbTuzefc4RTZs2oV27cg9K
9um8W174/vvGBuNbt3ZehtwjDJf/v//n5Xj3zpxZOHhwIrZ78mSPvnWOHlQm
fbh7MylLjM3Czh6Z1F8Jzk6iI1saFazbxrVoIVH2uEM3p/bvd17+Zt14Y5SN
1Wmubc7NNzv/OvcnPwnbQqlmncm8deBAY4NjW7Y49yMnnftmu9ukWnM/9HGf
4EsffNA8d74sAGJ1b0DUX/HRo+4FONw255Zbio8ccX4xvt4pPl9pJJor//Sn
cn904V13KXlVLoaKFIdHehwgnfPxHTu0qYP6+OKLjZ9238QrPnzY0Aj6BXZ3
gq1/+eWIx5WT416TPe7wudVfaPaksonrw+bh7o8/dn49plPD33MwJhclSf3F
kfz+qr+4XZp4yoXFX/UXJZcsJl6UH9I4CzzZbQCHVGUnqL+0oGjCBGfv4R7t
NrpOnbDnlHX1F5qhK8LVU3Wk5rtO7kuMo1o+umlTlMWnDJN+ydmw2TfdZGyw
oVcv9Se5GI1v2dL5J9GGHsd4RJGuHm3SBRd49K35kCs3N2w5557tP8rAvyT9
SnB2EoXQmkTeYjQ8L+9QQYGXfbpZ1727c1crHnssysbL/vAH58ZjGjbUfzp9
+rRzPKdRPDsHxC79/e+df5rYvr3xK16u/vpXDixa5PyucYLL1dz9LVUAxOHe
gKg/L9pBmSidk/v2qW8l0jslkooFf/mLx++KAPRy+Mseesj44rQrr/T+PH1t
t27G17cMGGBsI/WzsY0ujI0EG9u4cbQrSFl6G2tkxxe+Upf6G1m9etippbSN
qlnTOa7V+6lR6us5GKuLkqH+4kt+f9Vf3C5NPOXC4qP6i55LthIv+g9plnXp
4txg46uvenQCJBXUX1qgyuBxLVpI/1xadvfGfZNtXY8e7i/umzt3ZLVqoVvK
rjEMw/Pz1Z/8nRHC/VwyQRtRpYo6akGqF/dRTLnsstDNald3LRcj55X96ObN
xq11Ka2VZF7/0kvGd8M+YwpLKtXfx9/4xjlf7NQp0pbGlH3e14X061eCs5Mo
GA/ahpWNLN3Qq9eKRx91P79Y8POfe9mnmzk33+zcz7ZBg6Js7L6xc2TDBvWn
A0uWOD83av5Vjz+udyJnhPNPS/77v50/EXoRI1xtM7ZpUyl3w+Rnhw7OlzW8
nOCqAIjDvanvr9xs/+CDsAc1oU0bOVXdnxf89a/qi4n0TnGn4r45c9w7H9es
2bxbbw077tHLnEjuh+nDykpBqfY39OlzaMWK6Mu7i040G+y6G2PcoJCw6rtt
cVxBtg4cmHj4SsO9yViuOUtZ76dGCs7BKC6KpKFOf/LJqNq11VnmNvc+nXcw
4kv+WM/3KOovEZcm6M9I+Kj+ouRS0BLPrf429+vn3GDebbd5dAIkFdRf8Dm8
erU6a5xzO6x/5RXjpAtpw8j3o1I2p5a7fxD5tqV//5N79hxZvz7MC4BltqxL
FznMUwcO7Bg2bFTNmsZf9y9YoHZuTHg4vXNnXTPI1WTpAw8YXzREnHsk4eqn
njp18KAxnc6CX/zC+/GmUv0Zby9GWb97+rXXnvMTkXVTkn4lODuJRPGRI0Yg
1jz7rHODeT/9qXF+lbtPN6EHducuVmjcTTVbdeiQ8QKsnLnqT8YI6qObN8ul
+atz4Zpr1GafHD9uPBY0lpWf9b3vGQc+49vfVhPRfHLixI7hw90noJy/+uth
CwCp0KSe3/L227unTJG6SGqMBN1rcQ7Aqd/8pvHTc3/8Yz1L1f6FC41bDaNq
1TpddvWMu3dKxFfuuTc3vfGG/uuBJUuMaMrRleuBEzt3Rl/sT2pyObpVTzwh
gXZPnyXIX53bj2nQwNhs4nnnOTdwvs8bNsGkoz5UUCC5LQlmfFdsxSOPJB6+
0gjqb/FvfrN//vySkyfFmdOuvtr91+gtd58apck5B727yMvbcwaHVq0ymvTx
RRc5dUGCl2aP53uUlifi0gT9GQm3+htdr96Edu0i2czrr48e4rC5FNPGqen8
o/tBLuvlug5SAOov+Cz57/8epm6X7d2rPxTNMrJGDfM8ffvtSDuxqP6cxafU
ADP/4z+MDRb+6lfOPRQOGWJsoO+vyj+kBtbmvHleWvbKuXFfa9Prrzs3KCku
NhaPEx8q9zr7Z+NNw3KO9/rr3f1hTDb5a1/z+FvGao9hp0BRGGMmnQMIU/Mr
wdlJJI5s2GAEYsewYc4NTh04sO3dd7XtHDmy3H26cY9KDbvSnxOjwlzWpYv6
3PkMUd0xcA4TFcWnXmJyzrEWspwc52lyYtcu4xwZU7++0RW4Xxt0zirjPsGl
NHJPvpege22pv6MbNxq/O751a+lsndu45906uHRpaQK9U9y+kp7KuFfgHle8
c8wYY+deVgja2Levx+5Lor+hTx/jaeDG114zNtN38MI62Xm87gQz5j4KzXx7
7qOiuT/5SeLhKw2n/oynlrIrY4mZKZdeGqXlYU+NZJyD3l1UGrv6k/SbeP75
zq+IE/SYBEWCl+YE1V+CLk3Qn5GIdb2/8a1a6e96zKWYNk5Z528g55fxLWb+
DAKov4AjvagaTu9e1sEYTT0sqo6wpf6kezE2WPvcc0ZLiiZOdG5woqjI2MA9
oX0kxjZp4vzi+ldeMTbYN3eue5CJ09yvqERHFOUnx48nYl7eICgtW4LZaOrC
X/4y0sZzbrnFueWIKlW8Ho4fvxKcnUTh9CefGPdPRtetKzVMpOlz48M9BeLx
wsLoXzEWap96+eWqtc5XkJY99JB8GJqSwrGlWivKGMZsPOtxz25klGGKGd/+
9jmb5eZGGSV1aMUK9x4SdK/H/kqKtHm33pqIGWuUizeM3y18/33z0EpK5IvT
r7lGW9gFEdxE6p3i9tWWt982Wht2oZzQy9eObUTZeWnt5rfecs91GcmmX3vt
iZ079XdP7tljPIB2ltOGtBxVs6ZzDhwjwYbn57unSDVmJZ1y2WXq8wTD51Z/
7txe/JvfROpqPJ4avp+DMbmoNEb1J+6SDYwG7xw9OspXwhL90pyg+kvQpQn6
MxL+qr+wuRTTxinr/A3cF8Fy1/OCFID6CzhaKx1audL4k/ucCnXLY8aE3Y8t
9eee4dA9v4H7WZvxrn1Y9Se6eOfIkRv69Fn997+veOSRxffdN++224w9u9Vf
qeuVE6cZM+cHDaMYcw4UMRDJ4NwyplelfPmV4OwkCu5hMMomdeiw8K67pEbV
6xnFzb5584ydn9q/P/pX9kyf7txeShGpjffPn+8+zeWiLMWn/nDFww/Lh/Nv
v9255co//cm589VPP220J+zigysefdTYTM9uYd7eadQo0oEk4l6P/VXi466n
XnGFc4eG9HYeeEzE2jvF5yt3NMUhbjO2Kfjb3zwehfzosocecg8GC2vTrrrK
eSPLmGVreufO+k9zf/xj55+MsR9GgoUtsxf87GfObT6++GL1eYLhM2d9qVbN
/YbjmmeeOef0zMuL1PJIp4bv52BMLiqNUf255xQybpi4iePSnKD6S9ClCfoz
Ej6qvyjdrPeNU9n5Ozm+fbuxw4PLl3v5IiQV1F+QKSkuHte8+bBwC+so3Dfl
Is13YUv9qaVznLgHdhojcwRjdI1T/Z3+5BO5pkRayCn6JUYhP+de/m9Y2V1c
YzRL0FDJoG3i+edH2tK40Tr5wgtT/CvB2UkUdk+Z4lRPYU1q2g09e3qcKt/N
3pkzjR1GWUtXISW08QL+3lmz1j7//FeJWqmSvhnrVA1TLrlEPhnfurXzu8Zj
KWOc87AIg3CM9/TF9CpXxglurEnhJBH32lJ/xovJIr1Px3JljLt3is9XS++/
P45DXnTPPd6PqLQsIfdMm7bq8cdn3Xij8Yq0YbvGjdPf2vbuu+d4smJFlfly
UTPkpPEgqdwrSKkrjXUpnmD4zBUfwr2RLaLmnJ+IrP4inRq+n4Mxuag0FvXn
nv9n9ve/H2nOn0QuzQmqvwRdmqA/I+FWf5ISoqYjmdMn3rtZ7xunsvN3cmLn
TmOHXgafQ7JB/QWZbYMGhb0+avRKEE7bN3eue8vMUH8ndu0yhyXEconRFPz1
r+6NnW9wBBPzpcWqVcNuJtWaMbpVnJbiXwnOTqKze/JkLxOVT+/c2Z2lXji0
apWxKy9DH43XGNf16OGc3MP5DPSccZ45OYcKCpxfFEFhCCvjDvaoWrXCNsD9
stjOUaPUn7xUSpq43WtL/S34+c+df43poXmCvVMcvjKi6dFiWv/FzeE1azb0
6mXMK6vMuexs8ZEjxkSRO4YPL3U92h5dt64x9D2RUjyR8JVGWO3dwLv6i3Rq
pOYcTFz9HVy2zIjg+NatjRf6NAkmf4LqL0GXpkz9JbLeX+Ibp7jz1xzdtMnY
YbmvCkIKQP0FGbXq7sT27cPOq1ZaNonKpI4djTNLL5vrJAPUX/Hhw8bDIG1S
NY1r1mxSp07RLzGKU/v3hxb0Cbef6LPxW8e49ok5JwLSuDtbY2xVCn4lODsp
F9mnVHTG2FG3OYeueSf0on3sFz5jes+5P/6x82nguhdf1Fsa6tKYd909Vta9
lFvYkagbX33V2GzfnDnqT7EWAPG512N/tbZbtwW/+EUituaZZ87xj+tlao8T
FPjSO8XqK3dr5btuk8/Ht2yp/3f10097OaJycc87Pf3aa50bzL/zTudfl95/
f6nrztvie+81dptIKR53+BSpUX+pOQcTVH+SihPatHFuNqJKlbADBUv9SP4E
1V+CLs0S9Zf6zl9h3JMc5mEADKQA1F9g0XP3bejdO8pmYSZny8lxzyuYAepv
Q8+exhfn/fSn++bOVVMdKox5p8Oqv8X33Rf2OjWsbBx7ua9lGazr3l20RiLm
XKktOu5yS91ON3BP2xVlMtgk/UpwduKdY1u3Fr7//opHHw3NuhluUaQTRUWx
7rOkuNiYudT9Aq+bg8uWRUrRYa6XJsa3ahVpS/cLs+45l/SV3Ym7itbvncVX
AJTG6F5bc34ab3UNc0wIGR2/eieFR1+tefZZ54ejataMdJ/QO1LJ75k2zWlR
Bk9OueSSc/rPc+f42jlypPOvE9q2LXW9omtM+VWaWCked/gUqVF/qTkHE1F/
EnH3XNbOmf9NnySc/AmqvwRdmiXqz1bnv3/BAue3Rlav7uVbkGxQf4FFvSg9
qlYttSJ5JIqPHjW00rBwE4S6e9fDq1cno9nJU38Lf/lL54djGzc2RrVJH2Xs
2V1fSTFjbGOYaMOYjjeV6/0dXrPG+O6cW24J0yTXCBzndHyp+ZXg7CQ+ZA/u
ldSMhfM8YqxFuGfq1HK/IjW8USx9lfauxZKi3M1wTrOvcL/IY8xtXlqmWI2X
d0ZWraqH58Wt/pyU696U9VcGerD9V33Iyy8b23xy4oSIsonnnXd2oa62bQ8s
XuxL7xSWKL5yRzPxF2oMyRYl7SVLx7ds6dzSmHRacmZ0vXrODYwpl8c0bOiW
lomU4nGHT/0pNeovNedgIupv+R//aLRwye9+F/ZYFIknv8fzPVLLE3Rplqg/
W52/MTd1pFksIMWg/oKJ9JZqISe5Tu2dOTO6GeWl2IjKlY0C2N27rn/ppWS0
PHnqb/b3v+/80C0EVj3+ePRLjFz3RWoZzVv0618b35JO2/vxplL9Cca6S8Nc
s7xue+89YwPjzabSsiXFlz30kPyulECL773XPeeqL78SnJ2ERb646J57tK14
9FGjEDWm2RwW7yNFY6ibuxwNS6RXuhbdfbex5fYPPwy75ei6dd3zMxQfPmzM
LjKiUqWDy5Y5t3FPnDjvttv0Xz0WAAm6N2X9lcGp/fuNZ7Ujq1UzJJXxxE38
KT1YIr1T3L6SaBqvCs6+6Sbju6LRlt5//6zvfU+KLmW7J0+O4oFjW7cavyXV
YNgHMe7ZIdxHbUzDYqwCr8aCGiRSiscdPvWn1Ki/1JyDcas/91AK6VHdKyA4
SfzS7PF8j9TyBF2aJeovZZ2/gXHGuSUnWAH1F0xWPPKIcQ7Gaiv//GfnDosm
TTI2GNu0qZzpIh4jDeaPj+SpP+MKIpfdzW++eerAgdKy5aVWPPaY2wnGJcbo
2aROOLJhw/Ht240pFid16uRxDb7SlKs/t/dG1aq19Z13SoqL5QK96Y03jPf0
xYomTDB2MvdHP3JuMO3qq40BY778SnB2EhbnLJrKpPbTcklK6BUPP2xsEHac
TLnI+eXcSZRVC524S2tlohSMLeUUMJb8PnvqhXv/t9S1JMSwshV7xZMndu6U
phb87W/uoYbbP/pIf93rKKPE3Juy/sqNsVTBsLIpZLcMGHBi92756dVPP210
F/PvuKM0sd4pEV/Jrxt/WnT33XqG9mNbthjLKwzzMN36hHbt3Cfd2m7d9s6a
dXLv3mPbtu0aP37BL37hPiL3Yql7pk4Nm8bKwj4HT7AUjy98itSov9KUnIPx
qb/9CxaYizzm5Ei4D61c6TY9RXbil2aP53uUlifi0pSpvymXXSZiKopt//BD
703SBCrx3MhmznQ6tGqVl29BskH9BZDiI0dG1a7t7jBjMhFQziGjxwsLI205
olIlHxufPPUXtpCQC824Fi0iHZrzEnOooMC4LazWRysNtw6O99tTotOnd+6c
iMU6Abux7Gx0c6+3eGr/fvdm7hdFE/yVoO3ETWi+FNeVTqrc2T/4wYKf/Wxi
+/bGn+QqKZLT484NnJe/SR07evmKe6xUyHJypJpyb+x++j8s8qLeIg2MAji6
zfjOd5w3BzwWAAm6N2X9lZuDS5caHUV0Uw+jE+mdEvGVVOBhozmuWbOwPz3r
e98r1wPu8ZNebFzz5u6bZpI5keYDkfI+7NoBCZbi8YVPkTL1l4JzMA71J3ot
Srq6TaoU9cUEL82lns/3KOovEZemTP2Va3otziSpv9R0/gbORYg83vyEFID6
CyAbeveOtdMIa+t69HDu1nhDP2zvmjjJU38lJ08ay7oZ5r7o60uM9GCh+RMc
fxpTv766OVlatmq2cZ0aUblyfKs8p4DDq1dH94M26XXdi0TLcbm33Dd7tr+/
ErSdhMW9rG0kk3NEz3odB6FJz/TrTjk57qG2YZEi32jG1MsvD7vlmq5d3W2O
8gpYpAeLbhtdr96xrVud3/VeACTo3tT0V2FxT48QyUSdqZGWifROCfpqS//+
Hr87oW1bLwuOSG9pTNdZro2sVi3SgHn3g0tlyx56KOz2iZficYRPkTL1V5r8
czAO9eeemzG6afWXYPIrvJzv0cesxu3S7FF/iXgp1h9SHNu27as0yMsL+JLK
WQXqL2jIldd9szc+E0XjvBl7aNUqY5ldd++aOEld7+/oxo3ukljblrffNpZx
15cY98yoxkyq7pcd3LPlB4fDa9aMa9YsevSl0ju2ZYv7u1LtjK5b95wEqFxZ
C2G/fiWAOwmLVM5hTwqnSRF4YMmSWPds4JwYweMsr+7FeXVtYGBMqiY2vlWr
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
zpfOUORJ17JZJtx/StwbKYuIvofgHhJZ6qget23bpj5Rbz9J4rmfKUvhrTZ2
DiqTinStN9T7dLrWjT5JUazN1o/zjNcGS7/MigEDBqj/ldpb6Rf3i05hJaR+
UimOjdLgSPiYsQnmjG6Je5oRibX6k9Z6+kmZ+3G88Tqb3q0IqO3nImoibKxj
zZnSwGR7WH96iWxMXlq9erU7DxUlJSUHDhwoKioqLCzcuHHjoEGDurpGgKib
G84R1HpcvX6L0MmxY8fUX0ePHh32SAEggKD+ANIdNebTfVtYTxEwZswY5+d6
Rrhly5aloHl6GJh7+nHdEvW8xiNShHT9EqmLvE8kooZURZp2Q9VyzrInEdSb
lX379jU+990bceC9DXrMWNhpVKdPn67+qkZF6vGTxjSzikWLFhnFs+CeEiQS
qkZVwr979+7RDzCmZguqDBZ1YGypK1u9VJ9+0uE+xhkzZqg/OR/3qFfGevfu
Hb3BkUhlxnppieDWhqIp1LMhPWRUPUFzy1LZUk01LBuoT/T7aFFwTqRTGnvO
BCfb3f70GNmYvKRVqh4HIh6YPXu2nDv6hUQnxn0MdYNFn2L6Ma5xEdFITNUG
qXn5FAB8AfUHkNboMZ/O0TsK/bKGUR/q6TFT856+rh+M6cedLdm9e7fHvekX
/RS6jPSCuqPufHNHo59fjB8/3vsOo6B0Ss+ePY3P/fVGfHhvg36EEXatOv1Q
QCmC6Atq6+cXzoF8U6ZMGewNFRf1plK5eiemZgtqAhD3+27r1q1TW+rJHpct
W6Y+cT98VCX6iy++qG9HaLHz4YcfRm9wJFKZsdFRdzPCLg9aVFSkWqInOVFT
l7jDpEcw6llK1Nuaokpeiowx/2SsOROcbHcSU2Rj8pJa20LrykOHDum5ehRy
sZDzSE8sY4wA0bpVvYqoloWVrI708FoOUG2f7LUFAcBHUH8AaY0qYObPn+/+
04IFC/Tl3vmAzF2mRkKu+Es8E2kZZT2HnnvgkPeWKPSKfq+99pqe+NHjJC3y
E+oRgLEEhkIP2/NrSe733nuva9n7YsbnCXojxRHR77KFXVZMPaGQ/6r/1Q8d
CgsLjS1lb6+//nrXhGd9UWIqbM3sJKZmHzhwQG3sfoij397St1b0Kmzuql6V
08433bTYEYfHdJgKvzLWl5xRj43CDonUc6qoJ2h6OKVblurlZvQrk2omSeP1
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
    "], {{0, 781.}, {597., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{597., 781.},
  PlotRange->{{0, 597.}, {0, 781.}}]], "Input",ExpressionUUID->"8c8219cc-3e0e-\
40ec-b219-77efd20207c3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"generateClosNetwork", "[", 
   RowBox[{"numRacks_", ",", "serversPerRack_", ",", "numSpines_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"servers", ",", "tors", ",", "spines", ",", "edges"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"servers", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"\"\<S\>\"", "<>", 
         RowBox[{"ToString", "[", "r", "]"}], "<>", "\"\<,\>\"", "<>", 
         RowBox[{"ToString", "[", "s", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "1", ",", "numRacks"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "1", ",", "serversPerRack"}], "}"}]}], "]"}]}], 
     ";", 
     RowBox[{"tors", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"\"\<T\>\"", "<>", 
         RowBox[{"ToString", "[", "r", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "1", ",", "numRacks"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"spines", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"\"\<SP\>\"", "<>", 
         RowBox[{"ToString", "[", "s", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "1", ",", "numSpines"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"edges", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"servers", "\[LeftDoubleBracket]", 
             RowBox[{"r", ",", "s"}], "\[RightDoubleBracket]"}], 
            "\[UndirectedEdge]", 
            RowBox[{
            "tors", "\[LeftDoubleBracket]", "r", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "1", ",", "numRacks"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"s", ",", "1", ",", "serversPerRack"}], "}"}]}], "]"}], 
         "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "tors", "\[LeftDoubleBracket]", "r", "\[RightDoubleBracket]"}], 
            "\[UndirectedEdge]", 
            RowBox[{
            "spines", "\[LeftDoubleBracket]", "s", 
             "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "1", ",", "numRacks"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"s", ",", "1", ",", "numSpines"}], "}"}]}], "]"}], 
         "]"}]}], "]"}]}], ";", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"servers", ",", "tors", ",", "spines"}], "]"}], "]"}], ",", 
       "edges", ",", 
       RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "10"}], ",", 
       RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredEmbedding\>\""}]}], 
      "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"generateMeshNetwork", "[", 
   RowBox[{"rows_", ",", "cols_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nodes", ",", "edges"}], "}"}], ",", 
    RowBox[{
     RowBox[{"nodes", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\"\<N\>\"", "<>", 
          RowBox[{"ToString", "[", "r", "]"}], "<>", "\"\<,\>\"", "<>", 
          RowBox[{"ToString", "[", "c", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "1", ",", "rows"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "cols"}], "}"}]}], "]"}], "]"}]}], ";", 
     
     RowBox[{"edges", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\"\<N\>\"", "<>", 
             RowBox[{"ToString", "[", "r", "]"}], "<>", "\"\<,\>\"", "<>", 
             RowBox[{"ToString", "[", "c", "]"}]}], "\[UndirectedEdge]", 
            RowBox[{"\"\<N\>\"", "<>", 
             RowBox[{"ToString", "[", "r", "]"}], "<>", "\"\<,\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"c", "+", "1"}], "]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "1", ",", "rows"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", 
             RowBox[{"cols", "-", "1"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\"\<N\>\"", "<>", 
             RowBox[{"ToString", "[", "r", "]"}], "<>", "\"\<,\>\"", "<>", 
             RowBox[{"ToString", "[", "c", "]"}]}], "\[UndirectedEdge]", 
            RowBox[{"\"\<N\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"r", "+", "1"}], "]"}], "<>", "\"\<,\>\"", "<>", 
             RowBox[{"ToString", "[", "c", "]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "1", ",", 
             RowBox[{"rows", "-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", "cols"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", 
     RowBox[{"Graph", "[", 
      RowBox[{"nodes", ",", "edges", ",", 
       RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
       RowBox[{"ImagePadding", "\[Rule]", "10"}], ",", 
       RowBox[{"GraphLayout", "\[Rule]", "\"\<GridEmbedding\>\""}]}], 
      "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"clos", "=", 
   RowBox[{"generateClosNetwork", "[", 
    RowBox[{"4", ",", "4", ",", "2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mesh", "=", 
   RowBox[{"generateMeshNetwork", "[", 
    RowBox[{"4", ",", "4"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Labeled", "[", 
      RowBox[{"clos", ",", "\"\<Clos Network\>\"", ",", "Top"}], "]"}], ",", 
     RowBox[{"Labeled", "[", 
      RowBox[{"mesh", ",", "\"\<Mesh Network\>\"", ",", "Top"}], "]"}]}], 
    "}"}], "}"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"serverToTorLatency", "=", "100"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"torToSpineLatency", "=", "200"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nodeToNodeLatency", "=", "50"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"calculatePathLatency", "[", 
   RowBox[{"graph_", ",", "path_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"latency", "=", "0"}], ",", "edgeType"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"edgeType", "=", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringContainsQ", "[", 
             RowBox[{
              RowBox[{"First", "[", "edge", "]"}], ",", "\"\<S\>\""}], "]"}], 
            "&&", 
            RowBox[{"StringContainsQ", "[", 
             RowBox[{
              RowBox[{"Last", "[", "edge", "]"}], ",", "\"\<T\>\""}], "]"}]}],
            ",", "\"\<server-tor\>\"", ",", 
           RowBox[{
            RowBox[{"StringContainsQ", "[", 
             RowBox[{
              RowBox[{"First", "[", "edge", "]"}], ",", "\"\<T\>\""}], "]"}], 
            "&&", 
            RowBox[{"StringContainsQ", "[", 
             RowBox[{
              RowBox[{"Last", "[", "edge", "]"}], ",", "\"\<SP\>\""}], 
             "]"}]}], ",", "\"\<tor-spine\>\"", ",", "True", ",", 
           "\"\<node-node\>\""}], "]"}]}], ";", 
        RowBox[{"latency", "+=", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"edgeType", "\[Equal]", "\"\<server-tor\>\""}], ",", 
           "serverToTorLatency", ",", 
           RowBox[{"edgeType", "\[Equal]", "\"\<tor-spine\>\""}], ",", 
           "torToSpineLatency", ",", 
           RowBox[{"edgeType", "\[Equal]", "\"\<node-node\>\""}], ",", 
           "nodeToNodeLatency"}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"edge", ",", 
         RowBox[{"Partition", "[", 
          RowBox[{"path", ",", "2", ",", "1"}], "]"}]}], "}"}]}], "]"}], ";", 
     "latency"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"closPath", "=", 
   RowBox[{"FindShortestPath", "[", 
    RowBox[{"clos", ",", "\"\<S1,1\>\"", ",", "\"\<S4,4\>\""}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"meshPath", "=", 
   RowBox[{"FindShortestPath", "[", 
    RowBox[{"mesh", ",", "\"\<N1,1\>\"", ",", "\"\<N4,4\>\""}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"closLatency", "=", 
   RowBox[{"calculatePathLatency", "[", 
    RowBox[{"clos", ",", "closPath"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meshLatency", "=", 
   RowBox[{"calculatePathLatency", "[", 
    RowBox[{"mesh", ",", "meshPath"}], "]"}]}], ";"}], "\n", 
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"closLatency", ",", "meshLatency"}], "}"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Clos\>\"", ",", "\"\<Mesh\>\""}], "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<End-to-End Latency Comparison (ns)\>\""}]}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{"bandwidthLatencyTable", "=", 
   RowBox[{"TableForm", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Metric\>\"", ",", "\"\<Clos Network\>\"", ",", 
         "\"\<Mesh Network\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Example Path\>\"", ",", 
         RowBox[{"Short", "[", "closPath", "]"}], ",", 
         RowBox[{"Short", "[", "meshPath", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Path Latency (ns)\>\"", ",", "closLatency", ",", "meshLatency"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Bisection Bandwidth (Gbps)\>\"", ",", 
         "\"\<Lower (bottlenecks at spine)\>\"", ",", 
         "\"\<Higher (uniform)\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Transactional Throughput\>\"", ",", 
         "\"\<Lower (higher contention)\>\"", ",", 
         "\"\<Higher (lower contention)\>\""}], "}"}]}], "}"}], ",", 
     RowBox[{"TableHeadings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<\>\"", ",", "\"\<Clos\>\"", ",", "\"\<Mesh\>\""}], 
         "}"}]}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Labeled", "[", 
  RowBox[{"bandwidthLatencyTable", ",", 
   RowBox[{"Style", "[", 
    RowBox[{
    "\"\<Reimagined Bandwidth & Latency\>\"", ",", "\"\<Section\>\""}], "]"}],
    ",", "Top"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"numSpanningTrees", "[", "graph_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"laplacian", ",", "eigenvalues"}], "}"}], ",", 
    RowBox[{
     RowBox[{"laplacian", "=", 
      RowBox[{"KirchhoffMatrix", "[", "graph", "]"}]}], ";", 
     RowBox[{"eigenvalues", "=", 
      RowBox[{"Eigenvalues", "[", 
       RowBox[{"N", "[", "laplacian", "]"}], "]"}]}], ";", 
     RowBox[{"Round", "[", 
      FractionBox[
       RowBox[{"Times", "@@", 
        RowBox[{"Select", "[", 
         RowBox[{"eigenvalues", ",", 
          RowBox[{
           RowBox[{"#1", ">", 
            FractionBox["1", 
             SuperscriptBox["10", "10"]]}], "&"}]}], "]"}]}], 
       RowBox[{"VertexCount", "[", "graph", "]"}]], "]"}]}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"closSpanningTrees", "=", 
   RowBox[{"numSpanningTrees", "[", "clos", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meshSpanningTrees", "=", 
   RowBox[{"numSpanningTrees", "[", "mesh", "]"}]}], ";"}], "\n", 
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"closSpanningTrees", ",", "meshSpanningTrees"}], "}"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Clos\>\"", ",", "\"\<Mesh\>\""}], "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Number of Spanning Trees (Resilience Metric)\>\""}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"resilienceAnalysis", "[", 
   RowBox[{"graph_", ",", "numEdgesToRemove_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"edges", ",", "removedGraph", ",", "connectedComponents"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"edges", "=", 
      RowBox[{"EdgeList", "[", "graph", "]"}]}], ";", 
     RowBox[{"removedGraph", "=", 
      RowBox[{"EdgeDelete", "[", 
       RowBox[{"graph", ",", 
        RowBox[{"RandomSample", "[", 
         RowBox[{"edges", ",", "numEdgesToRemove"}], "]"}]}], "]"}]}], ";", 
     RowBox[{"connectedComponents", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"ConnectedComponents", "[", "removedGraph", "]"}], "]"}]}], 
     ";", 
     RowBox[{"{", 
      RowBox[{"numEdgesToRemove", ",", "connectedComponents"}], "}"}]}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"closResilience", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"resilienceAnalysis", "[", 
      RowBox[{"clos", ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meshResilience", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"resilienceAnalysis", "[", 
      RowBox[{"mesh", ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"closResilience", ",", "meshResilience"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Clos\>\"", ",", "\"\<Mesh\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Edges Removed\>\"", ",", "\"\<Connected Components\>\""}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Network Resilience Under Edge Removal\>\""}]}], "]"}], "\n", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Labeled", "[", 
        RowBox[{"clos", ",", "\"\<Clos Network\>\"", ",", "Top"}], "]"}], ",", 
       RowBox[{"Labeled", "[", 
        RowBox[{"mesh", ",", "\"\<Mesh Network\>\"", ",", "Top"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"BarChart", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"closLatency", ",", "meshLatency"}], "}"}], ",", 
         RowBox[{"ChartLabels", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Clos\>\"", ",", "\"\<Mesh\>\""}], "}"}]}], ",", 
         RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}], ",", 
         RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Latency Comparison (ns)\>\""}]}], "]"}],
        ",", 
       RowBox[{"BarChart", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"closSpanningTrees", ",", "meshSpanningTrees"}], "}"}], ",", 
         RowBox[{"ChartLabels", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Clos\>\"", ",", "\"\<Mesh\>\""}], "}"}]}], ",", 
         RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}], ",", 
         RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Resilience (Spanning Trees)\>\""}]}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"closResilience", ",", "meshResilience"}], "}"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Clos\>\"", ",", "\"\<Mesh\>\""}], "}"}]}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Edges Removed\>\"", ",", "\"\<Connected Components\>\""}], 
           "}"}]}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<Resilience to Edge Failure\>\""}]}], 
        "]"}], ",", "\[SpanFromLeft]"}], "}"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.962077602039671*^9, 3.962077624426721*^9}},
 CellLabel->
  "In[2289]:=",ExpressionUUID->"e5bbbefa-6765-470a-988f-a980298f3285"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{"S1,1", "S1,2", "S1,3", "S1,4", "S2,1", "S2,2", "S2,3", 
               "S2,4", "S3,1", "S3,2", "S3,3", "S3,4", "S4,1", "S4,2", "S4,3",
                "S4,4", "T1", "T2", "T3", "T4", "SP1", "SP2"}, {
              Null, {{1, 17}, {2, 17}, {3, 17}, {4, 17}, {5, 18}, {6, 18}, {7,
                18}, {8, 18}, {9, 19}, {10, 19}, {11, 19}, {12, 19}, {13, 
               20}, {14, 20}, {15, 20}, {16, 20}, {17, 21}, {17, 22}, {18, 
               21}, {18, 22}, {19, 21}, {19, 22}, {20, 21}, {20, 22}}}, {
              GraphLayout -> "LayeredEmbedding", ImagePadding -> 10, 
               VertexLabels -> {"Name"}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              Arrowheads[0.], {
               ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGCQAGImKEYHk1Q8geiRPYS+BKfxyz/CKX97Wy4QvcYpvx0k
ffsbXD4PrOEvmv7fOOWhwg645CE0E055VRA1iQUuDwEcDqjuY8MpD9auwolT
HuJ+bpzyEPfwwuUh7hFwQPWfAE55iP2COOUhtBABefT4YHJAFUeP70844wNd
P/b4QOjHHt4I/ejy6PrR/YOuH7t/EfoB95XliA==
                "], 0.040539483971853016`]}}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               DiskBox[{0., 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S1,1\"", TraditionalForm], 
                Offset[{0, -2}, {0., -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{0.2857142857142857, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S1,2\"", TraditionalForm], 
                Offset[{0, -2}, {0.2857142857142857, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{0.5714285714285714, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S1,3\"", TraditionalForm], 
                Offset[{0, -2}, {0.5714285714285714, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{0.8571428571428571, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S1,4\"", TraditionalForm], 
                Offset[{0, -2}, {0.8571428571428571, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{1.4285714285714286`, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S2,1\"", TraditionalForm], 
                
                Offset[{0, -2}, {
                 1.4285714285714286`, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{1.7142857142857142`, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S2,2\"", TraditionalForm], 
                
                Offset[{0, -2}, {
                 1.7142857142857142`, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2., 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S2,3\"", TraditionalForm], 
                Offset[{0, -2}, {2., -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2.2857142857142856`, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S2,4\"", TraditionalForm], 
                
                Offset[{0, -2}, {
                 2.2857142857142856`, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2.5714285714285716`, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S3,1\"", TraditionalForm], 
                Offset[{0, -2}, {
                 2.5714285714285716`, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2.857142857142857, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S3,2\"", TraditionalForm], 
                Offset[{0, -2}, {2.857142857142857, -0.040539483971853016`}], 
                
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{3.142857142857143, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S3,3\"", TraditionalForm], 
                Offset[{0, -2}, {3.142857142857143, -0.040539483971853016`}], 
                
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{3.4285714285714284`, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S3,4\"", TraditionalForm], 
                
                Offset[{0, -2}, {
                 3.4285714285714284`, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{3.7142857142857144`, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S4,1\"", TraditionalForm], 
                
                Offset[{0, -2}, {
                 3.7142857142857144`, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{4., 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S4,2\"", TraditionalForm], 
                Offset[{0, -2}, {4., -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{4.285714285714286, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S4,3\"", TraditionalForm], 
                Offset[{0, -2}, {4.285714285714286, -0.040539483971853016`}], 
                
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{4.571428571428571, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S4,4\"", TraditionalForm], 
                Offset[{0, -2}, {4.571428571428571, -0.040539483971853016`}], 
                
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               
               DiskBox[{0.5714285714285714, 0.2857142857142857}, 
                0.040539483971853016`], 
               InsetBox[
                FormBox["\"T1\"", TraditionalForm], {0.5540526602927217, 
                0.3397442703818677}, 
                ImageScaled[{0.7296162385599085, -0.2139862624656017}], 
                BaseStyle -> "Graphics"]}, {
               
               DiskBox[{1.8571428571428572`, 0.2857142857142857}, 
                0.040539483971853016`], 
               InsetBox[
                FormBox["\"T2\"", TraditionalForm], {1.8324651476339986`, 
                0.3368236995670827}, 
                ImageScaled[{0.8261068032287179, -0.17539199942547912`}], 
                BaseStyle -> "Graphics"]}, {
               DiskBox[{3., 0.2857142857142857}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"T3\"", TraditionalForm], {3.0273648711855023`, 
                0.3354367691194915}, 
                ImageScaled[{0.13838334915700667`, -0.1570642265662442}], 
                BaseStyle -> "Graphics"]}, {
               
               DiskBox[{4.142857142857143, 0.2857142857142857}, 
                0.040539483971853016`], 
               InsetBox[
                FormBox["\"T4\"", TraditionalForm], {4.163556761833332, 
                0.338560168290137}, 
                ImageScaled[{0.22646219172186532`, -0.19833879130576326`}], 
                BaseStyle -> "Graphics"]}, {
               
               DiskBox[{2.357142857142857, 0.5714285714285714}, 
                0.040539483971853016`], 
               InsetBox[
                FormBox["\"SP1\"", TraditionalForm], 
                Offset[{0, 2}, {2.357142857142857, 0.6119680554004244}], 
                ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{1.1428571428571428`, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"SP2\"", TraditionalForm], 
                
                Offset[{0, -2}, {
                 1.1428571428571428`, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {
        FormatType -> TraditionalForm, FrameTicks -> None, ImagePadding -> 10,
          DefaultBaseStyle -> "NetworkGraphics"}], "\"Clos Network\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {2, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", "Top", ",", 
           RowBox[{"{", "}"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{"N1,1", "N1,2", "N1,3", "N1,4", "N2,1", "N2,2", "N2,3", 
               "N2,4", "N3,1", "N3,2", "N3,3", "N3,4", "N4,1", "N4,2", "N4,3",
                "N4,4"}, {
              Null, {{1, 2}, {2, 3}, {3, 4}, {5, 6}, {6, 7}, {7, 8}, {9, 
               10}, {10, 11}, {11, 12}, {13, 14}, {14, 15}, {15, 16}, {1, 
               5}, {2, 6}, {3, 7}, {4, 8}, {5, 9}, {6, 10}, {7, 11}, {8, 
               12}, {9, 13}, {10, 14}, {11, 15}, {12, 16}}}, {
              GraphLayout -> "GridEmbedding", ImagePadding -> 10, 
               VertexLabels -> {"Name"}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              Arrowheads[0.], {
               ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGCQAGImKIaAD/bYaQYHysQ5HLDLo9O41AvgkIfpw6UeJo/O
J9cduNSju4dUcXT3ceCg0dVz4OCTGk6E1BNyByH16O4jVhwXTWw8EwonhLkA
kZgulQ==
                "], 0.030239520958083826`]}}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               DiskBox[{1., 1.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N1,1\"", TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{1., 2.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N1,2\"", TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{1., 3.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N1,3\"", TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 3.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{1., 4.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N1,4\"", TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 4.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2., 1.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N2,1\"", TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2., 2.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N2,2\"", TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 2.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2., 3.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N2,3\"", TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 3.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2., 4.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N2,4\"", TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 4.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{3., 1.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N3,1\"", TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{3., 2.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N3,2\"", TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 2.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{3., 3.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N3,3\"", TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 3.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{3., 4.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N3,4\"", TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 4.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{4., 1.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N4,1\"", TraditionalForm], 
                Offset[{2, 2}, {4.030239520958084, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{4., 2.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N4,2\"", TraditionalForm], 
                Offset[{2, 2}, {4.030239520958084, 2.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{4., 3.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N4,3\"", TraditionalForm], 
                Offset[{2, 2}, {4.030239520958084, 3.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{4., 4.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N4,4\"", TraditionalForm], 
                Offset[{2, 2}, {4.030239520958084, 4.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {
        FormatType -> TraditionalForm, FrameTicks -> None, ImagePadding -> 10,
          DefaultBaseStyle -> "NetworkGraphics"}], "\"Mesh Network\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {2, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", "Top", ",", 
           RowBox[{"{", "}"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.962077602776815*^9, 3.96207762475768*^9}, 
   3.9620779068631163`*^9, 3.962080067069203*^9},
 CellLabel->
  "Out[2293]=",ExpressionUUID->"66e17c35-28eb-4aa0-8190-1c4ed9c87264"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 450.},
       RoundingRadius->0]}, 
     {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 300.},
       RoundingRadius->0]}}, {}, {}}, {}, {
    InsetBox["450", Offset[{0, 4}, {1., 450.}], ImageScaled[{0.5, 0}]], 
    InsetBox["300", Offset[{0, 4}, {2., 300.}], 
     ImageScaled[{0.5, 0}]]}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{-0.8428550619082302, 0.}, {3.870688128186453, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{2.4512017479970867`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.4512017479970867`, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Clos\"\>", Offset[{0, -2}, {1., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Mesh\"\>", Offset[{0, -2}, {2., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.8428550619082302, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox[
   "\"End-to-End Latency Comparison (ns)\"", TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.962077602776815*^9, 3.96207762475768*^9}, 
   3.9620779068631163`*^9, 3.962080067135415*^9},
 CellLabel->
  "Out[2302]=",ExpressionUUID->"34bff148-76e2-4007-84d3-477a08414354"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    TagBox[
     GridBox[{{
        TagBox["\"\"", HoldForm], 
        TagBox["\"Clos\"", HoldForm], 
        TagBox["\"Mesh\"", HoldForm]}, {
       "\"Metric\"", "\"Clos Network\"", "\"Mesh Network\""}, {
       "\"Example Path\"", 
        TagBox[
         RowBox[{"{", 
           
           RowBox[{"\"S1,1\"", ",", "\"T1\"", ",", "\"SP1\"", ",", "\"T4\"", 
             ",", "\"S4,4\""}], "}"}], Short], 
        TagBox[
         RowBox[{"{", 
           
           RowBox[{"\"N1,1\"", ",", "\"N1,2\"", ",", "\"N1,3\"", ",", 
             "\"N1,4\"", ",", "\"N2,4\"", ",", "\"N3,4\"", ",", "\"N4,4\""}], 
           "}"}], Short]}, {"\"Path Latency (ns)\"", "450", "300"}, {
       "\"Bisection Bandwidth (Gbps)\"", "\"Lower (bottlenecks at spine)\"", 
        "\"Higher (uniform)\""}, {
       "\"Transactional Throughput\"", "\"Lower (higher contention)\"", 
        "\"Higher (lower contention)\""}}, RowSpacings -> 1, ColumnSpacings -> 
      3, RowAlignments -> Baseline, ColumnAlignments -> Left, 
      GridBoxDividers -> {
       "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}}, 
      ColumnAlignments -> Left], {None, OutputFormsDump`HeadedColumns}], 
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$, TableHeadings -> {None, {"", "Clos", "Mesh"}}]]], 
   StyleBox[
   "\"Reimagined Bandwidth & Latency\"", "Section", StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Top", ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.962077602776815*^9, 3.96207762475768*^9}, 
   3.9620779068631163`*^9, 3.962080067138274*^9},
 CellLabel->
  "Out[2304]=",ExpressionUUID->"b0e7e28d-d3d9-4f43-9a69-52003a83cc90"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 32.},
       RoundingRadius->0]}, 
     {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 100352.},
       RoundingRadius->0]}}, {}, {}}, {}, {
    InsetBox["32", Offset[{0, 4}, {1., 32.}], ImageScaled[{0.5, 0}]], 
    InsetBox["100352", Offset[{0, 4}, {2., 100352.}], 
     ImageScaled[{0.5, 0}]]}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{-0.8428550619082302, 0.}, {3.870688128186453, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{2.4512017479970867`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.4512017479970867`, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Clos\"\>", Offset[{0, -2}, {1., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["\<\"Mesh\"\>", Offset[{0, -2}, {2., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.8428550619082302, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox[
   "\"Number of Spanning Trees (Resilience Metric)\"", TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.962077602776815*^9, 3.96207762475768*^9}, 
   3.9620779068631163`*^9, 3.96208006715486*^9},
 CellLabel->
  "Out[2308]=",ExpressionUUID->"87fb3fbd-5a62-4389-b4b7-891adf146379"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{{{}, {}, 
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            LineBox[{{1., 2.}, {2., 2.}, {3., 2.}, {4., 3.}, {5., 5.}}]}, 
           Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            LineBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}}]}, 
           Annotation[#, "Charting`Private`Tag#2"]& ]}}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Line[{{1., 2.}, {2., 2.}, {3., 2.}, {4., 3.}, {5., 5.}}]}, 
              "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Line[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}}]}, 
              "Charting`Private`Tag#2"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{0.916666666666669, 5.}, {0, 5.}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0.916666666666669, 0}, 
              "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
              "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
              "DefaultStyle" -> {
                Directive[
                 PointSize[
                  Rational[7, 360]], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[
                  Rational[7, 360]], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{0.916666666666669, 5.}, {0, 5.}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0.916666666666669, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[
                 Rational[7, 360]], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]], 
        Selectable -> False]}, 
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           Line[{{1., 2.}, {2., 2.}, {3., 2.}, {4., 3.}, {5., 5.}}]}, 
          "Charting`Private`Tag#1"], 
         Annotation[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Line[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}}]}, 
          "Charting`Private`Tag#2"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{0.916666666666669, 5.}, {0, 5.}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0.916666666666669, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[7, 360]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Directive[
             PointSize[
              Rational[7, 360]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox[
        TagBox["\"Edges Removed\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Connected Components\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {0.916666666666669, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Network Resilience Under Edge Removal\"", TraditionalForm], 
     PlotRange -> {{0.916666666666669, 5.}, {0, 5.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Clos\"", "\"Mesh\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.962077602776815*^9, 3.96207762475768*^9}, 
   3.9620779068631163`*^9, 3.962080067194318*^9},
 CellLabel->
  "Out[2312]=",ExpressionUUID->"50ef6dbe-c5e9-4826-ba58-73a7b08f3e2a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{"S1,1", "S1,2", "S1,3", "S1,4", "S2,1", "S2,2", "S2,3", 
               "S2,4", "S3,1", "S3,2", "S3,3", "S3,4", "S4,1", "S4,2", "S4,3",
                "S4,4", "T1", "T2", "T3", "T4", "SP1", "SP2"}, {
              Null, {{1, 17}, {2, 17}, {3, 17}, {4, 17}, {5, 18}, {6, 18}, {7,
                18}, {8, 18}, {9, 19}, {10, 19}, {11, 19}, {12, 19}, {13, 
               20}, {14, 20}, {15, 20}, {16, 20}, {17, 21}, {17, 22}, {18, 
               21}, {18, 22}, {19, 21}, {19, 22}, {20, 21}, {20, 22}}}, {
              GraphLayout -> "LayeredEmbedding", ImagePadding -> 10, 
               VertexLabels -> {"Name"}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              Arrowheads[0.], {
               ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGCQAGImKEYHk1Q8geiRPYS+BKfxyz/CKX97Wy4QvcYpvx0k
ffsbXD4PrOEvmv7fOOWhwg645CE0E055VRA1iQUuDwEcDqjuY8MpD9auwolT
HuJ+bpzyEPfwwuUh7hFwQPWfAE55iP2COOUhtBABefT4YHJAFUeP70844wNd
P/b4QOjHHt4I/ejy6PrR/YOuH7t/EfoB95XliA==
                "], 0.040539483971853016`]}}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               DiskBox[{0., 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S1,1\"", TraditionalForm], 
                Offset[{0, -2}, {0., -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{0.2857142857142857, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S1,2\"", TraditionalForm], 
                Offset[{0, -2}, {0.2857142857142857, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{0.5714285714285714, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S1,3\"", TraditionalForm], 
                Offset[{0, -2}, {0.5714285714285714, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{0.8571428571428571, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S1,4\"", TraditionalForm], 
                Offset[{0, -2}, {0.8571428571428571, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{1.4285714285714286`, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S2,1\"", TraditionalForm], 
                
                Offset[{0, -2}, {
                 1.4285714285714286`, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{1.7142857142857142`, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S2,2\"", TraditionalForm], 
                
                Offset[{0, -2}, {
                 1.7142857142857142`, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2., 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S2,3\"", TraditionalForm], 
                Offset[{0, -2}, {2., -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2.2857142857142856`, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S2,4\"", TraditionalForm], 
                
                Offset[{0, -2}, {
                 2.2857142857142856`, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2.5714285714285716`, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S3,1\"", TraditionalForm], 
                Offset[{0, -2}, {
                 2.5714285714285716`, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2.857142857142857, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S3,2\"", TraditionalForm], 
                Offset[{0, -2}, {2.857142857142857, -0.040539483971853016`}], 
                
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{3.142857142857143, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S3,3\"", TraditionalForm], 
                Offset[{0, -2}, {3.142857142857143, -0.040539483971853016`}], 
                
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{3.4285714285714284`, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S3,4\"", TraditionalForm], 
                
                Offset[{0, -2}, {
                 3.4285714285714284`, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{3.7142857142857144`, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S4,1\"", TraditionalForm], 
                
                Offset[{0, -2}, {
                 3.7142857142857144`, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{4., 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S4,2\"", TraditionalForm], 
                Offset[{0, -2}, {4., -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{4.285714285714286, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S4,3\"", TraditionalForm], 
                Offset[{0, -2}, {4.285714285714286, -0.040539483971853016`}], 
                
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               DiskBox[{4.571428571428571, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"S4,4\"", TraditionalForm], 
                Offset[{0, -2}, {4.571428571428571, -0.040539483971853016`}], 
                
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}, {
               
               DiskBox[{0.5714285714285714, 0.2857142857142857}, 
                0.040539483971853016`], 
               InsetBox[
                FormBox["\"T1\"", TraditionalForm], {0.5540526602927217, 
                0.3397442703818677}, 
                ImageScaled[{0.7296162385599085, -0.2139862624656017}], 
                BaseStyle -> "Graphics"]}, {
               
               DiskBox[{1.8571428571428572`, 0.2857142857142857}, 
                0.040539483971853016`], 
               InsetBox[
                FormBox["\"T2\"", TraditionalForm], {1.8324651476339986`, 
                0.3368236995670827}, 
                ImageScaled[{0.8261068032287179, -0.17539199942547912`}], 
                BaseStyle -> "Graphics"]}, {
               DiskBox[{3., 0.2857142857142857}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"T3\"", TraditionalForm], {3.0273648711855023`, 
                0.3354367691194915}, 
                ImageScaled[{0.13838334915700667`, -0.1570642265662442}], 
                BaseStyle -> "Graphics"]}, {
               
               DiskBox[{4.142857142857143, 0.2857142857142857}, 
                0.040539483971853016`], 
               InsetBox[
                FormBox["\"T4\"", TraditionalForm], {4.163556761833332, 
                0.338560168290137}, 
                ImageScaled[{0.22646219172186532`, -0.19833879130576326`}], 
                BaseStyle -> "Graphics"]}, {
               
               DiskBox[{2.357142857142857, 0.5714285714285714}, 
                0.040539483971853016`], 
               InsetBox[
                FormBox["\"SP1\"", TraditionalForm], 
                Offset[{0, 2}, {2.357142857142857, 0.6119680554004244}], 
                ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{1.1428571428571428`, 0.}, 0.040539483971853016`], 
               InsetBox[
                FormBox["\"SP2\"", TraditionalForm], 
                
                Offset[{0, -2}, {
                 1.1428571428571428`, -0.040539483971853016`}], 
                ImageScaled[{0.5, 1}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {
        FormatType -> TraditionalForm, FrameTicks -> None, ImagePadding -> 10,
          DefaultBaseStyle -> "NetworkGraphics"}], "\"Clos Network\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {2, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", "Top", ",", 
           RowBox[{"{", "}"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{"N1,1", "N1,2", "N1,3", "N1,4", "N2,1", "N2,2", "N2,3", 
               "N2,4", "N3,1", "N3,2", "N3,3", "N3,4", "N4,1", "N4,2", "N4,3",
                "N4,4"}, {
              Null, {{1, 2}, {2, 3}, {3, 4}, {5, 6}, {6, 7}, {7, 8}, {9, 
               10}, {10, 11}, {11, 12}, {13, 14}, {14, 15}, {15, 16}, {1, 
               5}, {2, 6}, {3, 7}, {4, 8}, {5, 9}, {6, 10}, {7, 11}, {8, 
               12}, {9, 13}, {10, 14}, {11, 15}, {12, 16}}}, {
              GraphLayout -> "GridEmbedding", ImagePadding -> 10, 
               VertexLabels -> {"Name"}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              Arrowheads[0.], {
               ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGCQAGImKIaAD/bYaQYHysQ5HLDLo9O41AvgkIfpw6UeJo/O
J9cduNSju4dUcXT3ceCg0dVz4OCTGk6E1BNyByH16O4jVhwXTWw8EwonhLkA
kZgulQ==
                "], 0.030239520958083826`]}}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               DiskBox[{1., 1.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N1,1\"", TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{1., 2.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N1,2\"", TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{1., 3.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N1,3\"", TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 3.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{1., 4.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N1,4\"", TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 4.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2., 1.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N2,1\"", TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2., 2.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N2,2\"", TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 2.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2., 3.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N2,3\"", TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 3.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{2., 4.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N2,4\"", TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 4.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{3., 1.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N3,1\"", TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{3., 2.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N3,2\"", TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 2.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{3., 3.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N3,3\"", TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 3.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{3., 4.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N3,4\"", TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 4.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{4., 1.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N4,1\"", TraditionalForm], 
                Offset[{2, 2}, {4.030239520958084, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{4., 2.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N4,2\"", TraditionalForm], 
                Offset[{2, 2}, {4.030239520958084, 2.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{4., 3.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N4,3\"", TraditionalForm], 
                Offset[{2, 2}, {4.030239520958084, 3.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{4., 4.}, 0.030239520958083826`], 
               InsetBox[
                FormBox["\"N4,4\"", TraditionalForm], 
                Offset[{2, 2}, {4.030239520958084, 4.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {
        FormatType -> TraditionalForm, FrameTicks -> None, ImagePadding -> 10,
          DefaultBaseStyle -> "NetworkGraphics"}], "\"Mesh Network\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {2, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2, ",", "Top", ",", 
           RowBox[{"{", "}"}]}], "]"}]& )]},
    {
     GraphicsBox[{
       {Opacity[0], 
        PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
         0.}}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.6859999999999999], Thickness[Small]}], 
         {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[
          0.6859999999999999], Thickness[Small]}], 
          RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 450.},
           RoundingRadius->0]}, 
         {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[
          0.6859999999999999], Thickness[Small]}], 
          RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 300.},
           RoundingRadius->0]}}, {}, {}}, {}, {
        InsetBox["450", Offset[{0, 4}, {1., 450.}], ImageScaled[{0.5, 0}]], 
        InsetBox["300", Offset[{0, 4}, {2., 300.}], 
         ImageScaled[{0.5, 0}]]}, {}, {}, 
       StyleBox[
        StyleBox[{
          {Thickness[Tiny], 
           LineBox[{{-0.8428550619082302, 0.}, {3.870688128186453, 0.}}], 
           StyleBox[{}, "GraphicsLabel",
            StripOnInput->False]}, 
          StyleBox[{
            {Thickness[Tiny], 
             LineBox[{{0.5487982520029133, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
                0.}]}], 
             LineBox[{{2.4512017479970867`, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {2.4512017479970867`, 
                0.}]}], {{}, {}, {
               LineBox[{{1.4512017479970867`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
                  0.}]}], 
               LineBox[{{1.5487982520029133`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
                  0.}]}]}, {}}}, 
            StyleBox[
             {Thickness[Tiny], 
              InsetBox["\<\"Clos\"\>", Offset[{0, -2}, {1., 0.}], NCache[
               ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
               Automatic, {1, 0}], 
              InsetBox["\<\"Mesh\"\>", Offset[{0, -2}, {2., 0.}], NCache[
               ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
               Automatic, {1, 0}]}, "GraphicsLabel",
             StripOnInput->False]}, "GraphicsTicks",
           StripOnInput->False]},
         Antialiasing->False], "GraphicsAxes",
        StripOnInput->False]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.8428550619082302, 0.},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotLabel->FormBox["\"Latency Comparison (ns)\"", TraditionalForm],
      PlotRange->{{All, All}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{None, Automatic}], 
     GraphicsBox[{
       {Opacity[0], 
        PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
         0.}}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.6859999999999999], Thickness[Small]}], 
         {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[
          0.6859999999999999], Thickness[Small]}], 
          RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 32.},
           RoundingRadius->0]}, 
         {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[
          0.6859999999999999], Thickness[Small]}], 
          RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 100352.},
           
           RoundingRadius->0]}}, {}, {}}, {}, {
        InsetBox["32", Offset[{0, 4}, {1., 32.}], ImageScaled[{0.5, 0}]], 
        InsetBox["100352", Offset[{0, 4}, {2., 100352.}], 
         ImageScaled[{0.5, 0}]]}, {}, {}, 
       StyleBox[
        StyleBox[{
          {Thickness[Tiny], 
           LineBox[{{-0.8428550619082302, 0.}, {3.870688128186453, 0.}}], 
           StyleBox[{}, "GraphicsLabel",
            StripOnInput->False]}, 
          StyleBox[{
            {Thickness[Tiny], 
             LineBox[{{0.5487982520029133, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
                0.}]}], 
             LineBox[{{2.4512017479970867`, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {2.4512017479970867`, 
                0.}]}], {{}, {}, {
               LineBox[{{1.4512017479970867`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
                  0.}]}], 
               LineBox[{{1.5487982520029133`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
                  0.}]}]}, {}}}, 
            StyleBox[
             {Thickness[Tiny], 
              InsetBox["\<\"Clos\"\>", Offset[{0, -2}, {1., 0.}], NCache[
               ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
               Automatic, {1, 0}], 
              InsetBox["\<\"Mesh\"\>", Offset[{0, -2}, {2., 0.}], NCache[
               ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
               Automatic, {1, 0}]}, "GraphicsLabel",
             StripOnInput->False]}, "GraphicsTicks",
           StripOnInput->False]},
         Antialiasing->False], "GraphicsAxes",
        StripOnInput->False]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.8428550619082302, 0.},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotLabel->FormBox["\"Resilience (Spanning Trees)\"", TraditionalForm],
      PlotRange->{{All, All}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{None, Automatic}]},
    {
     TemplateBox[{
       GraphicsBox[{{}, 
         InterpretationBox[{
           TagBox[{{{}, {}, 
              TagBox[{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[
                  NCache[
                   Rational[7, 360], 0.019444444444444445`]], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]], 
                LineBox[{{1., 2.}, {2., 2.}, {3., 2.}, {4., 3.}, {5., 5.}}]}, 
               Annotation[#, "Charting`Private`Tag#1"]& ], 
              TagBox[{
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[
                  NCache[
                   Rational[7, 360], 0.019444444444444445`]], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[2]], 
                LineBox[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}}]}, 
               Annotation[#, "Charting`Private`Tag#2"]& ]}}, {
            "WolframDynamicHighlight", <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
           StyleBox[
            DynamicBox[
             (Charting`HighlightActionBox["DynamicHighlight", {}, 
              Slot["HighlightElements"], 
              Slot["LayoutOptions"], 
              Slot["Meta"], 
              Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
                 Annotation[{
                   Hue[0.67, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                   Line[{{1., 2.}, {2., 2.}, {3., 2.}, {4., 3.}, {5., 5.}}]}, 
                  "Charting`Private`Tag#1"], 
                 Annotation[{
                   Hue[0.9060679774997897, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                   Line[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}}]}, 
                  "Charting`Private`Tag#2"]}}, <|
               "HighlightElements" -> <|
                 "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                "LayoutOptions" -> <|
                 "PanelPlotLayout" -> <||>, 
                  "PlotRange" -> {{0.916666666666669, 5.}, {0, 5.}}, 
                  "Frame" -> {{False, False}, {False, False}}, 
                  "AxesOrigin" -> {0.916666666666669, 0}, 
                  "ImageSize" -> {360, 360/GoldenRatio}, 
                  "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                  GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}, 
                  "HighlightLabelingFunctions" -> <|
                   "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                  False|>, 
                "Meta" -> <|
                 "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                  "Function" -> ListLinePlot, "GroupHighlight" -> 
                  False|>|>]]& )[<|
              "HighlightElements" -> <|
                "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
               "LayoutOptions" -> <|
                "PanelPlotLayout" -> <||>, 
                 "PlotRange" -> {{0.916666666666669, 5.}, {0, 5.}}, 
                 "Frame" -> {{False, False}, {False, False}}, 
                 "AxesOrigin" -> {0.916666666666669, 0}, 
                 "ImageSize" -> {360, 360/GoldenRatio}, 
                 "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                 GoldenRatio^(-1), "DefaultStyle" -> {
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}, 
                 "HighlightLabelingFunctions" -> <|
                  "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                   "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                 False|>, 
               "Meta" -> <|
                "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                 "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]], 
            Selectable -> False]}, 
          Annotation[{{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Line[{{1., 2.}, {2., 2.}, {3., 2.}, {4., 3.}, {5., 5.}}]}, 
              "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Line[{{1., 1.}, {2., 1.}, {3., 1.}, {4., 1.}, {5., 1.}}]}, 
              "Charting`Private`Tag#2"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{0.916666666666669, 5.}, {0, 5.}}, 
              "Frame" -> {{False, False}, {False, False}}, 
              "AxesOrigin" -> {0.916666666666669, 0}, 
              "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
              "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
              "DefaultStyle" -> {
                Directive[
                 PointSize[
                  Rational[7, 360]], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[2]], 
                Directive[
                 PointSize[
                  Rational[7, 360]], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>, 
           "DynamicHighlight"]], {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
            TagBox["\"Edges Removed\"", HoldForm], TraditionalForm], 
           FormBox[
            TagBox["\"Connected Components\"", HoldForm], TraditionalForm]}, 
         AxesOrigin -> {0.916666666666669, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
           "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> 
           Automatic, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Resilience to Edge Failure\"", TraditionalForm], 
         PlotRange -> {{0.916666666666669, 5.}, {0, 5.}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Clos\"", "\"Mesh\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], "\[SpanFromLeft]"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.962077602776815*^9, 3.96207762475768*^9}, 
   3.9620779068631163`*^9, 3.962080067272272*^9},
 CellLabel->
  "Out[2313]=",ExpressionUUID->"359d89f6-cb47-4867-89ec-75ac7d3423fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cellTransitTime", "=", "100"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"switchDelay", "=", "50"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cableDelayMedium", "=", "15"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cableDelayLong", "=", "50"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cableDelayShort", "=", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"closHop1Latency", "=", 
   RowBox[{
    RowBox[{"2", " ", "cableDelayMedium"}], "+", "switchDelay"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"fabrixHop1Latency", "=", "cableDelayShort"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"closHopsData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], " ", "switchDelay"}], "+", 
      RowBox[{"2", " ", "n", " ", "cableDelayMedium"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fabrixHopsData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "\[Equal]", "1"}], ",", "fabrixHop1Latency", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], " ", "cellTransitTime"}], "+", 
        RowBox[{"n", " ", "cableDelayShort"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"latencyPlotLinear", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fabrixHopsData", ",", "closHopsData"}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Transaction Fabrix\>\"", ",", "\"\<Clos Network\>\""}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Logical Hops\>\"", ",", "\"\<End-to-End Latency (ns)\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Latency Comparison (Linear Scale)\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.2", ",", "0.7", ",", "0.2"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.2", ",", "0.5", ",", "0.8"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "12"}], 
       "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"latencyPlotLog", "=", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fabrixHopsData", ",", "closHopsData"}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Transaction Fabrix\>\"", ",", "\"\<Clos Network\>\""}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Logical Hops\>\"", ",", "\"\<End-to-End Latency (ns)\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Latency Comparison (Log Scale)\>\""}], ",", 
     
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.2", ",", "0.7", ",", "0.2"}], "]"}], ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.2", ",", "0.5", ",", "0.8"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "12"}], 
       "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"latencyPlotLinear", ",", "latencyPlotLog"}], "}"}], "}"}], 
  "]"}]}], "Code",
 CellChangeTimes->{{3.962077647260006*^9, 3.9620776595969954`*^9}},
 CellLabel->
  "In[1909]:=",ExpressionUUID->"8ba0bc94-dcb7-43b7-ade3-43c1822157b9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, 
         InterpretationBox[{
           TagBox[{{{}, {}, 
              TagBox[{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[
                  NCache[
                   Rational[7, 360], 0.019444444444444445`]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 RGBColor[0.2, 0.7, 0.2]], 
                LineBox[{{1., 2.}, {2., 104.}, {3., 206.}, {4., 308.}}]}, 
               Annotation[#, "Charting`Private`Tag#1"]& ], 
              TagBox[{
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[
                  NCache[
                   Rational[7, 360], 0.019444444444444445`]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 RGBColor[0.2, 0.5, 0.8]], 
                LineBox[{{1., 130.}, {2., 210.}, {3., 290.}, {4., 370.}}]}, 
               Annotation[#, "Charting`Private`Tag#2"]& ]}}, {
            "WolframDynamicHighlight", <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
           StyleBox[
            DynamicBox[
             (Charting`HighlightActionBox["DynamicHighlight", {}, 
              Slot["HighlightElements"], 
              Slot["LayoutOptions"], 
              Slot["Meta"], 
              Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
                 Annotation[{
                   Hue[0.67, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.7, 0.2]], 
                   Line[{{1., 2.}, {2., 104.}, {3., 206.}, {4., 308.}}]}, 
                  "Charting`Private`Tag#1"], 
                 Annotation[{
                   Hue[0.9060679774997897, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.5, 0.8]], 
                   Line[{{1., 130.}, {2., 210.}, {3., 290.}, {4., 370.}}]}, 
                  "Charting`Private`Tag#2"]}}, <|
               "HighlightElements" -> <|
                 "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                "LayoutOptions" -> <|
                 "PanelPlotLayout" -> <||>, 
                  "PlotRange" -> {{0., 4.}, {0, 370.}}, 
                  "Frame" -> {{True, True}, {True, True}}, 
                  "AxesOrigin" -> {0., 0}, 
                  "ImageSize" -> {576, 576/GoldenRatio}, 
                  "Axes" -> {False, False}, 
                  "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
                  GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.5, 0.8]], 
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.7, 0.2]]}, 
                  "HighlightLabelingFunctions" -> <|
                   "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                  False|>, 
                "Meta" -> <|
                 "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                  "Function" -> ListLinePlot, "GroupHighlight" -> 
                  False|>|>]]& )[<|
              "HighlightElements" -> <|
                "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
               "LayoutOptions" -> <|
                "PanelPlotLayout" -> <||>, 
                 "PlotRange" -> {{0., 4.}, {0, 370.}}, 
                 "Frame" -> {{True, True}, {True, True}}, 
                 "AxesOrigin" -> {0., 0}, 
                 "ImageSize" -> {576, 576/GoldenRatio}, 
                 "Axes" -> {False, False}, 
                 "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
                 GoldenRatio^(-1), "DefaultStyle" -> {
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.5, 0.8]], 
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.7, 0.2]]}, 
                 "HighlightLabelingFunctions" -> <|
                  "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                   "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                 False|>, 
               "Meta" -> <|
                "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                 "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]], 
            Selectable -> False]}, 
          Annotation[{{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                RGBColor[0.2, 0.7, 0.2]], 
               Line[{{1., 2.}, {2., 104.}, {3., 206.}, {4., 308.}}]}, 
              "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                RGBColor[0.2, 0.5, 0.8]], 
               Line[{{1., 130.}, {2., 210.}, {3., 290.}, {4., 370.}}]}, 
              "Charting`Private`Tag#2"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 4.}, {0, 370.}}, 
              "Frame" -> {{True, True}, {True, True}}, 
              "AxesOrigin" -> {0., 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
              "Axes" -> {False, False}, 
              "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 PointSize[
                  Rational[7, 360]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 RGBColor[0.2, 0.5, 0.8]], 
                Directive[
                 PointSize[
                  Rational[7, 360]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 RGBColor[0.2, 0.7, 0.2]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>, 
           "DynamicHighlight"]], {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {
           FormBox[
            TagBox["\"Logical Hops\"", HoldForm], TraditionalForm], 
           FormBox[
            TagBox["\"End-to-End Latency (ns)\"", HoldForm], 
            TraditionalForm]}, AxesOrigin -> {0., 0}, 
         BaseStyle -> {FontFamily -> "Helvetica", 12}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         LabelStyle -> {FontFamily -> "Times"}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.365248, 0.427802, 0.758297], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.945109, 0.593901, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.645957, 0.253192, 0.685109], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.285821, 0.56, 0.450773], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.7, 0.336, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.491486, 0.345109, 0.8], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.71788, 0.568653, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.70743, 0.224, 0.542415], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.287228, 0.490217, 0.664674], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
           "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> 
           Automatic, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Latency Comparison (Linear Scale)\"", TraditionalForm], 
         PlotRange -> {{0., 4.}, {0, 370.}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Transaction Fabrix\"", "\"Clos Network\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.7, 0.2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.7, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.5, 0.8]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.5, 0.8]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.2, 0.7, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.2, 0.5, 0.8]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, 
         InterpretationBox[{
           TagBox[{{{}, {}, 
              TagBox[{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 RGBColor[0.2, 0.7, 0.2]], 
                
                LineBox[{{1., 0.6931471805599453}, {2., 
                 4.6443908991413725`}, {3., 5.327876168789581}, {4., 
                 5.730099782973574}}]}, 
               Annotation[#, "Charting`Private`Tag#1"]& ], 
              TagBox[{
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 RGBColor[0.2, 0.5, 0.8]], 
                
                LineBox[{{1., 4.867534450455582}, {2., 5.3471075307174685`}, {
                 3., 5.66988092298052}, {4., 5.91350300563827}}]}, 
               Annotation[#, "Charting`Private`Tag#2"]& ]}}, {
            "WolframDynamicHighlight", <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
           StyleBox[
            DynamicBox[
             (Charting`HighlightActionBox["DynamicHighlight", {}, 
              Slot["HighlightElements"], 
              Slot["LayoutOptions"], 
              Slot["Meta"], 
              Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
                 Annotation[{
                   Hue[0.67, 0.6, 0.6], 
                   Directive[
                    PointSize[0.012833333333333334`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.7, 0.2]], 
                   
                   Line[{{1., 0.6931471805599453}, {2., 
                    4.6443908991413725`}, {3., 5.327876168789581}, {4., 
                    5.730099782973574}}]}, "Charting`Private`Tag#1"], 
                 Annotation[{
                   Hue[0.9060679774997897, 0.6, 0.6], 
                   Directive[
                    PointSize[0.012833333333333334`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.5, 0.8]], 
                   
                   Line[{{1., 4.867534450455582}, {2., 5.3471075307174685`}, {
                    3., 5.66988092298052}, {4., 5.91350300563827}}]}, 
                  "Charting`Private`Tag#2"]}}, <|
               "HighlightElements" -> <|
                 "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
                "LayoutOptions" -> <|
                 "PanelPlotLayout" -> <||>, 
                  "PlotRange" -> {{0., 4.}, {0.2846247115723351, 
                   5.91350300563827}}, 
                  "Frame" -> {{True, True}, {True, True}}, 
                  "AxesOrigin" -> {0., 0.2846247115723351}, 
                  "ImageSize" -> {576, 576/GoldenRatio}, 
                  "Axes" -> {False, False}, 
                  "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
                  GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.5, 0.8]], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.7, 0.2]]}, 
                  "HighlightLabelingFunctions" -> <|
                   "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Log, Exp}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
                "Meta" -> <|
                 "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                  "Function" -> ListLogPlot, "GroupHighlight" -> 
                  False|>|>]]& )[<|
              "HighlightElements" -> <|
                "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
               "LayoutOptions" -> <|
                "PanelPlotLayout" -> <||>, 
                 "PlotRange" -> {{0., 4.}, {0.2846247115723351, 
                  5.91350300563827}}, "Frame" -> {{True, True}, {True, True}},
                  "AxesOrigin" -> {0., 0.2846247115723351}, 
                 "ImageSize" -> {576, 576/GoldenRatio}, 
                 "Axes" -> {False, False}, 
                 "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
                 GoldenRatio^(-1), "DefaultStyle" -> {
                   Directive[
                    PointSize[0.012833333333333334`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.5, 0.8]], 
                   Directive[
                    PointSize[0.012833333333333334`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.7, 0.2]]}, 
                 "HighlightLabelingFunctions" -> <|
                  "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), 
                   "ScalingFunctions" -> {{Identity, Identity}, {Log, Exp}}|>,
                  "Primitives" -> {}, "GCFlag" -> False|>, 
               "Meta" -> <|
                "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                 "Function" -> ListLogPlot, "GroupHighlight" -> False|>|>]], 
            Selectable -> False]}, 
          Annotation[{{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                RGBColor[0.2, 0.7, 0.2]], 
               
               Line[{{1., 0.6931471805599453}, {2., 4.6443908991413725`}, {3.,
                 5.327876168789581}, {4., 5.730099782973574}}]}, 
              "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                RGBColor[0.2, 0.5, 0.8]], 
               
               Line[{{1., 4.867534450455582}, {2., 5.3471075307174685`}, {3., 
                5.66988092298052}, {4., 5.91350300563827}}]}, 
              "Charting`Private`Tag#2"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{0., 4.}, {0.2846247115723351, 
               5.91350300563827}}, "Frame" -> {{True, True}, {True, True}}, 
              "AxesOrigin" -> {0., 0.2846247115723351}, 
              "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False},
               "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 PointSize[0.012833333333333334`], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 RGBColor[0.2, 0.5, 0.8]], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 RGBColor[0.2, 0.7, 0.2]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Exp[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {Log, Exp}}|>, 
              "Primitives" -> {}, "GCFlag" -> False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLogPlot, "GroupHighlight" -> False|>|>, 
           "DynamicHighlight"]], {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {{0}, {}}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {False, False}, AxesLabel -> {
           FormBox[
            TagBox["\"Logical Hops\"", HoldForm], TraditionalForm], 
           FormBox[
            TagBox["\"End-to-End Latency (ns)\"", HoldForm], 
            TraditionalForm]}, AxesOrigin -> {0., 0.2846247115723351}, 
         BaseStyle -> {FontFamily -> "Helvetica", 12}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {{0}, {}}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         LabelStyle -> {FontFamily -> "Times"}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.365248, 0.427802, 0.758297], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.945109, 0.593901, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.645957, 0.253192, 0.685109], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.285821, 0.56, 0.450773], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.7, 0.336, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.491486, 0.345109, 0.8], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.71788, 0.568653, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.70743, 0.224, 0.542415], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.287228, 0.490217, 0.664674], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05], "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> 
           "CurrentSet", "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
           True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Latency Comparison (Log Scale)\"", TraditionalForm], 
         PlotRange -> {{0., 4.}, {0.2846247115723351, 5.91350300563827}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, 
           
           Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
            WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0]}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Transaction Fabrix\"", "\"Clos Network\""}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.7, 0.2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.7, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.5, 0.8]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    RGBColor[0.2, 0.5, 0.8]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.2, 0.7, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.2, 0.5, 0.8]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.962077647972143*^9, 3.9620776599695597`*^9}, 
   3.9620778548871403`*^9},
 CellLabel->
  "Out[1920]=",ExpressionUUID->"e8910d05-fdec-4fb8-839d-f7ab090a7c0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"portSpeed", "=", "25"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"serversPerRow", "=", "20"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fabrixBandwidth", "[", "numServers_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", " ", "numServers"}], ")"}], " ", "portSpeed"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"closBandwidth", "[", 
    RowBox[{"numServers_", ",", "portsPerServer_"}], "]"}], ":=", 
   RowBox[{"numServers", " ", "portsPerServer", " ", "portSpeed"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"serverCounts", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"40", ",", "840", ",", "40"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fabrixData", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", 
        FractionBox[
         RowBox[{"fabrixBandwidth", "[", "#1", "]"}], "1000"]}], "}"}], "&"}],
      ")"}], "/@", "serverCounts"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"clos1SliceData", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", 
        FractionBox[
         RowBox[{"closBandwidth", "[", 
          RowBox[{"#1", ",", "1"}], "]"}], "1000"]}], "}"}], "&"}], ")"}], "/@",
     "serverCounts"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"clos2SliceData", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", 
        FractionBox[
         RowBox[{"closBandwidth", "[", 
          RowBox[{"#1", ",", "2"}], "]"}], "1000"]}], "}"}], "&"}], ")"}], "/@",
     "serverCounts"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"clos4SliceData", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", 
        FractionBox[
         RowBox[{"closBandwidth", "[", 
          RowBox[{"#1", ",", "4"}], "]"}], "1000"]}], "}"}], "&"}], ")"}], "/@",
     "serverCounts"}]}], ";"}], "\n", 
 RowBox[{"bandwidthPlot", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fabrixData", ",", "clos4SliceData", ",", "clos2SliceData", ",", 
      "clos1SliceData"}], "}"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Transaction Fabrix (8-port cells)\>\"", ",", 
       "\"\<4-Slice Clos (4-port servers)\>\"", ",", 
       "\"\<2-Slice Clos (2-port servers)\>\"", ",", 
       "\"\<1-Slice Clos (1-port servers)\>\""}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Total Servers in Datacenter\>\"", ",", 
       "\"\<Total Functional Bandwidth (Tbps)\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", "\"\<Functional Bandwidth Comparison\>\""}], ",", 
    
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.2", ",", "0.7", ",", "0.2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Dashed", ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.8", ",", "0.2", ",", "0.2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Dashed", ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.8", ",", "0.5", ",", "0.2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Dashed", ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.8", ",", "0.8", ",", "0.2"}], "]"}]}], "}"}]}], "}"}]}], 
    ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "12"}], 
      "}"}]}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.962077662791691*^9, 3.962077664874984*^9}},
 CellLabel->
  "In[1921]:=",ExpressionUUID->"6d01b87a-e4f2-4423-84cd-5a4fa8c52c9a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{{{}, {}, 
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
             Thickness[Large], 
             RGBColor[0.2, 0.7, 0.2]], 
            LineBox[CompressedData["
1:eJwt0MsKgUEYgOHJFdgoS8rCwkKSJGmcbkDWFmJh80tJSeknh7gql4bmmZqe
eZv5NlNdbmfrQgih9Nt/05pEB85Z5IJlrljhhjVmrCfznW5wz6b7g27xyLb7
k+7wzG4y5rrn/UX3k5+rHvDGaP6uh+YfemT+qcd80b/Ft57GL0y3HrQ=
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
             Dashing[{Small, Small}], 
             RGBColor[0.8, 0.2, 0.2]], 
            LineBox[CompressedData["
1:eJxV0D8LgkAYgPHDT9DSnlujQ0ODw4tIhET4r7VBcmgpgghCkFPSyE/lR7N4
n6WD48fD3QvHucU1LR1jzPy7f+oKRZ1hjgs84hJP6OEZV3jBtWpvtI93FM4f
dIBP+XuXregN1rhVxdIR9xt6p44tvccXxsx3dMJ8T6fMv+kMP8g/yUAfZAIh
ZiAE
             "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
          TagBox[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
             Dashing[{Small, Small}], 
             RGBColor[0.8, 0.5, 0.2]], 
            LineBox[CompressedData["
1:eJwt0MsKgUEYgOHJFdgoS8rCwkKSJGmcbkDWFmJh80tJSeknh7gql4bmmZqe
eZv5NlNdbmfrQgih9Nt/05pEB85Z5IJlrljhhjVmrCfznW5wz6b7g27xyLb7
k+7wzG4y5rrn/UX3k5+rHvDGaP6uh+YfemT+qcd80b/Ft57GL0y3HrQ=
             "]]}, Annotation[#, "Charting`Private`Tag#3"]& ], 
          TagBox[{
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
             Dashing[{Small, Small}], 
             RGBColor[0.8, 0.8, 0.2]], 
            LineBox[CompressedData["
1:eJwty70KgVEAx+GTyWigDAYkSZLP2Tu4ApkNYrCQkpLSSz7iqlySS0DnOXV6
+nXOvzLfTJaZEELhd//GM06in1F0qgNnzHLBHFfMc81iNN3qEncse9/rKg+s
eT/qOk9sRJNUN/0/61b0fdFtXtmxv+mu/V337B+6zycH9i89TL641h5j
             "]]}, Annotation[#, "Charting`Private`Tag#4"]& ]}}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                Thickness[Large], 
                RGBColor[0.2, 0.7, 0.2]], 
               Line[CompressedData["
1:eJwt0MsKgUEYgOHJFdgoS8rCwkKSJGmcbkDWFmJh80tJSeknh7gql4bmmZqe
eZv5NlNdbmfrQgih9Nt/05pEB85Z5IJlrljhhjVmrCfznW5wz6b7g27xyLb7
k+7wzG4y5rrn/UX3k5+rHvDGaP6uh+YfemT+qcd80b/Ft57GL0y3HrQ=
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                Dashing[{Small, Small}], 
                RGBColor[0.8, 0.2, 0.2]], 
               Line[CompressedData["
1:eJxV0D8LgkAYgPHDT9DSnlujQ0ODw4tIhET4r7VBcmgpgghCkFPSyE/lR7N4
n6WD48fD3QvHucU1LR1jzPy7f+oKRZ1hjgs84hJP6OEZV3jBtWpvtI93FM4f
dIBP+XuXregN1rhVxdIR9xt6p44tvccXxsx3dMJ8T6fMv+kMP8g/yUAfZAIh
ZiAE
                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                Dashing[{Small, Small}], 
                RGBColor[0.8, 0.5, 0.2]], 
               Line[CompressedData["
1:eJwt0MsKgUEYgOHJFdgoS8rCwkKSJGmcbkDWFmJh80tJSeknh7gql4bmmZqe
eZv5NlNdbmfrQgih9Nt/05pEB85Z5IJlrljhhjVmrCfznW5wz6b7g27xyLb7
k+7wzG4y5rrn/UX3k5+rHvDGaP6uh+YfemT+qcd80b/Ft57GL0y3HrQ=
                "]]}, "Charting`Private`Tag#3"], 
             Annotation[{
               Hue[0.37820393249936934`, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                Dashing[{Small, Small}], 
                RGBColor[0.8, 0.8, 0.2]], 
               Line[CompressedData["
1:eJwty70KgVEAx+GTyWigDAYkSZLP2Tu4ApkNYrCQkpLSSz7iqlySS0DnOXV6
+nXOvzLfTJaZEELhd//GM06in1F0qgNnzHLBHFfMc81iNN3qEncse9/rKg+s
eT/qOk9sRJNUN/0/61b0fdFtXtmxv+mu/V337B+6zycH9i89TL641h5j
                "]]}, "Charting`Private`Tag#4"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 840.}, {0, 84.}}, 
              "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0},
               "ImageSize" -> {576, 576/GoldenRatio}, 
              "Axes" -> {False, False}, 
              "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 Dashing[{Small, Small}], 
                 RGBColor[0.8, 0.8, 0.2]], 
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 Dashing[{Small, Small}], 
                 RGBColor[0.8, 0.5, 0.2]], 
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 Dashing[{Small, Small}], 
                 RGBColor[0.8, 0.2, 0.2]], 
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 Thickness[Large], 
                 RGBColor[0.2, 0.7, 0.2]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 840.}, {0, 84.}}, 
             "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
             "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
             "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[
                 Rational[1, 60]], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                Dashing[{Small, Small}], 
                RGBColor[0.8, 0.8, 0.2]], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                Dashing[{Small, Small}], 
                RGBColor[0.8, 0.5, 0.2]], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                Dashing[{Small, Small}], 
                RGBColor[0.8, 0.2, 0.2]], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                Thickness[Large], 
                RGBColor[0.2, 0.7, 0.2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]], 
        Selectable -> False]}, 
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
            Thickness[Large], 
            RGBColor[0.2, 0.7, 0.2]], 
           Line[CompressedData["
1:eJwt0MsKgUEYgOHJFdgoS8rCwkKSJGmcbkDWFmJh80tJSeknh7gql4bmmZqe
eZv5NlNdbmfrQgih9Nt/05pEB85Z5IJlrljhhjVmrCfznW5wz6b7g27xyLb7
k+7wzG4y5rrn/UX3k5+rHvDGaP6uh+YfemT+qcd80b/Ft57GL0y3HrQ=
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
            Dashing[{Small, Small}], 
            RGBColor[0.8, 0.2, 0.2]], 
           Line[CompressedData["
1:eJxV0D8LgkAYgPHDT9DSnlujQ0ODw4tIhET4r7VBcmgpgghCkFPSyE/lR7N4
n6WD48fD3QvHucU1LR1jzPy7f+oKRZ1hjgs84hJP6OEZV3jBtWpvtI93FM4f
dIBP+XuXregN1rhVxdIR9xt6p44tvccXxsx3dMJ8T6fMv+kMP8g/yUAfZAIh
ZiAE
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
            Dashing[{Small, Small}], 
            RGBColor[0.8, 0.5, 0.2]], 
           Line[CompressedData["
1:eJwt0MsKgUEYgOHJFdgoS8rCwkKSJGmcbkDWFmJh80tJSeknh7gql4bmmZqe
eZv5NlNdbmfrQgih9Nt/05pEB85Z5IJlrljhhjVmrCfznW5wz6b7g27xyLb7
k+7wzG4y5rrn/UX3k5+rHvDGaP6uh+YfemT+qcd80b/Ft57GL0y3HrQ=
            "]]}, "Charting`Private`Tag#3"], 
         Annotation[{
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
            Dashing[{Small, Small}], 
            RGBColor[0.8, 0.8, 0.2]], 
           Line[CompressedData["
1:eJwty70KgVEAx+GTyWigDAYkSZLP2Tu4ApkNYrCQkpLSSz7iqlySS0DnOXV6
+nXOvzLfTJaZEELhd//GM06in1F0qgNnzHLBHFfMc81iNN3qEncse9/rKg+s
eT/qOk9sRJNUN/0/61b0fdFtXtmxv+mu/V337B+6zycH9i89TL641h5j
            "]]}, "Charting`Private`Tag#4"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 840.}, {0, 84.}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
          "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 60]], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
             Dashing[{Small, Small}], 
             RGBColor[0.8, 0.8, 0.2]], 
            Directive[
             PointSize[
              Rational[1, 60]], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
             Dashing[{Small, Small}], 
             RGBColor[0.8, 0.5, 0.2]], 
            Directive[
             PointSize[
              Rational[1, 60]], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
             Dashing[{Small, Small}], 
             RGBColor[0.8, 0.2, 0.2]], 
            Directive[
             PointSize[
              Rational[1, 60]], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
             Thickness[Large], 
             RGBColor[0.2, 0.7, 0.2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {
       FormBox[
        TagBox["\"Total Servers in Datacenter\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Total Functional Bandwidth (Tbps)\"", HoldForm], 
        TraditionalForm]}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Helvetica", 12}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.365248, 0.427802, 0.758297], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.945109, 0.593901, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.645957, 0.253192, 0.685109], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.285821, 0.56, 0.450773], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.7, 0.336, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.491486, 0.345109, 0.8], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.71788, 0.568653, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.70743, 0.224, 0.542415], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.287228, 0.490217, 0.664674], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Functional Bandwidth Comparison\"", TraditionalForm], 
     PlotRange -> {{0, 840.}, {0, 84.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Transaction Fabrix (8-port cells)\"", 
       "\"4-Slice Clos (4-port servers)\"", 
       "\"2-Slice Clos (2-port servers)\"", 
       "\"1-Slice Clos (1-port servers)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Thickness[Large], 
                    RGBColor[0.2, 0.7, 0.2]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Thickness[Large], 
                    RGBColor[0.2, 0.7, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Dashing[{Small, Small}], 
                    RGBColor[0.8, 0.2, 0.2]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Dashing[{Small, Small}], 
                    RGBColor[0.8, 0.2, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Dashing[{Small, Small}], 
                    RGBColor[0.8, 0.5, 0.2]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Dashing[{Small, Small}], 
                    RGBColor[0.8, 0.5, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Dashing[{Small, Small}], 
                    RGBColor[0.8, 0.8, 0.2]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Dashing[{Small, Small}], 
                    RGBColor[0.8, 0.8, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.2, 0.7, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.8, 0.2, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.8, 0.5, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.8, 0.8, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.962077663121945*^9, 3.9620776652007027`*^9}, 
   3.962077856432314*^9},
 CellLabel->
  "Out[1930]=",ExpressionUUID->"b5612d16-a89c-4ccb-8bad-41022ed33aa2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numServers", "=", "36"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fabrixGraph", "=", 
   RowBox[{"GridGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", "6"}], "}"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "None"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Transaction Fabrix (6x6 Mesh)\>\""}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"torLayer", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "18"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"leafLayer", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"18", "+", "i"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "9"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"spineLayer", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"18", "+", "9", "+", "i"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"serverLayer", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"18", "+", "9", "+", "6", "+", "i"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "36"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"closEdges", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"serverLayer", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"2", " ", "i"}], "-", "1"}], "\[RightDoubleBracket]"}], 
         "\[UndirectedEdge]", 
         RowBox[{
         "torLayer", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
         ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "18"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"serverLayer", "\[LeftDoubleBracket]", 
          RowBox[{"2", " ", "i"}], "\[RightDoubleBracket]"}], 
         "\[UndirectedEdge]", 
         RowBox[{
         "torLayer", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
         ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "18"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"torLayer", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"2", " ", "i"}], "-", "1"}], "\[RightDoubleBracket]"}], 
         "\[UndirectedEdge]", 
         RowBox[{
         "leafLayer", "\[LeftDoubleBracket]", "i", 
          "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "9"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"torLayer", "\[LeftDoubleBracket]", 
          RowBox[{"2", " ", "i"}], "\[RightDoubleBracket]"}], 
         "\[UndirectedEdge]", 
         RowBox[{
         "leafLayer", "\[LeftDoubleBracket]", "i", 
          "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "9"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"leaf", "\[UndirectedEdge]", "spine"}], ",", 
        RowBox[{"{", 
         RowBox[{"leaf", ",", "leafLayer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"spine", ",", "spineLayer"}], "}"}]}], "]"}], "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"closGraph", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
      "torLayer", ",", "leafLayer", ",", "spineLayer", ",", "serverLayer"}], 
      "]"}], ",", "closEdges", ",", 
     RowBox[{"VertexLabels", "\[Rule]", "None"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Clos Network (36 Servers)\>\""}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fabrixLaplacian", "=", 
   RowBox[{"KirchhoffMatrix", "[", "fabrixGraph", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"closLaplacian", "=", 
   RowBox[{"KirchhoffMatrix", "[", "closGraph", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"numFabrixTrees", "=", 
   RowBox[{"Det", "[", 
    RowBox[{"Rest", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Rest", "[", "fabrixLaplacian", "]"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"numClosTrees", "=", 
   RowBox[{"Det", "[", 
    RowBox[{"Rest", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Rest", "[", "closLaplacian", "]"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"spanningTreePlot", "=", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"numFabrixTrees", ",", "numClosTrees"}], "}"}], ",", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Transaction Fabrix\>\"", ",", "\"\<Clos Network\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}], ",", 
     RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Number of Spanning Trees (Path Redundancy)\>\""}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "12"}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"calculateConnectivity", "[", "g_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"N", "[", 
         RowBox[{"KirchhoffMatrix", "[", "g", "]"}], "]"}], "]"}], "]"}], "<",
       "2"}], ",", "0", ",", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"N", "[", 
         RowBox[{"KirchhoffMatrix", "[", "g", "]"}], "]"}], "]"}], "]"}], 
      "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"edgesToRemove", "=", "25"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fabrixDegradation", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"g", "=", "fabrixGraph"}], ",", 
         RowBox[{"steps", "=", 
          RowBox[{"{", "}"}]}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"steps", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"calculateConnectivity", "[", "g", "]"}]}], "}"}]}], 
            "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"EdgeCount", "[", "g", "]"}], ">", "0"}], ",", 
             RowBox[{"g", "=", 
              RowBox[{"EdgeDelete", "[", 
               RowBox[{"g", ",", 
                RowBox[{"RandomChoice", "[", 
                 RowBox[{"EdgeList", "[", "g", "]"}], "]"}]}], "]"}]}]}], 
            "]"}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "edgesToRemove"}], "}"}]}], "]"}], ";",
         "steps"}]}], "]"}], ",", 
     RowBox[{"{", "5", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"closDegradation", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"g", "=", "closGraph"}], ",", 
         RowBox[{"steps", "=", 
          RowBox[{"{", "}"}]}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"steps", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"calculateConnectivity", "[", "g", "]"}]}], "}"}]}], 
            "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"EdgeCount", "[", "g", "]"}], ">", "0"}], ",", 
             RowBox[{"g", "=", 
              RowBox[{"EdgeDelete", "[", 
               RowBox[{"g", ",", 
                RowBox[{"RandomChoice", "[", 
                 RowBox[{"EdgeList", "[", "g", "]"}], "]"}]}], "]"}]}]}], 
            "]"}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "edgesToRemove"}], "}"}]}], "]"}], ";",
         "steps"}]}], "]"}], ",", 
     RowBox[{"{", "5", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"resiliencePlot", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Mean", "[", "fabrixDegradation", "]"}], ",", 
       RowBox[{"Mean", "[", "closDegradation", "]"}]}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Transaction Fabrix\>\"", ",", "\"\<Clos Network\>\""}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Number of Links Removed\>\"", ",", 
        "\"\<Algebraic Connectivity (\[Lambda]\:2082)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Resilience to Link Failure\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0.2", ",", "0.7", ",", "0.2"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0.2", ",", "0.5", ",", "0.8"}], "]"}]}], "}"}]}], "}"}]}],
      ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", "12"}], 
       "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fabrixGraph", ",", "closGraph"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"spanningTreePlot", ",", "resiliencePlot"}], "}"}]}], "}"}], 
  "]"}]}], "Code",
 CellChangeTimes->{{3.962078007883782*^9, 3.962078007888475*^9}, 
   3.962080073322617*^9},
 CellLabel->
  "In[2314]:=",ExpressionUUID->"38cc635c-8963-43f6-bd88-c861ac3dca09"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
           36}, {Null, 
           SparseArray[
           Automatic, {36, 36}, 0, {
            1, {{0, 2, 5, 8, 11, 14, 16, 19, 23, 27, 31, 35, 38, 41, 45, 49, 
              53, 57, 60, 63, 67, 71, 75, 79, 82, 85, 89, 93, 97, 101, 104, 
              106, 109, 112, 115, 118, 120}, {{2}, {7}, {1}, {3}, {8}, {2}, {
              4}, {9}, {3}, {5}, {10}, {4}, {6}, {11}, {5}, {12}, {1}, {8}, {
              13}, {2}, {7}, {9}, {14}, {3}, {8}, {10}, {15}, {4}, {9}, {
              11}, {16}, {5}, {10}, {12}, {17}, {6}, {11}, {18}, {7}, {14}, {
              19}, {8}, {13}, {15}, {20}, {9}, {14}, {16}, {21}, {10}, {15}, {
              17}, {22}, {11}, {16}, {18}, {23}, {12}, {17}, {24}, {13}, {
              20}, {25}, {14}, {19}, {21}, {26}, {15}, {20}, {22}, {27}, {
              16}, {21}, {23}, {28}, {17}, {22}, {24}, {29}, {18}, {23}, {
              30}, {19}, {26}, {31}, {20}, {25}, {27}, {32}, {21}, {26}, {
              28}, {33}, {22}, {27}, {29}, {34}, {23}, {28}, {30}, {35}, {
              24}, {29}, {36}, {25}, {32}, {26}, {31}, {33}, {27}, {32}, {
              34}, {28}, {33}, {35}, {29}, {34}, {36}, {30}, {35}}}, 
             Pattern}]}, {
          GraphLayout -> {"GridEmbedding", "Dimension" -> {6, 6}}, ImageSize -> 
           Medium, PlotLabel -> "Transaction Fabrix (6x6 Mesh)", 
           VertexLabels -> {None}}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx1kTEKgDAMRYNTxgwZsgreozmDRxCcvbpHUCkiPtJCebxSPj/tvB3rPonI
cu+HfZ2tpuTfFW5wh0fWOZI1FW5wh7/57MUcHdDgDg/c49zsyVzS4YFzviPn
Zk/mkgGO/oXvyLnZ88u9AHxXIjY=
           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
             ArrowBox[{{1, 2}, {1, 7}, {2, 3}, {2, 8}, {3, 4}, {3, 9}, {4, 
              5}, {4, 10}, {5, 6}, {5, 11}, {6, 12}, {7, 8}, {7, 13}, {8, 
              9}, {8, 14}, {9, 10}, {9, 15}, {10, 11}, {10, 16}, {11, 12}, {
              11, 17}, {12, 18}, {13, 14}, {13, 19}, {14, 15}, {14, 20}, {15, 
              16}, {15, 21}, {16, 17}, {16, 22}, {17, 18}, {17, 23}, {18, 
              24}, {19, 20}, {19, 25}, {20, 21}, {20, 26}, {21, 22}, {21, 
              27}, {22, 23}, {22, 28}, {23, 24}, {23, 29}, {24, 30}, {25, 
              26}, {25, 31}, {26, 27}, {26, 32}, {27, 28}, {27, 33}, {28, 
              29}, {28, 34}, {29, 30}, {29, 35}, {30, 36}, {31, 32}, {32, 
              33}, {33, 34}, {34, 35}, {35, 36}}, 0.043048128342245986`]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.043048128342245986], 
             DiskBox[2, 0.043048128342245986], 
             DiskBox[3, 0.043048128342245986], 
             DiskBox[4, 0.043048128342245986], 
             DiskBox[5, 0.043048128342245986], 
             DiskBox[6, 0.043048128342245986], 
             DiskBox[7, 0.043048128342245986], 
             DiskBox[8, 0.043048128342245986], 
             DiskBox[9, 0.043048128342245986], 
             DiskBox[10, 0.043048128342245986], 
             DiskBox[11, 0.043048128342245986], 
             DiskBox[12, 0.043048128342245986], 
             DiskBox[13, 0.043048128342245986], 
             DiskBox[14, 0.043048128342245986], 
             DiskBox[15, 0.043048128342245986], 
             DiskBox[16, 0.043048128342245986], 
             DiskBox[17, 0.043048128342245986], 
             DiskBox[18, 0.043048128342245986], 
             DiskBox[19, 0.043048128342245986], 
             DiskBox[20, 0.043048128342245986], 
             DiskBox[21, 0.043048128342245986], 
             DiskBox[22, 0.043048128342245986], 
             DiskBox[23, 0.043048128342245986], 
             DiskBox[24, 0.043048128342245986], 
             DiskBox[25, 0.043048128342245986], 
             DiskBox[26, 0.043048128342245986], 
             DiskBox[27, 0.043048128342245986], 
             DiskBox[28, 0.043048128342245986], 
             DiskBox[29, 0.043048128342245986], 
             DiskBox[30, 0.043048128342245986], 
             DiskBox[31, 0.043048128342245986], 
             DiskBox[32, 0.043048128342245986], 
             DiskBox[33, 0.043048128342245986], 
             DiskBox[34, 0.043048128342245986], 
             DiskBox[35, 0.043048128342245986], 
             DiskBox[36, 0.043048128342245986]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->"NetworkGraphics",
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->Medium,
      PlotLabel->FormBox[
       "\"Transaction Fabrix (6x6 Mesh)\"", TraditionalForm]], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
           36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
           53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69}, {Null, {{34, 1}, {36, 2}, {38, 3}, {40, 4}, {42, 5}, {44, 6}, {
           46, 7}, {48, 8}, {50, 9}, {52, 10}, {54, 11}, {56, 12}, {58, 13}, {
           60, 14}, {62, 15}, {64, 16}, {66, 17}, {68, 18}, {35, 1}, {37, 
           2}, {39, 3}, {41, 4}, {43, 5}, {45, 6}, {47, 7}, {49, 8}, {51, 
           9}, {53, 10}, {55, 11}, {57, 12}, {59, 13}, {61, 14}, {63, 15}, {
           65, 16}, {67, 17}, {69, 18}, {1, 19}, {3, 20}, {5, 21}, {7, 22}, {
           9, 23}, {11, 24}, {13, 25}, {15, 26}, {17, 27}, {2, 19}, {4, 20}, {
           6, 21}, {8, 22}, {10, 23}, {12, 24}, {14, 25}, {16, 26}, {18, 
           27}, {19, 28}, {19, 29}, {19, 30}, {19, 31}, {19, 32}, {19, 33}, {
           20, 28}, {20, 29}, {20, 30}, {20, 31}, {20, 32}, {20, 33}, {21, 
           28}, {21, 29}, {21, 30}, {21, 31}, {21, 32}, {21, 33}, {22, 28}, {
           22, 29}, {22, 30}, {22, 31}, {22, 32}, {22, 33}, {23, 28}, {23, 
           29}, {23, 30}, {23, 31}, {23, 32}, {23, 33}, {24, 28}, {24, 29}, {
           24, 30}, {24, 31}, {24, 32}, {24, 33}, {25, 28}, {25, 29}, {25, 
           30}, {25, 31}, {25, 32}, {25, 33}, {26, 28}, {26, 29}, {26, 30}, {
           26, 31}, {26, 32}, {26, 33}, {27, 28}, {27, 29}, {27, 30}, {27, 
           31}, {27, 32}, {27, 33}}}, {
          ImageSize -> Medium, PlotLabel -> "Clos Network (36 Servers)", 
           VertexLabels -> {None}}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9knswFHgAx9d67WKxr3a3zonqLrIe1Wy15PeNiNwRZ0a0lChcL1lHObn1
ujJSR6rL4+RROZ1c3SLKXOmITB7lhNkSdXvVbdm92Mjt7bm5mfvOfOf732e+
35mv3c4DIbuoFArFZ97/5tXIj8tuwhi1rfkdNbtVJLznhnBgggIad6ie7q8h
6adXCdwVk8Rjp7Sde8USsZvFRTUBKiIS+yUXz9ARNaBl533AgaLBdJ3u3Bzx
CQrtu7aJi+eFvn9bLaXCsOGMjVcxGxU1thJpEwuFf8SU2zcycfTPWDUzkIPV
s7Uu/VPWUAZsfGcRpCHLRuK0X0UwMDhdl+DqpyKzERskW32nyRqm4ka6co68
OqhdEtWvJnLFYY6jARUeJPObliEuzj25lRIzTccQ1SszIY2LZotC+S9fWyL5
2l2HBTpz0FLqh2+XcsFI0TxNiDSFSchEt91ZLt7caGSM1OvJHk0pkxvPQdyO
osqJsXckvNvzTLuShYfHnkly35vg3fldAtkXVNRP0u1sCqkI/r5qjXqjGZzk
8pWTmVYoqZ1J1WYbY9/DwJknWgaY9vrWhzss4SKNbP6h23x+t+ik9iAVb9d7
PvDZaggn75fStnxjDDYkHHOws0aS2yl+qqcZMpKeVk5m01FVUe2ZobXCqzlH
D+9ZI2wzPzghk1qCGA0FU4pp+Hx7vfBlKw38O1/2lo7ToD7eHvmolY6utwl9
JvvoMJ3Nmmbb0nBcER4d42uGy6tvZ+fcpKFQust+dj8d6XUxy+UmdCwWb46O
09CRmWch9L5FRw1zkY/171RgODbik+QLJCIxNdgl1hgUytmyA0k8MrMwdf2S
qr9I4nXnO0e67hN9MW/RtN8MkcXtT8ooGiVdZuWlkZv7SZoqIG/EgwnZIfHC
vUfayEdhrdUrGdagrHfWNsmKyPMBnUgoo81z/9PSA5retXbmeHMlXC0MWgBR
idZrVbSalD2muroRHrqs2gy+s5ki94LnrnXn8lGQl+M+WqAjOZzXFc3dfPg4
qvwKthlg2G0wSNe+AIpNa0sqQzjYdIndUaHjwl79qYNpDBeJ/eVltCk2VgV3
vK+w5eGukaC2r5MFSQbLx7eRh56snx3yRSy4GohZjPg+slEvYRlK2LBWvjV9
fGqUKMebeo6aMP7vfUJ+WJh9wQoyf789l1OqyHXv+Ir6shdEnpBfnTb/05sX
F4eJk8fJT466yviqKXKrUvLandtJLt59pjypowAn9vp++6ifdAkDw56t0JEM
D8XLRH8Bxn898llNLg00OTQ5UQIEO+idttmYo23RGe2WLD4MJ3ZfrfmQieWp
fYPlej5+G3Jps3lthayWSyue11pCJD2dvETJh3OLw/bQdRaoPbTMv3KlAGlb
PUVOEaaY6g/xY68QYFimtWx5YISkwfSC2TE+6sa7ifOjOcJqGKkrvs+D270d
vRyVlqi8bDe8COUhXt+59Gqzkmw57XbCvJyD852HB+3GVCRKrHB0/5GLfwBk
EuSO
           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
             ArrowBox[{{1, 19}, {1, 34}, {1, 35}, {2, 19}, {2, 36}, {2, 37}, {
              3, 20}, {3, 38}, {3, 39}, {4, 20}, {4, 40}, {4, 41}, {5, 21}, {
              5, 42}, {5, 43}, {6, 21}, {6, 44}, {6, 45}, {7, 22}, {7, 46}, {
              7, 47}, {8, 22}, {8, 48}, {8, 49}, {9, 23}, {9, 50}, {9, 51}, {
              10, 23}, {10, 52}, {10, 53}, {11, 24}, {11, 54}, {11, 55}, {12, 
              24}, {12, 56}, {12, 57}, {13, 25}, {13, 58}, {13, 59}, {14, 
              25}, {14, 60}, {14, 61}, {15, 26}, {15, 62}, {15, 63}, {16, 
              26}, {16, 64}, {16, 65}, {17, 27}, {17, 66}, {17, 67}, {18, 
              27}, {18, 68}, {18, 69}, {19, 28}, {19, 29}, {19, 30}, {19, 
              31}, {19, 32}, {19, 33}, {20, 28}, {20, 29}, {20, 30}, {20, 
              31}, {20, 32}, {20, 33}, {21, 28}, {21, 29}, {21, 30}, {21, 
              31}, {21, 32}, {21, 33}, {22, 28}, {22, 29}, {22, 30}, {22, 
              31}, {22, 32}, {22, 33}, {23, 28}, {23, 29}, {23, 30}, {23, 
              31}, {23, 32}, {23, 33}, {24, 28}, {24, 29}, {24, 30}, {24, 
              31}, {24, 32}, {24, 33}, {25, 28}, {25, 29}, {25, 30}, {25, 
              31}, {25, 32}, {25, 33}, {26, 28}, {26, 29}, {26, 30}, {26, 
              31}, {26, 32}, {26, 33}, {27, 28}, {27, 29}, {27, 30}, {27, 
              31}, {27, 32}, {27, 33}}, 0.050211073586969135`]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.050211073586969135], 
             DiskBox[2, 0.050211073586969135], 
             DiskBox[3, 0.050211073586969135], 
             DiskBox[4, 0.050211073586969135], 
             DiskBox[5, 0.050211073586969135], 
             DiskBox[6, 0.050211073586969135], 
             DiskBox[7, 0.050211073586969135], 
             DiskBox[8, 0.050211073586969135], 
             DiskBox[9, 0.050211073586969135], 
             DiskBox[10, 0.050211073586969135], 
             DiskBox[11, 0.050211073586969135], 
             DiskBox[12, 0.050211073586969135], 
             DiskBox[13, 0.050211073586969135], 
             DiskBox[14, 0.050211073586969135], 
             DiskBox[15, 0.050211073586969135], 
             DiskBox[16, 0.050211073586969135], 
             DiskBox[17, 0.050211073586969135], 
             DiskBox[18, 0.050211073586969135], 
             DiskBox[19, 0.050211073586969135], 
             DiskBox[20, 0.050211073586969135], 
             DiskBox[21, 0.050211073586969135], 
             DiskBox[22, 0.050211073586969135], 
             DiskBox[23, 0.050211073586969135], 
             DiskBox[24, 0.050211073586969135], 
             DiskBox[25, 0.050211073586969135], 
             DiskBox[26, 0.050211073586969135], 
             DiskBox[27, 0.050211073586969135], 
             DiskBox[28, 0.050211073586969135], 
             DiskBox[29, 0.050211073586969135], 
             DiskBox[30, 0.050211073586969135], 
             DiskBox[31, 0.050211073586969135], 
             DiskBox[32, 0.050211073586969135], 
             DiskBox[33, 0.050211073586969135], 
             DiskBox[34, 0.050211073586969135], 
             DiskBox[35, 0.050211073586969135], 
             DiskBox[36, 0.050211073586969135], 
             DiskBox[37, 0.050211073586969135], 
             DiskBox[38, 0.050211073586969135], 
             DiskBox[39, 0.050211073586969135], 
             DiskBox[40, 0.050211073586969135], 
             DiskBox[41, 0.050211073586969135], 
             DiskBox[42, 0.050211073586969135], 
             DiskBox[43, 0.050211073586969135], 
             DiskBox[44, 0.050211073586969135], 
             DiskBox[45, 0.050211073586969135], 
             DiskBox[46, 0.050211073586969135], 
             DiskBox[47, 0.050211073586969135], 
             DiskBox[48, 0.050211073586969135], 
             DiskBox[49, 0.050211073586969135], 
             DiskBox[50, 0.050211073586969135], 
             DiskBox[51, 0.050211073586969135], 
             DiskBox[52, 0.050211073586969135], 
             DiskBox[53, 0.050211073586969135], 
             DiskBox[54, 0.050211073586969135], 
             DiskBox[55, 0.050211073586969135], 
             DiskBox[56, 0.050211073586969135], 
             DiskBox[57, 0.050211073586969135], 
             DiskBox[58, 0.050211073586969135], 
             DiskBox[59, 0.050211073586969135], 
             DiskBox[60, 0.050211073586969135], 
             DiskBox[61, 0.050211073586969135], 
             DiskBox[62, 0.050211073586969135], 
             DiskBox[63, 0.050211073586969135], 
             DiskBox[64, 0.050211073586969135], 
             DiskBox[65, 0.050211073586969135], 
             DiskBox[66, 0.050211073586969135], 
             DiskBox[67, 0.050211073586969135], 
             DiskBox[68, 0.050211073586969135], 
             DiskBox[69, 0.050211073586969135]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->"NetworkGraphics",
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->Medium,
      PlotLabel->FormBox["\"Clos Network (36 Servers)\"", TraditionalForm]]},
    {
     GraphicsBox[{
       {Opacity[0], 
        PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
         0.}}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.6859999999999999], Thickness[Small]}], 
         {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[
          0.6859999999999999], Thickness[Small]}], 
          RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 3.25655396352*^13},
           
           RoundingRadius->0]}, 
         {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[
          0.6859999999999999], Thickness[Small]}], 
          RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 9.9179645184*^10},
           
           RoundingRadius->0]}}, {}, {}}, {}, {
        InsetBox["32565539635200", Offset[{0, 4}, {1., 3.25655396352*^13}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox["99179645184", Offset[{0, 4}, {2., 9.9179645184*^10}], 
         ImageScaled[{0.5, 0}]]}, {}, {}, 
       StyleBox[
        StyleBox[{
          {Thickness[Tiny], 
           LineBox[{{-0.8428550619082302, 0.}, {3.870688128186453, 0.}}], 
           StyleBox[{}, "GraphicsLabel",
            StripOnInput->False]}, 
          StyleBox[{
            {Thickness[Tiny], 
             LineBox[{{0.5487982520029133, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
                0.}]}], 
             LineBox[{{2.4512017479970867`, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {2.4512017479970867`, 
                0.}]}], {{}, {}, {
               LineBox[{{1.4512017479970867`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
                  0.}]}], 
               LineBox[{{1.5487982520029133`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
                  0.}]}]}, {}}}, 
            StyleBox[
             {Thickness[Tiny], 
              InsetBox["\<\"Transaction Fabrix\"\>", 
               Offset[{0, -2}, {1., 0.}], NCache[
               ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
               Automatic, {1, 0}], 
              InsetBox["\<\"Clos Network\"\>", Offset[{0, -2}, {2., 0.}], 
               NCache[ImageScaled[{Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}]}, "GraphicsLabel",
             StripOnInput->False]}, "GraphicsTicks",
           StripOnInput->False]},
         Antialiasing->False], "GraphicsAxes",
        StripOnInput->False]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.8428550619082302, 0.},
      BaseStyle->{FontFamily -> "Helvetica", 12},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Large,
      PlotLabel->FormBox[
       "\"Number of Spanning Trees (Path Redundancy)\"", TraditionalForm],
      PlotRange->{{All, All}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{None, Automatic}], 
     TemplateBox[{
       GraphicsBox[{{}, 
         InterpretationBox[{
           TagBox[{{{}, {}, 
              TagBox[{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[
                  NCache[
                   Rational[1, 60], 0.016666666666666666`]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 Thickness[Large], 
                 RGBColor[0.2, 0.7, 0.2]], 
                LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQMeZ+fFiahdtIfwPtibuZuuNc49D+UzOLCVlho2
x5+F8jkcZkndqjzz9BSUL+Cw4bXA7RbXk1C+iENdmzR3/5NjUL6Eg7a3yOnp
bDC+jIOD0fvAGfkHoHwFB6//hbnFUXugfCWHDSIL5bZk7oLyVRwMRPg61srD
+GoOi02LuyO/r4HyNRyUE54XdzivgvK1HK69Y/BteLIcytdxcJ5pGa4wDcbX
c+D7z/O6TGs6lG/gMOPCdAvnC31QvqFD2Kf+4uO5DVC+kUP2C9dvs+LqoXxj
B711dqtUusqgfBMHpT5VVxXV7TYQvqkD3/PvTaZPjkP5Zg4M61K4en+WQ/nm
Du4ZDKuuZm/fA+FbOAi/V+XfGrIPyrd0KH58vfFJVO0eAMpVbQA=
                 "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
              TagBox[{
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[
                  NCache[
                   Rational[1, 60], 0.016666666666666666`]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 Thickness[Large], 
                 RGBColor[0.2, 0.5, 0.8]], 
                LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQO/lj+YdPjtKXsI74P9mfenT/DMPwLlMzgYuawx
PfxmM5TP4SD5LNMnpGYJlC/gIK2YNOWSx2IoX8TBW7Iv8Q3fFRsIX8LBxe7c
19yqi3sgfBkHd//CSZ+OnIDKKzgINMv3/VG6AJVXctiWvqrs7cYbUL6Kg1en
QSUfw2koX82hg2PLD1vV81C+hkPzbNUDLd/uQPlaDo8m19g/PPsQytdxaCg5
xn259SaUr+dQ2nasfosTTL2Bw4m6sOI3wjD1hg6idze/teB9DOUbOaQ+YL/b
3Q6TN3YQOPytc1o0jG/i8D5NRa1S8RGUb+ogUFGglMPyBMo3c+BLfXu5bd51
KN/cYdU1vz1PhWHmWzjMNSyfL8d4H8q3dJC77J+4T/3hHgBTy36j
                 "]]}, Annotation[#, "Charting`Private`Tag#2"]& ]}}, {
            "WolframDynamicHighlight", <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
           StyleBox[
            DynamicBox[
             (Charting`HighlightActionBox["DynamicHighlight", {}, 
              Slot["HighlightElements"], 
              Slot["LayoutOptions"], 
              Slot["Meta"], 
              Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
                 Annotation[{
                   Hue[0.67, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[1, 60]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Thickness[Large], 
                    RGBColor[0.2, 0.7, 0.2]], 
                   Line[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQMeZ+fFiahdtIfwPtibuZuuNc49D+UzOLCVlho2
x5+F8jkcZkndqjzz9BSUL+Cw4bXA7RbXk1C+iENdmzR3/5NjUL6Eg7a3yOnp
bDC+jIOD0fvAGfkHoHwFB6//hbnFUXugfCWHDSIL5bZk7oLyVRwMRPg61srD
+GoOi02LuyO/r4HyNRyUE54XdzivgvK1HK69Y/BteLIcytdxcJ5pGa4wDcbX
c+D7z/O6TGs6lG/gMOPCdAvnC31QvqFD2Kf+4uO5DVC+kUP2C9dvs+LqoXxj
B711dqtUusqgfBMHpT5VVxXV7TYQvqkD3/PvTaZPjkP5Zg4M61K4en+WQ/nm
Du4ZDKuuZm/fA+FbOAi/V+XfGrIPyrd0KH58vfFJVO0eAMpVbQA=
                    "]]}, "Charting`Private`Tag#1"], 
                 Annotation[{
                   Hue[0.9060679774997897, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[1, 60]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Thickness[Large], 
                    RGBColor[0.2, 0.5, 0.8]], 
                   Line[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQO/lj+YdPjtKXsI74P9mfenT/DMPwLlMzgYuawx
PfxmM5TP4SD5LNMnpGYJlC/gIK2YNOWSx2IoX8TBW7Iv8Q3fFRsIX8LBxe7c
19yqi3sgfBkHd//CSZ+OnIDKKzgINMv3/VG6AJVXctiWvqrs7cYbUL6Kg1en
QSUfw2koX82hg2PLD1vV81C+hkPzbNUDLd/uQPlaDo8m19g/PPsQytdxaCg5
xn259SaUr+dQ2nasfosTTL2Bw4m6sOI3wjD1hg6idze/teB9DOUbOaQ+YL/b
3Q6TN3YQOPytc1o0jG/i8D5NRa1S8RGUb+ogUFGglMPyBMo3c+BLfXu5bd51
KN/cYdU1vz1PhWHmWzjMNSyfL8d4H8q3dJC77J+4T/3hHgBTy36j
                    "]]}, "Charting`Private`Tag#2"]}}, <|
               "HighlightElements" -> <|
                 "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                "LayoutOptions" -> <|
                 "PanelPlotLayout" -> <||>, 
                  "PlotRange" -> {{0, 25.}, {-2.2223639597432788`*^-15, 
                    0.2679491924311219}}, 
                  "Frame" -> {{True, True}, {True, True}}, 
                  "AxesOrigin" -> {0, 0}, 
                  "ImageSize" -> {576, 576/GoldenRatio}, 
                  "Axes" -> {False, False}, 
                  "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
                  GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    PointSize[
                    Rational[1, 60]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Thickness[Large], 
                    RGBColor[0.2, 0.5, 0.8]], 
                    Directive[
                    PointSize[
                    Rational[1, 60]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Thickness[Large], 
                    RGBColor[0.2, 0.7, 0.2]]}, 
                  "HighlightLabelingFunctions" -> <|
                   "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                  False|>, 
                "Meta" -> <|
                 "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                  "Function" -> ListLinePlot, "GroupHighlight" -> 
                  False|>|>]]& )[<|
              "HighlightElements" -> <|
                "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
               "LayoutOptions" -> <|
                "PanelPlotLayout" -> <||>, 
                 "PlotRange" -> {{0, 25.}, {-2.2223639597432788`*^-15, 
                   0.2679491924311219}}, 
                 "Frame" -> {{True, True}, {True, True}}, 
                 "AxesOrigin" -> {0, 0}, 
                 "ImageSize" -> {576, 576/GoldenRatio}, 
                 "Axes" -> {False, False}, 
                 "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
                 GoldenRatio^(-1), "DefaultStyle" -> {
                   Directive[
                    PointSize[
                    Rational[1, 60]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Thickness[Large], 
                    RGBColor[0.2, 0.5, 0.8]], 
                   Directive[
                    PointSize[
                    Rational[1, 60]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Thickness[Large], 
                    RGBColor[0.2, 0.7, 0.2]]}, 
                 "HighlightLabelingFunctions" -> <|
                  "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                   "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                 False|>, 
               "Meta" -> <|
                "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                 "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]], 
            Selectable -> False]}, 
          Annotation[{{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                Thickness[Large], 
                RGBColor[0.2, 0.7, 0.2]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQMeZ+fFiahdtIfwPtibuZuuNc49D+UzOLCVlho2
x5+F8jkcZkndqjzz9BSUL+Cw4bXA7RbXk1C+iENdmzR3/5NjUL6Eg7a3yOnp
bDC+jIOD0fvAGfkHoHwFB6//hbnFUXugfCWHDSIL5bZk7oLyVRwMRPg61srD
+GoOi02LuyO/r4HyNRyUE54XdzivgvK1HK69Y/BteLIcytdxcJ5pGa4wDcbX
c+D7z/O6TGs6lG/gMOPCdAvnC31QvqFD2Kf+4uO5DVC+kUP2C9dvs+LqoXxj
B711dqtUusqgfBMHpT5VVxXV7TYQvqkD3/PvTaZPjkP5Zg4M61K4en+WQ/nm
Du4ZDKuuZm/fA+FbOAi/V+XfGrIPyrd0KH58vfFJVO0eAMpVbQA=
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                Thickness[Large], 
                RGBColor[0.2, 0.5, 0.8]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQO/lj+YdPjtKXsI74P9mfenT/DMPwLlMzgYuawx
PfxmM5TP4SD5LNMnpGYJlC/gIK2YNOWSx2IoX8TBW7Iv8Q3fFRsIX8LBxe7c
19yqi3sgfBkHd//CSZ+OnIDKKzgINMv3/VG6AJVXctiWvqrs7cYbUL6Kg1en
QSUfw2koX82hg2PLD1vV81C+hkPzbNUDLd/uQPlaDo8m19g/PPsQytdxaCg5
xn259SaUr+dQ2nasfosTTL2Bw4m6sOI3wjD1hg6idze/teB9DOUbOaQ+YL/b
3Q6TN3YQOPytc1o0jG/i8D5NRa1S8RGUb+ogUFGglMPyBMo3c+BLfXu5bd51
KN/cYdU1vz1PhWHmWzjMNSyfL8d4H8q3dJC77J+4T/3hHgBTy36j
                "]]}, "Charting`Private`Tag#2"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{0, 25.}, {-2.2223639597432788`*^-15, 
                0.2679491924311219}}, "Frame" -> {{True, True}, {True, True}},
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
              "Axes" -> {False, False}, 
              "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 Thickness[Large], 
                 RGBColor[0.2, 0.5, 0.8]], 
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                 Thickness[Large], 
                 RGBColor[0.2, 0.7, 0.2]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>, 
           "DynamicHighlight"]], {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {
           FormBox[
            TagBox["\"Number of Links Removed\"", HoldForm], TraditionalForm], 
           FormBox[
            TagBox["\"Algebraic Connectivity (\[Lambda]\:2082)\"", HoldForm], 
            TraditionalForm]}, AxesOrigin -> {0, 0}, 
         BaseStyle -> {FontFamily -> "Helvetica", 12}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         LabelStyle -> {FontFamily -> "Times"}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.365248, 0.427802, 0.758297], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.945109, 0.593901, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.645957, 0.253192, 0.685109], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.285821, 0.56, 0.450773], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.7, 0.336, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.491486, 0.345109, 0.8], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.71788, 0.568653, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.70743, 0.224, 0.542415], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.287228, 0.490217, 0.664674], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
           "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> 
           Automatic, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Resilience to Link Failure\"", TraditionalForm], 
         PlotRange -> {{0, 25.}, {-2.2223639597432788`*^-15, 
           0.2679491924311219}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Transaction Fabrix\"", "\"Clos Network\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Thickness[Large], 
                    RGBColor[0.2, 0.7, 0.2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Thickness[Large], 
                    RGBColor[0.2, 0.7, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Thickness[Large], 
                    RGBColor[0.2, 0.5, 0.8]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], FontFamily -> "Helvetica", 
                    Thickness[Large], 
                    RGBColor[0.2, 0.5, 0.8]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.2, 0.7, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.2, 0.5, 0.8]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.9620776721225357`*^9, 3.9620776904549026`*^9}, 
   3.962077858993205*^9, 3.9620779309317207`*^9, {3.962077979814643*^9, 
   3.96207800867061*^9}, 3.962080073861389*^9},
 CellLabel->
  "Out[2332]=",ExpressionUUID->"eefcbcc7-2a4b-4965-8b9c-d70fa783a5a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"closData", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"\"\<2-Clos Slices\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "2.0", ",", "4.0", ",", "6.0", ",", "8.0", ",", "10.0", ",", "12.0", 
        ",", "14.0", ",", "16.0", ",", "18.0", ",", "20.0", ",", "22.0", ",", 
        "24.0", ",", "26.0", ",", "28.0", ",", "30.0", ",", "32.0", ",", 
        "34.0", ",", "36.0", ",", "38.0", ",", "40.0"}], "}"}]}], ",", 
     RowBox[{"\"\<4-Clos Slices\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "4.0", ",", "8.0", ",", "12.0", ",", "16.0", ",", "20.0", ",", "24.0", 
        ",", "28.0", ",", "32.0", ",", "36.0", ",", "40.0", ",", "44.0", ",", 
        "48.0", ",", "52.0", ",", "56.0", ",", "60.0", ",", "64.0", ",", 
        "68.0", ",", "72.0", ",", "76.0", ",", "80.0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"cellularData", "=", 
   RowBox[{"{", 
    RowBox[{
    "19.2", ",", "50.0", ",", "80.8", ",", "111.6", ",", "142.4", ",", 
     "173.2", ",", "204.0", ",", "234.8", ",", "265.6", ",", "296.4", ",", 
     "327.2", ",", "358.0", ",", "388.8", ",", "419.6", ",", "450.4", ",", 
     "481.2", ",", "512.0", ",", "542.8", ",", "573.6", ",", "604.4"}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"servers", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"40", ",", "800", ",", "40"}], "]"}]}], ";"}], "\n", 
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"cellularData", ",", 
     RowBox[{"closData", "[", "\"\<2-Clos Slices\>\"", "]"}], ",", 
     RowBox[{"closData", "[", "\"\<4-Clos Slices\>\"", "]"}]}], "}"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"servers", ",", "None"}], "}"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Cellular Fabric\>\"", ",", "\"\<2-Clos Slices\>\"", ",", 
      "\"\<4-Clos Slices\>\""}], "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Total Servers\>\"", ",", "\"\<Total Bandwidth (Tb/s)\>\""}],
      "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Cellular Fabric vs. Clos Network Bandwidth\>\""}]}], "]"}]}], "Code",\

 CellChangeTimes->{{3.962077719457535*^9, 3.9620777291918592`*^9}},
 CellLabel->
  "In[1678]:=",ExpressionUUID->"c81520df-6d2b-4cf5-aefd-33c1540804b5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{-0.7, 0.}, {60.5, 0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.761959, 0.470832, 0.940597]], 
           RectangleBox[{0.5, 0.}, {1.5, 19.2}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.7895956315789474, 0.5372870526315789, 0.9479334210526316]], 
           RectangleBox[{1.5, 0.}, {2.5, 50.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.8186664210526317, 0.595413947368421, 0.9246152105263158]], 
           RectangleBox[{2.5, 0.}, {3.5, 80.8}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.8515616315789474, 0.6313324210526315, 0.8195513157894737]], 
           RectangleBox[{3.5, 0.}, {4.5, 111.6}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.8800638947368421, 0.6639928947368421, 0.7325328947368421]], 
           RectangleBox[{4.5, 0.}, {5.5, 142.4}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9049053684210526, 0.6939383684210526, 0.6605523684210526]], 
           RectangleBox[{5.5, 0.}, {6.5, 173.2}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9225141578947368, 0.7302212631578947, 0.6244960526315789]], 
           RectangleBox[{6.5, 0.}, {7.5, 204.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.937986947368421, 0.7685785263157895, 0.5983557368421053]], 
           RectangleBox[{7.5, 0.}, {8.5, 234.8}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9481723684210527, 0.8135963157894737, 0.5915438421052631]], 
           RectangleBox[{8.5, 0.}, {9.5, 265.6}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.956242, 0.8572503157894736, 0.5886633157894736]], 
           RectangleBox[{9.5, 0.}, {10.5, 296.4}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9606089999999999, 0.8985176842105264, 0.5926626842105264]], 
           RectangleBox[{10.5, 0.}, {11.5, 327.2}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9570324736842105, 0.9281779473684211, 0.6088431578947369]], 
           RectangleBox[{11.5, 0.}, {12.5, 358.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9489167894736842, 0.9512055789473685, 0.6319842631578947]], 
           RectangleBox[{12.5, 0.}, {13.5, 388.8}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9181521578947368, 0.9486268947368421, 0.6826048421052632]], 
           RectangleBox[{13.5, 0.}, {14.5, 419.6}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.8785102105263158, 0.9384262105263158, 0.7399516842105263]], 
           RectangleBox[{14.5, 0.}, {15.5, 450.4}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.8091123684210526, 0.9054493684210526, 0.815200947368421]], 
           RectangleBox[{15.5, 0.}, {16.5, 481.2}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.7247476842105264, 0.8648064736842105, 0.8823652105263158]], 
           RectangleBox[{16.5, 0.}, {17.5, 512.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.6224227894736842, 0.8149643157894737, 0.9398274736842105]], 
           RectangleBox[{17.5, 0.}, {18.5, 542.8}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.5257917894736842, 0.7628034210526317, 0.9435318421052632]], 
           RectangleBox[{18.5, 0.}, {19.5, 573.6}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.431296, 0.709773, 0.927077]], 
           
           RectangleBox[{19.5, 0.}, {20.5, 604.4}, "RoundingRadius" -> 
            0]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.761959, 0.470832, 0.940597]], 
           RectangleBox[{20.5, 0.}, {21.5, 2.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.7895956315789474, 0.5372870526315789, 0.9479334210526316]], 
           RectangleBox[{21.5, 0.}, {22.5, 4.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.8186664210526317, 0.595413947368421, 0.9246152105263158]], 
           RectangleBox[{22.5, 0.}, {23.5, 6.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.8515616315789474, 0.6313324210526315, 0.8195513157894737]], 
           RectangleBox[{23.5, 0.}, {24.5, 8.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.8800638947368421, 0.6639928947368421, 0.7325328947368421]], 
           RectangleBox[{24.5, 0.}, {25.5, 10.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9049053684210526, 0.6939383684210526, 0.6605523684210526]], 
           RectangleBox[{25.5, 0.}, {26.5, 12.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9225141578947368, 0.7302212631578947, 0.6244960526315789]], 
           RectangleBox[{26.5, 0.}, {27.5, 14.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.937986947368421, 0.7685785263157895, 0.5983557368421053]], 
           RectangleBox[{27.5, 0.}, {28.5, 16.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9481723684210527, 0.8135963157894737, 0.5915438421052631]], 
           RectangleBox[{28.5, 0.}, {29.5, 18.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.956242, 0.8572503157894736, 0.5886633157894736]], 
           RectangleBox[{29.5, 0.}, {30.5, 20.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9606089999999999, 0.8985176842105264, 0.5926626842105264]], 
           RectangleBox[{30.5, 0.}, {31.5, 22.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9570324736842105, 0.9281779473684211, 0.6088431578947369]], 
           RectangleBox[{31.5, 0.}, {32.5, 24.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9489167894736842, 0.9512055789473685, 0.6319842631578947]], 
           RectangleBox[{32.5, 0.}, {33.5, 26.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9181521578947368, 0.9486268947368421, 0.6826048421052632]], 
           RectangleBox[{33.5, 0.}, {34.5, 28.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.8785102105263158, 0.9384262105263158, 0.7399516842105263]], 
           RectangleBox[{34.5, 0.}, {35.5, 30.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.8091123684210526, 0.9054493684210526, 0.815200947368421]], 
           RectangleBox[{35.5, 0.}, {36.5, 32.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.7247476842105264, 0.8648064736842105, 0.8823652105263158]], 
           RectangleBox[{36.5, 0.}, {37.5, 34.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.6224227894736842, 0.8149643157894737, 0.9398274736842105]], 
           RectangleBox[{37.5, 0.}, {38.5, 36.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.5257917894736842, 0.7628034210526317, 0.9435318421052632]], 
           RectangleBox[{38.5, 0.}, {39.5, 38.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.431296, 0.709773, 0.927077]], 
           
           RectangleBox[{39.5, 0.}, {40.5, 40.}, "RoundingRadius" -> 
            0]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.761959, 0.470832, 0.940597]], 
           RectangleBox[{40.5, 0.}, {41.5, 4.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.7895956315789474, 0.5372870526315789, 0.9479334210526316]], 
           RectangleBox[{41.5, 0.}, {42.5, 8.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.8186664210526317, 0.595413947368421, 0.9246152105263158]], 
           RectangleBox[{42.5, 0.}, {43.5, 12.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.8515616315789474, 0.6313324210526315, 0.8195513157894737]], 
           RectangleBox[{43.5, 0.}, {44.5, 16.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.8800638947368421, 0.6639928947368421, 0.7325328947368421]], 
           RectangleBox[{44.5, 0.}, {45.5, 20.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9049053684210526, 0.6939383684210526, 0.6605523684210526]], 
           RectangleBox[{45.5, 0.}, {46.5, 24.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9225141578947368, 0.7302212631578947, 0.6244960526315789]], 
           RectangleBox[{46.5, 0.}, {47.5, 28.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.937986947368421, 0.7685785263157895, 0.5983557368421053]], 
           RectangleBox[{47.5, 0.}, {48.5, 32.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9481723684210527, 0.8135963157894737, 0.5915438421052631]], 
           RectangleBox[{48.5, 0.}, {49.5, 36.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.956242, 0.8572503157894736, 0.5886633157894736]], 
           RectangleBox[{49.5, 0.}, {50.5, 40.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9606089999999999, 0.8985176842105264, 0.5926626842105264]], 
           RectangleBox[{50.5, 0.}, {51.5, 44.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9570324736842105, 0.9281779473684211, 0.6088431578947369]], 
           RectangleBox[{51.5, 0.}, {52.5, 48.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9489167894736842, 0.9512055789473685, 0.6319842631578947]], 
           RectangleBox[{52.5, 0.}, {53.5, 52.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.9181521578947368, 0.9486268947368421, 0.6826048421052632]], 
           RectangleBox[{53.5, 0.}, {54.5, 56.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.8785102105263158, 0.9384262105263158, 0.7399516842105263]], 
           RectangleBox[{54.5, 0.}, {55.5, 60.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.8091123684210526, 0.9054493684210526, 0.815200947368421]], 
           RectangleBox[{55.5, 0.}, {56.5, 64.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.7247476842105264, 0.8648064736842105, 0.8823652105263158]], 
           RectangleBox[{56.5, 0.}, {57.5, 68.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.6224227894736842, 0.8149643157894737, 0.9398274736842105]], 
           RectangleBox[{57.5, 0.}, {58.5, 72.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[
            0.5257917894736842, 0.7628034210526317, 0.9435318421052632]], 
           RectangleBox[{58.5, 0.}, {59.5, 76.}, "RoundingRadius" -> 0]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.27999999999999997`]]], 
            RGBColor[0.431296, 0.709773, 0.927077]], 
           
           RectangleBox[{59.5, 0.}, {60.5, 80.}, "RoundingRadius" -> 
            0]}}}, {}, {}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox["19.2`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {1., 19.2}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["50.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {2., 50.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["80.8`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {3., 80.8}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["111.6`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {4., 111.6}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["142.4`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {5., 142.4}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["173.2`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {6., 173.2}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["204.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {7., 204.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["234.8`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {8., 234.8}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["265.6`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {9., 265.6}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["296.4`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {10., 296.4}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["327.2`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {11., 327.2}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["358.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {12., 358.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["388.8`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {13., 388.8}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["419.6`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {14., 419.6}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["450.4`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {15., 450.4}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["481.2`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {16., 481.2}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["512.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {17., 512.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["542.8`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {18., 542.8}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["573.6`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {19., 573.6}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["604.4`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {20., 604.4}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["2.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {21., 2.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["4.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {22., 4.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["6.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {23., 6.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["8.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {24., 8.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["10.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {25., 10.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["12.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {26., 12.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["14.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {27., 14.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["16.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {28., 16.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["18.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {29., 18.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["20.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {30., 20.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["22.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {31., 22.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["24.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {32., 24.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["26.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {33., 26.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["28.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {34., 28.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["30.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {35., 30.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["32.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {36., 32.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["34.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {37., 34.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["36.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {38., 36.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["38.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {39., 38.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["40.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {40., 40.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["4.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {41., 4.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["8.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {42., 8.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["12.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {43., 12.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["16.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {44., 16.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["20.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {45., 20.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["24.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {46., 24.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["28.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {47., 28.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["32.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {48., 32.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["36.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {49., 36.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["40.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {50., 40.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["44.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {51., 44.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["48.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {52., 48.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["52.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {53., 52.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["56.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {54., 56.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["60.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {55., 60.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["64.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {56., 64.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["68.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {57., 68.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["72.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {58., 72.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["76.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {59., 76.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["80.`", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {60., 80.}], 
       ImageScaled[{0.5, 0}]]}, {}, {}, {}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.7, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, Frame -> True, FrameLabel -> {{
        FormBox[
         TagBox["\"Total Bandwidth (Tb/s)\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"Total Servers\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Automatic, FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {15., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {16., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {17., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {18., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {19., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {20., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         20.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         10.5, 
          FormBox["40", TraditionalForm], {0, 0}}, {21., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {22., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {23., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {24., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {25., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {26., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {27., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {28., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {29., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {30., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {31., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {32., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {33., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {34., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {35., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {36., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {37., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {38., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {39., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {40., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         40.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         30.5, 
          FormBox["80", TraditionalForm], {0, 0}}, {41., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {42., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {43., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {44., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {45., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {46., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {47., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {48., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {49., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {50., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {51., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {52., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {53., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {54., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {55., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {56., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {57., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {58., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {59., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {60., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         50.5, 
          FormBox["120", TraditionalForm], {0, 0}}}, {{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {15., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {16., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {17., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {18., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {19., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {20., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         20.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {21., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {22., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {23., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {24., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {25., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {26., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {27., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {28., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {29., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {30., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {31., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {32., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {33., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {34., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {35., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {36., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {37., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {38., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {39., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {40., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         40.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {41., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {42., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {43., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {44., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {45., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {46., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {47., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {48., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {49., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {50., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {51., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {52., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {53., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {54., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {55., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {56., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {57., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {58., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {59., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {60., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], PlotLabel -> 
     FormBox["\"Cellular Fabric vs. Clos Network Bandwidth\"", 
       TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Cellular Fabric\"", "\"2-Clos Slices\"", "\"4-Clos Slices\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.27999999999999997`]]], 
                    RGBColor[0.761959, 0.470832, 0.940597]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.27999999999999997`]]], 
                    RGBColor[
                    0.7895956315789474, 0.5372870526315789, 
                    0.9479334210526316]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.27999999999999997`]]], 
                    RGBColor[
                    0.8186664210526317, 0.595413947368421, 
                    0.9246152105263158]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.761959, 0.470832, 0.940597]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.7895956315789474, 0.5372870526315789, 
                    0.9479334210526316]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.8186664210526317, 0.595413947368421, 
                    0.9246152105263158]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.8515616315789474, 0.6313324210526315, 
                    0.8195513157894737]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.8800638947368421, 0.6639928947368421, 
                    0.7325328947368421]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9049053684210526, 0.6939383684210526, 
                    0.6605523684210526]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9225141578947368, 0.7302212631578947, 
                    0.6244960526315789]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.937986947368421, 0.7685785263157895, 
                    0.5983557368421053]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9481723684210527, 0.8135963157894737, 
                    0.5915438421052631]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.956242, 0.8572503157894736, 0.5886633157894736]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9606089999999999, 0.8985176842105264, 
                    0.5926626842105264]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9570324736842105, 0.9281779473684211, 
                    0.6088431578947369]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9489167894736842, 0.9512055789473685, 
                    0.6319842631578947]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9181521578947368, 0.9486268947368421, 
                    0.6826048421052632]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.8785102105263158, 0.9384262105263158, 
                    0.7399516842105263]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.8091123684210526, 0.9054493684210526, 
                    0.815200947368421]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.7247476842105264, 0.8648064736842105, 
                    0.8823652105263158]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.6224227894736842, 0.8149643157894737, 
                    0.9398274736842105]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.5257917894736842, 0.7628034210526317, 
                    0.9435318421052632]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.27999999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.431296, 0.709773, 0.927077]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.962077719950946*^9, 3.9620777296644287`*^9}},
 CellLabel->
  "Out[1681]=",ExpressionUUID->"c8ccc14f-eeab-45bf-8370-236ef84ac05e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"closLatency", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "300"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "7000"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"transactionFabrixLatency", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3000"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"closLatency", ",", "transactionFabrixLatency"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Clos Network\>\"", ",", "\"\<Transaction Fabrix\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Logical Hops\>\"", ",", "\"\<End to End Latency (ns)\>\""}],
      "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Latency Comparison: Clos vs. Transaction Fabrix\>\""}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.962077724589983*^9, 3.962077726927092*^9}},
 CellLabel->
  "In[1675]:=",ExpressionUUID->"db97ffe4-690c-4f52-8195-7b22ee4c4f7d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{{{}, {}, 
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            
            LineBox[{{1., 5.703782474656201}, {2., 6.907755278982137}, {3., 
             8.006367567650246}, {4., 8.85366542803745}}]}, 
           Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            
            LineBox[{{1., 0.6931471805599453}, {2., 5.298317366548036}, {3., 
             7.090076835776092}, {4., 8.006367567650246}}]}, 
           Annotation[#, "Charting`Private`Tag#2"]& ]}, {
          TagBox[{
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   DiskBox[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[10.976]], {{{1., 5.703782474656201}}, {{2., 
             6.907755278982137}}, {{3., 8.006367567650246}}, {{4., 
             8.85366542803745}}}]}, 
           Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                  PlotRangePadding -> Scaled[0.15]], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[10.5]], {{{1., 0.6931471805599453}}, {{2., 
             5.298317366548036}}, {{3., 7.090076835776092}}, {{4., 
             8.006367567650246}}}]}, 
           Annotation[#, "Charting`Private`Tag#2"]& ]}}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               
               Line[{{1., 5.703782474656201}, {2., 6.907755278982137}, {3., 
                8.006367567650246}, {4., 8.85366542803745}}]}, 
              "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               
               Line[{{1., 0.6931471805599453}, {2., 5.298317366548036}, {3., 
                7.090076835776092}, {4., 8.006367567650246}}]}, 
              "Charting`Private`Tag#2"]}, {
             Annotation[{
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                 Offset[10.976]], {{{1., 5.703782474656201}}, {{2., 
                6.907755278982137}}, {{3., 8.006367567650246}}, {{4., 
                8.85366542803745}}}]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{
                    EdgeForm[], 
                    Polygon[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                   PlotRangePadding -> Scaled[0.15]], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                 Offset[10.5]], {{{1., 0.6931471805599453}}, {{2., 
                5.298317366548036}}, {{3., 7.090076835776092}}, {{4., 
                8.006367567650246}}}]}, "Charting`Private`Tag#2"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{0.9375000000000024, 4.}, {
               0.054540316510033104`, 8.85366542803745}}, 
              "Frame" -> {{True, True}, {True, True}}, 
              "AxesOrigin" -> {0.9375000000000024, 0.054540316510033104`}, 
              "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False},
               "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.365248, 0.427802, 0.758297], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6]], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.9, 0.36, 0.054], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Exp[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {Log, Exp}}|>, 
              "Primitives" -> {}, "GCFlag" -> False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLogPlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{0.9375000000000024, 4.}, {0.054540316510033104`,
               8.85366542803745}}, "Frame" -> {{True, True}, {True, True}}, 
             "AxesOrigin" -> {0.9375000000000024, 0.054540316510033104`}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
             "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Exp[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {Log, Exp}}|>, 
             "Primitives" -> {}, "GCFlag" -> False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListLogPlot, "GroupHighlight" -> False|>|>]], 
        Selectable -> False]}, 
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           
           Line[{{1., 5.703782474656201}, {2., 6.907755278982137}, {3., 
            8.006367567650246}, {4., 8.85366542803745}}]}, 
          "Charting`Private`Tag#1"], 
         Annotation[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.365248, 0.427802, 0.758297], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           
           Line[{{1., 0.6931471805599453}, {2., 5.298317366548036}, {3., 
            7.090076835776092}, {4., 8.006367567650246}}]}, 
          "Charting`Private`Tag#2"]}, {
         Annotation[{
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.9, 0.36, 0.054], 
                  CapForm["Butt"], 
                  AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
             Offset[10.976]], {{{1., 5.703782474656201}}, {{2., 
            6.907755278982137}}, {{3., 8.006367567650246}}, {{4., 
            8.85366542803745}}}]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.365248, 0.427802, 0.758297], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{
                EdgeForm[], 
                Polygon[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
               PlotRangePadding -> Scaled[0.15]], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.365248, 0.427802, 0.758297], 
                  CapForm["Butt"], 
                  AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
             Offset[10.5]], {{{1., 0.6931471805599453}}, {{2., 
            5.298317366548036}}, {{3., 7.090076835776092}}, {{4., 
            8.006367567650246}}}]}, "Charting`Private`Tag#2"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{0.9375000000000024, 4.}, {0.054540316510033104`, 
           8.85366542803745}}, "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {0.9375000000000024, 0.054540316510033104`}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {Log, Exp}}|>, 
          "Primitives" -> {}, "GCFlag" -> False|>, 
        "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLogPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {{0}, {}}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {0.9375000000000024, 0.054540316510033104`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         TagBox["\"End to End Latency (ns)\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"Logical Hops\"", HoldForm], TraditionalForm], None}}, 
     FrameStyle -> Automatic, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.365248, 0.427802, 0.758297], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.945109, 0.593901, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.645957, 0.253192, 0.685109], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.285821, 0.56, 0.450773], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.7, 0.336, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.491486, 0.345109, 0.8], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.71788, 0.568653, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.70743, 0.224, 0.542415], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.287228, 0.490217, 0.664674], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> 
       "CurrentSet", "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
       True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Latency Comparison: Clos vs. Transaction Fabrix\"", 
       TraditionalForm], 
     PlotRange -> {{0.9375000000000024, 4.}, {0.054540316510033104`, 
      8.85366542803745}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0]}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Clos Network\"", "\"Transaction Fabrix\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]]}, PlotRangePadding -> 
                    Scaled[0.15]}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.365248, 0.427802, 0.758297]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], ",", 
                    
                    RowBox[{"Offset", "[", "10.976`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, 
                    PlotRangePadding -> Scaled[0.15]], ",", 
                    RowBox[{"Offset", "[", "10.5`", "]"}]}], "}"}]}], "}"}]}],
            ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.962077724805738*^9, 3.9620777272456923`*^9}},
 CellLabel->
  "Out[1677]=",ExpressionUUID->"8a8b4030-a52f-4e76-90c8-2f6401b6eaa1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"closBandwidthData1Slice", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"40", " ", "i"}], ",", 
       RowBox[{"0.5", " ", "i"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "20"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"closBandwidthData2Slice", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"40", " ", "i"}], ",", 
       RowBox[{"1.0", " ", "i"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "20"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"closBandwidthData4Slice", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"40", " ", "i"}], ",", 
       RowBox[{"2.0", " ", "i"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "20"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "closBandwidthData1Slice", ",", "closBandwidthData2Slice", ",", 
     "closBandwidthData4Slice"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<1-Clos Slice\>\"", ",", "\"\<2-Clos Slices\>\"", ",", 
      "\"\<4-Clos Slices\>\""}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Total Servers in Datacenter\>\"", ",", 
      "\"\<Total Bandwidth (Tb/s)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Bandwidth Requirement in Clos Networks\>\""}],
    ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Marketing\>\""}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.96207773356293*^9, 3.962077735577765*^9}, 
   3.962078132848753*^9},
 CellLabel->
  "In[308]:=",ExpressionUUID->"2849961a-9fb6-44db-91dd-18fceea29fd0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{{{}, {}, 
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             RGBColor[1., 0.4, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            LineBox[CompressedData["
1:eJwty7EKglAUgOGLNDQ4SEiEhGj1Ht2hJxBnB9HBxQhEiCBUTOmtfBQfwdFR
5fwXDh8/5x4/fgapoZSy19mU99DieBdDeqIjeqYTWmGGO8xxL1Yv2sQCLfYl
fcA32uw/9BG/eBJ1RTv8r+mzODS0iy163P9on/uOvnDf01f8400vT44doQ==

             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             RGBColor[0.655728, 0.8, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            LineBox[CompressedData["
1:eJwty78KglAUgPFLk2ODg4ODSURIiH/avUNPEM0NoUOLIogggWhU4lv5SD2C
yvkuHH58nHt2j+KabZRS5jKr8i5a/CfijVZ4RwNT3OITTczREruStrFCh31N
u9jgnv2LPmCLR1F3tMf/nj6J05v28YMB91865P5HR9wPdIwjnvUM3iIc4w==

             "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
          TagBox[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             RGBColor[0., 0.742291, 0.873126], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            LineBox[CompressedData["
1:eJwty80KQUEYgOHJFVhYWFIWFhaSJEmDcwWythALGyclJXU65Cd35dLQPFPT
M2/ffM11vthWQgi13/2bThY9uGSVK9a5YYM7trhnO1kedIdHds1Puscz++YX
PWDBYTKWeuT/VY+Tn5ue8M5o/6Gn9p96Zv+l53wzi19t0x0k
             "]]}, Annotation[#, "Charting`Private`Tag#3"]& ]}, {
          TagBox[{
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             RGBColor[1., 0.4, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{{
                    GrayLevel[1], 
                    DiskBox[{0, 0}, 
                    Offset[{3, 3}]]}, 
                   AbsoluteThickness[1.5], 
                   Dashing[{}], 
                   CircleBox[{0, 0}, 
                    Offset[{3, 3}]]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[
                    Rational[1, 60]], 
                    RGBColor[1., 0.4, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Scaled[9.75]], CompressedData["
1:eJw1y0EKglAQgOGxWrRoISEREtHL7tFbdAJx7UJs0SYJIpBAVMroVh7FI7hs
qTB/D4aPn3ljkiw8T0XEG8cZZyL/d7Jqd1Qjuqdj+kentOAFZ3jFuVre6AXe
0WX/oJeYo8f+Sa+wwLVqS9rnf0Vv1Lamt/jCHfdv2nDf0HvuP3SAXzzYAVkm
HaM=
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             RGBColor[0.655728, 0.8, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{{
                    GrayLevel[1], 
                    PolygonBox[
                    NCache[{
                    Offset[{0, 4}], 
                    Offset[{(-2) 3^Rational[1, 2], -2}], 
                    Offset[{2 3^Rational[1, 2], -2}]}, {
                    Offset[{0, 4}], 
                    Offset[{-3.4641016151377544`, -2}], 
                    Offset[{3.4641016151377544`, -2}]}]]}, 
                   AbsoluteThickness[1.5], 
                   Dashing[{}], 
                   JoinedCurveBox[
                    NCache[
                    Line[{
                    Offset[{0, 4}], 
                    Offset[{(-2) 3^Rational[1, 2], -2}], 
                    Offset[{2 3^Rational[1, 2], -2}], 
                    Offset[{0, 4}]}], 
                    Line[{
                    Offset[{0, 4}], 
                    Offset[{-3.4641016151377544`, -2}], 
                    Offset[{3.4641016151377544`, -2}], 
                    Offset[{0, 4}]}]], CurveClosed -> True]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[
                    Rational[1, 60]], 
                    RGBColor[0.655728, 0.8, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Scaled[9.75]], CompressedData["
1:eJw1y7EKglAUgOFTLY0ODg4NKhIRImbu3cEnkOaGyKFFCUKQICxK6a16pB5B
4fxdOHz8nHu8Y5UXMxGxx5mMM5X/y4z626l7WvCAczyhhWe0sURHbS/0Aq/o
sq9pHxsM2N/oJd5xpZqWXvP/QYfq90lH+MKY+ze94b6jE+57eosfTM0A57oc
5Q==
             "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
          TagBox[{
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             RGBColor[0., 0.742291, 0.873126], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{{
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{0, 3.75}], 
                    Offset[{3.75, 0}], 
                    Offset[{0, -3.75}], 
                    Offset[{-3.75, 0}]}]}, 
                   AbsoluteThickness[1.5], 
                   Dashing[{}], 
                   LineBox[{
                    Offset[{0, 3.75}], 
                    Offset[{3.75, 0}], 
                    Offset[{0, -3.75}], 
                    Offset[{-3.75, 0}], 
                    Offset[{0, 3.75}]}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[
                    Rational[1, 60]], 
                    RGBColor[0., 0.742291, 0.873126], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Scaled[9.75]], CompressedData["
1:eJw1y80KQUEYgOHBDVhYWFIWFhaSJEmDcwWythCLsyElJaVDfnJXLs2p85j6
euZt5muu94ttJYRQy6eUTzn8TxJduGSVK9a5YYMpW9yxXZgddIdHdr2fdI9n
9r1f9IBXDgtjpkf+3/S48HvXEz4Y7T/11P5Lz+y/9ZwfJvEHd2sdJg==
             "]]}, Annotation[#, "Charting`Private`Tag#3"]& ]}}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[1., 0.4, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               Line[CompressedData["
1:eJwty7EKglAUgOGLNDQ4SEiEhGj1Ht2hJxBnB9HBxQhEiCBUTOmtfBQfwdFR
5fwXDh8/5x4/fgapoZSy19mU99DieBdDeqIjeqYTWmGGO8xxL1Yv2sQCLfYl
fcA32uw/9BG/eBJ1RTv8r+mzODS0iy163P9on/uOvnDf01f8400vT44doQ==

                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[0.655728, 0.8, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               Line[CompressedData["
1:eJwty78KglAUgPFLk2ODg4ODSURIiH/avUNPEM0NoUOLIogggWhU4lv5SD2C
yvkuHH58nHt2j+KabZRS5jKr8i5a/CfijVZ4RwNT3OITTczREruStrFCh31N
u9jgnv2LPmCLR1F3tMf/nj6J05v28YMB91865P5HR9wPdIwjnvUM3iIc4w==

                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[0., 0.742291, 0.873126], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               Line[CompressedData["
1:eJwty80KQUEYgOHJFVhYWFIWFhaSJEmDcwWythALGyclJXU65Cd35dLQPFPT
M2/ffM11vthWQgi13/2bThY9uGSVK9a5YYM7trhnO1kedIdHds1Puscz++YX
PWDBYTKWeuT/VY+Tn5ue8M5o/6Gn9p96Zv+l53wzi19t0x0k
                "]]}, "Charting`Private`Tag#3"]}, {
             Annotation[{
               Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[1., 0.4, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{{
                    GrayLevel[1], 
                    Disk[{0, 0}, 
                    Offset[{3, 3}]]}, 
                    AbsoluteThickness[1.5], 
                    Dashing[{}], 
                    Circle[{0, 0}, 
                    Offset[{3, 3}]]}], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[
                    Rational[1, 60]], 
                    RGBColor[1., 0.4, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]]}], {0., 0.}, Automatic, 
                 Scaled[9.75]], CompressedData["
1:eJw1y0EKglAQgOGxWrRoISEREtHL7tFbdAJx7UJs0SYJIpBAVMroVh7FI7hs
qTB/D4aPn3ljkiw8T0XEG8cZZyL/d7Jqd1Qjuqdj+kentOAFZ3jFuVre6AXe
0WX/oJeYo8f+Sa+wwLVqS9rnf0Vv1Lamt/jCHfdv2nDf0HvuP3SAXzzYAVkm
HaM=
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[0.655728, 0.8, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{{
                    GrayLevel[1], 
                    Polygon[{
                    Offset[{0, 4}], 
                    Offset[{(-2) 3^Rational[1, 2], -2}], 
                    Offset[{2 3^Rational[1, 2], -2}]}]}, 
                    AbsoluteThickness[1.5], 
                    Dashing[{}], 
                    JoinedCurve[
                    Line[{
                    Offset[{0, 4}], 
                    Offset[{(-2) 3^Rational[1, 2], -2}], 
                    Offset[{2 3^Rational[1, 2], -2}], 
                    Offset[{0, 4}]}], CurveClosed -> True]}], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[
                    Rational[1, 60]], 
                    RGBColor[0.655728, 0.8, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]]}], {0., 0.}, Automatic, 
                 Scaled[9.75]], CompressedData["
1:eJw1y7EKglAUgOFTLY0ODg4NKhIRImbu3cEnkOaGyKFFCUKQICxK6a16pB5B
4fxdOHz8nHu8Y5UXMxGxx5mMM5X/y4z626l7WvCAczyhhWe0sURHbS/0Aq/o
sq9pHxsM2N/oJd5xpZqWXvP/QYfq90lH+MKY+ze94b6jE+57eosfTM0A57oc
5Q==
                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[0., 0.742291, 0.873126], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               GeometricTransformation[
                Inset[
                 Style[
                  Graphics[{{
                    GrayLevel[1], 
                    Polygon[{
                    Offset[{0, 3.75}], 
                    Offset[{3.75, 0}], 
                    Offset[{0, -3.75}], 
                    Offset[{-3.75, 0}]}]}, 
                    AbsoluteThickness[1.5], 
                    Dashing[{}], 
                    Line[{
                    Offset[{0, 3.75}], 
                    Offset[{3.75, 0}], 
                    Offset[{0, -3.75}], 
                    Offset[{-3.75, 0}], 
                    Offset[{0, 3.75}]}]}], 
                  GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[
                    Rational[1, 60]], 
                    RGBColor[0., 0.742291, 0.873126], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]]}], {0., 0.}, Automatic, 
                 Scaled[9.75]], CompressedData["
1:eJw1y80KQUEYgOHBDVhYWFIWFhaSJEmDcwWythCLsyElJaVDfnJXLs2p85j6
euZt5muu94ttJYRQy6eUTzn8TxJduGSVK9a5YYMpW9yxXZgddIdHdr2fdI9n
9r1f9IBXDgtjpkf+3/S48HvXEz4Y7T/11P5Lz+y/9ZwfJvEHd2sdJg==
                "]]}, "Charting`Private`Tag#3"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 800.}, {0, 40.}}, 
              "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0},
               "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 RGBColor[0., 0.742291, 0.873126], 
                 CapForm["Butt"], 
                 AbsoluteThickness[3]], 
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 RGBColor[0.655728, 0.8, 0.], 
                 CapForm["Butt"], 
                 AbsoluteThickness[3]], 
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 RGBColor[1., 0.4, 0.], 
                 CapForm["Butt"], 
                 AbsoluteThickness[3]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 800.}, {0, 40.}}, 
             "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[0., 0.742291, 0.873126], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[0.655728, 0.8, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                RGBColor[1., 0.4, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[3]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]], 
        Selectable -> False]}, 
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            RGBColor[1., 0.4, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1:eJwty7EKglAUgOGLNDQ4SEiEhGj1Ht2hJxBnB9HBxQhEiCBUTOmtfBQfwdFR
5fwXDh8/5x4/fgapoZSy19mU99DieBdDeqIjeqYTWmGGO8xxL1Yv2sQCLfYl
fcA32uw/9BG/eBJ1RTv8r+mzODS0iy163P9on/uOvnDf01f8400vT44doQ==

            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            RGBColor[0.655728, 0.8, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1:eJwty78KglAUgPFLk2ODg4ODSURIiH/avUNPEM0NoUOLIogggWhU4lv5SD2C
yvkuHH58nHt2j+KabZRS5jKr8i5a/CfijVZ4RwNT3OITTczREruStrFCh31N
u9jgnv2LPmCLR1F3tMf/nj6J05v28YMB91865P5HR9wPdIwjnvUM3iIc4w==

            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            RGBColor[0., 0.742291, 0.873126], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1:eJwty80KQUEYgOHJFVhYWFIWFhaSJEmDcwWythALGyclJXU65Cd35dLQPFPT
M2/ffM11vthWQgi13/2bThY9uGSVK9a5YYM7trhnO1kedIdHds1Puscz++YX
PWDBYTKWeuT/VY+Tn5ue8M5o/6Gn9p96Zv+l53wzi19t0x0k
            "]]}, "Charting`Private`Tag#3"]}, {
         Annotation[{
           Directive[
            PointSize[
             Rational[1, 60]], 
            RGBColor[1., 0.4, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{{
                 GrayLevel[1], 
                 Disk[{0, 0}, 
                  Offset[{3, 3}]]}, 
                AbsoluteThickness[1.5], 
                Dashing[{}], 
                Circle[{0, 0}, 
                 Offset[{3, 3}]]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[
                   Rational[1, 60]], 
                  RGBColor[1., 0.4, 0.], 
                  CapForm["Butt"], 
                  AbsoluteThickness[3]]}], {0., 0.}, Automatic, 
             Scaled[9.75]], CompressedData["
1:eJw1y0EKglAQgOGxWrRoISEREtHL7tFbdAJx7UJs0SYJIpBAVMroVh7FI7hs
qTB/D4aPn3ljkiw8T0XEG8cZZyL/d7Jqd1Qjuqdj+kentOAFZ3jFuVre6AXe
0WX/oJeYo8f+Sa+wwLVqS9rnf0Vv1Lamt/jCHfdv2nDf0HvuP3SAXzzYAVkm
HaM=
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            PointSize[
             Rational[1, 60]], 
            RGBColor[0.655728, 0.8, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{{
                 GrayLevel[1], 
                 Polygon[{
                   Offset[{0, 4}], 
                   Offset[{(-2) 3^Rational[1, 2], -2}], 
                   Offset[{2 3^Rational[1, 2], -2}]}]}, 
                AbsoluteThickness[1.5], 
                Dashing[{}], 
                JoinedCurve[
                 Line[{
                   Offset[{0, 4}], 
                   Offset[{(-2) 3^Rational[1, 2], -2}], 
                   Offset[{2 3^Rational[1, 2], -2}], 
                   Offset[{0, 4}]}], CurveClosed -> True]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[
                   Rational[1, 60]], 
                  RGBColor[0.655728, 0.8, 0.], 
                  CapForm["Butt"], 
                  AbsoluteThickness[3]]}], {0., 0.}, Automatic, 
             Scaled[9.75]], CompressedData["
1:eJw1y7EKglAUgOFTLY0ODg4NKhIRImbu3cEnkOaGyKFFCUKQICxK6a16pB5B
4fxdOHz8nHu8Y5UXMxGxx5mMM5X/y4z626l7WvCAczyhhWe0sURHbS/0Aq/o
sq9pHxsM2N/oJd5xpZqWXvP/QYfq90lH+MKY+ze94b6jE+57eosfTM0A57oc
5Q==
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            PointSize[
             Rational[1, 60]], 
            RGBColor[0., 0.742291, 0.873126], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           GeometricTransformation[
            Inset[
             Style[
              Graphics[{{
                 GrayLevel[1], 
                 Polygon[{
                   Offset[{0, 3.75}], 
                   Offset[{3.75, 0}], 
                   Offset[{0, -3.75}], 
                   Offset[{-3.75, 0}]}]}, 
                AbsoluteThickness[1.5], 
                Dashing[{}], 
                Line[{
                  Offset[{0, 3.75}], 
                  Offset[{3.75, 0}], 
                  Offset[{0, -3.75}], 
                  Offset[{-3.75, 0}], 
                  Offset[{0, 3.75}]}]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[
                   Rational[1, 60]], 
                  RGBColor[0., 0.742291, 0.873126], 
                  CapForm["Butt"], 
                  AbsoluteThickness[3]]}], {0., 0.}, Automatic, 
             Scaled[9.75]], CompressedData["
1:eJw1y80KQUEYgOHBDVhYWFIWFhaSJEmDcwWythCLsyElJaVDfnJXLs2p85j6
euZt5muu94ttJYRQy6eUTzn8TxJduGSVK9a5YYMpW9yxXZgddIdHdr2fdI9n
9r1f9IBXDgtjpkf+3/S48HvXEz4Y7T/11P5Lz+y/9ZwfJvEHd2sdJg==
            "]]}, "Charting`Private`Tag#3"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 800.}, {0, 40.}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 60]], 
             RGBColor[0., 0.742291, 0.873126], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 60]], 
             RGBColor[0.655728, 0.8, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 60]], 
             RGBColor[1., 0.4, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[3]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         TagBox["\"Total Bandwidth (Tb/s)\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"Total Servers in Datacenter\"", HoldForm], 
         TraditionalForm], None}}, FrameTicks -> {{Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}, {
       Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}}, FrameTicksStyle -> 
     Directive[
       StrokeForm[
        Opacity[0]], FontOpacity -> 1], GridLines -> {Automatic, Automatic}, 
     GridLinesStyle -> Directive[
       AbsoluteThickness[1], 
       GrayLevel[0, 0.2]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[1., 0.4, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[3]], 
         Directive[
          RGBColor[0.655728, 0.8, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[3]], 
         Directive[
          RGBColor[0., 0.742291, 0.873126], 
          CapForm["Butt"], 
          AbsoluteThickness[3]], 
         Directive[
          RGBColor[1., 0.656408, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[3]], 
         Directive[
          RGBColor[0.893126, 0.4, 0.767184], 
          CapForm["Butt"], 
          AbsoluteThickness[3]], 
         Directive[
          RGBColor[0.295048, 0.8, 0.286932], 
          CapForm["Butt"], 
          AbsoluteThickness[3]], 
         Directive[
          RGBColor[0.238758, 0.610466, 1.], 
          CapForm["Butt"], 
          AbsoluteThickness[3]], 
         Directive[
          RGBColor[1., 0.325204, 0.406504], 
          CapForm["Butt"], 
          AbsoluteThickness[3]], 
         Directive[
          RGBColor[0., 0.786874, 0.739379], 
          CapForm["Butt"], 
          AbsoluteThickness[3]], 
         Directive[
          RGBColor[1., 0.520437, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[3]], 
         Directive[
          RGBColor[0.7529330319872088, 0.4176501130047967, 1.], 
          CapForm["Butt"], 
          AbsoluteThickness[3]], 
         Directive[
          RGBColor[0.5572809000084149, 0.8, 0], 
          CapForm["Butt"], 
          AbsoluteThickness[3]], 
         Directive[
          RGBColor[1., 0.06811595600706821, 0.0851449450088353], 
          CapForm["Butt"], 
          AbsoluteThickness[3]], 
         Directive[
          RGBColor[0, 0.7226017980018511, 0.9321946059944466], 
          CapForm["Butt"], 
          AbsoluteThickness[3]], 
         Directive[
          RGBColor[1., 0.7154761789941944, 0], 
          CapForm["Butt"], 
          AbsoluteThickness[3]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Bandwidth Requirement in Clos Networks\"", TraditionalForm], 
     PlotRange -> {{0, 800.}, {0, 40.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Prolog -> {
       GrayLevel[0, 0.7], 
       RectangleBox[
        Scaled[{0, 0}], 
        Scaled[{1, 1}]]}, Ticks -> {Charting`FindScaledTicks[
        (Charting`SimpleTicks[#, #2, 6]& )[
         SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& , 
       Charting`FindScaledTicks[
        (Charting`SimpleTicks[#, #2, 6]& )[
         SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& }}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"1-Clos Slice\"", "\"2-Clos Slices\"", "\"4-Clos Slices\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1., 0.4, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1., 0.4, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    InsetBox[
                    GraphicsBox[{{
                    GrayLevel[1], 
                    DiskBox[{0, 0}, 
                    Offset[{3, 3}]]}, 
                    AbsoluteThickness[1.5], 
                    Dashing[{}], 
                    CircleBox[{0, 0}, 
                    Offset[{3, 3}]]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1., 0.4, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.655728, 0.8, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.655728, 0.8, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    InsetBox[
                    GraphicsBox[{{
                    GrayLevel[1], 
                    PolygonBox[
                    NCache[{
                    Offset[{0, 4}], 
                    Offset[{(-2) 3^Rational[1, 2], -2}], 
                    Offset[{2 3^Rational[1, 2], -2}]}, {
                    Offset[{0, 4}], 
                    Offset[{-3.4641016151377544`, -2}], 
                    Offset[{3.4641016151377544`, -2}]}]]}, 
                    AbsoluteThickness[1.5], 
                    Dashing[{}], 
                    JoinedCurveBox[
                    NCache[
                    Line[{
                    Offset[{0, 4}], 
                    Offset[{(-2) 3^Rational[1, 2], -2}], 
                    Offset[{2 3^Rational[1, 2], -2}], 
                    Offset[{0, 4}]}], 
                    Line[{
                    Offset[{0, 4}], 
                    Offset[{-3.4641016151377544`, -2}], 
                    Offset[{3.4641016151377544`, -2}], 
                    Offset[{0, 4}]}]], CurveClosed -> True]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.655728, 0.8, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0., 0.742291, 0.873126], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0., 0.742291, 0.873126], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    InsetBox[
                    GraphicsBox[{{
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{0, 3.75}], 
                    Offset[{3.75, 0}], 
                    Offset[{0, -3.75}], 
                    Offset[{-3.75, 0}]}]}, 
                    AbsoluteThickness[1.5], 
                    Dashing[{}], 
                    LineBox[{
                    Offset[{0, 3.75}], 
                    Offset[{3.75, 0}], 
                    Offset[{0, -3.75}], 
                    Offset[{-3.75, 0}], 
                    Offset[{0, 3.75}]}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0., 0.742291, 0.873126], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1., 0.4, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.655728, 0.8, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0., 0.742291, 0.873126]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{{
                    GrayLevel[1], 
                    DiskBox[{0, 0}, 
                    Offset[{3, 3}]]}, 
                    AbsoluteThickness[1.5], 
                    Dashing[{}], 
                    CircleBox[{0, 0}, 
                    Offset[{3, 3}]]}], ",", "9.75`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{{
                    GrayLevel[1], 
                    PolygonBox[
                    NCache[{
                    Offset[{0, 4}], 
                    Offset[{(-2) 3^Rational[1, 2], -2}], 
                    Offset[{2 3^Rational[1, 2], -2}]}, {
                    Offset[{0, 4}], 
                    Offset[{-3.4641016151377544`, -2}], 
                    Offset[{3.4641016151377544`, -2}]}]]}, 
                    AbsoluteThickness[1.5], 
                    Dashing[{}], 
                    JoinedCurveBox[
                    NCache[
                    Line[{
                    Offset[{0, 4}], 
                    Offset[{(-2) 3^Rational[1, 2], -2}], 
                    Offset[{2 3^Rational[1, 2], -2}], 
                    Offset[{0, 4}]}], 
                    Line[{
                    Offset[{0, 4}], 
                    Offset[{-3.4641016151377544`, -2}], 
                    Offset[{3.4641016151377544`, -2}], 
                    Offset[{0, 4}]}]], CurveClosed -> True]}], ",", "9.75`"}],
                    "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{{
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{0, 3.75}], 
                    Offset[{3.75, 0}], 
                    Offset[{0, -3.75}], 
                    Offset[{-3.75, 0}]}]}, 
                    AbsoluteThickness[1.5], 
                    Dashing[{}], 
                    LineBox[{
                    Offset[{0, 3.75}], 
                    Offset[{3.75, 0}], 
                    Offset[{0, -3.75}], 
                    Offset[{-3.75, 0}], 
                    Offset[{0, 3.75}]}]}], ",", "9.75`"}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.962077733759903*^9, 3.962077735884231*^9}, 
   3.9620781331720333`*^9},
 CellLabel->
  "Out[311]=",ExpressionUUID->"cee147ed-7ead-43af-aa10-f54d7bbf1012"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "5"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"vertices", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gridEdges", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j"}], "}"}], "\[TwoWayRule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", "j"}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"n", "-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j"}], "}"}], "\[TwoWayRule]", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"j", "+", "1"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"diagEdges", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "<", "n"}], "&&", 
         RowBox[{"j", "<", "n"}]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j"}], "}"}], "\[TwoWayRule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", 
           RowBox[{"j", "+", "1"}]}], "}"}]}], ",", "Nothing"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"antiDiagEdges", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"i", ">", "1"}], "&&", 
         RowBox[{"j", "<", "n"}]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j"}], "}"}], "\[TwoWayRule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", "-", "1"}], ",", 
           RowBox[{"j", "+", "1"}]}], "}"}]}], ",", "Nothing"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"mesh8Valent", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"vertices", ",", 
     RowBox[{"Join", "[", 
      RowBox[{"gridEdges", ",", "diagEdges", ",", "antiDiagEdges"}], "]"}], 
     ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<SpringElectricalEmbedding\>\""}], 
     ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<5x5 8-Valent Transaction Fabrix\>\"", ",", "14"}], 
       "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"laplacianMatrix", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"KirchhoffMatrix", "[", "mesh8Valent", "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{"mesh8Valent", ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<5x5 8-Valent Transaction Fabrix\>\"", ",", "14"}], 
       "]"}]}]}], "]"}], ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{"laplacianMatrix", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"TableHeadings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#1", ",", "10"}], "]"}], "&"}], ")"}], "/@", 
         RowBox[{"vertices", "\[LeftDoubleBracket]", 
          RowBox[{"1", ";;", "5"}], "\[RightDoubleBracket]"}]}]}], "}"}]}]}], 
    "]"}]}], "}"}]}], "Code",
 CellChangeTimes->{{3.9620782401589823`*^9, 3.962078240162039*^9}, 
   3.962078315117441*^9},
 CellLabel->
  "In[367]:=",ExpressionUUID->"27c88476-bb96-4358-aeaa-accbdfc7920f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{{1, 1}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 1}, {2, 2}, {2, 
        3}, {2, 4}, {2, 5}, {3, 1}, {3, 2}, {3, 3}, {3, 4}, {3, 5}, {4, 1}, {
        4, 2}, {4, 3}, {4, 4}, {4, 5}, {5, 1}, {5, 2}, {5, 3}, {5, 4}, {5, 
        5}}, {Null, {{1, 6}, {2, 7}, {3, 8}, {4, 9}, {5, 10}, {6, 11}, {7, 
         12}, {8, 13}, {9, 14}, {10, 15}, {11, 16}, {12, 17}, {13, 18}, {14, 
         19}, {15, 20}, {16, 21}, {17, 22}, {18, 23}, {19, 24}, {20, 25}, {1, 
         2}, {2, 3}, {3, 4}, {4, 5}, {6, 7}, {7, 8}, {8, 9}, {9, 10}, {11, 
         12}, {12, 13}, {13, 14}, {14, 15}, {16, 17}, {17, 18}, {18, 19}, {19,
          20}, {21, 22}, {22, 23}, {23, 24}, {24, 25}, {1, 7}, {2, 8}, {3, 
         9}, {4, 10}, {6, 12}, {7, 13}, {8, 14}, {9, 15}, {11, 17}, {12, 
         18}, {13, 19}, {14, 20}, {16, 22}, {17, 23}, {18, 24}, {19, 25}, {6, 
         2}, {7, 3}, {8, 4}, {9, 5}, {11, 7}, {12, 8}, {13, 9}, {14, 10}, {16,
          12}, {17, 13}, {18, 14}, {19, 15}, {21, 17}, {22, 18}, {23, 19}, {
         24, 20}}}, {
        GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "SpringElectricalEmbedding"}, 
         PlotLabel -> Style["5x5 8-Valent Transaction Fabrix", 14], 
         VertexLabels -> {"Name"}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
          ArrowBox[CompressedData["
1:eJyFlV1IU2Ecxk+2U3IOESTmomRb5Jw28qIwqeB9WTeLIvrQAvtAkoO2gkob
xaJaWwSV1PpAKHONPoglfoRGNXZxaCWVEGmkw/TCWuXOxPSiDzuHyAu7ed6L
d3AuXn78f895nz+H2fYd2qbMFgTBPf1kzTzhzY87QlMyfTdsPn/zyiNSF6tZ
PnRCpP4u1XQu9Zwgdzuq1vl6JXqtb+SMTdEYfnxPtaXBLtJR2xuVbMwwvqnc
lc4jQzpJhpQ19k8vGI5+5Dz/wvizta9bdJJPgtGl9zNMXsoVa1TvpUnSMqod
bVAZjn7kPP+vwx/Cd0o0UnLp/WDbvAyTR8vd/a+kJiLM/JCjHznPHxnYVfjV
HCdPfOHOP4s0Jg/nkeM87gP7Qe53JWr7IxL1/rjRvOKvznCPNc+TZ5hodc6p
UG+hwfjw/sjRj5znb07ED4xFdWIJWi/nrDKYPOwHOfqR8/x7Z03MefBQI2NP
5y8ZdBlMHvaPHP3Iuf4a5WXPgEr6Sk1lHrfB5OE8cpzHfWA/yAMumrJmJBro
2l5cfHL6uwXefdW843qZSNcr0Q5HhUjRh/dHjn7kPH/BVm/T8FudlM791r56
g0gxD/tBjn7kPH94y4VsX7lGWu3Hxiu8ImX2Af0jRz9ynr8q/3RReyBOFnz0
e+RWkWIeziPHedwH9oO8oL7O6YjJ9Ozuztufv8gMrwxktySCInV29+w/OCkx
Prw/w8GPnOdvu7UpOf5bJ46J2sadmsTkYT/I0Y+c5xcW38367k+TenPRyMVl
MpOH/SNHP3Ke////hPAzkpuelJk8nGc4zOM+sB884/vjGfOZM+T/A/ZxGzw=

           "], 0.03369968518095155]}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {
           DiskBox[{3.496858006032041, 0.068627985449772}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}], {3.5317158197180603, 0.03683421819313104},
             ImageScaled[{-0.05412472431412019, 1.0054164519520514}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2.6854785338430753`, 0.14759898407047345`}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], {2.682802658333629, 0.10049536954253487},
             ImageScaled[{0.5425376299364845, 1.248792728356377}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.7413188673539237`, 0.1631515298023547}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], {1.7417798493420926, 0.11597422268393953},
             ImageScaled[{0.49267190078503464, 1.24996419845343}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8013613647363766, 0.12928639860206093`}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}], {0.8061024811359669, 0.08234566334339441},
             ImageScaled[{0.42463182454504245, 1.246203483058469}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.02640832717778019, 0.}, 0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"1", ",", "5"}], "}"}], {-0.005877145193552591, -0.03440289355706274},
             ImageScaled[{1.0132329479485211, 1.046892988746492}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.352283927616586, 0.8248450791130203}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "1"}], "}"}], {3.3991922038171807, 0.8298972504509112},
             ImageScaled[{-0.2456874906681379, 0.41968707288950413}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2.6438219501684976`, 0.8529356732770426}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2"}], "}"}], {2.6241710137034695, 0.8100433487027541},
             ImageScaled[{0.8123853334371751, 1.1818470528302845}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.729439957907521, 0.8639081297678534}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "3"}], "}"}], {1.7092530535290533, 0.8212654316478554},
             ImageScaled[{0.8209054625236157, 1.1778788122684647}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8183148481580521, 0.845420291323938}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "4"}], "}"}], {0.7757177869623074, 0.865703318435902},
             ImageScaled[{1.1771533350971715, 0.17756650179179934}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.10975492916972351`, 0.8156713016686216}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "5"}], "}"}], {0.06266712734022176, 0.8186123440355814},
             ImageScaled[{1.248541358398384, 0.45324708814306935}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.328533953150611, 1.7495561748795272`}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "1"}], "}"}], {3.375712510413696, 1.7492486916889154},
             ImageScaled[{-0.2499840716467594, 0.5048879726010291}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2.623091534453171, 1.7597213405835752`}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "2"}], "}"}], {2.665764744003263, 1.7798436664439883},
             ImageScaled[{-0.17836384377220127, 0.18012112376306494}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.7289852341166132`, 1.762713965501639}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "3"}], "}"}], {1.6853933563911032, 1.7446679407952705},
             ImageScaled[{1.1929676497947241, 0.7868725088571167}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8333315978525595, 1.7663212867878952`}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "4"}], "}"}], {0.7910381236432229, 1.7454126079524726},
             ImageScaled[{1.172327299343352, 0.8323793052487996}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.13158557070238164`, 1.7676794231551196`}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "5"}], "}"}], {0.08440602410583271, 1.7677139815513487},
             ImageScaled[{1.249999798798726, 0.4994506350296162}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.3648088295088323`, 2.6861155802531025`}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "1"}], "}"}], {3.4118294142932006, 2.682245771746895},
             ImageScaled[{-0.24747282819912075, 0.5615172423309728}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2.6526266790627657`, 2.666581516427557}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "2"}], "}"}], {2.632931397873387, 2.7094534969067694},
             ImageScaled[{0.8130902688750914, -0.18152364855206826}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.7380043099011087`, 2.6607507460002138`}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "3"}], "}"}], {1.7175884420938188, 2.7032842992613033},
             ImageScaled[{0.8245452288617126, -0.17614376756951522}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8228120962908354, 2.682292807589724}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "4"}], "}"}], {0.8433185933014449, 2.7247827404173073},
             ImageScaled[{0.17401406453641466, -0.1754503459766168}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.11136908305262727`, 2.7094944305967}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "5"}], "}"}], {0.06434542985643353, 2.7056620877854707},
             ImageScaled[{1.2475216058669398, 0.5609216608614004}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3.465896937601786, 3.487250564252067}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "1"}], "}"}], {3.498804482163112, 3.521058911184193},
             ImageScaled[{-0.023121852166336998, -0.03744165058735549}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2.6893380510303304`, 3.3678825631439135`}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "2"}], "}"}], {2.6856572019181617, 3.4149183172162374},
             ImageScaled[{0.5585134087265011, -0.2477139700441643}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.748274655264861, 3.364424872472245}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "3"}], "}"}], {1.748892508351677, 3.4116003859183306},
             ImageScaled[{0.4901781656622941, -0.24993568495587848}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.7969889689928493, 3.392844924036632}, 
            0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "4"}], "}"}], {0.8006423536503547, 3.439882819311431},
             ImageScaled[{0.4419231858776738, -0.2477480081293435}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 3.4931203546282177`}, 0.03369968518095155], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "5"}], "}"}], {-0.03362704564750673, 3.5262131425488383},
             ImageScaled[{1.0345595557645826, -0.02606661302611879}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->"NetworkGraphics",
    FormatType->TraditionalForm,
    FrameTicks->None,
    PlotLabel->FormBox[
      StyleBox[
      "\"5x5 8-Valent Transaction Fabrix\"", 14, StripOnInput -> False], 
      TraditionalForm]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         TagBox[
          StyleBox[
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}],
           StripOnInput->False,
           FontSize->10],
          HoldForm], 
         TagBox[
          StyleBox[
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}],
           StripOnInput->False,
           FontSize->10],
          HoldForm], 
         TagBox[
          StyleBox[
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}],
           StripOnInput->False,
           FontSize->10],
          HoldForm], 
         TagBox[
          StyleBox[
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}],
           StripOnInput->False,
           FontSize->10],
          HoldForm], 
         TagBox[
          StyleBox[
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}],
           StripOnInput->False,
           FontSize->10],
          HoldForm]},
        {"3", 
         RowBox[{"-", "1"}], "0", "0", "0"},
        {
         RowBox[{"-", "1"}], "5", 
         RowBox[{"-", "1"}], "0", "0"},
        {"0", 
         RowBox[{"-", "1"}], "5", 
         RowBox[{"-", "1"}], "0"},
        {"0", "0", 
         RowBox[{"-", "1"}], "5", 
         RowBox[{"-", "1"}]},
        {"0", "0", "0", 
         RowBox[{"-", "1"}], "3"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      {None, OutputFormsDump`HeadedColumns}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$, TableHeadings -> {None, {
         Style[{1, 1}, 10], 
         Style[{1, 2}, 10], 
         Style[{1, 3}, 10], 
         Style[{1, 4}, 10], 
         Style[{1, 5}, 10]}}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.962077739826186*^9, 3.962077742906578*^9}, 
   3.9620781379345703`*^9, 3.962078240479664*^9, {3.96207829533327*^9, 
   3.962078315371051*^9}},
 CellLabel->
  "Out[374]=",ExpressionUUID->"81651eb0-bf34-460e-8248-b683c3011563"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{{{}, {}, 
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             AbsoluteThickness[2], 
             Thickness[Large], 
             RGBColor[0.880722, 0.611041, 0.142051]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEuDsYQ4ADhh0BpTygdB5WHiac4pIHAs2goP9Ph
7BkQSITy8yDyy1Ih/IZCKJ0JlS9xmDUTCCJzoeJlEP7MAqh8JUR/WxFUvhpi
f3EJVL4OQieUQWiHBoj9PhVQ9Y0Q8yyrIPwDTRDz1Gqg+lsg5glDzXFohYo3
QPW3QdR/g/IPtEPMf9MIVdcJ0f+4yQEANkJO0g==
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}], 
             Thickness[Large], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            LineBox[CompressedData["
1:eJxVzrEKglAUgOFLT+DQA+TW6ODg0HCICBERNWeHqKFFEUQIQW5RiW/Vo1mc
f/HC5ePn3gPHPdf5dWWMWf/uXz0HUR0scIMlbvGCHt7QxwoD1Tb0DlsU3jt6
j3dZ7GV7+ogDhqpYOuL/g47V75NO8IUp8286Y/5D58yP9AknLGQGLmIeZA==

             "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
          TagBox[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             AbsoluteThickness[2], 
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.922526, 0.385626, 0.209179]], 
            LineBox[CompressedData["
1:eJwty80KQUEYgOHJFVhYWFIWFhaSJEmDcwWythALGyclJXU65Cd35dLQPFPT
M2/ffM11vthWQgi13/2bThY9uGSVK9a5YYM7trhnO1kedIdHds1Puscz++YX
PWDBYTKWeuT/VY+Tn5ue8M5o/6Gn9p96Zv+l53wzi19t0x0k
             "]]}, Annotation[#, "Charting`Private`Tag#3"]& ]}}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[2], 
                Thickness[Large], 
                RGBColor[0.880722, 0.611041, 0.142051]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEuDsYQ4ADhh0BpTygdB5WHiac4pIHAs2goP9Ph
7BkQSITy8yDyy1Ih/IZCKJ0JlS9xmDUTCCJzoeJlEP7MAqh8JUR/WxFUvhpi
f3EJVL4OQieUQWiHBoj9PhVQ9Y0Q8yyrIPwDTRDz1Gqg+lsg5glDzXFohYo3
QPW3QdR/g/IPtEPMf9MIVdcJ0f+4yQEANkJO0g==
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[2], 
                Dashing[{Small, Small}], 
                Thickness[Large], 
                RGBColor[0.560181, 0.691569, 0.194885]], 
               Line[CompressedData["
1:eJxVzrEKglAUgOFLT+DQA+TW6ODg0HCICBERNWeHqKFFEUQIQW5RiW/Vo1mc
f/HC5ePn3gPHPdf5dWWMWf/uXz0HUR0scIMlbvGCHt7QxwoD1Tb0DlsU3jt6
j3dZ7GV7+ogDhqpYOuL/g47V75NO8IUp8286Y/5D58yP9AknLGQGLmIeZA==

                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[2], 
                Dashing[{0, Small}], 
                Thickness[Large], 
                RGBColor[0.922526, 0.385626, 0.209179]], 
               Line[CompressedData["
1:eJwty80KQUEYgOHJFVhYWFIWFhaSJEmDcwWythALGyclJXU65Cd35dLQPFPT
M2/ffM11vthWQgi13/2bThY9uGSVK9a5YYM7trhnO1kedIdHds1Puscz++YX
PWDBYTKWeuT/VY+Tn5ue8M5o/6Gn9p96Zv+l53wzi19t0x0k
                "]]}, "Charting`Private`Tag#3"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{0, 800.}, {0, 604.4}}, 
              "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0},
               "ImageSize" -> {576, 576/GoldenRatio}, 
              "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 AbsoluteThickness[2], 
                 Dashing[{0, Small}], 
                 Thickness[Large], 
                 RGBColor[0.922526, 0.385626, 0.209179]], 
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 AbsoluteThickness[2], 
                 Dashing[{Small, Small}], 
                 Thickness[Large], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 AbsoluteThickness[2], 
                 Thickness[Large], 
                 RGBColor[0.880722, 0.611041, 0.142051]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 800.}, {0, 604.4}},
              "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0},
              "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False},
              "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[2], 
                Dashing[{0, Small}], 
                Thickness[Large], 
                RGBColor[0.922526, 0.385626, 0.209179]], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[2], 
                Dashing[{Small, Small}], 
                Thickness[Large], 
                RGBColor[0.560181, 0.691569, 0.194885]], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[2], 
                Thickness[Large], 
                RGBColor[0.880722, 0.611041, 0.142051]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]], 
        Selectable -> False]}, 
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[2], 
            Thickness[Large], 
            RGBColor[0.880722, 0.611041, 0.142051]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEuDsYQ4ADhh0BpTygdB5WHiac4pIHAs2goP9Ph
7BkQSITy8yDyy1Ih/IZCKJ0JlS9xmDUTCCJzoeJlEP7MAqh8JUR/WxFUvhpi
f3EJVL4OQieUQWiHBoj9PhVQ9Y0Q8yyrIPwDTRDz1Gqg+lsg5glDzXFohYo3
QPW3QdR/g/IPtEPMf9MIVdcJ0f+4yQEANkJO0g==
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[2], 
            Dashing[{Small, Small}], 
            Thickness[Large], 
            RGBColor[0.560181, 0.691569, 0.194885]], 
           Line[CompressedData["
1:eJxVzrEKglAUgOFLT+DQA+TW6ODg0HCICBERNWeHqKFFEUQIQW5RiW/Vo1mc
f/HC5ePn3gPHPdf5dWWMWf/uXz0HUR0scIMlbvGCHt7QxwoD1Tb0DlsU3jt6
j3dZ7GV7+ogDhqpYOuL/g47V75NO8IUp8286Y/5D58yP9AknLGQGLmIeZA==

            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[2], 
            Dashing[{0, Small}], 
            Thickness[Large], 
            RGBColor[0.922526, 0.385626, 0.209179]], 
           Line[CompressedData["
1:eJwty80KQUEYgOHJFVhYWFIWFhaSJEmDcwWythALGyclJXU65Cd35dLQPFPT
M2/ffM11vthWQgi13/2bThY9uGSVK9a5YYM7trhnO1kedIdHds1Puscz++YX
PWDBYTKWeuT/VY+Tn5ue8M5o/6Gn9p96Zv+l53wzi19t0x0k
            "]]}, "Charting`Private`Tag#3"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 800.}, {0, 604.4}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 60]], 
             AbsoluteThickness[2], 
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.922526, 0.385626, 0.209179]], 
            Directive[
             PointSize[
              Rational[1, 60]], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}], 
             Thickness[Large], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            Directive[
             PointSize[
              Rational[1, 60]], 
             AbsoluteThickness[2], 
             Thickness[Large], 
             RGBColor[0.880722, 0.611041, 0.142051]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         TagBox["\"Total Bandwidth (Tb/s)\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"Total Servers (Cells)\"", HoldForm], TraditionalForm], 
        None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"The Bandwidth Chasm: Functional vs. Transit Capacity\"", 
       TraditionalForm], PlotRange -> {{0, 800.}, {0, 604.4}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Transaction Fabrix\"", "\"Clos Network (4-slice)\"", 
       "\"Clos Network (2-slice)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 12.5}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 12.5}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Dashing[{0, Small}], 
                    Thickness[Large], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Dashing[{0, Small}], 
                    Thickness[Large], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 12.5}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.96207778343972*^9, 3.962077786995997*^9}, {
  3.962078324678751*^9, 3.96207832966405*^9}},
 CellLabel->
  "During evaluation of \
In[418]:=",ExpressionUUID->"53014771-8387-46b8-91cd-ee020c68eae8"],

Cell[BoxData["\<\"Figure 1: A reimagining of the bandwidth comparison tables. \
The plot clearly shows that as the number of cells increases, the functional \
bandwidth of the Transaction Fabrix scales linearly and dramatically outpaces \
the choked, transit-limited bandwidth of a hierarchical Clos network.\"\>"], \
"Print",
 CellChangeTimes->{{3.96207778343972*^9, 3.962077786995997*^9}, {
  3.962078324678751*^9, 3.962078329779108*^9}},
 CellLabel->
  "During evaluation of \
In[418]:=",ExpressionUUID->"4e2c6039-45f9-473f-8779-704b2711f848"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, 
         InterpretationBox[{
           TagBox[{{
              TagBox[{
                Directive[
                 PointSize[0.012833333333333334`], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 Thickness[Large], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                
                PointBox[{{0., 2.}, {0.6931471805599453, 1000.}, {
                 1.0986122886681098`, 2000.}, {1.3862943611198906`, 3000.}}]},
                Annotation[#, "Charting`Private`Tag#1"]& ], 
              TagBox[{
                Directive[
                 PointSize[0.012833333333333334`], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 Dashing[{Small, Small}], 
                 Thickness[Large], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                
                PointBox[{{0., 300.}, {0.6931471805599453, 1500.}, {
                 1.0986122886681098`, 3500.}, {1.3862943611198906`, 7000.}}]},
                Annotation[#, "Charting`Private`Tag#2"]& ]}}, {
            "WolframDynamicHighlight", <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
           StyleBox[
            DynamicBox[
             (Charting`HighlightActionBox["DynamicHighlight", {}, 
              Slot["HighlightElements"], 
              Slot["LayoutOptions"], 
              Slot["Meta"], 
              Charting`HighlightActionFunction["DynamicHighlight", {{
                 Annotation[{
                   Directive[
                    PointSize[0.012833333333333334`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                   
                   Point[{{0., 2.}, {0.6931471805599453, 1000.}, {
                    1.0986122886681098`, 2000.}, {1.3862943611198906`, 
                    3000.}}]}, "Charting`Private`Tag#1"], 
                 Annotation[{
                   Directive[
                    PointSize[0.012833333333333334`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                   
                   Point[{{0., 300.}, {0.6931471805599453, 1500.}, {
                    1.0986122886681098`, 3500.}, {1.3862943611198906`, 
                    7000.}}]}, "Charting`Private`Tag#2"]}}, <|
               "HighlightElements" -> <|
                 "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
                "LayoutOptions" -> <|
                 "PanelPlotLayout" -> <||>, 
                  "PlotRange" -> {{-0.05836395530756472, 
                    1.3862943611198906`}, {0, 7000.}}, 
                  "Frame" -> {{True, True}, {True, True}}, 
                  "AxesOrigin" -> {-0.05836395530756472, 0}, 
                  "ImageSize" -> {360, 360/GoldenRatio}, 
                  "Axes" -> {False, False}, 
                  "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
                  GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]]}, 
                  "HighlightLabelingFunctions" -> <|
                   "CoordinatesToolOptions" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Log, Exp}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                  False|>, 
                "Meta" -> <|
                 "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                  "Function" -> ListLogLinearPlot, "GroupHighlight" -> 
                  False|>|>]]& )[<|
              "HighlightElements" -> <|
                "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
               "LayoutOptions" -> <|
                "PanelPlotLayout" -> <||>, 
                 "PlotRange" -> {{-0.05836395530756472, 
                   1.3862943611198906`}, {0, 7000.}}, 
                 "Frame" -> {{True, True}, {True, True}}, 
                 "AxesOrigin" -> {-0.05836395530756472, 0}, 
                 "ImageSize" -> {360, 360/GoldenRatio}, 
                 "Axes" -> {False, False}, 
                 "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
                 GoldenRatio^(-1), "DefaultStyle" -> {
                   Directive[
                    PointSize[0.012833333333333334`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                   Directive[
                    PointSize[0.012833333333333334`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]]}, 
                 "HighlightLabelingFunctions" -> <|
                  "CoordinatesToolOptions" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                   "ScalingFunctions" -> {{Log, Exp}, {Identity, Identity}}|>,
                  "Primitives" -> {}, "GCFlag" -> False|>, 
               "Meta" -> <|
                "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                 "Function" -> ListLogLinearPlot, "GroupHighlight" -> 
                 False|>|>]], Selectable -> False]}, 
          Annotation[{{
             Annotation[{
               Directive[
                PointSize[0.012833333333333334`], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large], 
                RGBColor[0.880722, 0.611041, 0.142051]], 
               
               Point[{{0., 2.}, {0.6931471805599453, 1000.}, {
                1.0986122886681098`, 2000.}, {1.3862943611198906`, 3000.}}]}, 
              "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                PointSize[0.012833333333333334`], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}], 
                Thickness[Large], 
                RGBColor[0.560181, 0.691569, 0.194885]], 
               
               Point[{{0., 300.}, {0.6931471805599453, 1500.}, {
                1.0986122886681098`, 3500.}, {1.3862943611198906`, 7000.}}]}, 
              "Charting`Private`Tag#2"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.05836395530756472, 1.3862943611198906`}, {
                0, 7000.}}, "Frame" -> {{True, True}, {True, True}}, 
              "AxesOrigin" -> {-0.05836395530756472, 0}, 
              "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False},
               "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 PointSize[0.012833333333333334`], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 Dashing[{Small, Small}], 
                 Thickness[Large], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 Thickness[Large], 
                 RGBColor[0.880722, 0.611041, 0.142051]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Exp[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Log, Exp}, {Identity, Identity}}|>, 
              "Primitives" -> {}, "GCFlag" -> False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLogLinearPlot, "GroupHighlight" -> False|>|>, 
           "DynamicHighlight"]], {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {{}, {0}}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {False, False}, AxesLabel -> {None, None}, 
         AxesOrigin -> {-0.05836395530756472, 0}, DisplayFunction :> Identity,
          Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             TagBox["\"End-to-End Latency (ns)\"", HoldForm], 
             TraditionalForm], None}, {
            FormBox[
             TagBox["\"Logical Hops\"", HoldForm], TraditionalForm], None}}, 
         FrameStyle -> Automatic, FrameTicks -> {{Automatic, Automatic}, {
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {{}, {0}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         LabelStyle -> {FontFamily -> "Times"}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.365248, 0.427802, 0.758297], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.945109, 0.593901, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.645957, 0.253192, 0.685109], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.285821, 0.56, 0.450773], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.7, 0.336, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.491486, 0.345109, 0.8], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.71788, 0.568653, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.70743, 0.224, 0.542415], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.287228, 0.490217, 0.664674], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05], "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> 
           "CurrentPoint", "HighlightStyle" -> Automatic, 
           "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Exp[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Exp[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"End-to-End Latency Comparison (Log Scale)\"", 
           TraditionalForm], 
         PlotRange -> {{-0.05836395530756472, 1.3862943611198906`}, {
           0, 7000.}}, PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           
           Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
            WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
           Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Transaction Fabrix\"", "\"Clos Network\""}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {333.75, -160.65}, {Center, Center}, {625., 306.00000000000006},
     
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, 
         InterpretationBox[{
           TagBox[{{{}, {}, 
              TagBox[{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[
                  NCache[
                   Rational[7, 360], 0.019444444444444445`]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 Thickness[Large], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                LineBox[{{1., 2.}, {2., 1000.}, {3., 2000.}, {4., 3000.}}]}, 
               Annotation[#, "Charting`Private`Tag#1"]& ], 
              TagBox[{
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[
                  NCache[
                   Rational[7, 360], 0.019444444444444445`]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 Dashing[{Small, Small}], 
                 Thickness[Large], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                LineBox[{{1., 300.}, {2., 1500.}, {3., 3500.}, {4., 7000.}}]},
                Annotation[#, "Charting`Private`Tag#2"]& ]}}, {
            "WolframDynamicHighlight", <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
           StyleBox[
            DynamicBox[
             (Charting`HighlightActionBox["DynamicHighlight", {}, 
              Slot["HighlightElements"], 
              Slot["LayoutOptions"], 
              Slot["Meta"], 
              Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
                 Annotation[{
                   Hue[0.67, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                   Line[{{1., 2.}, {2., 1000.}, {3., 2000.}, {4., 3000.}}]}, 
                  "Charting`Private`Tag#1"], 
                 Annotation[{
                   Hue[0.9060679774997897, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                   Line[{{1., 300.}, {2., 1500.}, {3., 3500.}, {4., 7000.}}]},
                   "Charting`Private`Tag#2"]}}, <|
               "HighlightElements" -> <|
                 "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                "LayoutOptions" -> <|
                 "PanelPlotLayout" -> <||>, 
                  "PlotRange" -> {{0.9375000000000024, 4.}, {0, 7000.}}, 
                  "Frame" -> {{True, True}, {True, True}}, 
                  "AxesOrigin" -> {0.9375000000000024, 0}, 
                  "ImageSize" -> {360, 360/GoldenRatio}, 
                  "Axes" -> {False, False}, 
                  "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
                  GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]]}, 
                  "HighlightLabelingFunctions" -> <|
                   "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                  False|>, 
                "Meta" -> <|
                 "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                  "Function" -> ListLinePlot, "GroupHighlight" -> 
                  False|>|>]]& )[<|
              "HighlightElements" -> <|
                "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
               "LayoutOptions" -> <|
                "PanelPlotLayout" -> <||>, 
                 "PlotRange" -> {{0.9375000000000024, 4.}, {0, 7000.}}, 
                 "Frame" -> {{True, True}, {True, True}}, 
                 "AxesOrigin" -> {0.9375000000000024, 0}, 
                 "ImageSize" -> {360, 360/GoldenRatio}, 
                 "Axes" -> {False, False}, 
                 "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
                 GoldenRatio^(-1), "DefaultStyle" -> {
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]]}, 
                 "HighlightLabelingFunctions" -> <|
                  "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                   "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                 False|>, 
               "Meta" -> <|
                "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                 "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]], 
            Selectable -> False]}, 
          Annotation[{{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large], 
                RGBColor[0.880722, 0.611041, 0.142051]], 
               Line[{{1., 2.}, {2., 1000.}, {3., 2000.}, {4., 3000.}}]}, 
              "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Dashing[{Small, Small}], 
                Thickness[Large], 
                RGBColor[0.560181, 0.691569, 0.194885]], 
               Line[{{1., 300.}, {2., 1500.}, {3., 3500.}, {4., 7000.}}]}, 
              "Charting`Private`Tag#2"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{0.9375000000000024, 4.}, {0, 7000.}}, 
              "Frame" -> {{True, True}, {True, True}}, 
              "AxesOrigin" -> {0.9375000000000024, 0}, 
              "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False},
               "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 PointSize[
                  Rational[7, 360]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 Dashing[{Small, Small}], 
                 Thickness[Large], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                Directive[
                 PointSize[
                  Rational[7, 360]], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 Thickness[Large], 
                 RGBColor[0.880722, 0.611041, 0.142051]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>, 
           "DynamicHighlight"]], {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0.9375000000000024, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox["\"End-to-End Latency (ns)\"", HoldForm], 
             TraditionalForm], None}, {
            FormBox[
             TagBox["\"Logical Hops\"", HoldForm], TraditionalForm], None}}, 
         FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         LabelStyle -> {FontFamily -> "Times"}, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.9, 0.36, 0.054], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.365248, 0.427802, 0.758297], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.945109, 0.593901, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.645957, 0.253192, 0.685109], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.285821, 0.56, 0.450773], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.7, 0.336, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.491486, 0.345109, 0.8], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.71788, 0.568653, 0.], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.70743, 0.224, 0.542415], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.287228, 0.490217, 0.664674], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
              CapForm["Butt"], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
           "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> 
           Automatic, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"End-to-End Latency Comparison (Linear Scale)\"", 
           TraditionalForm], 
         PlotRange -> {{0.9375000000000024, 4.}, {0, 7000.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Transaction Fabrix\"", "\"Clos Network\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 12.5}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 12.5}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {1013.75, -160.65}, {Center, Center}, {650., 306.00000000000006},
     
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
  ImageSize->Full,
  PlotRange->{{0, 1360.}, {-321.3, 0}},
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{{3.96207778343972*^9, 3.962077786995997*^9}, {
  3.962078324678751*^9, 3.962078330031753*^9}},
 CellLabel->
  "During evaluation of \
In[418]:=",ExpressionUUID->"039c4220-ca04-47c1-ac30-40bd70d66154"],

Cell[BoxData["\<\"Figure 2: A side-by-side comparison of end-to-end latency. \
The logarithmic scale (left) reveals the order-of-magnitude advantage of the \
Transaction Fabrix at a single hop. The linear scale (right) shows how this \
advantage compounds as the number of logical hops increases.\"\>"], "Print",
 CellChangeTimes->{{3.96207778343972*^9, 3.962077786995997*^9}, {
  3.962078324678751*^9, 3.962078330678522*^9}},
 CellLabel->
  "During evaluation of \
In[418]:=",ExpressionUUID->"a312428d-55bd-493c-bd46-522440029645"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "2", ",", "3", ",", "3", ",", "4", ",", "4", 
           ",", "1", ",", "5", ",", "6", ",", "6", ",", "7", ",", "7", ",", 
           "8", ",", "8", ",", "5", ",", "9", ",", "10", ",", "10", ",", "11",
            ",", "11", ",", "12", ",", "12", ",", "9", ",", "13", ",", "14", 
           ",", "14", ",", "15", ",", "15", ",", "16", ",", "16", ",", "13"}],
           "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "5", ",", "2", ",", "6", ",", "3", ",", "7", ",", "4", 
           ",", "8", ",", "5", ",", "9", ",", "6", ",", "10", ",", "7", ",", 
           "11", ",", "8", ",", "12", ",", "9", ",", "13", ",", "10", ",", 
           "14", ",", "11", ",", "15", ",", "12", ",", "16", ",", "13", ",", 
           "1", ",", "14", ",", "2", ",", "15", ",", "3", ",", "16", ",", 
           "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "6", ",", "2", ",", "7", ",", "3", ",", "8", ",", "4", 
           ",", "5", ",", "5", ",", "10", ",", "6", ",", "11", ",", "7", ",", 
           "12", ",", "8", ",", "9", ",", "9", ",", "14", ",", "10", ",", 
           "15", ",", "11", ",", "16", ",", "12", ",", "13", ",", "13", ",", 
           "2", ",", "14", ",", "3", ",", "15", ",", "4", ",", "16", ",", 
           "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "8", ",", "2", ",", "5", ",", "3", ",", "6", ",", "4", 
           ",", "7", ",", "5", ",", "12", ",", "6", ",", "9", ",", "7", ",", 
           "10", ",", "8", ",", "11", ",", "9", ",", "16", ",", "10", ",", 
           "13", ",", "11", ",", "14", ",", "12", ",", "15", ",", "13", ",", 
           "4", ",", "14", ",", "1", ",", "15", ",", "2", ",", "16", ",", 
           "3"}], "}"}]}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"GraphLayout", "\[Rule]", "\<\"SpringEmbedding\"\>"}], ",", 
       RowBox[{"VertexLabels", "\[Rule]", "\<\"Name\"\>"}], ",", 
       RowBox[{"VertexSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{
       "PlotLabel", 
        "\[Rule]", "\<\"Transaction Fabrix (16-Cell Mesh)\"\>"}]}], 
      "]"}], {510.06666666666666, -68.775}, {Center, Center}, {963.9999999999999, 131.},
     
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{"S1", "T1", "S2", "S3", "S4", "S5", "T2", "S6", "S7", "S8", 
            "S9", "T3", "S10", "S11", "S12", "S13", "T4", "S14", "S15", "S16",
             "P1", "P2", "P3", "P4"}, {
           Null, {{1, 2}, {3, 2}, {4, 2}, {5, 2}, {6, 7}, {8, 7}, {9, 7}, {10,
             7}, {11, 12}, {13, 12}, {14, 12}, {15, 12}, {16, 17}, {18, 17}, {
            19, 17}, {20, 17}, {2, 21}, {2, 22}, {2, 23}, {2, 24}, {7, 21}, {
            7, 22}, {7, 23}, {7, 24}, {12, 21}, {12, 22}, {12, 23}, {12, 
            24}, {17, 21}, {17, 22}, {17, 23}, {17, 24}}}, {
           GraphLayout -> {
             "Dimension" -> 2, "VertexLayout" -> "LayeredDrawing"}, ImageSize -> 
            Large, PlotLabel -> "Clos Network (16 Servers, 8 Switches)", 
            VertexLabels -> {"Name"}, VertexSize -> {Medium}}]]}, 
         TagBox[GraphicsGroupBox[{
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
             ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGBQAGImKEYHOS/vTFif9tjeyvxitv29k/bofBiNSz2EvolT
HsbHJe//O837btt/uDnYzX+JU3/LoaTFz7U+ELD/M1w+WCC8rnzRNzh/nVdf
knLNb7h6dD6E/olTvWKcdyS71F+c8hD3MTjgkkf3P3b7XxIw/wNOeXT//7gq
P+v0CUa4e1SLrXsWmrI4wNSj8yH6mXGqv/9nZvtkFlac8pDwZsMpj+5/dHl0
/6PLo/sfu/sR/j+uLFIa7cABd8+XA/rphmu54OrR+RCaE6d6SHhz45SHpA9e
nPLo/sduP8L/6PLo/keXR/c/AJZhfEk=
              "], 0.02020949627353104]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
             0.7]}], {DiskBox[{0., 0.}, 0.02020949627353104], 
              InsetBox["\<\"S1\"\>", 
               Offset[{2, 2}, {0.02020949627353104, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.606284888205932, 0.20209496273531063`}, 
               0.02020949627353104], 
              InsetBox["\<\"T1\"\>", Offset[{2, 2}, 
               {0.626494384479463, 0.22230445900884166}], ImageScaled[{0, 0}],
               
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.20209496273531063`, 0.}, 0.02020949627353104], 
              InsetBox["\<\"S2\"\>", 
               Offset[{2, 2}, {0.22230445900884166, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.40418992547062127`, 0.}, 0.02020949627353104], 
              InsetBox["\<\"S3\"\>", 
               Offset[{2, 2}, {0.4243994217441523, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.606284888205932, 0.}, 0.02020949627353104], 
              InsetBox["\<\"S4\"\>", 
               Offset[{2, 2}, {0.626494384479463, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.4146647391471745`, 0.}, 0.02020949627353104], 
              InsetBox["\<\"S5\"\>", 
               Offset[{2, 2}, {1.4348742354207056, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.7178071832501405`, 0.20209496273531063`}, 
               0.02020949627353104], 
              InsetBox["\<\"T2\"\>", 
               Offset[{2, 2}, {1.7380166795236716, 0.22230445900884166}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.616759701882485, 0.}, 0.02020949627353104], 
              InsetBox["\<\"S6\"\>", 
               Offset[{2, 2}, {1.6369691981560162, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.8188546646177957`, 0.}, 0.02020949627353104], 
              InsetBox["\<\"S7\"\>", 
               Offset[{2, 2}, {1.8390641608913267, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2.0209496273531062`, 0.}, 0.02020949627353104], 
              InsetBox["\<\"S8\"\>", 
               Offset[{2, 2}, {2.0411591236266373, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2.223044590088417, 0.}, 0.02020949627353104], 
              InsetBox["\<\"S9\"\>", 
               Offset[{2, 2}, {2.243254086361948, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2.526187034191383, 0.20209496273531063`}, 
               0.02020949627353104], 
              InsetBox["\<\"T3\"\>", 
               Offset[{2, 2}, {2.546396530464914, 0.22230445900884166}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2.425139552823728, 0.}, 0.02020949627353104], 
              InsetBox["\<\"S10\"\>", 
               Offset[{2, 2}, {2.445349049097259, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2.627234515559038, 0.}, 0.02020949627353104], 
              InsetBox["\<\"S11\"\>", 
               Offset[{2, 2}, {2.6474440118325693, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2.829329478294349, 0.}, 0.02020949627353104], 
              InsetBox["\<\"S12\"\>", 
               Offset[{2, 2}, {2.84953897456788, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{3.03142444102966, 0.}, 0.02020949627353104], 
              InsetBox["\<\"S13\"\>", 
               Offset[{2, 2}, {3.051633937303191, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{3.3345668851326256`, 0.20209496273531063`}, 
               0.02020949627353104], 
              InsetBox["\<\"T4\"\>", 
               Offset[{2, 2}, {3.3547763814061566, 0.22230445900884166}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{3.23351940376497, 0.}, 0.02020949627353104], 
              InsetBox["\<\"S14\"\>", 
               Offset[{2, 2}, {3.2537289000385012, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{3.435614366500281, 0.}, 0.02020949627353104], 
              InsetBox["\<\"S15\"\>", 
               Offset[{2, 2}, {3.455823862773812, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{3.6377093292355913`, 0.}, 0.02020949627353104], 
              InsetBox["\<\"S16\"\>", 
               Offset[{2, 2}, {3.6579188255091224, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.9704258866692788`, 0.40418992547062127`}, 
               0.02020949627353104], 
              InsetBox["\<\"P1\"\>", 
               Offset[{2, 2}, {1.9906353829428098, 0.4243994217441523}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.8083798509412425, 0.}, 0.02020949627353104], 
              InsetBox["\<\"P2\"\>", 
               Offset[{2, 2}, {0.8285893472147736, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.0104748136765531`, 0.}, 0.02020949627353104], 
              InsetBox["\<\"P3\"\>", 
               Offset[{2, 2}, {1.0306843099500842, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.212569776411864, 0.}, 0.02020949627353104], 
              InsetBox["\<\"P4\"\>", 
               Offset[{2, 2}, {1.232779272685395, 0.02020949627353104}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->"NetworkGraphics",
       FormatType->TraditionalForm,
       FrameTicks->None,
       ImageSize->Large,
       PlotLabel->FormBox[
        "\"Clos Network (16 Servers, 8 Switches)\"", TraditionalForm]],
      TraditionalForm], {1408.2, -68.775}, {Center, Center}, {720., 131.},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
  ImageSize->{
    UpTo[600], Automatic},
  PlotRange->{{0, 1796.2666666666667`}, {-137.55, 0}},
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{{3.96207778343972*^9, 3.962077786995997*^9}, {
  3.962078324678751*^9, 3.962078330896171*^9}},
 CellLabel->
  "During evaluation of \
In[418]:=",ExpressionUUID->"220ae3f0-3e95-4ea0-930f-60ddf6e3879d"],

Cell[BoxData["\<\"Figure 3: The topologies of resilience. On the left, the \
decentralized, redundant Transaction Fabrix. On the right, the hierarchical, \
brittle Clos network. The visual contrast hints at the mathematical \
reality.\"\>"], "Print",
 CellChangeTimes->{{3.96207778343972*^9, 3.962077786995997*^9}, {
  3.962078324678751*^9, 3.962078330906358*^9}},
 CellLabel->
  "During evaluation of \
In[418]:=",ExpressionUUID->"95f8e6eb-8cac-46e0-aba8-7b422597c39d"],

Cell[BoxData["\<\"\\n--- Spanning Tree Analysis ---\"\>"], "Print",
 CellChangeTimes->{{3.96207778343972*^9, 3.962077786995997*^9}, {
  3.962078324678751*^9, 3.962078331008407*^9}},
 CellLabel->
  "During evaluation of \
In[418]:=",ExpressionUUID->"dc671d2f-5b2a-42b0-b6ac-727384ef7e64"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of Spanning Trees for Transaction Fabrix: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"Det", "[", 
    RowBox[{"KirchhoffMatrix", "[", "]"}], "]"}]}],
  SequenceForm["Number of Spanning Trees for Transaction Fabrix: ", 
   Det[
    KirchhoffMatrix[]]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.96207778343972*^9, 3.962077786995997*^9}, {
  3.962078324678751*^9, 3.9620783310091248`*^9}},
 CellLabel->
  "During evaluation of \
In[418]:=",ExpressionUUID->"8478d937-dee0-47f8-8756-f3a335e2ef5d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of Spanning Trees for Clos Network: \"\>", 
   "\[InvisibleSpace]", "4096"}],
  SequenceForm["Number of Spanning Trees for Clos Network: ", 4096],
  Editable->False]], "Print",
 CellChangeTimes->{{3.96207778343972*^9, 3.962077786995997*^9}, {
  3.962078324678751*^9, 3.962078331010549*^9}},
 CellLabel->
  "During evaluation of \
In[418]:=",ExpressionUUID->"f5194def-1d33-4dd5-94d1-5df0670b382c"],

Cell[BoxData["\<\"The Transaction Fabrix possesses orders of magnitude more \
spanning trees, a direct measure of its superior path diversity and \
resilience against link failures.\"\>"], "Print",
 CellChangeTimes->{{3.96207778343972*^9, 3.962077786995997*^9}, {
  3.962078324678751*^9, 3.962078331011229*^9}},
 CellLabel->
  "During evaluation of \
In[418]:=",ExpressionUUID->"867a4bbf-2c8e-484b-8b92-10691a430702"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bandwidthData", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"\"\<Servers\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "40", ",", "80", ",", "120", ",", "160", ",", "200", ",", "240", ",", 
        "280", ",", "320", ",", "360", ",", "400", ",", "440", ",", "480", 
        ",", "520", ",", "560", ",", "600", ",", "640", ",", "680", ",", 
        "720", ",", "760", ",", "800"}], "}"}]}], ",", 
     RowBox[{"\"\<Transaction Fabrix (Tb/s)\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "19.2", ",", "50.0", ",", "80.8", ",", "111.6", ",", "142.4", ",", 
        "173.2", ",", "204.0", ",", "234.8", ",", "265.6", ",", "296.4", ",", 
        "327.2", ",", "358.0", ",", "388.8", ",", "419.6", ",", "450.4", ",", 
        "481.2", ",", "512.0", ",", "542.8", ",", "573.6", ",", "604.4"}], 
       "}"}]}], ",", 
     RowBox[{"\"\<Clos (2-slice) (Tb/s)\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "2.0", ",", "4.0", ",", "6.0", ",", "8.0", ",", "10.0", ",", "12.0", 
        ",", "14.0", ",", "16.0", ",", "18.0", ",", "20.0", ",", "22.0", ",", 
        "24.0", ",", "26.0", ",", "28.0", ",", "30.0", ",", "32.0", ",", 
        "34.0", ",", "36.0", ",", "38.0", ",", "40.0"}], "}"}]}], ",", 
     RowBox[{"\"\<Clos (4-slice) (Tb/s)\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "4.0", ",", "8.0", ",", "12.0", ",", "16.0", ",", "20.0", ",", "24.0", 
        ",", "28.0", ",", "32.0", ",", "36.0", ",", "40.0", ",", "44.0", ",", 
        "48.0", ",", "52.0", ",", "56.0", ",", "60.0", ",", "64.0", ",", 
        "68.0", ",", "72.0", ",", "76.0", ",", "80.0"}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"bandwidthPlot", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bandwidthData", "[", "\"\<Servers\>\"", "]"}], ",", 
          RowBox[{
          "bandwidthData", "[", "\"\<Transaction Fabrix (Tb/s)\>\"", "]"}]}], 
         "}"}], "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bandwidthData", "[", "\"\<Servers\>\"", "]"}], ",", 
          RowBox[{
          "bandwidthData", "[", "\"\<Clos (4-slice) (Tb/s)\>\"", "]"}]}], 
         "}"}], "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bandwidthData", "[", "\"\<Servers\>\"", "]"}], ",", 
          RowBox[{
          "bandwidthData", "[", "\"\<Clos (2-slice) (Tb/s)\>\"", "]"}]}], 
         "}"}], "]"}]}], "}"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<The Bandwidth Chasm: Functional vs. Transit Capacity\>\""}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Total Servers (Cells)\>\"", ",", 
        "\"\<Total Bandwidth (Tb/s)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Transaction Fabrix\>\"", ",", "\"\<Clos Network (4-slice)\>\"", 
        ",", "\"\<Clos Network (2-slice)\>\""}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}]}], "]"}], 
        ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Dashed", ",", "Thick", ",", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "[", "3", "]"}]}], "]"}], 
        ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Dotted", ",", "Thick", ",", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "[", "4", "]"}]}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "bandwidthPlot", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<Figure 1: A reimagining of the bandwidth comparison tables. The plot \
clearly shows that as the number of cells increases, the functional bandwidth \
of the Transaction Fabrix scales linearly and dramatically outpaces the \
choked, transit-limited bandwidth of a hierarchical Clos network.\>\"", "]"}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"latencyData", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Transaction Fabrix\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "102"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "202"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "302"}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Clos Network\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "1800"}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"latencyPlotLog", "=", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{
     RowBox[{"latencyData", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<End-to-End Latency Comparison (Log Scale)\>\""}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Logical Hops\>\"", ",", "\"\<End-to-End Latency (ns)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"latencyData", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}]}], "]"}], 
        ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Dashed", ",", "Thick", ",", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "[", "3", "]"}]}], "]"}]}], 
       "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"latencyPlotLinear", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"latencyData", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<End-to-End Latency Comparison (Linear Scale)\>\""}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Logical Hops\>\"", ",", "\"\<End-to-End Latency (ns)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"latencyData", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}]}], "]"}], 
        ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Dashed", ",", "Thick", ",", 
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "[", "3", "]"}]}], "]"}]}], 
       "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"GraphicsRow", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"latencyPlotLog", ",", "latencyPlotLinear"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<Figure 2: A side-by-side comparison of end-to-end latency. The \
logarithmic scale (left) reveals the order-of-magnitude advantage of the \
Transaction Fabrix at a single hop. The linear scale (right) shows how this \
advantage compounds as the number of logical hops increases.\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"n", "=", "16"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fabrixEdges", "=", 
   RowBox[{"Union", "[", 
    RowBox[{"Sort", "/@", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}]}], "+", "j"}], 
            "\[UndirectedEdge]", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}]}], "+", 
             RowBox[{"Mod", "[", 
              RowBox[{"j", ",", "4"}], "]"}], "+", "1"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}]}], "+", "j"}], 
            "\[UndirectedEdge]", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"Mod", "[", 
               RowBox[{"i", ",", "4"}], "]"}]}], "+", "j"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}]}], "+", "j"}], 
            "\[UndirectedEdge]", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"Mod", "[", 
               RowBox[{"i", ",", "4"}], "]"}]}], "+", 
             RowBox[{"Mod", "[", 
              RowBox[{"j", ",", "4"}], "]"}], "+", "1"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}]}], "+", "j"}], 
            "\[UndirectedEdge]", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"Mod", "[", 
               RowBox[{"i", ",", "4"}], "]"}]}], "+", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"j", "-", "2"}], ",", "4"}], "]"}], "+", "1"}]}], ",", 
           
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fabrixGraph", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"fabrixEdges", ",", 
     RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<SpringEmbedding\>\""}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Transaction Fabrix (16-Cell Mesh)\>\""}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"serverNodes", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\"\<S\>\"", "<>", 
       RowBox[{"ToString", "[", "#1", "]"}]}], "&"}], ")"}], "/@", 
    RowBox[{"Range", "[", "n", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"torNodes", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\"\<T\>\"", "<>", 
       RowBox[{"ToString", "[", "#1", "]"}]}], "&"}], ")"}], "/@", 
    RowBox[{"Range", "[", 
     FractionBox["n", "4"], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"spineNodes", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\"\<P\>\"", "<>", 
       RowBox[{"ToString", "[", "#1", "]"}]}], "&"}], ")"}], "/@", 
    RowBox[{"Range", "[", 
     FractionBox["n", "4"], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"closNodes", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"serverNodes", ",", "torNodes", ",", "spineNodes"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"closEdges", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
        "serverNodes", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
         "\[TwoWayRule]", 
        RowBox[{"torNodes", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"Quotient", "[", 
           RowBox[{
            RowBox[{"i", "-", "1"}], ",", "4"}], "]"}], "+", "1"}], 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "torNodes", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "\[TwoWayRule]", 
         RowBox[{
         "spineNodes", "\[LeftDoubleBracket]", "j", 
          "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"closGraph", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"closEdges", ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDrawing\>\""}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Clos Network (16 Servers, 8 Switches)\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{"fabrixGraph", ",", "closGraph"}], "}"}], "]"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<Figure 3: The topologies of resilience. On the left, the \
decentralized, redundant Transaction Fabrix. On the right, the hierarchical, \
brittle Clos network. The visual contrast hints at the mathematical \
reality.\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"laplacian", "[", "g_", "]"}], ":=", 
   RowBox[{"KirchhoffMatrix", "[", "g", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numSpanningTrees", "[", "g_", "]"}], ":=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Check", "[", 
     RowBox[{
      RowBox[{"Det", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"laplacian", "[", "g", "]"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "1", "}"}]}], "]"}], "]"}], ",", "0"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"algebraicConnectivity", "[", "g_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"VertexCount", "[", "g", "]"}], ">", "1"}], ",", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", 
          RowBox[{"N", "[", 
           RowBox[{"laplacian", "[", "g", "]"}], "]"}], "]"}], "]"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
       "0.001"}], "]"}], ",", "0"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fabrixTrees", "=", 
   RowBox[{"numSpanningTrees", "[", "fabrixGraph", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"closTrees", "=", 
   RowBox[{"numSpanningTrees", "[", "closGraph", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<\\n--- Spanning Tree Analysis ---\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Number of Spanning Trees for Transaction Fabrix: \>\"", ",", 
    RowBox[{"ScientificForm", "[", "fabrixTrees", "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Number of Spanning Trees for Clos Network: \>\"", ",", 
    RowBox[{"ScientificForm", "[", "closTrees", "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<The Transaction Fabrix possesses orders of magnitude more spanning \
trees, a direct measure of its superior path diversity and resilience against \
link failures.\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"closNodeToRemove", "=", "\"\<P1\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"closDamaged", "=", 
   RowBox[{"VertexDelete", "[", 
    RowBox[{"closGraph", ",", "closNodeToRemove"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fabrixNodeToRemove", "=", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"VertexList", "[", "fabrixGraph", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fabrixDamaged", "=", 
   RowBox[{"VertexDelete", "[", 
    RowBox[{"fabrixGraph", ",", "fabrixNodeToRemove"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"acInitialFabrix", "=", 
   RowBox[{"algebraicConnectivity", "[", "fabrixGraph", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"acDamagedFabrix", "=", 
   RowBox[{"algebraicConnectivity", "[", "fabrixDamaged", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"acInitialClos", "=", 
   RowBox[{"algebraicConnectivity", "[", "closGraph", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"acDamagedClos", "=", 
   RowBox[{"algebraicConnectivity", "[", "closDamaged", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"resilienceData", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<Initial Connectivity\>\"", ",", "acInitialFabrix", ",", 
       "acInitialClos"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<After Single Node Failure\>\"", ",", "acDamagedFabrix", ",", 
       "acDamagedClos"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"resilienceChart", "=", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"resilienceData", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"resilienceData", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Fabrix\>\"", ",", "\"\<Clos\>\""}], "}"}]}], "}"}]}], 
     ",", 
     RowBox[{"ChartLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Transaction Fabrix\>\"", ",", "\"\<Clos Network\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Resilience to Failure: Algebraic Connectivity\>\""}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "97", "]"}], "[", "3", "]"}]}], "}"}]}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<\\n--- Failure Simulation ---\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "resilienceChart", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<Figure 4: The effect of a single critical node failure. The \
connectivity of the Clos network collapses, fragmenting the network. The \
Transaction Fabrix, however, exhibits graceful degradation, maintaining \
robust connectivity. This is the essence of designing for resilience: \
eliminating single points of failure by embracing a distributed, redundant \
topology.\>\"", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.962078711201826*^9, 3.962078716055316*^9}},
 CellLabel->
  "In[982]:=",ExpressionUUID->"88ee93e8-05da-4ac7-932d-19071116815d"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{{{}, {}, 
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             AbsoluteThickness[2], 
             Thickness[Large], 
             RGBColor[0.880722, 0.611041, 0.142051]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEuDsYQ4ADhh0BpTygdB5WHiac4pIHAs2goP9Ph
7BkQSITy8yDyy1Ih/IZCKJ0JlS9xmDUTCCJzoeJlEP7MAqh8JUR/WxFUvhpi
f3EJVL4OQieUQWiHBoj9PhVQ9Y0Q8yyrIPwDTRDz1Gqg+lsg5glDzXFohYo3
QPW3QdR/g/IPtEPMf9MIVdcJ0f+4yQEANkJO0g==
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}], 
             Thickness[Large], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            LineBox[CompressedData["
1:eJxVzrEKglAUgOFLT+DQA+TW6ODg0HCICBERNWeHqKFFEUQIQW5RiW/Vo1mc
f/HC5ePn3gPHPdf5dWWMWf/uXz0HUR0scIMlbvGCHt7QxwoD1Tb0DlsU3jt6
j3dZ7GV7+ogDhqpYOuL/g47V75NO8IUp8286Y/5D58yP9AknLGQGLmIeZA==

             "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
          TagBox[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 60], 0.016666666666666666`]], 
             AbsoluteThickness[2], 
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.922526, 0.385626, 0.209179]], 
            LineBox[CompressedData["
1:eJwty80KQUEYgOHJFVhYWFIWFhaSJEmDcwWythALGyclJXU65Cd35dLQPFPT
M2/ffM11vthWQgi13/2bThY9uGSVK9a5YYM7trhnO1kedIdHds1Puscz++YX
PWDBYTKWeuT/VY+Tn5ue8M5o/6Gn9p96Zv+l53wzi19t0x0k
             "]]}, Annotation[#, "Charting`Private`Tag#3"]& ]}}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[2], 
                Thickness[Large], 
                RGBColor[0.880722, 0.611041, 0.142051]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEuDsYQ4ADhh0BpTygdB5WHiac4pIHAs2goP9Ph
7BkQSITy8yDyy1Ih/IZCKJ0JlS9xmDUTCCJzoeJlEP7MAqh8JUR/WxFUvhpi
f3EJVL4OQieUQWiHBoj9PhVQ9Y0Q8yyrIPwDTRDz1Gqg+lsg5glDzXFohYo3
QPW3QdR/g/IPtEPMf9MIVdcJ0f+4yQEANkJO0g==
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[2], 
                Dashing[{Small, Small}], 
                Thickness[Large], 
                RGBColor[0.560181, 0.691569, 0.194885]], 
               Line[CompressedData["
1:eJxVzrEKglAUgOFLT+DQA+TW6ODg0HCICBERNWeHqKFFEUQIQW5RiW/Vo1mc
f/HC5ePn3gPHPdf5dWWMWf/uXz0HUR0scIMlbvGCHt7QxwoD1Tb0DlsU3jt6
j3dZ7GV7+ogDhqpYOuL/g47V75NO8IUp8286Y/5D58yP9AknLGQGLmIeZA==

                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[2], 
                Dashing[{0, Small}], 
                Thickness[Large], 
                RGBColor[0.922526, 0.385626, 0.209179]], 
               Line[CompressedData["
1:eJwty80KQUEYgOHJFVhYWFIWFhaSJEmDcwWythALGyclJXU65Cd35dLQPFPT
M2/ffM11vthWQgi13/2bThY9uGSVK9a5YYM7trhnO1kedIdHds1Puscz++YX
PWDBYTKWeuT/VY+Tn5ue8M5o/6Gn9p96Zv+l53wzi19t0x0k
                "]]}, "Charting`Private`Tag#3"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{0, 800.}, {0, 604.4}}, 
              "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0},
               "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
              "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
              "DefaultStyle" -> {
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 AbsoluteThickness[2], 
                 Dashing[{0, Small}], 
                 Thickness[Large], 
                 RGBColor[0.922526, 0.385626, 0.209179]], 
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 AbsoluteThickness[2], 
                 Dashing[{Small, Small}], 
                 Thickness[Large], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 AbsoluteThickness[2], 
                 Thickness[Large], 
                 RGBColor[0.880722, 0.611041, 0.142051]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 800.}, {0, 604.4}},
              "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0},
              "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[2], 
                Dashing[{0, Small}], 
                Thickness[Large], 
                RGBColor[0.922526, 0.385626, 0.209179]], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[2], 
                Dashing[{Small, Small}], 
                Thickness[Large], 
                RGBColor[0.560181, 0.691569, 0.194885]], 
               Directive[
                PointSize[
                 Rational[1, 60]], 
                AbsoluteThickness[2], 
                Thickness[Large], 
                RGBColor[0.880722, 0.611041, 0.142051]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]], 
        Selectable -> False]}, 
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[2], 
            Thickness[Large], 
            RGBColor[0.880722, 0.611041, 0.142051]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEuDsYQ4ADhh0BpTygdB5WHiac4pIHAs2goP9Ph
7BkQSITy8yDyy1Ih/IZCKJ0JlS9xmDUTCCJzoeJlEP7MAqh8JUR/WxFUvhpi
f3EJVL4OQieUQWiHBoj9PhVQ9Y0Q8yyrIPwDTRDz1Gqg+lsg5glDzXFohYo3
QPW3QdR/g/IPtEPMf9MIVdcJ0f+4yQEANkJO0g==
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[2], 
            Dashing[{Small, Small}], 
            Thickness[Large], 
            RGBColor[0.560181, 0.691569, 0.194885]], 
           Line[CompressedData["
1:eJxVzrEKglAUgOFLT+DQA+TW6ODg0HCICBERNWeHqKFFEUQIQW5RiW/Vo1mc
f/HC5ePn3gPHPdf5dWWMWf/uXz0HUR0scIMlbvGCHt7QxwoD1Tb0DlsU3jt6
j3dZ7GV7+ogDhqpYOuL/g47V75NO8IUp8286Y/5D58yP9AknLGQGLmIeZA==

            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[2], 
            Dashing[{0, Small}], 
            Thickness[Large], 
            RGBColor[0.922526, 0.385626, 0.209179]], 
           Line[CompressedData["
1:eJwty80KQUEYgOHJFVhYWFIWFhaSJEmDcwWythALGyclJXU65Cd35dLQPFPT
M2/ffM11vthWQgi13/2bThY9uGSVK9a5YYM7trhnO1kedIdHds1Puscz++YX
PWDBYTKWeuT/VY+Tn5ue8M5o/6Gn9p96Zv+l53wzi19t0x0k
            "]]}, "Charting`Private`Tag#3"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 800.}, {0, 604.4}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 60]], 
             AbsoluteThickness[2], 
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.922526, 0.385626, 0.209179]], 
            Directive[
             PointSize[
              Rational[1, 60]], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}], 
             Thickness[Large], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            Directive[
             PointSize[
              Rational[1, 60]], 
             AbsoluteThickness[2], 
             Thickness[Large], 
             RGBColor[0.880722, 0.611041, 0.142051]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         TagBox["\"Total Bandwidth (Tb/s)\"", HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox["\"Total Servers (Cells)\"", HoldForm], TraditionalForm], 
        None}}, FrameTicks -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, GridLines -> {Automatic, Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"The Bandwidth Chasm: Functional vs. Transit Capacity\"", 
       TraditionalForm], PlotRange -> {{0, 800.}, {0, 604.4}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Transaction Fabrix\"", "\"Clos Network (4-slice)\"", 
       "\"Clos Network (2-slice)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 12.5}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 12.5}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Dashing[{0, Small}], 
                    Thickness[Large], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Dashing[{0, Small}], 
                    Thickness[Large], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 12.5}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.9620786610524797`*^9, {3.962078704223579*^9, 3.962078716359653*^9}},
 CellLabel->
  "During evaluation of \
In[982]:=",ExpressionUUID->"ff8f7ca7-8dc1-4221-94c5-6e92e6db2ea0"],

Cell[BoxData["\<\"Figure 1: A reimagining of the bandwidth comparison tables. \
The plot clearly shows that as the number of cells increases, the functional \
bandwidth of the Transaction Fabrix scales linearly and dramatically outpaces \
the choked, transit-limited bandwidth of a hierarchical Clos network.\"\>"], \
"Print",
 CellChangeTimes->{
  3.9620786610524797`*^9, {3.962078704223579*^9, 3.962078716474976*^9}},
 CellLabel->
  "During evaluation of \
In[982]:=",ExpressionUUID->"ab635fe4-8ef2-431a-a0b3-275afbcb2508"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, 
         InterpretationBox[{
           TagBox[{{{}, {}, 
              TagBox[{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[2], 
                 Thickness[Large], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                
                LineBox[{{0., 2.}, {0.6931471805599453, 102.}, {
                 1.0986122886681098`, 202.}, {1.3862943611198906`, 302.}}]}, 
               Annotation[#, "Charting`Private`Tag#1"]& ], 
              TagBox[{
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[2], 
                 Dashing[{Small, Small}], 
                 Thickness[Large], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                
                LineBox[{{0., 300.}, {0.6931471805599453, 800.}, {
                 1.0986122886681098`, 1300.}, {1.3862943611198906`, 1800.}}]},
                Annotation[#, "Charting`Private`Tag#2"]& ]}}, {
            "WolframDynamicHighlight", <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
           StyleBox[
            DynamicBox[
             (Charting`HighlightActionBox["DynamicHighlight", {}, 
              Slot["HighlightElements"], 
              Slot["LayoutOptions"], 
              Slot["Meta"], 
              Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
                 Annotation[{
                   Hue[0.67, 0.6, 0.6], 
                   Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                   
                   Line[{{0., 2.}, {0.6931471805599453, 102.}, {
                    1.0986122886681098`, 202.}, {1.3862943611198906`, 
                    302.}}]}, "Charting`Private`Tag#1"], 
                 Annotation[{
                   Hue[0.9060679774997897, 0.6, 0.6], 
                   Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                   
                   Line[{{0., 300.}, {0.6931471805599453, 800.}, {
                    1.0986122886681098`, 1300.}, {1.3862943611198906`, 
                    1800.}}]}, "Charting`Private`Tag#2"]}}, <|
               "HighlightElements" -> <|
                 "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
                "LayoutOptions" -> <|
                 "PanelPlotLayout" -> <||>, 
                  "PlotRange" -> {{-0.05836395530756472, 
                    1.3862943611198906`}, {0, 1800.}}, 
                  "Frame" -> {{True, True}, {True, True}}, 
                  "AxesOrigin" -> {-0.05836395530756472, 0}, 
                  "ImageSize" -> {360, 360/GoldenRatio}, 
                  "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                  GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]]}, 
                  "HighlightLabelingFunctions" -> <|
                   "CoordinatesToolOptions" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Log, Exp}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                  False|>, 
                "Meta" -> <|
                 "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                  "Function" -> ListLogLinearPlot, "GroupHighlight" -> 
                  False|>|>]]& )[<|
              "HighlightElements" -> <|
                "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
               "LayoutOptions" -> <|
                "PanelPlotLayout" -> <||>, 
                 "PlotRange" -> {{-0.05836395530756472, 
                   1.3862943611198906`}, {0, 1800.}}, 
                 "Frame" -> {{True, True}, {True, True}}, 
                 "AxesOrigin" -> {-0.05836395530756472, 0}, 
                 "ImageSize" -> {360, 360/GoldenRatio}, 
                 "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                 GoldenRatio^(-1), "DefaultStyle" -> {
                   Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                   Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]]}, 
                 "HighlightLabelingFunctions" -> <|
                  "CoordinatesToolOptions" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                   "ScalingFunctions" -> {{Log, Exp}, {Identity, Identity}}|>,
                  "Primitives" -> {}, "GCFlag" -> False|>, 
               "Meta" -> <|
                "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                 "Function" -> ListLogLinearPlot, "GroupHighlight" -> 
                 False|>|>]], Selectable -> False]}, 
          Annotation[{{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[2], 
                Thickness[Large], 
                RGBColor[0.880722, 0.611041, 0.142051]], 
               
               Line[{{0., 2.}, {0.6931471805599453, 102.}, {
                1.0986122886681098`, 202.}, {1.3862943611198906`, 302.}}]}, 
              "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[2], 
                Dashing[{Small, Small}], 
                Thickness[Large], 
                RGBColor[0.560181, 0.691569, 0.194885]], 
               
               Line[{{0., 300.}, {0.6931471805599453, 800.}, {
                1.0986122886681098`, 1300.}, {1.3862943611198906`, 1800.}}]}, 
              "Charting`Private`Tag#2"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{-0.05836395530756472, 1.3862943611198906`}, {
                0, 1800.}}, "Frame" -> {{True, True}, {True, True}}, 
              "AxesOrigin" -> {-0.05836395530756472, 0}, 
              "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
              "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
              "DefaultStyle" -> {
                Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[2], 
                 Dashing[{Small, Small}], 
                 Thickness[Large], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[2], 
                 Thickness[Large], 
                 RGBColor[0.880722, 0.611041, 0.142051]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Exp[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Log, Exp}, {Identity, Identity}}|>, 
              "Primitives" -> {}, "GCFlag" -> False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLogLinearPlot, "GroupHighlight" -> False|>|>, 
           "DynamicHighlight"]], {{}, {}}}, {
        DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {-0.05836395530756472, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox["\"End-to-End Latency (ns)\"", HoldForm], 
             TraditionalForm], None}, {
            FormBox[
             TagBox["\"Logical Hops\"", HoldForm], TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05], "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> 
           "CurrentSet", "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
           True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Exp[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Exp[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"End-to-End Latency Comparison (Log Scale)\"", 
           TraditionalForm], 
         PlotRange -> {{-0.05836395530756472, 1.3862943611198906`}, {
           0, 1800.}}, PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {
           
           Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
            WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
           Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Transaction Fabrix\"", "\"Clos Network\""}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 12.5}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 12.5}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {353.06666666666666, -163.8}, {
     Center, Center}, {661.9999999999999, 312.},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     TemplateBox[{
       GraphicsBox[{{}, 
         InterpretationBox[{
           TagBox[{{{}, {}, 
              TagBox[{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[
                  NCache[
                   Rational[7, 360], 0.019444444444444445`]], 
                 AbsoluteThickness[2], 
                 Thickness[Large], 
                 RGBColor[0.880722, 0.611041, 0.142051]], 
                LineBox[{{1., 2.}, {2., 102.}, {3., 202.}, {4., 302.}}]}, 
               Annotation[#, "Charting`Private`Tag#1"]& ], 
              TagBox[{
                Hue[0.9060679774997897, 0.6, 0.6], 
                Directive[
                 PointSize[
                  NCache[
                   Rational[7, 360], 0.019444444444444445`]], 
                 AbsoluteThickness[2], 
                 Dashing[{Small, Small}], 
                 Thickness[Large], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                LineBox[{{1., 300.}, {2., 800.}, {3., 1300.}, {4., 1800.}}]}, 
               Annotation[#, "Charting`Private`Tag#2"]& ]}}, {
            "WolframDynamicHighlight", <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
           StyleBox[
            DynamicBox[
             (Charting`HighlightActionBox["DynamicHighlight", {}, 
              Slot["HighlightElements"], 
              Slot["LayoutOptions"], 
              Slot["Meta"], 
              Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
                 Annotation[{
                   Hue[0.67, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                   Line[{{1., 2.}, {2., 102.}, {3., 202.}, {4., 302.}}]}, 
                  "Charting`Private`Tag#1"], 
                 Annotation[{
                   Hue[0.9060679774997897, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                   Line[{{1., 300.}, {2., 800.}, {3., 1300.}, {4., 1800.}}]}, 
                  "Charting`Private`Tag#2"]}}, <|
               "HighlightElements" -> <|
                 "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                "LayoutOptions" -> <|
                 "PanelPlotLayout" -> <||>, 
                  "PlotRange" -> {{0.9375000000000024, 4.}, {0, 1800.}}, 
                  "Frame" -> {{True, True}, {True, True}}, 
                  "AxesOrigin" -> {0.9375000000000024, 0}, 
                  "ImageSize" -> {360, 360/GoldenRatio}, 
                  "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                  GoldenRatio^(-1), "DefaultStyle" -> {
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]]}, 
                  "HighlightLabelingFunctions" -> <|
                   "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                  False|>, 
                "Meta" -> <|
                 "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                  "Function" -> ListLinePlot, "GroupHighlight" -> 
                  False|>|>]]& )[<|
              "HighlightElements" -> <|
                "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
               "LayoutOptions" -> <|
                "PanelPlotLayout" -> <||>, 
                 "PlotRange" -> {{0.9375000000000024, 4.}, {0, 1800.}}, 
                 "Frame" -> {{True, True}, {True, True}}, 
                 "AxesOrigin" -> {0.9375000000000024, 0}, 
                 "ImageSize" -> {360, 360/GoldenRatio}, 
                 "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                 GoldenRatio^(-1), "DefaultStyle" -> {
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]]}, 
                 "HighlightLabelingFunctions" -> <|
                  "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                   "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                 False|>, 
               "Meta" -> <|
                "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                 "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]], 
            Selectable -> False]}, 
          Annotation[{{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                AbsoluteThickness[2], 
                Thickness[Large], 
                RGBColor[0.880722, 0.611041, 0.142051]], 
               Line[{{1., 2.}, {2., 102.}, {3., 202.}, {4., 302.}}]}, 
              "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[7, 360]], 
                AbsoluteThickness[2], 
                Dashing[{Small, Small}], 
                Thickness[Large], 
                RGBColor[0.560181, 0.691569, 0.194885]], 
               Line[{{1., 300.}, {2., 800.}, {3., 1300.}, {4., 1800.}}]}, 
              "Charting`Private`Tag#2"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{0.9375000000000024, 4.}, {0, 1800.}}, 
              "Frame" -> {{True, True}, {True, True}}, 
              "AxesOrigin" -> {0.9375000000000024, 0}, 
              "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
              "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
              "DefaultStyle" -> {
                Directive[
                 PointSize[
                  Rational[7, 360]], 
                 AbsoluteThickness[2], 
                 Dashing[{Small, Small}], 
                 Thickness[Large], 
                 RGBColor[0.560181, 0.691569, 0.194885]], 
                Directive[
                 PointSize[
                  Rational[7, 360]], 
                 AbsoluteThickness[2], 
                 Thickness[Large], 
                 RGBColor[0.880722, 0.611041, 0.142051]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>, 
           "DynamicHighlight"]], {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0.9375000000000024, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox["\"End-to-End Latency (ns)\"", HoldForm], 
             TraditionalForm], None}, {
            FormBox[
             TagBox["\"Logical Hops\"", HoldForm], TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], 
           "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[2]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
           "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> 
           Automatic, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"End-to-End Latency Comparison (Linear Scale)\"", 
           TraditionalForm], 
         PlotRange -> {{0.9375000000000024, 4.}, {0, 1800.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Transaction Fabrix\"", "\"Clos Network\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 12.5}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large], 
                    RGBColor[0.560181, 0.691569, 0.194885]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 12.5}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {1059.2, -163.8}, {Center, Center}, {662., 312.},
     
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
  ImageSize->Full,
  PlotRange->{{0, 1412.2666666666667`}, {-327.6, 0}},
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{
  3.9620786610524797`*^9, {3.962078704223579*^9, 3.962078716708971*^9}},
 CellLabel->
  "During evaluation of \
In[982]:=",ExpressionUUID->"23b72e37-6af8-408f-ad54-4e96977dd80e"],

Cell[BoxData["\<\"Figure 2: A side-by-side comparison of end-to-end latency. \
The logarithmic scale (left) reveals the order-of-magnitude advantage of the \
Transaction Fabrix at a single hop. The linear scale (right) shows how this \
advantage compounds as the number of logical hops increases.\"\>"], "Print",
 CellChangeTimes->{
  3.9620786610524797`*^9, {3.962078704223579*^9, 3.962078717366947*^9}},
 CellLabel->
  "During evaluation of \
In[982]:=",ExpressionUUID->"32125c5e-3af3-48ed-ab6a-aaf794ddb501"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{1, 2, 4, 5, 6, 8, 13, 14, 16, 3, 7, 15, 9, 10, 12, 11}, {
           Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {1, 
            9}, {2, 10}, {2, 4}, {2, 5}, {2, 11}, {2, 7}, {2, 8}, {2, 12}, {
            10, 3}, {10, 5}, {10, 11}, {10, 6}, {10, 8}, {10, 12}, {10, 9}, {
            3, 4}, {3, 11}, {3, 6}, {3, 7}, {3, 12}, {3, 9}, {4, 5}, {4, 6}, {
            4, 13}, {4, 14}, {4, 15}, {5, 11}, {5, 13}, {5, 14}, {5, 16}, {11,
             6}, {11, 14}, {11, 16}, {11, 15}, {6, 13}, {6, 16}, {6, 15}, {13,
             14}, {13, 15}, {13, 7}, {13, 8}, {13, 9}, {14, 16}, {14, 7}, {14,
             8}, {14, 12}, {16, 15}, {16, 8}, {16, 12}, {16, 9}, {15, 7}, {15,
             12}, {15, 9}, {7, 8}, {7, 9}, {8, 12}, {12, 9}}}, {
           GraphLayout -> "SpringEmbedding", ImageSize -> Large, PlotLabel -> 
            "Transaction Fabrix (16-Cell Mesh)", 
            VertexLabels -> {Automatic}}]]}, 
         TagBox[GraphicsGroupBox[{
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
             ArrowBox[CompressedData["
1:eJxl00soRGEYxvGJFJEUSRZCrMgll4i8lJJcEkopG8Zlo8EKnVwiCxakyC1k
NSQsDJoocolYuKWRkpgFcidj0MSCzf+bOqvfOe953ud8E1RqyC931ul0qb+X
09+VaLRFVhc9SP/6WoVLz4tkD89YtGKLnESl6xP6noV+XvxqzfS1SvDs+NHV
2KfiU/W3+wv9DunMiDkzFzwp7ogyLHWHfkjuleapmdT5cx45DRuBdkmN9e5d
LLQrPqFNmEO0G9H9/ej+ySsdjUkn8hS4H+zbvKA8nxftemYZPZVtv9qAtIFL
ZV/mpzM/nfnozEdvWd1rOz/eko52Q/z0iE1x16zq65vdZ1l21LoN3n8q/v/e
+lav2Qq9Vfle3I/O/uncj85+6dyPzv3o3I/78PvQuR99qCrOxzb5JaumXH2Y
+47im/rvgbKaN2k53Dww2psUv7uLSGs2fsj7g4/ds/JSycP96dyfznx05qNb
I0x1XSWPUhZuTpk/uFD6YD4689GZj85+6MzH88b/D53nj858dPZHZ37mYX90
nl8689GZj87+2Afz0ZmPznx09kNnPubh+aIzH+9nP3TmozMf38f5dM6ncz77
5Hw65/N+zuf99B850PpG
              "], 0.02189173675823039]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
             0.7]}], {
              DiskBox[{0.9481721817840089, 1.1601614011708299`}, 
               0.02189173675823039], 
              InsetBox["1", {0.9666802578267106, 1.1357323718767869}, 
               ImageScaled[{0.047087522261842374, 1.0978045562799625}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.3805229297671999, 1.0989307324080548`}, 
               0.02189173675823039], 
              InsetBox["2", {0.3500229711355184, 1.1019438494846652}, 
               ImageScaled[{1.246366710560031, 0.4262657924176354}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.6277207824412832, 1.6640356318193388`}, 
               0.02189173675823039], 
              InsetBox["4", {0.6210933433697373, 1.6939589237907209}, 
               ImageScaled[{0.6621805445378073, -0.23225505868749063}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.9117954407479751`, 1.0204418718826411`}, 
               0.02189173675823039], 
              InsetBox["5", {1.9420349603710363, 1.0254316418190352}, 
               ImageScaled[{-0.23999348859888492, 0.37789497622435037}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.5091702656237085`, 1.1068077627116568`}, 
               0.02189173675823039], 
              InsetBox["6", {1.5262082448782741, 1.13228390084075}, 
               ImageScaled[{0.08306236790724886, -0.12342843289738537}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.5704998720473604`, 1.5831828790717424`}, 
               0.02189173675823039], 
              InsetBox["8", {1.5883092198083217, 1.6081258837700698}, 
               ImageScaled[{0.064186152968709, -0.11038208585752785}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.7964042325219405, 0.}, 0.02189173675823039], 
              InsetBox["13", {0.7936870866349492, -0.03052774916826413}, 
               ImageScaled[{0.5664914750303573, 1.247046774806161}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.3473802867710575, 0.08787668561865636}, 
               0.02189173675823039], 
              InsetBox["14", {0.3300721229563532, 0.06258333043562447}, 
               ImageScaled[{0.923549338155374, 1.1189555381028145}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.4003202570900344, 0.5810857386175252}, 
               0.02189173675823039], 
              InsetBox["16", {0.38414539155402144, 0.5550530653790053}, 
               ImageScaled[{0.895816313380987, 1.1370474441213028}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.17837125239885054`, 1.4757501722708937`}, 
               0.02189173675823039], 
              InsetBox["3", {0.15476899576799566, 1.4953016385326068}, 
               ImageScaled[{1.077572542182613, 0.02155464416851771}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.1122836188484957`, 1.6830072754818692`}, 
               0.02189173675823039], 
              InsetBox["7", {1.1149675945149644, 1.7135379588295023}, 
               ImageScaled[{0.4343202358535445, -0.24711857732334963}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0., 0.6372559947231329}, 0.02189173675823039], 
              InsetBox["15", {-0.03016894876999513, 0.6318559131343924}, 
               ImageScaled[{1.2382665441101925, 0.6321457901243661}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.7289953984641557`, 0.195653366068127}, 
               0.02189173675823039], 
              InsetBox["9", {1.7524935664546766, 0.17597692197522993}, 
               ImageScaled[{-0.07502538147885951, 0.9815036974469585}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.2774387336742603`, 0.0075623125561504745`}, 
               0.02189173675823039], 
              InsetBox["10", {1.2836837812619288, -0.022443115814052814}, 
               ImageScaled[{0.3471769853334373, 1.2342650244892668}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.5411369844649085`, 0.5750803818586678}, 
               0.02189173675823039], 
              InsetBox["12", {1.5715752044528029, 0.5714969317027163}, 
               ImageScaled[{-0.24485589970830912, 0.5876908699336787}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.9801690330873183, 0.5255986428395655}, 
               0.02189173675823039], 
              InsetBox["11", {0.9610922101169291, 0.5495861641039246}, 
               ImageScaled[{0.9668303252567509, -0.08700038110777752}],
               BaseStyle->"Graphics"]}}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->"NetworkGraphics",
       FormatType->TraditionalForm,
       FrameTicks->None,
       ImageSize->Large,
       PlotLabel->FormBox[
        "\"Transaction Fabrix (16-Cell Mesh)\"", TraditionalForm]],
      TraditionalForm], {384., -348.075}, {Center, Center}, {720., 662.9999999999999},
     
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{"S1", "T1", "S2", "S3", "S4", "S5", "T2", "S6", "S7", "S8", 
            "S9", "T3", "S10", "S11", "S12", "S13", "T4", "S14", "S15", "S16",
             "P1", "P2", "P3", "P4"}, {
           Null, {{1, 2}, {3, 2}, {4, 2}, {5, 2}, {6, 7}, {8, 7}, {9, 7}, {10,
             7}, {11, 12}, {13, 12}, {14, 12}, {15, 12}, {16, 17}, {18, 17}, {
            19, 17}, {20, 17}, {2, 21}, {2, 22}, {2, 23}, {2, 24}, {7, 21}, {
            7, 22}, {7, 23}, {7, 24}, {12, 21}, {12, 22}, {12, 23}, {12, 
            24}, {17, 21}, {17, 22}, {17, 23}, {17, 24}}}, {
           GraphLayout -> "LayeredDrawing", ImageSize -> Large, PlotLabel -> 
            "Clos Network (16 Servers, 8 Switches)", 
            VertexLabels -> {"Name"}}]]}, 
         TagBox[GraphicsGroupBox[{
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
             ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGBQAGImKEYHOS/vTFif9tjeyvxitv29k/bofBiNSz2EvolT
HsbHJe//O837btt/uDnYzX+JU3/LoaTFz7U+ELD/M1w+WCC8rnzRNzh/nVdf
knLNb7h6dD6E/olTvWKcdyS71F+c8hD3MTjgkkf3P3b7XxIw/wNOeXT//7gq
P+v0CUa4e1SLrXsWmrI4wNSj8yH6mXGqv/9nZvtkFlac8pDwZsMpj+5/dHl0
/6PLo/sfu/sR/j+uLFIa7cABd8+XA/rphmu54OrR+RCaE6d6SHhz45SHpA9e
nPLo/sduP8L/6PLo/keXR/c/AJZhfEk=
              "], 0.03464450741324206]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
             0.7]}], {DiskBox[{0., 0.}, 0.03464450741324206], 
              InsetBox["\<\"S1\"\>", 
               Offset[{2, 2}, {0.03464450741324206, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.606284888205932, 0.20209496273531063`}, 
               0.03464450741324206], 
              InsetBox["\<\"T1\"\>", 
               Offset[{2, 2}, {0.6409293956191741, 0.23673947014855268}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.20209496273531063`, 0.}, 0.03464450741324206], 
              InsetBox["\<\"S2\"\>", 
               Offset[{2, 2}, {0.23673947014855268, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.40418992547062127`, 0.}, 0.03464450741324206], 
              InsetBox["\<\"S3\"\>", 
               Offset[{2, 2}, {0.4388344328838633, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.606284888205932, 0.}, 0.03464450741324206], 
              InsetBox["\<\"S4\"\>", 
               Offset[{2, 2}, {0.6409293956191741, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.4146647391471745`, 0.}, 0.03464450741324206], 
              InsetBox["\<\"S5\"\>", 
               Offset[{2, 2}, {1.4493092465604165, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.7178071832501405`, 0.20209496273531063`}, 
               0.03464450741324206], 
              InsetBox["\<\"T2\"\>", 
               Offset[{2, 2}, {1.7524516906633825, 0.23673947014855268}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.616759701882485, 0.}, 0.03464450741324206], 
              InsetBox["\<\"S6\"\>", 
               Offset[{2, 2}, {1.651404209295727, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.8188546646177957`, 0.}, 0.03464450741324206], 
              InsetBox["\<\"S7\"\>", 
               Offset[{2, 2}, {1.8534991720310376, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2.0209496273531062`, 0.}, 0.03464450741324206], 
              InsetBox["\<\"S8\"\>", 
               Offset[{2, 2}, {2.0555941347663484, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2.223044590088417, 0.}, 0.03464450741324206], 
              InsetBox["\<\"S9\"\>", 
               Offset[{2, 2}, {2.2576890975016592, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2.526187034191383, 0.20209496273531063`}, 
               0.03464450741324206], 
              InsetBox["\<\"T3\"\>", 
               Offset[{2, 2}, {2.560831541604625, 0.23673947014855268}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2.425139552823728, 0.}, 0.03464450741324206], 
              InsetBox["\<\"S10\"\>", 
               Offset[{2, 2}, {2.45978406023697, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2.627234515559038, 0.}, 0.03464450741324206], 
              InsetBox["\<\"S11\"\>", 
               Offset[{2, 2}, {2.6618790229722804, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{2.829329478294349, 0.}, 0.03464450741324206], 
              InsetBox["\<\"S12\"\>", 
               Offset[{2, 2}, {2.863973985707591, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{3.03142444102966, 0.}, 0.03464450741324206], 
              InsetBox["\<\"S13\"\>", 
               Offset[{2, 2}, {3.066068948442902, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{3.3345668851326256`, 0.20209496273531063`}, 
               0.03464450741324206], 
              InsetBox["\<\"T4\"\>", 
               Offset[{2, 2}, {3.3692113925458678, 0.23673947014855268}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{3.23351940376497, 0.}, 0.03464450741324206], 
              InsetBox["\<\"S14\"\>", 
               Offset[{2, 2}, {3.2681639111782124, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{3.435614366500281, 0.}, 0.03464450741324206], 
              InsetBox["\<\"S15\"\>", 
               Offset[{2, 2}, {3.470258873913523, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{3.6377093292355913`, 0.}, 0.03464450741324206], 
              InsetBox["\<\"S16\"\>", 
               Offset[{2, 2}, {3.6723538366488335, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.9704258866692788`, 0.40418992547062127`}, 
               0.03464450741324206], 
              InsetBox["\<\"P1\"\>", 
               Offset[{2, 2}, {2.0050703940825207, 0.4388344328838633}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.8083798509412425, 0.}, 0.03464450741324206], 
              InsetBox["\<\"P2\"\>", 
               Offset[{2, 2}, {0.8430243583544846, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.0104748136765531`, 0.}, 0.03464450741324206], 
              InsetBox["\<\"P3\"\>", 
               Offset[{2, 2}, {1.045119321089795, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.212569776411864, 0.}, 0.03464450741324206], 
              InsetBox["\<\"P4\"\>", 
               Offset[{2, 2}, {1.247214283825106, 0.03464450741324206}], 
               ImageScaled[{0, 0}],
               BaseStyle->"Graphics"]}}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->"NetworkGraphics",
       FormatType->TraditionalForm,
       FrameTicks->None,
       ImageSize->Large,
       PlotLabel->FormBox[
        "\"Clos Network (16 Servers, 8 Switches)\"", TraditionalForm]],
      TraditionalForm], {1152., -348.075}, {Center, Center}, {720., 662.9999999999999},
     
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
  ImageSize->{
    UpTo[600], Automatic},
  PlotRange->{{0, 1536.}, {-696.15, 0}},
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{
  3.9620786610524797`*^9, {3.962078704223579*^9, 3.962078717570065*^9}},
 CellLabel->
  "During evaluation of \
In[982]:=",ExpressionUUID->"864601c6-db1f-4696-911b-3519d2b8dad8"],

Cell[BoxData["\<\"Figure 3: The topologies of resilience. On the left, the \
decentralized, redundant Transaction Fabrix. On the right, the hierarchical, \
brittle Clos network. The visual contrast hints at the mathematical \
reality.\"\>"], "Print",
 CellChangeTimes->{
  3.9620786610524797`*^9, {3.962078704223579*^9, 3.962078717586651*^9}},
 CellLabel->
  "During evaluation of \
In[982]:=",ExpressionUUID->"c26bc269-0bb1-45de-b8bc-cb045b3180f0"],

Cell[BoxData["\<\"\\n--- Spanning Tree Analysis ---\"\>"], "Print",
 CellChangeTimes->{
  3.9620786610524797`*^9, {3.962078704223579*^9, 3.962078717587216*^9}},
 CellLabel->
  "During evaluation of \
In[982]:=",ExpressionUUID->"6d4fc3fb-c32b-4478-9f89-8ce7174d7905"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of Spanning Trees for Transaction Fabrix: \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"3822059520000\"\>",
      ShowStringCharacters->False],
     3822059520000,
     Editable->False],
    ScientificForm]}],
  SequenceForm["Number of Spanning Trees for Transaction Fabrix: ", 
   ScientificForm[3822059520000]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9620786610524797`*^9, {3.962078704223579*^9, 3.962078717587706*^9}},
 CellLabel->
  "During evaluation of \
In[982]:=",ExpressionUUID->"dc642cb2-10d2-4758-ba34-66417b88dc45"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of Spanning Trees for Clos Network: \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"4096\"\>",
      ShowStringCharacters->False],
     4096,
     Editable->False],
    ScientificForm]}],
  SequenceForm["Number of Spanning Trees for Clos Network: ", 
   ScientificForm[4096]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9620786610524797`*^9, {3.962078704223579*^9, 3.9620787175882196`*^9}},
 CellLabel->
  "During evaluation of \
In[982]:=",ExpressionUUID->"34ddfef9-ec63-4db0-946f-f76bdfb0ad03"],

Cell[BoxData["\<\"The Transaction Fabrix possesses orders of magnitude more \
spanning trees, a direct measure of its superior path diversity and \
resilience against link failures.\"\>"], "Print",
 CellChangeTimes->{
  3.9620786610524797`*^9, {3.962078704223579*^9, 3.962078717588707*^9}},
 CellLabel->
  "During evaluation of \
In[982]:=",ExpressionUUID->"7096b437-ca43-4702-9ed2-6fac22366755"],

Cell[BoxData["\<\"\\n--- Failure Simulation ---\"\>"], "Print",
 CellChangeTimes->{
  3.9620786610524797`*^9, {3.962078704223579*^9, 3.9620787176102743`*^9}},
 CellLabel->
  "During evaluation of \
In[982]:=",ExpressionUUID->"bc0ad3ed-a44b-40d2-a8c9-d7624d98365c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.3552804078659868, 0.}, {5.243991260014567, 
       0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.6719999999999999]]], 
            RGBColor[0.880722, 0.611041, 0.142051]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{0.7439912600145666, 0.}, {1.64639475600874, 6.}, 
               "RoundingRadius" -> 0], StatusArea[#, 6.]& , TagBoxNote -> 
              "6."], 
             StyleBox["6.`", {}, StripOnInput -> False]], Annotation[#, 
             Style[6., {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.6719999999999999]]], 
            RGBColor[0.560181, 0.691569, 0.194885]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{1.7439912600145666`, 0.}, {2.64639475600874, 
               0.46900000000000003`}, "RoundingRadius" -> 0], 
              StatusArea[#, 0.46900000000000003`]& , TagBoxNote -> 
              "0.46900000000000003"], 
             StyleBox["0.46900000000000003`", {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[0.46900000000000003`, {}], 
             "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.6719999999999999]]], 
            RGBColor[0.880722, 0.611041, 0.142051]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{3.0367807720320465`, 0.}, {3.93918426802622, 
               5.186}, "RoundingRadius" -> 0], StatusArea[#, 5.186]& , 
              TagBoxNote -> "5.186"], 
             StyleBox["5.186`", {}, StripOnInput -> False]], Annotation[#, 
             Style[5.186, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.6719999999999999]]], 
            RGBColor[0.560181, 0.691569, 0.194885]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{4.0367807720320465`, 0.}, {4.93918426802622, 
               0.394}, "RoundingRadius" -> 0], StatusArea[#, 0.394]& , 
              TagBoxNote -> "0.394"], 
             StyleBox["0.394`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.394, {}], 
             "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.3552804078659868, 0.}, {5.335669337217771, 0.}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.7439912600145666, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.7439912600145666, 
              0.}]}], 
           LineBox[{{4.93918426802622, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {4.93918426802622, 
              0.}]}], {{}, {}, {
             LineBox[{{1.64639475600874, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {1.64639475600874, 
                0.}]}], 
             LineBox[{{1.7439912600145666`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {1.7439912600145666`, 
                0.}]}]}, {}, {}, {
             LineBox[{{3.93918426802622, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {3.93918426802622, 
                0.}]}], 
             LineBox[{{4.0367807720320465`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {4.0367807720320465`, 
                0.}]}]}, {
             LineBox[{{2.64639475600874, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {2.64639475600874, 
                0.}]}], 
             LineBox[{{3.0367807720320465`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.0367807720320465`, 
                0.}]}]}}}, 
          StyleBox[{
            Directive[
             Thickness[Tiny]], 
            Directive[
             Thickness[Tiny]], 
            StyleBox[{
              InsetBox[
               FormBox["\"Fabrix\"", TraditionalForm], 
               Offset[{0, -2}, {1.1951930080116533`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"Clos\"", TraditionalForm], 
               Offset[{0, -2}, {2.1951930080116533`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"Initial Connectivity\"", TraditionalForm], 
               Offset[{0, -17}, {1.6951930080116533`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"Fabrix\"", TraditionalForm], 
               Offset[{0, -2}, {3.4879825200291332`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"Clos\"", TraditionalForm], 
               Offset[{0, -2}, {4.487982520029133, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["\"After Single Node Failure\"", TraditionalForm], 
               Offset[{0, -17}, {3.9879825200291332`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}]}, {{}}, 
             StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
           False]}, {"GraphicsTicks"}, StripOnInput -> False]}, {
       "GraphicsAxes"}, StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.3552804078659868, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, PlotLabel -> 
     FormBox["\"Resilience to Failure: Algebraic Connectivity\"", 
       TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Transaction Fabrix\"", "\"Clos Network\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6719999999999999]]], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6719999999999999]]], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6719999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6719999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6719999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6719999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.9620786610524797`*^9, {3.962078704223579*^9, 3.962078717663219*^9}},
 CellLabel->
  "During evaluation of \
In[982]:=",ExpressionUUID->"4cd3a585-f947-4ade-8cac-b00ff072ee54"],

Cell[BoxData["\<\"Figure 4: The effect of a single critical node failure. The \
connectivity of the Clos network collapses, fragmenting the network. The \
Transaction Fabrix, however, exhibits graceful degradation, maintaining \
robust connectivity. This is the essence of designing for resilience: \
eliminating single points of failure by embracing a distributed, redundant \
topology.\"\>"], "Print",
 CellChangeTimes->{
  3.9620786610524797`*^9, {3.962078704223579*^9, 3.962078717672186*^9}},
 CellLabel->
  "During evaluation of \
In[982]:=",ExpressionUUID->"a4385f26-7959-47bf-8a0c-20ad0a2293a5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Servers" -> 96, "Min ns" -> 124.8, "Avg ns" -> 705.3, "Max ns" -> 
        511.7|>, <|
       "Servers" -> 250, "Min ns" -> 124.8, "Avg ns" -> 205.9, "Max ns" -> 
        613.9|>, <|
       "Servers" -> 404, "Min ns" -> 124.8, "Avg ns" -> 206.1, "Max ns" -> 
        615.2|>, <|
       "Servers" -> 558, "Min ns" -> 124.8, "Avg ns" -> 206.3, "Max ns" -> 
        716.1|>, <|
       "Servers" -> 712, "Min ns" -> 124.8, "Avg ns" -> 206.5, "Max ns" -> 
        716.8|>, <|
       "Servers" -> 866, "Min ns" -> 124.8, "Avg ns" -> 206.6, "Max ns" -> 
        717.4|>, <|
       "Servers" -> 1020, "Min ns" -> 124.8, "Avg ns" -> 306.7, "Max ns" -> 
        817.9|>, <|
       "Servers" -> 1174, "Min ns" -> 124.8, "Avg ns" -> 306.7, "Max ns" -> 
        818.3|>, <|
       "Servers" -> 1328, "Min ns" -> 124.8, "Avg ns" -> 306.8, "Max ns" -> 
        818.7|>, <|
       "Servers" -> 1482, "Min ns" -> 124.8, "Avg ns" -> 306.8, "Max ns" -> 
        819.|>, <|
       "Servers" -> 1636, "Min ns" -> 124.8, "Avg ns" -> 306.9, "Max ns" -> 
        819.3|>, <|
       "Servers" -> 1790, "Min ns" -> 124.8, "Avg ns" -> 306.9, "Max ns" -> 
        819.6|>, <|
       "Servers" -> 1944, "Min ns" -> 124.8, "Avg ns" -> 307., "Max ns" -> 
        919.8|>, <|
       "Servers" -> 2098, "Min ns" -> 124.8, "Avg ns" -> 307., "Max ns" -> 
        920.1|>, <|
       "Servers" -> 2252, "Min ns" -> 124.8, "Avg ns" -> 307.1, "Max ns" -> 
        920.3|>, <|
       "Servers" -> 2406, "Min ns" -> 124.8, "Avg ns" -> 307.1, "Max ns" -> 
        920.5|>, <|
       "Servers" -> 2560, "Min ns" -> 124.8, "Avg ns" -> 307.1, "Max ns" -> 
        920.7|>, <|
       "Servers" -> 2714, "Min ns" -> 124.8, "Avg ns" -> 307.1, "Max ns" -> 
        920.9|>, <|
       "Servers" -> 2868, "Min ns" -> 124.8, "Avg ns" -> 307.2, "Max ns" -> 
        921.1|>, <|
       "Servers" -> 3022, "Min ns" -> 124.8, "Avg ns" -> 307.2, "Max ns" -> 
        921.2|>, <|
       "Servers" -> 3176, "Min ns" -> 124.8, "Avg ns" -> 307.2, "Max ns" -> 
        921.4|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Servers"} -> 
        1, {All, "Min ns"} -> 1, {All, "Avg ns"} -> 1, {All, "Max ns"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Servers" -> TypeSystem`PackageScope`AtomShape[34], "Min ns" -> 
            TypeSystem`PackageScope`AtomShape[60], "Avg ns" -> 
            TypeSystem`PackageScope`AtomShape[60], "Max ns" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Servers", "Min ns", "Avg ns", "Max ns"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 21], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Servers"} -> 
        1, {All, "Min ns"} -> 1, {All, "Avg ns"} -> 1, {All, "Max ns"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Servers" -> TypeSystem`PackageScope`AtomShape[34], "Min ns" -> 
            TypeSystem`PackageScope`AtomShape[60], "Avg ns" -> 
            TypeSystem`PackageScope`AtomShape[60], "Max ns" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Servers", "Min ns", "Avg ns", "Max ns"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 21], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 4, "DataRowCount" -> 21, "DataColumnCount" -> 
     4, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Servers", 
                  Style[
                  "Servers", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Servers"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Servers"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Min ns", 
                  Style[
                  "Min ns", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Min ns"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Min ns"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Avg ns", 
                  Style[
                  "Avg ns", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Avg ns"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Avg ns"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Max ns", 
                  Style[
                  "Max ns", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Max ns"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Max ns"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["96"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["705.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["511.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["250"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["205.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["613.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["404"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["206.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["615.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["558"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["206.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["716.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["712"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["206.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["716.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["866"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["206.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["717.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1020"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["306.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["817.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1174"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["306.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["818.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1328"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["306.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["818.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1482"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["306.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["819.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1636"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["306.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["819.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1790"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["306.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["819.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1944"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["919.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2098"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["920.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["920.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2406"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["920.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2560"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["920.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2714"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["920.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2868"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["921.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3022"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["921.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{299., {377.82244873046875`, 386.17755126953125`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{299., {377.82244873046875`, 386.17755126953125`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Print",
 CellChangeTimes->{{3.962079247327404*^9, 3.962079294957708*^9}},
 CellLabel->
  "During evaluation of \
In[1740]:=",ExpressionUUID->"0919aa83-e65f-4bb1-a752-d8d04236af48"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Servers" -> 680, "Cellular Fabrix Tb/s" -> 8.5, "2-slice Clos Tb/s" -> 
        17, "4-slice Clos Tb/s" -> 25.5, "8-slice Clos Tb/s" -> 34|>, <|
       "Servers" -> 720, "Cellular Fabrix Tb/s" -> 9., "2-slice Clos Tb/s" -> 
        18, "4-slice Clos Tb/s" -> 27., "8-slice Clos Tb/s" -> 36|>, <|
       "Servers" -> 760, "Cellular Fabrix Tb/s" -> 9.5, "2-slice Clos Tb/s" -> 
        19, "4-slice Clos Tb/s" -> 28.5, "8-slice Clos Tb/s" -> 38|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Servers"} -> 
        1, {All, "Cellular Fabrix Tb/s"} -> 1, {All, "2-slice Clos Tb/s"} -> 
        1, {All, "4-slice Clos Tb/s"} -> 1, {All, "8-slice Clos Tb/s"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Servers" -> TypeSystem`PackageScope`AtomShape[34], 
            "Cellular Fabrix Tb/s" -> TypeSystem`PackageScope`AtomShape[60], 
            "2-slice Clos Tb/s" -> TypeSystem`PackageScope`AtomShape[34], 
            "4-slice Clos Tb/s" -> TypeSystem`PackageScope`AtomShape[60], 
            "8-slice Clos Tb/s" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 5, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Servers", "Cellular Fabrix Tb/s", "2-slice Clos Tb/s", 
         "4-slice Clos Tb/s", "8-slice Clos Tb/s"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Servers"} -> 
        1, {All, "Cellular Fabrix Tb/s"} -> 1, {All, "2-slice Clos Tb/s"} -> 
        1, {All, "4-slice Clos Tb/s"} -> 1, {All, "8-slice Clos Tb/s"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Servers" -> TypeSystem`PackageScope`AtomShape[34], 
            "Cellular Fabrix Tb/s" -> TypeSystem`PackageScope`AtomShape[60], 
            "2-slice Clos Tb/s" -> TypeSystem`PackageScope`AtomShape[34], 
            "4-slice Clos Tb/s" -> TypeSystem`PackageScope`AtomShape[60], 
            "8-slice Clos Tb/s" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 5, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Servers", "Cellular Fabrix Tb/s", "2-slice Clos Tb/s", 
         "4-slice Clos Tb/s", "8-slice Clos Tb/s"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer]}], 3], "Path" -> {}, "DisplayedRowCount" -> 
     3, "DisplayedColumnCount" -> 5, "DataRowCount" -> 3, "DataColumnCount" -> 
     5, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Servers", 
                  Style[
                  "Servers", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Servers"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Servers"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cellular Fabrix Tb/s", 
                  Style[
                  "Cellular Fabrix Tb/s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Cellular Fabrix Tb/s"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Cellular Fabrix Tb/s"}, "ColumnHeader", True], "Mouse"],
               ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2-slice Clos Tb/s", 
                  Style[
                  "2-slice Clos Tb/s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2-slice Clos Tb/s"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2-slice Clos Tb/s"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["4-slice Clos Tb/s", 
                  Style[
                  "4-slice Clos Tb/s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "4-slice Clos Tb/s"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "4-slice Clos Tb/s"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["8-slice Clos Tb/s", 
                  Style[
                  "8-slice Clos Tb/s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "8-slice Clos Tb/s"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "8-slice Clos Tb/s"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["680"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Cellular Fabrix Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["2-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["4-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["8-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["720"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Cellular Fabrix Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["2-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["4-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["8-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["760"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Cellular Fabrix Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["2-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["28.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["4-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["38"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["8-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{610., {75.32244873046875, 83.67755126953125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{610., {75.32244873046875, 83.67755126953125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Print",
 CellChangeTimes->{{3.962079247327404*^9, 3.962079296053595*^9}},
 CellLabel->
  "During evaluation of \
In[1740]:=",ExpressionUUID->"c9180561-8d98-43d9-8858-31df271008c1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    InterpretationBox[{
      TagBox[{{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGghwtTkwLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAVQPPTA=
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.945109, 0.593901, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQj8rndgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwDgczjs
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.645957, 0.253192, 0.685109], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.285821, 0.56, 0.450773], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAsCfTgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8A2hfDQA==
             "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.7, 0.336, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQjoNzswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAaL0EEw=
             "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.491486, 0.345109, 0.8], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#3"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.71788, 0.568653, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQgcznRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwBzrCkU
             "]]}, Annotation[#, "Charting`Private`Tag#3"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.70743, 0.224, 0.542415], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAYNnswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcAzCF6IA==
             "]]}, Annotation[#, "Charting`Private`Tag#3"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.287228, 0.490217, 0.664674], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#4"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAcDLTgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8ATtqSGA==
             "]]}, Annotation[#, "Charting`Private`Tag#4"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAkNDmwLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcAR4O2dA==
             "]]}, Annotation[#, "Charting`Private`Tag#4"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#5"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5ADAwhcyHRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwDoYPfd
             "]]}, Annotation[#, "Charting`Private`Tag#5"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGhi0OTAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABVmFP4A==
             "]]}, Annotation[#, "Charting`Private`Tag#5"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#6"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQhcznRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwCrtyxU
             "]]}, Annotation[#, "Charting`Private`Tag#6"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.945109, 0.593901, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQhktzkwLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAS8XHRg=
             "]]}, Annotation[#, "Charting`Private`Tag#6"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.645957, 0.253192, 0.685109], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#7"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.285821, 0.56, 0.450773], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQhoFzswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwASAqDDw=
             "]]}, Annotation[#, "Charting`Private`Tag#7"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.7, 0.336, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQj0dzowLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAecTJQQ=
             "]]}, Annotation[#, "Charting`Private`Tag#7"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.491486, 0.345109, 0.8], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#8"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.71788, 0.568653, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQhoFzswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwASAqDDw=
             "]]}, Annotation[#, "Charting`Private`Tag#8"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.70743, 0.224, 0.542415], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGghM6nRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwCqalls
             "]]}, Annotation[#, "Charting`Private`Tag#8"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.287228, 0.490217, 0.664674], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#9"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAoFPswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcAIqKoCA==
             "]]}, Annotation[#, "Charting`Private`Tag#9"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAMLXTgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8AwkGOCA==
             "]]}, Annotation[#, "Charting`Private`Tag#9"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#10"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAoFPswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcAIqKoCA==
             "]]}, Annotation[#, "Charting`Private`Tag#10"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5ADAwjM6HRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwAN1/L9
             "]]}, Annotation[#, "Charting`Private`Tag#10"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#11"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGgjoFTswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAeNyQKQ=
             "]]}, Annotation[#, "Charting`Private`Tag#11"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.945109, 0.593901, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGgjM6nRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwBGd1sM
             "]]}, Annotation[#, "Charting`Private`Tag#11"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.645957, 0.253192, 0.685109], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#12"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.285821, 0.56, 0.450773], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGgjoFTswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAeNyQKQ=
             "]]}, Annotation[#, "Charting`Private`Tag#12"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.7, 0.336, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAMKfTgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8A05fDQA==
             "]]}, Annotation[#, "Charting`Private`Tag#12"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.491486, 0.345109, 0.8], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#13"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.71788, 0.568653, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5ADAwgYFDswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAfjR2WU=
             "]]}, Annotation[#, "Charting`Private`Tag#13"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.70743, 0.224, 0.542415], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGgjs63FgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwD+c2L4
             "]]}, Annotation[#, "Charting`Private`Tag#13"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.287228, 0.490217, 0.664674], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#14"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5ADAwgYFDswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAfjR2WU=
             "]]}, Annotation[#, "Charting`Private`Tag#14"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAcKDHgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8Ai6LLLA==
             "]]}, Annotation[#, "Charting`Private`Tag#14"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#15"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAYFjswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcA+0l1QA==
             "]]}, Annotation[#, "Charting`Private`Tag#15"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGggc6nFgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwBMgWPI
             "]]}, Annotation[#, "Charting`Private`Tag#15"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#16"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAYFjswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcA+0l1QA==
             "]]}, Annotation[#, "Charting`Private`Tag#16"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.945109, 0.593901, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5ADAwgc6XFgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwBh4PyJ
             "]]}, Annotation[#, "Charting`Private`Tag#16"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.645957, 0.253192, 0.685109], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#17"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.285821, 0.56, 0.450773], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAYFjswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcA+0l1QA==
             "]]}, Annotation[#, "Charting`Private`Tag#17"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.7, 0.336, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAcLTHgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8AZFiYZA==
             "]]}, Annotation[#, "Charting`Private`Tag#17"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.491486, 0.345109, 0.8], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#18"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.71788, 0.568653, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAYFjswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcA+0l1QA==
             "]]}, Annotation[#, "Charting`Private`Tag#18"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.70743, 0.224, 0.542415], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQgc73FgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwAlNzEA
             "]]}, Annotation[#, "Charting`Private`Tag#18"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.287228, 0.490217, 0.664674], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#19"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRgUOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABvCgN3A==
             "]]}, Annotation[#, "Charting`Private`Tag#19"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAcKLHgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8AJ6/MzA==
             "]]}, Annotation[#, "Charting`Private`Tag#19"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#20"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRgUOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABvCgN3A==
             "]]}, Annotation[#, "Charting`Private`Tag#20"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[
             0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAcLLHgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8AsleZNA==
             "]]}, Annotation[#, "Charting`Private`Tag#20"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
             "]]}, Annotation[#, "Charting`Private`Tag#21"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRgUOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABvCgN3A==
             "]]}, Annotation[#, "Charting`Private`Tag#21"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.945109, 0.593901, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQic7nFgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwBzNjHQ
             "]]}, Annotation[#, "Charting`Private`Tag#21"]& ]}}, {}}, {
       "WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGghwtTkwLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAVQPPTA=
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQj8rndgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwDgczjs
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.645957, 0.253192, 0.685109], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.285821, 0.56, 0.450773], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAsCfTgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8A2hfDQA==
                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.7, 0.336, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQjoNzswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAaL0EEw=
                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.491486, 0.345109, 0.8], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#3"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.71788, 0.568653, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQgcznRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwBzrCkU
                "]]}, "Charting`Private`Tag#3"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.70743, 0.224, 0.542415], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAYNnswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcAzCF6IA==
                "]]}, "Charting`Private`Tag#3"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.287228, 0.490217, 0.664674], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#4"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAcDLTgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8ATtqSGA==
                "]]}, "Charting`Private`Tag#4"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAkNDmwLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcAR4O2dA==
                "]]}, "Charting`Private`Tag#4"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#5"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5ADAwhcyHRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwDoYPfd
                "]]}, "Charting`Private`Tag#5"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
                
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGhi0OTAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABVmFP4A==
                "]]}, "Charting`Private`Tag#5"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#6"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQhcznRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwCrtyxU
                "]]}, "Charting`Private`Tag#6"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQhktzkwLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAS8XHRg=
                "]]}, "Charting`Private`Tag#6"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.645957, 0.253192, 0.685109], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#7"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.285821, 0.56, 0.450773], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQhoFzswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwASAqDDw=
                "]]}, "Charting`Private`Tag#7"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.7, 0.336, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQj0dzowLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAecTJQQ=
                "]]}, "Charting`Private`Tag#7"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.491486, 0.345109, 0.8], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#8"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.71788, 0.568653, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQhoFzswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwASAqDDw=
                "]]}, "Charting`Private`Tag#8"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.70743, 0.224, 0.542415], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGghM6nRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwCqalls
                "]]}, "Charting`Private`Tag#8"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.287228, 0.490217, 0.664674], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#9"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAoFPswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcAIqKoCA==
                "]]}, "Charting`Private`Tag#9"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAMLXTgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8AwkGOCA==
                "]]}, "Charting`Private`Tag#9"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#10"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAoFPswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcAIqKoCA==
                "]]}, "Charting`Private`Tag#10"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
                
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5ADAwjM6HRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwAN1/L9
                "]]}, "Charting`Private`Tag#10"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#11"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGgjoFTswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAeNyQKQ=
                "]]}, "Charting`Private`Tag#11"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGgjM6nRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwBGd1sM
                "]]}, "Charting`Private`Tag#11"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.645957, 0.253192, 0.685109], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#12"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.285821, 0.56, 0.450773], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGgjoFTswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAeNyQKQ=
                "]]}, "Charting`Private`Tag#12"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.7, 0.336, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAMKfTgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8A05fDQA==
                "]]}, "Charting`Private`Tag#12"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.491486, 0.345109, 0.8], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#13"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.71788, 0.568653, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5ADAwgYFDswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAfjR2WU=
                "]]}, "Charting`Private`Tag#13"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.70743, 0.224, 0.542415], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGgjs63FgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwD+c2L4
                "]]}, "Charting`Private`Tag#13"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.287228, 0.490217, 0.664674], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#14"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5ADAwgYFDswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAfjR2WU=
                "]]}, "Charting`Private`Tag#14"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAcKDHgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8Ai6LLLA==
                "]]}, "Charting`Private`Tag#14"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#15"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAYFjswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcA+0l1QA==
                "]]}, "Charting`Private`Tag#15"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
                
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGggc6nFgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwBMgWPI
                "]]}, "Charting`Private`Tag#15"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#16"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAYFjswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcA+0l1QA==
                "]]}, "Charting`Private`Tag#16"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5ADAwgc6XFgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwBh4PyJ
                "]]}, "Charting`Private`Tag#16"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.645957, 0.253192, 0.685109], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#17"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.285821, 0.56, 0.450773], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAYFjswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcA+0l1QA==
                "]]}, "Charting`Private`Tag#17"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.7, 0.336, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAcLTHgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8AZFiYZA==
                "]]}, "Charting`Private`Tag#17"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.491486, 0.345109, 0.8], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#18"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.71788, 0.568653, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAYFjswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcA+0l1QA==
                "]]}, "Charting`Private`Tag#18"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.70743, 0.224, 0.542415], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQgc73FgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwAlNzEA
                "]]}, "Charting`Private`Tag#18"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.287228, 0.490217, 0.664674], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#19"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRgUOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABvCgN3A==
                "]]}, "Charting`Private`Tag#19"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAcKLHgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8AJ6/MzA==
                "]]}, "Charting`Private`Tag#19"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#20"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRgUOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABvCgN3A==
                "]]}, "Charting`Private`Tag#20"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[
                0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
                
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAcLLHgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8AsleZNA==
                "]]}, "Charting`Private`Tag#20"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
                "]]}, "Charting`Private`Tag#21"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRgUOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABvCgN3A==
                "]]}, "Charting`Private`Tag#21"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQic7nFgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwBzNjHQ
                "]]}, "Charting`Private`Tag#21"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|"PanelPlotLayout" -> <||>, "PlotRange" -> {{
                Log[96], 
                Log[3176]}, {0., 921.4}}, 
             "Frame" -> {{True, True}, {True, True}}, 
             "AxesOrigin" -> {4.564348191467846, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
             "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[
                0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
                
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[
                0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.70743, 0.224, 0.542415], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.7, 0.336, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[
                0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
                
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[
                0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.70743, 0.224, 0.542415], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.7, 0.336, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[
                0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
                
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[
                0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.70743, 0.224, 0.542415], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.7, 0.336, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[
                0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
                
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[
                0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.70743, 0.224, 0.542415], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.7, 0.336, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Exp[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Log, Exp}, {Identity, Identity}}|>, 
             "Primitives" -> {}, "GCFlag" -> False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|"PanelPlotLayout" -> <||>, "PlotRange" -> {{
               Log[96], 
               Log[3176]}, {0., 921.4}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {4.564348191467846, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
            "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.945109, 0.593901, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[
               0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[
               0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.70743, 0.224, 0.542415], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.7, 0.336, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.945109, 0.593901, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[
               0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[
               0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.70743, 0.224, 0.542415], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.7, 0.336, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.945109, 0.593901, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[
               0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[
               0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.70743, 0.224, 0.542415], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.7, 0.336, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.945109, 0.593901, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[
               0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[
               0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.70743, 0.224, 0.542415], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.7, 0.336, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.945109, 0.593901, 0.], 
               CapForm["Butt"], 
               AbsoluteThickness[1.6]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Exp[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Log, Exp}, {Identity, Identity}}|>, 
            "Primitives" -> {}, "GCFlag" -> False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>]], Selectable -> False]}, 
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.365248, 0.427802, 0.758297], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGghwtTkwLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAVQPPTA=
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQj8rndgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwDgczjs
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.645957, 0.253192, 0.685109], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.285821, 0.56, 0.450773], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAsCfTgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8A2hfDQA==
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.7, 0.336, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQjoNzswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAaL0EEw=
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.491486, 0.345109, 0.8], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#3"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.71788, 0.568653, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQgcznRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwBzrCkU
            "]]}, "Charting`Private`Tag#3"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.70743, 0.224, 0.542415], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAYNnswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcAzCF6IA==
            "]]}, "Charting`Private`Tag#3"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.287228, 0.490217, 0.664674], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#4"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAcDLTgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8ATtqSGA==
            "]]}, "Charting`Private`Tag#4"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAkNDmwLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcAR4O2dA==
            "]]}, "Charting`Private`Tag#4"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#5"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5ADAwhcyHRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwDoYPfd
            "]]}, "Charting`Private`Tag#5"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGhi0OTAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABVmFP4A==
            "]]}, "Charting`Private`Tag#5"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#6"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.365248, 0.427802, 0.758297], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQhcznRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwCrtyxU
            "]]}, "Charting`Private`Tag#6"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQhktzkwLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAS8XHRg=
            "]]}, "Charting`Private`Tag#6"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.645957, 0.253192, 0.685109], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#7"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.285821, 0.56, 0.450773], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQhoFzswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwASAqDDw=
            "]]}, "Charting`Private`Tag#7"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.7, 0.336, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQj0dzowLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAecTJQQ=
            "]]}, "Charting`Private`Tag#7"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.491486, 0.345109, 0.8], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#8"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.71788, 0.568653, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQhoFzswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwASAqDDw=
            "]]}, "Charting`Private`Tag#8"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.70743, 0.224, 0.542415], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGghM6nRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwCqalls
            "]]}, "Charting`Private`Tag#8"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.287228, 0.490217, 0.664674], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#9"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAoFPswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcAIqKoCA==
            "]]}, "Charting`Private`Tag#9"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAMLXTgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8AwkGOCA==
            "]]}, "Charting`Private`Tag#9"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#10"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAoFPswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcAIqKoCA==
            "]]}, "Charting`Private`Tag#10"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5ADAwjM6HRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwAN1/L9
            "]]}, "Charting`Private`Tag#10"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#11"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.365248, 0.427802, 0.758297], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGgjoFTswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAeNyQKQ=
            "]]}, "Charting`Private`Tag#11"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGgjM6nRgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwBGd1sM
            "]]}, "Charting`Private`Tag#11"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.645957, 0.253192, 0.685109], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#12"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.285821, 0.56, 0.450773], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGgjoFTswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAeNyQKQ=
            "]]}, "Charting`Private`Tag#12"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.7, 0.336, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAMKfTgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8A05fDQA==
            "]]}, "Charting`Private`Tag#12"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.491486, 0.345109, 0.8], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#13"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.71788, 0.568653, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5ADAwgYFDswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAfjR2WU=
            "]]}, "Charting`Private`Tag#13"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.70743, 0.224, 0.542415], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGgjs63FgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwD+c2L4
            "]]}, "Charting`Private`Tag#13"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.287228, 0.490217, 0.664674], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#14"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5ADAwgYFDswLQrdyJeK4P+4fOO+RQeC
35J/d1X5FQT/Qsq63yukheF89eCYUyWJCL58JQe79loE//qPhpOXPyP4Bhu+
/0xzEIHzpyR4r5jSjeDvzMq+s+Uigl+3prNuv6wonM/iUbJsTwqCP/WOtU/I
KgT/2ArGhGtfEfwd5yb/9LIRg/O9dFQYV3Ug+M+bJrYtvozguxqfntgvKQ7n
O0szc6elIvhMsexc+msQ/MRrnOWPfiD4pz1eJhq4SMD530SmXiroQvAPSthv
nH0Nwfct2yq6U1YSzn9yhuNHQTKCLx0d5SG8HsEXdq6QW/EVwV+dNCVJ3UkK
zvev7lVx7EXwN78NyvG9jODvmC6m5CIvDefXzl4Wq5uG4PvOEBbfuBrB33em
zk7+O4L/Pmrb63pbGYR/FN6wne5E8IMd3i3nuIjgf4g4e+yBmCycr7dyVfDi
JARfJzgkLWIlgn/a5M+z718R/FL+xqeGjnJw/n3nS5lx7Qj+q/WKMaWXEfyt
pbZX6qTk4fweE7NTSgkIPrO2rt7G1Qi+dfUHcaNPCP6W48Y8x3gUEO4JzOcp
VkDwAfjR2WU=
            "]]}, "Charting`Private`Tag#14"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAcKDHgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8Ai6LLLA==
            "]]}, "Charting`Private`Tag#14"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#15"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAYFjswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcA+0l1QA==
            "]]}, "Charting`Private`Tag#15"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5BDGggc6nFgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwBMgWPI
            "]]}, "Charting`Private`Tag#15"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#16"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.365248, 0.427802, 0.758297], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAYFjswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcA+0l1QA==
            "]]}, "Charting`Private`Tag#16"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5ADAwgc6XFgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwBh4PyJ
            "]]}, "Charting`Private`Tag#16"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.645957, 0.253192, 0.685109], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#17"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.285821, 0.56, 0.450773], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAYFjswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcA+0l1QA==
            "]]}, "Charting`Private`Tag#17"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.7, 0.336, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAcLTHgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8AZFiYZA==
            "]]}, "Charting`Private`Tag#17"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.491486, 0.345109, 0.8], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#18"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.71788, 0.568653, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAYFjswLQodCNfKoL/4/KN+xYd
CH5L/t1V5VcQ/Asp636vkBaG89WDY06VJCL48pUc7NprEfzrPxpOXv6M4Bts
+P4zzUEEzp+S4L1iSjeCvzMr+86Wiwh+3ZrOuv2yonA+i0fJsj0pCP7UO9Y+
IasQ/GMrGBOufUXwd5yb/NPLRgzO99JRYVzVgeA/b5rYtvgygu9qfHpiv6Q4
nO8szcydlorgM8Wyc+mvQfATr3GWP/qB4J/2eJlo4CIB538TmXqpoAvBPyhh
v3H2NQTft2yr6E5ZSTj/yRmOHwXJCL50dJSH8HoEX9i5Qm7FVwR/ddKUJHUn
KTjfv7pXxbEXwd/8NijH9zKCv2O6mJKLvDScXzt7WaxuGoLvO0NYfONqBH/f
mTo7+e8I/vuoba/rbWUQ/lF4w3a6E8EPdni3nOMigv8h4uyxB2KycL7eylXB
i5MQfJ3gkLSIlQj+aZM/z75/RfBL+RufGjrKwfn3nS9lxrUj+K/WK8aUXkbw
t5baXqmTkofze0zMTiklIPjM2rp6G1cj+NbVH8SNPiH4W44b8xzjUUC4JzCf
p1gBwQcA+0l1QA==
            "]]}, "Charting`Private`Tag#18"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.70743, 0.224, 0.542415], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQgc73FgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwAlNzEA
            "]]}, "Charting`Private`Tag#18"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.287228, 0.490217, 0.664674], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#19"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRgUOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABvCgN3A==
            "]]}, "Charting`Private`Tag#19"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DD2TNAcKLHgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8AJ6/MzA==
            "]]}, "Charting`Private`Tag#19"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#20"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRgUOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABvCgN3A==
            "]]}, "Charting`Private`Tag#20"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[
            0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5DDrJlAcLLHgWlR6Ea+VAT/x+Ub9y06
EPyW/Luryq8g+BdS1v1eIS0M56sHx5wqSUTw5Ss52LXXIvjXfzScvPwZwTfY
8P1nmoMInD8lwXvFlG4Ef2dW9p0tFxH8ujWddftlReF8Fo+SZXtSEPypd6x9
QlYh+MdWMCZc+4rg7zg3+aeXjRic76WjwriqA8F/3jSxbfFlBN/V+PTEfklx
ON9Zmpk7LRXBZ4pl59Jfg+AnXuMsf/QDwT/t8TLRwEUCzv8mMvVSQReCf1DC
fuPsawi+b9lW0Z2yknD+kzMcPwqSEXzp6CgP4fUIvrBzhdyKrwj+6qQpSepO
UnC+f3WvimMvgr/5bVCO72UEf8d0MSUXeWk4v3b2sljdNATfd4aw+MbVCP6+
M3V28t8R/PdR217X28og/KPwhu10J4If7PBuOcdFBP9DxNljD8Rk4Xy9lauC
Fych+DrBIWkRKxH80yZ/nn3/iuCX8jc+NXSUg/PvO1/KjGtH8F+tV4wpvYzg
by21vVInJQ/n95iYnVJKQPCZtXX1Nq5G8K2rP4gbfULwtxw35jnGo4BwT2A+
T7ECgg8AsleZNA==
            "]]}, "Charting`Private`Tag#20"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRjEOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABOi4JzA==
            "]]}, "Charting`Private`Tag#21"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.365248, 0.427802, 0.758297], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMRgUOzAtCt3Il4rg/7h8475FB4Lf
kn93VfkVBP9CyrrfK6SF4Xz14JhTJYkIvnwlB7v2WgT/+o+Gk5c/I/gGG77/
THMQgfOnJHivmNKN4O/Myr6z5SKCX7ems26/rCicz+JRsmxPCoI/9Y61T8gq
BP/YCsaEa18R/B3nJv/0shGD8710VBhXdSD4z5smti2+jOC7Gp+e2C8pDuc7
SzNzp6Ui+Eyx7Fz6axD8xGuc5Y9+IPinPV4mGrhIwPnfRKZeKuhC8A9K2G+c
fQ3B9y3bKrpTVhLOf3KG40dBMoIvHR3lIbwewRd2rpBb8RXBX500JUndSQrO
96/uVXHsRfA3vw3K8b2M4O+YLqbkIi8N59fOXharm4bg+84QFt+4GsHfd6bO
Tv47gv8+atvrelsZhH8U3rCd7kTwgx3eLee4iOB/iDh77IGYLJyvt3JV8OIk
BF8nOCQtYiWCf9rkz7PvXxH8Uv7Gp4aOcnD+fedLmXHtCP6r9YoxpZcR/K2l
tlfqpOTh/B4Ts1NKCQg+s7au3sbVCL519Qdxo08I/pbjxjzHeBQQ7gnM5ylW
QPABvCgN3A==
            "]]}, "Charting`Private`Tag#21"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzVtwqemJo5CDMQic7nFgWhS6kS8Vwf9x+cZ9iw4E
vyX/7qryKwj+hZR1v1dIC8P56sExp0oSEXz5Sg527bUI/vUfDScvf0bwDTZ8
/5nmIALnT0nwXjGlG8HfmZV9Z8tFBL9uTWfdfllROJ/Fo2TZnhQEf+oda5+Q
VQj+sRWMCde+Ivg7zk3+6WUjBud76agwrupA8J83TWxbfBnBdzU+PbFfUhzO
d5Zm5k5LRfCZYtm59Ncg+InXOMsf/UDwT3u8TDRwkYDzv4lMvVTQheAflLDf
OPsagu9btlV0p6wknP/kDMePgmQEXzo6ykN4PYIv7Fwht+Irgr86aUqSupMU
nO9f3avi2Ivgb34blON7GcHfMV1MyUVeGs6vnb0sVjcNwfedISy+cTWCv+9M
nZ38dwT/fdS21/W2Mgj/KLxhO92J4Ac7vFvOcRHB/xBx9tgDMVk4X2/lquDF
SQi+TnBIWsRKBP+0yZ9n378i+KX8jU8NHeXg/PvOlzLj2hH8V+sVY0ovI/hb
S22v1EnJw/k9JmanlBIQfGZtXb2NqxF86+oP4kafEPwtx415jvEoINwTmM9T
rIDgAwBzNjHQ
            "]]}, "Charting`Private`Tag#21"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|"PanelPlotLayout" -> <||>, "PlotRange" -> {{
            Log[96], 
            Log[3176]}, {0., 921.4}}, "Frame" -> {{True, True}, {True, True}},
          "AxesOrigin" -> {4.564348191467846, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
         "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
         GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[
            0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[
            0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.70743, 0.224, 0.542415], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.7, 0.336, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[
            0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[
            0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.70743, 0.224, 0.542415], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.7, 0.336, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[
            0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[
            0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.70743, 0.224, 0.542415], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.7, 0.336, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[
            0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[
            0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.70743, 0.224, 0.542415], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.7, 0.336, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Exp[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Log, Exp}, {Identity, Identity}}|>, 
         "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], {
    DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        MachinePrecision, RotateLabel -> 0], Automatic}, 
     AxesOrigin -> {4.564348191467846, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         MachinePrecision, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {{}, {0}}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, 
       "ClippingRange" -> {{{4.564348262876604, 8.063377750958258}, {124.8, 
        921.4}}, {{4.564348262876604, 8.063377750958258}, {124.8, 921.4}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox[
        TagBox["\"Total servers\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Latency (ns)\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {4.564348191467836, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> NCache[{{
         Log[96], 
         Log[3176]}, {0., 921.4}}, {{4.564348191467836, 8.063377822367027}, {
       0., 921.4}}], PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Min\"", "\"Avg\"", "\"Max\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.365248, 0.427802, 0.758297]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.945109, 0.593901, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.962079247327404*^9, 3.9620792961347713`*^9}},
 CellLabel->
  "During evaluation of \
In[1740]:=",ExpressionUUID->"72b8f456-35a0-4735-9ea3-887b4d4eec60"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{{}, {}, 
         TagBox[{
           RGBColor[0.9, 0.36, 0.054], 
           PointSize[0.012833333333333334`], 
           Thickness[Large], 
           CapForm["Butt"], 
           
           LineBox[{{1., 680.}, {2., 8.5}, {3., 17.}, {4., 25.5}, {5., 
            34.}}]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[{
           RGBColor[0.365248, 0.427802, 0.758297], 
           PointSize[0.012833333333333334`], 
           Thickness[Large], 
           CapForm["Butt"], 
           LineBox[{{1., 720.}, {2., 9.}, {3., 18.}, {4., 27.}, {5., 36.}}]}, 
          Annotation[#, "Charting`Private`Tag#2"]& ], 
         TagBox[{
           RGBColor[0.945109, 0.593901, 0.], 
           PointSize[0.012833333333333334`], 
           Thickness[Large], 
           CapForm["Butt"], 
           
           LineBox[{{1., 760.}, {2., 9.5}, {3., 19.}, {4., 28.5}, {5., 
            38.}}]}, Annotation[#, "Charting`Private`Tag#3"]& ]}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large]], 
               
               Line[{{1., 680.}, {2., 8.5}, {3., 17.}, {4., 25.5}, {5., 
                34.}}]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large]], 
               Line[{{1., 720.}, {2., 9.}, {3., 18.}, {4., 27.}, {5., 36.}}]},
               "Charting`Private`Tag#2"], 
             Annotation[{
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large]], 
               
               Line[{{1., 760.}, {2., 9.5}, {3., 19.}, {4., 28.5}, {5., 
                38.}}]}, "Charting`Private`Tag#3"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 5.}, {0, 760.}}, 
              "Frame" -> {{True, True}, {True, True}}, 
              "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
              "Axes" -> {False, False}, 
              "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.945109, 0.593901, 0.], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 Thickness[Large]], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.365248, 0.427802, 0.758297], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 Thickness[Large]], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.9, 0.36, 0.054], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 Thickness[Large]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 5.}, {0, 760.}}, 
             "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0},
              "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False},
              "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large]], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large]], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>], 
         ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
          4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
        False]}, 
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            Thickness[Large]], 
           Line[{{1., 680.}, {2., 8.5}, {3., 17.}, {4., 25.5}, {5., 34.}}]}, 
          "Charting`Private`Tag#1"], 
         Annotation[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.365248, 0.427802, 0.758297], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            Thickness[Large]], 
           Line[{{1., 720.}, {2., 9.}, {3., 18.}, {4., 27.}, {5., 36.}}]}, 
          "Charting`Private`Tag#2"], 
         Annotation[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            Thickness[Large]], 
           Line[{{1., 760.}, {2., 9.5}, {3., 19.}, {4., 28.5}, {5., 38.}}]}, 
          "Charting`Private`Tag#3"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 5.}, {0, 760.}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.945109, 0.593901, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], 
             Thickness[Large]], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], 
             Thickness[Large]], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], 
             Thickness[Large]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
    AxesLabel -> {
      FormBox[
       TagBox["\"Total servers\"", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["\"Throughput (Tb/s)\"", HoldForm], TraditionalForm]}, 
    AxesOrigin -> {0., 0}, DisplayFunction -> Identity, 
    Frame -> {{True, True}, {True, True}}, 
    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
    Method -> {
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
        Directive[
         RGBColor[0.9, 0.36, 0.054], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.365248, 0.427802, 0.758297], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.945109, 0.593901, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.645957, 0.253192, 0.685109], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.285821, 0.56, 0.450773], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.7, 0.336, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.491486, 0.345109, 0.8], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.71788, 0.568653, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.70743, 0.224, 0.542415], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.287228, 0.490217, 0.664674], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[
         0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        Directive[
         RGBColor[
         0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
      "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05],
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
      "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}}, PlotRange -> {{0., 5.}, {0, 760.}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Cellular Fabrix\"", "\"Clos 2-slice\"", "\"Clos 4-slice\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.365248, 0.427802, 0.758297]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.945109, 0.593901, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.962079247327404*^9, 3.962079296471713*^9}},
 CellLabel->
  "During evaluation of \
In[1740]:=",ExpressionUUID->"29bb234b-2d94-4b44-9f04-2d7c4ce33a86"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<GraphUtilities`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"latencyRows", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"96", ",", "124.8", ",", "705.3", ",", "511.7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"250", ",", "124.8", ",", "205.9", ",", "613.9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"404", ",", "124.8", ",", "206.1", ",", "615.2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"558", ",", "124.8", ",", "206.3", ",", "716.1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"712", ",", "124.8", ",", "206.5", ",", "716.8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"866", ",", "124.8", ",", "206.6", ",", "717.4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1020", ",", "124.8", ",", "306.7", ",", "817.9"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"1174", ",", "124.8", ",", "306.7", ",", "818.3"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"1328", ",", "124.8", ",", "306.8", ",", "818.7"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"1482", ",", "124.8", ",", "306.8", ",", "819.0"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"1636", ",", "124.8", ",", "306.9", ",", "819.3"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"1790", ",", "124.8", ",", "306.9", ",", "819.6"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"1944", ",", "124.8", ",", "307.0", ",", "919.8"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2098", ",", "124.8", ",", "307.0", ",", "920.1"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2252", ",", "124.8", ",", "307.1", ",", "920.3"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2406", ",", "124.8", ",", "307.1", ",", "920.5"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2560", ",", "124.8", ",", "307.1", ",", "920.7"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2714", ",", "124.8", ",", "307.1", ",", "920.9"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2868", ",", "124.8", ",", "307.2", ",", "921.1"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"3022", ",", "124.8", ",", "307.2", ",", "921.2"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"3176", ",", "124.8", ",", "307.2", ",", "921.4"}], "}"}]}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bandwidthRows", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"680", ",", "8.5", ",", "17", ",", "25.5", ",", "34"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"720", ",", "9.0", ",", "18", ",", "27.0", ",", "36"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"760", ",", "9.5", ",", "19", ",", "28.5", ",", "38"}], "}"}]}],
     "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"latencyDS", "=", 
   RowBox[{"Dataset", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<Servers\>\"", ",", "\"\<Min ns\>\"", ",", "\"\<Avg ns\>\"", 
           ",", "\"\<Max ns\>\""}], "}"}], ",", "#1"}], "]"}], "&"}], ")"}], "/@",
      "latencyRows"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bandwidthDS", "=", 
   RowBox[{"Dataset", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<Servers\>\"", ",", "\"\<Cellular Fabrix Tb/s\>\"", ",", 
           "\"\<2-slice Clos Tb/s\>\"", ",", "\"\<4-slice Clos Tb/s\>\"", 
           ",", "\"\<8-slice Clos Tb/s\>\""}], "}"}], ",", "#1"}], "]"}], 
       "&"}], ")"}], "/@", "bandwidthRows"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"latSeries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"latencyRows", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "k"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "2", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"latPlot", "=", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{"latSeries", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Min\>\"", ",", "\"\<Avg\>\"", ",", "\"\<Max\>\""}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Total servers\>\"", ",", "\"\<Latency (ns)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"bwSeries", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"bandwidthRows", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "k"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "2", ",", "5"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bwPlot", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"bwSeries", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Cellular Fabrix\>\"", ",", "\"\<Clos 2-slice\>\"", ",", 
        "\"\<Clos 4-slice\>\"", ",", "\"\<Clos 8-slice\>\""}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Total servers\>\"", ",", "\"\<Throughput (Tb/s)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "latencyDS", "]"}], ";", 
  RowBox[{"Print", "[", "bandwidthDS", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "latPlot", "]"}], ";", 
  RowBox[{"Print", "[", "bwPlot", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"closFan", "=", "4"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"leafs", "=", 
   SuperscriptBox["closFan", "2"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"spines", "=", 
   SuperscriptBox["closFan", "2"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"hosts", "=", 
   RowBox[{"leafs", " ", "closFan"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"hostsPerTor", "=", 
   FractionBox["hosts", "closFan"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"host", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<H\>\"", "<>", 
      RowBox[{"ToString", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "hosts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tor", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<TOR\>\"", "<>", 
      RowBox[{"ToString", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "closFan"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"leaf", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<Leaf\>\"", "<>", 
      RowBox[{"ToString", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "leafs"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"spine", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<Spine\>\"", "<>", 
      RowBox[{"ToString", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "spines"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edgesHostTor", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"host", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "\[UndirectedEdge]", 
      RowBox[{"tor", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"Quotient", "[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "hostsPerTor"}], "]"}], "+", "1"}], 
       "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "hosts"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edgesTorLeaf", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"tor", "\[LeftDoubleBracket]", "t", "\[RightDoubleBracket]"}], 
       "\[UndirectedEdge]", 
       RowBox[{
       "leaf", "\[LeftDoubleBracket]", "l", "\[RightDoubleBracket]"}]}], ",", 
      
      RowBox[{"{", 
       RowBox[{"t", ",", "closFan"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "leafs"}], "}"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edgesLeafSpine", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"leaf", "\[LeftDoubleBracket]", "l", "\[RightDoubleBracket]"}],
        "\[UndirectedEdge]", 
       RowBox[{
       "spine", "\[LeftDoubleBracket]", "s", "\[RightDoubleBracket]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "leafs"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "spines"}], "}"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"closGraph", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"host", ",", "tor", ",", "leaf", ",", "spine"}], "]"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{"edgesHostTor", ",", "edgesTorLeaf", ",", "edgesLeafSpine"}], 
      "]"}], ",", 
     RowBox[{"VertexSize", "\[Rule]", "Small"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<4-stage Clos (64 hosts)\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"meshSize", "=", "8"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meshEdges", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"v", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], " ", "meshSize"}], "+", "j"}]}], 
         "}"}], ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", "<", "meshSize"}], ",", 
            RowBox[{"{", 
             RowBox[{"v", "\[UndirectedEdge]", 
              RowBox[{"v", "+", "meshSize"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"j", "<", "meshSize"}], ",", 
            RowBox[{"{", 
             RowBox[{"v", "\[UndirectedEdge]", 
              RowBox[{"v", "+", "1"}]}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "meshSize"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "meshSize"}], "}"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"meshGraph", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      SuperscriptBox["meshSize", "2"], "]"}], ",", "meshEdges", ",", 
     RowBox[{"VertexSize", "\[Rule]", "Small"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<8\[Times]8 Mesh (64 hosts)\>\""}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"closGraph", ",", "meshGraph"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.9620800242274017`*^9, 3.9620800315575*^9}, 
   3.9620800834132338`*^9, {3.9620802880437*^9, 3.962080288158616*^9}},
 CellLabel->
  "In[2751]:=",ExpressionUUID->"ce4f6ac2-b06d-4284-92ee-a600fa45f953"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Servers" -> 96, "Min ns" -> 124.8, "Avg ns" -> 705.3, "Max ns" -> 
        511.7|>, <|
       "Servers" -> 250, "Min ns" -> 124.8, "Avg ns" -> 205.9, "Max ns" -> 
        613.9|>, <|
       "Servers" -> 404, "Min ns" -> 124.8, "Avg ns" -> 206.1, "Max ns" -> 
        615.2|>, <|
       "Servers" -> 558, "Min ns" -> 124.8, "Avg ns" -> 206.3, "Max ns" -> 
        716.1|>, <|
       "Servers" -> 712, "Min ns" -> 124.8, "Avg ns" -> 206.5, "Max ns" -> 
        716.8|>, <|
       "Servers" -> 866, "Min ns" -> 124.8, "Avg ns" -> 206.6, "Max ns" -> 
        717.4|>, <|
       "Servers" -> 1020, "Min ns" -> 124.8, "Avg ns" -> 306.7, "Max ns" -> 
        817.9|>, <|
       "Servers" -> 1174, "Min ns" -> 124.8, "Avg ns" -> 306.7, "Max ns" -> 
        818.3|>, <|
       "Servers" -> 1328, "Min ns" -> 124.8, "Avg ns" -> 306.8, "Max ns" -> 
        818.7|>, <|
       "Servers" -> 1482, "Min ns" -> 124.8, "Avg ns" -> 306.8, "Max ns" -> 
        819.|>, <|
       "Servers" -> 1636, "Min ns" -> 124.8, "Avg ns" -> 306.9, "Max ns" -> 
        819.3|>, <|
       "Servers" -> 1790, "Min ns" -> 124.8, "Avg ns" -> 306.9, "Max ns" -> 
        819.6|>, <|
       "Servers" -> 1944, "Min ns" -> 124.8, "Avg ns" -> 307., "Max ns" -> 
        919.8|>, <|
       "Servers" -> 2098, "Min ns" -> 124.8, "Avg ns" -> 307., "Max ns" -> 
        920.1|>, <|
       "Servers" -> 2252, "Min ns" -> 124.8, "Avg ns" -> 307.1, "Max ns" -> 
        920.3|>, <|
       "Servers" -> 2406, "Min ns" -> 124.8, "Avg ns" -> 307.1, "Max ns" -> 
        920.5|>, <|
       "Servers" -> 2560, "Min ns" -> 124.8, "Avg ns" -> 307.1, "Max ns" -> 
        920.7|>, <|
       "Servers" -> 2714, "Min ns" -> 124.8, "Avg ns" -> 307.1, "Max ns" -> 
        920.9|>, <|
       "Servers" -> 2868, "Min ns" -> 124.8, "Avg ns" -> 307.2, "Max ns" -> 
        921.1|>, <|
       "Servers" -> 3022, "Min ns" -> 124.8, "Avg ns" -> 307.2, "Max ns" -> 
        921.2|>, <|
       "Servers" -> 3176, "Min ns" -> 124.8, "Avg ns" -> 307.2, "Max ns" -> 
        921.4|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Servers"} -> 
        1, {All, "Min ns"} -> 1, {All, "Avg ns"} -> 1, {All, "Max ns"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Servers" -> TypeSystem`PackageScope`AtomShape[34], "Min ns" -> 
            TypeSystem`PackageScope`AtomShape[60], "Avg ns" -> 
            TypeSystem`PackageScope`AtomShape[60], "Max ns" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Servers", "Min ns", "Avg ns", "Max ns"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 21], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Servers"} -> 
        1, {All, "Min ns"} -> 1, {All, "Avg ns"} -> 1, {All, "Max ns"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Servers" -> TypeSystem`PackageScope`AtomShape[34], "Min ns" -> 
            TypeSystem`PackageScope`AtomShape[60], "Avg ns" -> 
            TypeSystem`PackageScope`AtomShape[60], "Max ns" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Servers", "Min ns", "Avg ns", "Max ns"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 21], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 4, "DataRowCount" -> 21, "DataColumnCount" -> 
     4, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Servers", 
                  Style[
                  "Servers", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Servers"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Servers"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Min ns", 
                  Style[
                  "Min ns", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Min ns"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Min ns"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Avg ns", 
                  Style[
                  "Avg ns", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Avg ns"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Avg ns"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Max ns", 
                  Style[
                  "Max ns", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Max ns"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Max ns"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["96"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["705.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["511.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["250"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["205.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["613.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["404"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["206.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["615.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["558"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["206.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["716.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["712"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["206.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["716.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["866"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["206.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["717.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1020"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["306.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["817.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1174"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["306.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["818.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1328"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["306.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["818.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1482"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["306.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["819.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1636"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["306.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["819.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1790"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["306.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["819.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1944"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["919.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2098"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["920.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["920.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2406"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["920.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2560"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["920.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2714"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["920.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2868"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["921.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3022"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["124.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Min ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["307.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Avg ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["921.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Max ns"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[21, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{299., {377.82244873046875`, 386.17755126953125`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{299., {377.82244873046875`, 386.17755126953125`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Print",
 CellChangeTimes->{{3.9620798169247313`*^9, 3.962079829769794*^9}, 
   3.9620799604706306`*^9, 3.962079991284762*^9, 3.962080032026761*^9, 
   3.962080083703001*^9, 3.962080139037788*^9, {3.962080169517462*^9, 
   3.9620801885971127`*^9}, {3.962080288526772*^9, 3.9620802906845922`*^9}},
 CellLabel->
  "During evaluation of \
In[2751]:=",ExpressionUUID->"b3da0d36-8009-4bba-b754-a3113fd8c838"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Servers" -> 680, "Cellular Fabrix Tb/s" -> 8.5, "2-slice Clos Tb/s" -> 
        17, "4-slice Clos Tb/s" -> 25.5, "8-slice Clos Tb/s" -> 34|>, <|
       "Servers" -> 720, "Cellular Fabrix Tb/s" -> 9., "2-slice Clos Tb/s" -> 
        18, "4-slice Clos Tb/s" -> 27., "8-slice Clos Tb/s" -> 36|>, <|
       "Servers" -> 760, "Cellular Fabrix Tb/s" -> 9.5, "2-slice Clos Tb/s" -> 
        19, "4-slice Clos Tb/s" -> 28.5, "8-slice Clos Tb/s" -> 38|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Servers"} -> 
        1, {All, "Cellular Fabrix Tb/s"} -> 1, {All, "2-slice Clos Tb/s"} -> 
        1, {All, "4-slice Clos Tb/s"} -> 1, {All, "8-slice Clos Tb/s"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Servers" -> TypeSystem`PackageScope`AtomShape[34], 
            "Cellular Fabrix Tb/s" -> TypeSystem`PackageScope`AtomShape[60], 
            "2-slice Clos Tb/s" -> TypeSystem`PackageScope`AtomShape[34], 
            "4-slice Clos Tb/s" -> TypeSystem`PackageScope`AtomShape[60], 
            "8-slice Clos Tb/s" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 5, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Servers", "Cellular Fabrix Tb/s", "2-slice Clos Tb/s", 
         "4-slice Clos Tb/s", "8-slice Clos Tb/s"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Servers"} -> 
        1, {All, "Cellular Fabrix Tb/s"} -> 1, {All, "2-slice Clos Tb/s"} -> 
        1, {All, "4-slice Clos Tb/s"} -> 1, {All, "8-slice Clos Tb/s"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Servers" -> TypeSystem`PackageScope`AtomShape[34], 
            "Cellular Fabrix Tb/s" -> TypeSystem`PackageScope`AtomShape[60], 
            "2-slice Clos Tb/s" -> TypeSystem`PackageScope`AtomShape[34], 
            "4-slice Clos Tb/s" -> TypeSystem`PackageScope`AtomShape[60], 
            "8-slice Clos Tb/s" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 5, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Servers", "Cellular Fabrix Tb/s", "2-slice Clos Tb/s", 
         "4-slice Clos Tb/s", "8-slice Clos Tb/s"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer]}], 3], "Path" -> {}, "DisplayedRowCount" -> 
     3, "DisplayedColumnCount" -> 5, "DataRowCount" -> 3, "DataColumnCount" -> 
     5, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Servers", 
                  Style[
                  "Servers", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Servers"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Servers"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cellular Fabrix Tb/s", 
                  Style[
                  "Cellular Fabrix Tb/s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Cellular Fabrix Tb/s"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Cellular Fabrix Tb/s"}, "ColumnHeader", True], "Mouse"],
               ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2-slice Clos Tb/s", 
                  Style[
                  "2-slice Clos Tb/s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "2-slice Clos Tb/s"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "2-slice Clos Tb/s"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["4-slice Clos Tb/s", 
                  Style[
                  "4-slice Clos Tb/s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "4-slice Clos Tb/s"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "4-slice Clos Tb/s"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["8-slice Clos Tb/s", 
                  Style[
                  "8-slice Clos Tb/s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "8-slice Clos Tb/s"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "8-slice Clos Tb/s"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["680"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Cellular Fabrix Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["2-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["4-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["8-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["720"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Cellular Fabrix Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["2-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["4-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["8-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["760"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Servers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Cellular Fabrix Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["2-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["28.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["4-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["38"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["8-slice Clos Tb/s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{610., {75.32244873046875, 83.67755126953125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{610., {75.32244873046875, 83.67755126953125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Print",
 CellChangeTimes->{{3.9620798169247313`*^9, 3.962079829769794*^9}, 
   3.9620799604706306`*^9, 3.962079991284762*^9, 3.962080032026761*^9, 
   3.962080083703001*^9, 3.962080139037788*^9, {3.962080169517462*^9, 
   3.9620801885971127`*^9}, {3.962080288526772*^9, 3.962080291792481*^9}},
 CellLabel->
  "During evaluation of \
In[2751]:=",ExpressionUUID->"068625c9-6efa-4ef3-b33b-662a95df20aa"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{{{}, {}, 
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/WMJe90TRyEHYzCId1ApvHjzp6gYnL/W49azIkYJ
OL8gru6gio8knL8hwcd8m6sUnM+yp+CGOZ80nO9RlLT34lYEf87ahofnXGXg
/ErGBzxsRxD8/ctVxRNMZOH8Y6aeEnNmIviPP2W+2/UVwW+X/GZh5yUH50fu
dLHzn4Hge234zXDjAYI/Z+ZJlikq8nB+1ZMrd6RTEPz1Xv0Rb+cj+Dfey+UV
3kDwL3RI+DCwK8D5Yduv8BUrIPgAEw9tiQ==
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/WMJe90TRyGHNBDganNQKbx486eomMPZM0CwJ9Nh
rcetZ0WMEg7GIHA406Egru6gio+kw6yZQHAy02FDgo/5NlcpBwYQuJDpwLKn
4IY5nzRE/eVMB4+ipL0Xt0L52sUOc9Y2PDznKgPnVzI+4GE7IgOxT6fYYf9y
VfEEE1k4/5ipp8ScmbIQ9+kVOzz+lPlu11cEv13ym4WdlxzEfoNih8idLnb+
MxB8rw2/GW48kIO41xBo/8yTLFNU5OH8qidX7kinIPjrvfoj3s5H8G+8l8sr
vCEPca9xscOFDgkfBnYFOD9s+xW+YgUEHwDy7oSQ
             "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
          TagBox[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.945109, 0.593901, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/WMJe90TRyEHYxD4Xe+gUnjx5k9RMQhfv9lhrcet
Z0WMEg6zZgKBZbNDQVzdQRUfSYezZ4Agoc1hQ4KP+TZXKYc0MGhzYNlTcMOc
TxqiP7vNwaMoae/FrVB+f6fDnLUND8+5ykDUT+p0qGR8wMN2RAZi/tROh/3L
VcUTTGQdGEBgRqfDMVNPiTkzZSHqZ3U6PP6U+W7XV1mI/XM6Hdolv1nYeclB
5Pf1OETudLHznyEHkT/Q4+C14TfDjQdQ+UM9DnNmnmSZoiIPMf9Ij0PVkyt3
pFPkIfYf7XFY79Uf8Xa+PMS9x3scbryXyyu8IQ8x70SPw4UOCR8GdgWI+pM9
DmHbr/AVKyhA1J/ucQAAfsyQvQ==
             "]]}, Annotation[#, "Charting`Private`Tag#3"]& ]}}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.011000000000000001`], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/WMJe90TRyEHYzCId1ApvHjzp6gYnL/W49azIkYJ
OL8gru6gio8knL8hwcd8m6sUnM+yp+CGOZ80nO9RlLT34lYEf87ahofnXGXg
/ErGBzxsRxD8/ctVxRNMZOH8Y6aeEnNmIviPP2W+2/UVwW+X/GZh5yUH50fu
dLHzn4Hge234zXDjAYI/Z+ZJlikq8nB+1ZMrd6RTEPz1Xv0Rb+cj+Dfey+UV
3kDwL3RI+DCwK8D5Yduv8BUrIPgAEw9tiQ==
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[0.011000000000000001`], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/WMJe90TRyGHNBDganNQKbx486eomMPZM0CwJ9Nh
rcetZ0WMEg7GIHA406Egru6gio+kw6yZQHAy02FDgo/5NlcpBwYQuJDpwLKn
4IY5nzRE/eVMB4+ipL0Xt0L52sUOc9Y2PDznKgPnVzI+4GE7IgOxT6fYYf9y
VfEEE1k4/5ipp8ScmbIQ9+kVOzz+lPlu11cEv13ym4WdlxzEfoNih8idLnb+
MxB8rw2/GW48kIO41xBo/8yTLFNU5OH8qidX7kinIPjrvfoj3s5H8G+8l8sr
vCEPca9xscOFDgkfBnYFOD9s+xW+YgUEHwDy7oSQ
                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[0.011000000000000001`], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/WMJe90TRyEHYxD4Xe+gUnjx5k9RMQhfv9lhrcet
Z0WMEg6zZgKBZbNDQVzdQRUfSYezZ4Agoc1hQ4KP+TZXKYc0MGhzYNlTcMOc
TxqiP7vNwaMoae/FrVB+f6fDnLUND8+5ykDUT+p0qGR8wMN2RAZi/tROh/3L
VcUTTGQdGEBgRqfDMVNPiTkzZSHqZ3U6PP6U+W7XV1mI/XM6Hdolv1nYeclB
5Pf1OETudLHznyEHkT/Q4+C14TfDjQdQ+UM9DnNmnmSZoiIPMf9Ij0PVkyt3
pFPkIfYf7XFY79Uf8Xa+PMS9x3scbryXyyu8IQ8x70SPw4UOCR8GdgWI+pM9
DmHbr/AVKyhA1J/ucQAAfsyQvQ==
                "]]}, "Charting`Private`Tag#3"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{4.417036614125302, 8.063377822367027}, {
                0, 921.4}}, "Frame" -> {{True, True}, {True, True}}, 
              "AxesOrigin" -> {4.417036614125302, 0}, 
              "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False},
               "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 PointSize[0.011000000000000001`], 
                 RGBColor[0.945109, 0.593901, 0.], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6]], 
                Directive[
                 PointSize[0.011000000000000001`], 
                 RGBColor[0.365248, 0.427802, 0.758297], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6]], 
                Directive[
                 PointSize[0.011000000000000001`], 
                 RGBColor[0.9, 0.36, 0.054], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Exp[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Log, Exp}, {Identity, Identity}}|>, 
              "Primitives" -> {}, "GCFlag" -> False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLogLinearPlot, "GroupHighlight" -> 
              False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{4.417036614125302, 8.063377822367027}, {
               0, 921.4}}, "Frame" -> {{True, True}, {True, True}}, 
             "AxesOrigin" -> {4.417036614125302, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
             "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[0.011000000000000001`], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                PointSize[0.011000000000000001`], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]], 
               Directive[
                PointSize[0.011000000000000001`], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Exp[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Log, Exp}, {Identity, Identity}}|>, 
             "Primitives" -> {}, "GCFlag" -> False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListLogLinearPlot, "GroupHighlight" -> False|>|>]],
         Selectable -> False]}, 
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.011000000000000001`], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/WMJe90TRyEHYzCId1ApvHjzp6gYnL/W49azIkYJ
OL8gru6gio8knL8hwcd8m6sUnM+yp+CGOZ80nO9RlLT34lYEf87ahofnXGXg
/ErGBzxsRxD8/ctVxRNMZOH8Y6aeEnNmIviPP2W+2/UVwW+X/GZh5yUH50fu
dLHzn4Hge234zXDjAYI/Z+ZJlikq8nB+1ZMrd6RTEPz1Xv0Rb+cj+Dfey+UV
3kDwL3RI+DCwK8D5Yduv8BUrIPgAEw9tiQ==
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.011000000000000001`], 
            RGBColor[0.365248, 0.427802, 0.758297], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/WMJe90TRyGHNBDganNQKbx486eomMPZM0CwJ9Nh
rcetZ0WMEg7GIHA406Egru6gio+kw6yZQHAy02FDgo/5NlcpBwYQuJDpwLKn
4IY5nzRE/eVMB4+ipL0Xt0L52sUOc9Y2PDznKgPnVzI+4GE7IgOxT6fYYf9y
VfEEE1k4/5ipp8ScmbIQ9+kVOzz+lPlu11cEv13ym4WdlxzEfoNih8idLnb+
MxB8rw2/GW48kIO41xBo/8yTLFNU5OH8qidX7kinIPjrvfoj3s5H8G+8l8sr
vCEPca9xscOFDgkfBnYFOD9s+xW+YgUEHwDy7oSQ
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.011000000000000001`], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/WMJe90TRyEHYxD4Xe+gUnjx5k9RMQhfv9lhrcet
Z0WMEg6zZgKBZbNDQVzdQRUfSYezZ4Agoc1hQ4KP+TZXKYc0MGhzYNlTcMOc
TxqiP7vNwaMoae/FrVB+f6fDnLUND8+5ykDUT+p0qGR8wMN2RAZi/tROh/3L
VcUTTGQdGEBgRqfDMVNPiTkzZSHqZ3U6PP6U+W7XV1mI/XM6Hdolv1nYeclB
5Pf1OETudLHznyEHkT/Q4+C14TfDjQdQ+UM9DnNmnmSZoiIPMf9Ij0PVkyt3
pFPkIfYf7XFY79Uf8Xa+PMS9x3scbryXyyu8IQ8x70SPw4UOCR8GdgWI+pM9
DmHbr/AVKyhA1J/ucQAAfsyQvQ==
            "]]}, "Charting`Private`Tag#3"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{4.417036614125302, 8.063377822367027}, {0, 921.4}},
           "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {4.417036614125302, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.945109, 0.593901, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.011000000000000001`], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Exp[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Log, Exp}, {Identity, Identity}}|>, 
          "Primitives" -> {}, "GCFlag" -> False|>, 
        "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLogLinearPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {{}, {0}}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {
       FormBox[
        TagBox["\"Total servers\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Latency (ns)\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {4.417036614125302, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {{}, {0}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.365248, 0.427802, 0.758297], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.945109, 0.593901, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.645957, 0.253192, 0.685109], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.285821, 0.56, 0.450773], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.7, 0.336, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.491486, 0.345109, 0.8], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.71788, 0.568653, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.70743, 0.224, 0.542415], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.287228, 0.490217, 0.664674], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> 
       "CurrentSet", "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
       True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{4.417036614125302, 8.063377822367027}, {0, 921.4}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Min\"", "\"Avg\"", "\"Max\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.365248, 0.427802, 0.758297]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.945109, 0.593901, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.9620798169247313`*^9, 3.962079829769794*^9}, 
   3.9620799604706306`*^9, 3.962079991284762*^9, 3.962080032026761*^9, 
   3.962080083703001*^9, 3.962080139037788*^9, {3.962080169517462*^9, 
   3.9620801885971127`*^9}, {3.962080288526772*^9, 3.962080292029943*^9}},
 CellLabel->
  "During evaluation of \
In[2751]:=",ExpressionUUID->"2d986348-978a-45c4-93ac-099522d61233"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{{{}, {}, 
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], 
             Thickness[Large]], 
            LineBox[{{680., 8.5}, {720., 9.}, {760., 9.5}}]}, 
           Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], 
             Thickness[Large]], 
            LineBox[{{680., 17.}, {720., 18.}, {760., 19.}}]}, 
           Annotation[#, "Charting`Private`Tag#2"]& ], 
          TagBox[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.945109, 0.593901, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], 
             Thickness[Large]], 
            LineBox[{{680., 25.5}, {720., 27.}, {760., 28.5}}]}, 
           Annotation[#, "Charting`Private`Tag#3"]& ], 
          TagBox[{
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.645957, 0.253192, 0.685109], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], 
             Thickness[Large]], 
            LineBox[{{680., 34.}, {720., 36.}, {760., 38.}}]}, 
           Annotation[#, "Charting`Private`Tag#4"]& ]}}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large]], 
               Line[{{680., 8.5}, {720., 9.}, {760., 9.5}}]}, 
              "Charting`Private`Tag#1"], 
             Annotation[{
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large]], 
               Line[{{680., 17.}, {720., 18.}, {760., 19.}}]}, 
              "Charting`Private`Tag#2"], 
             Annotation[{
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large]], 
               Line[{{680., 25.5}, {720., 27.}, {760., 28.5}}]}, 
              "Charting`Private`Tag#3"], 
             Annotation[{
               Hue[0.37820393249936934`, 0.6, 0.6], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.645957, 0.253192, 0.685109], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large]], 
               Line[{{680., 34.}, {720., 36.}, {760., 38.}}]}, 
              "Charting`Private`Tag#4"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{678.3333333333347, 760.}, {0, 38.}}, 
              "Frame" -> {{True, True}, {True, True}}, 
              "AxesOrigin" -> {678.3333333333347, 0}, 
              "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False},
               "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.645957, 0.253192, 0.685109], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 Thickness[Large]], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.945109, 0.593901, 0.], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 Thickness[Large]], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.365248, 0.427802, 0.758297], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 Thickness[Large]], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.9, 0.36, 0.054], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 Thickness[Large]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{678.3333333333347, 760.}, {0, 38.}}, 
             "Frame" -> {{True, True}, {True, True}}, 
             "AxesOrigin" -> {678.3333333333347, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
             "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.645957, 0.253192, 0.685109], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large]], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.945109, 0.593901, 0.], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large]], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.365248, 0.427802, 0.758297], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large]], 
               Directive[
                PointSize[0.012833333333333334`], 
                RGBColor[0.9, 0.36, 0.054], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], 
                Thickness[Large]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>]], 
        Selectable -> False]}, 
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            Thickness[Large]], 
           Line[{{680., 8.5}, {720., 9.}, {760., 9.5}}]}, 
          "Charting`Private`Tag#1"], 
         Annotation[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.365248, 0.427802, 0.758297], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            Thickness[Large]], 
           Line[{{680., 17.}, {720., 18.}, {760., 19.}}]}, 
          "Charting`Private`Tag#2"], 
         Annotation[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.945109, 0.593901, 0.], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            Thickness[Large]], 
           Line[{{680., 25.5}, {720., 27.}, {760., 28.5}}]}, 
          "Charting`Private`Tag#3"], 
         Annotation[{
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[0.012833333333333334`], 
            RGBColor[0.645957, 0.253192, 0.685109], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            Thickness[Large]], 
           Line[{{680., 34.}, {720., 36.}, {760., 38.}}]}, 
          "Charting`Private`Tag#4"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{678.3333333333347, 760.}, {0, 38.}}, 
          "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {678.3333333333347, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.645957, 0.253192, 0.685109], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], 
             Thickness[Large]], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.945109, 0.593901, 0.], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], 
             Thickness[Large]], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.365248, 0.427802, 0.758297], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], 
             Thickness[Large]], 
            Directive[
             PointSize[0.012833333333333334`], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], 
             Thickness[Large]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {
       FormBox[
        TagBox["\"Total servers\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Throughput (Tb/s)\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {678.3333333333347, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.365248, 0.427802, 0.758297], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.945109, 0.593901, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.645957, 0.253192, 0.685109], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.285821, 0.56, 0.450773], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.7, 0.336, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.491486, 0.345109, 0.8], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.71788, 0.568653, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.70743, 0.224, 0.542415], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.287228, 0.490217, 0.664674], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> 
       "CurrentSet", "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
       True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{678.3333333333347, 760.}, {0, 38.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Cellular Fabrix\"", "\"Clos 2-slice\"", "\"Clos 4-slice\"", 
       "\"Clos 8-slice\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.645957, 0.253192, 0.685109], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.645957, 0.253192, 0.685109], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.365248, 0.427802, 0.758297]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.945109, 0.593901, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.645957, 0.253192, 0.685109]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.9620798169247313`*^9, 3.962079829769794*^9}, 
   3.9620799604706306`*^9, 3.962079991284762*^9, 3.962080032026761*^9, 
   3.962080083703001*^9, 3.962080139037788*^9, {3.962080169517462*^9, 
   3.9620801885971127`*^9}, {3.962080288526772*^9, 3.962080292199813*^9}},
 CellLabel->
  "During evaluation of \
In[2751]:=",ExpressionUUID->"2dc39aa0-5288-42a0-bbdf-ba785ff18d85"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{"H1", "H2", "H3", "H4", "H5", "H6", "H7", "H8", "H9", "H10", 
            "H11", "H12", "H13", "H14", "H15", "H16", "H17", "H18", "H19", 
            "H20", "H21", "H22", "H23", "H24", "H25", "H26", "H27", "H28", 
            "H29", "H30", "H31", "H32", "H33", "H34", "H35", "H36", "H37", 
            "H38", "H39", "H40", "H41", "H42", "H43", "H44", "H45", "H46", 
            "H47", "H48", "H49", "H50", "H51", "H52", "H53", "H54", "H55", 
            "H56", "H57", "H58", "H59", "H60", "H61", "H62", "H63", "H64", 
            "TOR1", "TOR2", "TOR3", "TOR4", "Leaf1", "Leaf2", "Leaf3", 
            "Leaf4", "Leaf5", "Leaf6", "Leaf7", "Leaf8", "Leaf9", "Leaf10", 
            "Leaf11", "Leaf12", "Leaf13", "Leaf14", "Leaf15", "Leaf16", 
            "Spine1", "Spine2", "Spine3", "Spine4", "Spine5", "Spine6", 
            "Spine7", "Spine8", "Spine9", "Spine10", "Spine11", "Spine12", 
            "Spine13", "Spine14", "Spine15", "Spine16"}, {
           Null, CompressedData["
1:eJwVxdUaFkUAANCfUAFFpA0QUMqgVDARprtnu2f33lfw0f08N+dB+SeWs6fT
6d8zp9P/nwFnwTlwHnwAPgQfgQvgIrgEPgafgMvgU3AFfAauwmvwOrwBb8Jb
8Db8HH4Bv4RfwTvwLvwa3oP34QP0DfoWPUSP0GP0BD1F36Hv0Q/oR/QMPUcv
0Ev0Cv+Ef8a/4Nf4Df4V/4Z/x3/gP/Ff+C3+G7/D7zEggAIGOBBAAgU0MMAC
BzwIIIIEMiSQQgY5FFBCBTU00EIHPQwwwgQzIogihjgSSCKFNDLIIoc8Ciii
hDImmGKGORZYYoU1Nthihz0OOOKEM6lITRrSko70ZCAjmchMFrKSjRSyk4NW
tKYNbWlHezrQkU50pgtd6UYL3enBKlazhrWsYz0b2MgmNrOFrWxjhe3s4BWv
ecNb3vGeD3zkE5/5wle+8cJ3fohK1KIRrehELwYxiknMYhGr2EQRuzhkJWvZ
yFZ2speDHOUkZ7nIVW6yyF0eqlK1alSrOtWrQY1qUrNa1Ko2VdSuDl3pWje6
1Z3u9aBHPelZL3rVmy5614epTG0a05rO9GYwo5nMbBazms0Us5vDVra2jW1t
Z3s72NFOdraLXe1mi93t4SpXu8a1rnO9G9zoJje7xa1uc8Xt7vCVr33jW9/5
3g9+9JOf/eJXv/nid3+EKtShCW3oQh+GMIYpzGEJa9hCCXs4YhXr2MQ2drGP
QxzjFOe4xDVuscQ9HqlKdWpSm7rUpyGNaUpzWtKatlTSno5c5To3uc1d7vOQ
xzzlOS95zVsuec/Hf/zA56w=
            "]}, {
           ImageSize -> 300, PlotLabel -> "4-stage Clos (64 hosts)", 
            PlotTheme -> "Scientific", VertexSize -> {Small}}]]}, 
         TagBox[GraphicsGroupBox[{
            {Hue[0.0603, 0.94, 0.9], Opacity[1], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$1", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$1"],
               RowBox[{"\"H1\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H1", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$2", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$2"],
               RowBox[{"\"H2\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H2", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$3", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$3"],
               RowBox[{"\"H3\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H3", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$4", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$4"],
               RowBox[{"\"H4\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H4", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$5", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$5"],
               RowBox[{"\"H5\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H5", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$6", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$6"],
               RowBox[{"\"H6\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H6", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$7", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$7"],
               RowBox[{"\"H7\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H7", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$8", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$8"],
               RowBox[{"\"H8\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H8", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$9", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$9"],
               RowBox[{"\"H9\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H9", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$10", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$10"],
               RowBox[{"\"H10\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H10", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$11", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$11"],
               RowBox[{"\"H11\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H11", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$12", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$12"],
               RowBox[{"\"H12\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H12", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$13", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$13"],
               RowBox[{"\"H13\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H13", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$14", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$14"],
               RowBox[{"\"H14\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H14", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$15", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$15"],
               RowBox[{"\"H15\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H15", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$16", Automatic, Center], 
                  DynamicLocation["VertexID$65", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$16"],
               RowBox[{"\"H16\"", "\[UndirectedEdge]", "\"TOR1\""}]],
              Annotation[#, 
               UndirectedEdge["H16", "TOR1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$17", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$17"],
               RowBox[{"\"H17\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H17", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$18", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$18"],
               RowBox[{"\"H18\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H18", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$19", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$19"],
               RowBox[{"\"H19\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H19", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$20", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$20"],
               RowBox[{"\"H20\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H20", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$21", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$21"],
               RowBox[{"\"H21\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H21", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$22", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$22"],
               RowBox[{"\"H22\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H22", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$23", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$23"],
               RowBox[{"\"H23\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H23", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$24", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$24"],
               RowBox[{"\"H24\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H24", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$25", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$25"],
               RowBox[{"\"H25\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H25", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$26", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$26"],
               RowBox[{"\"H26\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H26", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$27", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$27"],
               RowBox[{"\"H27\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H27", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$28", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$28"],
               RowBox[{"\"H28\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H28", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$29", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$29"],
               RowBox[{"\"H29\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H29", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$30", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$30"],
               RowBox[{"\"H30\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H30", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$31", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$31"],
               RowBox[{"\"H31\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H31", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$32", Automatic, Center], 
                  DynamicLocation["VertexID$66", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$32"],
               RowBox[{"\"H32\"", "\[UndirectedEdge]", "\"TOR2\""}]],
              Annotation[#, 
               UndirectedEdge["H32", "TOR2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$33", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$33"],
               RowBox[{"\"H33\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H33", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$34", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$34"],
               RowBox[{"\"H34\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H34", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$35", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$35"],
               RowBox[{"\"H35\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H35", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$36", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$36"],
               RowBox[{"\"H36\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H36", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$37", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$37"],
               RowBox[{"\"H37\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H37", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$38", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$38"],
               RowBox[{"\"H38\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H38", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$39", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$39"],
               RowBox[{"\"H39\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H39", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$40", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$40"],
               RowBox[{"\"H40\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H40", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$41", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$41"],
               RowBox[{"\"H41\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H41", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$42", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$42"],
               RowBox[{"\"H42\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H42", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$43", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$43"],
               RowBox[{"\"H43\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H43", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$44", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$44"],
               RowBox[{"\"H44\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H44", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$45", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$45"],
               RowBox[{"\"H45\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H45", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$46", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$46"],
               RowBox[{"\"H46\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H46", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$47", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$47"],
               RowBox[{"\"H47\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H47", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$48", Automatic, Center], 
                  DynamicLocation["VertexID$67", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$48"],
               RowBox[{"\"H48\"", "\[UndirectedEdge]", "\"TOR3\""}]],
              Annotation[#, 
               UndirectedEdge["H48", "TOR3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$49", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$49"],
               RowBox[{"\"H49\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H49", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$50", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$50"],
               RowBox[{"\"H50\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H50", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$51", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$51"],
               RowBox[{"\"H51\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H51", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$52", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$52"],
               RowBox[{"\"H52\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H52", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$53", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$53"],
               RowBox[{"\"H53\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H53", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$54", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$54"],
               RowBox[{"\"H54\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H54", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$55", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$55"],
               RowBox[{"\"H55\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H55", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$56", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$56"],
               RowBox[{"\"H56\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H56", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$57", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$57"],
               RowBox[{"\"H57\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H57", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$58", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$58"],
               RowBox[{"\"H58\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H58", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$59", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$59"],
               RowBox[{"\"H59\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H59", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$60", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$60"],
               RowBox[{"\"H60\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H60", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$61", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$61"],
               RowBox[{"\"H61\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H61", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$62", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$62"],
               RowBox[{"\"H62\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H62", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$63", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$63"],
               RowBox[{"\"H63\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H63", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$64", Automatic, Center], 
                  DynamicLocation["VertexID$68", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$64"],
               RowBox[{"\"H64\"", "\[UndirectedEdge]", "\"TOR4\""}]],
              Annotation[#, 
               UndirectedEdge["H64", "TOR4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$69", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$65"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf1\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$70", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$66"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf2\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$71", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$67"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf3\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$72", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$68"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf4\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$73", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$69"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf5\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$74", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$70"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf6\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$75", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$71"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf7\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$76", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$72"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf8\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$77", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$73"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf9\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$78", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$74"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf10\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$79", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$75"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf11\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$80", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$76"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf12\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$81", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$77"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf13\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$82", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$78"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf14\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$83", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$79"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf15\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$65", Automatic, Center], 
                  DynamicLocation["VertexID$84", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$80"],
               RowBox[{"\"TOR1\"", "\[UndirectedEdge]", "\"Leaf16\""}]],
              Annotation[#, 
               UndirectedEdge["TOR1", "Leaf16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$69", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$81"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf1\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$70", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$82"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf2\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$71", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$83"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf3\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$72", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$84"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf4\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$73", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$85"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf5\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$74", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$86"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf6\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$75", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$87"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf7\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$76", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$88"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf8\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$77", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$89"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf9\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$78", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$90"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf10\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$79", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$91"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf11\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$80", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$92"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf12\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$81", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$93"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf13\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$82", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$94"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf14\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$83", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$95"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf15\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$66", Automatic, Center], 
                  DynamicLocation["VertexID$84", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$96"],
               RowBox[{"\"TOR2\"", "\[UndirectedEdge]", "\"Leaf16\""}]],
              Annotation[#, 
               UndirectedEdge["TOR2", "Leaf16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$69", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$97"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf1\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$70", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$98"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf2\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$71", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$99"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf3\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$72", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$100"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf4\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$73", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$101"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf5\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$74", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$102"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf6\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$75", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$103"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf7\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$76", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$104"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf8\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$77", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$105"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf9\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$78", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$106"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf10\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$79", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$107"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf11\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$80", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$108"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf12\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$81", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$109"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf13\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$82", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$110"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf14\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$83", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$111"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf15\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$67", Automatic, Center], 
                  DynamicLocation["VertexID$84", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$112"],
               RowBox[{"\"TOR3\"", "\[UndirectedEdge]", "\"Leaf16\""}]],
              Annotation[#, 
               UndirectedEdge["TOR3", "Leaf16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$69", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$113"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf1\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$70", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$114"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf2\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$71", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$115"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf3\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$72", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$116"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf4\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$73", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$117"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf5\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$74", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$118"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf6\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$75", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$119"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf7\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$76", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$120"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf8\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$77", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$121"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf9\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$78", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$122"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf10\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$79", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$123"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf11\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$80", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$124"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf12\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$81", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$125"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf13\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$82", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$126"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf14\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$83", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$127"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf15\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$68", Automatic, Center], 
                  DynamicLocation["VertexID$84", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$128"],
               RowBox[{"\"TOR4\"", "\[UndirectedEdge]", "\"Leaf16\""}]],
              Annotation[#, 
               UndirectedEdge["TOR4", "Leaf16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$129"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$130"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$131"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$132"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$133"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$134"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$135"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$136"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$137"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$138"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$139"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$140"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$141"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$142"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$143"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$69", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$144"],
               RowBox[{"\"Leaf1\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf1", "Spine16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$145"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$146"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$147"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$148"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$149"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$150"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$151"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$152"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$153"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$154"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$155"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$156"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$157"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$158"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$159"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$70", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$160"],
               RowBox[{"\"Leaf2\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf2", "Spine16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$161"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$162"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$163"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$164"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$165"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$166"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$167"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$168"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$169"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$170"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$171"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$172"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$173"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$174"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$175"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$71", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$176"],
               RowBox[{"\"Leaf3\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf3", "Spine16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$177"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$178"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$179"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$180"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$181"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$182"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$183"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$184"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$185"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$186"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$187"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$188"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$189"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$190"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$191"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$72", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$192"],
               RowBox[{"\"Leaf4\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf4", "Spine16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$193"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$194"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$195"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$196"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$197"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$198"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$199"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$200"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$201"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$202"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$203"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$204"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$205"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$206"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$207"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$73", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$208"],
               RowBox[{"\"Leaf5\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf5", "Spine16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$209"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$210"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$211"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$212"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$213"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$214"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$215"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$216"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$217"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$218"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$219"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$220"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$221"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$222"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$223"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$74", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$224"],
               RowBox[{"\"Leaf6\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf6", "Spine16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$225"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$226"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$227"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$228"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$229"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$230"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$231"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$232"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$233"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$234"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$235"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$236"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$237"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$238"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$239"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$75", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$240"],
               RowBox[{"\"Leaf7\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf7", "Spine16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$241"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$242"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$243"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$244"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$245"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$246"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$247"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$248"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$249"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$250"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$251"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$252"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$253"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$254"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$255"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$76", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$256"],
               RowBox[{"\"Leaf8\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf8", "Spine16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$257"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$258"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$259"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$260"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$261"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$262"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$263"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$264"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$265"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$266"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$267"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$268"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$269"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$270"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$271"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$77", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$272"],
               RowBox[{"\"Leaf9\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf9", "Spine16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$273"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$274"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$275"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$276"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$277"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$278"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$279"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$280"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$281"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$282"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$283"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$284"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$285"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$286"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$287"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$78", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$288"],
               RowBox[{"\"Leaf10\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf10", "Spine16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$289"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$290"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$291"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$292"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$293"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$294"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$295"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$296"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$297"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$298"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$299"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$300"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$301"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$302"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$303"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$79", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$304"],
               RowBox[{"\"Leaf11\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf11", "Spine16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$305"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$306"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$307"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$308"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$309"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$310"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$311"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$312"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$313"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$314"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$315"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$316"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$317"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$318"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$319"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$80", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$320"],
               RowBox[{"\"Leaf12\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf12", "Spine16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$321"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$322"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$323"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$324"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$325"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$326"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$327"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$328"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$329"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$330"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$331"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$332"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$333"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$334"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$335"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$81", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$336"],
               RowBox[{"\"Leaf13\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf13", "Spine16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$337"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$338"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$339"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$340"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$341"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$342"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$343"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$344"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$345"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$346"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$347"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$348"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$349"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$350"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$351"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$82", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$352"],
               RowBox[{"\"Leaf14\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf14", "Spine16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$353"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$354"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$355"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$356"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$357"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$358"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$359"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$360"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$361"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$362"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$363"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$364"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$365"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$366"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$367"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$83", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$368"],
               RowBox[{"\"Leaf15\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf15", "Spine16"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$85", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$369"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine1\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine1"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$86", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$370"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine2\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine2"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$87", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$371"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine3\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine3"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$88", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$372"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine4\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine4"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$89", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$373"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine5\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine5"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$90", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$374"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine6\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine6"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$91", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$375"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine7\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine7"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$92", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$376"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine8\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine8"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$93", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$377"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine9\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine9"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$94", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$378"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine10\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine10"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$95", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$379"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine11\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine11"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$96", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$380"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine12\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine12"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$97", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$381"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine13\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine13"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$98", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$382"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine14\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine14"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$99", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$383"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine15\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine15"], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$84", Automatic, Center], 
                  DynamicLocation["VertexID$100", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$384"],
               RowBox[{"\"Leaf16\"", "\[UndirectedEdge]", "\"Spine16\""}]],
              Annotation[#, 
               UndirectedEdge["Leaf16", "Spine16"], "Tooltip"]& ]}, 
            {GrayLevel[0], 
             TagBox[{
               
               TagBox[DiskBox[{0., 1.6670396601026731`}, 0.00517191715669641],
                
                "DynamicName",
                BoxID -> "VertexID$1"], 
               InsetBox["\<\"H1\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$1", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$1"], 
             TagBox[{
               
               TagBox[DiskBox[{0.3947179274449941, 1.5497907997430893`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$2"], 
               InsetBox["\<\"H2\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$2", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$2"], 
             TagBox[{
               
               TagBox[DiskBox[{0.4252303877858181, 1.1887737526132693`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$3"], 
               InsetBox["\<\"H3\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$3", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$3"], 
             TagBox[{
               
               TagBox[DiskBox[{0.24517969893121627`, 1.9124901415496274`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$4"], 
               InsetBox["\<\"H4\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$4", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$4"], 
             TagBox[{
               
               TagBox[DiskBox[{0.815752945571824, 0.9516922224156756}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$5"], 
               InsetBox["\<\"H5\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$5", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$5"], 
             TagBox[{
               
               TagBox[DiskBox[{0.12322156716833499`, 0.8695489172633841}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$6"], 
               InsetBox["\<\"H6\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$6", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$6"], 
             TagBox[{
               
               TagBox[DiskBox[{1.127776962789675, 0.10074366112421185`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$7"], 
               InsetBox["\<\"H7\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$7", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$7"], 
             TagBox[{
               
               TagBox[DiskBox[{0.7661644254216826, 0.5233545512297852}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$8"], 
               InsetBox["\<\"H8\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$8", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$8"], 
             TagBox[{
               
               TagBox[DiskBox[{1.5160977350194176`, 0.4132894158552074}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$9"], 
               InsetBox["\<\"H9\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$9", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$9"], 
             TagBox[{
               
               TagBox[DiskBox[{1.817274523061272, 0.20499832189085998`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$10"], 
               InsetBox["\<\"H10\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$10", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$10"], 
             TagBox[{
               
               TagBox[DiskBox[{0.4491865452836241, 0.8265761810099082}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$11"], 
               InsetBox["\<\"H11\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$11", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$11"], 
             TagBox[{
               
               TagBox[DiskBox[{1.1637154017104718`, 0.6013970537485949}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$12"], 
               InsetBox["\<\"H12\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$12", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$12"], 
             TagBox[{
               
               TagBox[DiskBox[{0.4131900509533586, 0.46666103263623304`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$13"], 
               InsetBox["\<\"H13\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$13", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$13"], 
             TagBox[{
               
               TagBox[DiskBox[{1.4623905290654902`, 0.05288776791410177}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$14"], 
               InsetBox["\<\"H14\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$14", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$14"], 
             TagBox[{
               
               TagBox[DiskBox[{0.025764652401678134`, 1.269553607417247}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$15"], 
               InsetBox["\<\"H15\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$15", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$15"], 
             TagBox[{
               
               TagBox[DiskBox[{0.7613492852858665, 0.19935112738618477`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$16"], 
               InsetBox["\<\"H16\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$16", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$16"], 
             TagBox[{
               
               TagBox[DiskBox[{5.148740450214906, 0.6016036529658342}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$17"], 
               InsetBox["\<\"H17\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$17", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$17"], 
             TagBox[{
               
               TagBox[DiskBox[{5.53222420246279, 1.4958776910356386`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$18"], 
               InsetBox["\<\"H18\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$18", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$18"], 
             TagBox[{
               
               TagBox[DiskBox[{3.6266449527552327`, 0.17336897992675526`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$19"], 
               InsetBox["\<\"H19\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$19", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$19"], 
             TagBox[{
               
               TagBox[DiskBox[{4.730617033239238, 0.517400767403585}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$20"], 
               InsetBox["\<\"H20\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$20", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$20"], 
             TagBox[{
               
               TagBox[DiskBox[{3.9692587121870186`, 0.3744394027691831}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$21"], 
               InsetBox["\<\"H21\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$21", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$21"], 
             TagBox[{
               
               TagBox[DiskBox[{5.3288775538466036`, 0.8180535755322165}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$22"], 
               InsetBox["\<\"H22\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$22", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$22"], 
             TagBox[{
               
               TagBox[DiskBox[{4.32873918630217, 0.6197352713880915}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$23"], 
               InsetBox["\<\"H23\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$23", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$23"], 
             TagBox[{
               
               TagBox[DiskBox[{4.300215464059803, 0.10338115802860237`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$24"], 
               InsetBox["\<\"H24\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$24", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$24"], 
             TagBox[{
               
               TagBox[DiskBox[{4.955916589174645, 0.27977917463434565`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$25"], 
               InsetBox["\<\"H25\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$25", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$25"], 
             TagBox[{
               
               TagBox[DiskBox[{3.9873215616864783`, 0.}, 0.00517191715669641],
                
                "DynamicName",
                BoxID -> "VertexID$26"], 
               InsetBox["\<\"H26\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$26", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$26"], 
             TagBox[{
               
               TagBox[DiskBox[{5.061108620989851, 1.1405973458733079`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$27"], 
               InsetBox["\<\"H27\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$27", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$27"], 
             TagBox[{
               
               TagBox[DiskBox[{4.752713937187361, 0.8875844365705361}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$28"], 
               InsetBox["\<\"H28\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$28", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$28"], 
             TagBox[{
               
               TagBox[DiskBox[{4.619260355885934, 0.1268742126115363}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$29"], 
               InsetBox["\<\"H29\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$29", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$29"], 
             TagBox[{
               
               TagBox[DiskBox[{5.488944270008463, 1.1096056679581872`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$30"], 
               InsetBox["\<\"H30\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$30", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$30"], 
             TagBox[{
               
               TagBox[DiskBox[{5.1316733360691575`, 1.509190798077716}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$31"], 
               InsetBox["\<\"H31\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$31", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$31"], 
             TagBox[{
               
               TagBox[DiskBox[{5.334769446223531, 1.8214419542086973`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$32"], 
               InsetBox["\<\"H32\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$32", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$32"], 
             TagBox[{
               
               TagBox[DiskBox[{4.085148488249279, 5.506804895417037}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$33"], 
               InsetBox["\<\"H33\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$33", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$33"], 
             TagBox[{
               
               TagBox[DiskBox[{4.7583647926997665`, 4.593645719660981}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$34"], 
               InsetBox["\<\"H34\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$34", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$34"], 
             TagBox[{
               
               TagBox[DiskBox[{5.568888915583348, 4.340510723720586}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$35"], 
               InsetBox["\<\"H35\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$35", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$35"], 
             TagBox[{
               
               TagBox[DiskBox[{5.21086744736564, 5.023802707192374}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$36"], 
               InsetBox["\<\"H36\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$36", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$36"], 
             TagBox[{
               
               TagBox[DiskBox[{4.386932741589715, 5.428675003911515}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$37"], 
               InsetBox["\<\"H37\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$37", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$37"], 
             TagBox[{
               
               TagBox[DiskBox[{4.669914466830617, 5.348710582886543}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$38"], 
               InsetBox["\<\"H38\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$38", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$38"], 
             TagBox[{
               
               TagBox[DiskBox[{5.079050132970232, 4.727961952076254}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$39"], 
               InsetBox["\<\"H39\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$39", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$39"], 
             TagBox[{
               
               TagBox[DiskBox[{4.5415281428373415`, 4.939039318551021}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$40"], 
               InsetBox["\<\"H40\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$40", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$40"], 
             TagBox[{
               
               TagBox[DiskBox[{5.572621331155757, 3.9930534766029413`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$41"], 
               InsetBox["\<\"H41\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$41", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$41"], 
             TagBox[{
               
               TagBox[DiskBox[{4.105076992845054, 5.090889205082153}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$42"], 
               InsetBox["\<\"H42\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$42", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$42"], 
             TagBox[{
               
               TagBox[DiskBox[{4.948495501895891, 5.2429713475925075`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$43"], 
               InsetBox["\<\"H43\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$43", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$43"], 
             TagBox[{
               
               TagBox[DiskBox[{3.7585550201063125`, 5.352843085619078}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$44"], 
               InsetBox["\<\"H44\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$44", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$44"], 
             TagBox[{
               
               TagBox[DiskBox[{5.428727696460204, 3.6200034388106057`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$45"], 
               InsetBox["\<\"H45\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$45", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$45"], 
             TagBox[{
               
               TagBox[DiskBox[{5.115787556943831, 4.322190629059894}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$46"], 
               InsetBox["\<\"H46\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$46", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$46"], 
             TagBox[{
               
               TagBox[DiskBox[{5.19594761014103, 3.9347204707654053`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$47"], 
               InsetBox["\<\"H47\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$47", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$47"], 
             TagBox[{
               
               TagBox[DiskBox[{5.442575793018165, 4.695185253060433}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$48"], 
               InsetBox["\<\"H48\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$48", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$48"], 
             TagBox[{
               
               TagBox[DiskBox[{0.631853904803815, 4.436874470567933}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$49"], 
               InsetBox["\<\"H49\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$49", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$49"], 
             TagBox[{
               
               TagBox[DiskBox[{0.4279755965997074, 4.066719897224899}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$50"], 
               InsetBox["\<\"H50\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$50", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$50"], 
             TagBox[{
               
               TagBox[DiskBox[{1.5463806310856083`, 5.212975225306904}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$51"], 
               InsetBox["\<\"H51\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$51", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$51"], 
             TagBox[{
               
               TagBox[DiskBox[{0.13921465438026503`, 4.447908480487359}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$52"], 
               InsetBox["\<\"H52\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$52", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$52"], 
             TagBox[{
               
               TagBox[DiskBox[{1.9159926763606325`, 5.3178315064732455`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$53"], 
               InsetBox["\<\"H53\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$53", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$53"], 
             TagBox[{
               
               TagBox[DiskBox[{1.1966215399280775`, 5.173495264711672}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$54"], 
               InsetBox["\<\"H54\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$54", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$54"], 
             TagBox[{
               
               TagBox[DiskBox[{0.45864090836142646`, 5.161243539163779}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$55"], 
               InsetBox["\<\"H55\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$55", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$55"], 
             TagBox[{
               
               TagBox[DiskBox[{0.8210387969959028, 5.152061007921164}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$56"], 
               InsetBox["\<\"H56\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$56", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$56"], 
             TagBox[{
               
               TagBox[DiskBox[{0.980647804235325, 4.7786447623667465`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$57"], 
               InsetBox["\<\"H57\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$57", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$57"], 
             TagBox[{
               
               TagBox[DiskBox[{0.2007419564480455, 3.772416023045351}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$58"], 
               InsetBox["\<\"H58\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$58", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$58"], 
             TagBox[{
               
               TagBox[DiskBox[{1.2767340839547863`, 5.595214081904243}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$59"], 
               InsetBox["\<\"H59\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$59", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$59"], 
             TagBox[{
               
               TagBox[DiskBox[{0.882339301079617, 5.463948104214995}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$60"], 
               InsetBox["\<\"H60\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$60", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$60"], 
             TagBox[{
               
               TagBox[DiskBox[{0.5432085555040285, 4.805614770700581}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$61"], 
               InsetBox["\<\"H61\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$61", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$61"], 
             TagBox[{
               
               TagBox[DiskBox[{0.06519569974754535, 4.157060038995932}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$62"], 
               InsetBox["\<\"H62\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$62", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$62"], 
             TagBox[{
               
               TagBox[DiskBox[{1.7000061820644208`, 5.580270515669854}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$63"], 
               InsetBox["\<\"H63\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$63", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$63"], 
             TagBox[{
               
               TagBox[DiskBox[{0.20288065507277375`, 4.804879743358562}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$64"], 
               InsetBox["\<\"H64\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$64", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$64"], 
             TagBox[{
               
               TagBox[DiskBox[{1.7017726805311464`, 1.7419334289277555`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$65"], 
               InsetBox["\<\"TOR1\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$65", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$65"], 
             TagBox[{
               
               TagBox[DiskBox[{3.829210473974236, 1.7033886712827633`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$66"], 
               InsetBox["\<\"TOR2\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$66", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$66"], 
             TagBox[{
               
               TagBox[DiskBox[{3.8806398089123726`, 3.824916009422034}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$67"], 
               InsetBox["\<\"TOR3\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$67", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$67"], 
             TagBox[{
               
               TagBox[DiskBox[{1.7499627691852957`, 3.881153074840936}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$68"], 
               InsetBox["\<\"TOR4\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$68", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$68"], 
             TagBox[{
               
               TagBox[DiskBox[{2.6044656609555212`, 2.6792573059708995`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$69"], 
               InsetBox["\<\"Leaf1\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$69", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$69"], 
             TagBox[{
               
               TagBox[DiskBox[{2.560903017573856, 2.7898436942594507`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$70"], 
               InsetBox["\<\"Leaf2\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$70", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$70"], 
             TagBox[{
               
               TagBox[DiskBox[{2.7847230756733876`, 2.872663380636438}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$71"], 
               InsetBox["\<\"Leaf3\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$71", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$71"], 
             TagBox[{
               
               TagBox[DiskBox[{2.690442359441079, 2.611220756090327}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$72"], 
               InsetBox["\<\"Leaf4\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$72", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$72"], 
             TagBox[{
               
               TagBox[DiskBox[{2.687595415286712, 2.9694693636681633`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$73"], 
               InsetBox["\<\"Leaf5\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$73", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$73"], 
             TagBox[{
               
               TagBox[DiskBox[{2.8858590898543386`, 2.6157665298038033`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$74"], 
               InsetBox["\<\"Leaf6\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$74", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$74"], 
             TagBox[{
               
               TagBox[DiskBox[{2.6943910886460967`, 2.788650874956372}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$75"], 
               InsetBox["\<\"Leaf7\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$75", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$75"], 
             TagBox[{
               
               TagBox[DiskBox[{2.7837727730773234`, 2.7057274880619766`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$76"], 
               InsetBox["\<\"Leaf8\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$76", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$76"], 
             TagBox[{
               
               TagBox[DiskBox[{2.8891926122809046`, 2.956456246816992}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$77"], 
               InsetBox["\<\"Leaf9\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$77", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$77"], 
             TagBox[{
               
               TagBox[DiskBox[{2.972460852608643, 2.6773380139638805`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$78"], 
               InsetBox["\<\"Leaf10\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$78", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$78"], 
             TagBox[{
               
               TagBox[DiskBox[{2.9726983788851298`, 2.895413001702295}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$79"], 
               InsetBox["\<\"Leaf11\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$79", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$79"], 
             TagBox[{
               
               TagBox[DiskBox[{3.009746904998333, 2.786640084797868}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$80"], 
               InsetBox["\<\"Leaf12\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$80", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$80"], 
             TagBox[{
               
               TagBox[DiskBox[{2.608560419039574, 2.8948717448108865`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$81"], 
               InsetBox["\<\"Leaf13\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$81", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$81"], 
             TagBox[{
               
               TagBox[DiskBox[{2.795320070077509, 3.0164840738802785`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$82"], 
               InsetBox["\<\"Leaf14\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$82", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$82"], 
             TagBox[{
               
               TagBox[DiskBox[{2.874881426522752, 2.784665246439871}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$83"], 
               InsetBox["\<\"Leaf15\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$83", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$83"], 
             TagBox[{
               
               TagBox[DiskBox[{2.790012154844338, 2.561472809278095}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$84"], 
               InsetBox["\<\"Leaf16\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$84", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$84"], 
             TagBox[{
               
               TagBox[DiskBox[{3.154707830976996, 3.150067166384846}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$85"], 
               InsetBox["\<\"Spine1\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$85", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$85"], 
             TagBox[{
               
               TagBox[DiskBox[{2.7727373011431085`, 2.264929032608172}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$86"], 
               InsetBox["\<\"Spine2\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$86", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$86"], 
             TagBox[{
               
               TagBox[DiskBox[{2.584893732390627, 3.268982121351712}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$87"], 
               InsetBox["\<\"Spine3\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$87", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$87"], 
             TagBox[{
               
               TagBox[DiskBox[{2.7835353429032277`, 3.310423131681723}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$88"], 
               InsetBox["\<\"Spine4\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$88", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$88"], 
             TagBox[{
               
               TagBox[DiskBox[{2.9843637423223983`, 3.270967332934143}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$89"], 
               InsetBox["\<\"Spine5\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$89", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$89"], 
             TagBox[{
               
               TagBox[DiskBox[{2.3008915188320627`, 2.5951431195770183`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$90"], 
               InsetBox["\<\"Spine6\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$90", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$90"], 
             TagBox[{
               
               TagBox[DiskBox[{2.264050458308045, 2.797790167818332}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$91"], 
               InsetBox["\<\"Spine7\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$91", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$91"], 
             TagBox[{
               
               TagBox[DiskBox[{2.3040051884224577`, 2.98538371837016}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$92"], 
               InsetBox["\<\"Spine8\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$92", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$92"], 
             TagBox[{
               
               TagBox[DiskBox[{2.579881695172448, 2.3084690534772525`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$93"], 
               InsetBox["\<\"Spine9\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$93", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$93"], 
             TagBox[{
               
               TagBox[DiskBox[{3.31199743875135, 2.778551863779812}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$94"], 
               InsetBox["\<\"Spine10\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$94", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$94"], 
             TagBox[{
               
               TagBox[DiskBox[{3.2733358209870005`, 2.977001301778131}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$95"], 
               InsetBox["\<\"Spine11\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$95", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$95"], 
             TagBox[{
               
               TagBox[DiskBox[{2.971433853857229, 2.2991241583411695`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$96"], 
               InsetBox["\<\"Spine12\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$96", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$96"], 
             TagBox[{
               
               TagBox[DiskBox[{2.4164362431972446`, 2.428212649508597}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$97"], 
               InsetBox["\<\"Spine13\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$97", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$97"], 
             TagBox[{
               
               TagBox[DiskBox[{3.2667263480184747`, 2.5816041522803803`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$98"], 
               InsetBox["\<\"Spine14\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$98", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$98"], 
             TagBox[{
               
               TagBox[DiskBox[{2.421796496068488, 3.1522831274040226`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$99"], 
               InsetBox["\<\"Spine15\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$99", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$99"], 
             TagBox[{
               
               TagBox[DiskBox[{3.143436141980671, 2.4139719007059885`}, 
                 0.00517191715669641],
                "DynamicName",
                BoxID -> "VertexID$100"], 
               InsetBox["\<\"Spine16\"\>", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$100", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$100"]}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->"NetworkGraphics",
       FormatType->TraditionalForm,
       FrameTicks->None,
       ImageSize->300,
       PlotLabel->FormBox["\"4-stage Clos (64 hosts)\"", TraditionalForm]],
      TraditionalForm], {200., -206.325}, {Center, Center}, {375., 393.},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, {
           Null, {{1, 9}, {1, 2}, {2, 10}, {2, 3}, {3, 11}, {3, 4}, {4, 12}, {
            4, 5}, {5, 13}, {5, 6}, {6, 14}, {6, 7}, {7, 15}, {7, 8}, {8, 
            16}, {9, 17}, {9, 10}, {10, 18}, {10, 11}, {11, 19}, {11, 12}, {
            12, 20}, {12, 13}, {13, 21}, {13, 14}, {14, 22}, {14, 15}, {15, 
            23}, {15, 16}, {16, 24}, {17, 25}, {17, 18}, {18, 26}, {18, 19}, {
            19, 27}, {19, 20}, {20, 28}, {20, 21}, {21, 29}, {21, 22}, {22, 
            30}, {22, 23}, {23, 31}, {23, 24}, {24, 32}, {25, 33}, {25, 26}, {
            26, 34}, {26, 27}, {27, 35}, {27, 28}, {28, 36}, {28, 29}, {29, 
            37}, {29, 30}, {30, 38}, {30, 31}, {31, 39}, {31, 32}, {32, 40}, {
            33, 41}, {33, 34}, {34, 42}, {34, 35}, {35, 43}, {35, 36}, {36, 
            44}, {36, 37}, {37, 45}, {37, 38}, {38, 46}, {38, 39}, {39, 47}, {
            39, 40}, {40, 48}, {41, 49}, {41, 42}, {42, 50}, {42, 43}, {43, 
            51}, {43, 44}, {44, 52}, {44, 45}, {45, 53}, {45, 46}, {46, 54}, {
            46, 47}, {47, 55}, {47, 48}, {48, 56}, {49, 57}, {49, 50}, {50, 
            58}, {50, 51}, {51, 59}, {51, 52}, {52, 60}, {52, 53}, {53, 61}, {
            53, 54}, {54, 62}, {54, 55}, {55, 63}, {55, 56}, {56, 64}, {57, 
            58}, {58, 59}, {59, 60}, {60, 61}, {61, 62}, {62, 63}, {63, 
            64}}}, {ImageSize -> 300, PlotLabel -> 
            "8\[Times]8 Mesh (64 hosts)", PlotTheme -> "Scientific", 
            VertexSize -> {Small}}]]}, 
         TagBox[GraphicsGroupBox[{
            {Hue[0.0603, 0.94, 0.9], Opacity[1], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$1", Automatic, Center], 
                  DynamicLocation["VertexID$2", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$1"],
               RowBox[{"1", "\[UndirectedEdge]", "2"}]],
              Annotation[#, 
               UndirectedEdge[1, 2], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$1", Automatic, Center], 
                  DynamicLocation["VertexID$9", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$2"],
               RowBox[{"1", "\[UndirectedEdge]", "9"}]],
              Annotation[#, 
               UndirectedEdge[1, 9], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$2", Automatic, Center], 
                  DynamicLocation["VertexID$3", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$3"],
               RowBox[{"2", "\[UndirectedEdge]", "3"}]],
              Annotation[#, 
               UndirectedEdge[2, 3], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$2", Automatic, Center], 
                  DynamicLocation["VertexID$10", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$4"],
               RowBox[{"2", "\[UndirectedEdge]", "10"}]],
              Annotation[#, 
               UndirectedEdge[2, 10], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$3", Automatic, Center], 
                  DynamicLocation["VertexID$4", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$5"],
               RowBox[{"3", "\[UndirectedEdge]", "4"}]],
              Annotation[#, 
               UndirectedEdge[3, 4], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$3", Automatic, Center], 
                  DynamicLocation["VertexID$11", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$6"],
               RowBox[{"3", "\[UndirectedEdge]", "11"}]],
              Annotation[#, 
               UndirectedEdge[3, 11], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$4", Automatic, Center], 
                  DynamicLocation["VertexID$5", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$7"],
               RowBox[{"4", "\[UndirectedEdge]", "5"}]],
              Annotation[#, 
               UndirectedEdge[4, 5], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$4", Automatic, Center], 
                  DynamicLocation["VertexID$12", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$8"],
               RowBox[{"4", "\[UndirectedEdge]", "12"}]],
              Annotation[#, 
               UndirectedEdge[4, 12], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$5", Automatic, Center], 
                  DynamicLocation["VertexID$6", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$9"],
               RowBox[{"5", "\[UndirectedEdge]", "6"}]],
              Annotation[#, 
               UndirectedEdge[5, 6], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$5", Automatic, Center], 
                  DynamicLocation["VertexID$13", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$10"],
               RowBox[{"5", "\[UndirectedEdge]", "13"}]],
              Annotation[#, 
               UndirectedEdge[5, 13], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$6", Automatic, Center], 
                  DynamicLocation["VertexID$7", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$11"],
               RowBox[{"6", "\[UndirectedEdge]", "7"}]],
              Annotation[#, 
               UndirectedEdge[6, 7], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$6", Automatic, Center], 
                  DynamicLocation["VertexID$14", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$12"],
               RowBox[{"6", "\[UndirectedEdge]", "14"}]],
              Annotation[#, 
               UndirectedEdge[6, 14], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$7", Automatic, Center], 
                  DynamicLocation["VertexID$8", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$13"],
               RowBox[{"7", "\[UndirectedEdge]", "8"}]],
              Annotation[#, 
               UndirectedEdge[7, 8], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$7", Automatic, Center], 
                  DynamicLocation["VertexID$15", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$14"],
               RowBox[{"7", "\[UndirectedEdge]", "15"}]],
              Annotation[#, 
               UndirectedEdge[7, 15], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$8", Automatic, Center], 
                  DynamicLocation["VertexID$16", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$15"],
               RowBox[{"8", "\[UndirectedEdge]", "16"}]],
              Annotation[#, 
               UndirectedEdge[8, 16], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$9", Automatic, Center], 
                  DynamicLocation["VertexID$10", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$16"],
               RowBox[{"9", "\[UndirectedEdge]", "10"}]],
              Annotation[#, 
               UndirectedEdge[9, 10], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$9", Automatic, Center], 
                  DynamicLocation["VertexID$17", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$17"],
               RowBox[{"9", "\[UndirectedEdge]", "17"}]],
              Annotation[#, 
               UndirectedEdge[9, 17], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$10", Automatic, Center], 
                  DynamicLocation["VertexID$11", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$18"],
               RowBox[{"10", "\[UndirectedEdge]", "11"}]],
              Annotation[#, 
               UndirectedEdge[10, 11], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$10", Automatic, Center], 
                  DynamicLocation["VertexID$18", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$19"],
               RowBox[{"10", "\[UndirectedEdge]", "18"}]],
              Annotation[#, 
               UndirectedEdge[10, 18], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$11", Automatic, Center], 
                  DynamicLocation["VertexID$12", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$20"],
               RowBox[{"11", "\[UndirectedEdge]", "12"}]],
              Annotation[#, 
               UndirectedEdge[11, 12], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$11", Automatic, Center], 
                  DynamicLocation["VertexID$19", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$21"],
               RowBox[{"11", "\[UndirectedEdge]", "19"}]],
              Annotation[#, 
               UndirectedEdge[11, 19], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$12", Automatic, Center], 
                  DynamicLocation["VertexID$13", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$22"],
               RowBox[{"12", "\[UndirectedEdge]", "13"}]],
              Annotation[#, 
               UndirectedEdge[12, 13], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$12", Automatic, Center], 
                  DynamicLocation["VertexID$20", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$23"],
               RowBox[{"12", "\[UndirectedEdge]", "20"}]],
              Annotation[#, 
               UndirectedEdge[12, 20], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$13", Automatic, Center], 
                  DynamicLocation["VertexID$14", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$24"],
               RowBox[{"13", "\[UndirectedEdge]", "14"}]],
              Annotation[#, 
               UndirectedEdge[13, 14], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$13", Automatic, Center], 
                  DynamicLocation["VertexID$21", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$25"],
               RowBox[{"13", "\[UndirectedEdge]", "21"}]],
              Annotation[#, 
               UndirectedEdge[13, 21], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$14", Automatic, Center], 
                  DynamicLocation["VertexID$15", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$26"],
               RowBox[{"14", "\[UndirectedEdge]", "15"}]],
              Annotation[#, 
               UndirectedEdge[14, 15], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$14", Automatic, Center], 
                  DynamicLocation["VertexID$22", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$27"],
               RowBox[{"14", "\[UndirectedEdge]", "22"}]],
              Annotation[#, 
               UndirectedEdge[14, 22], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$15", Automatic, Center], 
                  DynamicLocation["VertexID$16", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$28"],
               RowBox[{"15", "\[UndirectedEdge]", "16"}]],
              Annotation[#, 
               UndirectedEdge[15, 16], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$15", Automatic, Center], 
                  DynamicLocation["VertexID$23", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$29"],
               RowBox[{"15", "\[UndirectedEdge]", "23"}]],
              Annotation[#, 
               UndirectedEdge[15, 23], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$16", Automatic, Center], 
                  DynamicLocation["VertexID$24", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$30"],
               RowBox[{"16", "\[UndirectedEdge]", "24"}]],
              Annotation[#, 
               UndirectedEdge[16, 24], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$17", Automatic, Center], 
                  DynamicLocation["VertexID$18", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$31"],
               RowBox[{"17", "\[UndirectedEdge]", "18"}]],
              Annotation[#, 
               UndirectedEdge[17, 18], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$17", Automatic, Center], 
                  DynamicLocation["VertexID$25", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$32"],
               RowBox[{"17", "\[UndirectedEdge]", "25"}]],
              Annotation[#, 
               UndirectedEdge[17, 25], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$18", Automatic, Center], 
                  DynamicLocation["VertexID$19", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$33"],
               RowBox[{"18", "\[UndirectedEdge]", "19"}]],
              Annotation[#, 
               UndirectedEdge[18, 19], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$18", Automatic, Center], 
                  DynamicLocation["VertexID$26", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$34"],
               RowBox[{"18", "\[UndirectedEdge]", "26"}]],
              Annotation[#, 
               UndirectedEdge[18, 26], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$19", Automatic, Center], 
                  DynamicLocation["VertexID$20", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$35"],
               RowBox[{"19", "\[UndirectedEdge]", "20"}]],
              Annotation[#, 
               UndirectedEdge[19, 20], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$19", Automatic, Center], 
                  DynamicLocation["VertexID$27", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$36"],
               RowBox[{"19", "\[UndirectedEdge]", "27"}]],
              Annotation[#, 
               UndirectedEdge[19, 27], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$20", Automatic, Center], 
                  DynamicLocation["VertexID$21", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$37"],
               RowBox[{"20", "\[UndirectedEdge]", "21"}]],
              Annotation[#, 
               UndirectedEdge[20, 21], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$20", Automatic, Center], 
                  DynamicLocation["VertexID$28", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$38"],
               RowBox[{"20", "\[UndirectedEdge]", "28"}]],
              Annotation[#, 
               UndirectedEdge[20, 28], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$21", Automatic, Center], 
                  DynamicLocation["VertexID$22", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$39"],
               RowBox[{"21", "\[UndirectedEdge]", "22"}]],
              Annotation[#, 
               UndirectedEdge[21, 22], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$21", Automatic, Center], 
                  DynamicLocation["VertexID$29", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$40"],
               RowBox[{"21", "\[UndirectedEdge]", "29"}]],
              Annotation[#, 
               UndirectedEdge[21, 29], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$22", Automatic, Center], 
                  DynamicLocation["VertexID$23", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$41"],
               RowBox[{"22", "\[UndirectedEdge]", "23"}]],
              Annotation[#, 
               UndirectedEdge[22, 23], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$22", Automatic, Center], 
                  DynamicLocation["VertexID$30", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$42"],
               RowBox[{"22", "\[UndirectedEdge]", "30"}]],
              Annotation[#, 
               UndirectedEdge[22, 30], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$23", Automatic, Center], 
                  DynamicLocation["VertexID$24", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$43"],
               RowBox[{"23", "\[UndirectedEdge]", "24"}]],
              Annotation[#, 
               UndirectedEdge[23, 24], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$23", Automatic, Center], 
                  DynamicLocation["VertexID$31", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$44"],
               RowBox[{"23", "\[UndirectedEdge]", "31"}]],
              Annotation[#, 
               UndirectedEdge[23, 31], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$24", Automatic, Center], 
                  DynamicLocation["VertexID$32", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$45"],
               RowBox[{"24", "\[UndirectedEdge]", "32"}]],
              Annotation[#, 
               UndirectedEdge[24, 32], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$25", Automatic, Center], 
                  DynamicLocation["VertexID$26", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$46"],
               RowBox[{"25", "\[UndirectedEdge]", "26"}]],
              Annotation[#, 
               UndirectedEdge[25, 26], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$25", Automatic, Center], 
                  DynamicLocation["VertexID$33", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$47"],
               RowBox[{"25", "\[UndirectedEdge]", "33"}]],
              Annotation[#, 
               UndirectedEdge[25, 33], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$26", Automatic, Center], 
                  DynamicLocation["VertexID$27", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$48"],
               RowBox[{"26", "\[UndirectedEdge]", "27"}]],
              Annotation[#, 
               UndirectedEdge[26, 27], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$26", Automatic, Center], 
                  DynamicLocation["VertexID$34", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$49"],
               RowBox[{"26", "\[UndirectedEdge]", "34"}]],
              Annotation[#, 
               UndirectedEdge[26, 34], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$27", Automatic, Center], 
                  DynamicLocation["VertexID$28", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$50"],
               RowBox[{"27", "\[UndirectedEdge]", "28"}]],
              Annotation[#, 
               UndirectedEdge[27, 28], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$27", Automatic, Center], 
                  DynamicLocation["VertexID$35", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$51"],
               RowBox[{"27", "\[UndirectedEdge]", "35"}]],
              Annotation[#, 
               UndirectedEdge[27, 35], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$28", Automatic, Center], 
                  DynamicLocation["VertexID$29", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$52"],
               RowBox[{"28", "\[UndirectedEdge]", "29"}]],
              Annotation[#, 
               UndirectedEdge[28, 29], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$28", Automatic, Center], 
                  DynamicLocation["VertexID$36", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$53"],
               RowBox[{"28", "\[UndirectedEdge]", "36"}]],
              Annotation[#, 
               UndirectedEdge[28, 36], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$29", Automatic, Center], 
                  DynamicLocation["VertexID$30", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$54"],
               RowBox[{"29", "\[UndirectedEdge]", "30"}]],
              Annotation[#, 
               UndirectedEdge[29, 30], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$29", Automatic, Center], 
                  DynamicLocation["VertexID$37", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$55"],
               RowBox[{"29", "\[UndirectedEdge]", "37"}]],
              Annotation[#, 
               UndirectedEdge[29, 37], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$30", Automatic, Center], 
                  DynamicLocation["VertexID$31", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$56"],
               RowBox[{"30", "\[UndirectedEdge]", "31"}]],
              Annotation[#, 
               UndirectedEdge[30, 31], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$30", Automatic, Center], 
                  DynamicLocation["VertexID$38", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$57"],
               RowBox[{"30", "\[UndirectedEdge]", "38"}]],
              Annotation[#, 
               UndirectedEdge[30, 38], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$31", Automatic, Center], 
                  DynamicLocation["VertexID$32", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$58"],
               RowBox[{"31", "\[UndirectedEdge]", "32"}]],
              Annotation[#, 
               UndirectedEdge[31, 32], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$31", Automatic, Center], 
                  DynamicLocation["VertexID$39", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$59"],
               RowBox[{"31", "\[UndirectedEdge]", "39"}]],
              Annotation[#, 
               UndirectedEdge[31, 39], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$32", Automatic, Center], 
                  DynamicLocation["VertexID$40", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$60"],
               RowBox[{"32", "\[UndirectedEdge]", "40"}]],
              Annotation[#, 
               UndirectedEdge[32, 40], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$33", Automatic, Center], 
                  DynamicLocation["VertexID$34", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$61"],
               RowBox[{"33", "\[UndirectedEdge]", "34"}]],
              Annotation[#, 
               UndirectedEdge[33, 34], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$33", Automatic, Center], 
                  DynamicLocation["VertexID$41", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$62"],
               RowBox[{"33", "\[UndirectedEdge]", "41"}]],
              Annotation[#, 
               UndirectedEdge[33, 41], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$34", Automatic, Center], 
                  DynamicLocation["VertexID$35", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$63"],
               RowBox[{"34", "\[UndirectedEdge]", "35"}]],
              Annotation[#, 
               UndirectedEdge[34, 35], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$34", Automatic, Center], 
                  DynamicLocation["VertexID$42", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$64"],
               RowBox[{"34", "\[UndirectedEdge]", "42"}]],
              Annotation[#, 
               UndirectedEdge[34, 42], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$35", Automatic, Center], 
                  DynamicLocation["VertexID$36", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$65"],
               RowBox[{"35", "\[UndirectedEdge]", "36"}]],
              Annotation[#, 
               UndirectedEdge[35, 36], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$35", Automatic, Center], 
                  DynamicLocation["VertexID$43", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$66"],
               RowBox[{"35", "\[UndirectedEdge]", "43"}]],
              Annotation[#, 
               UndirectedEdge[35, 43], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$36", Automatic, Center], 
                  DynamicLocation["VertexID$37", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$67"],
               RowBox[{"36", "\[UndirectedEdge]", "37"}]],
              Annotation[#, 
               UndirectedEdge[36, 37], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$36", Automatic, Center], 
                  DynamicLocation["VertexID$44", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$68"],
               RowBox[{"36", "\[UndirectedEdge]", "44"}]],
              Annotation[#, 
               UndirectedEdge[36, 44], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$37", Automatic, Center], 
                  DynamicLocation["VertexID$38", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$69"],
               RowBox[{"37", "\[UndirectedEdge]", "38"}]],
              Annotation[#, 
               UndirectedEdge[37, 38], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$37", Automatic, Center], 
                  DynamicLocation["VertexID$45", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$70"],
               RowBox[{"37", "\[UndirectedEdge]", "45"}]],
              Annotation[#, 
               UndirectedEdge[37, 45], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$38", Automatic, Center], 
                  DynamicLocation["VertexID$39", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$71"],
               RowBox[{"38", "\[UndirectedEdge]", "39"}]],
              Annotation[#, 
               UndirectedEdge[38, 39], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$38", Automatic, Center], 
                  DynamicLocation["VertexID$46", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$72"],
               RowBox[{"38", "\[UndirectedEdge]", "46"}]],
              Annotation[#, 
               UndirectedEdge[38, 46], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$39", Automatic, Center], 
                  DynamicLocation["VertexID$40", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$73"],
               RowBox[{"39", "\[UndirectedEdge]", "40"}]],
              Annotation[#, 
               UndirectedEdge[39, 40], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$39", Automatic, Center], 
                  DynamicLocation["VertexID$47", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$74"],
               RowBox[{"39", "\[UndirectedEdge]", "47"}]],
              Annotation[#, 
               UndirectedEdge[39, 47], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$40", Automatic, Center], 
                  DynamicLocation["VertexID$48", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$75"],
               RowBox[{"40", "\[UndirectedEdge]", "48"}]],
              Annotation[#, 
               UndirectedEdge[40, 48], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$41", Automatic, Center], 
                  DynamicLocation["VertexID$42", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$76"],
               RowBox[{"41", "\[UndirectedEdge]", "42"}]],
              Annotation[#, 
               UndirectedEdge[41, 42], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$41", Automatic, Center], 
                  DynamicLocation["VertexID$49", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$77"],
               RowBox[{"41", "\[UndirectedEdge]", "49"}]],
              Annotation[#, 
               UndirectedEdge[41, 49], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$42", Automatic, Center], 
                  DynamicLocation["VertexID$43", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$78"],
               RowBox[{"42", "\[UndirectedEdge]", "43"}]],
              Annotation[#, 
               UndirectedEdge[42, 43], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$42", Automatic, Center], 
                  DynamicLocation["VertexID$50", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$79"],
               RowBox[{"42", "\[UndirectedEdge]", "50"}]],
              Annotation[#, 
               UndirectedEdge[42, 50], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$43", Automatic, Center], 
                  DynamicLocation["VertexID$44", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$80"],
               RowBox[{"43", "\[UndirectedEdge]", "44"}]],
              Annotation[#, 
               UndirectedEdge[43, 44], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$43", Automatic, Center], 
                  DynamicLocation["VertexID$51", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$81"],
               RowBox[{"43", "\[UndirectedEdge]", "51"}]],
              Annotation[#, 
               UndirectedEdge[43, 51], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$44", Automatic, Center], 
                  DynamicLocation["VertexID$45", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$82"],
               RowBox[{"44", "\[UndirectedEdge]", "45"}]],
              Annotation[#, 
               UndirectedEdge[44, 45], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$44", Automatic, Center], 
                  DynamicLocation["VertexID$52", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$83"],
               RowBox[{"44", "\[UndirectedEdge]", "52"}]],
              Annotation[#, 
               UndirectedEdge[44, 52], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$45", Automatic, Center], 
                  DynamicLocation["VertexID$46", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$84"],
               RowBox[{"45", "\[UndirectedEdge]", "46"}]],
              Annotation[#, 
               UndirectedEdge[45, 46], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$45", Automatic, Center], 
                  DynamicLocation["VertexID$53", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$85"],
               RowBox[{"45", "\[UndirectedEdge]", "53"}]],
              Annotation[#, 
               UndirectedEdge[45, 53], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$46", Automatic, Center], 
                  DynamicLocation["VertexID$47", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$86"],
               RowBox[{"46", "\[UndirectedEdge]", "47"}]],
              Annotation[#, 
               UndirectedEdge[46, 47], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$46", Automatic, Center], 
                  DynamicLocation["VertexID$54", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$87"],
               RowBox[{"46", "\[UndirectedEdge]", "54"}]],
              Annotation[#, 
               UndirectedEdge[46, 54], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$47", Automatic, Center], 
                  DynamicLocation["VertexID$48", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$88"],
               RowBox[{"47", "\[UndirectedEdge]", "48"}]],
              Annotation[#, 
               UndirectedEdge[47, 48], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$47", Automatic, Center], 
                  DynamicLocation["VertexID$55", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$89"],
               RowBox[{"47", "\[UndirectedEdge]", "55"}]],
              Annotation[#, 
               UndirectedEdge[47, 55], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$48", Automatic, Center], 
                  DynamicLocation["VertexID$56", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$90"],
               RowBox[{"48", "\[UndirectedEdge]", "56"}]],
              Annotation[#, 
               UndirectedEdge[48, 56], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$49", Automatic, Center], 
                  DynamicLocation["VertexID$50", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$91"],
               RowBox[{"49", "\[UndirectedEdge]", "50"}]],
              Annotation[#, 
               UndirectedEdge[49, 50], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$49", Automatic, Center], 
                  DynamicLocation["VertexID$57", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$92"],
               RowBox[{"49", "\[UndirectedEdge]", "57"}]],
              Annotation[#, 
               UndirectedEdge[49, 57], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$50", Automatic, Center], 
                  DynamicLocation["VertexID$51", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$93"],
               RowBox[{"50", "\[UndirectedEdge]", "51"}]],
              Annotation[#, 
               UndirectedEdge[50, 51], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$50", Automatic, Center], 
                  DynamicLocation["VertexID$58", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$94"],
               RowBox[{"50", "\[UndirectedEdge]", "58"}]],
              Annotation[#, 
               UndirectedEdge[50, 58], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$51", Automatic, Center], 
                  DynamicLocation["VertexID$52", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$95"],
               RowBox[{"51", "\[UndirectedEdge]", "52"}]],
              Annotation[#, 
               UndirectedEdge[51, 52], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$51", Automatic, Center], 
                  DynamicLocation["VertexID$59", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$96"],
               RowBox[{"51", "\[UndirectedEdge]", "59"}]],
              Annotation[#, 
               UndirectedEdge[51, 59], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$52", Automatic, Center], 
                  DynamicLocation["VertexID$53", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$97"],
               RowBox[{"52", "\[UndirectedEdge]", "53"}]],
              Annotation[#, 
               UndirectedEdge[52, 53], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$52", Automatic, Center], 
                  DynamicLocation["VertexID$60", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$98"],
               RowBox[{"52", "\[UndirectedEdge]", "60"}]],
              Annotation[#, 
               UndirectedEdge[52, 60], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$53", Automatic, Center], 
                  DynamicLocation["VertexID$54", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$99"],
               RowBox[{"53", "\[UndirectedEdge]", "54"}]],
              Annotation[#, 
               UndirectedEdge[53, 54], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$53", Automatic, Center], 
                  DynamicLocation["VertexID$61", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$100"],
               RowBox[{"53", "\[UndirectedEdge]", "61"}]],
              Annotation[#, 
               UndirectedEdge[53, 61], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$54", Automatic, Center], 
                  DynamicLocation["VertexID$55", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$101"],
               RowBox[{"54", "\[UndirectedEdge]", "55"}]],
              Annotation[#, 
               UndirectedEdge[54, 55], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$54", Automatic, Center], 
                  DynamicLocation["VertexID$62", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$102"],
               RowBox[{"54", "\[UndirectedEdge]", "62"}]],
              Annotation[#, 
               UndirectedEdge[54, 62], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$55", Automatic, Center], 
                  DynamicLocation["VertexID$56", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$103"],
               RowBox[{"55", "\[UndirectedEdge]", "56"}]],
              Annotation[#, 
               UndirectedEdge[55, 56], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$55", Automatic, Center], 
                  DynamicLocation["VertexID$63", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$104"],
               RowBox[{"55", "\[UndirectedEdge]", "63"}]],
              Annotation[#, 
               UndirectedEdge[55, 63], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$56", Automatic, Center], 
                  DynamicLocation["VertexID$64", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$105"],
               RowBox[{"56", "\[UndirectedEdge]", "64"}]],
              Annotation[#, 
               UndirectedEdge[56, 64], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$57", Automatic, Center], 
                  DynamicLocation["VertexID$58", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$106"],
               RowBox[{"57", "\[UndirectedEdge]", "58"}]],
              Annotation[#, 
               UndirectedEdge[57, 58], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$58", Automatic, Center], 
                  DynamicLocation["VertexID$59", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$107"],
               RowBox[{"58", "\[UndirectedEdge]", "59"}]],
              Annotation[#, 
               UndirectedEdge[58, 59], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$59", Automatic, Center], 
                  DynamicLocation["VertexID$60", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$108"],
               RowBox[{"59", "\[UndirectedEdge]", "60"}]],
              Annotation[#, 
               UndirectedEdge[59, 60], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$60", Automatic, Center], 
                  DynamicLocation["VertexID$61", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$109"],
               RowBox[{"60", "\[UndirectedEdge]", "61"}]],
              Annotation[#, 
               UndirectedEdge[60, 61], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$61", Automatic, Center], 
                  DynamicLocation["VertexID$62", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$110"],
               RowBox[{"61", "\[UndirectedEdge]", "62"}]],
              Annotation[#, 
               UndirectedEdge[61, 62], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$62", Automatic, Center], 
                  DynamicLocation["VertexID$63", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$111"],
               RowBox[{"62", "\[UndirectedEdge]", "63"}]],
              Annotation[#, 
               UndirectedEdge[62, 63], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               
               TagBox[LineBox[{
                 DynamicLocation["VertexID$63", Automatic, Center], 
                  DynamicLocation["VertexID$64", Automatic, Center]}],
                "DynamicName",
                BoxID -> "EdgeLabelID$112"],
               RowBox[{"63", "\[UndirectedEdge]", "64"}]],
              Annotation[#, 
               UndirectedEdge[63, 64], "Tooltip"]& ]}, 
            {GrayLevel[0], 
             TagBox[{
               
               TagBox[DiskBox[{0.13318615561442648`, 0.13679504089419048`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$1"], 
               InsetBox["1", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$1", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$1"], 
             TagBox[{
               
               TagBox[DiskBox[{0.9030993336386484, 0.07631536917240611}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$2"], 
               InsetBox["2", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$2", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$2"], 
             TagBox[{
               
               TagBox[DiskBox[{1.882719705805128, 0.030182538941884385`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$3"], 
               InsetBox["3", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$3", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$3"], 
             TagBox[{
               
               TagBox[DiskBox[{2.964279145552695, 0.001713090802708983}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$4"], 
               InsetBox["4", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$4", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$4"], 
             TagBox[{
               TagBox[DiskBox[{4.07736123160329, 0.}, 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$5"], 
               InsetBox["5", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$5", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$5"], 
             TagBox[{
               
               TagBox[DiskBox[{5.161585830477519, 0.019266851099993598`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$6"], 
               InsetBox["6", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$6", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$6"], 
             TagBox[{
               
               TagBox[DiskBox[{6.14394014776628, 0.0716065015239633}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$7"], 
               InsetBox["7", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$7", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$7"], 
             TagBox[{
               
               TagBox[DiskBox[{6.914158185345613, 0.13704686637997243`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$8"], 
               InsetBox["8", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$8", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$8"], 
             TagBox[{
               
               TagBox[DiskBox[{0.0696832036080357, 0.905811935160941}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$9"], 
               InsetBox["9", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$9", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$9"], 
             TagBox[{
               
               TagBox[DiskBox[{0.8558363652552745, 0.8625597899554012}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$10"], 
               InsetBox["10", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$10", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$10"], 
             TagBox[{
               
               TagBox[DiskBox[{1.8525473945436284`, 0.8251606137338032}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$11"], 
               InsetBox["11", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$11", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$11"], 
             TagBox[{
               
               TagBox[DiskBox[{2.9526501755839014`, 0.7993990239937232}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$12"], 
               InsetBox["12", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$12", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$12"], 
             TagBox[{
               
               TagBox[DiskBox[{4.081186194552968, 0.7959134911432906}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$13"], 
               InsetBox["13", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$13", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$13"], 
             TagBox[{
               
               TagBox[DiskBox[{5.185300139782884, 0.8149509966208464}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$14"], 
               InsetBox["14", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$14", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$14"], 
             TagBox[{
               
               TagBox[DiskBox[{6.186181055245179, 0.8573929589382345}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$15"], 
               InsetBox["15", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$15", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$15"], 
             TagBox[{
               
               TagBox[DiskBox[{6.973236976622165, 0.9062448824384362}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$16"], 
               InsetBox["16", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$16", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$16"], 
             TagBox[{
               
               TagBox[DiskBox[{0.018708003435992104`, 1.8869427499541729`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$17"], 
               InsetBox["17", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$17", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$17"], 
             TagBox[{
               
               TagBox[DiskBox[{0.8141486042839481, 1.8628141067164499`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$18"], 
               InsetBox["18", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$18", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$18"], 
             TagBox[{
               
               TagBox[DiskBox[{1.8263103250205006`, 1.8385869745715857`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$19"], 
               InsetBox["19", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$19", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$19"], 
             TagBox[{
               
               TagBox[DiskBox[{2.943593127030536, 1.8205975919792385`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$20"], 
               InsetBox["20", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$20", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$20"], 
             TagBox[{
               
               TagBox[DiskBox[{4.089950766307317, 1.8144655862984407`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$21"], 
               InsetBox["21", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$21", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$21"], 
             TagBox[{
               
               TagBox[DiskBox[{5.20923258539038, 1.825860229343444}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$22"], 
               InsetBox["22", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$22", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$22"], 
             TagBox[{
               
               TagBox[DiskBox[{6.2230920649376, 1.853532946373228}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$23"], 
               InsetBox["23", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$23", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$23"], 
             TagBox[{
               
               TagBox[DiskBox[{7.018275452348827, 1.8850423174863593`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$24"], 
               InsetBox["24", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$24", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$24"], 
             TagBox[{
               TagBox[DiskBox[{0., 2.969757672699034}, 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$25"], 
               InsetBox["25", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$25", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$25"], 
             TagBox[{
               
               TagBox[DiskBox[{0.7962595438038962, 2.9662283796204}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$26"], 
               InsetBox["26", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$26", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$26"], 
             TagBox[{
               
               TagBox[DiskBox[{1.8152121266423804`, 2.957150170916938}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$27"], 
               InsetBox["27", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$27", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$27"], 
             TagBox[{
               
               TagBox[DiskBox[{2.941845371514573, 2.9473659711757274`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$28"], 
               InsetBox["28", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$28", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$28"], 
             TagBox[{
               
               TagBox[DiskBox[{4.099422521474114, 2.9416517537927054`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$29"], 
               InsetBox["29", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$29", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$29"], 
             TagBox[{
               
               TagBox[DiskBox[{5.226400944485856, 2.942731318588379}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$30"], 
               InsetBox["30", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$30", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$30"], 
             TagBox[{
               
               TagBox[DiskBox[{6.247239307165243, 2.952977449607692}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$31"], 
               InsetBox["31", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$31", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$31"], 
             TagBox[{
               
               TagBox[DiskBox[{7.045467846679122, 2.9663625020369633`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$32"], 
               InsetBox["32", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$32", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$32"], 
             TagBox[{
               
               TagBox[DiskBox[{0.0014132913108255707`, 4.08151570740521}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$33"], 
               InsetBox["33", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$33", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$33"], 
             TagBox[{
               
               TagBox[DiskBox[{0.7994156625822884, 4.0934216981827385`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$34"], 
               InsetBox["34", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$34", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$34"], 
             TagBox[{
               
               TagBox[DiskBox[{1.820377786154574, 4.103194060485816}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$35"], 
               InsetBox["35", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$35", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$35"], 
             TagBox[{
               
               TagBox[DiskBox[{2.947560526720236, 4.104076472022493}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$36"], 
               InsetBox["36", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$36", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$36"], 
             TagBox[{
               
               TagBox[DiskBox[{4.10458984506599, 4.099215873887336}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$37"], 
               InsetBox["37", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$37", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$37"], 
             TagBox[{
               
               TagBox[DiskBox[{5.231440115833223, 4.089260649271719}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$38"], 
               InsetBox["38", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$38", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$38"], 
             TagBox[{
               
               TagBox[DiskBox[{6.249883584864179, 4.081447784835615}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$39"], 
               InsetBox["39", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$39", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$39"], 
             TagBox[{
               
               TagBox[DiskBox[{7.046003705571104, 4.078853573265827}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$40"], 
               InsetBox["40", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$40", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$40"], 
             TagBox[{
               
               TagBox[DiskBox[{0.029493780122777924`, 5.162262591882113}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$41"], 
               InsetBox["41", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$41", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$41"], 
             TagBox[{
               
               TagBox[DiskBox[{0.8242053610169897, 5.192740422681293}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$42"], 
               InsetBox["42", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$42", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$42"], 
             TagBox[{
               
               TagBox[DiskBox[{1.8379416940429512`, 5.219556273056115}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$43"], 
               InsetBox["43", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$43", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$43"], 
             TagBox[{
               
               TagBox[DiskBox[{2.956755583644602, 5.231276370125073}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$44"], 
               InsetBox["44", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$44", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$44"], 
             TagBox[{
               
               TagBox[DiskBox[{4.102868552240952, 5.2256922762702995`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$45"], 
               InsetBox["45", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$45", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$45"], 
             TagBox[{
               
               TagBox[DiskBox[{5.219547102104561, 5.208339947830645}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$46"], 
               InsetBox["46", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$46", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$46"], 
             TagBox[{
               
               TagBox[DiskBox[{6.23001590367962, 5.185531498177121}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$47"], 
               InsetBox["47", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$47", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$47"], 
             TagBox[{
               TagBox[
                DiskBox[{7.025744856242059, 5.163090845690391}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$48"], 
               InsetBox["48", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$48", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$48"], 
             TagBox[{
               
               TagBox[DiskBox[{0.07388218938936486, 6.14061223830084}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$49"], 
               InsetBox["49", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$49", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$49"], 
             TagBox[{
               
               TagBox[DiskBox[{0.8604284475142463, 6.188879198298061}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$50"], 
               InsetBox["50", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$50", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$50"], 
             TagBox[{
               
               TagBox[DiskBox[{1.86079639017844, 6.230713443556341}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$51"], 
               InsetBox["51", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$51", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$51"], 
             TagBox[{
               
               TagBox[DiskBox[{2.965107457411316, 6.249659933785073}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$52"], 
               InsetBox["52", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$52", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$52"], 
             TagBox[{
               
               TagBox[DiskBox[{4.092247577073321, 6.246728591665827}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$53"], 
               InsetBox["53", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$53", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$53"], 
             TagBox[{
               
               TagBox[DiskBox[{5.190973697759443, 6.222436876292333}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$54"], 
               InsetBox["54", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$54", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$54"], 
             TagBox[{
               
               TagBox[DiskBox[{6.187043636268195, 6.186774095301594}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$55"], 
               InsetBox["55", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$55", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$55"], 
             TagBox[{
               
               TagBox[DiskBox[{6.972384436452371, 6.145650362065212}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$56"], 
               InsetBox["56", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$56", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$56"], 
             TagBox[{
               
               TagBox[DiskBox[{0.13221232012468098`, 6.909387205392488}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$57"], 
               InsetBox["57", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$57", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$57"], 
             TagBox[{
               
               TagBox[DiskBox[{0.9019016983325838, 6.9741877406749015`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$58"], 
               InsetBox["58", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$58", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$58"], 
             TagBox[{
               
               TagBox[DiskBox[{1.8834364829047534`, 7.026500415238315}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$59"], 
               InsetBox["59", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$59", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$59"], 
             TagBox[{
               
               TagBox[DiskBox[{2.9665966030538424`, 7.0458749615822995`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$60"], 
               InsetBox["60", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$60", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$60"], 
             TagBox[{
               
               TagBox[DiskBox[{4.078501357806809, 7.0451716606616985`}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$61"], 
               InsetBox["61", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$61", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$61"], 
             TagBox[{
               
               TagBox[DiskBox[{5.15889129758028, 7.017965815369957}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$62"], 
               InsetBox["62", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$62", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$62"], 
             TagBox[{
               
               TagBox[DiskBox[{6.137256815144786, 6.973972586289458}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$63"], 
               InsetBox["63", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$63", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$63"], 
             TagBox[{
               
               TagBox[DiskBox[{6.90620565056069, 6.9159471347383}, 
                 0.038549233266641066],
                "DynamicName",
                BoxID -> "VertexID$64"], 
               InsetBox["64", 
                Offset[{2, 2}, DynamicLocation[
                 "VertexID$64", Automatic, {Right, Top}]], ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$64"]}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->"NetworkGraphics",
       FormatType->TraditionalForm,
       FrameTicks->None,
       ImageSize->300,
       PlotLabel->FormBox["\"8\[Times]8 Mesh (64 hosts)\"", TraditionalForm]],
      
      TraditionalForm], {600., -206.325}, {Center, Center}, {375., 393.},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
  ImageSize->Full,
  PlotRange->{{0, 800.}, {-412.65, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.9620798186768436`*^9, 3.962079831708888*^9}, 
   3.9620799624182987`*^9, 3.962079993183506*^9, 3.9620800342069263`*^9, 
   3.9620800857046633`*^9, 3.9620801410601254`*^9, {3.9620801712369328`*^9, 
   3.962080190495453*^9}, {3.96208029037223*^9, 3.962080292625256*^9}},
 CellLabel->
  "Out[2779]=",ExpressionUUID->"7f598e00-84bb-436e-9d7e-656c220de77b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nb", " ", "=", " ", 
   RowBox[{"EvaluationNotebook", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"nb", ",", " ", 
    RowBox[{"StyleDefinitions", " ", "->", " ", "\"\<Default.nb\>\""}], ",", 
    " ", "\n", "  ", 
    RowBox[{"DefaultNewCellStyle", " ", "->", " ", "\"\<Input\>\""}], ",", 
    " ", 
    RowBox[{"Background", " ", "->", " ", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"OptionRemove", "[", 
   RowBox[{"nb", ",", " ", "Background"}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.9620802643144493`*^9, 3.962080264318014*^9}},
 CellLabel->
  "In[2719]:=",ExpressionUUID->"02c257de-cc4a-4ca2-995d-55ef875080ee"]
},
WindowSize->{1391, 858},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrivateNotebookOptions->{"CloudPublishPath"->"/Published/dean-gladish-final-\
notebook.nb"},
DefaultNewCellStyle->"Input",
Background->RGBColor[0.1, 0.1, 0.1],
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["DarkStyle for Notebooks", "Title"], 
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Tongue menu cells", "Section"], 
         Cell[
          StyleData[
          "WolframAlphaShort", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "WolframAlphaLong", "Backspace" -> "Input"}, EvaluationMode -> 
          "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaShortInput", StyleDefinitions -> StyleData["Input"]], 
          EvaluationMode -> "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> RGBColor[0, 0.7, 1]]], 
              CellBaseline -> Baseline], None}, {None, None}}, ShowCodeAssist -> 
          False, FormatType -> TextForm, FontFamily -> "Helvetica"], 
         Cell[
          StyleData[
          "WolframAlphaLong", StyleDefinitions -> StyleData["Input"]], 
          StyleKeyMapping -> {
           "=" -> "Input", "Backspace" -> "WolframAlphaShort"}, 
          EvaluationMode -> "WolframAlphaLong", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[WolframAlphaPrompt]", FontColor -> RGBColor[0, 0.7, 1]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, 
          ShowCodeAssist -> False, FormatType -> TextForm, FontFamily -> 
          "Helvetica"], 
         Cell[
          StyleData["WolframAlphaFullOutput"], 
          CellMargins -> {{20, 10}, {Inherited, Inherited}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExternalLanguage"], CellFrame -> 1, 
             CellMargins -> {{66, 10}, {8, 8}}, 
             StyleKeyMapping -> {"Backspace" -> "Input"}, Evaluatable -> True,
              EvaluationMode -> "ExternalLanguage", CellGroupingRules -> 
             "InputGrouping", StripStyleOnPaste -> True, 
             CellEvaluationLanguage -> "Python", 
             CellFrameMargins -> {{4, 8}, {8, 8}}, CellFrameColor -> 
             RGBColor[0.2549, 0.23137, 0.42549], CellFrameLabels -> {{
                Cell[
                 BoxData[
                  DynamicBox[
                   ToBoxes[
                   ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged; 
                    FrontEnd`Private`MakeExternalLanguageMenu[
                    ExternalEvaluate`FE`GetDefaultCellEvaluationLanguage[], 
                    ExternalEvaluate`FE`GetExternalLanguageMenuData[]], 
                    StandardForm], 
                   TrackedSymbols :> {
                    ExternalEvaluate`FE`$ExternalLanguageMenuDataChanged}, 
                   ImageSizeCache -> {
                    35., {10.64208984375, 17.35791015625}}]], "Output", 
                 Background -> None, CellFrame -> 0], None}, {None, None}}, 
             CellFrameLabelMargins -> 0, AllowInlineCells -> False, 
             Hyphenation -> False, AutoQuoteCharacters -> {}, 
             PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Formula", 
             ScriptLevel -> 1, MenuSortingValue -> 1800, FontFamily -> Dynamic[
               CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
             FontColor -> GrayLevel[0.97], Background -> 
             RGBColor[0.18, 0.172, 0.22]], 
            Cell[
             StyleData["ExternalLanguage", "Presentation"], 
             CellMargins -> {{101, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "SlideShow"], ShowGroupOpener -> 
             False, CellMargins -> {{110, 10}, {8, 15}}, FontSize -> 18], 
            Cell[
             StyleData["ExternalLanguage", "Printout"], 
             CellMargins -> {{48, 10}, {8, 8}}, 
             CellFrameMargins -> {{2, 8}, {8, 8}}]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Notebook options settings", "Section"], 
         Cell[
          StyleData[All, "Working"], InitializationCellEvaluation -> False, 
          DockedCells -> None, DefaultNewCellStyle -> "Code", 
          ShowPredictiveInterface -> False], 
         Cell[
          StyleData["Notebook"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0., 0.8, 1], "HoverColor" -> 
            RGBColor[0.78, 0.64, 1], "Thickness" -> 1.3, "Widths" -> {2, 8}}, 
          StyleKeyMapping -> {
           "==" -> "WolframAlphaLong", "Backspace" -> "WolframAlphaShort", 
            "=" -> "WolframAlphaShort", "*" -> "Item", ">" -> 
            "ExternalLanguage", "Backspace" -> "Code"}, 
          AutoStyleOptions -> {
           "CommentStyle" -> {
             FontColor -> RGBColor[0.89, 0.56, 1., 0.95], ShowAutoStyles -> 
              False, ShowSyntaxStyles -> False, AutoNumberFormatting -> 
              False}, "ExcessArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "FunctionLocalVariableStyle" -> {
             FontColor -> RGBColor[0.52549, 0.843137, 1.]}, 
            "GraphicsCompatibilityProblemStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "LocalScopeConflictStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "LocalVariableStyle" -> {
             FontColor -> RGBColor[0., 0.8200000000000001, 0.32]}, 
            "MissingArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "MisspelledWordStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "NoKernelPresentStyle" -> {
             FontColor -> 
              RGBColor[
               0.16470588235294117`, 0.6313725490196078, 0.596078431372549]}, 
            "PatternVariableStyle" -> {
             FontColor -> RGBColor[0.11, 1., 0.08], FontSlant -> "Italic"}, 
            "StringStyle" -> {
             FontColor -> RGBColor[0.98, 0.71, 0.], ShowAutoStyles -> False, 
              ShowSyntaxStyles -> False, AutoNumberFormatting -> False}, 
            "UndefinedSymbolStyle" -> {FontColor -> RGBColor[0.42, 0.94, 1]}, 
            "UnknownOptionStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "UnwantedAssignmentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 
                0.1843137254901961]}}, 
          CodeAssistOptions -> {
           "AutoConvertEnable" -> False, 
            "HeadHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}, "MatchHighlightStyle" -> {
             Background -> None, FontColor -> RGBColor[1, 1, 0], FontWeight -> 
              Bold}}, TranslationOptions -> {"Language" -> None}, FontColor -> 
          RGBColor[0, 0.7, 1], Background -> GrayLevel[0.15]], 
         Cell[
          StyleData["DialogStyle"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["NotebookObject"], FontColor -> RGBColor[0, 0.7, 1]], 
         Cell[
          StyleData["LinguisticAssistant"], FontColor -> 
          RGBColor[0, 0.7, 1]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Title and Section Cells", "Section"], 
         Cell[
          StyleData["Title"], FontColor -> GrayLevel[1]], 
         Cell[
          StyleData["Chapter"], FontColor -> RGBColor[0.8, 0.8, 0.8]], 
         Cell[
          StyleData["Subchapter"], FontColor -> RGBColor[0.65, 0.05, 0.65]], 
         Cell[
          StyleData["Subtitle"], FontColor -> 
          RGBColor[0.196078, 0.694118, 0.862745]], 
         Cell[
          StyleData["Subsubtitle"], FontColor -> 
          RGBColor[0.196078, 0.394118, 0.562745]], 
         Cell[
          StyleData["Subsubtitle"]], 
         Cell[
          StyleData["Section"], FontColor -> 
          RGBColor[
           0.1399099717708095, 0.5224231326771954, 0.6501869230182346]], 
         Cell[
          StyleData["Subsection"], FontColor -> GrayLevel[0.749996]], 
         Cell[
          StyleData["Subsubsection"], FontColor -> 
          RGBColor[0.823529, 0.490654, 0.202274]], 
         Cell[
          StyleData["Subsubsubsection"], FontColor -> 
          RGBColor[0.954147, 0.694224, 0.124651]], 
         Cell[
          StyleData["Subsubsubsubsection"], FontColor -> 
          RGBColor[0.913237, 0.365469, 0.0854353]], 
         Cell[
          StyleData["Text"], FontFamily -> "Gill Sans Light", FontSize -> 14, 
          FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0.683803]], 
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[0, 0.7, 1]], CellMargins -> {{81, 10}, {4, 8}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "Subitem", "*" -> "Subitem"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "Item", 
          CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, 
          MenuSortingValue -> 1600, FontFamily -> "Source Sans Pro", FontSize -> 
          15], 
         Cell[
          StyleData["ItemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["SubsubitemParagraph"], FontColor -> GrayLevel[0.6]], 
         Cell[
          CellGroupData[{
            Cell["Chapter", "Subsection"], 
            Cell[
             StyleData["Chapter"], CounterIncrements -> "Chapter", 
             CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
               "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {
               "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1150, 
             MenuCommandKey :> "2"], 
            Cell[
             StyleData["Subchapter"], CellDingbat -> 
             StyleBox["\[MathematicaIcon]", Alignment -> Baseline, 
               RGBColor[0., 0.043, 0.9]], CounterIncrements -> "Subchapter", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 1200, 
             MenuCommandKey :> "3"]}, Open]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Input and Output cells", "Section"], 
         Cell[
          StyleData["Code"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontWeight -> Plain, FontColor -> GrayLevel[1], 
          Background -> GrayLevel[0.1]], 
         Cell[
          StyleData["InitializationCell"], 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellFrameMargins -> {{10, 10}, {5, 5}}, CellFrameLabelMargins -> -5,
           FontColor -> GrayLevel[1], Background -> GrayLevel[0.25]], 
         Cell[
          StyleData["Input"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabelMargins -> {{17, Inherited}, {Inherited, Inherited}}, 
          FontSize -> 13, FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["Output"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontSize -> 13], 
         
         Cell[
          StyleData["Message"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          RGBColor[
           0.704600595101854, 0.24277103837644007`, 0.22278171969176777`]], 
         Cell[
          StyleData["Print"], CellFrame -> True, 
          CellMargins -> {{55, Inherited}, {Inherited, Inherited}}, 
          CellLabelStyle -> {"CellLabel", FontColor -> GrayLevel[0.78]}, 
          CellFrameMargins -> {{10, 0}, {0, 0}}, CellFrameStyle -> {
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             GrayLevel[1, 0]], 
            Directive[
             RGBColor[0.45, 0.45, 0.95], 
             Thickness[1], 
             Dashing[{4, 6}]]}, CellFrameLabelMargins -> -5, FontColor -> 
          GrayLevel[0.3]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["misc", "Section"], 
         Cell[
          StyleData["InformationCell"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.760174, 0.600641, 0.675288]}, FontColor -> 
          GrayLevel[0.3]], 
         Cell[
          StyleData["InformationLink"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["InformationLinkLF"], FontColor -> 
          RGBColor[0.4525, 0.48138, 0.7]], 
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontSize -> 9]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Formulas and Programming", "Section"], 
         Cell[
          StyleData["DisplayFormula"], FontColor -> GrayLevel[0.85]], 
         Cell[
          StyleData["DisplayFormulaNumbered"], FontColor -> GrayLevel[0.85]], 
         
         Cell[
          StyleData["Program"], CellFrameColor -> GrayLevel[0.4]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          TextData[{"Styles for ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " System\[Hyphen]specific Elements"}], "Section", 
          CellChangeTimes -> {{3.601920784160323*^9, 3.60192078489342*^9}, 
            3.60356525124664*^9, {3.603711768164369*^9, 
            3.6037117683195896`*^9}}], 
         Cell[
          CellGroupData[{
            Cell["FormatType Styles", "Subsection"], 
            Cell[
             StyleData["StandardForm"]], 
            Cell[
             StyleData["CellExpression"], FontColor -> GrayLevel[0], 
             Background -> GrayLevel[0.75]], 
            Cell[
             StyleData["CellLabel"], FontSize -> 9, FontColor -> 
             RGBColor[0.603861, 0.615915, 0.607843]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
            "Graphics Styles", "Subsection", 
             CellChangeTimes -> {{3.603565272271762*^9, 
              3.603565284491351*^9}}], 
            Cell[
             StyleData["GraphicsAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["GraphicsFrame"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Avenir", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]], 
            Cell[
             StyleData["Graphics3DAxes"], LineColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078], 
             FontFamily -> "Arial", FontSize -> 9, FontWeight -> "Plain", 
             FontSlant -> "Plain", FontColor -> 
             RGBColor[
              0.5764705882352941, 0.6313725490196078, 0.6313725490196078]]}, 
           Open]]}, Open]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "14.0 for Mac OS X ARM (64-bit) (December 12, 2023)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"85124140-6cd2-417c-bf9a-22bbf713b0b7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 582, 17, 105, "Input",ExpressionUUID->"6328b647-aef5-4857-9d03-d1caaf65b2af"],
Cell[1143, 39, 666, 10, 162, "Code",ExpressionUUID->"137da4c0-88e7-4d43-907d-bd24ccfb4bf5"],
Cell[CellGroupData[{
Cell[1834, 53, 17714, 449, 232, "Code",ExpressionUUID->"2d313e57-2e36-4915-a463-9cc710d7cf8c"],
Cell[19551, 504, 6996, 152, 1318, "Output",ExpressionUUID->"366486a9-fc37-41b1-a36b-0dd57c3466b8"]
}, Open  ]],
Cell[26562, 659, 247874, 4069, 1440, "Input",ExpressionUUID->"edaa4611-e7c0-4c41-9388-867897e9c4bb"],
Cell[CellGroupData[{
Cell[274461, 4732, 23376, 653, 705, "Code",ExpressionUUID->"dce894fa-a1b3-48c7-b092-d13292e82a71"],
Cell[297840, 5387, 15666, 341, 586, "Output",ExpressionUUID->"02058f8a-f51b-4eed-b852-5f86f0ddeb8d"]
}, Open  ]],
Cell[313521, 5731, 224358, 3683, 666, "Input",ExpressionUUID->"578b47b4-84dc-45c9-8a2e-b7dd0529b13d"],
Cell[CellGroupData[{
Cell[537904, 9418, 17319, 425, 187, "Code",ExpressionUUID->"8e3696f5-bcbf-43ca-b573-df7c60f6588a"],
Cell[555226, 9845, 20555, 397, 1021, "Output",ExpressionUUID->"d38b26ae-5d88-47ad-a493-5f8105f63e55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[575818, 10247, 14628, 360, 170, "Code",ExpressionUUID->"c5e4e1d5-8b9c-4981-a3c6-c97630ddfb7c"],
Cell[590449, 10609, 8052, 163, 607, "Output",ExpressionUUID->"7caa2329-bfad-4666-9ded-e380f6a7cbf4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[598538, 10777, 12294, 310, 149, "Code",ExpressionUUID->"ac9c1d7c-e84c-4fd9-9279-64f42dea01d7"],
Cell[610835, 11089, 4513, 83, 820, "Output",ExpressionUUID->"ae739fc4-656b-43b9-a972-98e9ef1b10ba"]
}, Open  ]],
Cell[615363, 11175, 264618, 4343, 1012, "Input",ExpressionUUID->"8c8219cc-3e0e-40ec-b219-77efd20207c3"],
Cell[CellGroupData[{
Cell[880006, 15522, 16326, 431, 670, "Code",ExpressionUUID->"e5bbbefa-6765-470a-988f-a980298f3285"],
Cell[896335, 15955, 16770, 334, 937, "Output",ExpressionUUID->"66e17c35-28eb-4aa0-8190-1c4ed9c87264"],
Cell[913108, 16291, 3270, 78, 600, "Output",ExpressionUUID->"34bff148-76e2-4007-84d3-477a08414354"],
Cell[916381, 16371, 2311, 52, 217, "Output",ExpressionUUID->"b0e7e28d-d3d9-4f43-9a69-52003a83cc90"],
Cell[918695, 16425, 3285, 78, 586, "Output",ExpressionUUID->"87fb3fbd-5a62-4389-b4b7-891adf146379"],
Cell[921983, 16505, 16672, 386, 537, "Output",ExpressionUUID->"50ef6dbe-c5e9-4826-ba58-73a7b08f3e2a"],
Cell[938658, 16893, 41477, 882, 2019, "Output",ExpressionUUID->"359d89f6-cb47-4867-89ec-75ac7d3423fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[980172, 17780, 4149, 115, 318, "Code",ExpressionUUID->"8ba0bc94-dcb7-43b7-ade3-43c1822157b9"],
Cell[984324, 17897, 40583, 880, 495, "Output",ExpressionUUID->"e8910d05-fdec-4fb8-839d-f7ab090a7c0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1024944, 18782, 3905, 116, 391, "Code",ExpressionUUID->"6d01b87a-e4f2-4423-84cd-5a4fa8c52c9a"],
Cell[1028852, 18900, 29487, 676, 495, "Output",ExpressionUUID->"b5612d16-a89c-4ccb-8bad-41022ed33aa2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1058376, 19581, 10439, 296, 479, "Code",ExpressionUUID->"38cc635c-8963-43f6-bd88-c861ac3dca09"],
Cell[1068818, 19879, 40502, 828, 979, "Output",ExpressionUUID->"eefcbcc7-2a4b-4965-8b9c-d70fa783a5a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1109357, 20712, 2565, 60, 134, "Code",ExpressionUUID->"c81520df-6d2b-4cf5-aefd-33c1540804b5"],
Cell[1111925, 20774, 63778, 1523, 596, "Output",ExpressionUUID->"c8ccc14f-eeab-45bf-8370-236ef84ac05e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1175740, 22302, 1661, 46, 111, "Code",ExpressionUUID->"db97ffe4-690c-4f52-8195-7b22ee4c4f7d"],
Cell[1177404, 22350, 26887, 614, 587, "Output",ExpressionUUID->"8a8b4030-a52f-4e76-90c8-2f6401b6eaa1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1204328, 22969, 1881, 55, 134, "Code",ExpressionUUID->"2849961a-9fb6-44db-91dd-18fceea29fd0"],
Cell[1206212, 23026, 41756, 1023, 597, "Output",ExpressionUUID->"cee147ed-7ead-43af-aa10-f54d7bbf1012"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1248005, 24054, 4662, 141, 226, "Code",ExpressionUUID->"27c88476-bb96-4358-aeaa-accbdfc7920f"],
Cell[1252670, 24197, 13319, 277, 891, "Output",ExpressionUUID->"81651eb0-bf34-460e-8248-b683c3011563"],
Cell[CellGroupData[{
Cell[1266014, 24478, 23366, 543, 486, "Print",ExpressionUUID->"53014771-8387-46b8-91cd-ee020c68eae8"],
Cell[1289383, 25023, 546, 9, 52, "Print",ExpressionUUID->"4e2c6039-45f9-473f-8779-704b2711f848"],
Cell[1289932, 25034, 43274, 957, 314, "Print",ExpressionUUID->"039c4220-ca04-47c1-ac30-40bd70d66154"],
Cell[1333209, 25993, 532, 8, 52, "Print",ExpressionUUID->"a312428d-55bd-493c-bd46-522440029645"],
Cell[1333744, 26003, 11330, 220, 71, "Print",ExpressionUUID->"220ae3f0-3e95-4ea0-930f-60ddf6e3879d"],
Cell[1345077, 26225, 470, 8, 52, "Print",ExpressionUUID->"95f8e6eb-8cac-46e0-aba8-7b422597c39d"],
Cell[1345550, 26235, 287, 5, 52, "Print",ExpressionUUID->"dc671d2f-5b2a-42b0-b6ac-727384ef7e64"],
Cell[1345840, 26242, 560, 14, 28, "Print",ExpressionUUID->"8478d937-dee0-47f8-8756-f3a335e2ef5d"],
Cell[1346403, 26258, 452, 10, 28, "Print",ExpressionUUID->"f5194def-1d33-4dd5-94d1-5df0670b382c"],
Cell[1346858, 26270, 417, 7, 28, "Print",ExpressionUUID->"867a4bbf-2c8e-484b-8b92-10691a430702"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1347324, 26283, 20387, 551, 1058, "Code",ExpressionUUID->"88ee93e8-05da-4ac7-932d-19071116815d"],
Cell[CellGroupData[{
Cell[1367736, 26838, 23272, 542, 486, "Print",ExpressionUUID->"ff8f7ca7-8dc1-4221-94c5-6e92e6db2ea0"],
Cell[1391011, 27382, 525, 9, 52, "Print",ExpressionUUID->"ab635fe4-8ef2-431a-a0b3-275afbcb2508"],
Cell[1391539, 27393, 39915, 868, 309, "Print",ExpressionUUID->"23b72e37-6af8-408f-ad54-4e96977dd80e"],
Cell[1431457, 28263, 511, 8, 52, "Print",ExpressionUUID->"32125c5e-3af3-48ed-ab6a-aaf794ddb501"],
Cell[1431971, 28273, 15823, 298, 352, "Print",ExpressionUUID->"864601c6-db1f-4696-911b-3519d2b8dad8"],
Cell[1447797, 28573, 449, 8, 52, "Print",ExpressionUUID->"c26bc269-0bb1-45de-b8bc-cb045b3180f0"],
Cell[1448249, 28583, 266, 5, 52, "Print",ExpressionUUID->"6d4fc3fb-c32b-4478-9f89-8ce7174d7905"],
Cell[1448518, 28590, 638, 18, 28, "Print",ExpressionUUID->"dc642cb2-10d2-4758-ba34-66417b88dc45"],
Cell[1449159, 28610, 601, 18, 28, "Print",ExpressionUUID->"34ddfef9-ec63-4db0-946f-f76bdfb0ad03"],
Cell[1449763, 28630, 396, 7, 28, "Print",ExpressionUUID->"7096b437-ca43-4702-9ed2-6fac22366755"],
Cell[1450162, 28639, 264, 5, 52, "Print",ExpressionUUID->"bc0ad3ed-a44b-40d2-a8c9-d7624d98365c"],
Cell[1450429, 28646, 14320, 334, 502, "Print",ExpressionUUID->"4cd3a585-f947-4ade-8cac-b00ff072ee54"],
Cell[1464752, 28982, 602, 10, 52, "Print",ExpressionUUID->"a4385f26-7959-47bf-8a0c-20ad0a2293a5"],
Cell[1465357, 28994, 85826, 1700, 777, "Print",ExpressionUUID->"0919aa83-e65f-4bb1-a752-d8d04236af48"],
Cell[1551186, 30696, 38162, 700, 171, "Print",ExpressionUUID->"c9180561-8d98-43d9-8858-31df271008c1"],
Cell[1589351, 31398, 202738, 4334, 559, "Print",ExpressionUUID->"72b8f456-35a0-4735-9ea3-887b4d4eec60"],
Cell[1792092, 35734, 21630, 501, 561, "Print",ExpressionUUID->"29bb234b-2d94-4b44-9f04-2d7c4ce33a86"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1813771, 36241, 11472, 324, 745, "Code",ExpressionUUID->"ce4f6ac2-b06d-4284-92ee-a600fa45f953"],
Cell[CellGroupData[{
Cell[1825268, 36569, 86048, 1703, 777, "Print",ExpressionUUID->"b3da0d36-8009-4bba-b754-a3113fd8c838"],
Cell[1911319, 38274, 38382, 703, 171, "Print",ExpressionUUID->"068625c9-6efa-4ef3-b33b-662a95df20aa"],
Cell[1949704, 38979, 24541, 551, 559, "Print",ExpressionUUID->"2d986348-978a-45c4-93ac-099522d61233"],
Cell[1974248, 39532, 26079, 605, 565, "Print",ExpressionUUID->"2dc39aa0-5288-42a0-bbdf-ba785ff18d85"]
}, Open  ]],
Cell[2000342, 40140, 322925, 7539, 694, "Output",ExpressionUUID->"7f598e00-84bb-436e-9d7e-656c220de77b"]
}, Open  ]],
Cell[2323282, 47682, 712, 17, 134, "Code",ExpressionUUID->"02c257de-cc4a-4ca2-995d-55ef875080ee"]
}
]
*)

