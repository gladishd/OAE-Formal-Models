(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3005904,      58795]
NotebookOptionsPosition[   2988634,      58518]
NotebookOutlinePosition[   2989871,      58559]
CellTagsIndexPosition[   2989828,      58556]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Agents of the Ether: Simulating 1976 Half-Duplex Ethernet", "Title",
 CellChangeTimes->{{3.95857317347138*^9, 3.958573179999469*^9}, {
   3.958573457152139*^9, 3.958573463193805*^9}, {3.9586135231324987`*^9, 
   3.9586135253591948`*^9}, {3.958966278129303*^9, 3.958966299014143*^9}, 
   3.959049249573244*^9},ExpressionUUID->"bc593cea-61af-482c-9ea4-\
5153e19163cd"],

Cell["\<\
The provided image and accompanying Mathematica code describe an interactive \
visualization tool for exploring the evolution of quantum states, \
specifically within the framework of Spekkens\[CloseCurlyQuote] toy model of \
quantum mechanics. At its core, the application allows users to select two \
initial \[OpenCurlyDoubleQuote]Spekkens States,\[CloseCurlyDoubleQuote] \
represented by 2\[Times]2 grids of binary values ($0$s and $1$s). These \
individual states are then combined using a Kronecker product to form a \
\[OpenCurlyDoubleQuote]Composite State,\[CloseCurlyDoubleQuote] visually \
depicted as a larger 4\[Times]4 grid. This composite state serves as the \
starting point for a graph-based representation of state evolution.\
\>", "Text",
 CellChangeTimes->{{3.7957339347991047`*^9, 3.795733960727629*^9}, {
   3.795734060841821*^9, 3.795734076879506*^9}, {3.795736738276991*^9, 
   3.795736905399611*^9}, {3.958573473111307*^9, 3.958573483323358*^9}, {
   3.958613527956383*^9, 3.958613535444672*^9}, 3.958966905636294*^9, {
   3.95904929963282*^9, 
   3.959049300213477*^9}},ExpressionUUID->"ceb3649d-ee0d-4ab7-bf28-\
b20085e91f33"],

Cell["\<\
The interactive nature of the tool is facilitated by several controls. Users \
can independently select First State and Second State from a predefined set \
of six Spekkens states using setter bars, observing their immediate visual \
representation and the resulting Composite State. A Permutation Set dropdown \
allows switching between a \[OpenCurlyDoubleQuote]Restricted\
\[CloseCurlyDoubleQuote] set of Spekkens permutations and \
\[OpenCurlyDoubleQuote]All Permutations\[CloseCurlyDoubleQuote] of four \
elements. Crucially, the Evolution Depth slider dictates how many steps of \
permutation application are shown in the state evolution graph, allowing for \
the visualization of the reachability of different states from the initial \
composite state.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958608776558442*^9, 3.958608834571664*^9}, {
   3.958608876756978*^9, 3.958608878488927*^9}, 3.958966519313614*^9, {
   3.959049302919918*^9, 
   3.959049305574438*^9}},ExpressionUUID->"35eb7c81-6d54-472b-a72f-\
16660ebe4ce7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AllPermutations", "=", 
   RowBox[{"PermutationCycles", "/@", 
    RowBox[{"Permutations", "[", 
     RowBox[{"Range", "[", "4", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StatePlot", "[", "state_", "]"}], ":=", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{"state", ",", "2"}], "]"}], ",", 
     RowBox[{"Mesh", "->", "True"}], ",", 
     RowBox[{"ImageSize", "->", "50"}], ",", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"Style", "[", 
       RowBox[{"state", ",", "8", ",", 
        RowBox[{"FontFamily", "->", "\"\<Source Code Pro\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"ColorRules", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "->", 
         RowBox[{"Hue", "[", 
          RowBox[{"0.62", ",", "1", ",", "1"}], "]"}]}], ",", 
        RowBox[{"0", "->", 
         RowBox[{"GrayLevel", "[", "0.95", "]"}]}], ",", 
        RowBox[{"2", "->", 
         RowBox[{"Hue", "[", 
          RowBox[{"0.12", ",", "1", ",", "1"}], "]"}]}]}], "}"}]}]}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CompositeStatePlot", "[", 
    RowBox[{"state1_", ",", "state2_"}], "]"}], ":=", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"state1", ",", "state2"}], "]"}], ",", "4"}], "]"}], ",", 
     RowBox[{"Mesh", "->", "True"}], ",", 
     RowBox[{"ImageSize", "->", "80"}], ",", 
     RowBox[{"ColorRules", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "->", 
         RowBox[{"Hue", "[", 
          RowBox[{"0.62", ",", "1", ",", "1"}], "]"}]}], ",", 
        RowBox[{"0", "->", 
         RowBox[{"GrayLevel", "[", "0.95", "]"}]}], ",", 
        RowBox[{"2", "->", 
         RowBox[{"Hue", "[", 
          RowBox[{"0.12", ",", "1", ",", "1"}], "]"}]}]}], "}"}]}]}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StateEvolutionGraph", "[", 
    RowBox[{"initial_", ",", "perms_", ",", "depth_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"graph", ",", "vertexCoords"}], "}"}], ",", 
     RowBox[{
      RowBox[{"graph", "=", 
       RowBox[{"NestGraph", "[", 
        RowBox[{
         RowBox[{"state", "|->", 
          RowBox[{"DeleteDuplicates", "@", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Permute", "[", 
                RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", "perms"}], 
             ",", 
             RowBox[{"{", "state", "}"}]}], "]"}]}]}], ",", "initial", ",", 
         "depth", ",", 
         RowBox[{"VertexLabels", "->", 
          RowBox[{"Placed", "[", 
           RowBox[{"\"\<Name\>\"", ",", "Tooltip"}], "]"}]}], ",", 
         RowBox[{"GraphLayout", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<LayeredEmbedding\>\"", ",", 
            RowBox[{"\"\<RootVertex\>\"", "->", "1"}]}], "}"}]}], ",", 
         RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}]}], "]"}]}], ";",
       "\n", 
      RowBox[{"vertexCoords", "=", 
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"VertexList", "[", "graph", "]"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "2"}], "]"}], "]"}], "+", 
             RowBox[{"RandomReal", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], ",", "2"}], 
              "]"}]}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Normalize", "/@", 
             RowBox[{"VertexList", "[", "graph", "]"}]}], ")"}]}], ")"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"VertexList", "[", "graph", "]"}], ",", 
        RowBox[{"EdgeList", "[", "graph", "]"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{"v_", ":>", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"StatePlot", "[", "v", "]"}], ",", "Center"}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"VertexSize", "->", "0.3"}], ",", 
        RowBox[{"VertexCoordinates", "->", "vertexCoords"}], ",", 
        RowBox[{"EdgeStyle", "->", 
         RowBox[{"Directive", "[", 
          RowBox[{"Gray", ",", 
           RowBox[{"Thickness", "[", "0.003", "]"}]}], "]"}]}], ",", 
        RowBox[{"GraphStyle", "->", "\"\<BasicBlack\>\""}], ",", 
        RowBox[{"ImageSize", "->", "600"}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "baseState1", ",", "baseState2", ",", "compositeState", ",", 
       "evolutionGraph"}], "}"}], ",", 
     RowBox[{
      RowBox[{"baseState1", "=", 
       RowBox[{"SpekkensStates", "[", 
        RowBox[{"[", "state1Idx", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"baseState2", "=", 
       RowBox[{"SpekkensStates", "[", 
        RowBox[{"[", "state2Idx", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"compositeState", "=", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"baseState1", ",", "baseState2"}], "]"}]}], ";", "\n", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<State 1\>\"", ",", "Bold", ",", 
                 RowBox[{"Darker", "@", 
                  RowBox[{"Hue", "[", "0.62", "]"}]}]}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<State 2\>\"", ",", "Bold", ",", 
                 RowBox[{"Darker", "@", 
                  RowBox[{"Hue", "[", "0.12", "]"}]}]}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Composite State\>\"", ",", "Bold", ",", 
                 RowBox[{"Darker", "[", "Gray", "]"}]}], "]"}]}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{
               RowBox[{"StatePlot", "[", "baseState1", "]"}], ",", 
               RowBox[{"StatePlot", "[", "baseState2", "]"}], ",", 
               RowBox[{"CompositeStatePlot", "[", 
                RowBox[{"baseState1", ",", "baseState2"}], "]"}]}], "}"}]}], 
            "}"}], ",", 
           RowBox[{"Alignment", "->", "Center"}], ",", 
           RowBox[{"Spacings", "->", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Spacer", "[", "20", "]"}], ",", 
         RowBox[{"StateEvolutionGraph", "[", 
          RowBox[{"compositeState", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"permType", "==", "\"\<Spekkens\>\""}], ",", 
             "SpekkensPermutations", ",", "AllPermutations"}], "]"}], ",", 
           "depth"}], "]"}]}], "}"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"state1Idx", ",", "1", ",", "\"\<First State\>\""}], "}"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Range", "[", "6", "]"}], "->", 
       RowBox[{"(", 
        RowBox[{"StatePlot", "/@", "SpekkensStates"}], ")"}]}], "]"}], ",", 
     RowBox[{"ControlType", "->", "SetterBar"}], ",", 
     RowBox[{"Appearance", "->", "\"\<Horizontal\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"state2Idx", ",", "2", ",", "\"\<Second State\>\""}], "}"}], 
     ",", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Range", "[", "6", "]"}], "->", 
       RowBox[{"(", 
        RowBox[{"StatePlot", "/@", "SpekkensStates"}], ")"}]}], "]"}], ",", 
     RowBox[{"ControlType", "->", "SetterBar"}], ",", 
     RowBox[{"Appearance", "->", "\"\<Horizontal\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "permType", ",", "\"\<Spekkens\>\"", ",", "\"\<Permutation Set\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Spekkens\>\"", "->", "\"\<Restricted\>\""}], ",", 
       RowBox[{"\"\<All\>\"", "->", "\"\<All Permutations\>\""}]}], "}"}], 
     ",", 
     RowBox[{"ControlType", "->", "PopupMenu"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"depth", ",", "2", ",", "\"\<Evolution Depth\>\""}], "}"}], ",",
      "1", ",", "4", ",", "1", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"ControlPlacement", "->", "Top"}], ",", 
   RowBox[{"FrameMargins", "->", "10"}], ",", 
   RowBox[{"Paneled", "->", "True"}], ",", 
   RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958972722273654*^9, 3.9589727222751513`*^9}, {
  3.9590493104259872`*^9, 3.959049314688465*^9}},
 CellLabel->
  "In[3010]:=",ExpressionUUID->"17b64f77-f8b3-4d97-9344-3bf912b2dca5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`depth$$ = 2, $CellContext`permType$$ = 
    "Spekkens", $CellContext`state1Idx$$ = 1, $CellContext`state2Idx$$ = 2, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`state1Idx$$], 1, "First State"}, {1 -> Graphics[{
          
          Raster[{{{0.95, 0.95, 0.95}, {0.95, 0.95, 0.95}}, {{0., 
           0.28000000000000025`, 1.}, {0., 0.28000000000000025`, 1.}}}, {{0, 
           0}, {2, 2}}, {0, 1}], {{Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
           Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
         BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
         FrameStyle -> Directive[
           Thickness[Tiny], 
           GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 50, 
         Method -> {
          "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
         Style[{1, 1, 0, 0}, 8, FontFamily -> "Source Code Pro"]], 2 -> 
       Graphics[{
          
          Raster[{{{0., 0.28000000000000025`, 1.}, {0., 0.28000000000000025`, 
           1.}}, {{0.95, 0.95, 0.95}, {0.95, 0.95, 0.95}}}, {{0, 0}, {2, 
           2}}, {0, 1}], {{Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
           Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
         BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
         FrameStyle -> Directive[
           Thickness[Tiny], 
           GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 50, 
         Method -> {
          "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
         Style[{0, 0, 1, 1}, 8, FontFamily -> "Source Code Pro"]], 3 -> 
       Graphics[{
          
          Raster[{{{0., 0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}, {{0., 
           0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}}, {{0, 0}, {2, 
           2}}, {0, 1}], {{Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
           Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
         BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
         FrameStyle -> Directive[
           Thickness[Tiny], 
           GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 50, 
         Method -> {
          "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
         Style[{1, 0, 1, 0}, 8, FontFamily -> "Source Code Pro"]], 4 -> 
       Graphics[{
          
          Raster[{{{0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}, {{
           0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}}, {{0, 0}, {2, 
           2}}, {0, 1}], {{Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
           Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
         BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
         FrameStyle -> Directive[
           Thickness[Tiny], 
           GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 50, 
         Method -> {
          "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
         Style[{0, 1, 0, 1}, 8, FontFamily -> "Source Code Pro"]], 5 -> 
       Graphics[{
          
          Raster[{{{0., 0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}, {{
           0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}}, {{0, 0}, {2, 
           2}}, {0, 1}], {{Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
           Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
         BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
         FrameStyle -> Directive[
           Thickness[Tiny], 
           GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 50, 
         Method -> {
          "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
         Style[{0, 1, 1, 0}, 8, FontFamily -> "Source Code Pro"]], 6 -> 
       Graphics[{
          
          Raster[{{{0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}, {{0., 
           0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}}, {{0, 0}, {2, 
           2}}, {0, 1}], {{Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
           Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
         BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
         FrameStyle -> Directive[
           Thickness[Tiny], 
           GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 50, 
         Method -> {
          "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
         Style[{1, 0, 0, 1}, 8, FontFamily -> "Source Code Pro"]]}, 
      ControlType -> SetterBar}, {{
       Hold[$CellContext`state2Idx$$], 2, "Second State"}, {1 -> Graphics[{
          
          Raster[{{{0.95, 0.95, 0.95}, {0.95, 0.95, 0.95}}, {{0., 
           0.28000000000000025`, 1.}, {0., 0.28000000000000025`, 1.}}}, {{0, 
           0}, {2, 2}}, {0, 1}], {{Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
           Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
         BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
         FrameStyle -> Directive[
           Thickness[Tiny], 
           GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 50, 
         Method -> {
          "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
         Style[{1, 1, 0, 0}, 8, FontFamily -> "Source Code Pro"]], 2 -> 
       Graphics[{
          
          Raster[{{{0., 0.28000000000000025`, 1.}, {0., 0.28000000000000025`, 
           1.}}, {{0.95, 0.95, 0.95}, {0.95, 0.95, 0.95}}}, {{0, 0}, {2, 
           2}}, {0, 1}], {{Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
           Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
         BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
         FrameStyle -> Directive[
           Thickness[Tiny], 
           GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 50, 
         Method -> {
          "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
         Style[{0, 0, 1, 1}, 8, FontFamily -> "Source Code Pro"]], 3 -> 
       Graphics[{
          
          Raster[{{{0., 0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}, {{0., 
           0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}}, {{0, 0}, {2, 
           2}}, {0, 1}], {{Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
           Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
         BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
         FrameStyle -> Directive[
           Thickness[Tiny], 
           GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 50, 
         Method -> {
          "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
         Style[{1, 0, 1, 0}, 8, FontFamily -> "Source Code Pro"]], 4 -> 
       Graphics[{
          
          Raster[{{{0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}, {{
           0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}}, {{0, 0}, {2, 
           2}}, {0, 1}], {{Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
           Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
         BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
         FrameStyle -> Directive[
           Thickness[Tiny], 
           GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 50, 
         Method -> {
          "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
         Style[{0, 1, 0, 1}, 8, FontFamily -> "Source Code Pro"]], 5 -> 
       Graphics[{
          
          Raster[{{{0., 0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}, {{
           0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}}, {{0, 0}, {2, 
           2}}, {0, 1}], {{Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
           Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
         BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
         FrameStyle -> Directive[
           Thickness[Tiny], 
           GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 50, 
         Method -> {
          "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
         Style[{0, 1, 1, 0}, 8, FontFamily -> "Source Code Pro"]], 6 -> 
       Graphics[{
          
          Raster[{{{0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}, {{0., 
           0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}}, {{0, 0}, {2, 
           2}}, {0, 1}], {{Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
           Antialiasing -> False, 
            GrayLevel[0.5], 
            Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
         BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
         FrameStyle -> Directive[
           Thickness[Tiny], 
           GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 50, 
         Method -> {
          "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
         Style[{1, 0, 0, 1}, 8, FontFamily -> "Source Code Pro"]]}, 
      ControlType -> SetterBar}, {{
       Hold[$CellContext`permType$$], "Spekkens", "Permutation Set"}, {
      "Spekkens" -> "Restricted", "All" -> "All Permutations"}, ControlType -> 
      PopupMenu}, {{
       Hold[$CellContext`depth$$], 2, "Evolution Depth"}, 1, 4, 1, 
      ControlType -> Manipulator}}, Typeset`size$$ = {
    375., {179.08987426757812`, 183.91012573242188`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`depth$$ = 2, $CellContext`permType$$ = 
        "Spekkens", $CellContext`state1Idx$$ = 1, $CellContext`state2Idx$$ = 
        2}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`baseState1$, $CellContext`baseState2$, \
$CellContext`compositeState$, $CellContext`evolutionGraph$}, \
$CellContext`baseState1$ = 
         Part[$CellContext`SpekkensStates, $CellContext`state1Idx$$]; \
$CellContext`baseState2$ = 
         Part[$CellContext`SpekkensStates, $CellContext`state2Idx$$]; \
$CellContext`compositeState$ = 
         KroneckerProduct[$CellContext`baseState1$, $CellContext`baseState2$]; 
        Column[{
           Grid[{{
              Style["State 1", Bold, 
               Darker[
                Hue[0.62]]], 
              Style["State 2", Bold, 
               Darker[
                Hue[0.12]]], 
              Style["Composite State", Bold, 
               Darker[Gray]]}, {
              $CellContext`StatePlot[$CellContext`baseState1$], 
              $CellContext`StatePlot[$CellContext`baseState2$], 
              $CellContext`CompositeStatePlot[$CellContext`baseState1$, \
$CellContext`baseState2$]}}, Alignment -> Center, Spacings -> {1, 1}], 
           Spacer[20], 
           $CellContext`StateEvolutionGraph[$CellContext`compositeState$, 
            
            If[$CellContext`permType$$ == 
             "Spekkens", $CellContext`SpekkensPermutations, \
$CellContext`AllPermutations], $CellContext`depth$$]}]], 
      "Specifications" :> {{{$CellContext`state1Idx$$, 1, "First State"}, {
         1 -> Graphics[{
             
             Raster[{{{0.95, 0.95, 0.95}, {0.95, 0.95, 0.95}}, {{0., 
              0.28000000000000025`, 1.}, {0., 0.28000000000000025`, 1.}}}, {{
              0, 0}, {2, 2}}, {0, 1}], {{Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                0}}}]}, {Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                2}}}]}}}, BaseStyle -> {}, Frame -> True, 
            FrameLabel -> {None, None}, FrameStyle -> Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], ImageSize -> 50, 
            Method -> {
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
            Style[{1, 1, 0, 0}, 8, FontFamily -> "Source Code Pro"]], 2 -> 
          Graphics[{
             
             Raster[{{{0., 0.28000000000000025`, 1.}, {0., 
              0.28000000000000025`, 1.}}, {{0.95, 0.95, 0.95}, {0.95, 0.95, 
              0.95}}}, {{0, 0}, {2, 2}}, {0, 1}], {{Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                0}}}]}, {Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                2}}}]}}}, BaseStyle -> {}, Frame -> True, 
            FrameLabel -> {None, None}, FrameStyle -> Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], ImageSize -> 50, 
            Method -> {
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
            Style[{0, 0, 1, 1}, 8, FontFamily -> "Source Code Pro"]], 3 -> 
          Graphics[{
             
             Raster[{{{0., 0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}, {{
              0., 0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}}, {{0, 0}, {
              2, 2}}, {0, 1}], {{Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                0}}}]}, {Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                2}}}]}}}, BaseStyle -> {}, Frame -> True, 
            FrameLabel -> {None, None}, FrameStyle -> Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], ImageSize -> 50, 
            Method -> {
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
            Style[{1, 0, 1, 0}, 8, FontFamily -> "Source Code Pro"]], 4 -> 
          Graphics[{
             
             Raster[{{{0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}, {{
              0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}}, {{0, 0}, {
              2, 2}}, {0, 1}], {{Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                0}}}]}, {Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                2}}}]}}}, BaseStyle -> {}, Frame -> True, 
            FrameLabel -> {None, None}, FrameStyle -> Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], ImageSize -> 50, 
            Method -> {
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
            Style[{0, 1, 0, 1}, 8, FontFamily -> "Source Code Pro"]], 5 -> 
          Graphics[{
             
             Raster[{{{0., 0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}, {{
              0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}}, {{0, 0}, {
              2, 2}}, {0, 1}], {{Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                0}}}]}, {Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                2}}}]}}}, BaseStyle -> {}, Frame -> True, 
            FrameLabel -> {None, None}, FrameStyle -> Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], ImageSize -> 50, 
            Method -> {
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
            Style[{0, 1, 1, 0}, 8, FontFamily -> "Source Code Pro"]], 6 -> 
          Graphics[{
             
             Raster[{{{0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}, {{
              0., 0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}}, {{0, 0}, {
              2, 2}}, {0, 1}], {{Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                0}}}]}, {Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                2}}}]}}}, BaseStyle -> {}, Frame -> True, 
            FrameLabel -> {None, None}, FrameStyle -> Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], ImageSize -> 50, 
            Method -> {
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
            Style[{1, 0, 0, 1}, 8, FontFamily -> "Source Code Pro"]]}, 
         ControlType -> SetterBar, Appearance -> 
         "Horizontal"}, {{$CellContext`state2Idx$$, 2, "Second State"}, {
         1 -> Graphics[{
             
             Raster[{{{0.95, 0.95, 0.95}, {0.95, 0.95, 0.95}}, {{0., 
              0.28000000000000025`, 1.}, {0., 0.28000000000000025`, 1.}}}, {{
              0, 0}, {2, 2}}, {0, 1}], {{Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                0}}}]}, {Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                2}}}]}}}, BaseStyle -> {}, Frame -> True, 
            FrameLabel -> {None, None}, FrameStyle -> Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], ImageSize -> 50, 
            Method -> {
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
            Style[{1, 1, 0, 0}, 8, FontFamily -> "Source Code Pro"]], 2 -> 
          Graphics[{
             
             Raster[{{{0., 0.28000000000000025`, 1.}, {0., 
              0.28000000000000025`, 1.}}, {{0.95, 0.95, 0.95}, {0.95, 0.95, 
              0.95}}}, {{0, 0}, {2, 2}}, {0, 1}], {{Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                0}}}]}, {Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                2}}}]}}}, BaseStyle -> {}, Frame -> True, 
            FrameLabel -> {None, None}, FrameStyle -> Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], ImageSize -> 50, 
            Method -> {
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
            Style[{0, 0, 1, 1}, 8, FontFamily -> "Source Code Pro"]], 3 -> 
          Graphics[{
             
             Raster[{{{0., 0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}, {{
              0., 0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}}, {{0, 0}, {
              2, 2}}, {0, 1}], {{Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                0}}}]}, {Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                2}}}]}}}, BaseStyle -> {}, Frame -> True, 
            FrameLabel -> {None, None}, FrameStyle -> Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], ImageSize -> 50, 
            Method -> {
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
            Style[{1, 0, 1, 0}, 8, FontFamily -> "Source Code Pro"]], 4 -> 
          Graphics[{
             
             Raster[{{{0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}, {{
              0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}}, {{0, 0}, {
              2, 2}}, {0, 1}], {{Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                0}}}]}, {Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                2}}}]}}}, BaseStyle -> {}, Frame -> True, 
            FrameLabel -> {None, None}, FrameStyle -> Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], ImageSize -> 50, 
            Method -> {
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
            Style[{0, 1, 0, 1}, 8, FontFamily -> "Source Code Pro"]], 5 -> 
          Graphics[{
             
             Raster[{{{0., 0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}, {{
              0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}}, {{0, 0}, {
              2, 2}}, {0, 1}], {{Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                0}}}]}, {Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                2}}}]}}}, BaseStyle -> {}, Frame -> True, 
            FrameLabel -> {None, None}, FrameStyle -> Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], ImageSize -> 50, 
            Method -> {
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
            Style[{0, 1, 1, 0}, 8, FontFamily -> "Source Code Pro"]], 6 -> 
          Graphics[{
             
             Raster[{{{0.95, 0.95, 0.95}, {0., 0.28000000000000025`, 1.}}, {{
              0., 0.28000000000000025`, 1.}, {0.95, 0.95, 0.95}}}, {{0, 0}, {
              2, 2}}, {0, 1}], {{Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                0}}}]}, {Antialiasing -> False, 
               GrayLevel[0.5], 
               
               Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                2}}}]}}}, BaseStyle -> {}, Frame -> True, 
            FrameLabel -> {None, None}, FrameStyle -> Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
            GridLinesStyle -> Directive[
              GrayLevel[0.5, 0.4]], ImageSize -> 50, 
            Method -> {
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}, PlotLabel -> 
            Style[{1, 0, 0, 1}, 8, FontFamily -> "Source Code Pro"]]}, 
         ControlType -> SetterBar, Appearance -> 
         "Horizontal"}, {{$CellContext`permType$$, "Spekkens", 
          "Permutation Set"}, {
         "Spekkens" -> "Restricted", "All" -> "All Permutations"}, 
         ControlType -> 
         PopupMenu}, {{$CellContext`depth$$, 2, "Evolution Depth"}, 1, 4, 1, 
         Appearance -> "Labeled"}}, 
      "Options" :> {
       ControlPlacement -> Top, FrameMargins -> 10, Paneled -> True}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {267., 272.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`SpekkensStates = {{1, 1, 0, 0}, {0, 0, 1, 
        1}, {1, 0, 1, 0}, {0, 1, 0, 1}, {0, 1, 1, 0}, {1, 0, 0, 
        1}}, $CellContext`StatePlot[
         Pattern[$CellContext`state, 
          Blank[]]] := ArrayPlot[
         Partition[$CellContext`state, 2], Mesh -> True, ImageSize -> 50, 
         PlotLabel -> 
         Style[$CellContext`state, 8, FontFamily -> "Source Code Pro"], 
         ColorRules -> {
          1 -> Hue[0.62, 1, 1], 0 -> GrayLevel[0.95], 2 -> 
           Hue[0.12, 1, 1]}], $CellContext`StatePlot[
         Pattern[$CellContext`state, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`size, 
           Blank[]], 60]] := ArrayPlot[
         Partition[$CellContext`state, 4], Mesh -> True, 
         ImageSize -> $CellContext`size, PlotLabel -> 
         Style[$CellContext`state, 8]], $CellContext`CompositeStatePlot[
         Pattern[$CellContext`state1, 
          Blank[]], 
         Pattern[$CellContext`state2, 
          Blank[]]] := ArrayPlot[
         Partition[
          KroneckerProduct[$CellContext`state1, $CellContext`state2], 4], 
         Mesh -> True, ImageSize -> 80, 
         ColorRules -> {
          1 -> Hue[0.62, 1, 1], 0 -> GrayLevel[0.95], 2 -> 
           Hue[0.12, 1, 1]}], $CellContext`StateEvolutionGraph[
         Pattern[$CellContext`initial, 
          Blank[]], 
         Pattern[$CellContext`perms, 
          Blank[]], 
         Pattern[$CellContext`depth, 
          Blank[]]] := 
       Module[{$CellContext`graph, $CellContext`vertexCoords}, \
$CellContext`graph = NestGraph[
            Function[$CellContext`state, 
             DeleteDuplicates[
              Join[
               Map[
               Permute[$CellContext`state, #]& , $CellContext`perms], \
{$CellContext`state}]]], $CellContext`initial, $CellContext`depth, 
            VertexLabels -> Placed["Name", Tooltip], 
            GraphLayout -> {"LayeredEmbedding", "RootVertex" -> 1}, 
            PerformanceGoal -> "Quality"]; $CellContext`vertexCoords = 
          AssociationThread[
            VertexList[$CellContext`graph], 
            Map[Part[#, 
               Span[1, 2]] + RandomReal[{-0.1, 0.1}, 2]& , 
             Map[Normalize, 
              VertexList[$CellContext`graph]]]]; Graph[
           VertexList[$CellContext`graph], 
           EdgeList[$CellContext`graph], 
           VertexLabels -> {Pattern[$CellContext`v, 
               Blank[]] :> Placed[
               $CellContext`StatePlot[$CellContext`v], Center]}, VertexSize -> 
           0.3, VertexCoordinates -> $CellContext`vertexCoords, EdgeStyle -> 
           Directive[Gray, 
             Thickness[0.003]], GraphStyle -> "BasicBlack", ImageSize -> 
           600]], $CellContext`perms = {{1, 2, 3, 4}, {2, 1, 4, 3}, {3, 4, 1, 
        2}, {4, 3, 2, 1}}, $CellContext`graph = 
       Graph[{{{1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 
          0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{1, 0, 1, 
          0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 1, 0, 1}, {0, 1,
           0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 1, 1, 0}, {0, 1, 1, 0}, {
          0, 0, 0, 0}, {0, 0, 0, 0}}, {{1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 
          0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1,
           0, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 
          1}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 0}}, {{0, 
          0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 1}}, {{0, 0, 0, 
          0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 0}}, {{0, 0, 0, 0}, {0, 0,
           0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}}, {{1, 1, 0, 0}, {0, 0, 0, 0}, {
          1, 1, 0, 0}, {0, 0, 0, 0}}, {{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 
          1}, {0, 0, 0, 0}}, {{1, 0, 1, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {0, 0,
           0, 0}}, {{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0, 
          0}}, {{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}}, {{1, 
          0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 0}}, {{0, 0, 0, 
          0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}}, {{0, 0, 0, 0}, {0, 0,
           1, 1}, {0, 0, 0, 0}, {0, 0, 1, 1}}, {{0, 0, 0, 0}, {1, 0, 1, 0}, {
          0, 0, 0, 0}, {1, 0, 1, 0}}, {{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0, 
          0}, {0, 1, 0, 1}}, {{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1,
           1, 0}}, {{0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 
          1}}, {{0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}}, {{0, 
          0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 0}}, {{0, 0, 0, 
          0}, {1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 1,
           0, 1}, {0, 1, 0, 1}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 1, 1, 0}, {
          0, 1, 1, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 
          1}, {0, 0, 0, 0}}, {{1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1,
           0, 0}}, {{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 
          1}}, {{1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}}, {{0, 
          1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}}, {{0, 1, 1, 
          0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}}, {{1, 0, 0, 1}, {0, 0,
           0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}}, {1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 
          0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 
          1}, {0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 
          0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0}, {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 
          0, 0, 0, 0, 0, 0}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
          0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}, {0, 0, 0, 0, 
          0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}, {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 
          0, 0, 0, 0, 0, 0}, {1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
          0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}, {0, 0, 0, 0, 
          0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}, {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 
          0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 
          0}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 
          0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}, {1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 
          1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 
          1}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 
          1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 
          1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 
          1}, {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 
          0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}, {0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 
          0, 0, 0, 0, 0, 0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 
          0}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}, {0, 0, 0, 0, 
          0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 
          1, 0, 0, 0, 0, 0}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
          1}, {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}, {0, 0, 0, 0, 
          0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 
          1, 0, 0, 0, 0, 0}, {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
          1}, {0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0}, {0, 1, 1, 0, 
          0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0}}, {
          
          UndirectedEdge[{{1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 
           1}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 
           1}}, {1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 
           0}}, {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 
           0}}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 
           1}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 
           1}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 
           1}}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 
           1}}, {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 
           0}}, {1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 
           0}}, {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 
           1}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 
           1}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 
           1}}, {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 
           1}}, {1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {0, 0, 0, 
           0}}, {1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0, 
           0}}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 
           0}}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 
           0}}, {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 
           0}}, {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 
           0}}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {1, 0, 1, 
           0}}, {0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {1, 0, 1, 
           0}}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0, 1, 0, 
           1}}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0, 1, 0, 
           1}}, {1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 
           0}}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 
           0}}, {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 
           0}}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 
           0}}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 
           1}}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 
           1}}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 
           1}}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 
           1}}, {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 
           0}}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 
           0}}, {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}], 
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 
           0}}, {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 
           0}}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 
           0}}, {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 
           0}}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 
           0}}, {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 
           0}}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 
           0}}, {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 
           0}}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 
           1}}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 
           1}}, {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 
           1}}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 
           1}}, {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 
           0}}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 
           0}}, {0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 
           1}}, {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 
           1}}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0}]}, {
         EdgeStyle -> {
            GrayLevel[0.7]}, GraphLayout -> "SpringEmbedding", 
          VertexLabels -> {None}}], $CellContext`v = {1, 0, 0, 
        1}, $CellContext`SpekkensPermutations = {
         Cycles[{}], 
         Cycles[{{1, 2}, {3, 4}}], 
         Cycles[{{1, 3}, {2, 4}}], 
         Cycles[{{1, 4}, {2, 3}}]}, $CellContext`AllPermutations = {
         Cycles[{}], 
         Cycles[{{3, 4}}], 
         Cycles[{{2, 3}}], 
         Cycles[{{2, 3, 4}}], 
         Cycles[{{2, 4, 3}}], 
         Cycles[{{2, 4}}], 
         Cycles[{{1, 2}}], 
         Cycles[{{1, 2}, {3, 4}}], 
         Cycles[{{1, 2, 3}}], 
         Cycles[{{1, 2, 3, 4}}], 
         Cycles[{{1, 2, 4, 3}}], 
         Cycles[{{1, 2, 4}}], 
         Cycles[{{1, 3, 2}}], 
         Cycles[{{1, 3, 4, 2}}], 
         Cycles[{{1, 3}}], 
         Cycles[{{1, 3, 4}}], 
         Cycles[{{1, 3}, {2, 4}}], 
         Cycles[{{1, 3, 2, 4}}], 
         Cycles[{{1, 4, 3, 2}}], 
         Cycles[{{1, 4, 2}}], 
         Cycles[{{1, 4, 3}}], 
         Cycles[{{1, 4}}], 
         Cycles[{{1, 4, 2, 3}}], 
         Cycles[{{1, 4}, {2, 3}}]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.958972722532978*^9, 3.958972727156402*^9}, 
   3.959041300306704*^9, 3.9590427798322268`*^9, 3.9590493170376987`*^9},
 CellLabel->
  "Out[3016]=",ExpressionUUID->"550c6a26-9100-4049-ac29-ac3b27a9fbb3"]
}, Open  ]],

Cell["\<\
The StateEvolutionGraph function is central to the dynamic visualization. It \
constructs a graph where each vertex represents a unique state, depicted as \
its 2\[Times]2 or 4\[Times]4 grid. Edges connect states that can be \
transformed into one another by applying one of the selected permutations. \
The NestGraph function in Mathematica is employed to build this graph \
iteratively, starting from the compositeState and applying permutations up to \
the specified depth. The VertexLabels are set to display a Tooltip with the \
raw state array, and the VertexCoordinates are subtly randomized to prevent \
perfect overlaps while maintaining a clear layout.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958608954441712*^9, 3.958609129766738*^9}, {
   3.958614633414529*^9, 3.958614657027687*^9}, 3.9589665243594522`*^9, {
   3.959049321566777*^9, 
   3.959049323589013*^9}},ExpressionUUID->"6689337d-d8a8-4dfc-8990-\
c74a7b1ec610"],

Cell["\<\
This sophisticated Manipulate environment offers a powerful pedagogical and \
research tool. It enables intuitive exploration of how permutations act on \
composite quantum states within the Spekkens model. By changing the initial \
states and the set of allowed permutations, one can observe the emergent \
structure of the state space and the connectivity between different \
configurations. This kind of interactive visualization is invaluable for \
understanding abstract concepts in quantum information and the foundational \
principles of quantum mechanics, particularly for grasping the role of \
contextuality and the limitations of classical hidden variable theories.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958609237111221*^9, 3.958609350005479*^9}, 
   3.958614661385903*^9, 3.95896652885693*^9, 
   3.959049324418366*^9},ExpressionUUID->"c9ca19f0-75d0-47b0-a879-\
469f1dfbbb2f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"permList4", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PermutationList", "[", 
      RowBox[{"#", ",", "4"}], "]"}], "&"}], "/@", "SpekkensPermutations"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"pairs", "=", 
   RowBox[{"Tuples", "[", 
    RowBox[{"SpekkensStates", ",", "2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"states", "=", 
    RowBox[{"KroneckerProduct", "@@@", "pairs"}]}], ";"}], 
  "             "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", 
    RowBox[{"Length", "[", "states", "]"}]}], ";"}], 
  "                              "}], "\n", 
 RowBox[{
  RowBox[{"indexMap", "=", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{"pairs", "->", 
     RowBox[{"Range", "[", "n", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"DeleteDuplicates", "@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"base", "=", 
            RowBox[{"pairs", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", "newPair", "}"}], ",", 
              RowBox[{
               RowBox[{"newPair", "=", 
                RowBox[{"ReplacePart", "[", 
                 RowBox[{"base", ",", 
                  RowBox[{"j", "->", 
                   RowBox[{"Permute", "[", 
                    RowBox[{
                    RowBox[{"base", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                    RowBox[{"permList4", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}]}], "]"}]}], ";",
                "\n", 
               RowBox[{"UndirectedEdge", "[", 
                RowBox[{"i", ",", 
                 RowBox[{"indexMap", "[", "newPair", "]"}]}], "]"}]}]}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", 
              RowBox[{"Length", "[", "permList4", "]"}]}], "}"}]}], "  ", 
           "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Range", "[", "n", "]"}], ",", "edges", ",", 
     RowBox[{"GraphLayout", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<SpringElectricalEmbedding\>\"", ",", 
        RowBox[{"\"\<RepulsiveForcePower\>\"", "->", 
         RowBox[{"-", "2"}]}]}], "}"}]}], ",", 
     RowBox[{"VertexSize", "->", 
      RowBox[{"Scaled", "[", "0.05", "]"}]}], ",", 
     RowBox[{"PlotRangePadding", "->", 
      RowBox[{"Scaled", "[", "0.02", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"selected", "=", "None"}], "}"}], ",", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Dynamic", "[", 
        RowBox[{"Show", "[", 
         RowBox[{"g", ",", 
          RowBox[{"VertexShapeFunction", "->", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"pos", ",", "id"}], "}"}], ",", 
             RowBox[{"Button", "[", 
              RowBox[{
               RowBox[{"Inset", "[", 
                RowBox[{
                 RowBox[{"ArrayPlot", "[", 
                  RowBox[{
                   RowBox[{"states", "[", 
                    RowBox[{"[", "id", "]"}], "]"}], ",", 
                   RowBox[{"Mesh", "->", "True"}], ",", 
                   RowBox[{"ImageSize", "->", "40"}], ",", 
                   RowBox[{"Background", "->", "None"}]}], "]"}], ",", "pos", 
                 ",", "Center"}], "]"}], ",", 
               RowBox[{"(", 
                RowBox[{"selected", "=", "id"}], ")"}], ",", 
               RowBox[{"Appearance", "->", "None"}]}], "]"}]}], "]"}]}], ",", 
          
          RowBox[{"VertexStyle", "->", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"id", "->", 
              RowBox[{"Which", "[", 
               RowBox[{
                RowBox[{"id", "===", "selected"}], ",", "Yellow", ",", 
                RowBox[{
                 RowBox[{"selected", "=!=", "None"}], "&&", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"AdjacencyList", "[", 
                    RowBox[{"g", ",", "selected"}], "]"}], ",", "id"}], 
                  "]"}]}], ",", "Green", ",", "True", ",", "LightBlue"}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"id", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
          RowBox[{"EdgeStyle", "->", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"selected", "=!=", "None"}], "&&", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{"#", ",", "selected"}], "]"}]}], ",", "Red", ",", 
               "Gray"}], "]"}], "&"}], ")"}]}], ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"selected", "=!=", "None"}], ",", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Dashed", ",", 
               RowBox[{"Circle", "[", 
                RowBox[{
                 RowBox[{"PropertyValue", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"g", ",", "selected"}], "}"}], ",", 
                   "VertexCoordinates"}], "]"}], ",", 
                 RowBox[{"Scaled", "[", "0.06", "]"}]}], "]"}]}], "}"}], ",", 
             
             RowBox[{"{", "}"}]}], "]"}]}]}], "]"}], "]"}], ",", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"selected", "=!=", "None"}], ",", 
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Grid", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"states", "[", 
                    RowBox[{"[", "selected", "]"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "200"}], ",", 
                    RowBox[{"PlotLabel", "->", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Selected State\>\"", ",", "14"}], "]"}]}]}], 
                    "]"}], ",", 
                   RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"states", "[", 
                    RowBox[{"[", "selected", "]"}], "]"}], ",", "4"}], "]"}], 
                    ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "200"}], ",", 
                    RowBox[{"PlotLabel", "->", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Flattened View\>\"", ",", "14"}], "]"}]}]}], 
                    "]"}]}], "}"}], "}"}], ",", 
                RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
              RowBox[{"Text", "@", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<State Index: ``\>\"", ",", "selected"}], "]"}],
                  ",", "14"}], "]"}]}], ",", 
              RowBox[{"Button", "[", 
               RowBox[{"\"\<Reset Selection\>\"", ",", 
                RowBox[{"selected", "=", "None"}], ",", 
                RowBox[{"ImageSize", "->", "200"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
          RowBox[{"Panel", "[", 
           RowBox[{
            RowBox[{
            "\"\<Click any state to explore connections\\n\>\"", "<>", 
             "\"\<Green = Neighbors, Yellow = Selected, Red = \
Connections\>\""}], ",", 
            RowBox[{"ImageSize", "->", 
             RowBox[{"{", 
              RowBox[{"600", ",", "40"}], "}"}]}]}], "]"}]}], "]"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"Alignment", "->", "Center"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.959039678381971*^9, 3.959039678383377*^9}, {
  3.959049349951439*^9, 3.959049356152288*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"0709220e-040c-4adc-b972-bd0868aa10d9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3V+sJNd9H3hjDQT7uAGCPGeRPCewDFsWMCKHEjl/oFyayQ5pgSQCTEhz
ZpmZCYfmQNxLCPSVCHK0ZEhKHEEcwuBkKPGGWFBAAtEE6EQBF3kwAloCPEyc
5UMgwIADIbBkyLac5Onub1nLQqO7b9+qOlV1Tld9PigSd2Z6erpO/b7nT3V1
9f/6j//pP3zkf/qFX/iF3/qf43//8OyX7nj88bP/x//2v8Qv7r30W//7uUu/
+fDpS0/85rnffPzX/vEvxm/+X/G/C/Hf//fzAQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAwNb66Ec/zv0SgI7kF7aX/LKN3nn/w9he
vPn983v71f+rLX6OklbVWVQtr/05kvwWSH5paEN+4/fVTxby21CUaNRqVcOr
bRW/E2VcbVle3txEg1dHpOpAljbFzJLm+VU845Bfmjsyv9XcUvGMRn6bq6u3
yYOj9eLB2nA49XC/9ohUq6FqidrwkDFtbfOrDxzahiMivyyR39LIbyvVwqft
3zpshkOiarHZsIto9WAmSX6L0mo+UD1YfudMfotSnSJrld+ZH4iUUuxW/GzQ
oUmrNZEDMU8pGXzr3Q+UTb/MB2hFfotSnZMZ529Nw4NfupG4BHYSrEcp/cmc
y3i2Ir+Jg4j89kh+aeUr33o3Mb9O4/QopTHneYHB+b399Cepmi79eUhvScdi
VvrqsnrpB+glv47FfMhvUYy/bfU4Z7YU6kUvR8QwNBPyWxpTApqT39L0dUS+
8q1353A2sq+qu/Wx/f39O89ciP/f+kT6M8+NLoXm5Lc0PYZubmczZqj3/D76
xFf3nntZfjuT31bS9zGK9vEnrtx+/K4Hzp4/c//Djz119ZHLe/H/+Dm2+M0T
p07HA6pRqa+XPT11D/Da79z49Qcv99gDmEZOmPwWos5vNQmXX5qQ30LIb2ed
T3lFU7/62utRuo9eeebZb7717Xf+YMMWD4iqfujcxd3dXZW8KJrxwqXL0YyR
97vvOxuNWW3xc2zxm58+djwecOPmGyntNvkynq2U/EZRyW8i+SWF/OYlv4m6
7Vo0Zsweq6beXLprizmOi0quZuBRnw17gHhYtFssJ7u124RreM66ncSo8htj
ivx21nYFnZjfAxdGTlGu/KbU4TTIb1867Fc0/gNnz3eo3qWDEmuieKohdqpw
sddV6XbrAWJxFMuiDpVsGjk9HU5i9JXfeBL5lV9SyO/45LdHHRZB0XqJ1bu4
xUpqd3d3oL0rU7V+TGy3ei3Z6p+eZA3PmfyO78bNN558+vks+T2Y7qmMeSoh
vx2KcKvFBFJ+e9RqERQT75i9P3ftiLO+bbcXrr89k/PqsY/99gBRyW0XRDO8
6+mEtVoUDJTfKEL5lV86aDWHlN9EJeR3eqdxmvdI0VBXX7zWb/UuHouXXrk+
7TKOvXvg7PkheoB42uZNN70anjP5HY380jv5HY38DqT5mdWYb/fe/kvbzs7O
oDubUVXAwzVddC8Ny3h6NTxnReX3xKnTg+5sRuXkdw73mpsP+R3H0Pn97avf
mGd+m+/OCAX87Y/f1J7ktVVDF3C1NV8NTe+SjNlqeCjlN4X8MpCGh/LxJ66M
kN9nv/mW/MpvW01258bNN3q8hGDz9uTTz0/vk2LjjOCx3X78riavZ2I1PGfy
O4JxRnD5nSH5HUFp+Z3YJc1H1nBMrc/c//A4BVxtra4uKN9oBRxbdDVNegBj
0GTI79B2d3fHzG9MGI58SfI7GfI7tMjvC9fflt/hHLk7Y06Bqm1KS6Hxe4Am
rTexGp6zAvPbcCGzFeSXQcnvoMbPb5PWm1h+N59WHf8QNO9It8L4PcC3jzqj
PrFremdu8yek5DdRgfk9mNwYNGfyOyj5HcHmGs5yCLrVcEyNYqt2p95isrS6
xRFc3FYfsPgM1dN2u3qhzB7AHHJKysxvh1MZ8iu/MyS/08vv5tabZH4PmxXn
OgTVdth9BhYLdbEmV8tvsQIXt9UnXNrWpmDpX2lS27l6gA2tdzC5C3qR3+nl
d8OpDPmdmDLze1gFyq/8rjpsKRRz6dE+Dra6VYvxuqIWq2ipRMdsq7rIF2u7
/nnx9eTtAQ47lTHJRdDMyW9z257fg8m9EYb8Ntcqvw+duyi/o1m7Xxmn8bHt
ff3NT912T12xJU/d6zXRYlVHAY/2cbDV7bGnrq6tYTcYn6S1a1v5bWhtfo+d
vDdjfg97O0x+J2ntYc2b32evvSW/ved3wudw1u7ap48dz3UIqm17v7Ym2vOO
L3wxbw+werfYCRcwq8tA+e0sknLun1zKm9+YQqy+KvmdqtX83n78rrz53d6v
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
J3CGUB0I+e2sruS1zVg1lNMXQ6vOETWfzMemP+FgJb9LVSG/42g+DNX5dUQ4
kN8yND/HK7+Hqao3mjHKdXHTVmOq2n/DZL6qc0eEJXV+lyKsWsYkv3QjvyWo
puvyy7bbMJl37hEKJ7+wveQXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAevfR
j378zvsfxnZ+b39xe/Hm9+OPcr86YBP5he0lv2yvqm6jVqsaXvrTKOD4o+oB
WV7eDMVRqNp8qTOJ39efsKSKrfyWQ35pTn5Lc9hk3nx+VdVWq3W7VlXM2nBQ
VemuHWuqhapKplbnt0mE5XcE8ktz9bnHhvmN0lI5g6rzu3YyX3Wh8ltrNYGs
GIaGU1fvkY9UyRwk5LfVX6GhaoiXXxqqzz22+lvyO5DmfaP8VtqOPou0Xu86
HA7zgTlLye9b734gv/2q5gOt/or8zpn8FqXKb6tWnXl+0/c9Vtx9vRhS+pMO
gxfbLj2/loE9kl9akd+iVLPBbn93nvmNXf7hH/1x4pOkdJssSingvp6BLdJL
ftVMX+SXVvqa/jmN05fElqwuYunrxZSvx/WLaWQvejkiMakwDM1Bj6GT3170
kt+5DUOzJb+l6WtG9OCXbqQ/Sfn6qrpbH9vf37/zzIX4/61PpD/z3OhSaE5+
SyO/NCe/pekxdHN4NyF9H6NcH3/iyu3H73rg7Pkz9z/82FNXH7m8F/+Pn2N7
6NzFE6dO7+7uVlXd18uenroHeO13bvz6g5d77AEMQxPWS34jnvKbqM5vNYjL
L030m9/Y5Lcb+e2s8znbqrWjdB+98syz33zr2+/8wYYtHhBVHfUcxaySF0Ub
Xrh0OZox8n73fWejMastfo4tfjP+KKboiT3A5Mt4tuQ3r4b5vXHzDflllfzm
dWR+P33suPxu0G0RFI356muvP/n089HUm0t3dXvh+tuxVlLJUbrRhs17gHhY
1HMUc7d2m3ANz9n4+Y1SlN+D0fN74LMSU9Q5vzGlkd8U8tuXDougaPwowg7V
uzSTjDVRPNVA+1WyagSvFjsdeoDOlWwaOT3yOz75pS+58ht1KL/d8nv3fWcv
XLosv5UOi6BovcTqXdwee+pqLIgG2rsy9dUDxEgUS9FW//Qka3jO5Hd8GfN7
MN1TGfMkv+OT3361WgTFxPv243c9d+2Is75ttxeuvz2f8+r99gDxVPGErV6A
O9BOSatFgfymk1961GoOOVx+U96f3S7Z8zu90zjNe6SosasvXuu3ehfL+KVX
rk+7jAfqAWJB1Oq8+vRqeM4KyW8UofzKL23J72jkdyDNz6xGQ/Xe/kvbzs7O
oDub0dA9QDx5wzKeXg3PmfyOo5z8zuFec/PRfA45Qn5PnDo99P7mIr8Dab47
IxRwbG9+972pXpsxQgPGIqvhi5neJRmz1fBQPv7ElRHyW72pPfQuZyG/DEF+
xyG/w2myOzduvtHjJQSbtyeffn56nxQbpweI1VD8Q01ez8RqeM6aHMoIlPym
GC2/Da+tkt/JaJjfx566Kr+dlZbfiV3SfGQN37p168z9D49TwNX2wNnzU7ow
Y8wRPP6hJj2AMWgy5HdoY47g8js38ju0kfPb5JPaE8vvkbszzhx+cZvSUqjM
HmBiNTxnBea34URoK8gvg5LfQUWUIlDyO6jNp1XH70KrbTLTyDJ7gInV8Jxt
/oSU/CbKkt9XX3t986uS38mQ30HJ7wg21/D4hyClhmMyHFu1R0tbTJWbbIt/
pXq2auvWtmX2ABP7XNjMlZnfbqcy5Fd+50Z+5XcCDpsV5zoE1bbhPgOLhVrV
XuxCbKt1uLYgN2yHlf3S8zes7TJ7gIld0Iv8ts1v/YSbGzZjfjecypDfiSkz
vxs+ZSy/8rvksKXQmB8GWd3qyXxdUVUhVbW0VJzjNFRd5xvmlvWDi+0BJnYi
HfltaHGcapLfka+kkt952pDf0T4MsiG/dWS2Ir/1i4n8PnTuYoH5neQc8uCQ
finXNL7a9r7+5qduuydeWF2r4zdLQ4tzy7qk9557OWMPEP/02lORbjA+SfKb
osD8HvZWwiTfCGPtvCJvfp+99laV33rGmKVlmlg9txPblS9/TX7HtLZIPn3s
eK5DUG1b+rUXVUnf8YUv5u0BVu8WO+ECnrm1R1Z+u6nye+zkvfLLaFaXgSdO
nc6b3y392poqv6fveTBvftfeq3nabyIsTSPzvhVbbQ+du7i9N6rK3gOsnk6f
6ll0DuS3b/LLmKrTaPUvS8jvVt8oUn6zqMq42s0onrvvO5v3KGzvGJT3Yqq1
PcAcCnjmlvJrDOqswPwW/n4i6arzzPKbTn4zqso4draEOeT23qWqqB6guhza
BHIO5LcXJYxB0YFU+Y1jKr8zsZjf7COI/PaV3+qY5m6VUcX+3nnmQsYPdU6g
hrP3ANXHauaz/KEmv4mKyq9rIOdGfhOVlt95LgDz3hhk22s4720Zqu2Ry3vR
EZlAzpP8ppBf8iohv4fd3KN8JeQ3Dt/M81tCDW/v9ZAl1PD29gCkKyG/23s9
lfySVwkVuNX5jQWs/OZVwvVU5pApW309BjNUwrs5W53f7GOQ/M5ZCfk1h5Tf
FCXU8PaOQSVc07u9PQDp5DdFCfk1Bs1ZCRUov/Kb6Pbjd+U9Clt6j+KDMmrY
HHLm5Lcz+SW77Pnd0nuMH8hvMS5cupz3u9KOnby3+kzT1n2sKV7wZz77OT0A
GWX/rkP5lV86k9/O4gX/ymcyf0uX/B7kviz/pVeu7z33cnVvpcXvsR35e96b
WPou+OqlZv+updXvSmNW8ub3yaefl1/5pbO8+X3sqavbnt+YBstvdhm/cnf1
Yoylr1aPUlks7KFre7FQN7+G6vF5L+v1oTAOsr4dVlp+qxcgv2yRbcnvOHNL
+d1Gr772epal0AvX3244jV9ag9R1tVThi6W+eVv9K6uF2jAvRfUAzJD8Lj6h
/LJdtiW/q3NL+ZXfSq7T6X0dgrrCF0t987b6V7au9Zr3AExbrsW4/KZs3gij
Ir+J+c3SevK7ZPyl0GSmQNveAzAB8ttZrvz6RCc1+e1Mfgsx/o3mpjQFGv9U
xmR6AHox/m0u5DdlcxKDRfKbYvxppPyuNWZHur3fsbuWHoDs5Lez8fPrJAZL
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
x1b9vLRtruGlB1fPU2/1M7Qq8i3tAZgG+d3e/DqVgfzK77Yb8+PYq9viZL6u
1dVCXVrIDNQUdV4Wi3wxHav/euE9AJMnvzX5ZevIb01+t1SuN8Kq7dlrb528
58G6WkYo1LYWz9IvFXb85t5zL2fsAZyKRH43OzK/w30tl/xyJPndTH7Ld+LU
6VyHoNp+5TPHy6nYhqqqjjI+dvLeva+/mbEHcK+5mcue38989nPyK790kz2/
v/xrt8lv5/y6V2SuT3Qublv9MfnsPYDT6XMmv4l2dnbkl1zkN5H8ZhfFc+b+
h9VwN3kvxqi2OHxb2nqkk98U8kte5pAp5LcEJYxB2/sZ+RJ6ADU8Z/KbwhhE
XiXkd3u/9ayE/N5939mZ5zfvh8KqbavHoOxzyO3tAUhXQn63twJLyK/L8udM
flOUMIeceX7fef/DO89ciEZQw92U0APMvIbnrMrvI5f35LebMb9jV35ZIr+J
5Dej6jNNUcMlzIK2992cQmo4OqI4lLkbg/HIby/kl1yqu+jIbwr5zaW6z1L1
cf4SrsfY3mt6S6jhqgeojmnu9mAM1QSyzm/2d2PlN2WrrqeS3/mI5J7f269m
HSXk1xyyr/xu3S2SuomdfevdD+pfllDD2zsGldB6dQ+wOLVgquS3RyW03mJ+
Y2ohv9MWx/cr33q3/mUJFbjV+c1+PWT9mZqZjL/Vbi795u3H78p7FE6cOp2l
NdKV0AMsriLrtzjzNgsDkd9+lTAGLZ0Fkt8Jk99+ye/4Yp27+puPP3El+3ct
FfXlSq0UeI/xtUeZCVi7zs3+XWnHTt67vfnNfo/iTx87vvSS5nA2Y57KzO8d
X/ii/MpvE4ft2v7+fsaPZj/21NUrX/5a/b3qh321elEWv5v+U7fdk7cHWP2u
tLWrXbZdsfnde+7lxe+x3br8lvZdh/I7SRvym/FjNfLbe34PJnoaZ3O/lPF0
+kPnLi6+Fbv01er1t6vXhT1mbde1uvqS6u+mz3tZ72E3Fqhe3mgNxQg29EsZ
87t0MdWG/I4/Nskv5Sgzv0tvxcqv/B5m8xzy1ddez3Iq47Bp/NIrXyzspdqu
y6ne6qnmYsEv/Wb9nEvb4vMv1urm+JTTAyya5FJotiaQ37VjU7/5rf6JtvnN
eDmK/M7E5vzmeiuhl/wuRXg1pwfyOwmb36PPNZlPuavAYaW4WNtrC/6wwavz
OqvMHmCSS6HZkt8m+a0i3PaVyC9Dm3B+lyK8mtMR8pul9eaW3yNnxeOfymiy
CNoKZfYA06vhOZPf4cgvQzsyv+MvZOR30PxO76rmI2t4/NvUbO9tqVaV2QNM
73T6bBWY3+29NfEq+WVQ8juo8aeRM8xvk90ZsyPd3u/oXKvMHmBiNTxn8jso
+WVQpeV3Yt/yLL9Da35a9cKly88Of6eayZxFXzTmUqhhDzClGp65hodSfjsb
Ob83br5x5EuS38loeCgjVvLbjfwOrfnuDP0p4yjgGOkG3dlcdnd3i+oBJlbD
cya/I4j8vnD97RHy27AB5Xcy5HcEpeV3Yjcbb747t27duvriteHmQvHkk7kM
Y9XQ9xlo1QMYgyaj+Scs5DeF/DIE+R3H0F9bM+f8tvqUX9TYEG+KxRPGImvC
BXzwcdO99Mr1EnqA6X0ubM7kdxzyyxDkdxzyO5wOd4qIMu7xEt94qqmeQl8S
NTbEZS1te4CJnUifuQ49kvx2U+W39zfF2ubXvX2mRH5HExEb4k3ttvmd3hzy
oNOZ1Rs33zhz/8OJ06Go3gfOnp/Sp8CaiGGox29B7dADmENOjPyOKYYh+aVH
HRYF8tuZ/A6h28K2WpV3q+Ro+dhefe31aZ8/P0zENsKbpQeY5CJo5uR3ZBG6
h85dlF96Ib8jy5jfg8ldDFnrvF91JUeTHnlQ4gHxsNuP3xXLqLktf5Yk9gCx
kurWA0xyEUTn9ze75TdqT353d3fll17I78iq/HY7k5MyA5/whSiJuxaNGdPC
KOaoz6jnu+87G1vV1LHFz3Gw4o8uXLo889JdUlVyrIliTGneA+x/rMM/5yTG
VKXnNypqQ37jN+V3Vbf8dl5By+9U9ZvfKsLyeyT57VdfM+Rbn7jzzIVqtlP9
Mv2Zp6ruAU6cOh2T7aoTiKp+5PJe/D9+rmbg8YDEHsBJjAmT31zkl3S95/ee
f/Rbr/3ODfk9kvz2qMd9nPA520HVPcDecy8/+sRXe+wBHJHJ6/EQq5Zu6vxG
cqtJuPzSkPxmJ7/pHvzSjfRp5OTP2Y5Dl0Jbkbsf/tEfJz6J/Paix9A5IjMh
v+WQ387Sz0ZO9ZNH4+ulJedWwDOXnt85vOcyjl5aUn5nJY514tRFfvvSV0vO
cEaUUsYKuEfpS6H461/51rt9vR62Qkp+nbLuUfr0L47Fg1/65329HrZCSgbl
t1+J07/oAWab36jDtrPBqsM0gexXtOdb737Q7e/qT2arQ34P+jgHwhL5pQP5
LUQcgpT5/MzfQajmhA0ruVvN00S3UjQAzVzb/MaKW36HIL90IL+F6Da3kd9a
XcnRIKvNWDVUVK/mGlSrc7yOCDX5LUG0fPMh3hGhtjm/1Vky1TI042+6qlaj
GaNxFjeT7dE06UyqA+SIsER+S1Dld+1gVB0gow9rHZZfb16PqWp/+WWrrXYm
dWGvnVsC5YiEVovBtfk1+kDh5JeJMW+E7SW/sL3kFwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAGCtd97/MLYXb37//N5+bPFDtX30ox/nfmnAEeQXtpf8sqWq0o2i
rX6oKzZ+qLaqkuOP8r7O+aiPyOJWdSb6E1bJb1Hkl1aOzG9VP3lf5HzIb3NV
W1Xb5kdG01VLpHFe2GwtdiZLf1RPBqxMqdUFs/lhdX5VzqDkl1Ya5vfgk/pR
OYOS31Yazh4XRdNFC2vAIVQl2rwzUckz13z0qRmGBiW/NCe/pZHfVtrOHhdp
vd51OEfUfM7J9KTk9yvfeld++1XNB+SXhuS3KPLbVvq+R4P39WJI6U9S/i5b
Kv2gy2+PqtGk29+V3xlKP+hO4/QoMb8zvMAvdvmHf/THiU+i6+tLSgFX5lnG
sxXH+q13P0h8EvntUeKEXH5npZeTV+mjBrXECfncjkWPY4dhqBe9rCjnVsaz
Jb+lkV+ak9/S9JXfr3zr3V5eT+H6qrpbH9vf37/zzIX4/61PpD/z3OhSaE5+
SyO/NCe/pZHfVtKXulGuu7u7J06dfuDs+dgee+rqI5f34v9n7n84fvnQuYvx
R/GAqqr7etnTU/cAVSfQYw8whzKeLfkthPzSgfwWQn4763zOtmrt24/fFeX6
7Dff+vY7f7BhiwfEw6Keo5hV8qJow8efuBLNGHmP1D965Zlqu/u+s/HL2KIH
iAck9gCutZ4q+c3ryPzGH6Xnd/LD0Gyl5/fJp5+X387kN1G3RVA05o2bb0Tp
RlNvLt3V7YXrb6vkg49LN9ow6jPasEkPEA+Leo5i7tZuE67hOeuc3yg/+U1R
j+DyS2dZ8huTJfkdOb8H073lRYdFULR8FGGH6l0dieKpBtqvkkURvvra67Eq
7NCGUcydK9kwND3yO74qv91GcPllkfyOL+UMmPwu6bAIunDpcmL1Lm5xHGNB
NNDelamXHiAqOZ6kbQ8wyRqesw75jd5PflP0ld8YieR35rrl97GnrvaV33gq
+e2c35iItv3Xp3cqslWnFBPv24/f9dy1I876tt1iQTSf8+r9zsDjqaJLafUC
XBU5Ja3GIPlN1+8MPJ4qOoRWL0B+p0R+R5Y9v9NbBjbvkaLGrr54rd/qXSzj
yX9kbKAeIBZEUcbNm256NTxn8jsa+aV35eT3pVeuy6/8dtD8zGo0VO/tv7i9
9/sf7ezsDLqzGQ3aA0QZx5M3LOPp1fCcye845JchNJ9DDp3f2OR3hPxO7CsD
mu/O409cGbqAY3vzu+9N9dqMEXqAWGQ1fDHTuyRjthoeSvlNJL8Moaj8Vm9q
D73LWYzQgLPNb5Pd2d/f7/ESgs3bk08/P71Pio3TA8RqqOG1kROr4TlrmN8e
L8KXX/mlL/I7gtHy2/DayIld0nxkDd+6devM/Q+PU8DV9tC5i1O6MGPMHiD+
oSY9gDFoMgrM7wNnz8tvty2W6vI7K03yG4GS387kd2hH7s44c/jFbUpLoTJH
8InV8JzJ76DKHMHldzIKzG/DidBWkN8RbN6d8adA1TaZYajMHmBiNTxnm98W
kd9E8sugNn9CSn4T7e7ujp/fV197ffOrmlh+N9fw+F1oYg3HeFpt1X6tbjHm
rt0WH1M/SbV1btsye4CJfS5s5uT3yPx2jrD8MrQy89v5VGRp+R35JORs83vY
rDhXF1ptG+4zsFSlVRHGXsS2tiY31+dqzS+V9+ozNyzsMnuAiV3QS5n5PXHq
9GEveOT8Vk8uv5SpzPxu/pTxVuR3/JOQdX43nIqc5L25DtupMT+OvbrVk/m6
wJYKdaksh26lxWpfTc3qyyi2B5jYiXTkt4kO+X3o3EX5ZWgb8jvah0Fa5bdK
jfx2y+9U14Br+6Vcy/Bqu/6d7x07ee9iuZbZ8quFXf2w99zLGXuAwz6gPckT
6RSY372vvym/8ksTBeb32WtvyW/n7bC3Eiac37VLoU8fO57rEFTbHXeezNIa
iaqqvuMLX8zbA6zeLXbCBTxza/Mba2H57aDKbwygpeX3wEnIiVrbM584dVp+
Oygkv2vv9TrVk5CVpWEo71ux1bbVN4rM3gOsnk6fdgHPnPz2S34Zk/z2S36z
qE4IV7uphlPk+kTY4rZ0o6q33v1gepfysqi0/G7vzYrll/HJb1/yXgw58/xW
J9Xj/7H7d993Nu9R2N67VBXVA9THNHerMLjqWEdnJb8pSptDyu9MLOY3+wgi
vylbHL46v5P8LPZmUca//uDljB/qnEANZ+8BqsvyF9e2zEQcdPlNUVR+z+/t
y++syG+iEuaQi/md2wSy8trv3FDDneW9LUO1PXJ5784zF+ZZvchvCvklrxLy
e9jNAcpXQn7j8D36xFfnnN+8N5ertu29HrKEGt7eHoB0JeR3e6+nkl/yKqEC
tzq/sYDNnt+9517O3RI5lXA9lTlkyrZ4PQZzU8K7sVud3+xjkPzOWQn5NYeU
3xQl1PD2jkElXI+xvT0A6eQ3RQn5NQbNmfymkN9CZL9H8YavzC5cCTVsDjlz
2fO74SuzCye/ZCe/nZWQX3PIcOHS5ezflVbsVywd6Zd/7TY9ABnJb4rPfPZz
8ktGJXxX6fbm947Pn5Df7PJelv/M//nK3nMv11/1vvTV6qUV9uoX05++58EC
vyuN+cib3+qScvmVX7qR3+ZW81vmdx3OUMavzF66GGPpq9UXC3uxtgdtjfo1
1OVaV+zqF9PnvazXhzo5yPp2mPzKL4nkd5H8bqNXX3s9y1LohetvN1mG12ui
pYpaLO/FOq+3xb+4dlv6u4vPufQkG15eOT0A8zTb/C5FWH7ZRvK7pfl1MWQt
1+n09C60rtK15bq2sNcWecryKlfrNewBmLzZ5ncpwtvVet7IppLrZJr8JubX
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
IclLfhM1T6X80jv5TWQOmV3zynQ5wVoNa1gPwBDkN5E5JHkZQVLIbwkatq1p
/Fp6APKS3xQNm0V+GUjD/FoDriW/JTAGpVDD5CW/KeSXvBpWoPyuJb8laHgU
nApeq2HrWUUyEPlN0TCY8stAGpaWOeRaDVvPHHJQTY6CQ3AYPQB5yW8K+SWv
hhVoDbiW/JbAGJRCD0Be8puiYcsYgxhIkwqU38PIbwmaHAWHYIMj54d6AAZ1
ZAXK7wbyS15HVqBLKTZocn7GOZyhVS1869atd37v/371tderLX7+4Ac/jN88
MAZtVLde2P/ErU8cGIMYWF2BEVj5batqHPkllw35je1AfjeS3+yiXG87/Ru/
9Kufvfu+s7E9euWZaqt+Gdunjx2PB9y4+UZ1RFgU5Xrs5L13fP7EQ+cuPnD2
/JNPP19t8XNs8ZsnTp2OB+w997LWYwhH5jf+SH4PE/k9ec+Dv/KZ4xvyGw+4
8uWvaT2GIL8p5DejarET9Rnl+uw33/r2O3+wYYsHVFX9m+cvVSujmasWOzs7
O1GuTVrvsaeuRj3v7u6qZHohvykW87v39Tfll5HJbwr5zStWNLcfv6ta7Gxu
/LWHo6rk2R6L6oR5tdhp23ovXH87FkcqmRRRfun5ne1IlJjfM/c/LL+kkN8U
KfmN1ov8Pv7EFflNEWufDqW7tpIvXLqce2/GFtUby5kO1bvUevEk8VS594bt
I78pInQxA0zPb6wE5ZcO5DeF/OYVc+9Yv6QX8OKxiDKez5Q+vXoXt8eeuhoL
otz7xNYYIr+zekNBfskoghbDpfx2Jr95RaWduf/h564dcd1FhzKOp518GccO
7uzsvPnd93pvPefVaUJ+U8gveclvCvnN7oMf/PDu+8722/6L229f/caED0R1
AcZ7v//REE0XZfzSK9cn3Hqki/zGSCG/3Qyd36svXptw65GumkDKbzdVfv/w
oz+R31yGLuBqe+Ds+akeiN3d3Reuvz1o691+/K7ce0mh5DeR/JLROPmd8NlI
+c3uwqXLvZ9Cn8+BGKGAv/3xaij+odz7SonkN0XEqve3wNbm17VVrCW/KeQ3
u9EKOLZHrzxz4+Ybufe4T9U9BMZpvceeuuqTYiyJnm3M/L762uu597hP8kte
8psiAvXSK9dHaz35XXXr1q1BL4Nc3aLHnsyBiNZ76NzFMVtvwu8n0sE474JN
tSOVX/KS3xTyW4IxT0LW22TOqI/zLvZUewDSjXkSQ357ye/ETgSRQn5TyG92
45+ErLa+TkV+9KMfr27vvP/h4rb0p+n/aG38RVC/rce2G/8kRt2Ryq/8kkh+
U8hvCbIsgqrtxKnTR768pZp88eb3z+/tL27xO6vbUg0v/elhz7BY7Q1bb/xF
UL89ANsuY36bnMqQ38Py61QGB1uY36UA9pvfOsINW09+s8u1CKq2pcl8XauL
lbZUk/2uYup/t07KYp2vjk2rrZdlEdS8B2Da5PdAftla25jf3iO8dPZy7b++
dm0ovyWIaXyuRVBsj1zeu/Llry0WzHCF2sHq2LRU1RHAx566mqv1nIokb36j
AiO/kYUtym/9Oqv8jvZxTvllVa7TaFuR34OFs6BLa0P5LUfGE+mxPXvtrVhH
FFKuDS1W9aduu2fv629mbD33ipy57Pk9908uRRZyN0M75eTXveZmTn47KCe/
Fy5dzt0Y+d1+/K5ch6DatvqE8IlTp7UeGclvip2dHa1HRkaQFPKbXd6LMapt
e2+1lPdijG1vPdLJb4oS8jvhL57jSHHoIz7y2438lsAYlEINk5f8ppBf8ioh
v9tbgSXk9+77zm5p6/Ul70dCqm1777NUwirS96bNWQn53d4KLCG/LsufM/lN
UcIccub5fef9D+88cyEaQQ13U0IPMPManrMqv49c3pPfbsb8jmz5ZYn8JpLf
vKqP8JcwC1LDiTX86BNf3a4PtpNOftPJL7nIb7py8rt1H2xPVN0MqtrrEq7H
2N7rqUqo4Th83/3ev6nul5W7PRhDzDeKyu/2Xk9VQn7vvu+s/M7KUn6zX00h
v+n5rW40lLs9RlItf+pfllDD2zuHLKH16h6gKmMnNKYtju9iZ1VCBcqv/NKQ
/PaohOsh68/UVEuDyed3qYAr2e8v1+Qrs8tUQg+wuIqsju/ky3i25LdfJYxB
8jsrMc1Y+h357ay0/IbJ53ftDma/T/6lf/pb29vs2e8Q++ljx5de0mo3xTSU
md9z/+TS9uY3+z2K5Xc+1uY373eVRn7v+MIX5bfH/E54GnnYru3v72f8aPYL
198+dvLexe+hLuebOg+z+NXwn7rtnrw9wOp3pS1drsA0HHZYy8xv4REuOb9r
zzaz7TbkN+PHaiK/D527uNX5Le27Siec38OWt3kvTI0CXnwrp2r/qqTrqq6/
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
UVFRtdnUgvx3UFpampqa+rd+dMrNzT1y5MifLOTOnTsVFRV/SXv+Kq5fv751
61Zjt4JhGOa/sEMal5o65DfffEM/7mxiYuLp6XnhwoW/b24YQJMmTT777DPx
Jcykbt26x48f13EKujNu3DgdGegHvn/99Vet9B9++OHtt9/+M62tEYmJiejd
vXv36CVGrVu3bqGhoWr5pc3+h5tKnDp1ql27dvTT6m3btlX8KXMRtSDrw7Jl
y6Bb+ufHRwbUVe1vIyLadTU4ODj07t378OHD+lcxc+bMAQMG6J9fi3nz5jk7
O6ORlpaWgwcPLi4uNrioP480vLGxsfXr19f9q50MwzD/GOyQxqVGDpmSkmJq
arp48eKbN28eO3Zs4MCBdnZ2r9VPD2PFx8qbnp5OL7HY4eUvv/yi45THjx/r
/qHq18QhKysrO3bsGBwcTC+XLFlib2+v42drjOuQiHzz5s1Hjhx59+7dgoKC
UaNGQcl0zLQ/45A48dChQ/rn19MhMZe+/vrr3NzcjIyMgIAAGxuban+mXOTP
OGRSUpKZmRk+rCFuEG93d/fu3bsbVtRfgjS8z58//2f2ihmGYfSBHdK41Mgh
mzZtGh0dLb4sKyv7z3/+k5qaiuOdO3dGRETExMR07tz5ypUrSCkqKpo8eXK3
bt1Gjx599uxZ8Sysy3379vX19YWRUkppaemHH36Icnx8fLDybt++3eDphHW/
cePG0BVa7rUc8siRI8OGDcOKPGPGjPLyckrE8caNG+kYvYAYe3p6rlq1KiQk
BPIgVOkNVnY/Pz9vb+8VK1ZQZhKz7777DgX6+/vv3r1bbAb6HhkZiXKCgoL2
7dsnFq4VooMHD+JEDw+P8ePH6+Mn8HYTE5PDhw9DzGxtbb/99lvxLXnXdDjk
8uXLEXCMwsKFC2lPKScnBy2h47Vr12LIKOeiRYsgqzUbAw137txB7VlZWfQS
4oG4ifohnwNaDqk4UuKM+uijjyiqFRUV6AhO7Nq16+zZs3WcC/mJi4vr0aMH
BhEd1NMhd+3aJVaNU3bs2KHWfkFzw0BoaOi7774bHh6O0TfYIRs2bCj2RdD8
wOVbb7116dIleikfO7U/Hx1/Voohon7hFPxRz58/HxGTh3fPnj2Yq2J+eWPA
1KlTV65ciY8PXl5e8fHx+IxG6TWd7QzDMNXCDmlc9HdIeAtWE6kNSsHqY2pq
GhAQsG7duuLi4srKSuhWr169oGfBwcHiRVisNY6OjjA0mIm1tfWWLVuQeP/+
fZTcqVOn9evXT5w4EZokXrEVQZnfKKHVeKz7WOjd3d0/+eQT4VWHzM3NrVev
3pQpU7Dud+jQAXZHp2AR/Oqrr3CAbObm5siwYcMGLKNmZmbff/+9UKU3cDCY
2PTp03GcmZkpaMQM+bEQo9mff/65hYUFXa5FfngOuo9yoqKiLC0t4X7yED16
9AinYGlOT0+H2wQGBuozClh/0XhkxgItrtqKXVNzyLlz5zo4OCB0WOgbNWoE
ixA0m7FoDGXu3bs3TsRw49jNzY2CYMBYtGnTBqej6oKCAmm64hyQtlaxO5hR
3TUg2jBJRBLeixrT0tJwIvzw5MmTOkZ55syZ9vb2aGRiYiJ6XVOHxMjilPPn
z6u1H7qFCYxxxKBPmDABE0PukPrE7fbt26hI7QZdxbFT+/NRS1cL0bx58+zs
7L7WgA9isbGx8vCi1yhQR2MA/uptbGwSEhJgmPBhBByJhs12hmEY3bBDGhf9
HTIjIwOrybNnzwTNtkxwFWvXrhU0ggRRFK0mOzsbDkb7Tkh0dXWlbC4uLsnJ
yZRn2rRp/v7+QtVid+DAAcrs5OS0Zs0ardoLCwunKqF1GRrr/p49e7BKWllZ
QX6kDok1ztfXl7KdPn0aEkKPBYkOiXXWz8+PMqDlWPKkDrlt2zZ6CzI2f/58
QSNmSBevJn/wwQeRkZFUONZr8UGSwYMHh4eHy0N04cIFnA7Hfv78OaooKyvT
ZxSwFiM+iK1U5hW7puaQzs7OSUlJdAy7wCpPx3369Fm6dClkEoLx/vvvY5jQ
BXREfrlcz7HIz88fOXJknTp1aCPr559/pnTFOSBtrWJ3KKrihwt4+KlTp+hY
erFVbZRbtWolbttCe/R0SMyNsWPHDho0CFIENdLR/uPHj6N5mMliMOUOqU/c
8FeAtkn3BqUojp3an49aulqIUDj5HsjKyoIMy8MrdUi1iYRAhYWF0XFERET/
/v0FQ2c7wzCMbtghjYv+Dnnx4kWsAjdv3hQ0ivWVBpgJ1EvQCBI8QcyMRRaZ
zavAMVZbLFX0hIWYCISqxe7GjRt0rre3d0JCgmHTiRxS0NwuaGtrizJFh2zW
rJlW1SQhokNiYZ0yZYpYVOvWraUOKV5mRbbY2FhBI2bNmzcX86ODPj4+1HcY
i5g+e/bsnj17ykMEoqOj0Ug7O7shQ4YgvHr2EdYBx5OmKHZN0SEx3EgUH2+h
MSVLhBgHBASkpaWh8JUrVwYFBW3durVz5856tkoNNCMzMxNBRttglWpzQNpa
xe4gqi1btlSsQio5iudSr8VHq2hTUR+HDAwMxBh5enrClyA/SFRrv9agY4wM
u5aNEIkbnlqojZ3an49auj4hkqLokDomEhwyPj6e0vFn2KNHDzo2bLYzDMPo
gB3SuOjvkBUVFfb29gsWLBBTsKo2bdp0+fLlgkyQMjIyrK2tccpvVdD+m4OD
w44dO36TIOjnkHfu3AlWQuvLT0SHRHVwIXd3d9EhQ0NDR4wYoVW1IHFIrPte
Xl6kCmiMiYlJtQ5pYWEhbiKh8LFjxwqarSQrK6vKykpKp3rlIRKjCsXCstu+
fXt9RkHQ7CP169dPmqLYNbV9yAYNGoi3xu3fv9/Gxoby5+TkNGzYMDw8fNGi
Rbdu3UK2CRMmTJ8+Xd4Afcbi8uXLy5YtE18+fPgQjaHvF1KcA9LWKnYHUbK0
tBSrKCgoKC0tpWOcePDgQR2hAPXr1xd3knFQo2vZMDpTU1PxO20U249ISgd9
6NChcofUcw47OjrSRjfx4MGDkJCQa9euqY1dTR1SLUSNGjXavHkzHZeVldHN
DFrhle5Dqk0kTGbxv4TUIQWDZjvDMIwO2CGNy5MnT0TBq5b4+HgsrBASnHX9
+vVhw4bBKmmt0RIkrO9YCqdNm1ZSUnLmzJkuXbrQIyc4BdlwLlbGUaNG0R6m
Pg6JAjcpIb8fkhxSqLq1THRIrHdY5vBueXl5UlISlkKta9mXLl1Cd3x8fCBO
MK569epV65BIj4iIgCDBjmA49GwO1l8sr5MmTSouLqa1FTnlITp06JCHhwfM
DcGPiopyc3MT34KuIGhqoyB3SMWuqTnk8OHDkQFOgoB379594MCBYjn4RIAA
0h5Rx44dcUx3fhowFnA8MzMzBBbRePz48axZs+DkCJTaHJC2VrE7KASSExYW
hkLoE4p4syLUFyNCTqg2yp9++il6hF5fvXoVoZY6pFq0pfdDjhkzxtXVlT4v
KLb/0aNHcEsa9LS0NPRd7pB6zmFMfnw2WbduHUKHWjDWLi4u9NFGcexq6pBq
IYLNtmvXLi8vLz8/39PTE12Th1fqkGoTSdEhdcx2hmEYg2GHNC5YGiorK/V0
SCxkc+bMwQJEbta2bVvxS/MgSFh3pJmPHj1K3yRpbm6OdZYWSpgA1lboFtK9
vLxogaOHXrFy0YlY7Ax7FhhA/MQv9gGpqakoGS2hl3FxcfQ8hZOTEz0KIUgc
UtA8bvDll1+GhIRgyWvTpg3dw0l6g+WP8vj5+YkOicU9KCgI76LeqVOnivVm
ZWWRqECkY2JiFEOEYrFqIzgQBmdnZ3GrR9DYCz3trojcIRW7Jm12SkoKukM5
MQT+/v4YAlSNvku/mgntad26NR1DpNEp3d96pJtt27ZBP2iqIA7iNqDiHNAK
suJInThxokOHDkjEDISHiJMWcxIxDAgI0HEuzBNug0TI5+TJk/+n6s5eQT3a
6L74rD0+j+BE2nJXbD/Yu3cvoodE2OaQIUPoPknDiI6ORuMpdKiCNiEFlbFT
+/PR8WelGCKY5KBBg6ysrGD7iJX4JJQ0vKtXr3Z3d9fRGOFVh1y6dCnqFXTO
doZhGIOBwODjsLFN6s0F/9srKipq9KXBsMHLly+Ll7p0g5VF7iEQV2PdVI+e
qn2vCNa1cePG0RXSY8eOiTdMVgv6ouhaKKrawOJErS/YhK6IW3Y1QkfX5MCg
qr2Y+5dwQ4M8vdo5oNadkpIS+d0XlRqqPVc+UgZHW639BhSlCLqQl5en+OWr
f8nYqYUIhct/gkorvAY3Rj7bGYZhDAb/xyAw+MdibJN6c3n58iWWALpS9oZT
XFzcuXPnOnXquLq6QiDHjBljlN/jyMjI0NrRZf4+ONoMwzC1FKgLBAYaY2yT
eqMpLy+HxrNGCpr9luzs7PT0dPEK4D9PUVFRXl6esWp/0+BoMwzD1Eboi8Ig
MH/88YexNeqN5vfff4fJ1+hXsxmGYRiGYYwFpAXqAoExtkMx/0cbwvo/oM0w
DMMwDPPPA2MhgcSBse2J+S80InRRm02SYRiGYZjXCsgJXcKmXS9jexPzCnRR
G1RUVFRWVv7GMAzDMAzzGgAtgZyQpfAl7NeWly9f0n2q/8swDMMwDPMaQM//
8lPYDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwbyD/D7ZkpY8=
    "], {{0, 469.}, {438., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{796.09375, Automatic},
  ImageSizeRaw->{438., 469.},
  PlotRange->{{0, 438.}, {0, 469.}}]], "Output",
 CellChangeTimes->{
  3.9589727413518972`*^9, 3.959039610262988*^9, 3.95903967895538*^9, 
   3.959039911127322*^9, 3.959041301847124*^9, 3.959042779975165*^9, {
   3.959049331964096*^9, 3.959049356557654*^9}, 3.9590510353625383`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"eeea33e8-ee9a-42be-b16c-93eec8a076d5"]
}, Open  ]],

Cell["\<\
The image displays a graph visualization, where each node represents a \
\[OpenCurlyDoubleQuote]Spekkens State,\[CloseCurlyDoubleQuote] derived from \
the Kronecker product of two simpler Spekkens states. These states, visually \
represented as 4\[Times]4 binary grids, are arranged in a grid-like pattern, \
though the underlying layout algorithm attempts to optimize for visual \
clarity of connections rather than a strict grid. The accompanying \
Mathematica code is responsible for generating this interactive graph, \
allowing users to explore the relationships between these composite states \
based on the application of specific permutations.\
\>", "Item",
 CellChangeTimes->{{3.793891724891276*^9, 3.793891806306624*^9}, {
   3.795737503964374*^9, 3.795737584805357*^9}, {3.795737632794353*^9, 
   3.795737653673546*^9}, {3.958573762821009*^9, 3.958573782462821*^9}, {
   3.958573868949756*^9, 3.958573894310577*^9}, {3.958606885729864*^9, 
   3.958607092174608*^9}, {3.9586072258570004`*^9, 3.958607262092358*^9}, {
   3.958607532255677*^9, 3.9586075361084538`*^9}, {3.958607697827297*^9, 
   3.958607698828539*^9}, {3.9586095323623962`*^9, 3.958609547774262*^9}, 
   3.958966544536433*^9, {3.959049421928318*^9, 
   3.959049423315943*^9}},ExpressionUUID->"8928fcb1-77cc-447f-806f-\
17e15898cfe4"],

Cell[TextData[{
 "The core of the system lies in defining the SpekkensStates and \
SpekkensPermutations. The SpekkensStates are a set of six 1\[Times]4 binary \
vectors, representing the fundamental \[OpenCurlyDoubleQuote]bits\
\[CloseCurlyDoubleQuote] in the Spekkens toy model. The SpekkensPermutations \
are a set of four cycle notations, representing the allowed transformations \
on these bits. The tool then generates all possible pairs of these \
fundamental states, and for each pair, computes their Kronecker product to \
form the states that populate the graph nodes.\n",
 StyleBox["\n",
  FontWeight->"Bold"],
 "The graph, g, is constructed where each vertex corresponds to one of these \
composite states. Edges between vertices are established if one state can be \
transformed into another by applying any of the SpekkensPermutations to \
either of the two original states that formed the composite. This creates a \
network of reachable states. The GraphLayout is set to \
SpringElectricalEmbedding, which attempts to arrange nodes to minimize \
overlaps and highlight connections, rather than a rigid grid.\n",
 StyleBox["\n",
  FontWeight->"Bold"],
 "The interactive DynamicModule functionality allows users to click on any \
state (represented by its 4\[Times]4 grid image) to select it. When a state \
is selected, its color changes to Yellow, its immediate neighbors (states \
reachable by one permutation application) turn Green, and the edges \
connecting the selected state to its neighbors are highlighted in Red. A \
dashed Red circle also appears around the selected node for further emphasis. \
This dynamic highlighting provides an intuitive way to understand the local \
connectivity and the effects of permutations within this state space, making \
complex quantum state transformations more accessible for study."
}], "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.9586095168528*^9, 3.958609587463208*^9}, {
   3.95860970879724*^9, 3.958609710103291*^9}, 3.958966547156266*^9, {
   3.959049425928463*^9, 
   3.9590494346125183`*^9}},ExpressionUUID->"fa0654cd-3819-4723-a226-\
8c4b155d6db4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateToPlot", "[", "state_", "]"}], ":=", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{"state", ",", "2"}], "]"}], ",", 
     RowBox[{"Mesh", "->", "True"}], ",", 
     RowBox[{"ImageSize", "->", "60"}], ",", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<[\>\"", ",", 
           RowBox[{"Row", "[", "state", "]"}], ",", "\"\<]\>\""}], "}"}], 
         "]"}], ",", "8"}], "]"}]}], ",", 
     RowBox[{"FrameTicks", "->", "None"}], ",", 
     RowBox[{"ColorRules", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "->", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.2", ",", "0.6", ",", "1"}], "]"}]}], ",", 
        RowBox[{"0", "->", "White"}]}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permToString", "[", 
    RowBox[{"Cycles", "[", 
     RowBox[{"{", "}"}], "]"}], "]"}], ":=", "\"\<Identity\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permToString", "[", 
    RowBox[{"Cycles", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], "]"}], ":=", 
   "\"\<(1\[LeftRightArrow]2,3\[LeftRightArrow]4)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permToString", "[", 
    RowBox[{"Cycles", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], "]"}], ":=", 
   "\"\<(1\[LeftRightArrow]3,2\[LeftRightArrow]4)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permToString", "[", 
    RowBox[{"Cycles", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}], "]"}], ":=", 
   "\"\<(1\[LeftRightArrow]4,2\[LeftRightArrow]3)\>\""}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"states", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"edges", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"currentIndex", "=", "1"}], ",", 
     RowBox[{"historyGraph", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ",", 
     RowBox[{"currentState", "=", 
      RowBox[{"RandomChoice", "[", "SpekkensStates", "]"}]}], ",", 
     RowBox[{"availablePerms", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "SpekkensPermutations", "]"}], "]"}]}]}], "}"}],
    ",", 
   RowBox[{
    RowBox[{"states", "=", 
     RowBox[{"{", "currentState", "}"}]}], ";", "\n", 
    RowBox[{"edges", "=", 
     RowBox[{"{", "}"}]}], ";", "\n", 
    RowBox[{"currentIndex", "=", "1"}], ";", "\n", 
    RowBox[{
     RowBox[{"updateGraph", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vertexStyle", ",", "edgeLabels"}], "}"}], ",", 
       RowBox[{
        RowBox[{"vertexStyle", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"i", "->", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "==", "currentIndex"}], ",", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"EdgeForm", "[", 
                 RowBox[{"{", 
                  RowBox[{"Thick", ",", "Red"}], "}"}], "]"}], ",", 
                RowBox[{"RGBColor", "[", 
                 RowBox[{"0.9", ",", "0.95", ",", "1"}], "]"}]}], "]"}], ",", 
              
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"EdgeForm", "[", "Thin", "]"}], ",", "LightBlue"}], 
               "]"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"edgeLabels", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"e", "->", 
            RowBox[{"permToString", "[", 
             RowBox[{"SpekkensPermutations", "[", 
              RowBox[{"[", 
               RowBox[{"e", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"e", ",", "edges"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"historyGraph", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{
           RowBox[{"DirectedEdge", "@@@", 
            RowBox[{"(", 
             RowBox[{"edges", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", 
                RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ")"}]}], ",", 
           RowBox[{"VertexShape", "->", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"i", "->", 
               RowBox[{"stateToPlot", "[", 
                RowBox[{"states", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], "]"}]}], 
           ",", 
           RowBox[{"VertexSize", "->", "0.08"}], ",", 
           RowBox[{"VertexStyle", "->", "vertexStyle"}], ",", 
           RowBox[{"EdgeLabels", "->", "edgeLabels"}], ",", 
           RowBox[{"EdgeLabelStyle", "->", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"Background", "->", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"1", ",", "1", ",", "1", ",", "0.7"}], "]"}]}]}], 
             "]"}]}], ",", 
           RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
           RowBox[{"GraphLayout", "->", "\"\<SpringEmbedding\>\""}], ",", 
           RowBox[{"ImageSize", "->", "500"}]}], "]"}]}], ";"}]}], "]"}]}], 
    ";", "\n", 
    RowBox[{
     RowBox[{"applyPermutation", "[", "permIndex_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"perm", ",", "newState", ",", "existingIndex"}], "}"}], ",", 
       RowBox[{
        RowBox[{"perm", "=", 
         RowBox[{"SpekkensPermutations", "[", 
          RowBox[{"[", "permIndex", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"newState", "=", 
         RowBox[{"Permute", "[", 
          RowBox[{
           RowBox[{"states", "[", 
            RowBox[{"[", "currentIndex", "]"}], "]"}], ",", "perm"}], "]"}]}],
         ";", "\n", 
        RowBox[{"existingIndex", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"states", ",", "newState"}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"existingIndex", "=!=", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"existingIndex", "=", 
           RowBox[{"existingIndex", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"states", ",", "newState"}], "]"}], ";", "\n", 
           RowBox[{"existingIndex", "=", 
            RowBox[{"Length", "[", "states", "]"}]}], ";"}]}], "]"}], ";", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"FreeQ", "[", 
           RowBox[{"edges", ",", 
            RowBox[{"{", 
             RowBox[{"currentIndex", ",", "existingIndex", ",", "permIndex"}],
              "}"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"edges", ",", 
             RowBox[{"{", 
              RowBox[{
              "currentIndex", ",", "existingIndex", ",", "permIndex"}], 
              "}"}]}], "]"}], ";"}]}], "]"}], ";", "\n", 
        RowBox[{"currentIndex", "=", "existingIndex"}], ";", "\n", 
        RowBox[{"updateGraph", "[", "]"}], ";"}]}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"reset", "[", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"currentState", "=", 
        RowBox[{"RandomChoice", "[", "SpekkensStates", "]"}]}], ";", "\n", 
       RowBox[{"states", "=", 
        RowBox[{"{", "currentState", "}"}]}], ";", "\n", 
       RowBox[{"edges", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"currentIndex", "=", "1"}], ";", "\n", 
       RowBox[{"updateGraph", "[", "]"}], ";"}], ")"}]}], ";", "\n", 
    RowBox[{"updateGraph", "[", "]"}], ";", "\n", 
    RowBox[{"Panel", "[", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Spekkens Toy Model Explorer\>\"", ",", "16", ",", "Bold", 
             ",", 
             RowBox[{"FontFamily", "->", "\"\<Arial\>\""}]}], "]"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Dynamic", "@", 
             RowBox[{"Labeled", "[", 
              RowBox[{
               RowBox[{"stateToPlot", "[", 
                RowBox[{"states", "[", 
                 RowBox[{"[", "currentIndex", "]"}], "]"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<CURRENT STATE\>\"", ",", "10", ",", "Bold"}], 
                "]"}], ",", "Top"}], "]"}]}], ",", 
            RowBox[{"Dynamic", "[", "historyGraph", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Dynamic", "@", 
             RowBox[{"Grid", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Button", "[", 
                   RowBox[{"\"\<Reset\>\"", ",", 
                    RowBox[{"reset", "[", "]"}], ",", 
                    RowBox[{"ImageSize", "->", "80"}]}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<Apply Permutation:\>\"", ",", "Bold"}], "]"}],
                   "}"}], ",", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i", "=", "i"}], "}"}], ",", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"permToString", "[", 
                    RowBox[{"SpekkensPermutations", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"applyPermutation", "[", "i", "]"}], ",", 
                    RowBox[{"ImageSize", "->", "100"}], ",", 
                    RowBox[{"Enabled", "->", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"availablePerms", ",", "i"}], "]"}]}]}], "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"Length", "[", "SpekkensPermutations", "]"}]}], 
                    "}"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"Alignment", "->", "Center"}], ",", 
               RowBox[{"Spacings", "->", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], ",", 
            "SpanFromLeft"}], "}"}]}], "}"}], ",", 
        RowBox[{"Spacings", "->", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], ",", 
        RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
      RowBox[{"ImageMargins", "->", "10"}]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958972761258408*^9, 3.958972761260155*^9}, {
  3.959049450652125*^9, 3.959049452427177*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"a0c27a70-a5e8-4514-8fdb-c4e9cea43773"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3XmUZQV5/+vqbuYWaEZBEHKRQTFAkNmkE4EQNIAojUwyK/4aUaYOASUM
MommSRgEAsoUAhgkSlAJgygig8yLQZnnGUKPdJfef353396LvQ7V3dUF9QJv
vz7P+i5WnV37nFOnqoBVn1Xn1P+z70E7fGVkX1/fhEWaf+ywz+GbH3roPt8Y
N6a58IUDJ+z/fw7c78ufOfAf9vs/+x266b6jmoPHNv/4fxfs6/v/3/6/AAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAE+eMf/zh9+vRJkyb9LwAAAABxXn/99cmTJ0+fPv2P
f/zje9Z5Js8yderU5n7fAAAAACDU9OnTp06d2haYd7v5zJgxo7mXadOmzZil
HwAAAIBQM2dp28u0adMmT57cvPGupp433nijucf3+3EDAAAA1Ddz5sw33njj
XQo+7RO4pB4AAACA91IXfMKf0jVp0qT2CVzv90MEAAAA+NPSPqVr0qRJgann
D3/4Q/srQ+/3gwMAAAD4U9S+wM4f/vCHqNozbdq0qVOneg4XAAAAwPti5syZ
U6dOnTZtWlTtmTRp0vTp09/vhwUAAADwp2v69OmBT+Z6/fXX33jjjff7MQEA
AAD86XrjjTf+93//N6r2NDel9gAAAAC8j9QeAAAAgErUHgAAAIBK1B4AAACA
StQeAAAAgErUHkLcdNNNxx9//C677LLxxhtvtdVWBx988PXXXx9+Lw888MBB
s5x77rnv7IT30fe///2DBnXkkUe+qx9A8znp7usb3/hG77vuu+++3o/kt7/9
7XDu6MYbb2xv54orrhjiVX7wgx+0V2k+krmdc/755w/+CXzqqaeG82H3evrp
p9vbnDhxYtRtAgAAvGfUHoZpxowZRx555IgRI/pms+uuu86cOTPwvq666qr2
lv/+7//+nZ3wPtpuu+1m/xT1Wnrppd/VD+Azn/lM79397ne/6951zDHH9L7r
vPPOG84dnXbaae3tHHDAAUO8ymc/+9n2Kj/+8Y/nds64ceMG/wTefvvtw/mw
e91xxx3tbX7iE5+Iuk0AAID3jNrDMJ1//vm9P3GPGTOm9+IJJ5wQeF9qz3AM
qD1nnHFG966xY8eqPb3UHgAAYL6m9jBM3c/gX/rSlx5//PHmyIMPPrjJJpu0
B9daa63A+5qva89LL730+Ju++c1vth/nlltu2R18+umn39UPYEDt+fznP98e
nzRp0kILLTQf1Z7DDjvs8TkJ/I+P2gMAAMzX1B6Gaa211mp/Lj7rrLO6g9de
e+1KK620xhprND8sT5kypTny7W9/e5999tl3331ff/31iRMnfuYzn9l4443H
jx//8MMPD7jB3/zmN1/+8peb944dO/ZrX/vanXfe2b1r9phzwQUX7DNLc8tP
PvnkPE+Y5100Tj311PYqzffzOeecs+OOO6633nq77rrr//zP//Se9tOf/nSX
XXbZbLPN1llnnS222GLChAmzP5a5+e53v9t+nNttt90cT7j11ltPOOGErbfe
esMNN9xzzz0vvPDC7l0HHnhg++Hdc8893cH77ruvPXjEEUfM7U4H1J6lllpq
xowZzfGf/exnA35Jprf2vPLKK//+7/++3377rb/++p/+9KcPO+ywxx57bMAt
X3fddbvvvntzQvNwzj333DnWnqlTp5500knNCc0n8wtf+MK//Mu/9P634m3V
nkF+Yezkk09uPw8HHXRQe/vNPw8++OD2YPtqTkP5Vpxb7Rnk69L41re+1dxy
87l64IEHdthhh0022eSb3/zmq6++Os+HP8gVAQAA3gG1h2Haaaed2p+LR4wY
sf3223//+9+f4++o/OVf/mV72oAnDY0ZM+aGG27oTmt+Cl5ggQV6T1h44YX/
7d/+rX3vgJhzxRVXjBw5sj3S/Lw8lBPmeRf9PVVkq622GpBBLr744vacU045
pW82H/7wh19++eWhfNIGrz1nn3327DfefDAvvPBC896dd965PXLwwQd3V/nH
f/zH9uCXvvSlud1p97g23HDD9o1bbrmlOX7ooYe2FzfaaKP2ja72vPjii+uu
u+6Aj2TxxRfvrRwTJ04c8KpNyyyzTPtGV3uefPLJ9dZbb8DtbLrpps8++2x7
QlTt+cUvftF9xb/97W83R4477rj24mKLLXb//ff3D+1bcY61Z/CvS2P99ddv
D6622mrtG0svvfS0adPm+fDndsW5PUwAAIDBqT0M0y233DLgeUCNdddd91vf
+tbzzz/fndb9iN1YdNFFmx+0u0TwsY99rP22uffee0eNGtUe3GCDDf76r/+6
fXvhhRd+4okn+t8ac2666abmdtqLhxxySHsv8zxhnnfR/9bfgVl77bX33nvv
5ZdfvrtKc8LLL7/cBo3m+KGHHnrcccd94hOfaE/YbbfdhvJJG6T2XHjhhd1n
pvk0fupTn+ra1C677NKc8POf/7y9uMoqq3TXWn311duDv/zlL+d2p93j6vLO
8ccf3/9malhsscXGjx/fHm9rT/Ovc/e4llhiib/7u79bddVV24sLLrjg3Xff
3ZzzyCOPNJ+69uCYMWO233777mJfT+1pPvL2yOjRo8eNG9floP3337894W3V
nuYrOHo2e+21V3vaN77xje7b7PLLL28+1PZi97tnQ/lWnL32zPPr0t8TbRrt
e/fbb7+hPPy5XREAAOCdUXsYvv/6r/9aZZVV+mbTHHzggQfac7ofsT/60Y8+
99xzzZF77rnnAx/4QHvwJz/5SXNkt912ay92v6By+OGHt0e+/vWv9/fEnOZG
lltuufbtfffdt/tI5nnCPO+iv6eKbLTRRu3vV1xzzTXtkWWXXbZ/1hOXunu5
4YYbmu/5559//qtf/er3vve9m2++eSifsUFqz8c//vH2XQcddFB75Nprr+0+
pb/+9a9nzJjx4Q9/uLvYnHDnnXe2F1dbbbVB7rR7XM1nu31j8803f+GFF9qI
seWWWzafgfZ4W3suu+yy9uKYMWMeeeSR/llPR2pOaw9utdVWzZEjjjiivbj6
6qu3zzx68sknu898W3t+97vftRdHjhzZvrLTK6+80oa4hRZaqP39luG/SvNO
O+3UnjZ9+vSNN954wHs/97nPdbczlG/F2WvPPL8u/T3RZs0112w+G4899ljz
eIfy8Od4xXl/GwEAAMyF2kOIyZMnn3feeTvssMNSSy3V+1P2Cius0H5LdD9i
H3744d219tlnn/bgySef3FzsnjR06KGH/miW448/vj3yN3/zN/09Maez8MIL
v/baa90NzvOEed5Ff08VOfvss9sjkyZNao+MGjWqf9bv9vQ+d2mJJZbYdttt
zzjjjBdffHGIn6651Z7mZ//uZnv/Qnr34kj//M//3N/z6yttoepe8/nII48c
5E67x/XrX/96nXXWaT853Z9UO+644wbUnu5XfXp/Yeniiy9uD44ZM6a5uOOO
O7YXuwbSOOCAA9qDbe25/PLL24srr7zyj9609tprtwevv/76/rdZe9Zcc81t
Z/Od73ynO7P51HX1prHSSit1T7bqH9q34oDaM8SvSxdtev/e2VAe/hyvCAAA
8I6pPQzf888/3z0NasaMGTfffHP31JVG++su3Y/YV111VXfFY489tj341a9+
tbnY+xP6AGussUb/nGJO31sTxzxPmOdd9PdUkean8u6K7ZGRI0e2F0899dTZ
b2HJJZc8//zzh/IZm1vtmeOztBpf+9rX2uPtE3y6XxdZeeWVZ86c+dGPfrS9
+Pvf/36QO+2tPV2Q+chHPtK+ceONNw6oPZtttll7sX1x49bLL7/cPd5nnnlm
0003bd/+4Q9/2J1zwgkntAfb2nPyySfP7XPeuOiii/rjXren8w//8A/dXRx1
1FG97xrKt+KA2jPEr0sXbXpf0HsoD3+OVwQAAHjH1B6G48orr2xfF2WppZYa
8CeEupelnThxYn/Pj9j/+Z//2Z3TvYDM0Ucf3Vz84Ac/2F7ceuut936r9ldH
emPOWmut1b4e7yKLLNI+z2goJ8zzLvp7qkhvDWh/maerPf2znj91yCGHdL/d
0VpooYV6X61obuZWex566KH2+MILL9z829Qd/9u//dv2+D/90z+1R7pXGD7r
rLPaNz75yU8Ofqe9taf5KvR+2KNHj54+ffqA2vPFL36xvdj7d75uvPHG9mDz
dW+uss0227QXu9ev7u95Hem29pxxxhntxeWWW27v2Vx33XX90bXn6aefXnbZ
ZbtHt+SSSz766KPde4fyrTig9gzx69JFm5tuuqk7ZygPf45XBAAAeMfUHoaj
9xku7Y/JrYcffrh7ddy2mXQ/YncvadvfU4Tav/HU/aLIiSee2J5wzz33nHTS
ST/5yU/av/rdxZzVVlvtpZdean5Ybi/uuOOO7fnzPGGed9HfU0V++tOfdh9q
b+158MEHf/CDHxx++OFtLnjmmWfOOeecJZdcsr1W+/P74AZ53Z7uFaEvvfTS
9sirr77afTK7X6E599xz2yPdi06feeaZg99pb+3pXq6n1b4Iz4Dac/rpp7cX
11577e5Gut+Z+fM///Peq+y+++7tCTNnzuxKS1t7ur/wPmbMmKlTp7annXba
ac1D+M1vfjNlypT+6Nqz9dZb973V2LFj2z833z+0b8XZX7dnKF+XLtrcfvvt
3S0P5eHP8YoAAADvmNrDMH3qU5/qfqZee+21Dz744G233bZ7wtRiiy3W/jzb
+4eQDjnkkEsuuaS7YnNy+1q1//qv/9oeWXHFFc8888zmZ+Hub0JNmDChf7Y/
sP7UU0+NHj26PfKLX/xiKCfM8y76h1B7ulazzDLLNOc8//zzzU/03UN+6KGH
5vlJG6T2dH/RvrnxU0899YILLuhec3jNNddsP5n9s/5gVvfQ+mb9zsk8//h7
b+3p73kJo743+8mA2nPvvfd2f8183LhxzZfsyCOP7PpG+/Su66+/vruRww47
7Jprrtl99927I23tmTp16oc+9KH2yM4779zce/f365daaqn2OYBvq/ass846
u8xJ+wLLp512WnvaoosuetFFF3UPoet7Q/lWnL32DOXr0kWbO++8s/uwh/Lw
53hFAACAd0ztYZgee+yx7i9KDzBq1Kjm5+L2tN4fsQdo/w54/6yXeu79U9Sd
5ifu9m9jDYg5jaOPPro98hd/8RczZsyY5wnzvIv+IdSe1157rXuV3QHGjRs3
lE/aILXn1Vdf/au/+qvZb3mxxRYb8NfV99xzz7d1vwNqT/eaM31vPoFoQO1p
XHLJJd3fGe/12c9+trvZz3/+8wPe212l+wvsF154Yfc7SL26X1Ua/t/k6pvV
c+6///72z101mk9yc60JEya0FxdccMH2N2eG8q04e+0ZytdlbtFmng9f7QEA
AGKpPQzfo48+uueee3a/9dH+CLzhhhtee+213Tndj9hnnXXWmmuu2b49evTo
U045pfemJk+evPfeey+xxBLtCSuuuOLuu+/e/bZM96SYbbbZpj0yadKklVZa
qT143nnnzfOEed5Fo3stmubWuoPtr4gssMAC7cVnn312r732WmihhbqH/IEP
fOCII45o7m4on7GJEye219p+++1nf+/rr7/+5S9/edVVV23PGTVq1Oabb977
p6BavX8BfJBIMvvjattO97eiFl988fZf2wMPPLA9csEFF3TXuvLKK8eOHbvI
Iou071p22WWbD37mzJndCVOnTh0/fnxbeEaMGLHFFlt0f+G9+6P27Ue71lpr
tdGseUTN98Ppp5/evfdzn/tce5X293Pm6Atf+MLswaTXSSed1P2+zWabbdY+
dav5cq+xxhrtwbXXXrv5yIfyrXjXXXe1xzfYYIOhf12ak9t3NVef/Ys1yMMf
5IoAAADvgNpDlOZL//DDD99www3NP3trQKv7Ebv9xZLmnOYH27l9tzRXf+ih
h+69995376MNuYspU6Y88MADN95446OPPtq9LEygxx9//Pbbb++evTXAOeec
0xWY6dOnh997r6lTp952223dX16b3eTJk2+99daXXnpp8Ntp/hNxyy23DHhB
7/fY2/pWnKPBvy6DyPDwAQCAPwVqD++NAT9i844999xzV1111XHHHbfccsu1
n9Lur4kxFL4VAQCA8tQe3ht+xI7S+wSuvllPmnvqqafe7w9qfuJbEQAAKE/t
4b2x9dZbLz7Lrbfe+n5/LPO33//+913qWWWVVa6++ur3+yOaz/hWBAAAylN7
YL7zxBNP3Hbbbe/SiwUBAAAwv1N7AAAAACpRewAAAAAqUXsAAAAAKlF7AAAA
ACpRewAAAAAqUXsAAAAAKlF7AAAAACpRewAAAAAqUXsAAAAAKlF7AAAAACpR
ewAAAAAqUXsAAAAAKlF7AAAAACpRewAAAAAqUXsAAAAAKlF7AAAAACpRewAA
AAAqUXsAAAAAKlF7AAAAACpRewAAAAAqUXsAAAAAKlF7IMrjjz/+6quvvt8f
RZiXX3754Ycfnjlz5vv9gQAAAPD2qD0wfEcdddSf/dmf9fX1jRgxYr311vvt
b3/bHr/ssstGjx695557dmd+8pOfbI7cddddzds//OEPR79p6aWXHjt2bHN+
e9og75o5c+bot1pqqaW64x/+8Iefeuqp9swrr7yyObL//vs3b99zzz2j5+SZ
Z56Z/eHcfffd6667bt8siy+++DHHHNM2n/XXX3/2Wzj99NO7K5599tnttX71
q191B5urz36tLbfccpDHAgAAwHCoPTBMxx9/fF9f3+jRo3fcccctttiieXux
xRZ78MEHm3dddNFFzcWdd965O3m99dZrjtxxxx3N2xdffHHz9iqrrLLbbrtt
sskmbSy67rrrBn/XzJkz26Lyd2/aZptteo9vueWWbZy54oormov77LNP8/bD
Dz/cnrzqqqs2B1dfffX24osvvjjg4TTX/dCHPtScM27cuAkTJqywwgrN2xde
eGHzrn333be5yqabbtocWWKJJdpbaO6lu+7YsWPbj2H8+PHdwfPOO689c5FF
Fmne1ZzTvH3IIYcM8lgAAAAYDrUHhmPq1KkLLrjgiBEjrr322vbI+PHj+/r6
Dj/88P6h1Z6ddtqpfdeee+7ZXDz00EMHf1dbSEaNGjXgI+nKSeOkk07qf2vt
6UyYMKE7YY7uueeeNjS1F2+55ZbmFs4999zuhOZIc8KGG2444IpPPPFE83nY
eOONl1566eWXX372/xS0oemRRx4Z8DHP/lgAAAAYDrUHhuPmm2/u6+tbZ511
uiMvvfTSDTfccO+99/a/zdqzyy67NBePOuqowd/VFpIRI0b86E2//OUv+99a
exZYYIFbbrnlndWe1157rbl6c87mm29+6qmn3n333QNOmFvt+c53vtMcP/HE
E7/4xS82b/zsZz8bcMLcas/sjwUAAIDhUHtgOM4///y+vr7ttttuju8dSu1Z
ccUVt95667XWWqt5+wMf+MA999wz+Lt6q05r7Nix3fEPfvCDl112WfPGRz7y
kQsuuOAd1J7GJZdcsuyyy3a3v/766/cmmrnVng022KA5ft9991166aXNG3vs
sceAE+ZWe2Z/LAAAAAyH2gPDcdNNN/X19a233nrdkWnTpj399NMvv/xy/5u1
Z8cdd+ze+/GPf3xA7VlqqaU23njjkSNHNm//+Mc/bk8b5F3d78Nc86b2RaG7
2tM/6wV2un7yDmpPY/r06VdfffXhhx++0korNefvsMMO3bvmWHt+97vftXc3
bty4rbfeun17ypQpvecM8rs9Ax4LAAAAw6H2wHBMmTJlgQUWGDlyZPcUpG9+
85t9fX0HHHBA/5thZLXVVps2bVpz8YUXXlh44YVHjRr1yiuv9L/16Vp77LFH
8/auu+7a3sgg7xr8dXva2vP666+3vxHU2HvvvXtPm2ftufnmm7/yla90L9Rz
5ZVXNudvvPHG3QlzrD1HH310e3d/Nkv79uWXX957jtftAQAAeG+oPTBMbd4Z
M2bMXnvtNW7cuDZftL+9M2PGjJVXXrk5stFGG339619fY4012tfDaa/Ym3Qe
euihBRZYYMSIEXfeeefg7+qe/bTDm9pnivXWnsbtt9++0EILvYPa8+STT44c
OXLBBRfcb7/9jjnmmLYatS863Zpj7fnYxz7WHLz++uvbi6eddtqAX2rqH/SZ
XAMeCwAAAMOh9sDwTZgwYfnll2/DxSqrrHLNNdd073r44YfbF7RpK9CnP/3p
9klejf/4j//o63lVn3322ae5uO222w7+rtlf62bBBRfsjq+wwgrdXU+cOHFu
z+Q6+eSTB3k4l19+efdwFlhggT322GPSpEnde2+99dYBtefuu+9ujiyzzDLd
v/6PPfZYc2TRRRftvWL7Oz+Dv25P+1gAAAAYDrUHotx///1PPfXUHN/1yiuv
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
e8J//dd/ZTKZ66+/PrvkrbfemjBhwv777z969Og777wz9xq0RYsWnXfeeQce
eODXvva1Cy64YMmSJdlV1dXVN95447Bhww499NBrr702tkyWT5o0aciQIfEU
scMRI0ZMmzatuK9wC0Q7oinSHgAASp+0B6DUJGlPdXX1J598Uqj35zy1THse
ffTRTCZzxx13JLPvvffeNtts079///Hjxx9++OGx6rrrrktWLV++fJdddtlu
u+2uuOKKc889t2/fvnvvvXdyCVi82GHDhvXo0WPMmDEnnHBCr169DjrooOTG
1A899NCoUaNiP9/85jcnTJgwd+7cdn3BmxLtiKZIewAAKH3SHoBSU+Jpz8qV
K6dOnXrQQQdlMpl58+YlCw8++OBdd9114cKFyezYsWNj7axZs2L6+eefj+lf
//rXyapnn312woQJCxYsiOmf/exnserxxx9PVj399NMxGwuT2VK7kkvaAwBA
ZyHtASg1pZn2ZDKZLuuVlZXFdI8ePX7yk58ka+OAY8kxxxzz0QaTJ0+OJY88
8si69SFJTB9wwAGPPvpoTU1N7m6PPfbYWPVRjpgdM2ZMslbaAwAAbSPtASg1
pZn2lJWV/dN6559/fiaTmThxYnbtO++8k9mUH//4x8kGkydP3nnnnWNJ7OSI
I47Ifnv7Jh81cODAZK20BwAA2kbaA1BqSjPtyV7JtWbNmgMPPLB3797z589P
llRVVWUymXPOOafizzU0NGT3sGrVqtdff/3//b//95WvfKVr164fffRRLPzr
v/7rbbfddqNHZS8Hk/YAAEDbSHsASk2Jpz3rNnwhVyzMLhkwYMDQoUNXrFiR
zM6fP3/y5MkzZsyI6XfffffBBx+sq6tLVj3yyCPx2Iceeiimr7jiiq5du378
8cfJqrVr106ZMmXq1KnJ7EsvvRRb/upXvyr+69si06ZNk/YAANApSHsASk02
7SmFrx1PtPxOrr/5m78pKyt75513ktl77rkn+f6sKVOm3HXXXXvttVefPn0q
KirWbYiGjjrqqN/85jfPPPPM0KFDu3TpkpzAU15evuOOO+62226TJk16+OGH
x4wZE1vGw5N9NjQ09OzZc999973zzjsL+FHVZtIeAAA6C2kPQKlJ0p54Ry2d
tGf8+PHdu3fPXfLWW29lMpmRI0dml9x666377rtvcu+dIUOGvPrqq8nytWvX
3nbbbTvssEOyap999nnxxRezj3rzzTeHDx/eo0ePWLX99tvffPPNuc9yww03
bLvttrHqjTfeKObr2yLRjpqaGmkPAAClT9oDUGqStKempia5EqpzWbJkSX19
/SZXVVVV5d7JJ1dzc/PixYvXrl3bctWqVavik6WQh9hW0Q5pDwAAnYK0B6DU
LF26NN5La2try8vL16xZU6i3aPKxevXqaEc0JVoj7QEAoMRJewBKTZL21NXV
zZkzp7GxsVBv0eSjqalp7ty50RRpDwAApU/aA1Bqli5d2tzc3NDQsGjRouy3
nNOxohHRjmhKtEbaAwBAiZP2AJSg7I2ay8vLs99dTkeJFkQjoh1u2gMAQKcg
7QEoQdnTe6qqqmbMmCHw6UBR/GhBcotpJ/YAANApSHsASlNy9576+vrKyspp
06ZVVFTE7MqVKwv1jk3rotRR8Cj79OnTowXRCHfsAQCgs5D2AJSs5Hqu+vr6
qqqq+fPnf/DBBzNmzIiJysrKWBJ/Ll5vEXlLKpkUNiYqKiqi1FHwqHbynfKu
4QIAoBOR9gCUsuSSrqamprq6upqamurq6srKygULFsyfP3/evHlz1ptN3pJK
RkmjsAsXLowiR6njQy3KHsV3ARcAAJ2LtAeg9CVXdYXGxsb6+vra2tqa9eJd
t5pC+L/1kqrW1dVFkaPUSc3lPAAAdDrSHoBOJDnVh3Yg5AEAoPOS9gAAAACk
ibQHAAAAIE2kPQAAAABpIu0BAAAASBNpDwAAAECaSHsAAAAA0kTaAwAAAJAm
0h4AAACANJH2AAAAAKSJtAcAAAAgTaQ9AAAAAGki7QEAAABIE2kPAAAAQJpI
ewAAAADSRNoDAAAAkCbSHoAvoDfeeGPSpEmvvfZaRx9I0V122WVHHXVUfX19
Rx8IAAC0H2kPQCfy7W9/O5PJdO3adenSpfns56c//Wns58Ybb9ySjeO5Muv1
7dt3m222OeSQQ2677bZ8nr0NHn744ZtuumnGjBmtb9bc3BybTZo0Kbtk0KBB
Xbp0mT17dpEPEAAASoi0B6CzmDdvXpcuXZLg5YUXXshnV21Le0455ZRhw4aV
lZXF9J133pnPAWyt0aNHx5M+99xzrW/W0NAQm22//fbZJZWVldOnTy/y0QEA
QGmR9gB0FrfccksmkznuuOPiz+9///vZ5UcfffSee+5566237r777gMGDLj8
8suTM3/ef//9WH7yySePHz++X79+X//61x977LHkIdm0p7m5+cADD4zNPvnk
k1j+/PPPx/Spp56a+7xJ2tO1a9dkNp4oZkeMGJHM3nfffUOHDu3du/ewYcOe
fvrpZOHPf/7z2M+VV14ZO99vv/2yS6677rohQ4b07NnztNNO++///u+BAwf2
6dPnpJNOqquri21+9KMfxTZPPPFETP/hD3+I6fPOOy+mx44dG/uPJ915550v
ueSSWFJfXx8vM15v9+7dBw0a9Mgjj8TC+AzaY489YrOysrJ47NSpU2PhyJEj
Y3rhwoUx3dTUNHHixL322mvbbbc95phj3njjjdwC3nzzzbvttlusjUNNlscR
3nbbbT7XAADodKQ9AJ3FYYcdlslkPvjgg2233XaHHXZoampKlg8cODCW9+rV
a/jw4X369Inpn/3sZ7H8f//3f5NzcnbddddDDz002SYevuzPz+0544wzYjq5
OOuHP/xh9uFZG6U9Dz/8cMwOHTo0pp9++umysrIBAwZMnDhx55137tmzZxKh
/P3f/33y1Pvss8/3vve97JIePXocf/zxSXQTf8b0l7/85Zj+l3/5l9jmwgsv
jOkpU6bE9AsvvBDTo0ePjuk4nt122y1mR44ceccddyzbkDgdfPDB55xzTjxp
ly5dFi9eXFtbm7yW7t27jx07NjmSfffdN5bMmzcvps8666yY3n///U888cSY
iBrOmjUrW8CddtrpyCOPTM5cSq786t+/f0w///zzRW8tAAAUlLQHoFOYPn16
JpM54IADYvrkk0+O6d/+9rfJqiSsuP/++5dtiGKGDx++bEPas+2223766afZ
RyWpTm7a8/TTT8f0qFGjYvqrX/1qTJeXl+c+dfZKrvvuuy8esueee8b0FVdc
sWxDUvTzn//89ddfv/rqq2P6uuuuW7Yh2znxxBOzO0mWJI+65pprYvr888+P
6V/84hcx/YMf/GDZ5tOeZS2u5KqoqPjggw/izyjL7rvvns1kWl7JlU174uOp
T58+vXr1WrBgwbL15wvF8rvvvjtbwBdffDGmkyDonnvuielf/vKX48ePj4+2
QjYSAACKT9oD0CncdNNNSeRy0kknJRNnnnlmsioJK5I7GFdUVMR0//79l21I
ew455JBks3/+53+O2YsvvnjZn6c9TU1NO+644zbbbBN7iIXDhg3b6KmzaU/W
qFGjamtrY9WQIUM2WvXd73532YZsJ54xu5NkyS9/+ctl66/qiunrr78+pu+9
996Ynjhx4rKtSXtee+21jZ46WdVK2vPRRx8l5xoly5PL4pKUKSlgkoklx9n+
t6EGAIACkvYAdArJWTdhzz333G677WKiW7duye1ukrDiySefjOnf/e53MX3Y
YYct25D27LDDDjU1NTF77rnnJufhLGtxl+bzzz8/ZseNGxd/3nrrrRs9dTbt
eeWVV/7nf/5n8eLF2VXJmTDxpLFw4cKFs2bNStbmZjuJLUl7Lr744pj+x3/8
x5j+t3/7t5Zpz3/+538ms8OHD4/Z22+/ffr06UccccRGac+XvvSl7PNm055Y
1b1792222SbJqS666KLs8eSmPcl5R0naEy88KR0AAHQu0h6A0venP/0ps/4e
xdkvXj/yyCNjyX/8x38s2xBW7LjjjuPGjfuLv/iLmL7qqquW5dy35+CDDz71
1FPL1vvDH/6wrEXa89JLLyVbxgZz587d6Nk3um9Prl//+texavDgwbfffnvy
7fA/+clPlrU17Ym1yQuZMGHCLrvskpv2JEHQIYcckrzkb3zjGzF74YUXxm67
deuWTXviUJMHjh8/PrlDUe59e5IbXI8YMeLyyy/v3r17z549k202l/YcccQR
ffr0+fDDDwvRQwAAaD/SHoDSd91112UymXPOOSe7JLndTXJjnCSsuPzyy7t1
69a9e/cxY8Y0NDQsy7mS6+ijj05O8rn55puTh//TP/1TLPmHf/iHZHbp0qUD
BgyIJUcddVTLZ28l7QnXX3/9V77ylWSDc889N7l3dJLt3H777dnNcpfkpj33
3XdfTCfftLVkyZLkTtTJbZZz055333137733jiVnnHFGzD733HPJk/7VX/1V
8pDsRV6TJ0/eb7/9Ykny3V7JdJL2VFVVffvb3+7Zs2cs2WuvvZ566qnkIcme
k7Tn2muvzaZSUbo4kvfee2/rOwYAAB1J2gPQ2WVPTamvr8+98ihJe4488siY
rqysbG5u3uTDa2trX3rppeTqsOSrzNtg9uzZjY2NbXvsRuKFbO76qY1ewqJF
iza3k8292GXrr/ZKbtT8uZqamqJuW7IlAACUFGkPQGeXeyFSrty0pxXJ2TXh
lFNOyV4pBgAAdF7SHoDO7s0333z55ZeTS6hy1dTUxPI//elPrT98+vTpDz30
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
6du37/vvv7+5HdbX1++3336DBg2qrq7OLlyzZs1pp51WVlZ2//33f+4hvf32
2zHOzV2SDEKTe9W24Rg++eSTePiXv/zlAzbo169fLNl///2vu+66zz2eVkQj
oh1JfNeGf56dsZutd2eTWum+brai2N1sWyUL2811bfobtSXy6SYALUl7AEpK
btST/d9bOlY0Ijfw2dqGJiPKGTNmFPCQvvSlL40YMaLl8k3eG2TlypXf+c53
9thjjyVLlrR8SIwEjz/++IEDBy5evDh3+YQJE2JXd91115Ycz0EHHbTPPvvk
noEWo8tu3bplb4eytccQBT/rz8X+43hi4t57792SQ9qcaET++UDn6ubndqel
1ruvm60oajfbVsnCdnNdm/5GbYl8uglAS9IegNKR+x0xVVVVhXpzJn/RjrZ9
X0x2RJnn/3pv5OSTT45BZcvLTzb3vT/Lly//1re+9cgjj7TcVXl5+aBBg+bP
n5+78Prrr8+s99Mc//qv/5qsveOOOw455JAPPvggu/0999wTGw8bNuyBBx54
4oknxo8fH7OnnHJKPsewkWTE2soGWygakX8+0Lm62Xp3Wnaz9e637Rg2optZ
ha1k+3RzS/69t0E+3QSgJWkPQOnIntizYMGCEryGK0Yrs2bNauV7ePPx5ptv
lvK5TNGOaEobTu9JRpTx+VjYEeWTTz4Zw6uWd05evXp1LL/gggvy3P+QIUMy
LRx++OHJ2hjW9e7de9mf39g2xn277757suX2229/ySWXrFy5Ms/DyHXRRReV
lZXlv59oRLQjn3yg03VzXavdadnN1rtfELpZKBtVst26WYx/7/l0E4CWpD0A
pSO5a2htbe2cOXPWrl1bqDfnLXf33XefffbZm1v77rvvxi/2U6ZMKfjzPv/8
87HncePGFXzPhRLtiKZEa7b2DqLJiLK6uvqTTz4p7CGdeOKJw4YNW7FiRWF3
uyUGDx587LHHbnJV/CYwb968dj6erRKNiHbkkw903m5usjutdLP0fZG7uUnt
3M3C/nvPp5sAtCTtASgdxbhr6FYZN25ct27dNre2gGnPxIkT+/btm73tw6JF
i0aNGvX4449nNxgwYMCZZ56Z/xMVUNvuIFq8EWV85g4aNOiss84q7G4/19q1
a3v37n3rrbe28/MWSmnmA7rZNrqZ64vcTQBakvYAlI5s2jNz5sxCvTNvlXZL
e77//e/Hrlr5WvntttvuhBNOyP+JCiiaUlJpz7r1t4+OKm3Jd2YV0OLFi3fa
aaePP/64PZ+0gEozH1inm22im7m+yN0EoCVpD0DpKNJ9JLbcRmnP6tWrb7nl
lqOPPnr//fe/+OKLX3zxxY3SnrfeemvChAmxdvTo0XfeeWf26rNFixaNGDHi
8ccfv+aaaw4++ODBgwdfeeWVzc3NydrvfOc7u+yyS+wq9nz66aevW//xEdsn
9wh95513YrqsrGz77bePidhtLLzwwgs3ugXo1VdfPWrUqPa83q1t95Qo6ohy
3fr/zc/ze3C+aEo2H1inm1tPN9NE2gNQWNIegNJR7NHH59oo7bn00kszmcyB
Bx549tln/+Vf/mX//v1z05733ntvm222iYXjx48//PDDY9V1112XrCovL4/Z
nXfeeZ999onH7rbbbjF78803J2svu+yyfffdN7lh6bXXXhtLPv3005j9xS9+
EdMfffTRhAkTevToEc8YE08++WQsvOGGG2KDd999N9lDfNb07t37tNNOa6e6
rNe2kUiH95SNlHI+wNbSzTSR9gAUlrQHoHR0+OgjN+358MMPM5nMcccdl5w/
09zcPHjw4Ny05+CDD951110XLlyYzI4dOzbWzpo1a92GtOeAAw5IvmZrzZo1
u+yyS+63wGx0JVdu2pPY6Equ2bNnl5WVXXPNNcnsI488EttPnTq1KFXYDGlP
OsgH0kQ300TaA1BY0h6A0tHho4/ctGfKlCmZTOb3v/99du0DDzyQTXviUGP6
mGOO+WiDyZMnx5Lkaqwk7UnO20mcffbZZWVly5cvT2a3Nu0Jw4cPHzhwYDJ9
0kkn7bzzzq3c9qcYpD3pIB9IE91ME2kPQGFJewBKR4ePPnLTnr/7u7/LZDKV
lZXZta+//no27XnnnXcym/LjH/943Ya05/bbb88+9uqrr44l8QKT2TakPffe
e29yMVdyGdfll19ejAq0QtqTDvKBNNHNNJH2ABSWtAegdHT46CM37fnVr36V
yWT++Mc/Ztc+/vjj2bSnqqoqps8555yKP9fQ0LCuOGlP7Ll3797XXHPNo48+
Ghu/9957xahAK6Q96SAfSBPdTBNpD0BhSXsASkeHjz5y057XXnstk8lcddVV
2bUnnnhi7n17BgwYMHTo0BUrViSz8+fPnzx58owZM9ZtQdpzwQUX5J441DLt
2X777Y888siNDu/0008fOHDgySefPHjw4MK96C01bdo0aU8KyAfSRDfTRNoD
UFjSHoDSkR19TJs2rVDvzFslN+1ZtWrVUUcdVVZWdskllzzwwAOnn356z549
c9Oee+65J2a/+c1vxpK77rprr7326tOnT0VFxbotSHseeuihmD3ppJOeeuqp
dZtKe8aMGdOjR48bb7zx7bffzi587rnnkuvFbrnlluIWYlOkPekgH0gT3UwT
aQ9AYUl7AEpHMvqI99KOSnvGjx/fvXv37Gz84j1q1KjevXtnMpn999///vvv
j4kHH3wwu8Gtt96afJd6GDJkyKuvvposnzVrViy54447slsmaU/2Ls2NjY0j
R44sKysbMGBAzC5YsCD3K9rDyy+/PHDgwFiYe3+e1atX9+nTJxYuXry4OAVo
TTSlpqYm3WnPo48+mtxnO8W+OPmAbupm5yLtASgsaQ9A6UhGHzU1Ncn1UCUi
jqqqqqqVDZYsWVJfX9+GPcdLzuY/mxSfKblfvFVXV9evX7/Ro0e34bnyF01J
fdpTW1u75557JrfaTqsvTj6gm7rZuUh7AApL2gNQOuJX3HgXjd/qy8vL16xZ
U6g35xSIakyZMmXkyJGZTOb1119v/wNYvXp1NCVaEw1KcdoT3nrrrR49ejz+
+OMdfSDF8sXJB9bppm52KtIegMKS9gCUjiTtqaurmzNnTmNjY6HenFNg5cqV
MczZY4897rzzzg45gBiAzJ07N1qT+rQnTJo0qW/fviV1glkBfaHygXW6qZud
h7QHoLCkPQClI37FbW5ubmhoWLRo0fz58wv15kz+oh3RlGhNNCj1aU9y26VL
L720ow+kKL5o+YBu6mZnIe0BKCxpD0BJyd6ouby8vK6urlDvz+QjGhHtiKa0
YRjSGUeUa9eu7dOnz84779zRB1IUX7R8QDd1s7OQ9gAUlrQHoKRkT++pqqqa
MWOGwKfDRQuiEdGONpzYs6xzjijDIYcckslkUnk54RctH1inm7rZSUh7AApL
2gNQapK799TX11dWVk6bNq2ioiJmV65cWaj3arZEFDzKHsWfPn16NCLasbV3
7Ml2MxlRRis7+jVthbPPPjtGlDNnzuzoAym8aET++YBulgjdTJN8uglAS9Ie
gBKUDEPq6+urqqrmz5//wQcfzJgxIyYqKytjSfy5eL1FFEhSz6S8MVFRUREF
j7JHzZPvl2/zACRpZU1NTecaUU6cODFGlKm8GWw0om0X5elmCdLNNMmnmwC0
JO0BKE3JJV3xe29dXV2MR6qrqysrKxcsWDB//vx58+bNWW82BZLUMwob5V24
cGGUOgoeH2pR/GhBGy7gyu1jMqLsXKOzM844I0aUtbW1HX0ghTd9+vRoR575
gG6WCN1Mk3y6CUBL0h6AUpZc1RUaGxvr6+vjN/ya9eL9tprC+b/1ktrW1dVF
qaPgSeXzHHd00hHlt771rb59+65du7ajD6TwohFftHxAN3WzU8inmwC0JO0B
6BSSU31oN4UabiR5XW1t7axZs1asWFGoD9yiWrNmTb9+/U444YSOPpDCW7Vq
VXl5ebSjzXdh0s3SoZtpkmc3AWhJ2gMAxZMdUc6ePbuzfI3OW2+9lclkHnvs
sY4+kMKLdsTQPv98QDdLgW6mSZ7dBKAlaQ8AFE/2G9YqKiqWLFlSqA/c4lm5
cuVRRx01ZsyYjj6QoogWRCPy+YY13SwdupkmeXYTgJakPQBQPMkleA0NDYsX
L547d26hPnCL57zzzttvv/2qqqo6+kCKIloQjYh2tO1iPd0sKbqZJnl2E4CW
pD0AUFTJzWCrq6tnzJgR04X6zC2GKVOmjBkzJgZcHX0gRRG9mD59ejQin9vA
6maJ0M00KUg3AdiItAcAiioZUdbV1c2fP3/mzJmF+swthtra2lR+108iih8t
iEbknw/oZofTzTQpSDcB2Ii0BwCKrbm5ubGxsbq6OgY1neKakfSJskfxowXR
iGiHbnZqupkmBewmALmkPQBQbNn7wS5evPjjjz+uqKgo1CcvWyIKHmWP4hfk
HrC62bF0M00K200Ackl7AKAdJNeM1NbWLlq0aNq0aR999FGMbgr1+cvmRJGj
1FHwKHsUv1DXiehmh9DNNClSNwHIkvYAQPvIDioXL15cXl7+zjvvxGBnwYIF
sXDVqlWF+iwmihkljcJGeaPIM2fOjIIXfDipm+1DN9OkfboJQELaAwDtprm5
OblspLq6+tNPP43Bzvvvv//mm2++9tprv//971955ZWX13uJrZTULQoYZYxi
RkmjsFHeKHKUOrlIpOC3BNHNItHNNOmQbgKwTNoDAO0ruU9IQ0NDXV1dDHYq
KysXLFhQUVExd705c+bMpk2idEkNo5hR0ihslDeKHKUu3v1AdLNIdDNNOqSb
AEh7AKD9fbZeU1NTjHfq6+tj4FOzwf/RJtkCRjGjpFHYKG9SZ93sdHQzTTqw
mwBfZNIeAOgoycUjFEk7Xx6im0Wlm2ni0i2AdvCZtAcAAAAgRaQ9AAAAAGlS
2LSnpqbmMzdbAwAAAOg4hU176urqmpqapD0AAAAAHaWpqam2trZQaU9jY2ND
Q4O0BwAAAKBDLF26tKGhobGxsVBpz/Lly+vq6txmHwAAAKBDNDc319XVLV++
vFBpT6itrW1sbBT4AAAAALSz5ubmxsbG2tratWvXFjDtWbFiRV1dnW/mAgAA
AGhnn332WV1d3YoVKwoY9SSSU4Z8ORcAAABA+2hubk6inpgoeNSTSPafXNIl
8wEAAAAokqVLlyYXcCXn3hQp6kkkl3SFhoaGpqamzwAAAAAoqKampoaGhiSB
KcYFXJu0fPny5O5A/wcAAABAQSXfllXYb+ACAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAChB/x8q29ek
    "], {{0, 448.}, {765., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{1012.4374999999998`, Automatic},
  ImageSizeRaw->{765., 448.},
  PlotRange->{{0, 765.}, {0, 448.}}]], "Output",
 CellChangeTimes->{
  3.958972761382932*^9, 3.959039614673191*^9, 3.959039912728183*^9, 
   3.959041303192144*^9, {3.959042770750757*^9, 3.959042780027212*^9}, 
   3.95905104739275*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"27e48f64-65f3-48cd-aff5-af953b9fe67d"]
}, Open  ]],

Cell["\<\
The image displays an interactive \[OpenCurlyDoubleQuote]Spekkens Toy Model \
Explorer,\[CloseCurlyDoubleQuote] a graphical user interface built using \
Mathematica, designed to simulate and visualize the application of \
permutations on quantum-like states. The interface prominently features a \
\[OpenCurlyDoubleQuote]CURRENT STATE\[CloseCurlyDoubleQuote] display, showing \
a 2\[Times]2 grid representing a Spekkens state, in this specific instance, \
the state [1,0,1,0]. Below this, there are controls including a \
\[OpenCurlyDoubleQuote]Reset\[CloseCurlyDoubleQuote] button and a set of \
buttons labeled with various permutations: \[OpenCurlyDoubleQuote]Identity,\
\[CloseCurlyDoubleQuote] \[OpenCurlyDoubleQuote](1\[LeftRightArrow]2,3\
\[LeftRightArrow]4),\[CloseCurlyDoubleQuote] \[OpenCurlyDoubleQuote](1\
\[LeftRightArrow]3,2\[LeftRightArrow]4),\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote](1\[LeftRightArrow]4,2\[LeftRightArrow]3).\
\[CloseCurlyDoubleQuote] These buttons allow users to actively apply \
transformations to the current state.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958609677374896*^9, 3.958609730302973*^9}, 
   3.958966554744863*^9, {3.959049490377714*^9, 
   3.95904949096109*^9}},ExpressionUUID->"487c6717-1694-4baf-8dfa-\
720a003d2f2a"],

Cell["\<\
The underlying Mathematica code defines the fundamental SpekkensStates and \
SpekkensPermutations that govern the model\[CloseCurlyQuote]s behavior. The \
DynamicModule orchestrates the interactive experience. Each time a \
permutation button is clicked, the applyPermutation function is invoked. This \
function takes the currentState, applies the selected permutation to it, and \
then checks if the resulting newState has been encountered before. If it\
\[CloseCurlyQuote]s a new state, it\[CloseCurlyQuote]s added to a list of \
states; otherwise, the system simply updates the currentIndex to point to the \
existing state. Crucially, it also records the transition as a directed edge \
in a historyGraph, maintaining a visual record of the state evolution. The \
updateGraph function then regenerates and displays this history graph, with \
the current state highlighted in red, allowing users to trace the path \
through the state space.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 3}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958612167097205*^9, 3.958612210782558*^9}, 
   3.958966761958848*^9, 
   3.959049494017013*^9},ExpressionUUID->"d844b26a-a6f6-4892-b965-\
623708a1de1f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"perms", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PermutationList", "[", 
      RowBox[{"#", ",", "4"}], "]"}], "&"}], "/@", "SpekkensPermutations"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"baseStates", "=", 
   RowBox[{"Flatten", "/@", 
    RowBox[{"(", 
     RowBox[{"KroneckerProduct", "@@@", 
      RowBox[{"Tuples", "[", 
       RowBox[{"SpekkensStates", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"applyRowPerm", "[", 
    RowBox[{"vec_", ",", "perm_"}], "]"}], ":=", 
   RowBox[{"Flatten", "@", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{"vec", ",", "4"}], "]"}], "[", 
     RowBox[{"[", "perm", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"applyColPerm", "[", 
    RowBox[{"vec_", ",", "perm_"}], "]"}], ":=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{"vec", ",", "4"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "perm"}], "]"}], "]"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getNeighbors", "[", "state_", "]"}], ":=", 
   RowBox[{"DeleteDuplicates", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"applyRowPerm", "[", 
         RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", "perms"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"applyColPerm", "[", 
         RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", "perms"}]}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"NestGraph", "[", 
    RowBox[{"getNeighbors", ",", "baseStates", ",", "2", ",", 
     RowBox[{"VertexLabels", "->", 
      RowBox[{"Placed", "[", 
       RowBox[{"\"\<Name\>\"", ",", "Tooltip"}], "]"}]}], ",", 
     RowBox[{"VertexSize", "->", "0.5"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"coords2D", "=", 
   RowBox[{"GraphEmbedding", "[", 
    RowBox[{"g", ",", "\"\<SpringElectricalEmbedding\>\""}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"coords3D", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{"#", ",", "0"}], "]"}], "&"}], "/@", "coords2D"}]}], 
  ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rotAngle", "=", "0"}], ",", 
     RowBox[{"selected", "=", "None"}]}], "}"}], ",", 
   RowBox[{"Panel", "[", 
    RowBox[{
     RowBox[{"Column", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Graphics3D", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"EventHandler", "[", 
                RowBox[{
                 RowBox[{"Tooltip", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Hue", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Norm", "[", "#2", "]"}], "/", "8"}], ",", "1", 
                    ",", "0.8"}], "]"}], ",", 
                    RowBox[{"Sphere", "[", 
                    RowBox[{"#1", ",", "0.03"}], "]"}]}], "}"}], ",", 
                   RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"#2", ",", "4"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "100"}]}], "]"}]}], "]"}], ",", 
                 RowBox[{"\"\<MouseClicked\>\"", ":>", 
                  RowBox[{"(", 
                   RowBox[{"selected", "=", "#2"}], ")"}]}]}], "]"}], "&"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"coords3D", ",", 
                RowBox[{"VertexList", "[", "g", "]"}]}], "}"}]}], "]"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"Gray", ",", 
              RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"coords3D", "[", 
                    RowBox[{"[", 
                    RowBox[{"VertexIndex", "[", 
                    RowBox[{"g", ",", "#1"}], "]"}], "]"}], "]"}], ",", 
                   RowBox[{"coords3D", "[", 
                    RowBox[{"[", 
                    RowBox[{"VertexIndex", "[", 
                    RowBox[{"g", ",", "#2"}], "]"}], "]"}], "]"}]}], "}"}], 
                 "]"}], "&"}], "@@@", 
               RowBox[{"EdgeList", "[", "g", "]"}]}]}], "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"selected", "=!=", "None"}], ",", 
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"Sphere", "[", 
                 RowBox[{
                  RowBox[{"coords3D", "[", 
                   RowBox[{"[", 
                    RowBox[{"VertexIndex", "[", 
                    RowBox[{"g", ",", "selected"}], "]"}], "]"}], "]"}], ",", 
                  "0.05"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"Boxed", "->", "True"}], ",", 
          RowBox[{"SphericalRegion", "->", "True"}], ",", 
          RowBox[{"ImageSize", "->", "800"}], ",", 
          RowBox[{"PlotRange", "->", "2.5"}], ",", 
          RowBox[{"ViewPoint", "->", 
           RowBox[{"Dynamic", "[", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", 
              RowBox[{"rotAngle", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
             RowBox[{"{", 
              RowBox[{"3", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<Selected: \>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"selected", "===", "None"}], ",", "\"\<None\>\"", 
                 ",", 
                 RowBox[{"ArrayPlot", "[", 
                  RowBox[{
                   RowBox[{"Partition", "[", 
                    RowBox[{"selected", ",", "4"}], "]"}], ",", 
                   RowBox[{"Mesh", "->", "True"}], ",", 
                   RowBox[{"ImageSize", "->", "100"}]}], "]"}]}], "]"}]}], 
              "}"}], "]"}], "]"}]}]}], "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Rotation (Z): \>\"", ",", 
           RowBox[{"Slider", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "rotAngle", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
             RowBox[{"ImageSize", "->", "300"}], ",", 
             RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "]"}]}], 
          "}"}], "]"}]}], "}"}], "]"}], ",", 
     "\"\<Spekkens Toy Model State Space\>\""}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.959040292514522*^9, 3.959040292516471*^9}, {
  3.959049510599638*^9, 3.959049516010457*^9}},
 CellLabel->
  "In[3064]:=",ExpressionUUID->"78ecf03d-c3d3-40df-9aa6-e634f7b792b8"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`rotAngle$$ = 0, $CellContext`selected$$ = 
  None}, 
  TemplateBox[{
    PanelBox[
     TagBox[
      GridBox[{{
         Graphics3DBox[{{
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{7.097678244252602, -8.097620704736284, 0}, 0.03]}, 
               
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 0, 0}, {1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 0, 0}, {1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 0, 0, 
                 0, 0, 0, 0, 1, 1, 0, 0, 1, 1}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{8.097768889807442, -8.127565259706813, 0}, 0.03]}, 
               
               GraphicsBox[{
                 
                 RasterBox[{{0, 0, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 1}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{0, 0, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 0, 0, 
                 0, 0, 1, 1, 0, 0, 1, 1, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{7.128805628725706, -7.0975696537810595`, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 
                  0, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 0, 
                  0}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 1, 1, 0, 0, 
                 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{1.00751568838591, -5.05259372203871, 0}, 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 0, 1, 0}, {1, 0, 1, 0}, {1, 1, 1, 1}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 0, 1, 0}, {1, 0, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 0, 0, 
                 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{2.0076063339407497`, -5.082538277009237, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{0, 1, 0, 1}, {0, 1, 0, 1}, {1, 1, 1, 1}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{0, 1, 0, 1}, {0, 1, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 0, 0, 
                 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{1.038643072859014, -4.052542671083483, 0}, 0.03]}, 
               
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 1, 0}, {1, 0, 
                  1, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 1, 0}, {1, 0, 1, 
                  0}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 1, 0, 1, 0, 1, 
                 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{4.052596966319257, -2.007566739341136, 0}, 0.03]}, 
               
               GraphicsBox[{
                 
                 RasterBox[{{1, 0, 0, 1}, {1, 0, 0, 1}, {1, 1, 1, 1}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 0, 0, 1}, {1, 0, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 0, 0, 
                 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{5.052687611874097, -2.0375112943116642`, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{0, 1, 1, 0}, {0, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{0, 1, 1, 0}, {0, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 0, 0, 
                 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{4.083724350792361, -1.0075156883859102`, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 0, 1}, {1, 0, 
                  0, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 0, 1}, {1, 0, 0, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 1, 1, 0, 0, 1, 
                 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{5.082646867480783, -1.0384361316924442`, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 1, 0}, {0, 1, 
                  1, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 1, 0}, {0, 1, 1, 
                  0}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {1, 0, 0, 1, 1, 0, 
                 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{2.0375655895474365`, -4.0834631143900175`, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 0, 1}, {0, 1, 
                  0, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 0, 1}, {0, 1, 0, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {1, 0, 1, 0, 1, 0, 
                 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{8.127728145414128, -7.128490097087593, 0}, 0.03]}, 
               
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 1}, {0, 0, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 1}, {0, 0, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {1, 1, 0, 0, 1, 1, 
                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{4.052596966319257, -5.05259372203871, 0}, 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 0, 0, 
                 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{5.052687611874097, -5.082538277009237, 0}, 0.03]}, 
               
               GraphicsBox[{
                 
                 RasterBox[{{0, 0, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 1}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{0, 0, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 1, 1, 
                 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{4.083724350792361, -4.052542671083483, 0}, 0.03]}, 
               
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 
                  0, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 0, 
                  0}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 1, 1, 0, 0, 
                 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{1.00751568838591, -8.097620704736284, 0}, 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 0, 0}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 0, 0}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 0, 0, 
                 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{2.0076063339407497`, -8.127565259706813, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {0, 0, 1, 1}, {0, 0, 1, 1}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {0, 0, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 1, 1, 
                 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{1.038643072859014, -7.0975696537810595`, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 
                  0, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 0, 
                  0}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 1, 1, 0, 0, 
                 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{4.052596966319257, -8.097620704736284, 0}, 0.03]}, 
               
               GraphicsBox[{
                 
                 RasterBox[{{1, 0, 1, 0}, {1, 1, 1, 1}, {1, 0, 1, 0}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 0, 1, 0}, {1, 1, 1, 1}, {1, 0, 1, 0}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 0, 1, 
                 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{5.052687611874097, -8.127565259706813, 0}, 0.03]}, 
               
               GraphicsBox[{
                 
                 RasterBox[{{0, 1, 0, 1}, {1, 1, 1, 1}, {0, 1, 0, 1}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{0, 1, 0, 1}, {1, 1, 1, 1}, {0, 1, 0, 1}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 1, 0, 
                 1, 0, 0, 0, 0, 0, 1, 0, 1, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{4.083724350792361, -7.0975696537810595`, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {1, 0, 1, 0}, {1, 1, 1, 1}, {1, 0, 
                  1, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {1, 0, 1, 0}, {1, 1, 1, 1}, {1, 0, 1, 
                  0}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 1, 0, 1, 0, 0, 
                 0, 0, 0, 1, 0, 1, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{7.097678244252602, -2.007566739341136, 0}, 0.03]}, 
               
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {1, 0, 1, 0}, {1, 0, 1, 0}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {1, 0, 1, 0}, {1, 0, 1, 0}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 0, 1, 
                 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{8.097768889807442, -2.0375112943116642`, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {0, 1, 0, 1}, {0, 1, 0, 1}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {0, 1, 0, 1}, {0, 1, 0, 1}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 1, 0, 
                 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{7.128805628725706, -1.0075156883859102`, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 0, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 
                  1, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 0, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 1, 
                  0}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 1, 0, 1, 0, 0, 
                 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{7.097678244252602, -5.05259372203871, 0}, 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 0, 0, 1}, {1, 1, 1, 1}, {1, 0, 0, 1}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 0, 0, 1}, {1, 1, 1, 1}, {1, 0, 0, 1}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 0, 1, 
                 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{8.097768889807442, -5.082538277009237, 0}, 0.03]}, 
               
               GraphicsBox[{
                 
                 RasterBox[{{0, 1, 1, 0}, {1, 1, 1, 1}, {0, 1, 1, 0}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{0, 1, 1, 0}, {1, 1, 1, 1}, {0, 1, 1, 0}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 1, 0, 
                 0, 1, 0, 0, 0, 0, 1, 0, 0, 1}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{7.128805628725706, -4.052542671083483, 0}, 0.03]}, 
               
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {1, 0, 0, 1}, {1, 1, 1, 1}, {1, 0, 
                  0, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {1, 0, 0, 1}, {1, 1, 1, 1}, {1, 0, 0, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 1, 1, 0, 0, 0, 
                 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{1.00751568838591, -2.007566739341136, 0}, 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 0, 1, 
                 1, 0, 0, 1, 1, 0, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{2.0076063339407497`, -2.0375112943116642`, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {0, 1, 1, 0}, {0, 1, 1, 0}, {1, 1, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {0, 1, 1, 0}, {0, 1, 1, 0}, {1, 1, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 0, 0, 0, 1, 0, 
                 0, 1, 1, 0, 0, 1, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{1.038643072859014, -1.0075156883859102`, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 0, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 
                  0, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 0, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 0, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {0, 1, 1, 0, 0, 0, 
                 0, 0, 0, 0, 0, 0, 0, 1, 1, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{8.127728145414128, -4.0834631143900175`, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {0, 1, 1, 0}, {1, 1, 1, 1}, {0, 1, 
                  1, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {0, 1, 1, 0}, {1, 1, 1, 1}, {0, 1, 1, 
                  0}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {1, 0, 0, 1, 0, 0, 
                 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{2.0375655895474365`, -1.0384361316924442`, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{0, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 
                  1, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{0, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 1, 
                  0}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {1, 0, 0, 1, 0, 0, 
                 0, 0, 0, 0, 0, 0, 1, 0, 0, 1}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                SphereBox[{5.082646867480783, -7.128490097087593, 0}, 0.03]}, 
               
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {0, 1, 0, 1}, {1, 1, 1, 1}, {0, 1, 
                  0, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {0, 1, 0, 1}, {1, 1, 1, 1}, {0, 1, 0, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {1, 0, 1, 0, 0, 0, 
                 0, 0, 1, 0, 1, 0, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{8.127728145414128, -1.0384361316924442`, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{0, 1, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 
                  0, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{0, 1, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 0, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {1, 0, 1, 0, 0, 0, 
                 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{5.082646867480783, -4.0834631143900175`, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{1, 1, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 1}, {0, 0, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{1, 1, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {1, 1, 0, 0, 0, 0, 
                 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            TagBox[
             TagBox[
              TooltipBox[{
                Hue[
                 NCache[
                  Rational[1, 4], 0.25], 1, 0.8], 
                
                SphereBox[{2.0375655895474365`, -7.128490097087593, 0}, 
                 0.03]}, 
               GraphicsBox[{
                 
                 RasterBox[{{0, 0, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 0, 
                  1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {{
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, 
                BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                ImageSize -> 800]], Annotation[#, 
               Graphics[{
                 
                 Raster[{{0, 0, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 
                  1}}, {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                  Antialiasing -> False, 
                   GrayLevel[0.5], 
                   
                   Line[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, 
                BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
                FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 100, 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> ($CellContext`selected$$ = {1, 1, 0, 0, 0, 0, 
                 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}), Method -> "Preemptive", 
               PassEventsDown -> Automatic, PassEventsUp -> True}]]}, {
            GrayLevel[0.5], 
            Opacity[0.2], {
             
             Line3DBox[{{7.097678244252602, -8.097620704736284, 0}, {
               7.097678244252602, -8.097620704736284, 0}}], 
             
             Line3DBox[{{7.097678244252602, -8.097620704736284, 0}, {
               8.097768889807442, -8.127565259706813, 0}}], 
             
             Line3DBox[{{7.097678244252602, -8.097620704736284, 0}, {
               7.128805628725706, -7.0975696537810595`, 0}}], 
             
             Line3DBox[{{1.00751568838591, -5.05259372203871, 0}, {
               1.00751568838591, -5.05259372203871, 0}}], 
             
             Line3DBox[{{1.00751568838591, -5.05259372203871, 0}, {
               2.0076063339407497`, -5.082538277009237, 0}}], 
             
             Line3DBox[{{1.00751568838591, -5.05259372203871, 0}, {
               1.038643072859014, -4.052542671083483, 0}}], 
             
             Line3DBox[{{4.052596966319257, -2.007566739341136, 0}, {
               4.052596966319257, -2.007566739341136, 0}}], 
             
             Line3DBox[{{4.052596966319257, -2.007566739341136, 0}, {
               5.052687611874097, -2.0375112943116642`, 0}}], 
             
             Line3DBox[{{4.052596966319257, -2.007566739341136, 0}, {
               4.083724350792361, -1.0075156883859102`, 0}}], 
             
             Line3DBox[{{5.052687611874097, -2.0375112943116642`, 0}, {
               4.052596966319257, -2.007566739341136, 0}}], 
             
             Line3DBox[{{5.052687611874097, -2.0375112943116642`, 0}, {
               5.052687611874097, -2.0375112943116642`, 0}}], 
             
             Line3DBox[{{5.052687611874097, -2.0375112943116642`, 0}, {
               5.082646867480783, -1.0384361316924442`, 0}}], 
             
             Line3DBox[{{2.0076063339407497`, -5.082538277009237, 0}, {
               1.00751568838591, -5.05259372203871, 0}}], 
             
             Line3DBox[{{2.0076063339407497`, -5.082538277009237, 0}, {
               2.0076063339407497`, -5.082538277009237, 0}}], 
             
             Line3DBox[{{2.0076063339407497`, -5.082538277009237, 0}, {
               2.0375655895474365`, -4.0834631143900175`, 0}}], 
             
             Line3DBox[{{8.097768889807442, -8.127565259706813, 0}, {
               7.097678244252602, -8.097620704736284, 0}}], 
             
             Line3DBox[{{8.097768889807442, -8.127565259706813, 0}, {
               8.097768889807442, -8.127565259706813, 0}}], 
             
             Line3DBox[{{8.097768889807442, -8.127565259706813, 0}, {
               8.127728145414128, -7.128490097087593, 0}}], 
             
             Line3DBox[{{4.052596966319257, -5.05259372203871, 0}, {
               4.052596966319257, -5.05259372203871, 0}}], 
             
             Line3DBox[{{4.052596966319257, -5.05259372203871, 0}, {
               5.052687611874097, -5.082538277009237, 0}}], 
             
             Line3DBox[{{4.052596966319257, -5.05259372203871, 0}, {
               4.083724350792361, -4.052542671083483, 0}}], 
             
             Line3DBox[{{1.00751568838591, -8.097620704736284, 0}, {
               1.00751568838591, -8.097620704736284, 0}}], 
             
             Line3DBox[{{1.00751568838591, -8.097620704736284, 0}, {
               2.0076063339407497`, -8.127565259706813, 0}}], 
             
             Line3DBox[{{1.00751568838591, -8.097620704736284, 0}, {
               1.038643072859014, -7.0975696537810595`, 0}}], 
             
             Line3DBox[{{4.052596966319257, -8.097620704736284, 0}, {
               4.052596966319257, -8.097620704736284, 0}}], 
             
             Line3DBox[{{4.052596966319257, -8.097620704736284, 0}, {
               5.052687611874097, -8.127565259706813, 0}}], 
             
             Line3DBox[{{4.052596966319257, -8.097620704736284, 0}, {
               4.083724350792361, -7.0975696537810595`, 0}}], 
             
             Line3DBox[{{7.097678244252602, -2.007566739341136, 0}, {
               7.097678244252602, -2.007566739341136, 0}}], 
             
             Line3DBox[{{7.097678244252602, -2.007566739341136, 0}, {
               8.097768889807442, -2.0375112943116642`, 0}}], 
             
             Line3DBox[{{7.097678244252602, -2.007566739341136, 0}, {
               7.128805628725706, -1.0075156883859102`, 0}}], 
             
             Line3DBox[{{7.097678244252602, -5.05259372203871, 0}, {
               7.097678244252602, -5.05259372203871, 0}}], 
             
             Line3DBox[{{7.097678244252602, -5.05259372203871, 0}, {
               8.097768889807442, -5.082538277009237, 0}}], 
             Line3DBox[{{7.097678244252602, -5.05259372203871, 0}, {
               7.128805628725706, -4.052542671083483, 0}}], 
             
             Line3DBox[{{1.00751568838591, -2.007566739341136, 0}, {
               1.00751568838591, -2.007566739341136, 0}}], 
             
             Line3DBox[{{1.00751568838591, -2.007566739341136, 0}, {
               2.0076063339407497`, -2.0375112943116642`, 0}}], 
             
             Line3DBox[{{1.00751568838591, -2.007566739341136, 0}, {
               1.038643072859014, -1.0075156883859102`, 0}}], 
             
             Line3DBox[{{8.097768889807442, -5.082538277009237, 0}, {
               7.097678244252602, -5.05259372203871, 0}}], 
             
             Line3DBox[{{8.097768889807442, -5.082538277009237, 0}, {
               8.097768889807442, -5.082538277009237, 0}}], 
             
             Line3DBox[{{8.097768889807442, -5.082538277009237, 0}, {
               8.127728145414128, -4.0834631143900175`, 0}}], 
             
             Line3DBox[{{2.0076063339407497`, -2.0375112943116642`, 0}, {
               1.00751568838591, -2.007566739341136, 0}}], 
             
             Line3DBox[{{2.0076063339407497`, -2.0375112943116642`, 0}, {
               2.0076063339407497`, -2.0375112943116642`, 0}}], 
             
             Line3DBox[{{2.0076063339407497`, -2.0375112943116642`, 0}, {
               2.0375655895474365`, -1.0384361316924442`, 0}}], 
             
             Line3DBox[{{5.052687611874097, -8.127565259706813, 0}, {
               4.052596966319257, -8.097620704736284, 0}}], 
             
             Line3DBox[{{5.052687611874097, -8.127565259706813, 0}, {
               5.052687611874097, -8.127565259706813, 0}}], 
             
             Line3DBox[{{5.052687611874097, -8.127565259706813, 0}, {
               5.082646867480783, -7.128490097087593, 0}}], 
             
             Line3DBox[{{8.097768889807442, -2.0375112943116642`, 0}, {
               7.097678244252602, -2.007566739341136, 0}}], 
             
             Line3DBox[{{8.097768889807442, -2.0375112943116642`, 0}, {
               8.097768889807442, -2.0375112943116642`, 0}}], 
             
             Line3DBox[{{8.097768889807442, -2.0375112943116642`, 0}, {
               8.127728145414128, -1.0384361316924442`, 0}}], 
             
             Line3DBox[{{5.052687611874097, -5.082538277009237, 0}, {
               4.052596966319257, -5.05259372203871, 0}}], 
             
             Line3DBox[{{5.052687611874097, -5.082538277009237, 0}, {
               5.052687611874097, -5.082538277009237, 0}}], 
             
             Line3DBox[{{5.052687611874097, -5.082538277009237, 0}, {
               5.082646867480783, -4.0834631143900175`, 0}}], 
             
             Line3DBox[{{2.0076063339407497`, -8.127565259706813, 0}, {
               1.00751568838591, -8.097620704736284, 0}}], 
             
             Line3DBox[{{2.0076063339407497`, -8.127565259706813, 0}, {
               2.0076063339407497`, -8.127565259706813, 0}}], 
             
             Line3DBox[{{2.0076063339407497`, -8.127565259706813, 0}, {
               2.0375655895474365`, -7.128490097087593, 0}}], 
             
             Line3DBox[{{1.038643072859014, -7.0975696537810595`, 0}, {
               1.00751568838591, -8.097620704736284, 0}}], 
             
             Line3DBox[{{1.038643072859014, -7.0975696537810595`, 0}, {
               1.038643072859014, -7.0975696537810595`, 0}}], 
             
             Line3DBox[{{1.038643072859014, -7.0975696537810595`, 0}, {
               2.0375655895474365`, -7.128490097087593, 0}}], 
             
             Line3DBox[{{4.083724350792361, -4.052542671083483, 0}, {
               4.052596966319257, -5.05259372203871, 0}}], 
             
             Line3DBox[{{4.083724350792361, -4.052542671083483, 0}, {
               4.083724350792361, -4.052542671083483, 0}}], 
             
             Line3DBox[{{4.083724350792361, -4.052542671083483, 0}, {
               5.082646867480783, -4.0834631143900175`, 0}}], 
             
             Line3DBox[{{7.128805628725706, -7.0975696537810595`, 0}, {
               7.097678244252602, -8.097620704736284, 0}}], 
             
             Line3DBox[{{7.128805628725706, -7.0975696537810595`, 0}, {
               7.128805628725706, -7.0975696537810595`, 0}}], 
             
             Line3DBox[{{7.128805628725706, -7.0975696537810595`, 0}, {
               8.127728145414128, -7.128490097087593, 0}}], 
             
             Line3DBox[{{7.128805628725706, -1.0075156883859102`, 0}, {
               7.097678244252602, -2.007566739341136, 0}}], 
             
             Line3DBox[{{7.128805628725706, -1.0075156883859102`, 0}, {
               7.128805628725706, -1.0075156883859102`, 0}}], 
             Line3DBox[{{7.128805628725706, -1.0075156883859102`, 0}, {
               8.127728145414128, -1.0384361316924442`, 0}}], 
             
             Line3DBox[{{4.083724350792361, -7.0975696537810595`, 0}, {
               4.052596966319257, -8.097620704736284, 0}}], 
             
             Line3DBox[{{4.083724350792361, -7.0975696537810595`, 0}, {
               4.083724350792361, -7.0975696537810595`, 0}}], 
             
             Line3DBox[{{4.083724350792361, -7.0975696537810595`, 0}, {
               5.082646867480783, -7.128490097087593, 0}}], 
             
             Line3DBox[{{1.038643072859014, -4.052542671083483, 0}, {
               1.00751568838591, -5.05259372203871, 0}}], 
             
             Line3DBox[{{1.038643072859014, -4.052542671083483, 0}, {
               1.038643072859014, -4.052542671083483, 0}}], 
             
             Line3DBox[{{1.038643072859014, -4.052542671083483, 0}, {
               2.0375655895474365`, -4.0834631143900175`, 0}}], 
             
             Line3DBox[{{1.038643072859014, -1.0075156883859102`, 0}, {
               1.00751568838591, -2.007566739341136, 0}}], 
             
             Line3DBox[{{1.038643072859014, -1.0075156883859102`, 0}, {
               1.038643072859014, -1.0075156883859102`, 0}}], 
             
             Line3DBox[{{1.038643072859014, -1.0075156883859102`, 0}, {
               2.0375655895474365`, -1.0384361316924442`, 0}}], 
             
             Line3DBox[{{7.128805628725706, -4.052542671083483, 0}, {
               7.097678244252602, -5.05259372203871, 0}}], 
             
             Line3DBox[{{7.128805628725706, -4.052542671083483, 0}, {
               7.128805628725706, -4.052542671083483, 0}}], 
             
             Line3DBox[{{7.128805628725706, -4.052542671083483, 0}, {
               8.127728145414128, -4.0834631143900175`, 0}}], 
             
             Line3DBox[{{4.083724350792361, -1.0075156883859102`, 0}, {
               4.052596966319257, -2.007566739341136, 0}}], 
             
             Line3DBox[{{4.083724350792361, -1.0075156883859102`, 0}, {
               4.083724350792361, -1.0075156883859102`, 0}}], 
             
             Line3DBox[{{4.083724350792361, -1.0075156883859102`, 0}, {
               5.082646867480783, -1.0384361316924442`, 0}}], 
             
             Line3DBox[{{2.0375655895474365`, -1.0384361316924442`, 0}, {
               2.0076063339407497`, -2.0375112943116642`, 0}}], 
             
             Line3DBox[{{2.0375655895474365`, -1.0384361316924442`, 0}, {
               1.038643072859014, -1.0075156883859102`, 0}}], 
             
             Line3DBox[{{2.0375655895474365`, -1.0384361316924442`, 0}, {
               2.0375655895474365`, -1.0384361316924442`, 0}}], 
             
             Line3DBox[{{8.127728145414128, -4.0834631143900175`, 0}, {
               8.097768889807442, -5.082538277009237, 0}}], 
             
             Line3DBox[{{8.127728145414128, -4.0834631143900175`, 0}, {
               7.128805628725706, -4.052542671083483, 0}}], 
             
             Line3DBox[{{8.127728145414128, -4.0834631143900175`, 0}, {
               8.127728145414128, -4.0834631143900175`, 0}}], 
             
             Line3DBox[{{5.082646867480783, -1.0384361316924442`, 0}, {
               5.052687611874097, -2.0375112943116642`, 0}}], 
             
             Line3DBox[{{5.082646867480783, -1.0384361316924442`, 0}, {
               4.083724350792361, -1.0075156883859102`, 0}}], 
             
             Line3DBox[{{5.082646867480783, -1.0384361316924442`, 0}, {
               5.082646867480783, -1.0384361316924442`, 0}}], 
             
             Line3DBox[{{8.127728145414128, -1.0384361316924442`, 0}, {
               8.097768889807442, -2.0375112943116642`, 0}}], 
             
             Line3DBox[{{8.127728145414128, -1.0384361316924442`, 0}, {
               7.128805628725706, -1.0075156883859102`, 0}}], 
             
             Line3DBox[{{8.127728145414128, -1.0384361316924442`, 0}, {
               8.127728145414128, -1.0384361316924442`, 0}}], 
             
             Line3DBox[{{5.082646867480783, -7.128490097087593, 0}, {
               5.052687611874097, -8.127565259706813, 0}}], 
             
             Line3DBox[{{5.082646867480783, -7.128490097087593, 0}, {
               4.083724350792361, -7.0975696537810595`, 0}}], 
             
             Line3DBox[{{5.082646867480783, -7.128490097087593, 0}, {
               5.082646867480783, -7.128490097087593, 0}}], 
             
             Line3DBox[{{2.0375655895474365`, -4.0834631143900175`, 0}, {
               2.0076063339407497`, -5.082538277009237, 0}}], 
             
             Line3DBox[{{2.0375655895474365`, -4.0834631143900175`, 0}, {
               1.038643072859014, -4.052542671083483, 0}}], 
             
             Line3DBox[{{2.0375655895474365`, -4.0834631143900175`, 0}, {
               2.0375655895474365`, -4.0834631143900175`, 0}}], 
             
             Line3DBox[{{2.0375655895474365`, -7.128490097087593, 0}, {
               2.0076063339407497`, -8.127565259706813, 0}}], 
             
             Line3DBox[{{2.0375655895474365`, -7.128490097087593, 0}, {
               1.038643072859014, -7.0975696537810595`, 0}}], 
             
             Line3DBox[{{2.0375655895474365`, -7.128490097087593, 0}, {
               2.0375655895474365`, -7.128490097087593, 0}}], 
             
             Line3DBox[{{5.082646867480783, -4.0834631143900175`, 0}, {
               5.052687611874097, -5.082538277009237, 0}}], 
             
             Line3DBox[{{5.082646867480783, -4.0834631143900175`, 0}, {
               4.083724350792361, -4.052542671083483, 0}}], 
             
             Line3DBox[{{5.082646867480783, -4.0834631143900175`, 0}, {
               5.082646867480783, -4.0834631143900175`, 0}}], 
             
             Line3DBox[{{8.127728145414128, -7.128490097087593, 0}, {
               8.097768889807442, -8.127565259706813, 0}}], 
             
             Line3DBox[{{8.127728145414128, -7.128490097087593, 0}, {
               7.128805628725706, -7.0975696537810595`, 0}}], 
             
             Line3DBox[{{8.127728145414128, -7.128490097087593, 0}, {
               8.127728145414128, -7.128490097087593, 0}}]}}, {}}, Boxed -> 
          True, SphericalRegion -> True, ImageSize -> 800, PlotRange -> 2.5, 
          ViewPoint -> Dynamic[
            Dot[
             RotationMatrix[$CellContext`rotAngle$$, {0, 0, 1}], {3, 0, 1}]], 
          PlotLabel -> FormBox[
            DynamicBox[
             ToBoxes[
              Row[{"Selected: ", 
                If[$CellContext`selected$$ === None, "None", 
                 ArrayPlot[
                  Partition[$CellContext`selected$$, 4], Mesh -> True, 
                  ImageSize -> 100]]}], TraditionalForm]], 
            TraditionalForm]]}, {
         TemplateBox[{"\"Rotation (Z): \"", 
           InterpretationBox[
            StyleBox[
             GridBox[{{
                SliderBox[
                 Dynamic[
                  BoxForm`RemapVariable[$CellContext`rotAngle$$, {0, 2 Pi}], 
                  BoxForm`RemapValue[#, $CellContext`rotAngle$$, {
                   0, 2 Pi}]& ], {0, 1}, ImageSize -> 300, Appearance -> 
                 Automatic, DefaultBaseStyle -> "LabeledSlider"], 
                InputFieldBox[
                 Dynamic[$CellContext`rotAngle$$], ImageSize -> 300, 
                 Appearance -> "Frameless", ContinuousAction -> True, 
                 DefaultBaseStyle -> "LabeledSlider", 
                 FieldSize -> {{5, 10}, {1, 2}}, ImageMargins -> 0]}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              ColumnSpacings -> 1, BaselinePosition -> {{1, 1}, Axis}], 
             Deployed -> True, FontFamily :> 
             CurrentValue["ControlsFontFamily"], StripOnInput -> False], 
            LabeledSlider[
             Dynamic[
              BoxForm`RemapVariable[$CellContext`rotAngle$$, {0, 2 Pi}], 
              BoxForm`RemapValue[#, $CellContext`rotAngle$$, {0, 2 Pi}]& ], {
             0, 1}, ImageSize -> 300]]}, "RowDefault"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
    "\"Spekkens Toy Model State Space\""},
   "Labeled",
   DisplayFunction->(GridBox[{{
       ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
        "PanelLabel"]}, {
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      BaselinePosition -> {2, 1}]& ),
   InterpretationFunction->(RowBox[{"Labeled", "[", 
      RowBox[{#, ",", 
        RowBox[{"{", #2, "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"{", 
            RowBox[{"Top", ",", "Left"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{
            RowBox[{"DefaultLabelStyle", "\[Rule]", "\"PanelLabel\""}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
            RowBox[{"Spacings", "\[Rule]", "Automatic"}]}], "}"}]}], "]"}]& )],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.959040228292048*^9, 3.95904025509536*^9}, 
   3.959040292926209*^9, 3.959041304575081*^9, 3.959042780190114*^9, {
   3.95904949673453*^9, 3.95904951659618*^9}},
 CellLabel->
  "Out[3074]=",ExpressionUUID->"9c894745-92ed-485e-a233-b2ac98b4e2cb"]
}, Open  ]],

Cell["\<\
The image presents a striking 3D visualization of a state space, likely \
pertaining to a quantum information model, specifically the Spekkens toy \
model. Within a transparent cube, a collection of small, greenish spheres are \
visible, interconnected by thin gray lines. These spheres represent \
individual states, and the lines depict the allowed transitions or \
relationships between them. At the bottom of the display, a \
\[OpenCurlyDoubleQuote]Rotation (Z)\[CloseCurlyDoubleQuote] slider suggests \
interactivity, allowing the user to rotate the entire 3D representation, \
providing different perspectives on the intricate connections within the \
state space.\
\>", "Item",
 CellChangeTimes->{{3.793891724891276*^9, 3.793891806306624*^9}, {
   3.795737503964374*^9, 3.795737584805357*^9}, {3.795737632794353*^9, 
   3.795737653673546*^9}, {3.958573762821009*^9, 3.958573782462821*^9}, {
   3.958573868949756*^9, 3.958573894310577*^9}, {3.958606885729864*^9, 
   3.958607092174608*^9}, {3.9586072258570004`*^9, 3.958607262092358*^9}, {
   3.958607532255677*^9, 3.9586075361084538`*^9}, {3.958607697827297*^9, 
   3.958607698828539*^9}, {3.958612213041195*^9, 3.958612216274966*^9}, 
   3.958966763598494*^9, {3.959049521399396*^9, 
   3.959049521889235*^9}},ExpressionUUID->"dac99133-b46f-416a-85d0-\
2e2aaf366310"],

Cell["\<\
The accompanying Mathematica code reveals the sophisticated mechanics behind \
this visualization. The SpekkensStates and SpekkensPermutations are defined, \
forming the building blocks of the model. Composite states, represented by \
baseStates, are generated by taking Kronecker products of pairs of these \
fundamental Spekkens states. Crucially, the applyRowPerm and applyColPerm \
functions define how permutations are applied to these composite states, \
allowing for transformations both horizontally and vertically within their 4\
\[Times]4 grid representation. The getNeighbors function then identifies all \
reachable states from a given state by applying these permutations.\
\>", "Item",
 CellChangeTimes->{{3.793891724891276*^9, 3.793891806306624*^9}, {
   3.795737503964374*^9, 3.795737584805357*^9}, {3.795737632794353*^9, 
   3.795737653673546*^9}, {3.958573762821009*^9, 3.958573782462821*^9}, {
   3.958573868949756*^9, 3.958573894310577*^9}, {3.958606885729864*^9, 
   3.958607092174608*^9}, {3.9586072258570004`*^9, 3.958607262092358*^9}, {
   3.958607532255677*^9, 3.9586075361084538`*^9}, {3.958607697827297*^9, 
   3.958607698828539*^9}, {3.958612213041195*^9, 3.9586122203654757`*^9}, 
   3.95896676445091*^9, {3.959049524501685*^9, 
   3.9590495248719263`*^9}},ExpressionUUID->"e6647d1c-183a-418d-ba75-\
018835d7a9f9"],

Cell["\<\
The graph g is constructed using NestGraph, where nodes are the baseStates \
and edges connect states that are \[OpenCurlyDoubleQuote]neighbors\
\[CloseCurlyDoubleQuote] (i.e., reachable through a single permutation). The \
initial 2D layout of this graph is determined by GraphEmbedding, and then \
extended into 3D by appending a zero for the Z-coordinate. The DynamicModule \
then renders this 3D graph, allowing for user interaction. Each sphere is an \
EventHandler which, upon clicking, highlights the selected state in red and \
displays its full 4\[Times]4 grid representation at the top of the window. \
The ViewPoint is dynamically linked to the rotAngle slider, providing the \
interactive rotation, making this a powerful tool for exploring the complex \
relationships within the Spekkens toy model\[CloseCurlyQuote]s state space.\
\>", "Text",
 CellFrame->{{0, 0}, {3, 0}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958612167097205*^9, 3.95861223660649*^9}, 
   3.958966765907588*^9, 
   3.959049529756217*^9},ExpressionUUID->"213111fa-e374-4d87-bd5b-\
97dfbf08bd95"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AllPermutations", "=", 
   RowBox[{"PermutationCycles", "/@", 
    RowBox[{"Permutations", "[", 
     RowBox[{"Range", "[", "4", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PermutationAction", "[", 
    RowBox[{"state_", ",", "perm_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", "=", 
       RowBox[{"PermutationList", "[", 
        RowBox[{"perm", ",", "4"}], "]"}]}], "}"}], ",", 
     RowBox[{"state", "[", 
      RowBox[{"[", 
       RowBox[{"p", ",", "p"}], "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"initialStates", "=", 
   RowBox[{"KroneckerProduct", "@@@", 
    RowBox[{"Tuples", "[", 
     RowBox[{"SpekkensStates", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BuildStateGraph", "[", 
    RowBox[{"useFullPerms_", ",", "depth_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"permutationSet", ",", "nextStates", ",", "graph"}], "}"}], ",", 
     RowBox[{
      RowBox[{"permutationSet", "=", 
       RowBox[{"If", "[", 
        RowBox[{
        "useFullPerms", ",", "AllPermutations", ",", "SpekkensPermutations"}],
         "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"nextStates", "[", "state_", "]"}], ":=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"PermutationAction", "[", 
           RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", 
         "permutationSet"}], "]"}]}], ";", "\n", 
      RowBox[{"graph", "=", 
       RowBox[{"NestGraph", "[", 
        RowBox[{"nextStates", ",", "initialStates", ",", "depth", ",", 
         RowBox[{"VertexShapeFunction", "->", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"ArrayPlot", "[", 
               RowBox[{"#2", ",", 
                RowBox[{"Mesh", "->", "True"}], ",", 
                RowBox[{"ImageSize", "->", "40"}], ",", 
                RowBox[{"Frame", "->", "False"}], ",", 
                RowBox[{"ColorRules", "->", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "->", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.2", ",", "0.5", ",", "0.8"}], "]"}]}], ",", 
                   RowBox[{"0", "->", "White"}]}], "}"}]}]}], "]"}], ",", 
              "#1", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"Scaled", "[", "0.05", "]"}]}], "]"}], "&"}], ")"}]}], 
         ",", 
         RowBox[{"VertexSize", "->", "0.8"}], ",", 
         RowBox[{"GraphLayout", "->", "\"\<SpringEmbedding\>\""}], ",", 
         RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
         RowBox[{"ImageSize", "->", "700"}], ",", 
         RowBox[{"EdgeStyle", "->", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"GrayLevel", "[", "0.6", "]"}], ",", 
            RowBox[{"Thickness", "[", "0.003", "]"}]}], "]"}]}], ",", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Spekkens States Evolution | Depth: \>\"", ",", "depth", 
               ",", "\"\< | Permutations: \>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                "useFullPerms", ",", "\"\<Full (24)\>\"", ",", 
                 "\"\<Spekkens (4)\>\""}], "]"}]}], "}"}], "]"}], ",", "Bold",
             ",", "14"}], "]"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"Graph", "[", 
       RowBox[{"graph", ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{"v_", ":>", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"Tooltip", "[", 
              RowBox[{
               RowBox[{"ArrayPlot", "[", 
                RowBox[{"v", ",", 
                 RowBox[{"Mesh", "->", "True"}], ",", 
                 RowBox[{"ImageSize", "->", "120"}], ",", 
                 RowBox[{"ColorRules", "->", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"1", "->", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.2", ",", "0.5", ",", "0.8"}], "]"}]}], ",", 
                    RowBox[{"0", "->", "White"}]}], "}"}]}], ",", 
                 RowBox[{"FrameTicks", "->", "All"}], ",", 
                 RowBox[{"Frame", "->", "True"}]}], "]"}], ",", 
               RowBox[{"Grid", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<State Vector:\>\"", ",", 
                    RowBox[{"MatrixForm", "[", 
                    RowBox[{"Flatten", "[", "v", "]"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Dimensions:\>\"", ",", 
                    RowBox[{"Dimensions", "[", "v", "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Binary Form:\>\"", ",", 
                    RowBox[{"BinaryForm", "[", 
                    RowBox[{"Flatten", "[", "v", "]"}], "]"}]}], "}"}]}], 
                  "}"}], ",", 
                 RowBox[{"Frame", "->", "All"}], ",", 
                 RowBox[{"Alignment", "->", "Left"}]}], "]"}]}], "]"}], ",", 
             "Tooltip"}], "]"}]}], "}"}]}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"BuildStateGraph", "[", 
    RowBox[{"useFullPermutations", ",", "depth"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "useFullPermutations", ",", "False", ",", "\"\<Permutation Set\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"False", "->", "\"\<Spekkens (4)\>\""}], ",", 
       RowBox[{"True", "->", "\"\<Full (24)\>\""}]}], "}"}], ",", 
     RowBox[{"ControlType", "->", "RadioButtonBar"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"depth", ",", "1", ",", "\"\<Evolution Depth\>\""}], "}"}], ",",
      "1", ",", "5", ",", "1", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ControlType", "->", "Slider"}]}], "}"}], ",", 
   RowBox[{"ControlPlacement", "->", "Top"}], ",", 
   RowBox[{"FrameMargins", "->", "10"}], ",", 
   RowBox[{"Paneled", "->", "True"}], ",", 
   RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958972943899881*^9, 3.958972943901116*^9}, {
  3.959049544107317*^9, 
  3.9590495472362547`*^9}},ExpressionUUID->"10d0409c-06e8-4d2d-baf8-\
0b46b5b2e85b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`depth$$ = 
    1, $CellContext`useFullPermutations$$ = False, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`useFullPermutations$$], False, "Permutation Set"}, {
      False -> "Spekkens (4)", True -> "Full (24)"}, ControlType -> 
      RadioButtonBar}, {{
       Hold[$CellContext`depth$$], 1, "Evolution Depth"}, 1, 5, 1, 
      ControlType -> Slider}}, Typeset`size$$ = {438., {301., 304.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`depth$$ = 
        1, $CellContext`useFullPermutations$$ = False}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> \
$CellContext`BuildStateGraph[$CellContext`useFullPermutations$$, \
$CellContext`depth$$], 
      "Specifications" :> {{{$CellContext`useFullPermutations$$, False, 
          "Permutation Set"}, {False -> "Spekkens (4)", True -> "Full (24)"}, 
         ControlType -> 
         RadioButtonBar}, {{$CellContext`depth$$, 1, "Evolution Depth"}, 1, 5,
          1, Appearance -> "Labeled", ControlType -> Slider}}, 
      "Options" :> {
       ControlPlacement -> Top, FrameMargins -> 10, Paneled -> True}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{466., {340., 345.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`BuildStateGraph[
         Pattern[$CellContext`useFullPerms, 
          Blank[]], 
         Pattern[$CellContext`depth, 
          Blank[]]] := 
       Module[{$CellContext`permutationSet, $CellContext`nextStates, \
$CellContext`graph}, $CellContext`permutationSet = 
          If[$CellContext`useFullPerms, $CellContext`AllPermutations, \
$CellContext`SpekkensPermutations]; $CellContext`nextStates[
            Pattern[$CellContext`state, 
             Blank[]]] := DeleteDuplicates[
            
            Map[$CellContext`PermutationAction[$CellContext`state, #]& , \
$CellContext`permutationSet]]; $CellContext`graph = 
          NestGraph[$CellContext`nextStates, $CellContext`initialStates, \
$CellContext`depth, VertexShapeFunction -> (Inset[
              
              ArrayPlot[#2, Mesh -> True, ImageSize -> 40, Frame -> False, 
               ColorRules -> {1 -> RGBColor[0.2, 0.5, 0.8], 0 -> White}], #, {
              0, 0}, 
              Scaled[0.05]]& ), VertexSize -> 0.8, GraphLayout -> 
            "SpringEmbedding", PerformanceGoal -> "Quality", ImageSize -> 700,
             EdgeStyle -> Directive[
              GrayLevel[0.6], 
              Thickness[0.003]], PlotLabel -> Style[
              
              Row[{"Spekkens States Evolution | Depth: ", $CellContext`depth, 
                " | Permutations: ", 
                If[$CellContext`useFullPerms, "Full (24)", "Spekkens (4)"]}], 
              Bold, 14]]; 
         Graph[$CellContext`graph, VertexLabels -> {Pattern[$CellContext`v, 
               Blank[]] :> Placed[
               Tooltip[
                
                ArrayPlot[$CellContext`v, Mesh -> True, ImageSize -> 120, 
                 ColorRules -> {1 -> RGBColor[0.2, 0.5, 0.8], 0 -> White}, 
                 FrameTicks -> All, Frame -> True], 
                Grid[{{"State Vector:", 
                   MatrixForm[
                    Flatten[$CellContext`v]]}, {"Dimensions:", 
                   Dimensions[$CellContext`v]}, {"Binary Form:", 
                   $CellContext`BinaryForm[
                    Flatten[$CellContext`v]]}}, Frame -> All, Alignment -> 
                 Left]], Tooltip]}]], $CellContext`nextStates[
         Pattern[$CellContext`state, 
          Blank[]], 
         Pattern[$CellContext`perms, 
          Blank[]]] := DeleteDuplicates[
         Map[$CellContext`permuteState[$CellContext`state, #]& , \
$CellContext`perms]], $CellContext`perms = {{1, 2, 3, 4}, {2, 1, 4, 3}, {3, 4,
         1, 2}, {4, 3, 2, 1}}, $CellContext`permuteState[
         Pattern[$CellContext`state, 
          Blank[List]], 
         Pattern[$CellContext`cycles, 
          Blank[Cycles]]] := 
       Module[{$CellContext`permList, $CellContext`mat}, \
$CellContext`permList = 
          PermutationList[$CellContext`cycles, 4]; $CellContext`mat = 
          ArrayReshape[$CellContext`state, {4, 4}]; Flatten[
           
           Part[$CellContext`mat, $CellContext`permList, \
$CellContext`permList]]], $CellContext`permuteState[
         Pattern[$CellContext`state, 
          Blank[List]], 
         Pattern[$CellContext`cycle, 
          Blank[]]] := 
       Module[{$CellContext`perm}, $CellContext`perm = 
          PermutationList[$CellContext`cycle, 
            Length[$CellContext`state]]; 
         Part[$CellContext`state, $CellContext`perm]], \
$CellContext`permuteState[
         Pattern[$CellContext`vec, 
          Blank[]], 
         Pattern[$CellContext`perm, 
          Blank[]]] := 
       With[{$CellContext`mat = Partition[$CellContext`vec, 4]}, 
         Flatten[
          
          Part[$CellContext`mat, $CellContext`perm, $CellContext`perm]]], \
$CellContext`graph = 
       Graph[{{{1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 
          0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{1, 0, 1, 
          0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 1, 0, 1}, {0, 1,
           0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 1, 1, 0}, {0, 1, 1, 0}, {
          0, 0, 0, 0}, {0, 0, 0, 0}}, {{1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 
          0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1,
           0, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 
          1}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 0}}, {{0, 
          0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 1}}, {{0, 0, 0, 
          0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 0}}, {{0, 0, 0, 0}, {0, 0,
           0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}}, {{1, 1, 0, 0}, {0, 0, 0, 0}, {
          1, 1, 0, 0}, {0, 0, 0, 0}}, {{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 
          1}, {0, 0, 0, 0}}, {{1, 0, 1, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {0, 0,
           0, 0}}, {{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0, 
          0}}, {{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}}, {{1, 
          0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 0}}, {{0, 0, 0, 
          0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}}, {{0, 0, 0, 0}, {0, 0,
           1, 1}, {0, 0, 0, 0}, {0, 0, 1, 1}}, {{0, 0, 0, 0}, {1, 0, 1, 0}, {
          0, 0, 0, 0}, {1, 0, 1, 0}}, {{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0, 
          0}, {0, 1, 0, 1}}, {{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1,
           1, 0}}, {{0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 
          1}}, {{0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}}, {{0, 
          0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 0}}, {{0, 0, 0, 
          0}, {1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 1,
           0, 1}, {0, 1, 0, 1}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 1, 1, 0}, {
          0, 1, 1, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 
          1}, {0, 0, 0, 0}}, {{1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1,
           0, 0}}, {{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 
          1}}, {{1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}}, {{0, 
          1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}}, {{0, 1, 1, 
          0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}}, {{1, 0, 0, 1}, {0, 0,
           0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}}, {1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 
          0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 
          1}, {0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 
          0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0}, {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 
          0, 0, 0, 0, 0, 0}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
          0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}, {0, 0, 0, 0, 
          0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}, {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 
          0, 0, 0, 0, 0, 0}, {1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
          0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}, {0, 0, 0, 0, 
          0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}, {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 
          0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 
          0}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 
          0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}, {1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 
          1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 
          1}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 
          1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 
          1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 
          1}, {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 
          0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}, {0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 
          0, 0, 0, 0, 0, 0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 
          0}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}, {0, 0, 0, 0, 
          0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 
          1, 0, 0, 0, 0, 0}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
          1}, {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}, {0, 0, 0, 0, 
          0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 
          1, 0, 0, 0, 0, 0}, {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
          1}, {0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0}, {0, 1, 1, 0, 
          0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0}}, {
          
          UndirectedEdge[{{1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}], 
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 
           1}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 
           1}}, {1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 
           0}}, {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 
           0}}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 
           1}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 
           1}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 
           1}}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 
           1}}, {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 
           0}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 
           0}}, {1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 
           0}}, {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 
           1}}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 
           1}}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 
           1}}, {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 
           1}}, {1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {0, 0, 0, 
           0}}, {1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0, 
           0}}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 
           0}}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 
           0}}, {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 
           0}}, {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 
           0}}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {1, 0, 1, 
           0}}, {0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {1, 0, 1, 
           0}}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0, 1, 0, 
           1}}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0, 1, 0, 
           1}}, {1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 
           0}}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 
           0}}, {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 
           0}}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 
           0}}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 
           1}}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1}], 
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 
           1}}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 
           1}}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 
           1}}, {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 
           0}}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 
           0}}, {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 
           0}}, {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 
           0}}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 
           0}}, {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 
           0}}, {0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 
           0}}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 
           0}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 
           1}}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 
           0}}, {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 
           0}}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 
           0}}, {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 
           0}}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 
           1}}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 
           1}}, {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 
           1}}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 
           1}}, {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 
           0}}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0}], 
          
          UndirectedEdge[{{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 
           0}}, {0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 
           1}}, {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1}], 
          
          UndirectedEdge[{{1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 
           1}}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0}]}, {
         EdgeStyle -> {
            GrayLevel[0.7]}, GraphLayout -> "SpringEmbedding", 
          VertexLabels -> {None}}], $CellContext`AllPermutations = {
         Cycles[{}], 
         Cycles[{{3, 4}}], 
         Cycles[{{2, 3}}], 
         Cycles[{{2, 3, 4}}], 
         Cycles[{{2, 4, 3}}], 
         Cycles[{{2, 4}}], 
         Cycles[{{1, 2}}], 
         Cycles[{{1, 2}, {3, 4}}], 
         Cycles[{{1, 2, 3}}], 
         Cycles[{{1, 2, 3, 4}}], 
         Cycles[{{1, 2, 4, 3}}], 
         Cycles[{{1, 2, 4}}], 
         Cycles[{{1, 3, 2}}], 
         Cycles[{{1, 3, 4, 2}}], 
         Cycles[{{1, 3}}], 
         Cycles[{{1, 3, 4}}], 
         Cycles[{{1, 3}, {2, 4}}], 
         Cycles[{{1, 3, 2, 4}}], 
         Cycles[{{1, 4, 3, 2}}], 
         Cycles[{{1, 4, 2}}], 
         Cycles[{{1, 4, 3}}], 
         Cycles[{{1, 4}}], 
         Cycles[{{1, 4, 2, 3}}], 
         Cycles[{{1, 4}, {2, 3}}]}, $CellContext`SpekkensPermutations = {
         Cycles[{}], 
         Cycles[{{1, 2}, {3, 4}}], 
         Cycles[{{1, 3}, {2, 4}}], 
         Cycles[{{1, 4}, {2, 3}}]}, $CellContext`PermutationAction[
         Pattern[$CellContext`state, 
          Blank[]], 
         Pattern[$CellContext`perm, 
          Blank[]]] := 
       With[{$CellContext`p = PermutationList[$CellContext`perm, 4]}, 
         Part[$CellContext`state, $CellContext`p, $CellContext`p]], \
$CellContext`initialStates = CompressedData["
1:eJxTTMoPSmJmYGBQAWIWKGZkhGAEQBVhhEIGXAJoBkB5KCZiUUY1e2BCSCah
iMCMgBuFLoBmAMztyH6gtR20jANkcxmxiKAYA3ERqgCaASjhAkQA5QkCZg==

        "], $CellContext`v = {1, 0, 0, 1}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.958972944069997*^9, 3.959041305904772*^9, {3.959042765108414*^9, 
   3.959042780233872*^9}},
 CellLabel->
  "Out[1144]=",ExpressionUUID->"df76421a-ddfc-4bf2-838f-814b7755d2d0"]
}, Open  ]],

Cell["\<\
The image displays an interactive visualization tool titled \
\[OpenCurlyDoubleQuote]Spekkens States Evolution,\[CloseCurlyDoubleQuote] \
showcasing a grid of graphs. Each graph represents the connectivity between \
different \[OpenCurlyDoubleQuote]Spekkens states,\[CloseCurlyDoubleQuote] \
which are visualized as 4\[Times]4 binary grids (blue squares represent 1s, \
white represent 0s). The arrows indicate transitions between states. The top \
of the interface provides controls for selecting the \
\[OpenCurlyDoubleQuote]Permutation Set\[CloseCurlyDoubleQuote] (either \
\[OpenCurlyDoubleQuote]Spekkens (4)\[CloseCurlyDoubleQuote] which is \
restricted, or \[OpenCurlyDoubleQuote]Full (24)\[CloseCurlyDoubleQuote] \
representing all possible permutations of 4 elements) and the \
\[OpenCurlyDoubleQuote]Evolution Depth,\[CloseCurlyDoubleQuote] which \
determines how many steps of state transformation are displayed in each graph.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958612167097205*^9, 3.958612247996469*^9}, 
   3.958966767532995*^9, {3.959049551879377*^9, 
   3.959049552412365*^9}},ExpressionUUID->"010c1199-ea49-4e2c-abf2-\
a6444c67c2b0"],

Cell["\<\
The Mathematica code underpins this interactive explorer. It starts by \
defining SpekkensStates as a set of six fundamental binary vectors, and \
SpekkensPermutations as a specific subset of transformations. The \
AllPermutations set includes every possible permutation of four elements. The \
PermutationAction function is key; it defines how a given permutation acts on \
a state (represented as a 4\[Times]4 matrix). The initialStates for the \
graphs are generated by taking Kronecker products of all possible pairs from \
SpekkensStates, creating a total of 6\[Times]6=36 composite states.\
\>", "Item",
 CellChangeTimes->{{3.793891724891276*^9, 3.793891806306624*^9}, {
   3.795737503964374*^9, 3.795737584805357*^9}, {3.795737632794353*^9, 
   3.795737653673546*^9}, {3.958573762821009*^9, 3.958573782462821*^9}, {
   3.958573868949756*^9, 3.958573894310577*^9}, {3.958606885729864*^9, 
   3.958607092174608*^9}, {3.9586072258570004`*^9, 3.958607262092358*^9}, {
   3.958607532255677*^9, 3.9586075361084538`*^9}, {3.958607697827297*^9, 
   3.958607698828539*^9}, {3.958612213041195*^9, 3.958612216274966*^9}, {
   3.958612253451191*^9, 3.9586122634565773`*^9}, 3.95896676871321*^9, {
   3.95904955544555*^9, 
   3.959049556018965*^9}},ExpressionUUID->"0572b33d-1d89-45da-982a-\
31ce9a824b73"],

Cell[CellGroupData[{

Cell["\<\
The BuildStateGraph function is responsible for generating the individual \
state evolution graphs shown in the image. It dynamically selects the \
permutation set based on user input and then uses NestGraph to construct the \
graph. NestGraph iteratively applies the nextStates function (which \
determines all states reachable by one permutation from a given state) to the \
initialStates up to the specified depth. Each vertex in the graph is visually \
rendered as an ArrayPlot of the corresponding state, and tooltips provide \
detailed information (state vector, dimensions, binary form) when hovering \
over a state. This interactive Manipulate environment allows for a dynamic \
exploration of state transitions within the Spekkens toy model, enabling \
users to observe the effects of different permutation sets and evolution \
depths on the connectivity and structure of the state space.\
\>", "Item",
 CellChangeTimes->{{3.793891724891276*^9, 3.793891806306624*^9}, {
   3.795737503964374*^9, 3.795737584805357*^9}, {3.795737632794353*^9, 
   3.795737653673546*^9}, {3.958573762821009*^9, 3.958573782462821*^9}, {
   3.958573868949756*^9, 3.958573894310577*^9}, {3.958606885729864*^9, 
   3.958607092174608*^9}, {3.9586072258570004`*^9, 3.958607262092358*^9}, {
   3.958607532255677*^9, 3.9586075361084538`*^9}, {3.958607697827297*^9, 
   3.958607698828539*^9}, {3.958612213041195*^9, 3.958612216274966*^9}, {
   3.958612253451191*^9, 3.958612267999516*^9}, 3.958966769871513*^9, 
   3.9590495593746157`*^9},ExpressionUUID->"f11abd4a-7f9e-4051-9093-\
576930db967c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permuteState", "[", 
    RowBox[{"state_List", ",", "cycles_Cycles"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"permList", ",", "mat"}], "}"}], ",", 
     RowBox[{
      RowBox[{"permList", "=", 
       RowBox[{"PermutationList", "[", 
        RowBox[{"cycles", ",", "4"}], "]"}]}], ";", "\n", 
      RowBox[{"mat", "=", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"state", ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"Flatten", "[", 
       RowBox[{"mat", "[", 
        RowBox[{"[", 
         RowBox[{"permList", ",", "permList"}], "]"}], "]"}], "]"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"vertices", "=", 
   RowBox[{"KroneckerProduct", "@@@", 
    RowBox[{"Tuples", "[", 
     RowBox[{"SpekkensStates", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"DeleteDuplicates", "@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", "=", 
           RowBox[{"permuteState", "[", 
            RowBox[{"s", ",", "perm"}], "]"}]}], "}"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"s", "===", "t"}], ",", "Nothing", ",", 
           RowBox[{"UndirectedEdge", "[", 
            RowBox[{"s", ",", "t"}], "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "vertices"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"perm", ",", "SpekkensPermutations"}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"graph", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"vertices", ",", "edges", ",", 
     RowBox[{"VertexLabels", "->", "None"}], ",", 
     RowBox[{"EdgeStyle", "->", 
      RowBox[{"GrayLevel", "[", "0.7", "]"}]}], ",", 
     RowBox[{"GraphLayout", "->", "\"\<SpringEmbedding\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"components", "=", 
   RowBox[{"ConnectedComponents", "[", "graph", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getComponent", "[", "v_", "]"}], ":=", 
   RowBox[{"First", "@", 
    RowBox[{"Select", "[", 
     RowBox[{"components", ",", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"#", ",", "v"}], "]"}], "&"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"currentComp", "=", 
     RowBox[{"{", "}"}]}], "}"}], ",", 
   RowBox[{"Graph", "[", 
    RowBox[{"graph", ",", 
     RowBox[{"GraphHighlight", "->", "currentComp"}], ",", 
     RowBox[{"GraphHighlightStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
        RowBox[{"Glow", "[", "Yellow", "]"}]}], "}"}]}], ",", 
     RowBox[{"VertexSize", "->", "0.15"}], ",", 
     RowBox[{"ImageSize", "->", "Large"}], ",", 
     RowBox[{"VertexShapeFunction", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"EventHandler", "[", 
         RowBox[{
          RowBox[{"Inset", "[", 
           RowBox[{
            RowBox[{"ArrayPlot", "[", 
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{"#2", ",", "4"}], "]"}], ",", 
              RowBox[{"Mesh", "->", "True"}], ",", 
              RowBox[{"ImageSize", "->", "28"}], ",", 
              RowBox[{"Frame", "->", "False"}], ",", 
              RowBox[{"PlotRangePadding", "->", "0"}]}], "]"}], ",", "#1", 
            ",", 
            RowBox[{"{", 
             RowBox[{"Center", ",", "Center"}], "}"}], ",", 
            RowBox[{"Scaled", "[", "0.05", "]"}]}], "]"}], ",", 
          RowBox[{"\"\<MouseClicked\>\"", ":>", 
           RowBox[{"(", 
            RowBox[{"currentComp", "=", 
             RowBox[{"getComponent", "[", "#2", "]"}]}], ")"}]}]}], "]"}], 
        "&"}], ")"}]}], ",", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Spekkens Toy Model State-Space Explorer\\nClick on any 4\[Times]4 \
tile to highlight its connected component\>\"", ",", "16", ",", "Bold"}], 
       "]"}]}], ",", 
     RowBox[{"Background", "->", "Transparent"}]}], "]"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.959040454946534*^9, 3.959040454948189*^9}, {
  3.95904957410104*^9, 3.9590495896189528`*^9}},
 CellLabel->
  "In[3084]:=",ExpressionUUID->"86d3f621-dca0-495c-a5e6-9fdb885d8286"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`currentComp$$ = {}}, 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{{{1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 0,
         1, 1}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{1, 0, 1, 0}, {1, 
        0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 1, 0, 1}, {0, 1, 0, 1}, {
        0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 
        0}, {0, 0, 0, 0}}, {{1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 
        0, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 0}}, {{0,
         0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 1}}, {{0, 0, 0, 0}, {
        0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 
        0}, {0, 1, 0, 1}, {0, 1, 0, 1}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 
        1, 0}, {0, 1, 1, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 
        0, 0, 1}}, {{1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 
        0}}, {{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 0}}, {{1, 0,
         1, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}}, {{0, 1, 0, 1}, {0, 
        0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0, 0}}, {{0, 1, 1, 0}, {0, 0, 0, 0}, {
        0, 1, 1, 0}, {0, 0, 0, 0}}, {{1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 
        1}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 
        0, 0}}, {{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 1}}, {{0,
         0, 0, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}}, {{0, 0, 0, 0}, {
        0, 1, 0, 1}, {0, 0, 0, 0}, {0, 1, 0, 1}}, {{0, 0, 0, 0}, {0, 1, 1, 
        0}, {0, 0, 0, 0}, {0, 1, 1, 0}}, {{0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 
        0, 0}, {1, 0, 0, 1}}, {{0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 0}, {0, 
        0, 0, 0}}, {{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 
        0}}, {{0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}}, {{0, 0,
         0, 0}, {0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {0, 
        1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}}, {{0, 0, 0, 0}, {1, 0, 0, 1}, {
        1, 0, 0, 1}, {0, 0, 0, 0}}, {{1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 
        0}, {1, 1, 0, 0}}, {{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 
        1, 1}}, {{1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}}, {{0,
         1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}}, {{0, 1, 1, 0}, {
        0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}}, {{1, 0, 0, 1}, {0, 0, 0, 
        0}, {0, 0, 0, 0}, {1, 0, 0, 1}}, {1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1}, {0, 0, 
        1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1,
         1, 0, 0, 1, 1, 0, 0}, {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
        0}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 
        0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
         0, 1, 0, 1}, {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0,
         0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 
        1, 0, 0, 1, 1, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1,
         0}, {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1,
         1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 
        1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}, {1, 
        0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 1,
         0, 0, 0, 0, 0, 1, 0, 1}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 
        0, 0}, {0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0}, {0, 1, 1, 0, 
        0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0,
         0, 1, 0, 0, 1}, {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}, {0,
         0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}, {0, 0, 0, 0, 1, 1, 0, 
        0, 1, 1, 0, 0, 0, 0, 0, 0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         0, 0}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}, {0, 0, 0, 0,
         0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 
        1, 0, 0, 0, 0, 0}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}, {
        1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}, {0, 0, 0, 0, 0, 1, 0,
         1, 0, 1, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 
        0, 0, 0}, {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1}, {0, 0, 0, 
        0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 1, 1, 0}}, {
       Null, {{1, 37}, {1, 38}, {2, 39}, {2, 40}, {3, 41}, {3, 42}, {3, 43}, {
        3, 44}, {4, 42}, {4, 41}, {4, 44}, {4, 43}, {5, 45}, {5, 46}, {5, 
        47}, {5, 48}, {6, 46}, {6, 45}, {6, 48}, {6, 47}, {7, 40}, {7, 39}, {
        8, 38}, {8, 37}, {9, 43}, {9, 44}, {9, 41}, {9, 42}, {10, 44}, {10, 
        43}, {10, 42}, {10, 41}, {11, 48}, {11, 47}, {11, 46}, {11, 45}, {12, 
        47}, {12, 48}, {12, 45}, {12, 46}, {13, 49}, {13, 50}, {13, 51}, {13, 
        52}, {14, 51}, {14, 52}, {14, 49}, {14, 50}, {15, 53}, {15, 54}, {16, 
        55}, {16, 56}, {17, 57}, {17, 58}, {17, 59}, {17, 60}, {18, 59}, {18, 
        60}, {18, 57}, {18, 58}, {19, 50}, {19, 49}, {19, 52}, {19, 51}, {20, 
        52}, {20, 51}, {20, 50}, {20, 49}, {21, 56}, {21, 55}, {22, 54}, {22, 
        53}, {23, 60}, {23, 59}, {23, 58}, {23, 57}, {24, 58}, {24, 57}, {24, 
        60}, {24, 59}, {25, 61}, {25, 62}, {25, 63}, {25, 64}, {26, 64}, {26, 
        63}, {26, 62}, {26, 61}, {27, 65}, {27, 66}, {27, 67}, {27, 68}, {28, 
        68}, {28, 67}, {28, 66}, {28, 65}, {29, 69}, {29, 70}, {30, 71}, {30, 
        72}, {31, 62}, {31, 61}, {31, 64}, {31, 63}, {32, 63}, {32, 64}, {32, 
        61}, {32, 62}, {33, 67}, {33, 68}, {33, 65}, {33, 66}, {34, 66}, {34, 
        65}, {34, 68}, {34, 67}, {35, 72}, {35, 71}, {36, 70}, {36, 69}}}, {
       Background -> GrayLevel[0, 0], EdgeStyle -> {
          GrayLevel[0.7]}, GraphHighlightStyle -> {
          Glow[
           RGBColor[1, 1, 0]]}, 
        GraphLayout -> {
         "Dimension" -> 2, "VertexLayout" -> "SpringEmbedding"}, ImageSize -> 
        Large, PlotLabel -> 
        Style["Spekkens Toy Model State-Space Explorer\nClick on any \
4\[Times]4 tile to highlight its connected component", 16, Bold], 
        VertexLabels -> {None}, VertexShapeFunction -> {EventHandler[
           Inset[
            ArrayPlot[
             Partition[#2, 4], Mesh -> True, ImageSize -> 28, Frame -> False, 
             PlotRangePadding -> 0], #, {Center, Center}, 
            Scaled[0.05]], 
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[#2])]& }, VertexSize -> {0.15}}]]}, 
     TagBox[GraphicsGroupBox[{
        {GrayLevel[0.7], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[CompressedData["
1:eJxtln1IlWcYh092Oh600nPyk0KsReVolY6iOdv79AFCTi3DzBxLjNWYkyGV
SSUWEcNKLAgqizArLdNK+sRp7zE3a+Vqxw5t7o9sY4WZnWWZ6Qw2oW6L6/GP
96+Ll+t579/93O89Meu7lK9GWiyW/MHH5+0zd3vF7PqqQBUVuSki906Ia/2L
oirv6UCVc6m6uTw33EU+pjLpbrzbrqZXDpTvHeSV9rYU65ZgdcAzv7Dmg3/N
v/Prr88pCFaeEFtg7HIfjff+3mbr+sShUvqO3Qgd5FF5YXH/NNiVf/CD8LsJ
Aa6Q0uIbaW2j1eS0z58legM0XrH2ZGfENn+VUFibnLY/SOPupcURc7+xqhUx
y0fFTNXfv1B37WrqBKuylbennckOcmWuP7SsceRY9dr7X014iVPzk9NPTj85
/R+lF113qG7jR/9zu1c/bDVtR9c9+Cuv39gzwali+38zyafEnZqc29xr+N6L
9gYU9mm8L/JRWHz0n8as3syOlS63xv2KNn68+UW70ZPZOfbbX1+ZpaklvRdv
DRg392WvDf/ymeYnp5+cfnL667NnFS/91KFiW5KvrBumf8jZPwdaBtqdHrty
Hmmozhqmf8nZv+kdqy52p/qo3WsMo/mxQ8ufnPmTM39y5n/nQtPm28d8Vcur
pPORO8dpfnL6yeknpz/mTU5G2KPWFfv3PtHyJ2f+5MyfnPk/rzaLy0K9ht+V
yi2zF/dofnL6yeknp1/uh8wH8Uv9ycUv9ScXv9SfXPxSf7kfMh/oJ6efnH5y
+mU+H6+t/2zHE1+X3L/p9yeWdMwco3G5f1WmGd/8Hi+I67p/MMsx9H5ja8T3
t6xBGpf3tzblrK6zvqvfAv8ffjI8lqHv/yJx6uG6vBEal+//pWdewvjLfhqX
798zLbr2yFmLxuX7F8WWZvy8ym+oPjM8f/iWVdg0Pzn95PST0y/3Q+YD8ydn
/uTMn5z5y/2Q+UA/Of3k9JPTL/N9Td3MnF3D9A85+0f4hpqFGV8P07/k7F+p
z5Km9A/7M0Zp+ZMzf3LmT878pT63H+Y7zxy2a35y+snpJ6df9iPZD+T/I/OX
XP4/Mn/J5f8j85dc/j8yf2U/kv2AfnL6yeknp1/OJ/NB/FJ/cvFL/cnFL/Un
F7/UX84n84F+cvrJ6Senf8nroM6N+S8N2e8XNZQ3zC94acj+RP62rgb3/6rQ
KOuCRvfQ/tYz79TCGc+fmuRy/7qaIqec6H5qyn4k+wHzJ2f+5MyfnPnLfiT7
Af3k9JPTT06/nE/mA/MnZ/7kzJ+c+cv5ZD7QT04/Of3k9Mt8lnqxf8jZPzsn
3Uw8f89tyH7P/iVn//4P5mpOXA==
          "], 0.03698110657530023]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{0, 0, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {4.166733587539788, -5.7025799524344984}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 0, 0}, {1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {5.37111024331731, -1.6337103816015652}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{0, 1, 0, 1}, {0, 1, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {3.092741460320003, -3.9120237370976887}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 0, 1, 0}, {1, 0, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {3.7518335849586464, -4.6397463977298194}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 0, 0, 1}, {1, 0, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            
            PlotRangePadding->
             0], {1.0781419557948297, -0.29525078524619297}, {Center, Center},
            Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{0, 1, 1, 0}, {0, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {1.7372340804334727, -1.0229734458783235}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 1}, {0, 0, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {4.307928281860708, -1.6336552810360119}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 0, 
              0}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {3.103551626083185, -5.7025248518689455}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1,
                1}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 0, 1}, {0, 1, 0, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {2.2919649286168746, -4.478295315022148}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 1, 0}, {1, 0, 1, 
              0}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {2.9549836796855753, -4.884890367216894}, {
           Center, Center}, Scaled[0.05]],
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0,
                1}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 0, 1}, {1, 0, 0, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            
            PlotRangePadding->
             0], {0.27736542409170106, -0.8615223631706526}, {Center, Center},
            Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 1, 0}, {0, 1, 1, 
              0}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {0.9403841751604018, -1.2681174153653978}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0,
                1}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{0, 0, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {1.0781419557948297, -3.9120237370976887}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {1.7372340804334727, -4.6397463977298194}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{0, 1, 0, 1}, {1, 1, 1, 1}, {0, 1, 0, 1}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {5.37111024331731, -2.9900002385458766}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{1, 0, 1, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 0, 1, 0}, {1, 1, 1, 1}, {1, 0, 1, 0}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {5.37111024331731, -4.346290095490187}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 0, 0, 1}, {1, 1, 1, 1}, {1, 0, 0, 1}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {1.0781419557948297, -2.103637261171941}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{0, 1, 1, 0}, {1, 1, 1, 1}, {0, 1, 1, 0}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {1.7372340804334727, -2.8313599218040713}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {0.27736542409170106, -4.478295315022148}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 0, 
              0}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {0.9403841751604018, -4.884890367216894}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1,
                1}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {0, 1, 0, 1}, {1, 1, 1, 1}, {0, 1, 0, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {4.307928281860708, -4.346234994924634}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {1, 0, 1,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {1, 0, 1, 0}, {1, 1, 1, 1}, {1, 0, 1, 
              0}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {4.307928281860708, -2.9899451379803232}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0, 1, 0,
                1}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {1, 0, 0, 1}, {1, 1, 1, 1}, {1, 0, 0, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            
            PlotRangePadding->
             0], {0.27736542409170106, -2.6699088390964008}, {Center, Center},
            Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {0, 1, 1, 0}, {1, 1, 1, 1}, {0, 1, 1, 
              0}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {0.9403841751604018, -3.0765038912911455}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0,
                1}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {0, 0, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {3.092741460320003, -0.29525078524619297}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 0, 0}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {3.7518335849586464, -1.0229734458783235}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {0, 1, 0, 1}, {0, 1, 0, 1}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {3.092741460320003, -2.103637261171941}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {1, 0, 1, 0}, {1, 0, 1, 0}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {3.7518335849586464, -2.8313599218040713}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {1.3419112342669628, -5.7025799524344984}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 1, 1}, {0, 1, 1, 0}, {0, 1, 1, 0}, {1, 1, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {5.37111024331731, -0.2774205246572544}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{0, 0, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {2.2919649286168746, -0.8615223631706526}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 0, 
              0}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {2.9549836796855753, -1.2681174153653978}, {
           Center, Center}, Scaled[0.05]],
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1,
                1}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{0, 1, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 0, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {2.2919649286168746, -2.6699088390964008}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 0, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 1, 
              0}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {2.9549836796855753, -3.0765038912911455}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0,
                1}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{1, 0, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 0, 
              1}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {4.307928281860708, -0.27736542409170095}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1,
                0}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{{0, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 1, 
              0}}}, {{0, 0}, {4, 1}}, {0, 1}], {
              {GrayLevel[0.5], 
               StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {0.27872927281036, -5.7025248518689455}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{{1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0,
                1}}]), Method -> "Preemptive", PassEventsDown -> Automatic, 
            PassEventsUp -> True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 1}, {0, 0, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {4.167902626676426, -6.360972503940144}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 0, 0}, {1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {3.102187777364526, -6.360907122239762}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 0, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {5.372279282453949, -2.292102933107211}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{0, 0, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {4.306564433142048, -2.292037551406829}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 0, 1}, {0, 1, 0, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {3.6061244648183317, -3.9913595937058677}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 1, 0}, {1, 0, 1, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {3.438047250046071, -5.147794003685543}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{0, 1, 0, 1}, {0, 1, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {2.551864851653797, -3.8941383759431965}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 0, 1, 0}, {1, 0, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {2.5138354209114713, -5.105157254242391}, {
           Center, Center}, Scaled[0.05]],
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 0, 1}, {1, 0, 0, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {1.591524960293158, -0.3745866418543722}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 1, 0}, {0, 1, 1, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {1.4234477455208974, -1.531021051834047}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{0, 1, 1, 0}, {0, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            
            PlotRangePadding->
             0], {0.5372653471286233, -0.27736542409170095}, {Center, Center},
            Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 0, 0, 1}, {1, 0, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {0.4992359163862977, -1.4883843023908954}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {1.591524960293158, -3.9913595937058677}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{0, 0, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {1.4234477455208974, -5.147794003685543}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 0, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {0.5372653471286233, -3.8941383759431965}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {0.4992359163862977, -5.105157254242391}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {0, 1, 0, 1}, {1, 1, 1, 1}, {0, 1, 0, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {5.372279282453949, -3.6483927900515223}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 0, 1, 0}, {1, 1, 1, 1}, {1, 0, 1, 0}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {4.306564433142048, -3.6483274083511406}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 0, 1, 0}, {1, 1, 1, 1}, {1, 0, 1, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {5.372279282453949, -5.004682646995833}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{0, 1, 0, 1}, {1, 1, 1, 1}, {0, 1, 0, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {4.306564433142048, -5.004617265295451}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 0, 0, 1}, {1, 1, 1, 1}, {1, 0, 0, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {1.591524960293158, -2.1829731177801204}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{0, 1, 1, 0}, {1, 1, 1, 1}, {0, 1, 1, 0}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {1.4234477455208974, -3.339407527759795}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {0, 1, 1, 0}, {1, 1, 1, 1}, {0, 1, 1, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {0.5372653471286233, -2.085751900017449}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 0, 0, 1}, {1, 1, 1, 1}, {1, 0, 0, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {0.4992359163862977, -3.2967707783166436}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {0, 0, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {3.6061244648183317, -0.3745866418543722}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{0, 0, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {3.438047250046071, -1.531021051834047}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 0, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {2.551864851653797, -0.27736542409170095}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 0, 0}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {2.5138354209114713, -1.4883843023908954}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {0, 1, 0, 1}, {0, 1, 0, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {3.6061244648183317, -2.1829731177801204}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 0, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 1, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {3.438047250046071, -3.339407527759795}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{0, 1, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 0, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {2.551864851653797, -2.085751900017449}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 0, 1, 0}, {1, 0, 1, 0}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {2.5138354209114713, -3.2967707783166436}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {1.3430802734036016, -6.360972503940144}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{0, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 1, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {0.27736542409170095, -6.360907122239762}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {0, 1, 1, 0}, {0, 1, 1, 0}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {5.372279282453949, -0.9358130761629}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         TagBox[InsetBox[
           
           GraphicsBox[{
             RasterBox[{{1, 0, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 0, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            BaseStyle->{},
            Frame->False,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->28,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotRangePadding->0], {4.306564433142048, -0.9357476944625183}, {
           Center, Center}, Scaled[0.05]],
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`currentComp$9715296 = \
$CellContext`getComponent[{0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0}]), 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]]}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   Background->GrayLevel[0, 0],
   BaseStyle->{},
   DefaultBaseStyle->"NetworkGraphics",
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->Large,
   PlotLabel->FormBox[
     StyleBox[
     "\"Spekkens Toy Model State-Space Explorer\\nClick on any 4\[Times]4 \
tile to highlight its connected component\"", 16, Bold, StripOnInput -> 
      False], TraditionalForm]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.9590404553735523`*^9, 3.959041307890863*^9, {3.959042767450212*^9, 
   3.959042780939753*^9}, {3.9590495844436293`*^9, 3.959049590072949*^9}},
 CellLabel->
  "Out[3092]=",ExpressionUUID->"3079c260-a027-4652-b102-415e01332b63"]
}, Open  ]]
}, Open  ]],

Cell["\<\
The image presents an interactive \[OpenCurlyDoubleQuote]Spekkens Toy Model \
State-Space Explorer,\[CloseCurlyDoubleQuote] which visualizes the \
interconnectedness of various quantum-like states within the Spekkens model. \
It displays a large graph where each node is a 4\[Times]4 binary grid \
representing a \[OpenCurlyDoubleQuote]Spekkens state.\[CloseCurlyDoubleQuote] \
These states are arranged, and connected by gray lines, illustrating the \
relationships between them. The user is prompted to \
\[OpenCurlyDoubleQuote]Click on any 4\[Times]4 tile to highlight its \
connected component,\[CloseCurlyDoubleQuote] implying that clicking a state \
will visually emphasize all states reachable from it within the defined \
permutation rules.\
\>", "Text",
 CellFrame->{{0, 0}, {3, 0}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958612167097205*^9, 3.958612281572702*^9}, 
   3.958966771900015*^9, {3.959049594977242*^9, 
   3.959049595475213*^9}},ExpressionUUID->"3c2f3f5d-d66b-4309-bf4a-\
d852671fa582"],

Cell["\<\
The underlying Mathematica code constructs this complex graph. It begins by \
defining the SpekkensStates (fundamental binary vectors) and \
SpekkensPermutations (the allowed transformations). The permuteState function \
applies these permutations to any given 4\[Times]4 state. The vertices of the \
graph are generated by taking Kronecker products of all possible pairs of \
SpekkensStates, resulting in a comprehensive set of composite states. The \
edges are then established between any two states that can be transformed \
into one another by applying one of the SpekkensPermutations. The Graph \
object is created with these vertices and edges, utilizing a \
\[OpenCurlyDoubleQuote]SpringEmbedding\[CloseCurlyDoubleQuote] layout to \
visually arrange the nodes and minimize overlaps, aiming for a clear \
representation of connectivity. The ConnectedComponents function is used to \
identify sets of states that are all mutually reachable from each other. The \
DynamicModule allows for user interaction: when a state is clicked, its \
entire connected component (all states reachable from it) is highlighted in \
yellow with red edges, providing an intuitive way to explore the structure of \
the state space.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958612167097205*^9, 3.958612247996469*^9}, {
   3.958612297339251*^9, 3.958612350675898*^9}, {3.95883899439523*^9, 
   3.958839009092333*^9}, 3.958966774721836*^9, {3.959049597980275*^9, 
   3.959049599400126*^9}},ExpressionUUID->"f5c9c3b6-52ab-4952-8860-\
76fccf952f12"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"selectedState", "=", 
      RowBox[{"First", "[", "SpekkensStates", "]"}]}], ",", "transitionGraph",
      ",", "transitionRules", ",", "vertexCoords"}], "}"}], ",", 
   RowBox[{
    RowBox[{"transitionRules", "=", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"DirectedEdge", "[", 
         RowBox[{"state", ",", 
          RowBox[{"Permute", "[", 
           RowBox[{"state", ",", "perm"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"state", ",", "SpekkensStates"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"perm", ",", "SpekkensPermutations"}], "}"}]}], "]"}]}]}], 
    ";", "\n", 
    RowBox[{"vertexCoords", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{"SpekkensStates", "->", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "0", ",", 
           RowBox[{
            RowBox[{"2", "\[Pi]"}], "-", 
            RowBox[{"2", 
             RowBox[{"\[Pi]", "/", "6"}]}]}], ",", 
           RowBox[{"2", 
            RowBox[{"\[Pi]", "/", "6"}]}]}], "}"}]}], "]"}]}], "]"}]}], ";", 
    "\n", 
    RowBox[{"transitionGraph", "=", 
     RowBox[{"Graph", "[", 
      RowBox[{"SpekkensStates", ",", "transitionRules", ",", 
       RowBox[{"VertexCoordinates", "->", "vertexCoords"}], ",", 
       RowBox[{"VertexShapeFunction", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#2", "===", "selectedState"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "Yellow", ",", 
              RowBox[{"Disk", "[", 
               RowBox[{"#1", ",", "0.15"}], "]"}], ",", "Black"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "LightBlue", ",", 
              
              RowBox[{"Disk", "[", 
               RowBox[{"#1", ",", "0.13"}], "]"}]}], "}"}]}], "]"}], "&"}], 
         ")"}]}], ",", 
       RowBox[{"VertexSize", "->", "0.2"}], ",", 
       RowBox[{"EdgeStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Gray", ",", 
          RowBox[{"Thickness", "[", "0.003", "]"}]}], "]"}]}], ",", 
       RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
       RowBox[{"ImageSize", "->", "600"}], ",", 
       RowBox[{"PlotLabel", "->", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Spekkens Toy Model State Transitions\>\"", ",", "16", ",", 
          "Bold"}], "]"}]}]}], "]"}]}], ";", "\n", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dynamic", "@", 
           RowBox[{"ArrayPlot", "[", 
            RowBox[{
             RowBox[{"Partition", "[", 
              RowBox[{"selectedState", ",", "2"}], "]"}], ",", 
             RowBox[{"Mesh", "->", "All"}], ",", 
             RowBox[{"MeshStyle", "->", "Thick"}], ",", 
             RowBox[{"ImageSize", "->", "100"}], ",", 
             RowBox[{"PlotLabel", "->", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Selected State\>\"", ",", "10"}], "]"}]}], ",", 
             RowBox[{"Epilog", "->", 
              RowBox[{"MapIndexed", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "14"}], "]"}], ",", 
                   RowBox[{"#2", "-", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "0.5"}], "}"}]}]}], "]"}], "&"}], ",", 
                RowBox[{"Partition", "[", 
                 RowBox[{"selectedState", ",", "2"}], "]"}], ",", 
                RowBox[{"{", "2", "}"}]}], "]"}]}]}], "]"}]}], ",", 
          RowBox[{"Spacer", "[", "20", "]"}], ",", 
          RowBox[{"Dynamic", "@", "transitionGraph"}]}], "}"}], "]"}], ",", 
       RowBox[{"Button", "[", 
        RowBox[{"\"\<Reset Selection\>\"", ",", 
         RowBox[{"selectedState", "=", 
          RowBox[{"First", "[", "SpekkensStates", "]"}]}], ",", 
         RowBox[{"ImageSize", "->", "200"}]}], "]"}]}], "}"}], "]"}]}], ",", 
   RowBox[{"Initialization", ":>", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"transitionGraph", ",", 
        RowBox[{"VertexShapeFunction", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"EventHandler", "[", 
            RowBox[{
             RowBox[{"Dynamic", "@", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"#2", "===", "selectedState"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "Yellow", ",", 
                  RowBox[{"Disk", "[", 
                   RowBox[{"#1", ",", "0.15"}], "]"}], ",", "Black"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "LightBlue", 
                  ",", 
                  RowBox[{"Disk", "[", 
                   RowBox[{"#1", ",", "0.13"}], "]"}]}], "}"}]}], "]"}]}], 
             ",", 
             RowBox[{"\"\<MouseClicked\>\"", ":>", 
              RowBox[{"(", 
               RowBox[{"selectedState", "=", "#2"}], ")"}]}]}], "]"}], "&"}], 
          ")"}]}]}], "]"}], ";"}], ")"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958972995902693*^9, 3.958972995904272*^9}, 
   3.959049611840531*^9, {3.9590510876480503`*^9, 3.959051087707296*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"1cd94c48-d82e-4961-a6f9-9ee2e774798b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QuwXWV9/39EUSul01FrsWo7tpXacdSWOtbSOm1BikDiTH9/21rHWksR
NIKUpCGcI9Z7YQQ1ykXQwD6U5KiDWkE9sWqsVhvUYwFPUKEi4hEw3K9JuCTd
/y/n6Xn6ZN32uj7X92v2MGGffVl73Z7P+j7PWuvZx5z0/47bd5999lnzRPnP
//u7dX+6evXfTf1/vyj/8xdvXvPG49/8+mOPfPM/vv74169+yTGPlSfvkte+
X/7x6L/HAAAAAAAAAAAAAAAAAAAAAADYdbnhuuuuG+hbrlvW+gUOXTeJzQmo
/6cuXzTEW+ysaS04X7511JkYryYYAICOJDAcV0Se7/271CefddZZZS+QP6nX
9P7VHZXNJa3iRw0xAeafJJOYf+oeUZr+Ij0B1etM/TVNnmkxP1X6bfqu6mmz
tnxrKpyYTOb3aoIBAOgiE3J0UKwTPFqY2IaSVGtOgJlMMkvNz6Raf01Tv7TR
/KwZlSs4X741ZSZG/3CSKgAgSjow5KNCl3a/zMQ21Nukauqei1rIRCnzq4NI
qvXXtBZBq98l4mT51pTp2dcz0Fzo9P4DAKJRlgxVVDDTQqZ9VB2Oha1hxSjE
fAjJtKr56SlsdqvHOtac1NYDJuskmYoPL/xFE9OFGeoKq2p61lX80rLPz7yg
LCtW/KL6STXzfGZNM39OZoZUzFJz5pStKvXDW/XP0Z+Tn5Kmq2Xhy+p8iHpe
/mvmf/3isnWp/idXv6z1hgMAQFO6iVfBoOxlZtt93N4yxZzjcswXZCJQvs6W
yTOXF9Xc8tNQ+NeKSS2czuNqVyMnJpn8J5upL/+M/uEVhcT878p8XWFSzc+E
/IK+PFetzU9h9TyvGd3LJqBi1uVXjPzyqljQ1ZNdpuLnFK5dE6ew7I35b6n+
kPHeK0/+xWUHGmam1TIv0BMzcWBGi1kKAEBr+fYrnyUyESLTnOmXmcmz8AVm
E1mYQs2kWh2ZVEknn3XNxrTsNeYzZZNaoTqYZeZkxRTmP7BOUs18u464l+c6
gs1ZYU5J2WsysyJf58y8Rv+iOkl1XGNNywQq/dey5aW+Lj/Zdd5VoU5Szcyl
id9VsVoWHrjV3ILMD9E/PPOx5ieXrZN1NnBztqhqav1ZCgBAa4X1luNKSi5l
oXFc1L7nn9EfUhhTx3s31vlvHBe1wpn2tPCNmdfkC5iqT7N7TbU6futklXlN
Rcd9/pP1z6lOqmb2qJi8itdkElThop84QzLzbeKaNi4vCZofnnlNxbqXXw16
SaqZaZ44hfVXy+P2PoS5vPK8/vzhScVrKtbJ6rUlU7vOD3ionp8AAHSnmtqy
jr+yop/5ZL6dHecazXxKyUxGPslkJjLf5mZSU2F7Wjao4LjljNdouF1Fkimc
CWX5sCIK5pk/8/Lloap6SlSkMX+4+aeyKayzWKsPUjLfVSe0VK9p+ZmTnw/5
1JefgLJYVbjW5aew7OeUHWFNnMK+Vss6H1u4dlWvk3WWcr5EzyBVAIB9ZuaZ
GEXM1q2wXJZp/vJ/KqupFr4g3/dqqqj8ZBrrsqGk3Wuqmd9b9rwZmcoiZUY+
qR5njATIJ9XC+TDeu35bZ7GWjek139goqZqzMb+mlc3DwkVfJ6kWmjhhZT+n
bK5OnMI6q+W4aP3PrJZ1PjbzmsL5OW5+PFL2G6mpAgAGoqtbE1vkRkn18iLm
64/b+3Ka5gdmBhxmXmCWqvJfUT+pmj8/0+zWnG9lbXTh5+RjQOEJLPWTaiY9
6lGL5ueUVf8Ka6p1kmrFPJ+YVOuvaeOiZJVZtfSCq5NUK9bGMi2S6sQp7Lha
Xl5Sja+fVKvXyereivxY4oqSOAAAPSpsxca5kZOFDVmmsTOjlPma/NdlXm9+
ZnXFr2wyCnt4qyOB+a6m54Y07f0vrJrqJFOn63+cm71mTmiUVDNL3PyEzNRm
ok7mczLpZeLcq7mm5SepsNzXKKkWTnOFpkm1zhT2tVpmvqhOUq2zTtZMqqoM
bk5q/ocDANAjs0p53bLLjT4+9TKziKebqkzGyGeD/DMT29mykXv5qmwm2OTf
UhEJMm8pe1eZOklGd9qaM7MwUdf83kxSzX9sWXGyeonks5B+ps5iqllTzc+Z
sjVtnKvoVqTQiqQ6rpd4C7VOqhVT2NdqWfaxFT+8zjpZJ6nW+S4AAHp3XLl8
MTOvcGDbcSX9+5m35NvHfP0n8yFlX5EPCRWRIPMh+WxWrTqYZSJofgoL5/zE
L22RVMumpGyRlb3MXPqF87xOUh3XW9MyL1PPm9+ua5Xm3Misn5fvfY2FzGRP
PCho0fs/cQr7Wi0zz2R++HUlV6mauE7WSaqZ1aDRLAUAoIv8uLjMkEKzITNb
vYqmXL+gol9ynCvUVIxNNVvVimFyNbtZ8213/bF2E4NZzQ/PV94qZJJqvkJY
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
W9/Kim41IGWWLzw1bh5xGQAAAAOxUFBtPdKM8/0BKN0vPNU0rDZ9FwMAAKB3
Tc+lalEabd1zx/n+AEyWxwBQVkULe/bsueWWW773ve/dcccd1a+899577777
7iGmYffu3T/72c/kv62nDfBHo+TZrqDasd+f4akAFPtjABq9i3M/cfPNN592
2mnHLXvve98rcbTsxRdeeOH5559f/8NvuummD33oQ3VeKWugfLuE1TrTVv2x
jzzyyIYNG2688cb60wn0qOl+tUV0bN19r4enss8HoFkeA9D069SOi26gZF1w
wQVTU1M//vGPH3zwwWuuueZNb3rTpk2byl7cNKl+9atfPeWUU+q8sjCplk1b
9cfef//98lE/+tGP6k8n0KNGXf8tygWtu++7VE4AxE3tHLpctKrF19XcFzEA
IHHvete7zj77bP2/X/nKVz772c+qf2/duvX973//6aef/q//+q8PP/zw2Eiq
u3btuvTSS//5n//5Ax/4wHe+8x31+oceeujTn/70GWecsWHDhu9///vSnr7t
bW9btWrVeeedN14qhErylK/76Ec/qhvl66677sMf/rC8RT4tn1QLpy3zsVdd
dZX84x3veMdZZ5115ZVXqolUBVgVVvO/AhhUoxppi4Jqu+57LksFoILlMQBN
wyedQSmTZktynSQ9CXLXXnvtI488op7/+te/fvzxx8uKIeFw9erVEv/GRlJd
v379KaecsnnzZnlGXnb11VfLk+ecc87atWs///nPj0ajE0444e67777oootO
OumkK664Qv594oknnnnmmfJ17373u9esWbNz507JpfKkfNTnPve5f/iHf8gn
1cJpe+CBB/THSvqVF1x88cXf+MY33ve+973xjW+Uv/7nf/6nPClvufPOOwt/
BTCcRjXSFgXVjv3+xFQAZbpfTqRRWG30FgYAJO7KK68899xzJTRKwJOoef31
18uT73znOyX7PbDkS1/6kvxp165dKqmqnnpZbdRfJX9+8IMfVH3uX/va18ZL
p0d9+tOfvvHGG3U3vcTXN7zhDbfddpu8Xv4rr5RsKU++6U1vUnVOeWU+qZZN
m/5YSapf+MIX9uzZs2PHDvlqec3NN99s9v4X/gq7cxdpUXvsgQqq3fv9qUgA
qND6SsstOugbvaXRrhUxkUh56623qlql/Pvaa699xzveoUKgCoemn/70pyqp
ygqT+dNpp5123XXXyT9uueUW8/N1pJyZmcm85TOf+cyGDRvOOOMM9UpJmJmk
WjFt+mMl5cqqe+qpp8p7Tz75ZPmvZFczqRb+CjvzFmmqHz5bFFQ79vtTjgBQ
rcvuYtCyatNL/yEa9957r4S3b3/72/qZb33rW/LMAw88IPFPculDS+66667v
fe978g+VVG+44QZ5zZVXXqn++uMlkgDlSTUMQGzevPkHP/iBjpSXXnrpSSed
tHPnTvWWa6655s477/z0pz+9evXqPXv2yAsWFhYySbVi2vTHfvazn5UsunXr
VpnCH/7whyqImkm18FdYmbVIUaPw2TR20u8PwILWA1ZbvLFRWZUj7mSdeeaZ
kiG/9rWvLS4uSlx829ve9u53v1ue37hx45vf/Oarrrrq7rvvXr9+/Wmnnfbw
ww+rpCphT4Lie9/73ptuukkyqrxdgugjjzwisfD973+/NKMSLyUr/uQnP5EM
ecIJJ8gnS2qVZySa3nPPPV/84hePP/54SZLXXnutPCmZVt7ygQ98IN/7XzZt
+mPle9esWXPvEvUJkqJl8tTghF27dhX+CjczGgmof9TftKDautDBZakANNX6
XPsWgwfq79kYAJCsHTt2nHfeeW9605sk3b3hDW943/ved9ddd42XTlw655xz
VI/5e97zHlWilKT6kY98RP5x/fXXT09Py58kMcrbVaHyhz/8oeqIl/T4uc99
Tp655ZZbJCjKMxIUv/CFL6hvkZT7b//2b+rb5Un1AvkK+W+mMS2bNv2xt912
27ve9S7115mZmVWrVqmBsmeccYY8+eUvf7nwVwADqV+9bFrnbDd4jMtSAWhH
7TosjDWqn4q5VlXidu/eLakvX2/ctWvX/fffX/aue+65J/8WCaWqQ1955JFH
du7cqf4tz6uomfnqinsNlE2b+bHy9vxkSEbVk1H9K4C+1Kxeti6oNqqLclkq
AK3ZPH+z/hdx6A0ArdXv+m9aUG0XOImpALpo3SnTehB+zVeSVAGghZo753b3
Wm3a4cXwVADdtQurLeqxNV/PAIBw7QNbXC9q+KtmMmxUbWjX78/VUwH0pd1h
b9NIWf/1DAAIlOv4lhDXixqeqtn13zR5tujB5ywqAP3qMgBpoLIq+7fguI5v
CXG9qOGpmpXSRgXVFv3+XOQfQO/a7ViaHjXXLKsyACBQruNbQlwvanhKpcrq
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
57YlbDUAgMiYpUtP8qqfSQDQfCv4k1EBAHHzJK/S4CIg5ibjZHXN11HZagAA
EcvkVZuR1WxwiakIhav1NvO9bDIAgHSU5dUhImumKESDixBl1uGBju/kM+WL
zPP6qaMCAJKlomkmsvaVWvMBlYyK0OVX6e6RVaXT/CezvQAAoKi8mo+sqiEW
qiXdXm7bssIPoSiEmBQe35kbS8WWojcW9eLRaMT2AgBATbrKWtgQN0WDi7iV
RVY2FgAAhqbrP1uWVTe1uvSqakquJx+wJ7OxTNxSzH4K19MOAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA//M/QIBc
bzcAAGBAZqO/Z8luwHtqXSWyAgAQMR1QaegRKL0Csw4DABANXUF95JFHHnro
obvvvvuee+65//77d+zYsWvXrp3LdgDe0KulrKLyv/fdd5+stLLqygosq7Gu
srretgAAQCeqACWN+8MPPywN/b333iv/3r17t+vpApqRlVZWXYmsshrLyiz/
prgKAEDQdI//Qw89dMcdd+zcudP1FAFd7dq1S1ZmWaUZCQAAQNB0TL3zzjt3
7NjhenKAfsjKLKu0DquuJwcAADSm+/3vu+8+adZdTw7QJ1mlZcVmDAAAAIHS
BdXbb7+dgqon7r///uuvv17yVe+f/MADD1xxxRXpZDZZpWXFpqwKAECgpPne
vXv3zp07b7755kCb8gsuuOA1htNOO23z5s2uJ+pRN9xww6pVq37/93//N37j
N175yld+7GMfq/nGj3zkI/vss8+2bdt6n6TXv/718smXX35575/sJ1mlZcWW
1VtW8kBXbwAAUqa6/nfs2LG4uOh6Wlr6m7/5G0lfL1jynOc8Z58lxx577J49
e4b70n//93/ff//9P/nJT5a94Nvf/vaTn/zk/fbb72Uve5nE1Gc84xkyVWvW
rKnz4X0l1fxEXnbZZUcdddRPfvKTjp8cEFmxZfVWAwBcTwsAAGhGJ9Vw04sk
1cc97nH6f6+//vo//dM/laT3la98Zbgv/dKXviRfUVEmfc1rXvPYxz72O9/5
jvpfmcOHHnqoPPOzn/1s4of3lVQnTmQKZMUmqQIAECiVVB944IEf//jHrqel
pUxSFZ///Oclob3tbW/Tz3zrW9964xvf+Nu//dsrVqw477zzzNByyy23HHvs
sc9//vN/53d+5/jjj7/tttv0n26//fZ3vOMdhxxyyItf/OLp6Wl5pXr+zDPP
fOELXyhfIR8o+fMHP/hBfqqe85zn/OZv/qb5zPe///33ve99P/rRj/Qzo9Ho
z//8z5/73Of+/d///X/8x3/o5/NJteyV4o477nj729/+0pe+9HnPe95rX/va
a665pmIiP/nJT8q/zd944YUXvvKVrzzooINe9apXbdq0yZwt8spLL710amrq
4IMPfsELXvCP//iPIY5klhVbVm+SKgAAIVJJ9f777zcTVFjySfUTn/iEJLRz
zjlH/e/VV1/98z//809/+tMlyL3kJS+RP73lLW9Rf3rwwQd/5Vd+5Rd/8RfX
rFkjIXD//feXhKmGDezatUsy6uMf//hXvOIVkhKf+MQn/u7v/q5kHvnTJZdc
cvTRR8vnHHbYYRKAC0P+X/zFXzzmMY8566yz5HMKJ/v000+XT/i93/u9v/3b
v33mM58pn//Nb35T/SmTVCteKdFRfpH8/D/7sz+TwPkLv/AL8kuvuuqqsol8
//vfL8/oCZaIqwZOHHPMMRKD5d8f/OAH1Z9++MMfyv8eeOCBEmJf97rXyffK
/8rPab58HJMVW1ZvkioAACGKLKk+/PDDc3NzEiklVt14443qyYMPPvgZz3jG
zTffrP73Na95jfz1+uuvl39/8YtflH9/9KMfVX/63Oc+J6Hupptukn+fccYZ
8qdLL71U/ekzn/mM/K88qf53Yse6JD01NvWAAw5YsWLFmWeeqT5W/1Vy7F/+
5V+q+LR9+/ZnPetZMp3qr2ZSrX7le97zHnnlBRdcoP73mmuuecITniAzpGwi
zaR63XXXyb8lzapPltXgpS996b777itfMV5Oqs973vNk3ZD/lfQukV5ScZMl
4wWSKgAA4YojqUqm2neJhDr59+Mf/3iJcOqvO3fulGcOP/zwa5adf/758szH
P/7x8VKPvMpjn/jEJzKXkz3iiCPkT9cY5H9f8YpXqL/WGQJ61113nXvuuRL/
nvjEJ6op1AMSNm7cqBKy/vBDDz1UnnnwwQfHeyfV6leuXLnyaU97mvml9913
nyr8Fk6kmVQvueQS+bc5luCyyy6TZySuj5eT6vT0tP7r6173Opm96nsDQlIF
ACBccSRVSVCnLznuuOMkX51wwgn6r9/5znf2KfJP//RP6gUSXA888EB5Rj7k
j/7oj/QVrgrfpYeeNjpZSdKyhM9f+7Vfk7fIG+WZdevWFX6+GmVqJtXqVz77
2c+WaS773uqkesopp8i/VQVV+cEPfiDPyGwcLyfVD33oQ/qvakqCu9kuSRUA
gHDFkVR17/+ePXue//zn/9zP/Zy+6Natt94q+eqYY475yd7uvfde/QkyB7Zu
3frWt771l37plx772MeqEPiHf/iHBxxwQOZdeghBdVJ96KGHrrrqKvPEpfHS
2Uzylne+853y73POOUf+LalYf/KNN94o/929e/d476Ra/cpDDz1UAnDZnKlO
queee678+7/+67/0X7ds2SLPzM7OjkmqAADAA5El1fHyif96rKZ41rOe9aIX
vUjSo/pfCbHnn3/+ddddJ/+WPHnxxRfffffd6k8f//jH5b2XXHKJ/HvNmjWS
Wr/3ve+pP8mMGo1Gc3Nz6n9VqDv77LMLJ0li8JOe9KSXv/zl5pPyRfKWT3zi
E/Lvb37zm/Lvd73rXfqvX/3qV2Wq1H2pzKRa/UqVHnUPvvyQww8/XHfZ5yfS
TKrf/va35d/yCfqvqiL93//93+OIkuoNN9xAUgUAIFA6qUqD7npaWsqf+/8n
f/Inj3nMY/S1TFXwO+ywwyRqfvjDH/71X/91iZHq+rEq1v7xH//xpz71qcsv
v1wC7b777qsKpxLVnvrUpz7zmc8888wzP/axj73iFa+QV8rb1WdKFn3CE57w
W7/1W+edd94dd9yRnyqV+iQ3zszMXHbZZW95y1vk9U9+8pPvuusu+evu3buP
PPJI+a6TTjpJsqtkS/nroYceak6wSqrVr7zxxhsPPPDApz3taaeffvpHP/rR
Qw45RN4oX1c2kWZSlU8++uijZUadeOKJkqLV7av++q//Wr2XpAoAAJzT11MN
N6m+9rWv3W+//cxnvvWtb0mmetnLXqafkYQmgU2N8HzhC1/49a9/XT0vP3/9
+vVPecpT1J8OOuigL3/5y/pd3/zmN1/60pc+/vGPlz9JyMxco+ntb3/7AQcc
IH+64oor8lMlOfDUU0+VSKw+WQLhi1/8YrNwLfHp1a9+tfrqxz72sa961av0
KV2SOfcxrlJV8Upx5ZVXSjJXE/n0pz99w4YNFRP5gQ98YB/jKlU7dux4zWte
oz75l3/5l4899lhdeb7++uv3Ma70NV5OqsGdUSUrNlf+BwAgUPoeVfqaThG7
7bbb7rnnnsI/3XrrrebIVZPMnJ/97GeFOUeF/Ipv3LNnz7XXXivJWV3rKU8+
9qc//anOhxWqXykTefvttxf+aeJEyifrmxrER1ZskioAAIGS5nv37t07d+5c
XFxUV7wHoiHrtqzYsnrLP0iqAAAERyXVXbt23XzzzWV1PyBQDzzwwC233CKr
N0kVAIAQSfO9Z8+ehx566M4774y4CxhpklVaVmxZvWUlJ6kCABAifVLV4uJi
2VhNIDiyMssqLSs2g1QBAAiXLqtKy/7jH/+47JwjICCyGsvKLKs0BVUAAEKn
Rqs++OCD0r7fcMMNN910044dOx5++GHX0wU0IyutrLqyAstqLCuzrNKMUAUA
IAJqDIC07Pfee++tt9567bXX/uhHP7r55ptvu+2222+/Xf5765LtgDfUOqlW
UfmHBFRZaWXVlX/fd9//364dpEAIQ0EUvP89Z3AjCJNExdU0/ktoqDrDgzRJ
fonZuz8ATKO+AeRwP45jjNFa27atNsCyLN/bBx6jmkycSXRd1+SaaHvvCTgZ
e/QHgPnUT4C4rus8z33fxy0DoMGT9Fv1mXWaXBNt1WujAsDc6ooVXsRABQAA
AAAAAAAAAAAAAAAAAAAAAACY2x8J/f2y
    "], {{0, 375.}, {455., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{999.6999999999996, Automatic},
  ImageSizeRaw->{455., 375.},
  PlotRange->{{0, 455.}, {0, 375.}}]], "Output",
 CellChangeTimes->{
  3.958972996025201*^9, 3.959041309217679*^9, 3.959042780988206*^9, {
   3.9590510791326838`*^9, 3.959051088116987*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"cde8b8dc-4f37-43cf-a121-45e3aac56ebc"]
}, Open  ]],

Cell["\<\
The image displays an interactive visualization of \
\[OpenCurlyDoubleQuote]Spekkens Toy Model State Transitions.\
\[CloseCurlyDoubleQuote] On the left, a 2\[Times]2 grid labeled \
\[OpenCurlyDoubleQuote]Selected State\[CloseCurlyDoubleQuote] shows a \
specific state (in this case, [1,0,1,0]). To its right, a circular \
arrangement of six nodes represents the possible Spekkens states. Each node \
is a light blue circle, and directed gray arrows depict transitions between \
these states, indicating how one state can be transformed into another by \
applying certain operations. A \[OpenCurlyDoubleQuote]Reset Selection\
\[CloseCurlyDoubleQuote] button is present below the selected state display.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958612409066044*^9, 3.958612410334711*^9}, 
   3.958966777313634*^9, {3.95904962130471*^9, 
   3.959049622851865*^9}},ExpressionUUID->"f5e5975f-7a7e-4451-9580-\
1fc89aea8299"],

Cell["\<\
The underlying Mathematica code constructs this dynamic interface. It defines \
SpekkensStates as the six fundamental states in the model and \
SpekkensPermutations as the set of allowed transformations. The \
transitionRules are generated by applying each permutation to every Spekkens \
state, creating a complete set of directed edges for the graph. The \
vertexCoords are set to arrange the states in a circular layout for clear \
visualization. The transitionGraph is then built, with VertexShapeFunction \
dynamically changing the appearance of the selected state (highlighting it in \
yellow with a thicker border). The DynamicModule makes the entire display \
interactive: clicking on any state in the circular graph updates the \
\[OpenCurlyDoubleQuote]Selected State\[CloseCurlyDoubleQuote] display on the \
left, and the EventHandler within the VertexShapeFunction facilitates this \
interaction. This setup provides an intuitive way to explore the allowed \
transformations and the connectivity within the Spekkens toy model\
\[CloseCurlyQuote]s state space.\
\>", "Text",
 CellFrame->{{0, 0}, {3, 0}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958612875540391*^9, 3.958612902409071*^9}, 
   3.958966817294325*^9, 
   3.959049625179723*^9},ExpressionUUID->"99d1c900-d6a0-4745-9caa-\
c9452e73b4e7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"states", "=", "SpekkensStates"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"state", "->", 
       RowBox[{"Permute", "[", 
        RowBox[{"state", ",", "p"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"state", ",", "states"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "SpekkensPermutations"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"selected", "=", "None"}], "}"}], ",", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Graph", "[", 
        RowBox[{"states", ",", "edges", ",", 
         RowBox[{"VertexShapeFunction", "->", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"EventHandler", "[", 
             RowBox[{
              RowBox[{"Inset", "[", 
               RowBox[{
                RowBox[{"ArrayPlot", "[", 
                 RowBox[{
                  RowBox[{"Partition", "[", 
                   RowBox[{"#2", ",", "2"}], "]"}], ",", 
                  RowBox[{"Mesh", "->", "True"}], ",", 
                  RowBox[{"ImageSize", "->", "50"}], ",", 
                  RowBox[{"Frame", "->", "True"}], ",", 
                  RowBox[{"FrameTicks", "->", "None"}], ",", 
                  RowBox[{"PlotLabel", "->", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<State\>\"", ",", "10"}], "]"}]}], ",", 
                  RowBox[{"Background", "->", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#2", "===", "selected"}], ",", "LightYellow", 
                    ",", "White"}], "]"}]}]}], "]"}], ",", "#1", ",", 
                "Center"}], "]"}], ",", 
              RowBox[{"\"\<MouseClicked\>\"", ":>", 
               RowBox[{"(", 
                RowBox[{"selected", "=", "#2"}], ")"}]}]}], "]"}], "&"}], 
           ")"}]}], ",", 
         RowBox[{"EdgeStyle", "->", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Arrowheads", "[", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"0.03", ",", "0.5"}], "}"}], "}"}], "]"}]}], "]"}]}], 
         ",", 
         RowBox[{"GraphLayout", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<SpringElectricalEmbedding\>\"", ",", 
            RowBox[{"\"\<RepulsiveForcePower\>\"", "->", 
             RowBox[{"-", "2"}]}]}], "}"}]}], ",", 
         RowBox[{"VertexSize", "->", "0.2"}], ",", 
         RowBox[{"ImageSize", "->", "600"}], ",", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Spekkens' Toy Model: State Transitions\>\"", ",", "14", ",", 
            "Bold"}], "]"}]}], ",", 
         RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}]}], "]"}], ",", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"selected", "===", "None"}], ",", 
          RowBox[{"Panel", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Click any state to see details\>\"", ",", "14", ",", 
              "Italic"}], "]"}], ",", 
            RowBox[{"ImageSize", "->", 
             RowBox[{"{", 
              RowBox[{"400", ",", "100"}], "}"}]}], ",", 
            RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ArrayPlot", "[", 
                RowBox[{
                 RowBox[{"Partition", "[", 
                  RowBox[{"selected", ",", "2"}], "]"}], ",", 
                 RowBox[{"Mesh", "->", "True"}], ",", 
                 RowBox[{"ImageSize", "->", "150"}], ",", 
                 RowBox[{"Frame", "->", "True"}], ",", 
                 RowBox[{"FrameTicks", "->", "Automatic"}], ",", 
                 RowBox[{"PlotLabel", "->", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<Matrix Representation\>\"", ",", "12"}], 
                   "]"}]}]}], "]"}], ",", 
               RowBox[{"Column", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<Vector Form\>\"", ",", "12", ",", "Bold"}], 
                    "]"}], ",", 
                   RowBox[{"Spacer", "[", "5", "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"selected", ",", "14", ",", 
                    RowBox[{"FontFamily", "->", "\"\<Courier\>\""}]}], "]"}], 
                   ",", 
                   RowBox[{"Spacer", "[", "15", "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Applied Permutations\>\"", ",", "12", ",", "Bold"}], 
                    "]"}], ",", 
                   RowBox[{"Spacer", "[", "5", "]"}], ",", 
                   RowBox[{"Column", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"newState", "=", 
                    RowBox[{"Permute", "[", 
                    RowBox[{"selected", ",", "p"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"newState", ",", "2"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "30"}], ",", 
                    RowBox[{"Frame", "->", "True"}]}], "]"}], ",", 
                    "\"\<  \:2794  \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"newState", ",", 
                    RowBox[{"FontFamily", "->", "\"\<Courier\>\""}]}], "]"}], 
                    ",", "\"\<   (via \>\"", ",", "p", ",", "\"\<)\>\""}], 
                    "}"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"p", ",", "SpekkensPermutations"}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"Alignment", "->", "Left"}]}], "]"}]}], "}"}], 
                 ",", 
                 RowBox[{"Alignment", "->", "Center"}]}], "]"}]}], "}"}], 
             "}"}], ",", 
            RowBox[{"Alignment", "->", "Center"}], ",", 
            RowBox[{"Spacings", "->", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}]}], "]"}]}], "]"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"Alignment", "->", "Center"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958973017847433*^9, 3.95897301784906*^9}, {
  3.959049645209467*^9, 
  3.959049646275116*^9}},ExpressionUUID->"4bebaf74-18fd-48d4-aa2c-\
16127e06210a"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`selected$$ = None}, 
  TagBox[GridBox[{
     {
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{{1, 1, 0, 0}, {0, 0, 1, 1}, {1, 0, 1, 0}, {0, 1, 0, 1}, {0, 
           1, 1, 0}, {1, 0, 0, 
           1}}, {{{1, 1}, {1, 1}, {1, 2}, {1, 2}, {2, 2}, {2, 2}, {2, 1}, {2, 
            1}, {3, 3}, {3, 4}, {3, 3}, {3, 4}, {4, 4}, {4, 3}, {4, 4}, {4, 
            3}, {5, 5}, {5, 6}, {5, 6}, {5, 5}, {6, 6}, {6, 5}, {6, 5}, {6, 
            6}}, Null}, {EdgeStyle -> {
              Directive[
               GrayLevel[0], 
               Arrowheads[{{0.03, 0.5}}]]}, 
            GraphLayout -> {
             "SpringElectricalEmbedding", "RepulsiveForcePower" -> -2}, 
            ImageSize -> 600, PerformanceGoal -> "Quality", PlotLabel -> 
            Style["Spekkens' Toy Model: State Transitions", 14, Bold], 
            VertexShapeFunction -> {EventHandler[
               Inset[
                ArrayPlot[
                 Partition[#2, 2], Mesh -> True, ImageSize -> 50, Frame -> 
                 True, FrameTicks -> None, PlotLabel -> Style["State", 10], 
                 Background -> 
                 If[#2 === $CellContext`selected$457580, LightYellow, 
                   White]], #, Center], 
               "MouseClicked" :> ($CellContext`selected$457580 = #2)]& }, 
            VertexSize -> {0.2}}]]}, 
         TagBox[GraphicsGroupBox[{
            {GrayLevel[0], Opacity[0.7], Arrowheads[{{0.03, 0.5}}], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$1", Automatic, Center], {
                1.7299013593664865`, -0.6145623125591879}, {
                1.7857949880196764`, -0.4672805229140498}, {
                1.8720960383039587`, -0.4053291963553308}, {
                2.1534388942002676`, -0.49674303163045774`}, {
                2.186843834401489, -0.5975891922549857}, {
                2.1454926659745475`, -0.7495961136593157}, DynamicLocation[
                "VertexID$1", Automatic, Center]},
               SplineDegree->7]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$1", Automatic, Center], {
                2.1454926659745475`, -1.000423886340684}, {
                2.186843834401489, -1.1524308077450138`}, {
                2.1534388942002676`, -1.253276968369542}, {
                1.872096038303959, -1.344690803644669}, {
                1.7857949880196766`, -1.28273947708595}, {
                1.7299013593664867`, -1.1354576874408118`}, DynamicLocation[
                "VertexID$1", Automatic, Center]},
               SplineDegree->7]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$1", Automatic, Center], {
                1.375009999999995, -1.0394507471831174`}, DynamicLocation[
                "VertexID$2", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$1", Automatic, Center], {
                1.375009999999976, -0.9299886696473124}, DynamicLocation[
                "VertexID$2", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$2", Automatic, Center], {
                1.3750099999999907`, -0.7105692528168847}, DynamicLocation[
                "VertexID$1", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$2", Automatic, Center], {
                1.3750100000000118`, -0.8200313303526885}, DynamicLocation[
                "VertexID$1", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$2", Automatic, Center], {
                1.020118640633513, -1.1354576874408115`}, {
                0.9642250119803233, -1.2827394770859497`}, {
                0.8779239616960407, -1.344690803644669}, {
                0.5965811057997317, -1.2532769683695417`}, {
                0.5631761655985104, -1.1524308077450136`}, {
                0.6045273340254518, -1.0004238863406836`}, DynamicLocation[
                "VertexID$2", Automatic, Center]},
               SplineDegree->7]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$2", Automatic, Center], {
                0.6045273340254519, -0.7495961136593158}, {
                0.5631761655985104, -0.597589192254986}, {
                0.5965811057997317, -0.4967430316304578}, {
                0.8779239616960405, -0.40532919635533077`}, {
                0.9642250119803228, -0.46728052291404976`}, {
                1.0201186406335128`, -0.6145623125591878}, DynamicLocation[
                "VertexID$2", Automatic, Center]},
               SplineDegree->7]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$3", Automatic, Center], {
                1.7299013593664865`, -2.364582312559188}, {
                1.7857949880196764`, -2.2173005229140497`}, {
                1.8720960383039587`, -2.1553491963553304`}, {
                2.1534388942002676`, -2.2467630316304574`}, {
                2.186843834401489, -2.3476091922549855`}, {
                2.1454926659745475`, -2.4996161136593154`}, DynamicLocation[
                "VertexID$3", Automatic, Center]},
               SplineDegree->7]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$3", Automatic, Center], {
                2.1454926659745475`, -2.750443886340684}, {
                2.186843834401489, -2.902450807745014}, {
                2.1534388942002676`, -3.003296968369542}, {
                1.872096038303959, -3.094710803644669}, {
                1.7857949880196766`, -3.0327594770859503`}, {
                1.7299013593664867`, -2.885477687440812}, DynamicLocation[
                "VertexID$3", Automatic, Center]},
               SplineDegree->7]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$3", Automatic, Center], {
                1.375010000000004, -2.7894707471831097`}, DynamicLocation[
                "VertexID$4", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$3", Automatic, Center], {
                1.375009999999862, -2.6800086696473}, DynamicLocation[
                "VertexID$4", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$4", Automatic, Center], {
                1.3750099999999932`, -2.4605892528168876`}, DynamicLocation[
                "VertexID$3", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$4", Automatic, Center], {
                1.3750100000000938`, -2.5700513303526877`}, DynamicLocation[
                "VertexID$3", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$4", Automatic, Center], {
                1.020118640633513, -2.8854776874408112`}, {
                0.9642250119803233, -3.03275947708595}, {
                0.8779239616960407, -3.0947108036446687`}, {
                0.5965811057997317, -3.0032969683695416`}, {
                0.5631761655985104, -2.9024508077450135`}, {
                0.6045273340254518, -2.7504438863406837`}, DynamicLocation[
                "VertexID$4", Automatic, Center]},
               SplineDegree->7]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$4", Automatic, Center], {
                0.6045273340254519, -2.4996161136593154`}, {
                0.5631761655985104, -2.3476091922549855`}, {
                0.5965811057997317, -2.2467630316304574`}, {
                0.8779239616960405, -2.1553491963553304`}, {
                0.9642250119803228, -2.217300522914049}, {
                1.0201186406335128`, -2.3645823125591874`}, DynamicLocation[
                "VertexID$4", Automatic, Center]},
               SplineDegree->7]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$5", Automatic, Center], {
                1.7299013593664865`, -4.114602312559187}, {
                1.7857949880196764`, -3.967320522914049}, {
                1.8720960383039587`, -3.9053691963553296`}, {
                2.1534388942002676`, -3.9967830316304567`}, {
                2.186843834401489, -4.097629192254985}, {
                2.1454926659745475`, -4.249636113659315}, DynamicLocation[
                "VertexID$5", Automatic, Center]},
               SplineDegree->7]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$5", Automatic, Center], {
                2.1454926659745475`, -4.500463886340683}, {
                2.186843834401489, -4.652470807745013}, {
                2.1534388942002676`, -4.753316968369541}, {
                1.872096038303959, -4.844730803644668}, {
                1.7857949880196766`, -4.782779477085949}, {
                1.7299013593664867`, -4.635497687440811}, DynamicLocation[
                "VertexID$5", Automatic, Center]},
               SplineDegree->7]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$5", Automatic, Center], {
                1.375009999999974, -4.539490747183102}, DynamicLocation[
                "VertexID$6", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$5", Automatic, Center], {
                1.3750100000000984`, -4.430028669647307}, DynamicLocation[
                "VertexID$6", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$6", Automatic, Center], {
                1.3750100000000125`, -4.2106092528168855`}, DynamicLocation[
                "VertexID$5", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$6", Automatic, Center], {
                1.3750100000000514`, -4.320071330352702}, DynamicLocation[
                "VertexID$5", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$6", Automatic, Center], {
                1.020118640633513, -4.635497687440811}, {
                0.9642250119803233, -4.782779477085949}, {
                0.8779239616960407, -4.844730803644668}, {
                0.5965811057997317, -4.753316968369542}, {
                0.5631761655985104, -4.652470807745013}, {
                0.6045273340254518, -4.500463886340683}, DynamicLocation[
                "VertexID$6", Automatic, Center]},
               SplineDegree->7]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$6", Automatic, Center], {
                0.6045273340254519, -4.249636113659315}, {
                0.5631761655985104, -4.097629192254985}, {
                0.5965811057997317, -3.9967830316304567`}, {
                0.8779239616960405, -3.9053691963553296`}, {
                0.9642250119803228, -3.9673205229140485`}, {
                1.0201186406335128`, -4.114602312559187}, DynamicLocation[
                "VertexID$6", Automatic, Center]},
               SplineDegree->7]]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             TagBox[
              TagBox[InsetBox[
                
                GraphicsBox[{
                  RasterBox[{{1, 1}, {0, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                 Background->GrayLevel[1],
                 Frame->True,
                 FrameLabel->{None, None},
                 FrameStyle->Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.5]],
                 FrameTicks->{{None, None}, {None, None}},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->50,
                 
                 Method->{
                  "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic},
                 PlotLabel->FormBox[
                   StyleBox["\"State\"", 10, StripOnInput -> False], 
                   TraditionalForm]], {1.8750099999999996, -0.8750099999999998},
                 Center],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`selected$457580 = {1, 1, 0, 
                   0}), Method -> "Preemptive", PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]],
              "DynamicName",
              BoxID -> "VertexID$1"], 
             TagBox[
              TagBox[InsetBox[
                
                GraphicsBox[{
                  RasterBox[{{0, 0}, {1, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                 Background->GrayLevel[1],
                 Frame->True,
                 FrameLabel->{None, None},
                 FrameStyle->Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.5]],
                 FrameTicks->{{None, None}, {None, None}},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->50,
                 
                 Method->{
                  "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic},
                 PlotLabel->FormBox[
                   StyleBox["\"State\"", 10, StripOnInput -> False], 
                   TraditionalForm]], {0.8750099999999997, -0.8750099999999998},
                 Center],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`selected$457580 = {0, 0, 1, 
                   1}), Method -> "Preemptive", PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]],
              "DynamicName",
              BoxID -> "VertexID$2"], 
             TagBox[
              TagBox[InsetBox[
                
                GraphicsBox[{
                  RasterBox[{{0, 1}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                 Background->GrayLevel[1],
                 Frame->True,
                 FrameLabel->{None, None},
                 FrameStyle->Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.5]],
                 FrameTicks->{{None, None}, {None, None}},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->50,
                 
                 Method->{
                  "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic},
                 PlotLabel->FormBox[
                   StyleBox["\"State\"", 10, StripOnInput -> False], 
                   TraditionalForm]], {1.8750099999999996, -2.6250299999999998},
                 Center],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`selected$457580 = {1, 0, 1, 
                   0}), Method -> "Preemptive", PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]],
              "DynamicName",
              BoxID -> "VertexID$3"], 
             TagBox[
              TagBox[InsetBox[
                
                GraphicsBox[{
                  RasterBox[{{1, 0}, {1, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                 Background->GrayLevel[1],
                 Frame->True,
                 FrameLabel->{None, None},
                 FrameStyle->Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.5]],
                 FrameTicks->{{None, None}, {None, None}},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->50,
                 
                 Method->{
                  "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic},
                 PlotLabel->FormBox[
                   StyleBox["\"State\"", 10, StripOnInput -> False], 
                   TraditionalForm]], {0.8750099999999997, -2.6250299999999998},
                 Center],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`selected$457580 = {0, 1, 0, 
                   1}), Method -> "Preemptive", PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]],
              "DynamicName",
              BoxID -> "VertexID$4"], 
             TagBox[
              TagBox[InsetBox[
                GraphicsBox[{
                  RasterBox[{{0, 1}, {1, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                 Background->GrayLevel[1],
                 Frame->True,
                 FrameLabel->{None, None},
                 FrameStyle->Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.5]],
                 FrameTicks->{{None, None}, {None, None}},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->50,
                 
                 Method->{
                  "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic},
                 PlotLabel->FormBox[
                   StyleBox["\"State\"", 10, StripOnInput -> False], 
                   TraditionalForm]], {1.8750099999999996, -4.375049999999999},
                 Center],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`selected$457580 = {0, 1, 1, 
                   0}), Method -> "Preemptive", PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]],
              "DynamicName",
              BoxID -> "VertexID$5"], 
             TagBox[
              TagBox[InsetBox[
                
                GraphicsBox[{
                  RasterBox[{{1, 0}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                 Background->GrayLevel[1],
                 Frame->True,
                 FrameLabel->{None, None},
                 FrameStyle->Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.5]],
                 FrameTicks->{{None, None}, {None, None}},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->50,
                 
                 Method->{
                  "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic},
                 PlotLabel->FormBox[
                   StyleBox["\"State\"", 10, StripOnInput -> False], 
                   TraditionalForm]], {0.8750099999999997, -4.375049999999999},
                 Center],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`selected$457580 = {1, 0, 0, 
                   1}), Method -> "Preemptive", PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]],
              "DynamicName",
              BoxID -> "VertexID$6"]}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->"NetworkGraphics",
       FormatType->TraditionalForm,
       FrameTicks->None,
       ImageSize->600,
       PlotLabel->FormBox[
         StyleBox[
         "\"Spekkens' Toy Model: State Transitions\"", 14, Bold, StripOnInput -> 
          False], TraditionalForm]]},
     {
      DynamicBox[ToBoxes[
        If[$CellContext`selected$$ === None, 
         Panel[
          Style["Click any state to see details", 14, Italic], 
          ImageSize -> {400, 100}, Alignment -> Center], 
         Grid[{{
            ArrayPlot[
             Partition[$CellContext`selected$$, 2], Mesh -> True, ImageSize -> 
             150, Frame -> True, FrameTicks -> Automatic, PlotLabel -> 
             Style["Matrix Representation", 12]], 
            Column[{
              Style["Vector Form", 12, Bold], 
              Spacer[5], 
              Style[$CellContext`selected$$, 14, FontFamily -> "Courier"], 
              Spacer[15], 
              Style["Applied Permutations", 12, Bold], 
              Spacer[5], 
              Column[
               Table[
                
                With[{$CellContext`newState = 
                  Permute[$CellContext`selected$$, $CellContext`p]}, 
                 Row[{
                   ArrayPlot[
                    Partition[$CellContext`newState, 2], Mesh -> True, 
                    ImageSize -> 30, Frame -> True], "  \:2794  ", 
                   Style[$CellContext`newState, FontFamily -> "Courier"], 
                   "   (via ", $CellContext`p, 
                   ")"}]], {$CellContext`p, \
$CellContext`SpekkensPermutations}], Alignment -> Left]}, Alignment -> 
             Center]}}, Alignment -> Center, Spacings -> {2, 1}]], 
        StandardForm],
       ImageSizeCache->{250., {30., 33.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.9589730180111732`*^9, 3.9590413106633*^9, 
  3.959042781059413*^9},
 CellLabel->
  "Out[1161]=",ExpressionUUID->"1fa206f1-8f8e-426e-8f01-49b6d0a01e23"]
}, Open  ]],

Cell["\<\
The image displays an interactive graph titled \
\[OpenCurlyDoubleQuote]Spekkens\[CloseCurlyQuote] Toy Model: State \
Transitions.\[CloseCurlyDoubleQuote] The graph consists of several nodes, \
each representing a \[OpenCurlyDoubleQuote]State\[CloseCurlyDoubleQuote] as a \
2\[Times]2 grid of black and white squares. Arrows connect these states, \
indicating possible transitions between them. The layout suggests a \
collection of interconnected components rather than a single large one. Below \
the graph, a panel initially prompts the user to \[OpenCurlyDoubleQuote]Click \
any state to see details,\[CloseCurlyDoubleQuote] indicating interactivity.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958612875540391*^9, 3.95861291404595*^9}, 
   3.958966821858191*^9, {3.959049658586505*^9, 
   3.9590496592347603`*^9}},ExpressionUUID->"1c6acb8c-f8cf-433b-ad3a-\
a4ba60e12fa1"],

Cell["\<\
The Mathematica code provided defines the core components of the Spekkens toy \
model: SpekkensStates and SpekkensPermutations. SpekkensStates is a list of \
six binary vectors, each representing a fundamental quantum-like state in \
this model. SpekkensPermutations is a set of four cycle notations, specifying \
the allowed unitary transformations on these states, including the identity \
permutation.\
\>", "Item",
 CellChangeTimes->{{3.793891724891276*^9, 3.793891806306624*^9}, {
   3.795737503964374*^9, 3.795737584805357*^9}, {3.795737632794353*^9, 
   3.795737653673546*^9}, {3.958573762821009*^9, 3.958573782462821*^9}, {
   3.958573868949756*^9, 3.958573894310577*^9}, {3.958606885729864*^9, 
   3.958607092174608*^9}, {3.9586072258570004`*^9, 3.958607262092358*^9}, {
   3.958607532255677*^9, 3.9586075361084538`*^9}, {3.958607697827297*^9, 
   3.958607698828539*^9}, {3.958612922979142*^9, 3.958612933682229*^9}, 
   3.958966824554793*^9, {3.959049661961647*^9, 
   3.9590496625697117`*^9}},ExpressionUUID->"dd7e2d33-2e73-49c1-8fc9-\
5eb2a95a1219"],

Cell["\<\
The states variable is directly assigned SpekkensStates, indicating that the \
nodes of the graph will represent these fundamental states. The edges of the \
graph are then generated by considering every possible permutation (p) from \
SpekkensPermutations and applying it to every state in SpekkensStates. This \
creates a set of directed edges from an original state to the state resulting \
from the permutation, effectively mapping out all direct transitions.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958612875540391*^9, 3.958612947866892*^9}, 
   3.958966825703644*^9, {3.9590496651057377`*^9, 
   3.959049667398395*^9}},ExpressionUUID->"cb422e14-2da7-4ce9-bba9-\
bae44b327893"],

Cell["\<\
The DynamicModule encapsulates the interactive functionality. The main Graph \
is constructed using states as vertices and edges as connections. \
VertexShapeFunction is set up to display each state as an ArrayPlot (the 2\
\[Times]2 grid) and, crucially, includes an EventHandler that updates the \
selected state variable when a user clicks on a node. The GraphLayout uses \
SpringElectricalEmbedding to arrange the nodes, aiming for a clear visual \
representation of their relationships. EdgeStyle sets black arrows to show \
the direction of transitions.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 3}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958612875540391*^9, 3.958612902409071*^9}, {
   3.958612981828072*^9, 3.958613017194694*^9}, {3.958838938435244*^9, 
   3.958838944844331*^9}, 3.958966827227341*^9, {3.959049669359673*^9, 
   3.959049670356662*^9}},ExpressionUUID->"c859e325-5c63-4e3a-959a-\
870001e89bb7"],

Cell["\<\
Below the main graph, a Dynamic section provides detailed information about \
the selected state. When no state is selected (selected === None), the panel \
displays the initial prompt. Once a state is clicked, this panel transforms \
to show the Matrix Representation (the 2\[Times]2 grid) of the selected \
state, its Vector Form (the flat binary vector), and a list of Applied \
Permutations. For each permutation, it shows the resulting newState and the \
specific permutation that produced it, allowing for a deep dive into the \
properties and transformations of any chosen Spekkens state. This \
comprehensive interactive tool serves as an excellent visual aid for \
understanding the mechanics and behavior of Spekkens\[CloseCurlyQuote] toy \
model of quantum mechanics.\
\>", "Text",
 CellFrame->{{0, 0}, {3, 0}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, 3.958613038230907*^9, {3.958838884416235*^9, 
   3.958838891995253*^9}, 3.958966830478461*^9, 
   3.959049674200045*^9},ExpressionUUID->"36d05318-7291-4750-b61d-\
da81372fb6ca"],

Cell["\<\
I demonstrate a comprehensive suite of Mathematica tools designed to explore \
Robert Spekkens\[CloseCurlyQuote] toy model of quantum mechanics. This model \
is a fascinating simplified framework that reproduces many \
\[OpenCurlyDoubleQuote]quantum-like\[CloseCurlyDoubleQuote] phenomena from a \
purely classical, epistemic perspective, meaning that quantum states are \
interpreted as states of incomplete knowledge about an underlying reality, \
rather than representing fundamental properties of that reality. The tools \
range from visualizing single-state evolution to mapping out the entire state \
space and highlighting connected components, offering multiple angles for \
understanding this theoretical construct.\
\>", "Text",
 CellFrame->{{0, 0}, {3, 0}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958613038230907*^9, 3.958613073434804*^9}, {
   3.9589668345703173`*^9, 3.958966835110661*^9}, {3.959049695991641*^9, 
   3.9590497061188097`*^9}},ExpressionUUID->"d283ec4b-d9f5-4127-adc2-\
2b56a0c87138"],

Cell["\<\
The common thread running through all these visualizations is the definition \
of SpekkensStates and SpekkensPermutations. The SpekkensStates are the \
fundamental \[OpenCurlyDoubleQuote]bits\[CloseCurlyDoubleQuote] of \
information in this model, represented as simple binary vectors. The \
SpekkensPermutations are the allowed operations or \
\[OpenCurlyDoubleQuote]unitary transformations\[CloseCurlyDoubleQuote] within \
the model. These definitions form the bedrock upon which all the more complex \
analyses, such as Kronecker products for composite states or graph \
constructions for state transitions, are built.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, 3.958613038230907*^9, {3.958613115439408*^9, 
   3.958613118661746*^9}, 3.9589668364678097`*^9, {3.959049700999868*^9, 
   3.959049703041363*^9}},ExpressionUUID->"b9508157-46ff-4db7-9e4a-\
68f5f05a93ef"],

Cell["\<\
Collectively, these interactive Mathematica demonstrations provide an \
invaluable resource for students and researchers alike. They allow for an \
intuitive, hands-on exploration of abstract concepts in quantum foundations, \
making phenomena like state evolution, entanglement analogues, and the \
structure of the state space accessible through visual and interactive \
manipulation. By providing different perspectives on the same underlying \
model, the tools facilitate a deeper understanding of how a classical theory \
with epistemic restrictions can mimic many aspects of quantum mechanics, \
thereby shedding light on the ongoing debate about the nature of quantum \
reality.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958613163117322*^9, 3.958613164051591*^9}, 
   3.958966841031906*^9, 
   3.959049703897809*^9},ExpressionUUID->"f89629e8-cb19-40f2-8f1b-\
f352e5c59f7e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"StatePlot", "[", 
   RowBox[{"state_", ",", 
    RowBox[{"size_", ":", "80"}]}], "]"}], ":=", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{"state", ",", "2"}], "]"}], ",", 
    RowBox[{"Mesh", "->", "True"}], ",", 
    RowBox[{"ImageSize", "->", "size"}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"Text", "[", 
      RowBox[{"Style", "[", 
       RowBox[{"state", ",", "9"}], "]"}], "]"}]}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"FrameStyle", "->", "LightGray"}], ",", 
    RowBox[{"ColorRules", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "->", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.2", ",", "0.6", ",", "1"}], "]"}]}], ",", 
       RowBox[{"0", "->", "White"}]}], "}"}]}]}], "]"}]}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"currentStates", "=", "SpekkensStates"}], ",", 
     RowBox[{"history", "=", 
      RowBox[{"{", "SpekkensStates", "}"}]}], ",", 
     RowBox[{"step", "=", "0"}], ",", 
     RowBox[{"selectedPerm", "=", "1"}], ",", 
     RowBox[{"entanglementGraph", "=", "None"}]}], "}"}], ",", 
   RowBox[{"Panel", "[", 
    RowBox[{
     RowBox[{"Column", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Spekkens Toy Model Explorer\>\"", ",", "16", ",", "Bold"}], 
          "]"}], ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"StatePlot", "[", 
                 RowBox[{"#", ",", "100"}], "]"}], "&"}], "/@", 
               "currentStates"}], ",", "3"}], "]"}], ",", 
            RowBox[{"Frame", "->", "All"}], ",", 
            RowBox[{"FrameStyle", "->", "LightGray"}]}], "]"}], "]"}], ",", 
         RowBox[{"Row", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Button", "[", 
              RowBox[{"\"\<Reset\>\"", ",", 
               RowBox[{
                RowBox[{"currentStates", "=", "SpekkensStates"}], ";", "\n", 
                RowBox[{"history", "=", 
                 RowBox[{"{", "SpekkensStates", "}"}]}], ";", "\n", 
                RowBox[{"step", "=", "0"}], ";", 
                RowBox[{"entanglementGraph", "=", "None"}]}], ",", 
               RowBox[{"ImageSize", "->", "80"}]}], "]"}], ",", 
             RowBox[{"PopupMenu", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", "selectedPerm", "]"}], ",", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Range", "[", "4", "]"}], "->", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<Identity\>\"", ",", "\"\<Swap Rows\>\"", ",", 
                   "\"\<Swap Columns\>\"", ",", "\"\<Swap Diagonals\>\""}], 
                  "}"}]}], "]"}], ",", 
               RowBox[{"ImageSize", "->", "150"}]}], "]"}], ",", 
             RowBox[{"Button", "[", 
              RowBox[{"\"\<Apply Transformation\>\"", ",", 
               RowBox[{
                RowBox[{"currentStates", "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Permute", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"SpekkensPermutations", "[", 
                    RowBox[{"[", "selectedPerm", "]"}], "]"}]}], "]"}], "&"}],
                   "/@", "currentStates"}]}], ";", "\n", 
                RowBox[{"history", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"history", ",", "currentStates"}], "]"}]}], ";", 
                "\n", 
                RowBox[{"step", "++"}], ";"}], ",", 
               RowBox[{"ImageSize", "->", "150"}]}], "]"}], ",", 
             RowBox[{"Button", "[", 
              RowBox[{"\"\<Undo\>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"step", ">", "0"}], ",", 
                 RowBox[{
                  RowBox[{"step", "--"}], ";", "\n", 
                  RowBox[{"currentStates", "=", 
                   RowBox[{"history", "[", 
                    RowBox[{"[", 
                    RowBox[{"step", "+", "1"}], "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"history", "=", 
                   RowBox[{"history", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", 
                    RowBox[{"step", "+", "1"}]}], "]"}], "]"}]}]}]}], "]"}], 
               ",", 
               RowBox[{"ImageSize", "->", "80"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"Spacer", "[", "10", "]"}]}], "]"}], ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{"Slider", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", 
             RowBox[{"step", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"step", "=", "#"}], ";", 
                 RowBox[{"currentStates", "=", 
                  RowBox[{"history", "[", 
                   RowBox[{"[", 
                    RowBox[{"step", "+", "1"}], "]"}], "]"}]}]}], ")"}], 
               "&"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"Length", "[", "history", "]"}], "-", "1"}], ",", 
              "1"}], "}"}], ",", 
            RowBox[{"ImageSize", "->", "500"}]}], "]"}], "]"}], ",", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Show Entanglement Graph\>\"", ",", 
           RowBox[{"entanglementGraph", "=", 
            RowBox[{"SimpleGraph", "@", 
             RowBox[{"UndirectedGraph", "@", 
              RowBox[{"NestGraph", "[", 
               RowBox[{
                RowBox[{"state", "|->", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"Permute", "[", 
                    RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", 
                    "SpekkensPermutations"}], ",", 
                   RowBox[{"{", "state", "}"}]}], "]"}]}], ",", 
                RowBox[{"KroneckerProduct", "@@@", 
                 RowBox[{"Tuples", "[", 
                  RowBox[{"currentStates", ",", 
                   RowBox[{"{", "2", "}"}]}], "]"}]}], ",", "2", ",", 
                RowBox[{"VertexLabels", "->", 
                 RowBox[{"v_", ":>", 
                  RowBox[{"StatePlot", "[", 
                   RowBox[{"v", ",", "40"}], "]"}]}]}], ",", 
                RowBox[{
                "GraphLayout", "->", "\"\<SpringElectricalEmbedding\>\""}], 
                ",", 
                RowBox[{"EdgeStyle", "->", 
                 RowBox[{"Opacity", "[", "0.3", "]"}]}], ",", 
                RowBox[{"VertexSize", "->", "1.5"}]}], "]"}]}]}]}]}], "]"}], 
         ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", "entanglementGraph", "]"}], "===", 
             "Graph"}], ",", 
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"HighlightGraph", "[", 
                RowBox[{"entanglementGraph", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"VertexList", "[", "entanglementGraph", "]"}], 
                    ",", "#"}], "]"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5", ",", "0.5"}], "]"}], ",", 
                    RowBox[{"VertexSize", "->", "1.8"}]}], "]"}], "&"}], "/@", 
                  RowBox[{"KroneckerProduct", "@@@", 
                   RowBox[{"Tuples", "[", 
                    RowBox[{"currentStates", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}]}], ",", 
                 RowBox[{"ImageSize", "->", "500"}]}], "]"}], ",", 
               "entanglementGraph"}], "}"}], "]"}], ",", "\"\<\>\""}], "]"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "->", "550"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958973122320107*^9, 3.958973122321628*^9}, {
  3.95904972856433*^9, 
  3.959049730956429*^9}},ExpressionUUID->"7be3b2b9-d33a-496b-abc6-\
499ccdf0e4b9"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`currentStates$$ = {{1, 1, 0, 0}, {0, 0, 1, 
  1}, {1, 0, 1, 0}, {0, 1, 0, 1}, {0, 1, 1, 0}, {1, 0, 0, 
  1}}, $CellContext`history$$ = {{{1, 1, 0, 0}, {0, 0, 1, 1}, {1, 0, 1, 0}, {
  0, 1, 0, 1}, {0, 1, 1, 0}, {1, 0, 0, 1}}}, $CellContext`step$$ = 
  0, $CellContext`selectedPerm$$ = 1, $CellContext`entanglementGraph$$ = 
  None}, 
  PanelBox[
   TagBox[GridBox[{
      {
       StyleBox["\<\"Spekkens Toy Model Explorer\"\>",
        StripOnInput->False,
        FontSize->16,
        FontWeight->Bold]},
      {
       DynamicBox[ToBoxes[
         Grid[
          Partition[
           
           Map[$CellContext`StatePlot[#, 
             100]& , $CellContext`currentStates$$], 3], Frame -> All, 
          FrameStyle -> LightGray], StandardForm],
        ImageSizeCache->{201., {26.232574462890625`, 29.767425537109375`}}]},
      {
       TemplateBox[{
         TemplateBox[{10}, "Spacer1"], 
         ButtonBox[
         "\"Reset\"", 
          ButtonFunction :> ($CellContext`currentStates$$ = \
$CellContext`SpekkensStates; $CellContext`history$$ = \
{$CellContext`SpekkensStates}; $CellContext`step$$ = 
            0; $CellContext`entanglementGraph$$ = None), ImageSize -> 80, 
          Appearance -> Automatic, BaseStyle -> {FontFamily -> "Arial"}, 
          Evaluator -> Automatic, FrameMargins -> 5, Method -> "Preemptive"], 
         
         PopupMenuBox[
          Dynamic[$CellContext`selectedPerm$$], {
          1 -> "\"Identity\"", 2 -> "\"Swap Rows\"", 3 -> "\"Swap Columns\"", 
           4 -> "\"Swap Diagonals\""}, ImageSize -> 150], 
         ButtonBox[
         "\"Apply Transformation\"", 
          ButtonFunction :> ($CellContext`currentStates$$ = Map[Permute[#, 
               
               Part[$CellContext`SpekkensPermutations, \
$CellContext`selectedPerm$$]]& , $CellContext`currentStates$$]; \
$CellContext`history$$ = 
            Append[$CellContext`history$$, $CellContext`currentStates$$]; 
           Increment[$CellContext`step$$]; Null), ImageSize -> 150, 
          Appearance -> Automatic, BaseStyle -> {FontFamily -> "Arial"}, 
          Evaluator -> Automatic, FrameMargins -> 5, Method -> "Preemptive"], 
         
         ButtonBox[
         "\"Undo\"", ButtonFunction :> 
          If[$CellContext`step$$ > 0, 
            Decrement[$CellContext`step$$]; $CellContext`currentStates$$ = 
             Part[$CellContext`history$$, $CellContext`step$$ + 
               1]; $CellContext`history$$ = Part[$CellContext`history$$, 
               Span[1, $CellContext`step$$ + 1]]], ImageSize -> 80, 
          Appearance -> Automatic, BaseStyle -> {FontFamily -> "Arial"}, 
          Evaluator -> Automatic, FrameMargins -> 5, Method -> "Preemptive"]},
        
        "RowWithSeparator"]},
      {
       DynamicBox[ToBoxes[
         Slider[
          
          Dynamic[$CellContext`step$$, ($CellContext`step$$ = #; \
$CellContext`currentStates$$ = 
            Part[$CellContext`history$$, $CellContext`step$$ + 1])& ], {
          0, Length[$CellContext`history$$] - 1, 1}, ImageSize -> 500], 
         StandardForm],
        ImageSizeCache->{312.5, {5.375, 9.}}]},
      {
       ButtonBox["\<\"Show Entanglement Graph\"\>",
        Appearance->Automatic,
        BaseStyle->{FontFamily -> "Arial"},
        ButtonFunction:>($CellContext`entanglementGraph$$ = SimpleGraph[
           UndirectedGraph[
            NestGraph[
             Function[$CellContext`state, 
              Join[
               Map[
               Permute[$CellContext`state, #]& , \
$CellContext`SpekkensPermutations], {$CellContext`state}]], 
             MapApply[KroneckerProduct, 
              Tuples[$CellContext`currentStates$$, {2}]], 2, 
             VertexLabels -> (Pattern[$CellContext`v, 
                Blank[]] :> $CellContext`StatePlot[$CellContext`v, 40]), 
             GraphLayout -> "SpringElectricalEmbedding", EdgeStyle -> 
             Opacity[0.3], VertexSize -> 1.5]]]),
        Evaluator->Automatic,
        FrameMargins->5,
        Method->"Preemptive"]},
      {
       DynamicBox[ToBoxes[
         If[Head[$CellContext`entanglementGraph$$] === Graph, 
          Row[{
            HighlightGraph[$CellContext`entanglementGraph$$, 
             Map[Style[
               Flatten[
                Position[
                 VertexList[$CellContext`entanglementGraph$$], #]], 
               RGBColor[1, 0.5, 0.5], VertexSize -> 1.8]& , 
              MapApply[KroneckerProduct, 
               Tuples[$CellContext`currentStates$$, {2}]]], ImageSize -> 
             500], $CellContext`entanglementGraph$$}], ""], StandardForm],
        ImageSizeCache->{0., {0., 3.289794921875}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   ImageSize->550],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.9589731224707747`*^9, 3.95904042587297*^9, 
  3.9590405144671383`*^9, 3.95904071012418*^9, 3.959040794983866*^9, 
  3.9590408486047564`*^9, 3.959040932872268*^9, 3.959041080651861*^9, 
  3.959041218825891*^9, 3.959041312265104*^9, 3.9590427810979643`*^9},
 CellLabel->
  "Out[1165]=",ExpressionUUID->"251e125e-7a11-48f3-8558-9fa5fa3914b1"]
}, Open  ]],

Cell["\<\
The image displays an interactive application titled \
\[OpenCurlyDoubleQuote]Spekkens Toy Model Explorer.\[CloseCurlyDoubleQuote] \
At the top, a grid of six 2\[Times]2 binary patterns represents the \
SpekkensStates, each with its corresponding vector label. Below this, there\
\[CloseCurlyQuote]s a control panel with a \[OpenCurlyDoubleQuote]Reset\
\[CloseCurlyDoubleQuote] button, a dropdown menu for selecting \
transformations (labeled \[OpenCurlyDoubleQuote]Identity\
\[CloseCurlyDoubleQuote]), an \[OpenCurlyDoubleQuote]Apply Transformation\
\[CloseCurlyDoubleQuote] button, and an \[OpenCurlyDoubleQuote]Undo\
\[CloseCurlyDoubleQuote] button. A slider is also present, likely to navigate \
through the history of applied transformations. Finally, a \
\[OpenCurlyDoubleQuote]Show Entanglement Graph\[CloseCurlyDoubleQuote] button \
suggests a deeper level of analysis for the model.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 3}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958613163117322*^9, 3.958613181012738*^9}, {
   3.958966842593749*^9, 3.958966842911644*^9}, {3.9590497358019867`*^9, 
   3.959049736467918*^9}},ExpressionUUID->"f9befbea-e249-4caa-9032-\
68fd1553aac6"],

Cell["\<\
The provided Mathematica code outlines the functionality of this explorer. It \
initializes SpekkensStates and SpekkensPermutations, which are the core \
elements of the Spekkens toy model. The StatePlot function is defined to \
render the 2\[Times]2 binary patterns visually. The main DynamicModule \
manages the state of the application, including the currentStates (which \
initially are all the SpekkensStates), a history of states, the step in that \
history, and the selectedPerm (the chosen transformation). The Apply \
Transformation button updates the currentStates by applying the selectedPerm \
to each of them and records this new state in the history. The Undo button \
and the slider allow users to navigate backward and forward through the \
history of transformations, providing a dynamic way to observe the evolution \
of the Spekkens states.

The \[OpenCurlyDoubleQuote]Show Entanglement Graph\[CloseCurlyDoubleQuote] \
button, when pressed, triggers the generation of a graph. This graph\
\[CloseCurlyQuote]s vertices are likely composite states formed by the \
Kronecker product of pairs of the currentStates. The NestGraph function is \
used to build this graph, showing connections between states that can be \
reached by applying SpekkensPermutations. The VertexLabels of this graph are \
themselves StatePlot representations of the composite states. This feature \
likely aims to visualize the \[OpenCurlyDoubleQuote]entanglement-like\
\[CloseCurlyDoubleQuote] correlations within the Spekkens model, which, \
despite being a classical model, can exhibit properties that mimic quantum \
entanglement due to its epistemic nature.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 3}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958613163117322*^9, 3.958613201681973*^9}, {
   3.958966844384796*^9, 3.9589668445605288`*^9}, {3.959049740022814*^9, 
   3.959049743051107*^9}},ExpressionUUID->"b19a4c81-4dfc-4728-aeb9-\
fba37b22bcab"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"stateGraph", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"current", "=", 
      RowBox[{"SpekkensStates", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", 
     RowBox[{"transformed", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Permute", "[", 
         RowBox[{"current", ",", "#"}], "]"}], "&"}], "/@", 
       "SpekkensPermutations"}]}], ";", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"stateGraph", ",", 
         RowBox[{"current", "->", "#"}]}], "]"}], "&"}], "/@", 
      "transformed"}], ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "SpekkensStates", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"currentState", "=", 
      RowBox[{"First", "[", "SpekkensStates", "]"}]}], ",", 
     RowBox[{"vertexCoords", "=", 
      RowBox[{"Association", "@", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", "2", " ", 
               RowBox[{"\[Pi]", "/", "6"}]}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", "2", " ", 
               RowBox[{"\[Pi]", "/", "6"}]}], "]"}]}], "}"}]}], "&"}], ",", 
         "SpekkensStates"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Dynamic", "@", 
             RowBox[{"ArrayPlot", "[", 
              RowBox[{
               RowBox[{"Partition", "[", 
                RowBox[{"currentState", ",", "2"}], "]"}], ",", 
               RowBox[{"Mesh", "->", "True"}], ",", 
               RowBox[{"ImageSize", "->", "150"}], ",", 
               RowBox[{"PlotLabel", "->", "\"\<Current State\>\""}], ",", 
               RowBox[{"ColorRules", "->", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "->", 
                   RowBox[{"Darker", "@", "Cyan"}]}], ",", 
                  RowBox[{"0", "->", "White"}]}], "}"}]}]}], "]"}]}], ",", 
            RowBox[{"Dynamic", "@", 
             RowBox[{"Graph", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", "stateGraph", "]"}], ",", 
               RowBox[{"VertexCoordinates", "->", 
                RowBox[{"Normal", "[", "vertexCoords", "]"}]}], ",", 
               RowBox[{"VertexShapeFunction", "->", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"#2", ",", "2"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "50"}], ",", 
                    RowBox[{"ColorRules", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "->", 
                    RowBox[{"Darker", "@", "Cyan"}]}], ",", 
                    RowBox[{"0", "->", "White"}]}], "}"}]}]}], "]"}], ",", 
                    "#", ",", 
                    RowBox[{"Background", "->", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#2", "===", "currentState"}], ",", "LightRed", 
                    ",", "None"}], "]"}]}]}], "]"}], "&"}], ")"}]}], ",", 
               RowBox[{"VertexSize", "->", "0.35"}], ",", 
               RowBox[{"EdgeStyle", "->", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Gray", ",", "Dashed"}], "]"}]}], ",", 
               RowBox[{"GraphLayout", "->", "\"\<CircularEmbedding\>\""}], 
               ",", 
               RowBox[{"ImageSize", "->", "400"}]}], "]"}]}]}], "}"}], "}"}], 
         ",", 
         RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
       RowBox[{"Row", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Reset\>\"", ",", 
             RowBox[{"currentState", "=", 
              RowBox[{"First", "[", "SpekkensStates", "]"}]}], ",", 
             RowBox[{"ImageSize", "->", "100"}]}], "]"}], ",", 
           RowBox[{"Dynamic", "@", 
            RowBox[{"PopupMenu", "[", 
             RowBox[{"\"\<Go to:\>\"", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "->", 
                 RowBox[{"(", 
                  RowBox[{"currentState", "=", "#"}], ")"}]}], "&"}], "/@", 
               "SpekkensStates"}], ",", 
              RowBox[{"ImageSize", "->", "150"}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{"Spacer", "[", "20", "]"}]}], "]"}], ",", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Button", "[", 
              RowBox[{
               RowBox[{"Row", "@", 
                RowBox[{"{", 
                 RowBox[{"\"\<Apply \>\"", ",", "#"}], "}"}]}], ",", 
               RowBox[{"currentState", "=", 
                RowBox[{"Permute", "[", 
                 RowBox[{"currentState", ",", "#"}], "]"}]}], ",", 
               RowBox[{"ImageSize", "->", "120"}]}], "]"}], "&"}], "/@", 
            "SpekkensPermutations"}], ",", "2"}], "]"}], ",", 
         RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
       RowBox[{"Panel", "[", 
        RowBox[{
         RowBox[{"Column", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<State Transformation Rules\>\"", ",", "Bold"}], 
             "]"}], ",", 
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"CyclesForm", "[", "perm", "]"}], ",", 
                    "\"\< : \>\"", ",", 
                    RowBox[{"MatrixForm", "[", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "4", "]"}], ",", "2"}], "]"}], 
                    "]"}], ",", "\"\< \[RightArrow] \>\"", ",", 
                    RowBox[{"MatrixForm", "[", 
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"PermutationList", "[", 
                    RowBox[{"perm", ",", "4"}], "]"}], ",", "2"}], "]"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"perm", ",", "SpekkensPermutations"}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Permutation\>\"", ",", "\"\<\>\"", ",", "\"\<Input\>\"",
                   ",", "\"\<\>\"", ",", "\"\<Output\>\""}], "}"}]}], "]"}], 
              ",", 
              RowBox[{"Frame", "->", "All"}], ",", 
              RowBox[{"Alignment", "->", "Left"}]}], "]"}]}], "}"}], "]"}], 
         ",", 
         RowBox[{"ImageSize", "->", "500"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Spacings", "->", "2"}]}], "]"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"CyclesForm", "[", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", "}"}], "]"}], "]"}], ":=", "\"\<Identity\>\""}], "\n", 
 RowBox[{
  RowBox[{"CyclesForm", "[", 
   RowBox[{"Cycles", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c_", ",", "d_"}], "}"}]}], "}"}], "]"}], "]"}], ":=", 
  RowBox[{"StringJoin", "[", 
   RowBox[{"\"\<Swap \>\"", ",", 
    RowBox[{"ToString", "[", "a", "]"}], ",", "\"\<\[LeftRightArrow]\>\"", 
    ",", 
    RowBox[{"ToString", "[", "b", "]"}], ",", "\"\< & \>\"", ",", 
    RowBox[{"ToString", "[", "c", "]"}], ",", "\"\<\[LeftRightArrow]\>\"", 
    ",", 
    RowBox[{"ToString", "[", "d", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.95897314293232*^9, 3.9589731429338837`*^9}, {
  3.959049758253538*^9, 3.9590497600074177`*^9}},
 CellLabel->
  "In[3262]:=",ExpressionUUID->"719851e8-cc8d-4d24-8b03-7c84c610dc3e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
kBAkBABA9szu+kkIsUdCAABkw7xzn4SQECQEAMA+WTv2ISEkREQTgoZ9YgNA
LNmeX0BCSI6IJoS0PVQDADznfBgiCSEhIpoQjFSsJSQAQGBmzpxJQkiU6CYE
ISuqH18BAEhLnXEgISREpBNCfg+8BgDkjYSQHJFOCACAgNEfQnKQEAAAOVEb
4RHRYfjWJMXbCCoaAJCZ85rwsNuBPIWy9CIt7BrLU9iLDQCSQqtrwktLS9ev
Xx92KeDGvDc27IJ8S8oTdhEAIIZUZwhhlwJRYvabocmtBLICa1ISAIgTEgJy
IiuMmRA06bOI3pMAwA/sfyEn1u43NWmXF6eEXQoAiBviAXJi7Z1bn6NPU6ZM
CbsIAAB/laaEXQqkZz3FoNXFigCA2OO6CJ3ZnvClz8WKQJb27t1bUlJSWVkZ
dkHSq62tleLV1NSEXRBARyQEnU110ORSBGCfPvroozFjxgwePPi6lFGjRq1d
uzbgMuzcufN///d/044qLi5+5JFHBg0aJGUbOHDg8OHDV61apUbV1dW98847
y5cvd5/56tWr58yZ43GJAZ2QELTlPMVAQkBU/Otf/5KW9/bbb//zn//87rvv
vvDCCzfccMOtt966efPmIIsh8UCK4Ry+Z8+eW2655aabbpo4ceK8efMmTZok
Zbv++us3bNggYyUqyKf+85//uM/8rrvumjBhgi/lRlLp1hyTELQl9bLEQp1x
oLKgv127dknje+ONN1pPiv3tb3+TZvfll1/OZg6yF5/9W5dRmRLCihUrZPi0
adPMIfPnz5chM2bMMDIkhG9SrEPSJgSXsgH7pNvFZlypGC2aHEPQbTWGVhYv
Xiwt7Ntvv20dWFNT89xzz/3rX/+S1+PGjbPeDvPUU0+99NJLRqqZHjlypIy6
4YYb/vjHP9reygQrV64cNWqUvP3d7373wgsv7Ny5UwZu27ZtxIgR//jHP2Ti
66+/fujQoerg/7x582QyKYmMXbZsmbOEr732mjmktrb21VdfXbRo0ddffz1k
yBAZe/fdd7/++utG6njIQw89JIFn4MCBDz/88JdffikDx44dK28HDx78wAMP
GKlgIAUYNmyYDPz973//z3/+0xYngGzQHwKijuNOcPfmm29KC+ty1cHw4cOf
eOIJ8+299947ZswYeSGhQj548803S4SQFGp7u2HDhkGDBknz/be//U3igYQB
aa+lad68ebO61OFPf/rTrFmzpJmW12vWrFm9evVjjz0mr995552ysjJrASSu
SJCQUdL0T58+XfKDebHi7t27JTnIqEmTJsnwjz76SF4//vjjMhOJEBIJ7rzz
Tmn9JUtIwSQevPvuu0bDERL5ur///e9SKnktJfFl4SLW6I8OUUfKhTtp0KWJ
3LVrV6YJ3BPC/Pnz1XDb2wkTJsjbdevWqbfSBMtb2ZyqhPDUU0+p4dKsy1vV
cGc6yyAqKiokZtxyyy0qXdx0001vvPGGOkdgPcvw3nvvyZzN3zJx4kQZpW7N
MM8y1NbW3nDDDZJMzOMGEjwkP3AYAXngCC0ijYQAd3/961+lGXV5JJx7Qigp
KVHDbW/lU/L2kQa///3v5e0//vEPlRBmzpypJtu0aZO8VScaXBKCIpHgq6++
ks+quanLJGzXIaxcuXLatGkSe+677z4VJ9TZDTMhFBcXy8DBgwebZVPBw3bg
AgD8oM9xJ8kG+hQGeioqKrLu+yt79uwZOXLk008/LY2ytPWjR482R0lTa00I
snevhtve3nPPPbKr/uZ3ffHFFyohmGe+1Fv3hCBzfuaZZ6z7+LW1tVKq2267
zfhuQpDZqpsyZPoZM2aMHTvWmRDWrl0rAx988EFb2Xbs2OHVIgWCx9Y+Kjg5
hQjZvn277FBLq7plyxZzoOzsSzMq7aaROggvzbEaLq2tDM8mIfzxj3+Utxs3
blRvly5dKg30l19+uc+E4Ly/QF02sGjRInPI3r17R4wY8fvf/95oSAhq7LBh
w+68807zKoUnn3xSRqmmXxKCxAZ5UVVVJQPvu+8+6/wnTpwowwtdlEB4OFwc
FSQERMtnn302cODAu++++7XXXnvnnXf+9Kc/XX/99dL+yq66jH3++eelSX39
9deLiopGjhyZZUKQ/wLyVqLF+++//8EHH9xxxx0yf2mFXRLCG2+8Ia+lvbb1
wyDbPXWbw3PPPffPf/5z1qxZElrMUxXr169XFzZICBk3bpz8kA8//FBiw5Qp
U9RZhk2bNslk8nOkAPLrJIFMmjRJho8fP/7TTz9VX/rnP/85oGUN+IAr0qOF
y1cQLQsXLpR2/6abblKt6mOPPab6IzJSlwrcf//9avjjjz/+6KOPSoQwGiKB
eVmg7a2Rum7w1ltvlYGDBg2SD6obD7ds2SJD5s2bp6ZRb9XGbc2aNeqSAOed
BTLZ6NGjb7jhBlWMu+66y+wgUWLMI488ou50WLdunXqtjhJIqjFPoMyYMUN1
ySjxo7KycuLEieqtlFAikLYdTSMSQu+IgN3SaKG+EEXquQxpj7eXl5erE/o5
+eabb8rKyrJvf6UAO3bsyNSRkSpe2gsGZKA64mGkzpuknUYm2L17t/l2z549
slWn0yR4QjJniN/OKYbICbe+OIgBAEHiOD8igTwJAAHjYgDoj3gAAKEI/YIE
wAXxIBJGANkJe1UF4CN6sYATW35kg/UELtRDhMMuBQolIaGoqCjsUkAjYe+Y
QmvW9STEtRSFmzp1qk8HdSUbsO8ZGyrs+bGqyJw5rRA5YTdB0Jp1PQlxLYUn
5qZ4uJWWWfkXPBAWz083qNRBjIwisy1o9Oqr/MmfrWVMLBJCLKl7HLzaVpMN
4E5lSI4eRBcJgYSQFgkhObLferOdTyaa+MQiIZAQ0iIhJIds/2VHT52DcB5e
UIeIhZomlBIiXOrQk1oBzE7mTUsaqGlCKSF8QkIgIaRFQkga1X+Cc2+xtEFY
BYM+0q4JZkJgJYkfEgIJIS0SAgAkHAmBhJAWCQEAEo6EQEJIi4QAAAlHQiAh
pEVCAICEIyGQENIiIQBAwpEQSAhpkRAAIOFICCSEtEgIAJBwJAQSQlokBABI
OBICCSEtEgIAJBwJgYSQFgkBABKOhEBCSIuEAAAJR0IgIaRFQgCAhCMhkBDS
IiEAQMKREEgIaZEQACDhSAgkhLRICACQcCQEEkJaJAQASDgSAgkhLRICACQc
CYGEkBYJAQASjoRAQkiLhAAACUdCICGkRUIAgIQjIZAQ0iIhAEDCkRBICGmR
EAAg4UgIJIS0SAgAkHAkBBJCWiQEAEg4EgIJIS0SAgAkHAmBhJAWCcFXpaWl
S1LmpthGTZ06VQbKWHkdVgkBnan/QfLfZGqKbaz6b1WaEkrxYoOEQEJIi4Tg
K9mmqYSQaQtmbgDl34DLBuhvn/99hMoJ/A8qBAmBhJAWCQFADHAYoRAkBBJC
WiQEPaljp2GXAgiUOmIQdimSiIRAQkiLhOAhD7dv6tgpW0skhKzq6pSchzP0
alZJQEIgIaRFQvCKH7s/7FIhCfi/EzoSAgkhLRKCJ/zbHHGnA2LPpzWckJA9
EgIJIS0SgifYEAEaImBniYRAQkiLhAAgxkgI2SAhkBDSIiFEC5s7xIDqBiTs
UuD/kBBICGmREKKFuyARdeo+nXALEOK364mEQEJIi4RQiOA3NWrryiYO0RXu
Cszli2mREEgIaZEQ8hbWho5NHKIrrP81Zv/M3va6EBskBBJCWiSE/IR7pJQr
tIFszLWY2iDccxx6IiGQENIiIeSHQ/2A/tQTVG1ICE4kBBJCWiSEPIR+qRWA
LKn+nEkI7kgIJIS0SAj54QACEBXWUwxK2CXSDgmBhJAWCQGA30K/OJCE4I6E
QEJIi4QQaWzrEAmhr6i2cw3hFkZDJAQSQlokhEjjzkfoT5PrdqwhgbOENiQE
EkJaJISoY4cImtPnxh8SQiYkBBJCWiSEnGiyN2Slz+YXcNLqv4x5GIEjbzYk
BBJCWiSEnGh4VJ/ek4DsqZCg2//i0JEQSAhpkRBywg47EHUkBCcSAgkhrZgl
hBGRFfaSA3QU9v/L/IW95HJjFjv0plmTvyhWoh9syyHqy0SVP/CNQUGM6C92
wCf1/zVWrAj7/2huVIHDXnK5MQsfetOsyd+3VZl4tuUQ9WUyoqHB9Wmd8a/A
ns8ZiAGzwY3Ef2drgf2YuX9ICM7VI3KV6AcSQribFE8SApdGQFsFXrpDQggG
CcG5ekSuEv1AQgh3k1J4QtDqbjLApsDbf0gIwSAhOFePyFWiH0gI4W5SCk8I
Gt6ACZhICJFAQnCuHpGrRD+QEMLdpBSeELgBEzojIUQCCcG5ekSuEv1AQgh3
k+JJQli/fr13JQK8VOBZMBJCMEgIztUjcpXoBxJCuJuUAhOCbH45xYAYIyEE
g4TgXD0iV4l+ICGEu0kp/BgCEGMkhGCQEJyrR+Qq0Q9RTAilKWlHkRCAOCEh
BIOE4Fw9IleJfohiQjBSPaunvUKPhADECQkhGCQE5+oRuUr0Q0QTgsQD9RRX
W04gIQB6yu+CGRJCMEgIztUjcpXoh6gnBFtOSE5C4CZHREt+tz3GLCFo+3+W
hOBcPaLSGvpK84SgtiqSAWzDbQnBzAkJSQj0koQoymO9jUFCUPd7mtso272f
MnbOnDmhJwcSgnP10K01DIW2CUEFg0yblLQJQUj5VU7waZ3x/GfmkRDoZhnR
lWtIiEFCMPZ16MCMECEeGCQhOFcPfVrDEOmcEFxGpY0HKiGof31aZzz/mftM
CM49jqKiIs+LAQQmgQkhSy53afmNhOBcPfRpDUOkbUJwkfb8giLll+1PPBKC
bCvUr3MO97wYgJ4SlRBCREJwrh6Rq0Q/aJIQpFnP8si56kUwU9iOzXUIZjxw
JgQgORKeEAI7n0hCcK4eJARDj4QgLb5XR87jkRBsp1E4aIC42udx9YQnhMCu
SSYhOFcPEoKhQULw9r9ADBJC2qssPP9eQAfqIj2XkJDwhGAEFRJICM7Vg4Rg
6JEQPJxb1BNCposwubcRMaYuIsp43jDZCcEIJCSQEJyrBwnB0CAheCvSCcHl
Hg1CAuIt01NKSQiK36caSQjO1SPqraEnSAjhblLMAmfq4WFqQ6cQXI2ABCIh
BIOE4Fw9IleJfiAhhLtJkXlK0z8i1Y2DeecmkQCYM2fOt72kkhD8R0Jwrh6R
q0Q/hJUQfGr+opgQzG4ciASASd3mQEIIBgnBuXpErhL9EEpC8K/f4CgmBCP6
h24An5AQrPzrdJGE4Fw92CwbISUE/7ofJyEAcUJCsJk0aZIfsyUhOFcPNstG
GAnB1wcPkRCAOCEh2PjUOwoJwbl6sFk2SAhhb1JICIALEoKNT30jkBCcqweb
ZSOkhODfJXlmgxshBgkByGBEQ4MbISSEGPx9W5WJZ1sOUV8mIziGAMSIfw2u
j1sJn+9l8GMPi4TgrEc2ywYJIdf/+74V2PM5AzFAQggGCcFZj5GrRD+QEHL7
v+9bgT2fMxADJIRgkBCc9Ri5SvQDCSG3//u+FdjzOQMxQEIIRsaLKoAAE4Kv
lykaJAQgXkaQEAIRUsuDaLCuJ76uh77e6miQEIB4GUFCcPCjh3ZnW5Bwamn4
sYZE64+EkNv/fd8K7PmcgRggITj5ccMjCcGGhGCuzySEHP7v+1Zgz+cMxAAJ
wcmPXutJCDYkBHN9JiHk8H/ftwJ7PmcgBkgITiSEAJAQzPU5yIRgpA6R+Tdz
EgIQJyQEJz8ezUBCsCEhmOtzwAnBVyQEIE5ICE6+9qno+ZwjioRgrs8khBz+
7/tWYM/nDMQACSEYJAQbEoK5PpMQcvi/71uBPZ8zEAMkhGCQEGxICOb6TELI
4f++bwX2fM5ADJAQgkFCsCEhmOtz8AnBv9sZSAhAnJAQgkFCsCEhmOtz8AnB
p0ecGyQEIF5ICFb+3S1OQrAhIZjrMwkhh//7vhXY8zkDMUBCsPKjJwSFhGBD
QjDX51CuQ/Djll6DhADECwnBaubMmSSEYJAQzPU5lITg02EEEgIQJyQEk68d
0pIQbEgI5vocSkLwCQkBiBMSgsmPRzqaSAg2JARzfSYh5PB/37cCez5nIAZI
CMEgIdiQEMz1mYSQw/993wrs+ZyBGCAhBIOEYENCMNdnEkIO//d9K7DncwZi
gIQQDBKCDQnBXJ/DTQilpaUeXrJIQgDihIQQDBKCDQnBXJ9DP4bg4Z2PJAQg
ThKeEHy9f8GKhGBDQjDX59ATgof/C0gIQJwkPCH410WSDQnBhoRgrs+hJwQj
FRKKiooKnw8JAYiT6CaEwvd6lixZEswBBIOE4EBCMNdnHRKCkQoJhc+EhADE
g7SPU6dOjW5CKLB4/nVNnxYJwYaEYK7PmiQET5gNboQY0V/sgOfUyccRDQ1u
hHClYgyopRF6Ax36n22t0GQNKU3J44OBbww84/kyBGIg7P+X+cvjxwZzyUFa
hRQ7ltTSCL2BDv3Ptlbos4bMTcnjv0zA/8vk66ammEOk2GpIlucQfe1MFYi0
JQ2mZuby8cDuBTBLmN//ZfUbSQj6ICFonhCMhv/dwnk+TvWioK7kCfJsnZOZ
EMxiWLdm1q1TwCcWgaiztu/yv2nChAnOeOAeAPI+GpkH9R/fOXxuA2cGUD9Q
bT3C3TiQEGxICPonBGX9+vW2IWYw0GHv20wIZkiw7e9Y/+OHvh0AIsR6FHHm
zJlpE0LoWwCrtHGltEHa//6alJ+EYENCiEpC0J/tgKc1MzhDgofdQwEx5uxt
VbWz5lm8fZ5iQPZICDYkBBKCV5xhwLmnYz0H4XIYQZMdCkBb6oi97RRDYNcb
xBUJwYaEQELwijMM2HZznEcSMgmsCzUgisyArc7lmf9Z+I9TIBKCDQmBhOAV
Zx5wXnqd5a0Z7AoBLqz/g9wPIHj7SLjYIyHYkBBICF5Je8TADAa5bqa4mhFJ
lsehgLTZm6MKOSEh2JAQSAheSZsQJkyYoPZr8mjxdbhHAwhefvE47UdICDkh
IdiQEEgIXrGeUzA7eHnjjTfUWJc7sjmhAJg8PMXG2bpckRBsSAgkBK+ohGBm
g5w+yAkFQHHZ68/1qBoHEHJFQrAhIZAQvGJt6KfmeIM2IQEwXDMABwQCQEKw
ISGQELxi3bLl0eK7hwp2hZBwuaZu5IGEYENCICH4JNcNmnvX8RwvRZK5rP/8
1/AQCcGGhEBC8EmmFn9xSh4zZB8KiZXpiBynHrxFQrAhIZAQgpdfW8+1Coir
vA8CZDqAwP+U/JAQbEgIJITg5d3W00MC4ifv4wCZPsiBhbyREGxICCSEULgc
RiADIFHyPn2W6UQeVybkjYRgQ0IgIYTC5bpEziYgOdxb8/waeq7YyRsJwYaE
QELwVd79xxISEHvupwPyO1nAKYZCkBBsSAgkBL/lt0fDfhASLr+TBZxfKAQJ
wYaEQELwmx+HETjIgHhzX8OJAT4hIdiQEEgIfvOpNedyLMSV+5kC1nz/kBBs
SAgkhAC4bO4KuZCb861IGlZ7X5EQbEgIJIRwFXKEgXMNiKJCuvVwOYDAgYXC
kRBsSAgkhNAV0tCzVUS0FHIQwP2zXNxbOBKCDQmBhBC6fV6UxYECxEYhVxG4
95zA2YfCkRBsSAgkBB24bzPZOUI87LMDBD/OPiB7JAQbEgIJITB5Hw3gegPE
g3sjnncrzwEEr5AQbEgIJITA+HdRYiE7X4AOCrw+wdvCJBYJwYaEQEIIUoEh
wac5A6FzP4DAuh0MEoINCYGEEKR97igVchEXB1oRUe4n4Ei/gSEh2JAQSAgB
c78ZfMqUKYXMmQ0pNFTIakn0DRIJwYaEQELQSoGtPNtS6KbAJt6Px0MjExKC
DQmBhKAbDgUgTgrsAMHzx0PDBQnBhoRAQtDNPhMC3SMgKnxtxOkDwXMkBBsS
AgkhcjjIgKjY5x0KPJREKyQEGxICCSEshRwK4DACoq7Awwv8F/ADCcGGhEBC
CIt/O1DsXkF/BZ4j4PyCH0gINiQEEkKICtkPct9CEhKgs30eQOASxFCQEGxI
CCSEEPnXlzIJAToj3+qJhGBDQiAhhMu/2xbYzCIshYRb7mEMEQnBhoRAQtBZ
Ia08j3NCWAq5xoAHNISIhGBDQiAhaI6nOiJaCnxKo/vazuEFX5EQbEgIJAT9
uW8Vue0LWvGvn2S6SPIbCcGGhEBCiDquN4A+/HtKIwcQAkBCsCEhkBB0UGAr
z2EE6M/XRzjBEyQEGxICCUETdKCEeKOJ1x8JwYaEQELQh3+HAjjIgHDxlMZI
ICHYkBBICPrw76mOHEaAzji8oAkSgg0JgYSgFf/6muMwAnyV90EA4qs+SAg2
JAQSQrTk3dCzjwb/5N3K7/P8gsyWVTcwJAQbEgIJIVr22YESu2MIXt6nCXhA
g1ZICDYkBBJC5LhvVDmbgIC5HwdYvHixH7OFH0gINiQEEoKGeKojIsTlRMDi
lPxmy+WLwSMh2JAQSAh64qJERJ2073PmzMn74wTd4JEQbEgIJARtFXJvY6ad
L44wIDASDzKthzxxTE8kBBsSAglBWz491ZEjDAiArJwu5xc4g6AnEoINCYGE
oDP3W73yOyDAYQSEi0sQtUVCsCEhkBAiLb8DAhxGgCfyi5r+PR4aBSIh2JAQ
SAiRlt8BAc4Co3D5HQrw7/HQKBwJwYaEQEKIOpetNNtb+Mfzawk4+xC6EUBm
1vUkxLUUHuKEAvzg0prn3U8yly+GLuwmCFqzrichrqVwyvtoAIcR4IdMrXne
xwFYUXXAlh/ZYD3RUN57WBxGQGA4DhBpbPmRDdYTPeXX1me6LpHHPMFb7qce
WNn0F+oxbERJ2Ksq0nDfzLp0YZcJhxfgoUxXIHAJIgCEK4/tsDVycHAYPuHU
AwCELtdjueb08i/HE5CNXNt6l8c7cmwBAIKU5f6aOY1Mr+KBYEcP7vJo011W
Ko4tAECQXDa55lGCmTNnTpgwYaoDm2u483Cvn3gAAD7J4+LwJQ0kDEyaNImE
gFylbdbzXhW9KxcA4Dty2gtT9zbKR5zBwMRGGy4yHUAwj02RMAFAH9lcXmhe
ZmDjTAskBLhzP4CgrmkxhwdaMgDAd7kcrbV2lJQ2JJhnHEgIyJs1o1rXK9Yl
ANCZdevtDAlqG05CQCGs/WmotWjixIncwwgAmrPtytlCgtqMWwdqlRA4qR0t
tpNWc1OKiorMCej9AAC0YgsJts24OY01M4TIei2lszAzZ86MZWxIe1hefumU
KVPmNvDkDgJfOU9jTZw4ccKECdYJQiweAMDJ1tRaQ4K13yQdEkKmh0yZYzM1
lxGlsplq6zM90cBkG6WqLJiQsM/df/MUg5W6o1aVME61BgCRk/1OpfO0gtrC
B5wQ8tsLNnOCH0UKWN7tu7VFDiAk7DMhOO+LsQ7R7XAHACRN2I8DzVPYiy16
wq6xPHEMAQDCMiLV2obdDuTALDNyIgtNdszDrr0cqNLqcBoLAJJJbY19mnOj
V1/1/M+rAqvuIgufj98Kv5hfzSGiFc2lCAAQlog2HJ6UUP8z3dI4zpw5s/CZ
RDch+FFgAEA2Et5w6HwznbddASS8ogEAuUp4w6FzhzyZbmbMT8IrGgCQKxqO
hJzmpqIBADmh4UgIKhoAkBMajoSgogEAOaHhSAgqGgCQExoOkyYXJPjUAwAV
DQDICQ2HSYfuEdRzKv2YMxUNAMgJDYdJhzsf/etCkIoGAOSEhsMq3A6UfI0o
VDQAICc0HFahn2jw79upaABATmg4rDS5WNEPVDQAICc0HAlBRQMAckLDkRBU
NAAgJzQcCUFFAwByQsOhidIU/+ZPRQMAckLDYSPNdCi3M/jXE4JCRQMAckLD
YRNWv0kkBBICAGiFhsMplH6T/P5SKhoAkBMaDicSQq5zjmhFAwBc0HDYhHWW
gSsVSQgAoBUaDqdY9qxIRQMAckLDkRBUNAAgJzQcCUFFAwByQsOREFQ0ACAn
NBya4ErFhFQ0AETFiGjyb4GEcqtjAF8ddo3lyb8FAgBw5992eEQEdy3DutVR
8bVbRbXcfKoR/wrsx5wBANkgIViFmxCWpPg0cxICACAnJAQrvx+O4I6E4Cyw
H3MGAGSDhGAK66mOtjL4NGcSAgBgn1RTKKZOnUpCSIiIJgRZRUM87wMAsafy
gGxppzqQEBIiognB8P8+UABIGnXRnTMSWMk0JISEiG5CAAB4Tp1HSMs8cktC
0JAfe82xSQgq+nJUAQAKlDYkWK/HIyH4egdB3jwvVWwSgtEQErg+AQAK4UwI
tnYn4QlBz3igeFu2OCUEJdzOKwAgBqwhwdniJDkhqKs3PZmVT6QRLCoq8mRW
8UsIhp83hwJAEpgJIe0OaaQTgjpfv8Qi+4PPOvR+EKRYJgQAQE7Wr19vfasS
Qqa9rYgmBPcbNPz4OVFHQgCAhJM8kNNx6ZglhEwHEMxDDX780sCoM+/yK/JI
QbFPCEk7KAQAOcmjEYxZQrD9fNVqqOQQj+ZD/SLV04XzF1lPu9hSROwTgqH3
dacAEKL8Lu2OaELI1B+UrVmM936l88eqyzASmxCMsJ+9BQB6yq8pjGhCUF/h
zAm0DpkkJCEIWQ08LwwAJFCkE4JinkrIdL8GjCQlBACAJ2KQEEychnZBQgAA
5CROCQEuSAgAgJyQEBKChAAASVNg7/QkhIRIYELgslUACVfg7V0khIRIWkLg
uU4AQEJANpKWEAxuewSQeAVuBkkICUFCAICkKfBQKgkhIUgIAICckBASIoEJ
QT2lwqvyAEDSkBASIoEJAQBQCLURHhEdZpmRkxFUNAAgF2G3A3kKe7FFT9g1
lqewFxsARJiGZ1p5Am8C8dgsANCNhs0x15AnkG7P1uQyRQDQ7YGG6lnMYZcC
QZvaIOyCfEvD5AwAwdNns4zEkhZZq8MIJAQAMPQ7jIAEMhOCDiGBhzIAgMIp
V4ROUsFUi3BXSA4gAACgCVtCCHcXnngAAFrhGsUksyUEHc41AAA0weUQSeZM
CIQEAIDCyd8kk6p3JgTusgEATYS4Fy/fW1RUFMpXQwfWhCBZcUmDIEMjhywA
wEVYe23cXAbzAsVQDiVxhyMAuGM7ibCEuwvPSS4A2CfuKUDSEA8AAIAN2QAA
NMTGGZnQ1ScAaM6/rXTAV6ojcugiAwB05tNWmo0/suHf6uf5PAEggWRz6u0N
DsQDZM/ztYXVDwA8pDq08Wq7yvYZoVB9O7P6AQAAE7fxAkBgsr/OkCsS4RXV
0LNGAYDO5s6da/ai79xiq7O9qqd9tufwUFFRkbnuZVrx1ASseAAQItVRs+34
rdrR46AufOXsM0GtdRIhyAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK98g8CFXed2qlR1
dXWqbDt37ty+fXtZWdnWrVu3NNi8efMm6KS0NOe/zZu3mH9SueXl5VLRUt1q
HVArgIbrJ4CAWRss2TLs3bt3D3wmC9ncCOuzKVYlkbLJ623btkmTUVFRUVlZ
KQXWpITwg6yPtbW1UtE76m2XqpeBshros2YCCIUZDFSDZUsIst2ogUdkYToT
grnkw90Um9lACik7kmVlZdXV1bQOOpPKkb+6b759sbeu/m/P3m//al3/zMnU
p6zVLCtjVVWVrACyGsjKQE4AEstsF8SuXbtkn1F2H8pTylK2wlNqqaolrHbS
ZbGrVBbudlhlFWkRpFRSQskwYZUE2bDGg73fGDuqjc27jOIKY+MOY8N2Y/12
Y53rn0wgk8nE8hH5oHx8b8MMFVkBZDWQlUFWCfOUE4DkUNlAHSiQTcGOHTt2
794tr8MuV1LIopYFXn9Ud/v2mpoadWAhlE2xGQ8krkh0Cb4AyIlqymXfX6za
aryy2LjxLeOnLxpdnjZOGmuc9Kes/8bWf+TcF+s/LjNZubV+hjJbMyfIyiCr
BCEBSBq1xyr/96uqqiQeSFMVdomSq7KyUkKCVIRUR/BHEtQ3Sj6RtmDTpk3S
FgT57cjJNw3nFGrrjKo9xoRFxnkvGv812vh/nzBOeNL4/ph8/o5/sv7jMhOJ
Cs/8u362MvNvj1HUfSOrhKwY6kIUQgKQBObJBWmVtm7dWl1dHXaJkq6mpkYq
Qqoj+NMN5gEEdeIjsO9FHtTRgz17jcpaY8wHxg/+aBwj2WCM29/xY4xjn6j/
O+7JfUwp05z4J+OPH9TPXL5CHUlQpx05jAAkh2oUVKvE0QNNSEVIdUilBLwp
NrNiSUkJWVFz6opE2c1/b63RaUz9vv/xT7r9yQTHPWFcONn4xUtG57H1Bwr2
Ob3MVmYuX7E3dSShurpGVgwzu4a9AAD4yzyqXFFRUVZWFnZx8H+kOqRSAj6i
qxJCZWXlxo0bOcWgM/P8ws4ao98b9a25+98xj9cfZBj9vrG7tv6AwLSlxpnP
GkeP3vcHZebyFepcg8RVWTFk9SAhAElgHlVWNzSFXRz8H3WbYcBHdFVc3L17
99q1a4P5RuTHPIBQXlV/OkACgMufJIHuzxvz131nDqvKjKv+Wj/K/bMyc/kK
8zCCrBiyetAnBpAEap+xurq6tLSUm9q0ItUhlSJVE+T+mpkQ1qxZE8w3Ij+y
Ruypqz8gsGlXfSv/Xxn+ZFTHx4wrX6u/mVHZXmV81XCHyq6a+lEygfy5zEG+
Qr5oTyohyIpBQgASwmwRNmzYwH95rUh1SKUEvDU2b2RYvXp1MN+I/JgJoXTn
t0182r8jRhkj5ho1e7/91LLNxqV/MbqNN+Z89e0QGSUTHPu48b1HM85EvsJM
CLJimLczhPXbAQTDTAjr168Puyzf0bt3784WXbp06d69+4ABA77++mufvnHj
xo3z5s3zaeb5kUoJJSHs3Lnzq6++2vfUCI9KCLtqjK8rjA6PZvx7ruj/PjLl
U+OHTxvtRxlH/qH+9MED8+qvLlD+scro8lTGmchXyBephCArhqweJAQgCbQ9
73zKKac0b978fxr06tWrTZs2jRo16tChg+xZe/515eXlrVu3HjZsmOdzLkTw
53xJCFGhEsLOmvrTB9LiZ/qrTp05rKw1hs+tP2XQ7pFvhx8+qv7wwm9eq2/9
lXNfyDgT+YqdJAQgecyjyrqdd5aE0K5dO+sQKed1110nIWHMmDGef11JSYnM
WbeEIJUS8BFdEkJUWBOCNPeZ/vq8aoz7t3HF/xrtH6n/+87YR+oDw+nj6ycY
Mrs+MGSaCQkBSCZtWwRnQhDz58+Xdvyqq65Sb6XkTz755C9/+cvu3bsPHjzY
emzh9ddf/+///u9u3bpdfvnlL774ojk87Uc2bdp02WWXyZy7dOly0003+f/j
shX81ljb9QE21oTQbmTGv0MeMto8UP9vpgkOe7h+goMfdJsJCQFIJm1bBGdC
2Lt3729/+1tpxx9++GGj/qlzdT/96U/l7X/9139JDDjooIPatm27bNkyGTV9
+nQZftxxx/Xp0+f73/++vL733ntdPiIJ4cILL1QfueKKK0L5vWmREJCJNSFI
K5/pT7JB2weNQx/KOMGhD9dPcEjmCeSPhAAkk7YtgiSE/fbb79cNpGU/4ogj
1G7+jh31N2698MIL8lZ2+dWWavny5U2bNu3Zs6e8vvLKK5s0aaImq62t/eEP
f9irVy/3j+h5loGEgEysCeGQhzP+HfmH+qcy/T+PGK0fSDP2oAfr/5UJOj72
7eu0fyQEIJm0bREkIUgr/4Mf/KBTp07qGsUWLVpIE2929KfOC7z66qv/biAT
t2zZUn7RiBEjZNTZZ589YcIE66kHl4+QEBRt1wfYWBPCwQ9l/Hv+P0bRRuOZ
RfW3Khxw/3dGtXmgPj+MfLd+gr9+Xt8hc6aZkBCAZNK2RbCeZaiqqrr22mul
Be/Tp485wamnntoona+//nr37t2XX365BAw15Ic//OF7773n/hESgqLt+gAb
MyEU76hv6zP9bW140MrqcqP3X4zW9xsHpobLix89Xf/MBdNPnsk4k2ISApBI
2rYItusQ9u7de/rpp0sjPmrUKDXkvPPOk7f//ve/V3yX2TPk5s2b//znP0tU
aN68+f777y+/0eUjJARF2/UBNmZ/CNJ8S3Of6e+8F4wvNn/7kc27jEunGgeM
MJrfZ/z0+f/rZbGs0rjhb9/GhrR/8hVmj0kkBCA5tG0RnFcqrly5slWrVvvt
t9/nn38ub2+++WZp0ydMmKDGVldXd+/eXTKA/Jwrr7zyRz/6UW1trRo1aNAg
mXLRokUuHyktLZVRQ4YMCfAn7ltYCYE+FfVn9qlYUmG0Gm60GpH+r8V9xglP
GG8t//ZTNXuNe2Ybl/3F2NAQDxaXGj0mGvvfl3EOMnP5CmufiiQEICEilBDE
Y489Ju346aefXldXt27dOgkMBx988J133vm3v/3tkksukVHjxo2TySZOnCiv
r7jiihkzZkgeOPLII9u2bSuBweUj0ibK65NOOumPf/xjCL82g+C3xjyXISrU
k5sqU89lOECSwPCMf/vdW3984I5Z3/aeJGobOmF+4T/G0Y8ZTYa5fVw+K18h
X7SX5zIACWMmBN32Gbt06dK+fXvbwL179/7whz+Upnz8+PHydsGCBT/4wQ/U
tQTHHXfckCFD1FZL8sOgQYMOO+wwNUqmKSr6tvPZTB8Rffv2bdy4sQwvLi4O
8Ie6CTEhrF27liZAZ+azHbfsNk54sv4ggMufhAT5+8WfjbXbvv34rpr6zNDm
/vp44P7ZE8fUX8zAsx2BBIrBUeWysrK0hZc48fnnn5eXl2f/ke3bt6t7JDUh
hQy+12VZbpWVlRs2bKiurg7mS5EHWSPqvqk/a7C92rjnH0bj338bA1z+mg4z
Oj1pvLrEmLmiPi3I22bD9vERme09s+u/Qr5Ivk5WxfXr18vqEeTzRgGERdvn
MsAI6bkMsvGvqqr6+uuvt23btu8PIDzmpQhflRn/3zP1rbk0+u5/Mk2ju1J/
92Q1scxWZm5ehCARWlYMWT1ICEASWJ/tyH953axbty74hFBXV1dTU1NWVrZx
48ZgvhT5MQ8jVNQYizYap42rb9YbDa1v/aVxb5LXX32EuKd+Jk1/b/zk6frZ
yszVAQQj9fxTWTFk9ZCVhM0FEHvWo8rmxf/QgWyHZYMc/BFd88ST5BOtzrnA
SV2NUL3HqKg2Vm6tv7Tg+08aB95vNBpiNLrTaHRH6u/OLP7MKYfWf1xmctvb
xoot9bOtTl2BICoqKmSVCPhRYgBCpBJCdXV1SUkJzYFWpDpKS0ulaoJPCGqV
KC8vV7dbBvbVyIM611CTCglllcZHxcafPjBueNP4n1eMS182/vtl45Ip9X8X
p/u7pOFPJpOJ+/yvcdPf6j8uM5FZ7aypn62KB+p2J1klgl8hAYTFelRZn2v4
IaQ6wjqia16NsH379lWrVm3ZsiXIb0eu1OmGPamDCZW19X/SuG+vNsor629D
2Lyr/m9Tur/NDX8ymUy8var+g/Lxqj1GTZ3xTcPMZQWQ1UBWBq5AAJLGPKq8
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
JBWkjktn8xHqVHN51CkABEydCZV9mYqKCm93Nnv37t25c+e33nqr8FlNnz5d
ZvXJJ5/k9Km333574MCBnTp1atas2bHHHnv77bdv3bo1yAKYunbt2jll5syZ
+c1BqkYqSKopmzPX1Kl/BTAFXKcAEDx1OFr2aNRd217NdtmyZY1SzjvvvMLn
9vzzz8usFixYkP1Hxo8fLx9p3rz5+eef379//44dO8rbc889N79NcR4FsGrS
pMmJJ54ozVne7ZFUjVSQVFM2B6WpU58KYBVwnQJA8MzD0SUlJdXV1V7N9o47
7mjcuPE111wj/65YsaLAueW6MX/llVfke0855ZQdO3aYA/v27SszGTduXAAF
sJHWRBZFfp9VpGqkgrI8KE2d+lEAm4DrFACCZ7YmxcXFe/bs8WSeMp/27dv/
5Cc/KSoqko3w7373O3PUokWL+vXrt3DhwgEDBpx11ll33XXX4sWL9znK3JjP
mTNHppEpzRl+9NFHtiGie/fuLVu2/OKLL6wDy8vLpX259tprZd9NPmJtVmQJ
DBo06OmnnzZS220Z1bt375///OcypLS01HC0JrKsbr311nPOOadXr16jR482
l1tlZeUDDzzws5/97Oyzz5ZfIWVTwwtvTeQr5EtzTQjUaWzqFACCp05Y7969
e/369V7Nc/r06bLtffzxx+V1p06dDjnkENkMqlFTpkyRUS1atOjatatswNu1
a3fwwQevXLnSfZS5MZddV3lx9dVXm98l7cJ+++1nPdsuP6dVq1ayqXcpYZcu
XWTm5v71rFmzZLbPPvtsXV2dtCPyukOHDtKayJylAZKB1tZk2bJl8ovkrXxF
jx491AuZRkZdeeWVsp8rTcmll17atm1b+bhqUApvTYRUkFSTOm3tPiV1asSu
TgEgeGZrsnbtWq/m+ctf/rJZs2abNm2S16NGjZLt7aRJk9Qo1WTIJlp17rd6
9WppPs4//3z3UdaN+Zlnntm6dWspsJHav2vTps2vfvUr67d//PHHMvH111/v
UsIxY8bINNOmTVNvr7jiCtk/3bFjx+TJk2X4kCFD1C6ktC/y9vkUswDSysjr
d955R3125MiR6gfKkpSZXHjhhWq47DgfeeSRTz31lOFRayIVlGtCoE5jU6cA
EDyzNVmzZo0nMywpKZGm5KKLLlJvi4uLmzZtetppp6m3qskYPny4Of1ll112
4IEHSjFcRlk35s8995y8njp1qryWf+X1G2+8YS2AOgwue6wuhdyyZYvsDF58
8cXyuqKiQlqBPn36yOsbb7xRtvyqqTJSR6qlUZBWxiyALCv5YMeOHf/dYMaM
GTLqqquukulPOukk+e39+/d/8803zZkYHrUmUkG5JgTq1IhLnQJA8FRrsmvX
Lq9akz/84Q/qivcWDdRb2Q00GlqT9957z5z+jjvukCEbNmxwGWVtTWTj36pV
q549exqpXb/DDjvMdr9/dXW1bPC7d+/uLNuqVau2bdumXl9yySXNmzcvLy9/
4YUXZOazZ8+Wgeecc0779u2dHzQLIHvBjdKRvWCZ7LPPPuvUqZP586U1VPfi
edWaSDVlnxCo0zjVKQAET7UmO3fu/OqrrzyZ4fe///02bdo8bDFgwADZul53
3XVGQ2vywQcfmNP369dv//33lxbBZZTtojLZuZPduuXLl8ue7M033+wsQ9eu
XQ866CBpKawDpRlq166deYL7rbfeUkebzzvvvA4dOqiTzrKbLPue1k/J/qbs
MpsFKCsrkxey+7ziu9atW2d+5PPPP3/00Ue7desmU/761782PGpNpIJUL3xZ
JgTqNE51CgDB87Y1ke2tbEJ/+9vfWgfW1NQceuihBxxwwI4dO1STce+996pR
sm941FFH/fjHPzYaGpq0o2ytybx58xqlboQ3d2Ntxo4dK6MuuOAC6wOOhw0b
JgN79eql3sqvPvzww8866yxpX4YOHaoG3n333TLNu+++q94uWrRI3spYawGO
OOIIacvM6+iKioqOO+44aTQ3btzYuXNnmYMaLs2TNF5HH320EfGEQJ3qUKcA
EDxvWxPZQ2xkueLLdMstt8jwp556SjUZsgGX3c9Zs2b17NlTtrTTp083GlqT
tKNsrYmU+ZhjjmmUugQuU0muvvpqmUB2PKURGTVq1KmnnipvDzvssFWrVpnT
3Hnnnerosey6qiHSIkirJ5Pdf//9Uh5zv9VagHHjxsnrk08+efz48ZMnTz7+
+OPlI+qaQClzixYtpGWZPXv2kCFDZLK+ffsaEU8I1KkOdQoAwfOwNamqqmrd
unXHjh2dm7vFixfLprVLly6qyejRo0fz5s3lxfe+9z3ZJqtpXEapjfmHH35o
znD48OEy5IknnnApzD333NOtWzfZN5QpGzduLJv6ZcuWWadZunSpjJJprAPf
f/99aSBUKyPNymuvvWYrgPw6+d42bdrIkKZNm3bv3v31119Xn/3iiy+k/NIg
qmaxd+/eqkvD6CYE6lSTOgWA4Hl+ztqdajLmzp0rW3vrrp/7KCfZgZXNtbr5
zt2uXbtkd7KystI5Sh0/f/bZZ52jSktLV65caT2gbSPLbc2aNbbT4oq0INJO
qfv7lOgmhGxQp3kjIQDQWVitSU6jrP7zn/9MmzbtwAMPvPzyy/MuhvzY+fPn
n3HGGQcddFBFRUXe88mStCYXX3yxNE/StOU9E/0TQk6jrKhTEgIADUWuNVG3
nrVv3956qXmu7r33XnXM+aWXXsp7JtmT1kR93csvv5z3TGKcEKhTEgIADQXc
mmzZsmXBggVpd/FcRlm9++670u6orvXztnbt2hdffPHTTz8tZCbZk33b91Pk
N+Y9E20TAnWa90xICAB0FnBrgrxpmxCQNxICAJ3RmkQFCSF+SAgAdEZrEhUk
hPghIQDQGa1JVJAQ4oeEAEBntCZRQUKIHxICAJ3RmkQFCSF+SAgAdEZrEhUk
hPghIQDQWRRbEynwPod4xaWT3oDFOyFQp2GXBQDsotWavP3224cffnijRo3W
rFmTaYgye/bsY445Rj2eb5/q6upk+r59+55yyin9+vX76KOPzFG/+MUvmjdv
ftNNN3n2G/IV14TgU52aZFFcdNFFV199tTkkinUKAMGLVmsiLXj79u0ff/xx
KXCmIeKzzz5r27atNDErVqzIZrbqMX8nnHDCVVddJR9s3br1Bx98oEbNmDFD
2hcZW1RU5PnPyUlcE4JPdWpSvTGffvrp5pAo1ikABC9arcn+++8/ePBglyG1
tbUPPvigDFR95mfTmlRVVXXo0OHEE09UW2n1+OArr7zSnGD16tUyZPLkyd79
jnzENSH4UaemBQsWNG3a1JYQjAjWKQAEL1qtSZMmTYYNG+YyZNq0abLlP/PM
MwcNGpRla1JaWvrII4/MmjVLvS0rK5PGqHv37tYJZFbPPPOMRz8iT3FNCH7U
qVJRUXHsscdKVZ5wwgm2hBC5OgWA4EWrNWncuPFDDz3kMuSTTz6ZPn26/KhR
o0ZJE/Dll1/mNP9Vq1Zdc8018sHHHnvMHLhp0yYZMmbMmAILX6C4JgT/6vTa
a69t06bNmjVrOnXqZEsIkatTAAhehFqT4uJi2aqPHz/eZYhJtSY5HZEeOXKk
Oo7do0cP6xa7tra2adOmt912WyGFL1wsE4J/dfrXv/5VJp44caKRerq0LSFE
rk4BIHhRaU22bt3av39/2btcunRppiFWeSSEefPmjR079uyzz5YPXn755dZR
khnatWu3cOHCQn5CgeKXEPyrU4kZhxxyyMUXX6zeOhOCEbU6BYDgRaU1+c1v
fiOtwxNPPOEyxCqPhGA699xzbbfarVu3TloTGVheXp7HDD0Rv4TgX5327NlT
pnzppZdmpRx11FESEuRFSUmJOU206hQAgheV1uSVV145JqWioiLTEKvsW5ON
Gze++OKLq1atMoeMHj1atS/mkGHDhskQ2b2tqqoq+KfkKX4Jwb867dChQ6N0
/vKXv5jTRKtOASB4UWlNxPvvvy+b9ClTprgMMWXfmsybN892WuGnP/2pDFm0
aJE55NBDD7300ksLK36h4pcQDN/q9NNPP/23RceOHU8++WR5YT1cEK06BYDg
Rag1kX09aSCGDx/uMsSUtjUZOnRoly5dVq9ebR34/7d37uFRVGn+NyEQSMgk
QBICCKKIcjOAgM7wJNwUkSBmVoxoQBgQDMwOy2WAMQMIuEwGJ4AIiBIYiFwG
GMJNIxAEdgQjl1FUQAxBCOQeYu4mrazu/r7b52c9Pd3V1ZV0dXWR+n7+yHPq
1KlT7/ueTr/fU5fTt2/ffuihh3x9ff/whz8cOHAAUgEHDh069KeffhINvvvu
O9S8/vrryv14mkapEDw0pnY4Podwx40pIYTozx2UTf7X+h7cK6+8olwjwJc/
UsDVq1dtK+Pj41Hp+BRcTk6OePYAQCqMGzfu22+/lfaWlpaift26dS778SiN
UiH8r8fG1Jbu3bsPHDjQtuaOG1NCCNGfOyubNG3aFDN95RoFfvjhh4CAgMrK
Stm9yBoXLlyora21q8/Ly0Pu2Lhxo8p+PERjVQgeHVNn3HFjSggh+nNnZZOO
HTtisl9WVqZQo8CMGTOGDx9erzP++OOPqampyCYffPCBO/24T2NVCBxTKgRC
iDG5s7JJYmKiuBcgvYroWKPAjRs3bt++Xa8zPvXUU+i8bdu2dXV17vTjPo1V
IXBMqRAIIcbkzsom4MiRI2+//bbt23CONRpy6NAhzDdt36P3Fo1VIfwvx5QK
gRBiSO64bGJaGrFCMC1UCIQQI8NscqdAhdD4oEIghBgZZpM7BSqExgcVAiHE
yDCb3ClQITQ+qBAIIUaG2eROgQqh8UGFQAgxMswmdwpUCI0PKgRCiJFhNrlT
oEJofFAhEEKMTOPOJnDNQz3/+OOPLmu0hQpBYM4xJYQQ/Wms2eSDDz6IiIiQ
1uXDV31KSsrjjz/erVs3/H377beln25UA0I0evToCRMmSDVPPfVUs2bNfve7
3ynUPPPMMw9ZWb9+vfseUSFoMqZok5GRMWnSpMjIyMmTJ3/22WfSLiOPKSGE
6E9jzSb4/m/btu3KlSvh2v9aV91HZmnXrt2LL77YoUMHlKdNm6a+t0WLFuEQ
218QTk9Ph2ZA5T//+U9nNcnJyVOnTkXNq6++6r5HVAiajOmmTZvQ8oEHHsBR
rVq1atmy5SeffCJ2GXlMCSFEfxprNvH390cGEeWSkhJ8pffu3VtcNMYsslev
XqgpLi5W01VmZmaTJk3sFAK4fv06Kt99912FGvEbglQImuD+mFoslrvvvrt7
9+4ihl999RUOGT9+vNTAsGNKCCH601izia+v78KFC0UZE8CBAwempKRIe+fN
m4cveWnyqEB1dfV99903aNAgzDrtFAKSETp5++23FWqoEDTE/THFAP35z38+
fPiw2CwrK4PqwODaNjDmmBJCiP401mzi4+OzbNkyZ3uR7tGgoqLCZT+/+c1v
fvGLX+Tk5HTr1s1OIYhp7OrVqxVqqBA0RKsxFXzzzTcTJ07E6CQnJ0uVhh1T
QgjRn0aZTQoKCvAd/s4778ju/dOf/oS906dPd9lPWloaWm7ZsgVlR4Vw+/bt
Jk2azJkzR6GGCkErtBpTQVJSkviB6REjRtjG07BjSggh+tP4ssm33347ZcoU
TCe/+uorx70ilTz88MPiaTcFkJJat279b//2b2LTUSEA5Jfw8PAzZ844q6FC
0AStxlTixIkTa9eujY6OxoFjx4613WXMMSWEEP1pfNlk3Lhx+AJftWqVXf1P
P/2UkJCAXVFRUeXl5S77iYmJQeNt27YdttKhQweIBBSKioqkNjdv3kTuQDOp
Q7saKgRN0GpMHRk6dKj0+qTAmGNKCCH60/iyya5du+61Ul1dLVXevn37+eef
xxf7c8899/3336vp5+67775Ljp07d0ptFi5ciBpMby0Wi2wNFYImaDWm+fn5
mzdv/uabb6SaFStWCB0o1RhzTAkhRH8aXzYBp06dwnf49u3bpZpJkyahZs6c
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
3dl3ZL4VZXs0Qb2PLm12hrOYyPooaxUhxFRQIegTZ6KhQli9evXo0aOVD1Gj
EObMmYNujx49etnK9evXHdscPHgQU2xlezRBpY9qbHaGs5jI+ihrFSHEVFAh
6BNnoqFCiI+Pnzt3rvIhISEhygohNzf3rn8lOjrasRnm8j4+PqWlpQr2aIIa
H1Xa7AxnMZH1UdYqQoipoEKwqywoKMjLy/NYvDVGzdp6cKekpERNbxUVFZWV
lVrYJYOGCmHAgAGrVq3SyC4XVFVV4dRnzpxRsEcTjOajrFWEEFNBhSBtZmZm
Pvjgg6LygQceOHXqlIdj3/CV7izq1tZDuh81alSLFi2aN2/+0ksvKfSWnZ2N
2WiTJk3Q25AhQ+p17dqW8vLynj17wqNLly7Z7dJQIbRr127z5s0N66oBBAQE
pKWlKdijCUbzUdYqQoipoEIQ5bq6ug4dOsTHxyM5YmI+bty4iIgIlz24gzsr
3VnUra23b9++4ODggoKCr7/+Gp7aLS5ky+DBg6Elrl27lpWVBavGjx9fX3sE
s2bN6tKlC8514cIFu10aKgQokF27djWsqwYQGhpql6x1UAhe91HWKkKIqaBC
EGUkR5Q/+ugjsVlcXPzGG2/gL6bqMTEx4pHyTZs2vfjii6LB8uXLk5OTUcjP
z09ISHj44YeHDx++e/dusXfv3r3Tp09ftWpV//79Y2Njjxw54nh2hZXudu7c
afcQ+9GjR3Nzc6VNlWvr4bwtW7bEgZ988omPj8+VK1dk44BzLVq0CNpAbM6f
P3/gwIH1skeQmZnp7++fkZFRX4WAQy5fviy7S/ZYX19f2Qmvh8B0fv369Qr2
KHPo0CHZW/x2GM1HWasIIaaCCkHa7Nq1a/fu3TGTsn2PDN/tTZs2PXv2LMqD
Bg1Ce3EFHi03btyIwujRowcMGLBjx445c+YgC4tMt3r1ahwVHR29devWSZMm
BQQEnD9/3pkZdgphwYIFI0aMsMvI6CcyMlJ2gVzltfWioqJgc/PmzWES+lRI
VeXl5Z9//vn27dvDw8OhheprD6Ldp0+fefPmQVbVVyHA/rFjxzozzPFYlPft
26fQXlvat2+/du1aBXuUgVDEJwHhVW5mNB9lrSKEmAoqBGkTU+z4+Hhkc1T2
69fv/fffF/WDBw9esWIFcivm40OHDk1JScnLy4MYuHHjBvaWlJRUVVWhUFNT
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
+uuv4and4kK2NHh1QTsU1u7TUCFAgezatathXTWA0NBQu2Stg0Lwuo+yVhFC
TAUVgigj1aL80Ucfic3i4uI33ngDfzG5jomJEY+Ub9q06cUXXxQNli9fnpyc
jEJ+fn5CQsLDDz88fPjw3bt3i7179+6dPn36qlWr+vfvHxsbe+TIEcezK6z+
t3PnTruH2I8ePZqbmyttqlxbD+dt2bIlDvzkk098fHyuXLkiGweXqwu6tEeg
sHafRTHX4JDLly/L7pI91tfXV3bC6yEwnV+/fr2CPcocOnRI9ha/HUbzUdYq
QoipoEKQNrt27dq9e3fMpGzffcN3e9OmTc+ePYvyoEGD0F5cz0fLjRs3ojB6
9OgBAwbs2LFjzpw5yMIi061evRpHRUdHb926ddKkSQEBAefPn3dmhp1CWLBg
wYgRI+wyMvqJjIy0ewpdzdp6UVFRd1nfcYNJ6NNlqnJcXVClPcpr91kUcw3O
OHbsWAWr7I5Fed++fcqOaEj79u3Xrl2rYI8yEIr4JGCwlJsZzUdZqwghpoIK
QdrEFDs+Ph7ZHJX9+vV7//33Rf3gwYNXrFiB3Ir5+NChQ1NSUvLy8iAGbty4
gb0lJSVVVVUW65toOBb52mJVCJhNI1eKHvr3779w4UJnZtgqhKSkpE6dOl29
evWWA9OmTYNVti+/u1xbDy40a9YMDSB+YN6JEydgoUJAHFcXVG+Py7X7FHLN
6dOnr127pmCY0bKnM19qa2sdAwWgf4YPHy4+J84wmo+yVhFCTAUVgl1ldXV1
RkbGY4895ufnJy7LL1u2LDY2Ni0tDfLgrbfeiouL27lzZ+/evUV7JHckysDA
QF9fX/SWmppqsSqEHj16SH1OmTLl2WefdWaGpBAgOZDBoUMi5UCmRv+Oz7c7
W1svPz+/SZMmMBh6BgoBSQraRuH1ecfVBdXbo2btPg2fQ/B69nTmy9mzZ3vI
ERERIX02nGE0H2WtIoSYCioEUUZGW7lypbSroKAAu0TKO3fuXGho6Msvv7x8
+XLMpjFtT0hIEO+qY8rs7++fmJiIZIp5d3h4uKQQWrVqJc3ER44cOXPmTGdm
2F5D+OCDD9q2beuYXjE5ffLJJydPniw21aytt3v3btiGAy3WyyNIAWgDreLM
DNnVBVXao2btPjMoBFmgOaOiohQ+ALJ9et1HWasIIaaCCkGUkRkx4168eDHy
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
EEIIIYQQQgjxIv8PcFc8OQ==
    "], {{0, 521.}, {347., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{1084.6374999999998`, Automatic},
  ImageSizeRaw->{347., 521.},
  PlotRange->{{0, 347.}, {0, 521.}}]], "Output",
 CellChangeTimes->{
  3.958973143098762*^9, 3.959040428054651*^9, 3.959040516106748*^9, 
   3.959040649317943*^9, 3.9590407115631*^9, 3.959040796409293*^9, 
   3.959040847217414*^9, 3.959040934158536*^9, 3.959040994923976*^9, {
   3.95904106552098*^9, 3.9590410792320547`*^9}, {3.959041220015007*^9, 
   3.959041224987422*^9}, {3.959041313684043*^9, 3.959041317955184*^9}, {
   3.9590427595545*^9, 3.959042815801812*^9}, 3.959049760298008*^9, 
   3.959050506007866*^9},
 CellLabel->
  "Out[3266]=",ExpressionUUID->"b978071c-9f06-49d7-897f-4c7b7a168df3"]
}, Open  ]],

Cell["\<\
The image displays an interactive \[OpenCurlyDoubleQuote]Spekkens\
\[CloseCurlyQuote] Toy Model State Transitions\[CloseCurlyDoubleQuote] \
explorer. On the left, a large 2\[Times]2 grid represents the \
\[OpenCurlyDoubleQuote]Current State,\[CloseCurlyDoubleQuote] visually \
showing a binary pattern. To its right, a circular graph depicts all possible \
Spekkens states as smaller 2\[Times]2 grids, interconnected by dashed gray \
arrows. One of these states is highlighted in red, indicating it\
\[CloseCurlyQuote]s the current state. Below, there are control buttons for \
\[OpenCurlyDoubleQuote]Reset\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]Go to:\[CloseCurlyDoubleQuote] to select a state, \
along with four \[OpenCurlyDoubleQuote]Apply Cycles\[CloseCurlyDoubleQuote] \
buttons, each corresponding to a specific permutation. At the very bottom, a \
\[OpenCurlyDoubleQuote]State Transformation Rules\[CloseCurlyDoubleQuote] \
table provides a clear legend for each permutation, showing its name, input \
matrix, and output matrix.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958613245118835*^9, 3.958613246027637*^9}, 
   3.95896684751508*^9, {3.959049765626305*^9, 
   3.9590497662038307`*^9}},ExpressionUUID->"f1675630-6b3e-4074-a752-\
22749db5c7e1"],

Cell["\<\
The core of this application is defined by SpekkensStates, a set of six \
binary vectors representing the fundamental states, and SpekkensPermutations, \
a set of four cycle notations defining the allowed transformations. The \
stateGraph is dynamically constructed to represent all possible direct \
transitions between these SpekkensStates when any of the SpekkensPermutations \
are applied. This pre-calculated graph serves as the underlying structure for \
the circular visualization.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 3}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958613245118835*^9, 3.958613258773169*^9}, 
   3.95896684902076*^9, {3.959049768605041*^9, 
   3.959049773264103*^9}},ExpressionUUID->"fcc00817-cef8-471b-b362-\
6f96a6aa93ed"],

Cell["\<\
The DynamicModule orchestrates the interactive elements. The currentState is \
the mutable variable, initially set to the first SpekkensState. The large \
\[OpenCurlyDoubleQuote]Current State\[CloseCurlyDoubleQuote] display \
dynamically updates to reflect currentState. The circular graph visually \
represents all SpekkensStates with their defined vertexCoords for a clear \
circular layout. The VertexShapeFunction ensures that each node is an \
ArrayPlot of its corresponding state, and critically, the currently \
selectedState in the main display is highlighted in red within this circular \
graph.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 3}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958613245118835*^9, 3.958613281856168*^9}, 
   3.958966850908636*^9, {3.959049776002952*^9, 
   3.959049777688072*^9}},ExpressionUUID->"8e5adee2-e11a-45fa-a964-\
bff6475c5219"],

Cell["\<\
User interaction is enabled through several controls. The \
\[OpenCurlyDoubleQuote]Reset\[CloseCurlyDoubleQuote] button restores the \
currentState to its initial value. The \[OpenCurlyDoubleQuote]Go to:\
\[CloseCurlyDoubleQuote] PopupMenu allows direct selection of any of the \
SpekkensStates as the currentState. The four \[OpenCurlyDoubleQuote]Apply \
Cycles\[CloseCurlyDoubleQuote] buttons each trigger a permutation on the \
currentState, instantly updating the display. Finally, the \
\[OpenCurlyDoubleQuote]State Transformation Rules\[CloseCurlyDoubleQuote] \
table, generated by the CyclesForm function, provides essential documentation \
for understanding what each permutation literally does to the underlying \
indices of the state, making the abstract transformations more concrete.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 3}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958613245118835*^9, 3.958613304994197*^9}, 
   3.958966852534192*^9, 
   3.9590497785470448`*^9},ExpressionUUID->"96f941a8-2415-49b2-a7ac-\
cb3cc91dd59e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StatePlot", "[", 
    RowBox[{"state_", ",", 
     RowBox[{"size_", ":", "80"}]}], "]"}], ":=", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{"state", ",", "2"}], "]"}], ",", 
     RowBox[{"Mesh", "->", "True"}], ",", 
     RowBox[{"ImageSize", "->", "size"}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"GrayLevel", "[", "0.7", "]"}]}], ",", 
     RowBox[{"PlotRangePadding", "->", "0"}], ",", 
     RowBox[{"ColorRules", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "->", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.9", ",", "0.36", ",", "0.36"}], "]"}]}], ",", 
        RowBox[{"0", "->", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.53", ",", "0.78", ",", "1"}], "]"}]}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stateGraph", "=", 
   RowBox[{"SimpleGraph", "@", 
    RowBox[{"UndirectedGraph", "@", 
     RowBox[{"NestGraph", "[", 
      RowBox[{
       RowBox[{"state", "|->", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Permute", "[", 
             RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", 
           "SpekkensPermutations"}], ",", 
          RowBox[{"{", "state", "}"}]}], "]"}]}], ",", 
       RowBox[{"KroneckerProduct", "@@@", 
        RowBox[{"Tuples", "[", 
         RowBox[{"SpekkensStates", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ",", "3", ",", 
       RowBox[{"VertexLabels", "->", 
        RowBox[{"(", 
         RowBox[{"v_", ":>", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"StatePlot", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", "v", "]"}], ",", "35"}], "]"}], ",", 
            "Center"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"VertexSize", "->", "1.2"}], ",", 
       RowBox[{"VertexStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"EdgeForm", "[", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Gray"}], "}"}], "]"}], ",", 
          "LightYellow"}], "]"}]}], ",", 
       RowBox[{"EdgeStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0.4", ",", "0.6", ",", "0.8", ",", "0.7"}], "]"}]}], 
         "]"}]}], ",", 
       RowBox[{"GraphLayout", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<SpringElectricalEmbedding\>\"", ",", 
          RowBox[{"\"\<MaxIteration\>\"", "->", "200"}]}], "}"}]}], ",", 
       RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
       RowBox[{"ImageSize", "->", "Full"}]}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"currentState", ",", "permutedState", ",", "idx"}], "}"}], ",", 
     
     RowBox[{
      RowBox[{"currentState", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"state1", ",", "state2"}], "]"}]}]}], ";", "\n", 
      RowBox[{"permutedState", "=", 
       RowBox[{"If", "[", 
        RowBox[{"applyPermutation", ",", 
         RowBox[{"Permute", "[", 
          RowBox[{"currentState", ",", 
           RowBox[{"SpekkensPermutations", "[", 
            RowBox[{"[", "permIndex", "]"}], "]"}]}], "]"}], ",", 
         "currentState"}], "]"}]}], ";", "\n", 
      RowBox[{"idx", "=", 
       RowBox[{"First", "/@", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"VertexList", "[", "stateGraph", "]"}], ",", 
          "permutedState", ",", "1", ",", "1"}], "]"}]}]}], ";", "\n", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Spekkens Toy Model Visualizer\>\"", ",", "\"\<Section\>\"", 
             ",", "18", ",", 
             RowBox[{"Darker", "[", "Blue", "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Dynamic", "@", 
            RowBox[{"StatePlot", "[", 
             RowBox[{"permutedState", ",", "250"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Dynamic", "@", 
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<Current State:\>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"permutedState", ",", "14", ",", "Bold"}], "]"}]}],
                  "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<State 1:\>\"", ",", 
                  RowBox[{"StatePlot", "[", 
                   RowBox[{"state1", ",", "70"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<State 2:\>\"", ",", 
                  RowBox[{"StatePlot", "[", 
                   RowBox[{"state2", ",", "70"}], "]"}]}], "}"}]}], "}"}], 
              ",", 
              RowBox[{"Alignment", "->", "Left"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Random States\>\"", ",", 
             RowBox[{
              RowBox[{"state1", "=", 
               RowBox[{"RandomChoice", "[", "SpekkensStates", "]"}]}], ";", 
              "\n", 
              RowBox[{"state2", "=", 
               RowBox[{"RandomChoice", "[", "SpekkensStates", "]"}]}], ";"}], 
             ",", 
             RowBox[{"ImageSize", "->", "Medium"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Dynamic", "@", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ListQ", "[", "idx", "]"}], ",", 
              RowBox[{"HighlightGraph", "[", 
               RowBox[{"stateGraph", ",", "idx", ",", 
                RowBox[{"VertexSize", "->", "1.5"}], ",", 
                RowBox[{"VertexStyle", "->", 
                 RowBox[{"RGBColor", "[", 
                  RowBox[{"0.9", ",", "0.5", ",", "0.1", ",", "1"}], 
                  "]"}]}]}], "]"}], ",", "stateGraph"}], "]"}]}], "}"}]}], 
         "}"}], ",", 
        RowBox[{"Spacings", "->", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], ",", 
        RowBox[{"Alignment", "->", "Center"}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"state1", ",", 
       RowBox[{"SpekkensStates", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<State 1\>\""}], "}"}], ",", 
     
     RowBox[{"Thread", "[", 
      RowBox[{"SpekkensStates", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"StatePlot", "[", 
           RowBox[{"#", ",", "40"}], "]"}], "&"}], "/@", "SpekkensStates"}], 
        ")"}]}], "]"}], ",", 
     RowBox[{"ControlType", "->", "SetterBar"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"state2", ",", 
       RowBox[{"SpekkensStates", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<State 2\>\""}], "}"}], ",", 
     
     RowBox[{"Thread", "[", 
      RowBox[{"SpekkensStates", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"StatePlot", "[", 
           RowBox[{"#", ",", "40"}], "]"}], "&"}], "/@", "SpekkensStates"}], 
        ")"}]}], "]"}], ",", 
     RowBox[{"ControlType", "->", "SetterBar"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"permIndex", ",", "1", ",", "\"\<Permutation\>\""}], "}"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Range", "[", "4", "]"}], "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Identity\>\"", ",", "\"\<Swap 1-2 & 3-4\>\"", ",", 
         "\"\<Swap 1-3 & 2-4\>\"", ",", "\"\<Swap 1-4 & 2-3\>\""}], "}"}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "applyPermutation", ",", "False", ",", "\"\<Apply Permutation\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", "Delimiter", ",", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Animate Transition\>\"", ",", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "frames", "}"}], ",", 
       RowBox[{
        RowBox[{"frames", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"StatePlot", "[", 
            RowBox[{
             RowBox[{"Flatten", "@", 
              RowBox[{"KroneckerProduct", "[", 
               RowBox[{
                RowBox[{"state1", "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"(", 
                   RowBox[{"newState1", "-", "state1"}], ")"}]}]}], ",", 
                RowBox[{"state2", "+", 
                 RowBox[{"t", " ", 
                  RowBox[{"(", 
                   RowBox[{"newState2", "-", "state2"}], ")"}]}]}]}], "]"}]}],
              ",", "250"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
        ";", "\n", 
        RowBox[{"ListAnimate", "[", 
         RowBox[{"frames", ",", 
          RowBox[{"AnimationRate", "->", "2"}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"ImageSize", "->", "Medium"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"newState1", ",", 
       RowBox[{"SpekkensStates", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", "\"\<New State 1\>\""}], "}"}], 
     ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"SpekkensStates", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"StatePlot", "[", 
           RowBox[{"#", ",", "30"}], "]"}], "&"}], "/@", "SpekkensStates"}], 
        ")"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"newState2", ",", 
       RowBox[{"SpekkensStates", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", "\"\<New State 2\>\""}], "}"}], 
     ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"SpekkensStates", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"StatePlot", "[", 
           RowBox[{"#", ",", "30"}], "]"}], "&"}], "/@", "SpekkensStates"}], 
        ")"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"ControlPlacement", "->", "Left"}], ",", 
   RowBox[{"TrackedSymbols", ":>", 
    RowBox[{"{", 
     RowBox[{
     "state1", ",", "state2", ",", "permIndex", ",", "applyPermutation"}], 
     "}"}]}], ",", 
   RowBox[{"FrameMargins", "->", "0"}], ",", 
   RowBox[{"Paneled", "->", "True"}], ",", 
   RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.959040950765892*^9, 3.959040950767271*^9}, {
  3.9590497963892307`*^9, 
  3.959049799850727*^9}},ExpressionUUID->"479e60b3-9dbc-4540-b398-\
0f1b518d5d9d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
iiuvvHL01/+7u7vDBsVfN2/eHHbs7e0d3TmNjY35fH78WZ566qm3vvWtf/zH
fywnICcgJyAnkKwrSk4AAAAAAACgIs3mnEBNTc2xxx67c+fO6Nfe3t7+/v4H
Hnhg8eLFCxYsWL58eVg5NDR0xRVXLCy4+OKLUwVnnHHGnDlzzjrrrA0bNoRt
tm7dGpZPPfXUU045Zc2aNWPOErp3x44dYUs5ATkBOQE5gWRdUXICAAAAAAAA
FWk25wSCT3ziE8cdd9zll1/+1a9+de/evdHKW2+99eqrr46W6+vrb7nllnQ6
ncvlzjnnnO9973thZV1d3dy5c4sHueCCC+64446wsGbNmsWLFx+0x+QE5ATk
BOQEEndFyQkAAAAAAABUpFmeEwiqqqpuvfXWCy+8cMGCBc8///zwm3MCw4Up
/hUrVtxwww1z5sz5xje+MfzmnEAqlQrrr7vuuk8VhOVwwPFnmX5OYGVsTCcn
UO62v2E6s7rlbvsbVFHutr+hIquQEwAAAAAAAKhIszkn0NbWVlNTU/z1sssu
u/nmm4ffnBN46KGHlixZsmrVqtWrV4eFQ+UE7r333tUF991330En1OQEVsas
ioqc1VVFGVVkFXICAAAAAAAAFWk25wSefPLJxYsXb9u2LSy3tra+853vvOuu
u8Ly17/+9fe9732Dg4NhedWqVZdccknohLq6umJOoKWlZc6cObt27YqOc+GF
F65cuXJoaKi6uvrqq6/u6+sbf67p5wTi88T+6eQE4vP2hIp8SvyUqvDEfmMx
6VjICQAAAAAAAFSk2ZwTCFasWDFv3rxTTz31uOOOu+aaazKZTFhZX1+/dOnS
0047LSzv2bPnvPPOW7hw4bJlyy666KI777wz2vH3fu/35s6d+9hjj4XlnTt3
Ll++PGyzaNGi22+//aAnkhOQEzA3bSwSNxZyAgAAAAAAABVplucEhgvzdzU1
Nel0evTKfD4fzXpHuru7w5oxO47eYLjwAoLD6ys5ATkBc9PGIp5jIScAAAAA
AABQkeQEyk5OQE7A3LSxiOdYyAkAAAAAAABUJDmBspMTkBMwN20s4jkWcgIA
AAAAAAAVSU6g7OQE5ATMTRuLeI6FnAAAAAAAAEBFkhMoOzkBOQFz08YinmMh
JwAAAAAAAFCR5ATKTk5ATsDctLGI51jICQAAAAAAAFQkOYGykxOQEzA3bSzi
ORZyAgAAAAAAABVJTqDs5ATkBMxNG4t4joWcAAAAAAAAQEWSEyg7OQE5AXPT
xiKeYyEnAAAAAAAAUJHkBMpOTkBOwNy0sYjnWMgJAAAAAAAAVCQ5gbKTE5AT
MDdtLOI5FnICAAAAAAAAFUlOoOzkBOQEzE0bi3iOhZwAAAAAAABARZITKDs5
ATkBc9PGIp5jIScAAAAAAABQkeQEyi7pOYGamho5AXPTxqIix0JOAAAAAAAA
oCLJCZRdlBNobGxMbk6gp6dHTsDctLGovLGQEwAAAAAAAKhIcgJlV8wJjJl/
L4p/TiCVSskJmJs2FhU2FuETLScAAAAAAABQkeQEyi7pOYHa2lo5AXPTxqLy
xkJOAAAAAAAAoFLJCZRdPp8PndzY2FhdXT0wMDB+jOKcExgZGamrq0ulUv39
/XIC5qaNRSWNRZQTyGQy4T+Czs7OSW9lcgIAAAAAAABJISdQdlFOoLm5ubq6
uqGhYfwYRTOJK2NjdE6gra1t165dpecEyt32Nxx0Vre5QBVHmSrK3fY3HDQn
0NfX193dPemtTE4AAAAAAAAgKeQEyi7KCbS3t9fU1Dz11FPjx2hlzGYSR+cE
nn766b179/b19VVGTiCiiqNMFeVu+xtGVzFQkE6nUwWT3srkBAAAAAAAAJJC
TqDs8vn80NBQX19ffX39v/zLvxx0mLZs2bI9NkJjig370Y9+1NbWFq6TgYGB
iXMCwaZNmzbHRmjMYczqquJIUEW52/6GYhXRwwSinEBPT0/06Z6YnAAAAAAA
AEBSyAnEQT6f7+/v37Nnz+bNmzs6Osp9UZSqs7Ozqqqqu7s7k8lks9lJ50OT
QhXxoYpyGf3SgfBJHxwcnPQ+JicAAAAAAACQFHICcZDP5wcHBzs6Ompra1ev
Xl3ui6JUP/zhDxsbG3t7e+UEYkgV8ZG4KqKQQH9/f/TSgb6+vlLuY3ICAAAA
AAAASSEnEBNDQ0OZTKa+vr6qquqhhx4q93UxuTVr1tTV1XV3d6fT6YGBgWh6
cThp86EHpYr4UMVRli0ovnGgt7e3o6OjlIcJDMsJAAAAAAAAJIecQEzk8/nQ
1el0uq6u7sUXX/y3f/u3cl8aE1m3bl1VVVVbW1tfX19/f3/0MIFcouZDJ6CK
+FDFkZYdZeB10ZMEojcOhP8FSryJyQkAAAAAAAAkhZxAfERvH0ilUrW1tVu3
bn3wwQcbGxvLfYGMFZr0gx/8YOfOnc3NzT09PeEK6e/vL04vhioGkk8V8aGK
oy+TyURPEujs7Mxms6XfweQEAAAAAAAAkkJOIFaiqEDo9tra2u3btz/55JPf
//73w8/W1taRkZFyXSTh1KEBoRkPPvjgM888U1NT09zc3N3d3dfXl8lk+kcJ
JfQnnyriQxVHR6YgXRA+16lUqqOjo/QnCUTkBAAAAAAAAJJCTiBuhoaGos5v
aWmprq7etm3bCy+88NRTT23YsOHxxx9/9NFH1xWsLVh3BIw+cjhdOGk49dNP
P/3iiy/u2LGjvr6+tbW1q6srlUr19va+9Gah/S8lnyriQxVHTRQP6Onp6ezs
DMuDg4NTvXfJCQAAAAAAACSFnEAM5fP50O3ZbDZ6P/iePXtqa2t37ty5/XVV
R0XxdOHUNTU1u3fvbmhoaG5ubm1tbW9vDw3rGic0fvzKxFFFfKjiqOnu7k6l
UgMDA7lc7vBuXHICAAAAAAAASSEnEFv7CgYHB7PZ7MDAQH9/f/p1R+f7xcXT
hVOHBoRmhMZErSp33wCxIycAAAAAAACQFHICAEyfnAAAAAAAAEBSyAkAMH1y
AgAAAAAAAEkhJwDA9MkJAAAAAAAAJIWcAADTJycAAAAAAACQFHICHCH51w29
bl9ZFZtRbFi5ewgqipwAAAAAAABAUsgJxNng4ODAwEAqleru7u7s7OyKvdDm
8LOzoKOgvb299XUtr2s+ioonLTYjNClqW9TOQ1WRdKqIj/hXET4IPT094VYT
bji5XO7w7ldyAgAAAAAAAEkhJxBPg4ODfX19xcm7sPxSEoSW9xX09vaGlnd1
dbW3tzc1Ne3Zs6e+vn7X6+rq6mqPil2jhAY0NDSExoQmhYaF5oVGRq0dX0VZ
em9mqSI+ElFF+DiEW034XITbTvhQhFvQVO9acgIAAAAAAABJIScQQ+l0uqOj
oxgPCL9mCvpjLzQ+tDO0OTQ+lFBfX7927dqnnnqqra1tZGSkvJd6NpttaGgI
jQlNCg2Lejg0dXzfhirK1YEzSBXxEf8qok9BuNWET0S47USf35cKCYfSyQkA
AAAAAAAkhZxA3ORyuc7Ozt7e3igeMJAow4WQQyqVamtrW7t2bVNTU7kv8IML
DQvNC40MTY36ub+/f3QVZezDmaKK+EhWFVFgINyCwo0om82Wfu+SEwAAAAAA
AEgKOYFYCR0ePfQ7nU6PnrnOjpKLseHCeweampoeeeSRcl/akwuNDE0NDQ5d
PbpvhwtpjaRTRXzEuYrR95biDSd8IsItKHr1SelPFZATAAAAAAAASAo5gfgY
HBzs6OiIniQwOh5Q7onEKQhVtLe3JyIkEAlNDQ0O13nU28UqytuNM0IV8ZGg
KkYHBqKnCoSbUrg1lXIHkxMAAAAAAABICjmB+Ai9HT0GP3qSQLISApFQxdq1
a8t9UU9NaHB3d3f0ioeoz4eTM6s7AVXER+KqiKIC0VMFwk2pr6+vlDuYnAAA
AAAAAEBSyAnExODgYPTGgdET1pGVMTPB9GIoJFRx0Cut3K0eq9iwrq6uXbt2
9fb2Rm8fyE04q1vuVo818Vio4miqsCqiqEC4HUVvHyjlkQJyAgAAAAAAAEkh
JxAT2Wy2p6cnegD++JzAd77znftjY9OmTRPMhx7qSotbFVu2bCm27eGHH+7q
6spkMtFD14cnnNWNVRUTj4UqjqYKq6L49oFwUwq3puhzMTE5AQAAAAAAgKSQ
E4iJVEE6nY7m5sbMJN5///1d118/zX/R94Wnf4TNmzdPMB96qCstquKrm16b
5r+oDdM/wvbt24tte/bZZ1tbW6POnzQnMINjMf0qJh6LiauYqbE40lfUbKgi
nldUdC+KXj0QTHoTkxMAAAAAAABICjmBmOju7j7oSwdmfCbxCM2HNhcMJzMn
0NbW1tDQUHz1wHAyZ3XHj8XEVcR8hn1WVRHPK2r0qwfCDWrSm5icAAAAAAAA
QFLICcREZ2dn6O3k5gTqC4aTmRMYGRkJja+YnEBxLCauIuYz7LOqinheUcWc
QLg1hRvUpDcxOQEAAAAAAICkkBOIia6urtDb/f39cgJHPycQ1NXVpVKpTCYj
J5CsGfbKqCKeV1SUEwg3pXBrCjeoSW9icgIAAAAAAABJIScQE3IC5c0J1NbW
ygkkcYa9MqqI5xUlJwAAAAAAAFCp5ARiYnRO4IjOJMoJHDQnUFNTIyeQxBn2
yqgitleUnAAAAAAAAEBFkhOICTmBsucEenp65AQSN8NeGVXE9oqSEwAAAAAA
AKhIcgIxISdQ3pxAdXV1d3e3nEDiZtgro4rYXlFyAgAAAAAAABVJTiAm5ATk
BOQEZm0Vsb2i5AQAAAAAAAAqkpxATMgJyAnICczaKmJ7RckJAAAAAAAAVCQ5
gZiQE5ATkBOYtVXE9oqSEwAAAAAAAKhIcgIxIScgJyAnMGuriO0VJScAAAAA
AABQkeQEYkJOQE5ATmDWVhHbK0pOAAAAAAAAoCLJCcSEnICcgJzArK0itleU
nAAAAAAAAEBFkhOICTkBOQE5gVlbRWyvKDkBAAAAAACAiiQnEBNyAnICcgKz
torYXlFyAgAAAAAAABVJTiAm5ATkBOQEZm0Vsb2i5AQAAAAAAAAq0mzOCYTq
Nm7c2N7efkTP0tvb+8ILL2QymYk3kxOQE5ATmLVVxPaKkhMAAAAAAACoSLM2
J3DbbbfNmzdv2bJl8+fPv/baa3O5XFi5du3au+++e4K9Ojo6Pv3pT5d+lttv
v33hwoXnn39++LlmzZoJtpQTkBOQE5i1VcT2ipITAAAAAAAAqEizMyfQ0tJy
7LHHbtq0KSy3trYuXbp09erVg4ODK1asuPLKK/v6+opbdnd3hw2Kv27evDns
2NvbO7pbGhsb8/n8+LOEfd/ylrfs3LkzLP/d3/3du971rgmaJCcgJyAnMGur
iO0VJScAAAAAAABQkWZnTqCmpubYY4+NZvCHC68G6O/vf+CBBxYvXrxgwYLl
y5eHlUNDQ1dcccXCgosvvjhVcMYZZ8yZM+ess87asGFD2Gbr1q1h+dRTTz3l
lFPGPy6gq6vr4YcfjpYfeuihM888c4ImyQnICcgJzNoqYntFyQkAAAAAAABU
pNmZEwg+8YlPHHfccZdffvlXv/rVvXv3RitvvfXWq6++Olqur6+/5ZZb0ul0
Lpc755xzvve974WVdXV1c+fOLR7kggsuuOOOO8LCmjVrFi9efKi+ymQyv/7r
v/4//+f/nKA9cgJyAnICs7aK2F5RcgIAAAAAAAAVadbmBIKqqqpbb731wgsv
XLBgwfPPPz/85pxAsGHDhhUrVtxwww1z5sz5xje+MfzmnEAqlQrrr7vuuk8V
hOVwwPFnCR340Y9+9Hd+53cm7slJcwIrY2M6OYFyt/0N08kJlLvtb5jO3HS5
2/4GVZS77W+QEwAAAAAAAJgNZmdOoK2traampvjrZZdddvPNNw+/OSfw0EMP
LVmyZNWqVatXrw4Lh8oJ3HvvvasL7rvvvvFTafl8/o/+6I8uvfTSdDo9cZPk
BI4yOYFyt/0Nqih3298gJwAAAAAAADAbzM6cwJNPPrl48eJt27aF5dbW1ne+
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
sT2XX375aaedFo7wla985aAFTiknsGnTplBFOEs48oUXXhjlBEZGRj72sY+9
9a1vDae+6aabor2+/OUvf+ADH3j7299+4okn/sZv/MaBAwey2ezSpUvDoc4+
++znnntu9+7dYZew5YMPPhiqCJu9613vCr9+4QtfuPbaa6ODfOlLX7ruuutG
N6bEnEBVVdWxxx4bzVfmCg9CD+P4+OOP//Iv/3I0Oxn68P/+3/8blv/6r//6
E5/4RFgIG4eGhb467rjjQhuiHc8555zf/d3fXbJkyfz588PQR1O3RaGKsNeP
f/zjSedhW1tb//Vf/zVa/uEPf3io7X/0ox+FLlq/fn24YELfjt8gFB5Ki5bD
xTNv3rzRs8aH8l/+y3+55ZZb/vzP//yw57Xj1p8l9sOk/VniuIxRef1ZYl0z
3p+TjqOcAAAAAAAAQEVKVk6gvr7+F37hF7797W+H5QsuuOCOO+4IC2vWrFm8
eHHUznPPPfeGG26IXkywdevWsONzzz0X/vSe97znt37rt/L5/Pr160888cTo
MQLjcwJh+dZbb7366qujU4fT3XLLLdEDyc8555zvfe97YzYYnRM4//zzb7vt
tuFCYGDBggXV1dVRez75yU+GhUcffTRsGY4zvsAp5QTOO++822+/PRq44447
LsoJrFq16rLLLjtw4EAYr7POOuuxxx57rZATWLZsWTabDQc/88wzo5WNjY1v
ectbosMWcwLB3/3d3/3hH/5htFxbW7to0aLQsLAc2v/444+Pbkzp7x24/vrr
Qwt/8zd/MzQvnCualAxH3rVr19q1a8Opr7rqqrDyN37jNx544IGw8IMf/OBb
3/pWWHj22WfnzZsXvaI9dPtv//Zvhx1bWlpCadHU7Rilz8MGqVTq137t10Ln
HPSvzc3N0Usu7rrrrvBr2GzPnj3jN7v//vs/+tGPhvb80z/906RnDHW94x3v
CJfxdOa1c7Hsz0n7ocT+zE02LqNVan+WUteR6M/chOMoJwAAAAAAAFCRkpIT
OP3009/xjnccc8wxV155ZTabTaVSYeV11133qYKwXFVVNVyYl3/ssceiHbdu
3bpkyZJo+frrr1+1atVw4dUDYePoNQST5gSCDRs2rFix4oYbbggbfOMb3xg+
RE6gp6dn9EMPPvjBD95zzz1Re9atWzdceDTBvHnzdu/ePb7A0nMCwegXELzn
Pe+JcgJvf/vbFyxY8OcFYYMvf/nLrxVyAn/2Z38WbXnttddG6YJScgLRkdes
WbNjx45w5FdeeWV0Y0rPCeQKr1P/m7/5m3e9612heU8//XRY85GPfCT0zE03
3fS3f/u3of/DBbZo0aKWlpZc4Uvcd91114033hgGK1TR1NSUK8zDfv/734+O
Fvb60z/90/FnGT0PGwb0t8eJTh2Ervvd3/3d//yf/3NYGH+ctra2M8888+ab
b/7oRz/6oQ99KFx4xx9//N69e8dvGc7yf/7P//nYxz727ne/O4qRHOq84cJY
unRp6MywzTTntWPYn+P74fD6c/y4zLb+LKWuI9Gfxb8eahzlBAAAAAAAACpS
UnICTzzxxLZt26Kp/CDKCdx7772rC+67775oGuvcc89dv359tM3WrVtPPfXU
aPn666+Pvuw/Jifw7LPPhoVMJnPQnMBDDz20ZMmSVatWhVOEhQlyAqGRxxxz
TLF5l156aWjSmPbMnz9/mjmBbDYbzpJOp6P1F110UZQTePe73/2xj33soYKw
prq6+rVCTuDGG2+Mtvxv/+2/TSkn8M1vfvPaa69dsWLF5z//+TGNKTEn0NTU
VHyeefCf/tN/+tznPhcW7rzzztCY5cuXh7N/6EMfuuOOO9773vdG24QzhuVv
fetbP/jBD0bPw373u9+NNviLv/iLg76TffQ8bBiIHeNE75cPDf7EJz7x/ve/
/1BvCghDFr3PPfTw5ZdfvmjRotA/Y7Zpb2/fuHFjcTb27W9/e/QV7EOd9+//
/u8XLFjw8YJzCkJXjz/1pPPacevPQ/XDVPszd4hxmW39WUpdR6I/Jx1HOQEA
AAAAAICKlJScQPGr+kUXXnjhypUrh4aGqqurr7766r6+vuEp5gTe+973/tVf
/VU+n7/nnnuKOYGvf/3r73vf+6INVq1adckll4QeqKurK+YERm8w+r0D7373
u7/0pS+F9jz11FMLFiwIuwzPdE4gLF9wwQVf/vKXX3nllXDYuXPnRjmBUNr7
3//+cJBwqFtuueWJJ5547RA5gZ6enmOOOaapqem1N+cEvvWtb1188cUvv/xy
9GvozFDC4sWLa2pqxjSmxJxAaF7Y/ac//WlYbmxsPO+88775zW+G5Z/97Gdh
UKLpztDssPzFL34x2uXXf/3Xw5qwEBozeh72P/7H/xiaHVr79re//R//8R8n
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
ve1th3qeQFiur6//hV/4hW9/+9th+YILLrjjjjvCwpo1axYvXhy1M5zohhtu
iHIIUWOee+658Kdwrt/6rd/K5/Pr168/8cQTo8cIjM8JhOVbb7316quvjk4d
TnfLLbek0+nQpHPOOed73/vemA1G5wTOP//82267bbgQGFiwYEF1dXXUnk9+
8pNh4dFHHw1bjiltjO3bt89sTiAccILTAcwgOQEAAAAAAICkOOycwK233rpw
4cINGzbcfffdc+bMifIAW7dunTdvXnGXM8888/HHHx8uTJf/0z/9U7TyL//y
L6Op82JOoK6ubtGiRf39/V/4whc+/elPjzlRlBM4/fTT3/GOdxxzzDFXXnll
NptNpVJh5XXXXfepgrAcfXc+nOixxx6LdgyNWbJkSbR8/fXXr1q1arjw6oGw
cfQagklzAkEocMWKFTfccEPY4Bvf+MbwIXICofzRDz344Ac/eM8990TtWbdu
3XDh0QShZ3bv3j3BLJucAJBccgIAAAAAAABJcdg5gTkFlxUUnyGwdevW4447
LpqFD5YuXbphw4bhwnT5gw8+GK286aabPvOZzwyPygkEH/jAB/75n//5V37l
V55//vkxJ4pyAk888cS2bduiqfwgygnce++9qwvuu+++rq6u6ETr16+PtgmN
OfXUU6Pl66+/Pvqy/5icwLPPPhsWMpnMQXMCDz300JIlS1atWhVOERYmyAmE
Rh5zzDHF5l166aWhSWPaM3/+fDkBoFLJCQAAAAAAACTF4eUENm/ePH/+/L6+
vujX//2///f73//+4dcf9f+//tf/yufz3//+98M2vb29w4Xp8g996EPpdHrv
3r1nnHHGAw88MPzmnMC3v/3tt73tbeedd974c41+78BoF1544cqVK4eGhqqr
q6+++uqoMVPKCbz3ve/9q7/6q9DUe+65p5gT+PrXv/6+970v2mDVqlWXXHJJ
6IG6urpiTmD0BqPfO/Dud7/7S1/6UmjPU089tWDBgrDLsJwAMGvICQAAAAAA
ACTF4eUEbr755o9//OPFX1taWubOnbt79+6tW7eefPLJH/nIR0444YTTTjvt
+9//frTBueeee8011yxatGj+/Pl/8id/Eq0cnROIng/wla98Zfy5DpUT2Llz
5/LlyxcuXBgOe/vttxdPNDonENoQLRdzAuE4xZzA6tWrFxaEBoeV0RMJ6uvr
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
u0b8j//459xl6/i37fvs88S//dubuTrjjNcHtT81Ph4fX6W94Yb58W/Jv/rV
VzpM2POA3myiy1393//N/rb9y1/+c/z2wQeL46fJf/zjD0+Y8M7s2Zme29Jd
TmD16tVbbfVAWP7aax8klzc2tm62WXZ8fBf95cuzv3Pfcsv74zvwv/56Zeck
QyyZE7j++vlxb8vLG4cMuS/+YX4yJ9DLrf/mN9kbBfz937/UYVvJnECYKj7p
p532WrK38Z0Qfve7Bd01NimOQ4wbl72PQVNTW5gw7EbyAnqHa/Q9n4Ve5gQy
mebQqJNOeiW+PUJcd9yxKP60lzmBMGH8kIX/+I+3cwv7/GUDAAB6r885gbq6
usrKyvnz569/G3xUwukIJyW+pcCmvyoIsJacAAAAbBRlZau+/OU/x79Jr63N
/jSju+uhX/ta9jfjP/959g7/5577dnyVdvPN7+tQn/zkOjmB+ObwoTbb7N7J
k8uTE/Y8oDeb6HJXb799UTInELz22gfHHfdyfD09/Pu9773Zw33ju8sJVFY2
xcvff39lh1W22+6hsPy559b8OD3+cf1NN2UvuP/kJzPC68svn915Q8mcQEVF
49Ch9x1yyLM337wwLLzzzkXRujmBXm49XuVb35raYUwyJ5CbKn7QQIfqZU7g
vfcy8Z0oQidfeKEsvD7iiOeTAzpfo+/hLPQmJ/DqqxXxsPDv2LF/+dWv5nzq
U0/0IScQn5H99nsyeWeDPn/ZAACA3sszJ1BUVJTP1levXj1jxoyamo63ekta
unRpWVlZDwPyFA5h+rref//9/KftvNvhSDf1vRfCscgJAP1CTgAAADaWDz5o
jK/exr9V7+56aHzr+PhW89deW9Tl9eik+CptqK9//dX499oHHPBUY2NrLwf0
ZhO9zAnEFi6sGz/+7TiWkLt5Qmc9PHdg++2zV+RfeaWiy/GLFq25gv/UU9mb
/3/xiy+G1+GIury4H62bE4g+jGF86lNPbLXVA3V12UvYHZ470Jutx89c+Id/
eLnDtjo8dyCOFsybV9tdE3pzTXz//Z+K9+f887P72eGBCN3d87/LsxAHAKZN
q8oN65ATWLx4ZbzPl1wyK3d9/5hjXtzQnMCrr1YMHpwNSPzlL+vclqHPXzYA
AKD38skJhE/nzJmz/m1076WXXho0aND48eN7GPOtb33r17/+9YbO/Pzzz0+Y
MKE3I48//vhPfvKTO+20U9iTT3ziE+H16aefvqGb6yze7erq6mOOOSZesvnm
my9cuDD/mXsQTkc4KXICwEdPTgAAAPpg0aKVL77Y8ccRDQ2tQ4Zkr9vOnJn9
YUWX10PnzauN7xv/xhuV0YePbh858pFMpttfKMRXaf/2b58L87e0tB100NO5
2xH0ZkBvNrFBOYHY1Vdn78zf4Un0ST3kBI4+Onth+oILpicX/vGPS8LCrbd+
cPXqNb+Ob2tbvddej2+22b0vvdTFD+1zOuQE7rtvWbzd0057LV7SISfQm63H
k2yzzYM1Nes0rUNO4AtfeKHzlf2k3lwT/+lP3w1jfvzjGXEWokPqoLucQKzD
Wdhtt8fC26eeKs0NePfdmmRO4Lbbss+SOOaYF5OTbGhOoL6+Je7Df/7nux32
p89fNgAAoPfyyQlUVFTMnt3Fjdp674wzzjj55JNHjBhRX1+fXB422tq6Jq+e
yWTC5nIfhe3GL8LC3F98sbC3uR/s//KXv0xe7m9paWlsbOxhT+bNC38QDcpN
HkvuVXLyWNjDsJ/JJdXV1W1tbcndnj9//pZbbhkvCe3KHVTyiHLCKj3sYW+E
0xG2IicAfPTkBAAAYEPV1jYfeOBTm212749+NCN+xEDU/sPts856a9Cge3fY
4eG2tux/94ivh2633UO5y8p1dS3HHvtyWHjYYc/F/22kubntM595Ov4J9qpV
a28RkPyZdnyV9tFHl8dvJ08uD2+32OL+997L9GZAbzax3pxAOKKzz542dera
VSZOfK/LX9zn9JATuPvu7EX5rbZ6YMqUNT/qX7Ro5d57Z+9+f/7561y+v+yy
2WHhnns+Hv697rqu743ZISfQ2Nga/2T+mWfWXC7vkBPozdarq5tGjMhOEs5p
fKbCvz/72cz4iHIn9K67FsdTvfrq2rsTlJc3FhWtudb/9NPZWyKE/nfXpeDN
NyvDmHhzo0Z1HJm8Rr/es3DkkdnB3/nO6y0t2f/MFXYjTg7kcgLx4xjCwtyj
Cv7nfxYOG/ZAMifQeZ875ATOOWdaeDt69DO5Zxnk9PnLBgAA9F4/5gRqamqG
DRv2zjvvfPrTn7711lvjhcOHD/+nf/qnsHyrrbb64x//GJZ897vfveqqqx5+
+OFDDjlk3333HTp06PHHHz9+/Pgwcs8995w6NXsLsmuuuWa77bYbMWJEWPH2
229/9913t95664997GM/+MEPwqfnn39+eP2JT3zihz/8YW1t1/dw65ATOP30
04866qjNNtvs8ssv7zB5+PQ73/nOmDFjwpKwM9/+9rej7F3aFu63335hWNjt
q6++Orfbhx12WJj2U5/6VFgSdmnRokXLly8/9dRTw7qjRo265ZZbwvJwaIce
euj++++/xRZbhFYsXry4zy2VEwD6i5wAAABsqMbG1h/84J34EQNDhtz3uc89
e8QRz8d3CQh1//1rLqfG10Pj+sIXXhg3buruu2cv2g4del/ypvfh9ZZb3h+W
77PPE2ed9dY550yLH0zw2GNrrvvHV2lzb6Psf994Pf4VeXwJe70D1ruJ9eYE
4gvi4Ri/8pU/jx//9te+NiWe8NZbu30EZA85geCEEyaHj8IkYapvfnNq/CyA
sHthreSwkpKG+Nb6YdOlpau63FCHnEDUngS45JJZuUvhHXICvdz6L385O97/
0KswJn46QHzSczmBYMyYV+LdO/nkKRdcMP0b3/jL8OEP/M3fPBd/unRpffg0
HMIVV8ztrlHBHns8Hm/r4otndvgoeY1+vWchflxCqF13fSysGL5pe+75+FZb
PZDLCcyaVRPf8uKww5773vfeDP/Gu5fMCXTe5+Q+vPxyedyEHXd8OHyrc3XM
MS/G917o25cNAADovX7MCfzud78bPXp0eHH55Zf/zd/8Tbxw8ODB//f//t+m
pqZf/vKX8afxDfwfeOCBzTff/I033igpKQkvTj311LAb55xzzllnnRX2ZLfd
dnv11VfDH60TJ048+OCDo8T9BObOnTtixIj58+eHvT322GPjC/2ddcgJhPk/
97nPzZkzp6ysrPPk48aN23vvvUtLS8Nam222Wfj3kksuOfHEE6Ns2H5yeBEG
x7udvJ/AkCFDFi5ceP75559yyik1NTVTp04NH4XDCYcWNv344483Nzcffvjh
l112WZ9bKicA9Bc5AQAA6Jvnnltx9NEvxhdh4xo16unkLd/j66F77/3Ev/3b
m/HF2fji6WuvfdBhqlmzao466oX48mscJDjttNcWLFjz3zrim9snZy4rWxX/
ZD6+trveAevdRHy7+EMPfTa5Vx2eO/DHPy759KefzB3sNts82MP99qP2pzDE
m+syJ9Dc3Pazn82Mf8keX5UO+1Nd3dR55MknT+n5xgXhYMOAgw7q9jf7P/7x
jDDg6qvnbejWf/Obebkx22//0BVXzD377GkdcgKtrasvv3x26EauM+EU33LL
2udXHnfcy/Hq3e1e8IMfvBOvO21aVYeP4pObu1lEz2dh5cqWuF1xguXYY19e
vrzhc597dvDge8Mhx2NuuGH+8OFrDmrnnR+57rqi+KYEd9219vcvHfY5uQ9h
fG7rHSp3ovvwZQMAAHqvH3MChx9++LHHHnvNNdecf/75gwYNevPNN6P2nMCr
r74aXrz00kt77rlnlMgJ7LvvvvGK++yzz4MPPhhe3HTTTSeccEKUjYWX3HDD
Dd///vcPOuig+Mf7uZzAxIkTd9ttt39rd8QRR8RX8zvrnBO4+OKL49edJx83
btyECRPiT3fcccfXX3897O0WW2wRX+VftGhRbrc75wRGjBjx+OOPx0viww+H
tuuuu8ZLzj777AsuuKDPLZUTAPqLnAAAAOSjtXX1rFk1r75a8cEHHR+bGOcE
PvvZ7O+m6+papkypWLKkvqs51shkml9/vTLMlruku9Hlv4mqqqZXXqkIMzQ2
tq5/9PqE7r37bk3YpeQ96jv4ylf+3PONCzbp1lta2mbMqH7nner4WRLdWb16
dVFR7dSpH5SVdXHTgzlzMm+8UbkR9vhDPZ+F4uKGyZPL41/3dyl89Je/fDBv
Xte37ozlv88fwfcZAAD+OuWZE5gzp6fIdw9mzpw5ZMiQ8ePHT2g3atSof/3X
f43acwLvv5/9k23y5Ml77LFHlMgJHHbYYfG6++677/PPPx+135HghBNOKC0t
3WGHHcaOHRveTpo0qUNO4Kc//enhhx9+b7t77rnnySef7HJ/OucErrrqqvCi
y8nHjRsXXscjP/GJT7z++uvhxeLFi6+77rrPf/7z22yzTehMdzmBcFC5ffjS
l750+eWXJw/t3HPPPf/88/vW0ij7x9ccOQGgX8gJAADAJuL+6vmbPLk89HDE
iIfq6lrWPxoAAOCvQD45gfDp3Lk9PRatBz/84Q+/8pWv5N7ec889w4cPr66u
7kNO4KWXXho2bFjYpfhu/7vvvnv46Kqrrvra174WXrzzzjvbbrvt/Pnz29ra
Tj311LPPPrvL/ekuJ9Dl5J1zAhdffPE3vvGNsIkVK1aEQ5g5c2a820uXLg1v
6+uzOf84J3DeeeeNHTs2LJkxY8bQoUPDgWzEnEA4HZWVlXICwEdPTgAAADYR
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
EXL+GnICO16+aUtOAAqZnAAAAETtf7wDhay//58EAAAUioGVEwj/Tps2bfjw
4S+++GIuJ7DLLrsMGzbs++3CmJ/+9Kdh4Z133nnSSSdNmTLl2GOPHTNmzNNP
P/2tb33rxhtv7Dzz22+/PXHixNGjR4dpX3nllVXr5gRWtV/iv+iii84888ww
+bXXXrtq3ZxAWVlZWH7aaafldiBM2HkrGysnUMjPHdjh8k1bcgJQyOQEAAAg
av/j/a5n3vz9s++odNTt7fp9N9RGqXAq77rrrsrKyv7+/xMAAFAQBlxOILy+
8sor99prr6OPPjrOCRx88MFjxoy5p92tt9765ptvhoXFxcUf//jHL7744iuu
uCIMO++883bfffeioqLknEuXLp05c2bu7Ze+9KUJEyasWjcn8NBDD+2www6X
XXZZmDy86C4nELYb78Btt91WUlLSef//GnIC21/WbX33geiOt6NT7u52wJf+
NztgwhM9TSInAIVMTgAAAKL2P95//+w7G/rHuCrY6tt/XVGFWRv6X70AACDd
BmJOoKGh4aijjgpv45xA+B/5Rx55ZEVFRVVV1fjx45988sl4lcMOO2zkyJHv
vvtuUVHRzjvvfMABB3SY84UXXhgxYsS0adPC6yVLloQBN9xwQ3h9zTXXHH74
4XV1deH1ZZddFrYVmjB79uxcTmDx4sVh63PmzInnGT16dNiH+vr6sK2xY8eG
Pem8/38NOYERE7ut6lVrxv/giS4+/btb1w4Ir7ubZLmcABQwOQEAAIjkBFJX
cgJpKjkBAABIGog5gWDBggXbbbddnBOora0dO3bs1ltvPWzYsJNOOinsczzm
wgsv3GuvveLXn/nMZ8aPH9952osuumiLLbbYaaedhg4dOm7cuKqqqrBw3rx5
u+2228iRI8ProqKi/fffP0y+zz77HHroodddd1284te//vUhQ4Y89dRT4fWM
GTNGjRoVxmyzzTaTJk3qcv9TnxNYnom2/UW3tahq7SrjH1/no2P+Z21IIBh9
fbeTyAlAIZMTAACASE4gdSUnkKaSEwAAgKSBkhNYr/A/8isrK/uwYm1t7cyZ
Mzus29DQkMlkcm9LS0s7X49ODljV/gCCPvQqHTmBle05ga3/q9s6+pa1YYDw
IryNlx/023VCAuc+1tMkYRP1zXICUKDkBAAAIJITSF3JCaSp5AQAACApNTmB
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
b9688847r7KyMsy/33773XXXXWHh7NmzhwwZkpvkoIMOuuqqq8KLhx9+uEMU
IamqquqQQw4Je9v5ozTlBHa8fNOWnAAUMjkBAACI5ARSV3ICaSo5AQAASBoo
OYHw77Rp04YPH/7iiy/mcgK77LLLsGHDvt8ujPnpT38aFt55550nnXTSlClT
jj322DFjxjz99NPf+ta3wl8BnWd+++23J06cOHr06DDtK6+8smrdnEDw3HPP
XXTRRWeeeWaY/Nprr121bk6grKwsLD/ttNNyOxAm7LyV0MCvfvWrJ5xwQped
TNNzB3a4fNOWnAAUMjkBAACI5ARSV3ICaSo5AQAASBpAOYHw+sorr9xrr72O
PvroOCdw8MEHjxkz5p52t95665tvvhkWFhcXf/zjH7/44ouvuOKKMOy8887b
fffdi4qKknMuXbp05syZubdf+tKXJkyYsGrdnMBDDz20ww47XHbZZWHy8KK7
nEDYbrwDt912W0lJSYedb2ho+M53vvPFL36xsrKyy6NLU05g+8u6re8+EN3x
dnTK3d0O+NL/ZgdMeKKnSeQEoJDJCQAAQCQnkLqSE0hTyQkAAEDSwMoJNDQ0
HHXUUeFtnBMI//P+yCOPrKioqKqqGj9+/JNPPhmvcthhh40cOfLdd98tKira
eeedDzjggA5zvvDCCyNGjJg2bVp4vWTJkjDghhtuCK+vueaaww8/vK6uLry+
7LLLwrbC4c+ePTuXE1i8eHHY+pw5c+J5Ro8eHfahvr4+bGvs2LFhTzpsaMKE
CXvvvffy5ctr23U+ujTlBEZM7LaqV60Z/4Mnuvj0725dOyC87m6S5XICUMDk
BAAAIJITSF3JCaSp5AQAACBpYOUEggULFmy33XZxTqC2tnbs2LFbb731sGHD
TjrppLC38ZgLL7xwr732il9/5jOfGT9+fOdpL7rooi222GKnnXYaOnTouHHj
qqqqwsJ58+bttttuI0eODK+Lior233//MPk+++xz6KGHXnfddfGKX//614cM
GfLUU0+F1zNmzBg1alQYs80220yaNKnDJt55551B6youLu4wJjU5geWZaNtf
dFuLqtauMv7xdT465n/WhgSC0dd3O4mcABQyOQEAAIjkBFJXcgJpKjkBAABI
KvycwHqF/3nf3V39e1ZbWztz5swO6zY0NGQymdzb0tLSzleikwNWtT+AoM9d
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
AAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQA
ACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAA
INEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg
0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDR
CUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJ
RDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlE
NzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3
OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6
gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqB
mEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGY
RicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhG
JwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYn
AAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicA
AAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAA
AHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAA
eToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5
OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6
AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToB
AMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEA
wukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC
6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLp
BAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukE
AAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQA
ACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAA
INEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg
0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDR
CUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJ
RDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlE
NzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3
OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6
gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqB
mEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGY
RicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhG
JwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYn
AAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicA
AAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAA
AHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAA
eToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5
OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6
AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToB
AMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEA
wukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC
6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLp
BAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukE
AAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQA
ACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAA
INEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg
0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDR
CUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJ
RDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlE
NzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3
OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6
gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqB
mEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGY
RicAAAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhG
JwAAAHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAg0QlENzqBmEYn
AAAAeToBAMLpBAAAINEJRDc6gZhGJwAAAHk6AQDC6QQAACDRCUQ3OoGYRicA
AAB5OgEAwukEAAAg0QlENzqBmEYnAAAAeToBAMLpBAAAINEJRDc6gZhGJwAA
AHk6AQDC6QQAACDRCUQ3OoGYRicAAAB5OgEAwukEAAAgOdAJNDU1zQE6JZ0A
AABU6QQACKcTAACA5EAn8P3vf78J6JSWLFmyefPmjv7vBAAAdAo6AQDC6QQA
AAAAAAC6Cp0AAOF0AgAAAAAAAF2FTgCAcDoBAAAAAACArkInAEA4nQAAAAAA
AEBXoRMAIJxOAAAAAAAAoKvQCQAQTicAAAAAAADQVegEAAinEwAAAAAAAOgq
dAIAhNMJAAAAAAAAdBU6AQDC6QQAAAAAAAC6Cp0AAOF0AgAAAAAAAF2FTgCA
cDoBAAAAAACArkInAEA4nQAAAAAAAEBXoRMAIJxOAAAAAAAAoKvQCQAQTicA
AAAAAADQVegEAAinEwAAAAAAAOgqdAIAhNMJAAAAAAAAdBU6AQDC6QQAAAAA
AAC6Cp0AAOF0AgAAAAAAAF2FTgCAcDoBAAAAAACArkInAEA4nQAAAAAAAEBX
oRMAIJxOAAAAAAAAoKvQCQAQTicAAAAAAADQVegEAAinEwAAAAAAAOgqdAIA
hNMJAAAAAAAAdBU6AQDC6QQAAAAAAAC6Cp0AAOF0AgAAAAAAAF2FTgCAcDoB
AAAAAACArkInAEA4nQAAAAAAAEBXoRMAIJxOAAAAAAAAoKvQCQAQTicAAAAA
AADQVegEAAinEwAAAAAAAOgqdAIAhNMJAAAAAAAAdBU6AQDC6QQAAKAk7733
3mOPPTZ+/PgHHnigo68F6PI+/PDD3/7t3549e/bLL7/c2tra0ZcDAECH0QkA
EE4nAAAAZfjv//7vurq6SqXy6KOP7t+/v81dDz744MiRI7/+9a8/9NBDGzZs
OOKnKGqfb33rW7NmzZozZ04H7uA9ab9DZ3tP7NPh+6SHgwcPTv/DcssttxzZ
/gAAREAnAEA4nQAAQLe1cuXKP//zPz///PPPOOOMP/zDP3zhhRc6+oq+gHff
fffmm28+77zzGhoaxo0bt2TJko6+orZuuummSqXyla98Zd++ffn1NWvW9OnT
p5Jz9NFH//SnP/2i+xe1T1NT06/8yq9kOxxzzDFf9OGF7OA9aa+zvSf26Tz7
3HXXXel679699+zZ80X3BwAgDjoBAMLpBAAAuqcf/vCHtbW1NTU1I0aMuPzy
y48//vj09p/92Z919HX9f+rr66+99tqD3rVq1aq6urqePXuOHDly3LhxAwYM
qFQqM2fOrJ4wffr0fv36tbS0hD/XERs7dmx6Venbm1/cvn37kCFD0vWjjjpq
4sSJV199dY8ePdLDYcOG7dix4/A3L2Sf/fv3jxkzJv+J5Bf9RDt8h6JeS1H7
eE/s0/n3+d73vpf9X+sXv/jF4W8OAEBMdAIAhNMJAAB0Qz/5yU/69+9/4okn
rl+/PlvZsmVLY2NjpVJZvnx5x15b1XHHHTdmzJiD3jVp0qQePXqsXr06O9y5
c2d68enKRx99lK3ceOON6Ws5/E7gEM91xA7aCfzlX/5l9gHfN7/5zWzlT/7k
T7KVBx544PA3L2SfvXv3Zg9J365TTjnlCD7RDt8h8Z4cTKd6T+zT2fbRCQAA
oBMAIJxOAACgG/rjP/7jSqXy6quv5hc3bNjQs2fPCRMmZIfpjTvvvLN67+rV
qxsbG1euXJne/vDDD9PbS5YsmT59+umnn/5Xf/VX6eL3v//9dPG1114bM2bM
qaee+rOf/Sx7YPqQadOmpaeNHj16/vz5+/fvz9azTf7+7//+W9/61tlnnz18
+PDbbrtt586d1eeqqampq6tLb6SPanP9Q4YMGTx4cH7lzTffnDdvXpY9XHHF
FSeffHL6Ai+55JKJEydmJ7S2tj788MPpbg0NDaNGjVqwYEH+dR30uZqamtLX
MmzYsMmTJ6evq7qeXuTy5cs/N0I4aCdwzTXXZB/wbdy4sfq2ZyvXX3/9oTcs
fJ+9e/f+2q/92g9/+MP0dvoDOrLPxAN3SLwnB9Op3hP7dLZ9dAIAAOgEAAin
EwAA6IZ+67d+a+DAge3XWw/Ibqcn5H/F/l/+5V8qlco///M/p7fffvvt9PYJ
J5xw4oknjhs3bvHixenid77znXTx+OOPP+ussyZOnPjee++liz/+8Y/79+9/
0kkn/cEf/MH555+fnnDHHXdkG2abpDt89atfvf7669OnSw/vv//+9K61a9dO
mzatV69egwYNSm8sW7aszXWOHz++pqYmPTn9B237VzFjxoyhQ4emu02dOnX2
7NnZ4syZM9OVCy64YPLkyQ0NDentp5566hDPde+996bnnHPOOdddd116bX36
9FmxYkV21w033JDe9eCDDx76Tf693/u97Bnzi+mbky7269cvv5h9HXmbouDQ
itpn27Zt2Y0j/kQ7fAfvSXud7T2xT6fa55lnnsk6gew/swAAdEM6AQDC6QQA
ALqb1tbWfv36jRo16tCnfW4ncMYZZ/zv//5v9YSsE5gxY0Z+k7PPPnvAgAEf
fPBBdjhp0qT0nHfeeSe/Sfa92+lVnXzyyeeff371sYf4LoD0sem22Sewo0eP
vu+++6q/fptp/70Ds2bNmjt3bvbXDLZv396/f//LL7/8s54r3b+mpuaqq67K
zt+0aVN9fX36WrJ7m5qaBg8efOgvaNi3b196TnoN2R9bqOrdu3e6OGTIkPzi
oEGD2n84eGhF7VN1xJ9oh+/gPWmvs70n9ulU+3zyySd9+/ZNF5999tnD3xwA
gJjoBAAIpxMAAOhudu3aVVtbe/XVVx/6tM/tBO6+++78+VknsG7duvwTpSuX
Xnrp2l96/PHH05W/+7u/q25S/X3/1PXXX19TU7N79+7s8BCdQGrr1q2PPvro
hRdemP2ybfqK8t+S0L4TyGzZsiW9wtdff73Nh3Ftnmvx4sXpCU8++WT1yhsb
G9OV6rUd2vbt288555z0/ClTpuzbty9/V/aFCCeeeGJ+8Stf+Uq6eOqppx7O
5sXuU9WBn4l7T9rrbO+JfTrbPitWrDj6AKkAAED3pBMAIJxOAACgGxo6dOjX
vva1Q5/zuZ3AQw89lD8/6wQ2bdpUXVm9enXlYL797W8fdJNZs2alK7t27coO
D90JVKXnP/HEE6ecckr62JdeeilbbN8JPP/889mXEVTlfz+3zXNlV9Le2rVr
P/d6MitXruzfv//xxx//b//2b/n1r3/96+k+NTU1e/fuzVbSf5Nnm//u7/7u
YW5e4D5VHfiZuPekvc72ntinU+2zf//+7Mybb765eiYAAN2KTgCAcDoBAIBu
aOLEiT179tyyZUub9aeffvqf/umfstsDBw78xje+Ub3rH//xH79oJ/Dxxx+n
K3/0R3/03v/fJ598ctBNDrMT2LNnz5o1azZv3pxfzL6wu/onDtp0As3NzT16
9Dj99NMXLVq0bt269CJHjBhx5plnVh/e5rkeeeSR9OEvvPBC9Zo3bNiQ/m/7
P1BwCNkHeePHj88v3nrrrdmnfsuWLctWfvCDH2Qr6cs//M2L2qeqAz8T9560
19neE/t0qn1effXVbPFnP/vZ4W8OAEBMdAIAhNMJAAB0Q08//XSlUrnsssv2
799fXcz+2P5f/MVfZIe/+Zu/eeyxx1Y/Gb/tttu+aCeQqq+vHzFixJ49e7LD
X/ziF48//vjPf/7zg27SphOoq6u76KKL2l989t3c6cXnFxcuXJg+dunSpdnh
1KlT8xfz4osvpofz5s3LDrdu3Xr00UfnO4E2z7VixYr0/Llz51ZXXn311fTK
q18i8MEHH7S/sDbGjh2bbpK+/Pzi8uXLa2tr0/Vhw4b95Cc/+fGPf/zVr341
PezRo8e///u/Z+ds27btJwfs2LHjszYvap+qg36i/eXs4D0p77XYJ759Ut/7
3veyTiD9L+pnbQUAQNx0AgCE0wkAAHRPN910U6VSufDCC//6r//6Bz/4wbRp
02pra0866aTm5ubshFtuuSU94Yorrli8ePHtt9/eq1evI+gEnnjiiXTxd37n
d5qamh577LHTTjutb9++77333kE3adMJXHnllemT3nXXXW+88Uabi58yZUp6
5qWXXrpgwYLnnnvujjvu6N27d11d3datW7MTFi1alJ4wduzY7Mu7t2zZkr66
9Nn/9oAzzjgjPcx3Am2eq6WlZdSoUek56ZuwdOnS2bNnp/s3NjZmJ2fJxMKF
Cw/9Dh+0E0h9+9vfrrSTbxIefPDBbHH16tWH2L+ofTIH/UT7S9vBe1Lea7FP
ZPskOgEAAHQCABRBJwAA0D3t27dvxowZgwYNyj5v6tmz5+jRoz/++OPqCZ9+
+ulll1121FFHpfeeeuqpc+fOTW88//zz6V3vvPNOevuRRx7Jb3jvvfdW2nUC
qQceeGDo0KHZs5x11lk/+tGPsvX2m2SdwO7du7PDV155ZfDgwenKrbfe2mbP
lpaW22+/vW/fvtm2NTU155577vr166snbN++feTIkel6fX19trJkyZITTjih
cuA3c9MXfvHFFw8fPrx6fvvn2rFjxzXXXFN9yIQJE6oFxT333JO+XdU/DP5Z
PqsTaG1tTS9gwIAB2cUPHDhw5syZ6WL1hOnTp6frJ510Uv6vPbRX1D6ZX//1
X09PPvbYY/OLX9oO3pPyXot9Itsn0QkAAKATAKAIOgEAgG7unXfe+Y//+I/q
p/Nt7Ny588MPPzycj0QPbfPmzdu2bTuCB3766afV7z5oo7W19a233lq5cuVn
/R3v9J+7bV7Xxo0bq3+v4HCeK33h77//fvV7E6r27t37uVc+YcKELI046L3p
zunbvmbNmvZ3XXbZZekDJ0+e/LlPUeA+B/Ul7+A9aa+zvSf26fB9UgsWLMg6
gcP5AhQAAKKkEwAgnE4AAADK8NBDD1Uqldra2i/6WV72lw0+9+8VfAn7dIYd
Ots+nWEH+3TnfVITJ05Mt/ra1772WQ0VAADR0wkAEE4nAAAAZWhtbZ01a1ZD
Q8OwYcP+9V//9TAftW/fvqOOOqpXr16f9UcSvrR9OsMOnW2fzrCDfbrzPunD
f//3f//YY48dNWrUz3/+85CtAADo0nQCAITTCQAAQKnee++9//zP/zzMk/ft
27ds2bKXX3458EnD9+kMO3S2fTrDDvbpzvvs2LFj1apVh/O9JwAAxE0nAEA4
nQAAAAAAAEBXoRMAIJxOAAAAAAAAoKvQCQAQTicAAAAAAADQVegEAAinEwAA
AAAAAOgqdAIAhNMJAAAAAAAAdBU6AQDC6QQAAAAAAAC6Cp0AAOF0AgAAAAAA
AF2FTgCAcDoBAAAo1pxur6N/AgAAADHTCQAQTicAAADFmjNnzsKFC//vQw91
yDQd0IHPvnjx4ubm5o7+IQAAAERLJwBAOJ0AAAAUa86cOU1NTR9OmtQhk/1G
fwc++/z587dt29bRPwQAAIBo6QQACKcTAACAYukEdAIAAADl0QkAEE4nAAAA
xdIJ6AQAAADKoxMAIJxOAAAAiqUT0AkAAACURycAQDidAAAAFEsnoBMAAAAo
j04AgHA6AQAAKJZOQCcAAABQHp0AAOF0AgAAUCydgE4AAACgPDoBAMLpBAAA
oFg6AZ0AAABAeXQCAITTCQAAQLF0AjoBAACA8ugEAAinEwAAgGLpBHQCAAAA
5dEJABBOJwAAAMXSCegEAAAAyqMTACCcTgAAAIqlE9AJAAAAlEcnAEA4nQAA
ABRLJ6ATAAAAKI9OAIBwOgEAACiWTkAnAAAAUB6dAADhdAIAAFAsnYBOAAAA
oDw6AQDC6QQAAKBYOgGdAAAAQHl0AgCE0wkAAECxdAI6AQAAgPLoBAAIpxMA
AIBi6QR0AgAAAOXRCQAQTicAAADF0gnoBAAAAMqjEwAgnE4AAACKpRPQCQAA
AJRHJwBAOJ0AAAAUSyegEwAAACiPTgCAcDoBAAAolk5AJwAAAFAenQAA4XQC
AABQLJ2ATgAAAKA8OgEAwukEAACgWDoBnQAAAEB5dAIAhNMJAABAsXQCOgEA
AIDy6AQACKcTAACAYukEdAIAAADl0QkAEE4nAAAAxdIJ6AQAAADKoxMAIJxO
AAAAiqUT0AkAAACURycAQDidAAAAFEsnoBMAAAAoj04AgHA6AQAAKJZOQCcA
AABQHp0AAOF0AgAAUCydgE4AAACgPDoBAMLpBAAAoFg6AZ0AAABAeXQCAITT
CQAAQLF0AjoBAACA8ugEAAinEwAA6J7efffdm2+++bzzzmtoaBg3btySJUs6
8GKef/75SZMmffe73+3AayiQTkAnAAAAUB6dAADhdAIAAN3QqlWr6urqevbs
OXLkyHHjxg0YMKBSqcycObN6wvTp0/v169fS0nKYG9bX11977bVHcCW7d+++
5ZZbKgdMmTLlCHbohHQCOgEAAIDy6AQACKcTAADohiZNmtSjR4/Vq1dnhzt3
7mxsbExXPvroo2zlxhtvrFQqh98JHHfccWPGjPmil7Fnz57hw4fX1NTMnDlT
J6ATAAAA4HDoBAAIpxMAAOiGhgwZMnjw4PzKm2++OW/evPXr16e3r7jiipNP
PrlSqVxyySUTJ07MTmhtbX344YcbGxsbGhpGjRq1YMGCbH316tXpYk1NTV1d
XXpj/vz51T2bmprGjBkzbNiwyZMnv/baa+0v45NPPjnppJNefvnlffv2tekE
du7cuXz58sMPFToVnYBOAAAAoDw6AQDC6QQAALqh8ePH19TU3H///ek/CNvf
O2PGjKFDh1YqlalTp86ePTtbzH7l/4ILLpg8eXJDQ0N6+6mnnkrX165dO23a
tF69eg0aNCi9sWzZsuz8e++9Nz3nnHPOue666wYOHNinT58VK1a0eaLW1tbm
5ub0RvtO4IYbbkhXHnzwwTJeftl0AjoBAACA8ugEAAinEwAA6IbefvvtAQMG
VCqVY445ZvTo0ffdd9/GjRvzJ7T/3oFZs2bNnTt3//796e3t27f379//8ssv
r97b5nsH0v1ramquuuqq7PxNmzbV19efffbZn3U97TuBpqamwYMHL1++vIiX
+2XTCegEAAAAyqMTACCcTgAAoHvaunXro48+euGFF/bp06dSqdTW1t55553V
e9t3ApktW7asW7fu9ddfT+8dMmRIdb1NJ7B48eL0hCeffHLtLzU2NqYru3fv
PujFtO8EurSsE5jTXekEAAAASqUTACCcTgAAoJvbtWvXE088ccopp1QqlZde
eilbbN8JPP/889mXEVT169evem+bTmDWrFmVg1m7du1Br0EnEBOdAAAAQKl0
AgCE0wkAAHQ3e/bsWbNmzebNm/OLzzzzTKVSufvuu7PDNp1Ac3Nzjx49Tj/9
9EWLFq1bt27Tpk0jRow488wzqw9v0wk88sgj6cNfeOGF935pw4YN6f+2/wMF
mSg7gXtfTzpksg/rO/DZdQIAAACl0gkAEE4nAADQ3XzyySd9+/a97LLL8osL
Fy6sVCpLly7NDqdOnZoebtq0KTt88cUX08N58+Zlh1u3bj366KPznUBdXd1F
F11UPVyxYkV6/ty5c6srr7766uOPP75v376DXtJBO4EPPvjgyF9kh9IJ6AQA
AADKoxMAIJxOAACgG5oyZUqlUrn00ksXLFjw3HPP3XHHHb17966rq9u6dWt2
wqJFi9ITxo4d++yzz6aHW7Zsqa2tPe200/72gDPOOCM9zHcCV155Za9eve66
66433ngjPWxpaRk1alR6zi233LJ06dLZs2en+zc2Nn7W9bTvBG677bZ0ZeHC
hWW9BWXSCegEAAAAyqMTACCcTgAAoBtqaWm5/fbb+/btWzmgpqbm3HPPXb9+
ffWE7du3jxw5Ml2vr6/PVpYsWXLCCSekJ/fo0WPGjBkXX3zx8OHDq+e/8sor
gwcPTu+99dZbs5UdO3Zcc8011YdMmDChubn5ENeTnjZ16tTqyj333NOzZ89l
y5YV/Mq/FDoBnQAAAEB5dAIAhNMJAAB0W62trW+99dbKlSt37Nhx0BPSfy7u
3r07v7Jx48Zdu3Z91oaffvppS0tLfmX//v3vv//+nj17juDy9u7dewSP6gx0
AjoBAACA8ugEAAinEwAAgGLpBHQCAAAA5dEJABBOJwAAAMXSCegEAAAAyqMT
ACCcTgAAAIqlE9AJAAAAlEcnAEA4nQAAABRLJ6ATAAAAKI9OAIBwOgEAACiW
TkAnAAAAUB6dAADhdAIAAFAsnYBOAAAAoDw6AQDC6QQAAKBYOgGdAAAAQHl0
AgCE0wkAAECxdAI6AQAAgPLoBAAIpxMAAIBi6QR0AgAAAOXRCQAQTicAAADF
0gnoBAAAAMqjEwAgnE4AAACKpRPQCQAAAJRHJwBAOJ0AAAAUSyegEwAAACiP
TgCAcDoBAAAolk5AJwAAAFAenQAA4XQCAABQLJ2ATgAAAKA8OgEAwukEAACg
WDoBnQAAAEB5dAIAhNMJAABAsXQCOgEAAIDy6AQACKcTAACAYukEdAIAAADl
0QkAEE4nAAAAxdIJ6AQAAADKoxMAIJxOAAAAiqUT0AkAAACURycAQDidAAAA
FEsnoBMAAAAoj04AgHA6AQAAKJZOQCcAAABQHp0AAOF0AgAAUCydgE4AAACg
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
AAAAlEcnAEA4nQAAQPe0devWRx999MILL+zTp0+lUqmtrb3zzjur97bvBDJb
tmxZt27d66+/nt47ZMiQ6nqbTmDx4sXpCU8++eTaX2psbExXdu/e/VnXs3Pn
znPPPTe9mB/96EeFvcgOknUCc7ornQAAAECpdAIAhNMJAAB0c7t27XriiSdO
OeWUSqXy0ksvZYvtO4Hnn38++zKCqn79+lXvbdMJzJo1q3Iwa9euPeg17N27
9xvf+EZtbe0//MM/lPMqv1RzdAI6AQAAgNLoBAAIpxMAAOhu9uzZs2bNms2b
N+cXn3nmmUqlcvfdd2eHbTqB5ubmHj16nH766YsWLVq3bt2mTZtGjBhx5pln
Vh/ephN45JFH0oe/8MIL7/3Shg0b0v9t/wcKUq2trVdffXVNTc13v/vd4l9t
R5hzoBP4cNKkDpnsw/oOfHadAAAAQKl0AgCE0wkAAHQ3n3zySd++fS+77LL8
4sKFCyuVytKlS7PDqVOnpoebNm3KDl988cX0cN68ednh1q1bjz766HwnUFdX
d9FFF1UPV6xYkZ4/d+7c6sqrr776+OOP79u3r/31TJs2LT35scceO+jVfvDB
B0fyIjuUTkAnAAAAUB6dAADhdAIAAN3QlClTKpXKpZdeumDBgueee+6OO+7o
3bt3XV3d1q1bsxMWLVqUnjB27Nhnn302PdyyZUttbe1pp532twecccYZ6WG+
E7jyyit79ep11113vfHGG+lhS0vLqFGj0nNuueWWpUuXzp49O92/sbGx/ZXc
eeed2VcSfCfn6aefzu697bbb0rsWLlxY+jtSKJ2ATgAAAKA8OgEAwukEAAC6
oZaWlttvv71v377ZZ/Q1NTXnnnvu+vXrqyds37595MiR6Xp9fX22smTJkhNO
OCE9uUePHjNmzLj44ouHDx9ePf+VV14ZPHhweu+tt96arezYseOaa66pPmTC
hAnNzc3tr+Sss86qtHP++edn995zzz09e/ZctmxZWW9EOXQCOgEAAIDy6AQA
CKcTAADotlpbW996662VK1fu2LHjoCek/1zcvXt3fmXjxo27du36rA0//fTT
lpaW/Mr+/fvff//9PXv2HPFF7t2794gf21F0AjoBAACA8ugEAAinEwAAgGLp
BHQCAAAA5dEJABBOJwAAAMXSCegEAAAAyqMTACCcTgAAAIqlE9AJAAAAlEcn
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
V8eOHQvfvv/9788/4M///M9PTU2Fb5O4QvjVgwcPwrd/8Ad/8MQTTwwNDb36
XYQX8Ku/+qtr5oTb/PRP//TnP//5a9euJb99xboD//gf/+Mf+IEfyD/Of/7P
/zkfb1i47sD69evD15/97GeTP+L39/e/+c1v/uVf/uXw9ac+9anwLMn2CS/1
fe9736/8yq88xsYPuy/sRDkBAAAoTnICAKQnJwAAAMVjcXMCTzzxxLvf/e6/
9/f+XjIhwPd8z/esX78+m80mN5iZmRkcHAzPODIy0tnZ+fWvf/1Nb3pTcmF+
8mf9fIQg3OXJJ5/86Ec/Gr4O/z799NPhvsmv7t27F+6V5AQ+8pGP/OAP/mB4
/fnXEJ49PE54O8kDhqdIfp78pf4rX/nKwm9bW1u/3Xs5fvz4F77whV/4hV94
y1vekswYcPjw4ZdelRMYHx+/cuVK+OLq1at79+79rd/6rfDb6urql16eE0hW
K9i2bdvReeF1fu/3fm/YFM8880z41Qc+8IFvfvObCxcjeKPkBAAAoJjJCQCQ
npwAAAAUj8XNCeTXHQj/s/jt3/7tNWvWfPKTn8zfYGZm5plnnvnxH//x5Gr9
JEvwm7/5my/N5wR2796dv/HTTz/9a7/2ay/N/en/7//9v7/wid761rcmOYF3
vvOd/+Af/IOFv/rDP/zD8Di9vb3JAzY0NCQ/LykpCd/u2bMn+Tb57b59+179
Lmbm5L8dHh4Or/nNb35zMk3BK3ICFy5c+PjHP568keCpp54K/1ZVVb308pzA
T/3UT615LVevXh0fHw+P8MQTTyQ/ed/73tfW1vYYG19OAAAAipmcAADpyQkA
AEDxWKKcwEtzf3D/2Z/92TVr1vzJn/xJ8pP/9b/+V/j2F3/xF5999tljx47d
vXv3TW9608c//vGX5v9w39LSkr/7008//W//7b8NX3z4wx/+sR/7sYVP9NRT
TyU5gfe///0//uM/vvBXn/3sZ5944omxsbFXPOBr5gRePZ9A+Em4+5e+9KVX
/Pyf//N/Hn4+Pj7+ipzAu9/97je/+c3hSSsrK8MG3LRpU/ht+Pqll+cEwlsO
Xx89evT5l8vPhHDjxo0tW7aETfHkk09+93d/d9gdb2TDz5ITAACAYiYnAEB6
cgIAAFA88jmBgYGBlA/1ipxAcO7cue/7vu97y1ve0tPTE779mZ/5mfD11NRU
8tuGhoY1a9b8+q//+kuvmxP4oz/6o/Cr48ePJz9vb28P3yY5gU9/+tPh62PH
jiW/mpycfNvb3vaud73r1Q/4iDmB8B+ip5566u1vf/uFCxfyP7x3717+YYeG
hsIdP/e5z700N5lA+Po3fuM38rdMplAoKysLX//FX/xF+LqzszN8/Qd/8Afh
629+85vJzR48ePDBD37wF3/xF8OW/9SnPvWP/tE/ym+Tz3zmM+GWHR0db3Tj
h90nJwAAAEVLTgCA9OQEAACgeCQ5gbGxsRdffDHlQ706JxB85StfWbNmzc/+
7M9ms9nPfe5z4evPf/7zR48e/eY3v/n000+Hbz/84Q+/9Lo5gfPnz//Ij/zI
2972tqqqqj/5kz9561vfms8JPP/8808++eTf+lt/q7S0dPfu3f/iX/yL8Ku/
/Mu/fPUDPmJOIPjCF74QfvXDP/zDv/u7v/unf/qn//2///ef+ImfCD/5i7/4
i/DbsKHC1z/5kz/5f//v/w2b7h3veEe4ZXl5eXt7exIGCJ599tlwy2RugU9+
8pMNDQ0XLlz4vu/7vvCO/tt/+2+1tbW/9mu/Fn71ta99Ldxs48aN4etPfOIT
O3fuDNvkb/yNv/FDP/RD+djAowu7b3x8XE4AAACKk5wAAOnJCQAAQPFIcgLj
4+MLr6B/PO9973v/+l//66/44czMzPve9741a9Z84xvfuHz58r/6V//qu7/7
u8O33//93//Hf/zHv/RLv/TUU089ePDg1X+4f/rppz/60Y8mX7e3t4cHDzd4
05ve9LGPfeytb33rpz/96eRXLS0tb3/725M/0L/tbW/76le/mvz8FQ+Y5ARe
ERtoa2t7zTeyefPmd73rXU888UTyjO985zvD7fO//ff//t+HH4ZfXblyZceO
Hcm7C8JdKioqvuu7vusTn/hEuNm1a9fe8Y53hJ//3M/9XPj24MGD7373u5Nb
hp9/7nOfS/6gn81mP/OZz/zIj/xI8qtwm/z0CG9I2H1yAgAAULTkBABIT04A
AACKRy6Xm5mZmZiYuHz58uTk5DI84+jo6AsvvJDNZt/oHcMrvHPnzmv+amho
KH3O4RXC6+zu7h4eHn71r+7du7fw55cuXbpx48arbxa27bVr1x48eJD/ye3b
t19zfYewC3p6er7du/uOwo4LGyfsxPA4cgIAAFCE5AQASE9OAAAAikcul8tm
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
a2vrzp07Fwwjt2YyWzKZzXO1KZPZmMlsyGTWZzLr5mvta1X+t+vnbr9h7o6b
5h5ky9xjPjw1HYagYex67Nixc+fO3bx5c3p6OvbGAABYWXK53Ojo6OXLl7u7
u9vb2xsaGioqKhYM1Z5740O1ta87VHsu/7fd6urq3bt3Hz58uL+/f2hoaHJy
MvbGYGmFXRx2dNjdYaeHXR8awILMyXPz/y/It7SFje31W1q+seVb2ua5B3z4
/4LQpEPDDs07NPLQ1EODlygGAHiF6enpmzdvnjt37tixY83NzTU1NQtCm1tf
d6j2iKdwFw7VvnUKt6ysbOfOna2trSdPnhwcHLx3756pyVYHOQEA0pMTKFB3
7949e/Zs2HcNDQ3zQ8pkPLlpfhgZxorPJlVRsaG29rnGxtLW1spDh3Z0djZ0
d+/u7W0+c6bl7NnWF17YNzDQNjjY/uKL7eHr8JP+/r19fc3hNidONBw5Urtv
X2VTU1ld3dbKyo35x5wfiyZD0M3JyLOkpKS2tratra23t/fGjRuuYgMAitPY
2NjAwEBHR0dTU9P8VE6vGKqtyw+rysvX1dRs3rWrpKWl4sCB7ceO7Tx1qikZ
qj3//N5z5/JDtbbwRfi2v78lDNV6evZ0dTUePVrX1la9Z095fX2munpTaena
bzNUexgeqK6u3rt3b1dX15UrV1wGvgqEnRh2ZdihYbeGnbsgErB5/gzzuvz/
C0LzCI0kNJXQYEKzCY0nNKHQkEJzCo0qaWmhmYXGlrS00PxCIwxNMTTI0CxD
4wxNNDTU0FxDo13w/4L8qelN+TPSodmHxh8OgXAghMMh9nYCAIhgZmbmxo0b
vb29bW1ttbW18wHOra85VAtVWbmxrm5rU1PZvn2VR47Unjgxewp3bqi2NzmF
++KL7clQLTmFmwzVwm06OxsOHdrR2lrZ2FhaW/tcRcWGl5/CfeVQrbS0tKEh
3OXQ2bNn7969G3s78ZjkBABIT06gUGSz2aGhoe7u7tbW1vlr0PKjyoepgNLS
tXV1z7W1VYfBYX9/y5Urh+/ePTE93ffSS88vVmWz/SMjXdeuHQnD0a6uxoMH
a8L4c8F5wnXzw87nkjFnU1PTiRMnLl265EQ0ALCK5XK527dv9/f3t7e3z/+5
9pVDtZKStTU1m1tbK48d29nX13zx4sHbt48/eNCziEO1UOPjp69fPzow0Nbd
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
efbUqaboIwS1Qmpm5kxLS0USFWhvby/ataLkBABIrwhzAmHkEN5yEhLYvbt8
erov+thGrajq7GxIogL19fUPHjyI3WABoOj09/cnIYHt2zePjZ2KPjZQK6pe
fLEtmQCqsrLy7t27aVpauHt+odvwsNHfmlpRFTqf0AUlUYHQKS1W/wYAPKIH
Dx7U19cnIYHOzoboYwO1omp6um/37vIkKnDo0KHijArICQCQXhHmBE6ePJnM
YbtrV8nkZG/0Uc2i1DNRRX/7i15Hj9bNnX9+bvfu3UW+0BUALLMLFy6UlJRk
MhsqKzcMD5+MPipYrDJaW8R64YV9JSVrM5nN27dvf+y1osIdw93Dg4SHCg8Y
/U0tVmlpi1ihCwodUeiOQqcUuqbF7esAgNcxMzOze/fuTOa5TObZo0froo8K
FrGM1harJid7d+0qSdaKOnnyZOw2G4GcAADpFVtO4Ny5c8nlaXV1W1dNSOAl
I8wlqAMHtieR1AMHDhRnJBUAlt/NmzfLysoymY3btq2/c6cz+nhgEctobXHr
zJmWZAKohoaG6enpN9rSwl3yl6eFh4r+dhaxtLTFrdARhe4odEqha1qUpS4A
gO8ol8sdOHAgmQz2wIHt0ccDi1tGa4tYk5O9dXVbkwmgzp07F7vlLjc5AQDS
K6qcwNWrV0tLS5PL01bZHLbJSO/o//7fJ7/whTdaX5vzGHfM37e398DIyGpb
ODib7d+z5+HsVV1dXbEbLwCsfiMjI1VVVclK8deuHYk+GFjcCkO1b3zjG8/u
Pf8YlYy4Hvu+4XmvXj0efQsseh0/Xp9MANXa2prNZh+9pYUbh7skl6eFB4n+
Rha3Qkv7sz/7s3Utzz92S0vz/4L+/oPRt8CiV+iOQqcUuqbQQY2Oji5dHwgA
JLq6upKQwJ495dlsf/TBwOLWF7/4xbVr10b5f8G6deuiv/1Fr7GxU8kEUKWl
pVevXo3deJeVnAAA6RVPTuDu3bvl5eVzV4Ksu3nzWPQxzOJWkhNo+/rXX/js
Z99ofWnOY9wxf9/e3gO3b3dF3wiLXpOTvbW1zyWR1BdeeCF2EwaA1ezBgwd1
dXXJ9d3nz++PPgxY9ApDtS1btvxZ+73HqGTE9dj3/epXv/rCC4ejb4GlqP37
q5JU59GjRx+9sYUbJ2eew92jv4VFr9DSZk8ft1587JaW5v8Fx47tjb4FlqJC
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
WO/S0sDGxlgiEX33bvbjx8Wvfhd9kov/8Yue1dWhh23I9JgqxfQDAABf2tvb
y7U6ayMR781Npa1jb29XT06+foR7cjK/uzu1tTWxujocj/e/eNE1Odk2NBTq
6wv29vq7u32dnaq9vUkv1VpbvXqppv9Z/xv97/v6Ajqjoy3RaPvsbPfi4sDa
2sj29uTBwcwfF4THxxXYu/j9ZbD1LS0tl5eX0idvWdETAAC491P1BDR9f3Qq
qc3NNR8+VOaepMR97u4eth9tWl9flz5tAQD4Wdzc3LS1tSnl9fmqEokJ8SUB
MTaTk//cfjQajWaz2XzPNP1T9E90qgL6lxL/4xQ319cv9/en1taG5ua6xsZa
Ojsbg8Ga3He6ixyfz9PW5h0aap6e7lheHtjZmTw/j1fYviF6EOlxpIeSHk16
QJVi7gEAgD9aX1/PLdWqe3p8d3dr4kuCIub2dvXoaObVq5H5+Z6JiVb9B2xu
LtFSraq1tb6/P/D8edviYt/r12Onp7FUqqL+Mj98iOX+9u5fBnt6eip92pYb
PQEAgHs/W0/gt1wl1efzKVUbCtWen1dgi5K4jF4w6yW08+R5bm5O+oQFAODn
cn5+HgqFnBdA7e1FxRcGxLRksxvT0x0P24+m0+nCzjT9EwcGBnJbXXj0L6h/
WfE/WsF/IR8+xLa2xubmugYHg098zuzzecLhus7Opt5e38BAcGioeWQkNDbW
MjHROjkZGRsLj46G9b8cGAj09fm7u1Uk4g0Eqp/yK+srt6fHNzXVvrY2dHj4
wupn0XoE6b8oPY70UNKjqbizDgAAfN/c3JzT6uzvD1i9ori4WEgkJuLxHr3c
am2tf+K3+PWirr29QS/V9GJMr/GGh0N6eeYs1cbHW/Q/63+j/73+X/XSq63N
m9s79Un9gY6ORv3rLC8P7O9Pff5s8esazs/joVCtUrU+n+/nfBksPQEAgHs/
YU9A29zcdPYk1WuzT58WxVc1xJyk0+tDQ80PH0+TPlUBAPgZvX//PhgMOlWB
g4MK3CuKuMncXJdTEujp6bm7u3Nzpumfrn8Rpyqgf1nxP9rTc3e3+u7d9NJS
//Bw6DvPhEOh2p4e3/h4y/x8z8bG8Nu3z09PY/rLn9vb1cJ6EanU2tXV0ocP
Mf27v349trjY9/x528BAUH9VlfvQ/eOFBH0M+q93Z2dS/1zxv7qnRw8f5x22
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
aBB6AgAA9+gJfCmRSOTealvv81WtrQ2JL71I6XJ0NJPbSux+Q6sXL15ks1np
sw8AAPzAyclJKBRS6v6p1NRUe5nfSU7Kmaurpdzm9fcvfRoYGLi7uyvnmfb7
Brj3H1Xr7GzSB1PcP93JydzkZOTL17e2tXlXVgZvbpbF/+YNSTq9/ubN5Fef
Wfv9EXQxL3z9q+lhkvv1vXq86CFTzjMNAAAUIJvNvnjxIrdUqwmFaov+CqbL
y6/LnOFwnf43peskWJdsduPdu2m9oM3t2fTPv6VIxLu2NnR3V+SSrf41cy9z
qPf7/YlEQvrsMws9AQCAe/QEvnJ4eNjc3Ow8f56d7fqZP8tTwUkkJnLr2Psa
Ku+qAgDAIp8+fcrtIH//HeShoea7u5/3szwVnJOTud/3Hm2KRqMiO0Pp31T/
1s7zZ30wxXqf6sHB9MBA4MvvfY+MhN69+6lfIPD9XFwszM11ffmgPhLxrq8P
F+U1v3qA6DHivLNCDxY9Xsp/pgEAgMKsrKw4L4b1+6sSiYmiLDzOzuJflTl7
enz6F/959hfIN58/L3/11oXm5pp4vLcoW0LoFfLsbJfT52xubj48PJQ+6YxD
TwAA4B49gT86OzuLRCJKNTivuOT5cyVFrzCXlv75WtFAILCzsyN9ugEAgPwk
k8mHz3p3dTV9+rQovsAgRczOzqTzWlGl1MLCguBLn/RvrQ9A3bvfmEwfmJs/
19HRzMDA/3w63u+vmppqPzvjU2lPSjK58tUjaP3Pr16NuHm3gB4deoA8vLNC
DxapMw0AABRmZ2cnEAg4G5MtLfW7KV6enzsNgaovy5wl3faokpJOr79+PdbZ
2fjwtxcMVi8suGoL3N2tjY6Gc79aQyQSOTs7kz7dTERPAADgHj2BR93c3Dxs
S9re3sATvMrIFytMbzgcPj4+lj7RAABAIdLp9O/bkt6/a/Tt2+fiywziPpnM
ejze6/Q5/X7/1taW9Il2Tx+GszGZPjB9eAXsu/r+/WzuQ+v/8xmrhYVethgo
IL8/gm768t0CW1tjBbQF9NDQo8N5Z4UeJiLvrAAAAO4dHx+Hw2HnxbCFfdrr
06fF3zchoszpKtnsxsHB9Ffr3qWl/tvbvHci0H//7e0Nzkufenp6bm5upE80
Q9ETAAC4R0/gW1Kp1MTEhPP8ORiscfkBIiKeL1eYnZ2dFxcX0qcYAAAoXDab
XVxczL1rtM7nq1pa6hdfbBA3SSZXfn+o2BAOh416rag+mNzz5/u3jemDfPoH
o87P47+XVP/5uarFxb4CnpSSr5JITOQW9v/8i9X/vLeXR1lIj4vcpwX16PDp
MSL4zgoAAODexcVFZ2dnAZ/2+vx5eWamM7cz6f2KwufzTE2187Iy9zk6munv
/5+dtkKh2vX14acXO3d2JoPBGqfPOTExkUqlpE8xc9ETAAC4R0/gO7LZ7Orq
au758/0HiGKx7gI+QERMyJs3rDABAKhA+/v7zc3NzgeIRkZCRdkHk5Q/Jydz
kYj+j1itl2o9PT1XV1fSZ9bX9CHl3jbWpA9SH6o+4O//iW5vV/XXDg+PnQOB
6ni89/Nn3iFQtOivy16/Hmtr8z48gh4cDH78OP/9n6VHhB4UD7vc6gEifWYB
AIAi+OrTXm/e/ODTXpnMxtraUO7lQk5DoCoajdAQKG7evZvu6/M/LNU6O5sO
DqZ/9N9lXS+hndeL+Xy+1dVV6TPLdPQEAADu0RP4ocPDw1AolPsAUVV/f+Dy
ckl8oUWenlRq7cWLDlaYAABUqouLi66uLucDRG1tDcfHM+LLD/L0ZLP3D2lz
30+vVappenra2DfA6wPTh5d7/lyrD1gf9qN74Op/+erVyBePnT2zs13sMlCi
ZDIbm5ujLS11D4+gZ2Y6v9UX0sNBjwjn9WJ6aPB6MQAAKsyXn/Z68aIjlXp8
D4KDg+mOjsaHxcPoaJhdBkqX/f2pLzeNGhkJXVwsPPojLy+Xcr0CvVRrCIVC
Rr1ezFj0BAAA7tETeAp9S+3t7XU+QBQMVicSE+KrLPKUnJ7GcmvRKgNfYAsA
AIollUpNTk4638BVyrO42Mc7oKzI9fXL3/ca8Pr9/s3NTelT6cf0QepDdV5h
oQ9e/xG+/BOdnMx1d6uHB6HDwyEeO5chd3dr8/M9D29vaG7+/9m7E7Y4ljPN
+190vkN/Bc28PdPudve0p90+ttm3qAWKtdh3sS/FJlYBQuwIgUBCgIBa/AYZ
R2VZByGorKonAv6/6776st1HUkon88mo0p2Rxa9f937b4tADQY8F7/97W0fR
44LtxQAAeJK+eV1UYTRadXwc+3bNcH4+9+07oR7yhDvxH70SW1n5e41Wr9n0
yu27FsfGxkA4XGS2F2tra7NwezE70RMAAPhHT+CBEolELBZLt1KHhhpubu5u
pRJLsrj492fTuru7Ly4upE8iAACQQ6urq6FQyPwFbnt7kD2gLM/29nAkUmq+
DGxqajo+PpY+gx5KH6o+YFMh1r8F/Rv5m7eH1dddUm/T1FS5szMs/of8rPLp
00x/f236X0FnZ/jjx9uSxtdn027rKHpEOFFHAQAAGbu4uOju7k7vAbW42G2W
CsvLPd7fRN+uE2pqSlZWeqkW5zPX14sTE82BwK9LtYaG8v3925LGzc3S0FBD
eifYWCxm7fZiFqInAADwj57Ao+zv79fV1ZmNbevryw8OxsRXWeS3+fx5rqsr
nH42jXcNAADwTHz8+PHrS+SLw+GitbX+O3eGJ7K5vl4cHTWvhSpVSo2Ojjr3
cLc+YO8dBMr7Ldz2UtJb34dCRQsLXckkJ55M9vZGGxsr0k+r6Q8F+t+IHgh6
LOjhoEeE9LkDAADyYXFxMb0HVHNzVTRa+fWdUIVjY016OSq+aHmeOT2d7ugI
pYudHR16FV1mXgtVV1e3v78vfeI4hp4AAMA/egKPdXV19fLly6KiooKC/1bq
ryMjjT96AybJf8wrbsPh4pKSX/761z83NTV9+PBB+pQBAAD5k0wmp6eny8rK
/vKXP1ZV/bWrK/yjN2ASkWxvD9fVlZWX//nPf/5TdXX19va29CmTOX3w+rfw
xz/+17/927/85S9/0Odbd3f12dms+B/yM088vjQ93RYIFJSU/Onf//13//mf
/6EHgh4LejhInzIAACB/Pnz40NTU9Oc///L73//uj3/8D71Ua2qqfPduXHyt
8syTSq2srvaFw0X6E8F//ue//cd//FtRUeHLly+vrq6kTxn30BMAAPhHT+Cx
4vG4/hMrKCj4/e//9Q9/+H1FxZ8jkZLNzUHxVRY5OZlqawvoZf+f/vR/9UeA
P/3pv1tbWz9//ix9ygAAgLxaWFgoKyv7v//33//jP/61tPSXr893s62ocC4v
5wcG6pT661//+v/0Uu2//uv/1dTUvHv3Tvp8yZw+eP1b+NOf/qhPs+rqYvav
sCrHx7HW1kBl5V9++eW/SktL9ViQPl8AAEBenZ2dtba2/vLLL0VFfwoGC2dm
2hIJPhHYkouLV/39tVVVf/3LX/6roKBgZGTEuR3GbEBPAADgHz2BRzk6OvLe
RlqpVFEoVJTe01JHr23Oz3kNrkzi8SW92tdr/vRbxrzX3er/WhEOh9+8eSN9
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
Hkf+zzQAAJCBVCo1MjJiSgIdHSHLV6okb/n0aaa2tlSpkkAgsL6+Ln2eiqEn
AADw73n2BDY3N72dBEpqakpOTqbE1zYPTCKxfHg4vrjY3dcXiURK7/yO1zyw
39YWGBysn55uW13t29sbPT2dvrh4pX94xr90Mrl8dbXw8eP0u3fj6+v9c3Md
IyONnZ2h+vry794m8O3DaPofmJlp290dyX97IePc3CzqPz2livRnkImJCelT
FQCA5+jk5KS6ulqp2739NzcHxZcHD0wqtaIXlq9f9w4N1f/or+O9kmdRS4vq
76+NxVqWl3u2t4c+fIidn8/5+dpT/9J6qXZ2Nnt0NPn27eDCQtfoaGNPT01j
Y4X3d513H0lra2Bysln/CVvyZoEHRq9CvVZnZWdnZzwe93Om6R+ufxKvJFCo
f1rx3xqxKltbQ96VUqbHkR5K2ZpvAADg4cbHx72SQFFbW4DXDZBvoz95eT1t
HbW5uSl9qsqgJwAA8O8Z9gQODg68F92WhMNFR0eT4quazJJKrXz8OJ1+iv+e
2sB330s3NFTopbX+IX19kZcva4eGGkZGGkdHGycmmsfHo6OjTUND9QMDdf39
tT09NR0docbGiurq4h+VAb4rBrS3B8fGmlZWevUfrIW77D4w19eL3h7Ct1WB
2dlZ6RMWAIDn5fz8PBKJKHXbRXzz5qX4wiDjmDcxzcy06UXXPbWB71ZTdXVl
eh1ilmr9/ZHBwXq9VNPrK7NU0/95eLjBLNV6e2+XatFolV4H/vZNT3fubBCN
VuqV3sJC18HBmLtPY+llsP4TMFWBvr6+jDeA0j/Qe9HtbUlA/4T6pxX/rRHb
okeQ9zmoXA8lPZqyO+sAAMD9ZmdnTUlAL48degSJ5C1HR5PhcJFSJcFg8ODg
QPqEFUBPAADg33PrCZyenprH00KhosPDCfH1TBZzcfFqb290aal7fDza21sT
jVbd+Z6CrCQQKGhoqOjqCo+ONr161bG1NWThG2z95PJyvrGxwrzo6jnvXgUA
QJ5dX19Ho1HzpvjXr3vFlwRZzPX1ol586t9ULNby8mVtS4vyvtTKyVJNp7a2
tKMjNDRUPzvbvrExcHIy5WdrKduSTK709UXMu6Iy3gBK/0Czh63+qdwtuJJc
R1+z3jVVoUeTHlDZnXgAAOBH1tfXvc1gixsbKy4v58WXBMTO6E9Y3hfgtxtA
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
ZmvZrV17//YvPxQIRVlP4Pw8Ho3W2sVgNzc3tQevq+ATAAAA55SUT0BYWloq
bkvq1dXy69dTW1tjy8v9k5Ptg4ORtra6cLjSOv/ic6hQqLylpba/v+Hhw9Z4
vPfJk+G9vckic1xkZbUfvd55Hhwc/MzjaQAAAOCQFy9eBAIBYyobG6uOj4uz
WtHh4cyzZw8SiYHp6c7h4abOTn8kIqma0zxNFAyWNzfX9PQEx8ai8/M9jx/f
390dPzkpNjOnrXftR2taWlouLy+/dKTJr8gvyq/Lg8hDqd9OPiRvvQwAGQYy
GGRIyMCQ4WF93+10pMlwlUErQ1cGsAxjGcwypGVgF+XHKwlEEo4kKElokgCV
j7gHAAAAH5DJZAYHB21X58REu3o+kA+dn8f39iafPBmOx3sfPmzt729oaakN
hXKSqpWFw5VtbXWDg5HJyfbl5f6trbHXr6euroowVSvxYrD4BAAAwDml5hMQ
xsfHbUtqX18olVpRz2ecKJ1OHB7OPH06PDvbJblfc3PNnXPIQKDszl6ChoYK
eTEl81xbG5IUtwh2COX1tG6ttrOzM5lMao9ZAACAEuLx48fmmusCUKenhf0d
dyaTOD6e29oajcd7h4ebWlvrnKRqTvwD3d2BWKx1ZWVgd3f87duCN3laReDl
1qrD4fDJycndRpr8ovy6PIg8VBG0upC3Vd5ceYvljZa324kfwMlgk0EuQ10G
vAx7GfyFfgBQQpB9PE1C0vr6em5jHQAAANxCMpns7Ow0RhZi3+xsl3pW4FDJ
5PLe3uTa2tDkZHtfX6ihoeJuuZbfX+YkVWturhkcjMjr+fTp8OHhTDpd2Kla
KrUiL6ZdDHZ8fFx7zCqATwAAAJxTgj6BTCYzNDRkWwXu3QsXXEZ0cbH47NmD
mZnO3t7Q7RuA4fD1MZ/79xslBV1Y6Hn06N7GxsiLFw9fv546PZ0/P4/LQ0ma
KjlVdgdPXg35G/l7+Vf5GckYd3fHNzdHJY9dXOybnu4cHW3u7g40NVXfYiqQ
f2pvl/Ss7cmT4UI8CSh3at1IbUtLC+1HAQAA3GdhYcEuANXSUni9oiSVkvQp
Hu+VPPP2DUBJ5CRlGhyMSNY0N9e9sjIgudPOTmx/f+rkZP7sbOHt2/jl5dL7
vtZ0ekUeX/5S/klStaOjmVevJra3xx4/vr+01C/5YSzW2tcXikZrbi9QEI3W
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
1auJ4eGmD3YCHz++n0wuq6d2HtTz57H79xtvbkHnapP29HS+ra3etqH29PTQ
0AoAAKBQWF9ftzrI5/is900zZzRas7TUl48vJYtABwfT4+Nt//ty1a6sDOQq
s5XHGRyMZIs+HR4euj/S5EmzR9XkYnJ4a/JCWfXt/7unKi9mPizKRSCZgDIN
33cR21vQx8dzuXqKbM0KCSwSXtwfaQAAAHAHLi8ve3p67MKwbW31uWoKlskk
bpo5799vxDb8UUlm+/jx/Q9eruHhphz2jdrZiVk1zSrlvZ6amtIed54DnwAA
ADgHn8BNVlZWrKNqVX6/b3V10GE+s78/de9e2IUD8sUne8f+/epera11kq47
fFhJVq1zgtdlRUdHR6lVBQAAUFg8f/68oaEhe9bb4Un209P5hw9b3z+2nKcD
8sUnu5fW++UXGhurlpf7HVZhfa+saF1XV9f5+bnWSJOnlguwj6o5b0wmL4u8
OFZx+/85IJ/XGq3FoZvlF2TCyrR1+I2APGy2ZoWEFAksWiMNAAAA7kAqlRod
HbUbk0la5fy7ack3Wlvr3u+ImqcD8sWnm+UX7t0LO28Vt7o6aPXnkvzZrKys
aI84L4JPAAAAnINP4KNsb29bbUmv95/Hx9vuttt5cDAtOdL7h18ePmw9OppR
T94KSze3oDs6zNbW2N1qC6ytDWXLis7OzmYyGe2xBgAAAF/M4eFhc3Ozfda7
ry90t1P/Z2cLExPtWYeA3182OBjBzPmlkjxZ8iurUtN/W5QmEgN3y59fvpyw
sr7rsqKDg4PJZFJ3pMkFyGXYjcnkwuTy7vYSyQsiL0v2JZKXS1600mxr60Qy
PWWSZregZfLKFL6bf0OChoQOu2aFBBOVmhUAAADgkEwmMzs7m21MJvnVHbKC
TCaxtTXW0WEwczrU0dHMw4et79ccGxpqvFvVLMmTx8fbbD9nKBTa3t7WHmse
BZ8AAAA4B5/Ap5CVtKmpydp/LuvuDnzRBtSbN7PDw03ZLSxJkKamOs7P4+oJ
W+FK8sOVlYH3T2B1dvq/qOqXPEIs1mL97nVZ0bW1Ne0hBgAAAHfn3Vnv6y9w
m5trvui4yuXlkuRm2S0sydkkczs8xMx5d2Uyic3N0ba2/57AkjflS7dqJdmz
bBvXfs6pqSmP+DnlMqzGZNf7z3J5cpFfdFPyIlgNVbMOgTp5oXLVS6s0JVP1
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
bkN/f38ul5N+IZcJPQEAgHcPpCfwc/7ptx0dHZVaSTWHvXA4/HcJk5N9797N
if9LKHqOjmYikRpzZ9Hj42PplzAAAJUsl8sNDw+bqsDY2BPxY0DRo49qwWBQ
5KhWU1Ozujoi/m+g6Lm8XIrHA+b73a9evbr7i03/YHP/Cv3T9S8i/hspbvQr
7R//+If+jy7yYhsd7RH/N1CK6KFkSgJ6TD2cT54BABBxfHxsnkoWidQcHc2I
HwOKnj/+8Y8NDQ0iR7VwOCz+2y9Fbm4G29HRcXV1Jf0SLh96AgAA7x5OT+Dn
B1BJPT5+fna2+Mt8+DD3+vX4xsbQ8nJfMtk1MdE+NNTS1xd7+jTc0RFsb1dP
njQ0NwdisbpotFb/X/3X+u+0tan29mBnZ6inp/HZs5bx8bbZ2adLS30bG8+2
t0ffv5/99Gnhl/9fTk7m0+lKu0Xw+fl8U1OtUv+PvTNdayvJ0vWNnns4t5BP
P6e6uzK7q7OGzqxiBhNCAgECMYnBzLOYR4MZDbbFYMxoBJLqLHakMWU7bdC0
9ob3fb4fWS6QYm9FrFjafLFWic/n293d1Z68AAAAj59EItHe3m4LQM3ORtST
gazr/fuZz1K1o6Pp3d3Rly/7FhefT09HRkebBwYanj8PtrXdpGrhcGVjY2V9
fUVt7U2qJpL/CIUqblO19vbq7u7aoaHGaLR1drbjxYuejY3BWCx6fPwvqZq8
78XFY/treCKxFIn4jSkypnJubu6hk01+xTGlFMmLyEupX052JR/3Z5NNpoRM
DJkeMklkqsiEkWkjk0emkEwkmU4yqWRq3Z1pMvFk+skklKkoE1KmpUxOmaIy
UWW6yqSVqSsT+LMp/SiLjEk4ssfTJEBJmMpF9AMAAIC77O7u+nw+Y0pqa0vP
zh5bdhGPLx4d/UuqdnIyu78/sbk5uLraOz/fNTHROjwc7u2t7+j4lKp99RFu
U5ORVK211d/VFezrqx8ZaZqaiiwsdK2u9r16NXx4OPlZqvbu3bT65WddT7kY
LD4BAADInCflE/jnv1pS9/YeVU/SeHzh7dvR5eWuaLS5pyfY3Gyqq4udNCn7
8vuLwuHK589rRkfDCwudu7vDjyxp//BhTi7QefJsVlZWtKctAADAU+Hy8rKh
ocG6OldXe9RTgizq+npxf3/85cueqanW/v76trYqx5GYk1TN5ysIhco7OgJD
Qw1zc+1bWwPHx1Op1OPp5pBMLvX0/NZ+dHh4OL3JJr9o61f09tbKC6pfVLYk
H7R83PKhy0cvE0CmgUwGmRI5mmwyjWUyy5SWiS3TWya5THX1m5BFSSCyT54l
NEmAym7EAwAAgN9jZWXFKQB18wTyw4c59ZQgizo7m9ndHV5Y6BwdDT9/XiMX
6PcX5ShVq64ubm42PT3BaLR5ebnr7dvReHxB/Q5kUXt7Y0+5GCw+AQAAyJyn
5hMQdnZ2rCW1pqbk8NDD1atOT2c2Nvqmplq7u4N1dWX3SQ6rqgqDwZJw+Fl7
e6Czs1p+sbe3tr+/fnAwNDzcODTUMDAQkn+Rf+/qqunoCLS0+Orry++ZrMr9
bG/3j401ra72vHs34d1n0VdXi3Lh9nja5OSk9oQFAAB4WpycnNTU1FirgKQ6
6olB2rq8nH/1anB2NtLXV9fQUOHzFd4noQoGS8Phyra2KknVnj+v6en5LVWT
PM1J1erl1eQfbarW2uoLhcoDgXulapLRyc/LiywtdcVio54+RC/3wTEJPOvq
6komk+nNNPlF+XWnfkWhvKD6RaUt+ShjsTH5WOXDlY/4nqm7TBuZPPLzMpFk
Osmkkqkl98HONJlyMvHkH2USylSUCSnTUibnfV5ZprpMeHk1mfw7O0Oe7uwg
IciaBCQoSWjKbqwDAACAbzM5OWkLQLW0+K6uvGpETKWW372bWFnpHhtram/3
19SU3DN1r68vlwu3qZp9hDswcPOlYHi40aZq9hGupGrt7YFw+FkwWFJVda9v
HHV1ZfKLU1Otkup4+uTX4WHUuZ83xWB3dna0J6wC+AQAACBznqBPQFhfX7dW
gWCw9P37SfWs5p5KJpcODqJLS12SCn7DGBAIFDU1VUq+Nz7eJD+8vT0ov3Vy
Mp2JX/T6elHyRklrd3eHJbOdnGyx5+C+kdzKMCSPnZ2NvHkz4qFTRTJUua7b
42m0HwUAAMg/BwcHTgGosqqqwlevBtXTg3sqlVqWxPLly56hoYbGxmff8G02
NFRImjQ6Gp6f79jc7N/fH5dULZM/pyYSSxcXc0dHk5J3ra31Tk+3DQ6G2tsD
kjH+nj9BhiE5z+Rk6/b2gIf+kis3eWSk0bmEZ5FI5Pr6OpOZJr8uL2JbXcjL
esjmKh+ZfHDy8cmH+HsPhOWjlwkg00Amg0wJmRgyPWSSyFRJJtO/Unlrma4y
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
ixfP85ClvHs3MTbWdNfTKG/d1la1tNT1OE4J3VMHB9HJyVanAeinVK2x8Vl+
HgwmEks9PbW2M1RLS4t8ecn1TLu8vJQ3slVt5a3zUO3K2obllv6rPaBCbnue
Dcy6kmUli0uW2F3DgCxAWYayGPMwAAkszluXSaiRgJPrmQYAAABpkEwm+/v7
HatAUTj8LA9p+fX14vp6n1OG9FOqVl1dPDzcuLs7/FjtAV8qHl+Q+9DdHfzs
UXZ/f/3r18N56Efw9u1oIFBkTInP51teXtaeiW4BnwAAAGQOPoFb1tbWnKoC
N1Vtc3dULZFYWl3t+exJoGS2S0tdT8ce8KWSyeWtrYGurpq7DwaDwdLp6bbc
ndR7927CaWh1YxIYHpacNqU9BwEAAOB32dvbq6mpMebmhPvkZGuOHkbJy756
NfhZ1fe6ujLJSU5PZ9RTJi3JbXn7dnRgoP7uSSL575GRxtxVgrq8nHcqOdyY
BCKRSDwez89MkzeSt7NWARlA7uwQcuvkBn52S+Umy612Q+9XLclCk+X2WfML
WZKyMHO36iWkOG9ULkFGQk1+ZhoAAACkQSqVGhoaslaB+vry3PkJLy7mJCe5
W0DA5yvs6qrZ2hpIJp9uqhaPLywtdTmnrv7FRby62pM7h+36ep/tDGWMWVtb
056DLgKfAAAAZA4+gbtsbm7aqraS4czORrKb0lxezstr1tZ+Si8DgeKhoYa9
PbWmTi7U2dnnDwbtI+j37yez+0a7u8PWhioZZjQaxSQAAADgfg4PD+vq6mwH
+b6+uuw+ibJmzrvdoHy+gp6e2p2doadzUOi7koR2aamrqenuXbqpiJX1elzH
x1NO14MbP2dXV9f19XU+Z5q8nbypff4sw8i6F0Jul9y0u/5YuaVyY/Ncu9XN
kkUnS08WoNMI4FOF26w/gpZXk2DivH6FhBcJMvmcaQAAAJAGqVQqGo3aHrKB
QNHu7nB285D37yc/M3Na2/DZ2dO1DX+pvb2xoaGGQOBThdja2tLZ2UjWE1p5
Tef1bzpDbW1tac8+d4FPAAAAMgefwGfEYrFgMGiPqkm2kxWD6Pn57NhY0930
MhQqf+IFBL6tZHJpe3vwblEv+wg6W8VXV1d7nEeONzbUpaUl7UkHAAAA9+Xs
7OxjB/mbLgAfPmSh7tD19eLcXPtdM2d1dfHUVOuT6i/wUO3vj3/86+pvamnx
Sf6WlRPfsdiY0/Gh2JjKkZERlc5Q8qby1o5VoFgGI0PK/Lrk5sgtkht1977J
bZSbqf6BulayDGUx3m1SJktVFmxWOpRJAJEwYmtWSGCR8JL/mQYAAADpsbS0
ZAvD+nwFq6s9WUk8Dg6in5k529sDkr9hG/492fICjr/304GvsbGmrHyTSiaX
h4YabNGnYDAYi8W0J53rwCcAAACZg0/gS46PjxsbG+3z587O6kxskBcXc9Fo
812HQFtb1eZm/1MuJfogffkIWtL1w8P03QJy5ycmWmyGGQgEXr16pT3dAAAA
4GHE4/HOzk571ruhoeLoKP2iQ9fXiwsLnc6fpD+ZOZeXn2flT5BPQScn0+Pj
TXePEbW0+HZ2hjJ5zZcve5yyoje9R+fm5nQnmwxAhiGDkSGtrfVmcl1yW+46
BOSmya2TG6j+IXpCsiRlYd59BC3LVhZvJktVQocEEFuzQkJK3hpbAAAAQLZ4
9epVIBCwp70mJloyedx6eHjjEMDMmZ7kzm9u9jv2y09ugWi0OZNmspeX852d
1dbP2djYeHx8rD3d3Ag+AQAAyBx8Al/l8vLSaUv6W6+rNI6xf/gwNznZetch
0NNTm5WDSE9Q9hH03ZvZ21ubxh8F5ENxMsybsqK1tbWSLGlPNAAAAEiHZDL5
sS1pcSBQtLnZ/9CsIJFYWlrqCgY/OQRaW32YOdPT5eX83Fz73eatbW1Vr18/
uABsMrk8Ohq2ZUWrqqo2Nja0J9oNMgwZjG1MJsNLo9qY3Iq7T03lRsntosVA
GrKPoGWp3rmZJbKQ0+hEIK/j9CC7qVkhwUSlZgUAAABkzsHBQW1trW1M1tlZ
nUa1saOjyd7e2rt/4MbMmbZisbGenn+5mZOTrWl8KAcH0fr633qQRSKRy8tL
7YnmUvAJAABA5uAT+D0SicTH588lktW8fHnfAlaJxNLcXLvz3Om3pOj585ps
Fcx/yrLtG5zzZb91IhgcDN2/jNXdDLOlpYWyogAAAF5nfn7eqTVaZg8Q3bMc
aCq1vLbWW1dXdpuqNTeb7e0B9VTH67q+Xpyf77hbnKGjI3D/MlCS1EUifufE
0I2fc29vT3t+fSIWi318/lwog7x//imXLzfh7hF4uUVUq8hcsmBl2d5tGSyL
+p4mHwkUH8uLSRAwEka05xcAAABkxNnZWUtLSxqnvSSpGxwM3XYZqKoqzFbB
/Ccu+QieP6+5U0eraG6u/f7Gzpcve5zDYiXWz5lIJLSnmHvBJwAAAJmDT+Db
LC8v3x4gGhlp/G5Ks7nZHwpV3CZCnZ3Ve3vUEMimzs5mhocbbt0CgUDxfVLN
1dXfCtiSYQIAADwmXr9+XVNTY/+A29ER+O5Zlf398bsnu8PhSmoIZFfx+MLM
TORuN3nJ3L77ubx9O+rUdvjtxNDFxYX2zPocGdJttTEZqgz421cklywXfnsT
5IbIbZGbo/4BPRrZ2gKyhO9WsfhucWD5XBznxo0dRUKHBBDtmQUAAABZ4O5p
r6qqwtXV75z2+njIq/jWISCZ29nZjHqG85i0tzf2sayr7e9W8d0qcPK5jIw0
3pYXW15e1p5ZbgefAAAAZA4+ge+yv79fV1dnnz+3tPjev/96ufvDw2h7u/9u
b9bvPj9Eaev0dKa/v/4+qWY8vjAwUH+bYb548UJ7QgEAAEA2OTs7a21ttX/A
rasr+71y9/a40G3yUF9ffv8DyOihurycn5xsvWPsLFpY6PhqxX75CGZnIz5f
gePnNGNjY66tAC8Dk+E5JSxKZMAy7K/OH7lMudjb2mJyE+RW0GUgR7LlQZyi
Yb8t7W8UHJPg4BQSubGjSNCgvBgAAMAj48WLF7envQYG6n/PovnZIa/+/vrT
UxwCudLbt6MtLZ+aRrW3+3+v4Nj795POT974Oevq6vb397UnlAfAJwAAAJmD
T+A+XFxctLe32x64fn/Rykr33TRG0s6PrVR/65J5/yYFKBPFYmN3U82OjsBn
7cNisdFQqNzJMJ9JhumqArYAAACQLRKJxPDwsPMH3FKfr3BiouVuraFkcsn5
u23xbZfMmZkItd/zIEnM7jZ7bWioePNm5O4PnJ3NOL0G5P8t9/v96+vr2lPp
+8ggZagyYBm2DP6zc2dygXKZt5csl89j5zxIlrMsaqc+7W8FxxxfyqcgIAFB
woJTVbhUwoSEC8qLAQAAPEr29vac017PjCkMhcpjsX85wyXZ6d2eUC0tvs9+
AOVIL1/2ONXDfrvzo6Phz1wcKyvdTi4nX9kq29vbXVhezJ3gEwAAgMzBJ3BP
ksnk9PT0bQ/c7u6gLaD66tXgbX9b57hQy9UVBUXzqrW13tra0tsn//PzN6fV
ksml6ek25x9veg309PRcXl5qTyIAAADIIWtra4FAwNaAam42R0c3NaAOD6N3
XYX9/fUUFM2z3rwZaWr6VBx+eLjRPhVcX+9zDt3fHO5ubm4+OjrSnkH3RYYq
A7YlLOQS5EL+6TiH5dJuL1Mu+TNTBMq1ZGnfLTgmC9+eVpNQcPNxOWfTJERI
oNCeQQAAAJBDLi8ve3p6bA8CSQmmp9uSyaVkcnl+vuPWVVhbW7q21quevTwp
XV0tTE623BYcq6sre/Vq8J9OW6ju7qCtBCsZ2/T0tGvLi7kQfAIAAJA5+AQe
RCwWC4VCjiu1qLq6+G5DzK6uGo4LKaaa0Wjz3UrCThmB386mraysaE8cAAAA
yAenp6dtbW22BlRV1Y1bwClo/9vfbTkupKVUanl5ueu2FP+dLLrM5/NFo1HP
He6WAcuwZfDWQiyXIxd122RBLpaWFlqKxcZufSmy/CUIOI+jb86mSXCQEKE9
dwAAACAfvHjx4rYGVChUfrdLUTTazCEvLZ2eznR11dx+Fh+zaPma8CwUCsVi
Me2J4zHwCQAAQObgE3go8Xh8YGCgsLDwp5/++PPPP5aX/xoM4kF1hQ4Oos3N
prLyH3/7259+/PE/fvnlf5uamo6Pj7WnDAAAAOSPZDI5MzNTWlr6pz/993//
9x9LSv63qqpwZiaSTPJ3W2Wdnc04Z4X+8fe//1lStb/+9S/BYHB3d1d7yqSP
DF4uQS5ELkcuSi5NLpCCFeqSxS5LXha+LH8JAhIKJCBIWEilUtpTBgAAAPLH
8fFxU1PTL7/8r6Rqf/vbnyor/9HcbA4Oouq5Clpb6w0GS8vLf/355x9/+umP
hYWFAwMD8Xhce8p4D3wCAACQOfgEHookLf39/ZLA/OMff5UMc2Cg/vJyXj2/
QlbJ5PLcXLvfX1Rc/L9///uv8nXAQzVsAQAAIHNsr6jS0tJff71J1draqt6/
n1RPUdCtNjf7a2tLy8p+/eWXvwUCgZ2dHe0pkz4yeLkEuRC5HLkouTT124tu
JQtflr8EAQkFEhCoYQsAAPDUODo6ampq+vvffy0u/l+/v2hurh3nsHt0eTk/
MFAvqdo//vHXwsLC/v5+fAJpgE8AAAAyB5/Ag3j79m19fb3tO1BXV7azM6Se
VqEvdXIyHYn4b/sOLC8vc3oIAADgKXC374Dff1P+XT0tQV8qHl8YHAzdNiEd
Hx/3Yt8BGba54abvgFyOXJT6jUVfSoKA04mYvgMAAABPiJTT9eq270Ak4j85
mVZPS9CX2tkZqqsrs30H6uvr3759qz13PAY+AQAAyBx8AvckmUxOTU3dPgzs
6QlSRsDNki8EMzMRpyVxiTGV3d3dMtu1JxEAAADkkJcvXwYCAWMqjClsafEd
H0+pJyToG9rY6KupKXGeClaGw+F3795pz6D7IkOVATt2lCK5BLkQ9ZuJviEJ
BRIQJCxIcJAQIYFCewYBAABADvnw4UN3d7eTqpX4fAUzM5FUijIC7tXl5XxP
T/DWQjw1NUUNqPuDTwAAADIHn8B9uLi4iEQi9mxaIFC8utqjnkSh+2hvbywU
KneeCj6rq6vb29vTnkoAAACQfRKJhCS0Hx8GFk5OtlJT1BM6O5tpb/9UA2pt
bU17Kn0fGeTt2TQZvFyC+m1E35UEBAkLEhyshVjChedKWAAAAMB92Nvbq6ur
cyrBFoZC5Xt7Y+p5CLqPVld7AoFiWwMqEolcXFxoTyVvgE8AAAAyB5/Ad4nF
YrW1tfZsWmurj0JV3tLV1cLQUIN1pVZVVS0vL2tPKAAAAMgmZ2dnLS0t9nB3
XV3Zmzcj6ukHur9SqeW5ufaqKvsHXDM6OuraA0QyMBmeU16sRAYsw+Zsmrck
weFjYdtKCRoSOrTnFAAAAGST5eXlqqoqWwl2aKjh6oq2UF7Sycl0a+tvNaBq
a2tjsZj2hPIA+AQAACBz8Al8m6WlpdsMc3Q0zNk0j2ptrdfpTHpzgGhwcPD6
+lp7ZgEAAEAW2N3drampcfycBZ2d1R8+zKlnHSgNxWJjtbWl9g+4kUjk/Pxc
e2Z9jgzpY3mxIhmqDFj9pqE0JCFCAoVjIa6Q0CEBRHtmAQAAQBa4vr4eHBy0
5cX8/qK1tV71rAOloWRyeXQ0fHvaa2lpSXtmuR18AgAAkDn4BH6PRCIxMDBA
hvlodHAQDYUq7PPn5uZmDhABAAB4nbm5Oedw942fc3KylcPdntbFxVwk4rcH
iILBoKsOEMlgZEi2vFh7e0CGqn67UNqSQCHh4rYHroQR7fkFAAAAGXF6etrc
3Gz9nKFQxcFBVD3fQJno7mmvgYEB2kV9A3wCAACQOfgEvsrl5eXtiaFQqPzw
kAzzMejycr6rq8YeIKqtrd3f39eeaAAAAJAOyWRSMlgnVSsOBIq2tgbU0wyU
uZLJ5bGxptsDROvr69oT7QYZxm15MRke5cUehyRoSOiwPXAlmLi22wUAAAB8
m/39/Y/tYgu6umouL+fV0wyUuQ4Po6FQ+W21scvLS+2J5lLwCQAAQObgE/iS
4+PjUChkzDNjCiXDjMfpZvV45BwgarHPn/1+//b2tvZ0AwAAgIcRj8c7Ozut
n7OhoeL4eEo9wUBZ1Pp638cDRGZ2dlZ3sskAnJoVN+XFZGDqNwdlURI6JIDY
588SUiSw6E42AAAAeCjb29t+v/9jebEWyos9JsXjC85pr0JjnoVCoePjY+3p
5kbwCQAAQObgE/iMWCzmdLktlwxzeLiRE0OPUi9f9lRVSZ5ZaoxZXFzUnnQA
AABwX87OzsLhsPVzRiJ+/JyPUrHYaDBYas96Dw8Pq5z1ljeVt7Y1K2QwMiT1
24KyLgkgH7tdPJPAQmMyAAAAD7G4uOj4OUurqgpfvuxRzytQ1pVMLg8PNzqn
vcprampc1ZjMJeATAACAzMEncJfNzc3bsqJzc+3q6RDKnV6/Hq6uLrbPn8fH
x7WnHgAAAHyfg4ODj23iC/r76xOJJfWMAuVIx8dTjY3Pbs96X11d5XOmydvd
1qyQYVCz4hFLwogEE9uYTMKLBJl8zjQAAABIj/HxcevnrK4ufv16WD2jQLnT
3Fz7bWOyzc1N7annLvAJAABA5uATuGV1ddWWFa2qKtzY6FfPglCudXQ0WV//
W68rWQWpVEp7DgIAAMDvEovFqqurbdGnqalWyoo+el1ezt+e9W5ra8tbW1J5
I3m725oVdLl99JJgIiHFHlWTIMNRNQAAADeTSqWGhoasn7O+vvzoaFI9l0C5
1sZGv1MY9qYx2erqqvYcdBH4BAAAIHPwCViWlpasSaC6ujgWG1PPf1B+dHEx
19xsrFWgr69PpaotAAAAfJc3b94EAgFb9GllpVs9hUD5USKx1Ntba60Czc3N
8uUl1zNN3qL5Jju8MQnIW1Oz4ulIAos9qiahRgJOrmcaAAAApEEymezr67Mm
AUnZLi7m1FMIlB/FYmNOYdgbq8DS0pL2THQL+AQAACBz8AkIc3Nzjkngpvfo
wUFUPfNB+dTl5XxbW5Xz/Lmyu7s7kUhoz0cAAAD4F3Z2dvx+v1NqkqJPT07J
5NLgYMiWhQ+Hw+fn57mbafLi8ha2sYW8qby1+uWjfOrjUbUyCTgSdnI30wAA
ACANEolEd3e3YxIobGuroujTU9PBQTQYLHV6yJq5uTnt+egK8AkAAEDm4BOY
mpqyDa1qa0upVfU0dXW10N5uq9pWdnR0XF9fa89KAAAA+I3Nzc2qqipjSquq
Cre3B9TTBqSi0dGwtQqEQqHT09NczDR5WXlxaxKQt1O/ZKQiCTKOVaCUBrgA
AACu4vr6uqOjw5oE2tv9V1cL6mkDyr+OjiZra61VoHJqakp7VuqDTwAAADLn
ifsEZmZmrEmgvr78+HhKPdtBWrq+XuzqqrFVbTs7O6kqAAAA4Aa2t7d9Pp8x
JX5/0evXw+oJA1LUxETLrVUg61UF5AVvTQLyRuoXixQloUYCjoQdCT4SgrI7
0wAAACANEolEZ2en7QzV1VVzfb2onjAgLR0fT9XXl1urwMzMjPbcVAafAAAA
ZM5T9gksLCzYdgOhUPnZ2Yx6noN0lUgs9fTU3jYgSCaT2jMUAADgSbO7u2sr
CQQCxbHYmHqqgNQ1Pd1224BAvshka6bJS922G5C3UL9MpC4JOBJ2bFUBCUTZ
mmkAAACQBslk8rbdQE9PbSJBZ6inrrOzmVDIWgXMwsKC9gzVBJ8AAABkzpP1
Cbx48cKaBOrqyk5PMQmgG8l3jY9VBSr7+/tTqZT2PAUAAHiixGIxv99vTKnf
X/TmzYh6koBcotuqAs3NzZeXl5nPNHkReSkqCaDPJGHHqSogIcgv4SjzmQYA
AABpkEql+vv7rUmgq6sGkwCyOj2dqasrs1aBFy9eaM9TNfAJAABA5jxNn8Da
2pqtYVtbW/r+/aR6boPco+vrxfb2gLUKyNLAKgAAAJB/9vf3AwHZjsuqqgpf
vRpUTw+QqzQ6GnasAs/a2tqurq4ymWny6/IiTg3bAnlZ9UtDrpIEHwlBEogk
HElQylZ8AwAAgHuSSqWGhoasSaC9PUC7AXRX799P1taW2l5Ra2tr2rNVB3wC
AACQOU/QJ7Czs+NUEiipri5+925CPatBblM8vtDa6jOmSL6JTExMaE9YAACA
p8XJyUkwGDSmzJiCzc1+9cQAuVCDgyHH1fmss7Mz7V5R8ou3jW7lBdUvCrlQ
EoIcU0qZBCUJTdmNdQAAAPBtJiYmHJNAUWurLx5fUE8MkNv07t1EdXWxtQrs
7OxoT1gF8AkAAEDmPDWfwOHhoXM8rTQQKDo4iKrnM9nSD6qoX37WJd8+wuFn
jlXgSVevAgAAyDOSnTY0NBhTbkzBy5c96ilBFkW2lkUlk0u9vbW2ANTw8HB6
k01+0R5Pk5eSF1S/qGyJmZZdSSByrALlEpokQGU34gEAAMDv8bFjbFE4/OyR
mQTI1rKog4NoIFDkPOoPHB4eak/bfINPAAAAMudJ+QRkZ6yrqzOm3Ocr2NkZ
Us9ksiib6f3000//qcG7d9Px+GOr/XV2Zhtd3VhSd3d3tScvAADA4yeRSNwW
gZ+ba1dPBrIrSdV+/PFHlVTtj3/84/n5nPodyK4SiaVIxG8LQM3Ozj50ssmv
2ONp8iKPrNGtzLR///d/V5lpwtHRtPodyLokHN22upAwlYvoBwAAAHfZ3d21
HWPr6srOzmbUk4Hs6t/+7d+0vhf89NNP6pefde3sDPl8N67Ourq6s7Mz7cmb
V/AJAABA5jwdn0A8Hm9qajKmwpiClZVu9Rwmu7I+ga6yssn/9/8eql8dCrtW
05D93dHR53t7k+o3Ies6PHzSllQAAIB8kkql+vr67PnuoaEG9TQg65JUzefz
ZZJxpf27xcXFS0sD6ncg6/rwYa6x8ZkxxcaY9fX1+082+WHneFqx/Lq8iPqF
ZFcy0/7xj38M/+lPKt8LBgc71e9ALiRBydavkDAlwSp3kRAAAADuFoM9PHw8
xWBv9V//9V/Pnj1T+V7g9/vVLz8XWlnpdlydFU1NTfF4XHsK5w98AgAAkDlP
xCeQTCa7urrs8bTJyVb17CXrsj6Bob/85fX/+T8Plf3d/xj+Zxqyv7u+PvL+
/WMz91rt7g7fWlLPz8+1JzIAAMCjZXJy0poEurpqksll9Rwg65KUqaysLJOM
K+3f/emnnzY3R9XvQC50fDwVDJYaU1JVVRWLxe4z0+TH5IflV+QX5dfVLyHr
kk/8b3/728r//b8q3wumpnrV70AuJEFJQpO1CkiwynU8BAAAeLKcn5/fFoPd
3R1WzwFyoT/+8Y+//PKLyvcC+T6ifvk50uRkqy0A1dXVlUwmtSdynsAnAAAA
mfNEfAITExP2yXNfX5163pIL4RPInV68eG4tqRQaBQAAyBGbm5v2fHdTU+Uj
az96K3wCOVIsNur3FxlTFgwGv+vqlB+QH5Mfll+RX1QffC6ETyBHktAkAcrW
r5CQlZ/YCAAA8KT42IbsphjsixfP1Xf/HAmfQI7U11dnXZ0TExPaczlP4BMA
AIDMeQo+gY9PnotaWnyPrP3orfAJ5FTj4002zxwdHdWezgAAAI+No6MjW1m0
pqbk8bUfvRU+gdxpfb3Pujojkcg3Tg/J/yU/YJ88y6+oDztHwieQO0mAkjBl
u5JJ4MpnnAQAAHgKjI6O2nNe4+NN6vt+7oRPIEdKJJZaWnzGFD0dVyc+AQAA
yJxH7xN4//69ffIcDJY+7ifP+ARyp2Ryub09YPPMly9fak9qAACAx0M8Hm9s
bDSm3JiC168fZ2VRK3wCOdXY2PddnbdPnuWH1QecO+ETyKkkTDmmlHIJXE+q
+y0AAECuefnypT3n1d4eeJRtyG6FTyB3OjubcbqS3bg6379/rz2pcw4+AQAA
yJzH7RO4uroKh8NP5MkzPoGc6uJirq6uzJgSv99/eHioPbUBAAAeA6lUqre3
15hnkqrNz3eob/c5FT6BnCqZXI5E/NbVuba29uVkk3+0T57lxx73k2d8ArmW
BCvb/VbClwSx/EdOAACAx8fh4aHfL7lcSV1d2cXFnPp2n1PhE8ipbl2d4XD4
6upKe2rnFnwCAACQOY/bJ9DX1/d0njzjE8i1YrHRqqpCyTNDodCjzzMBAADy
wMLCgj3f3dMTTKUe859u/4lPIPe6uJirrS21rs53797dnWnyP+2TZ/mBR//k
GZ9AriXBSkKWrV8hQUwrfgIAADwarq6uQqGQMeVVVYWx2OPPWvEJ5Fq3rs6+
vj7t2Z1b8AkAAEDmPGKfwOrqqn3y3Ntb+xSePOMTyIOWl5/bPHNgYEB7ggMA
AHibg4ODqqoqY0rC4cqrqwX1XT7XwieQB8ViY9bV2dTUlEgk7EyT/7AVxpwn
z2Pqg8y18AnkQRKyJHBJ+JIgJqFMN5YCAAB4nYGBAXvOa3n5ufounwfhE8i1
Uqnl3t5a6+pcXV3VnuA5BJ8AAABkzmP1CRwfHwcCAWNK6uvLLy/n1fOTXAuf
QN7U01NrS9qur69rT3MAAACvcn193djYaP90++7dhPr+ngfhE8iP5ubaHVdn
5fj4uJ1s8h+OebhA/i/14eVB+ATyIwlc1pQioUwCmm5EBQAA8C7r6+u2OVRP
T636/p4f4RPIgy4v5+vry40pCQQCx8fH2tM8V+ATAACAzHmUPoFkMtnW1mZM
hc9X+Pbtk3goik8gb/rwYa6ursyYUskzT09PtSc7AACAJxkZGbF/ul1c7FTf
3PMjfAL5USq1HIn4ratz18E+eZZ/fPQVxqzwCeRNEr6sKUUCmnZMBQAA8CSn
p6fOOa/SurqyDx8eeXOoW+ETyI/evh31+QqNqWhra0smk9qTPSfgEwAAgMx5
lD6Bqakp23FgaqpVPSfJj/AJ5FOvXw/bPDMSiaRSKe35DgAA4DG2t7ftn247
O6ufyJ9u/4lPII86O5upri42pqzawfmPYvlH9YHlR/gE8iYJXxLErClFwpp2
ZAUAAPAYqVQqEonYc16vXw+r7+x5Ez6BvGlyssV2H5iamtKe7zkBnwAAAGTO
4/MJ7O3tOU+ei1tbfcnkE3ryjE8gn4pGm22eOT8/rz3lAQAAvMTl5WVNTY0x
pcFg6fn5rPqenjfhE8inNjb6jSn4y1/+/Msvf5P/kP+pPqS8CZ9APiVBTEKZ
BDQJaxLctOMrAACAl5ifn7fnvKLRZvU9PZ/CJ5A3JZPLra0+Y4qNMXt7e9pT
PvvgEwAAgMx5ZD6BZDLZ1NRkTLnfX3R8PKWejeRN+ATyrERiqblZcswSv99/
cnKiPfEBAAA8w8DAgDHPjCnY2hpQ39DzKXwCeVZTU+WPP/5HWdmvAwP16oPJ
p/AJ5FkSypzuA88kuGnHVwAAAM9wcnLi9/uNKWluNonEkvqGnk/hE8injo+n
/P4iY8qbmpoeX/cBfAIAAJA5j8wnMDs7a3vdLiw8lV63VvgE8q+Dg6jzSLCi
o6OD7gMAAAD3YWdnx3Yc6OurU9/K8yx8AvlUPL5QU1Py97//uba2VP5bfTz5
FD6B/EsCmu0+ICFOO8oCAAB4gFQq1dHRYUyFMQUHB1H1rTzPwieQZy0sdDqP
cCtnZ2e1536WwScAAACZ85h8Au/fv6+qqjKmuKXFl0w+LScqPgEVTUz81uVq
ZWVFe/oDAAC4nevr6/r6etss/uJiTn0fz7PwCeRTIyONzsPAf2xs9KkPJs/C
J5B/SUCTsCbBTUKcBDrtWAsAAOB2VlZWbMeBiYkW9X08/8InkGclk0stLTfd
B6qqqt6/f689/bMJPgEAAMicx+QTiEQixpT7fAWHh0/OiYpPQEXX14uhULkx
JdXV1efn59orAAAAwNWMj4/buk8vX/aob+L5Fz6BvOnt21HHJFDQ3R1UH0z+
hU9ARRLW7Dk1CXTasRYAAMDVnJ+fV1dXG1MSCpVfXy+qb+L5Fz6B/OvwMOrz
SapWHolEtFdANsEnAAAAmfNofAK3TtTJyafoRMUnoKXd3WHbfaCvr097EQAA
ALiXg4MDp+NAcWdndSq1rL6D51/4BPKjZHK5oeGmhm0gUHR29hQTVHwCKpKw
JsFNQpyEOQl32hEXAADAvfT19dmOA7u7w+o7uIrwCahocrL18VWFxScAAACZ
8zh8AvF4vKamxpjSUKg8kXhaHQes8AkoanAwZBuSvn37VnspAAAAuJFUKmXr
Pvn9RScn0+p7t4rwCeRHCwsdtpjA8vJz9cGoCJ+AliS4SYiz59Qk6GnHXQAA
ADfy9u1bxzxcNDgYUt+7tYRPQEWJxJJTFba0pqYmHo9rL4XsgE8AAAAy53H4
BKLRqDHPjCnY3h5QzzpUZLNESfZ+0OCJ+wQuLuYCgZtHgi0tLdpLAQAAwI1s
bGzYuk9TU63qG7eWFFO1p+MT+PDBtokvaGqqTCafonn4nx99AvKhq0y2p+wT
EEmIs+fUJOhpx10AAAA30tLSYkx5IFB0cTGnvnFryfoEVFK1p+wTEG1vDziO
4mfRaFR7KWQHfAIAAJA5j8AncHx8XFVVZcvYqucbWrpN9lSSzCfuExDNz3fY
R4Krq6vaCwIAAMBdXF9f19fXG1NaV1f2NDuQWimmak/HJzA83GCLCbx5M6I+
GC39gE9ATxLiJNBJuJOgJ6FPO/oCAAC4i9XVVWsenp/vUN+1FYVPQFG2UVRV
VdXx8bH2gsgC+AQAACBzHoFPoLu725gKn6/g6GhSPdnQkk326DugpdvSVbW1
tY+mdBUAAEBWmJmZcZ4HFqyv96lv2Yr6gb4DOda7dxPWJNDTU6s+GEX94PgE
fu57l/ZMS+MLxe13iifuExBJoHPmYaWEPu3oCwAA4CLi8Xhtbe1Tbhp7K/oO
KOroaNLnk1Storu7W3tNZAF8AgAAkDle9wns7u46ba0KR0fD6pmGovAJqGtr
67fSVZOTk9rLAgAAwC2cn5/7/X5jStraqlKpZfX9WlH4BHKtjo6AJGNVVYUn
J9Pqg1EUPgFdSaCTcCdBT0KfBEDtGAwAAOAWJicnbdPYra0n2jT2VvgEdDU6
Gnaqwprd3V3tZZEp+AQAACBzvO4TaG1tNaaspqbk8nJePc1QFD4BN8h5Ol3s
9/svLi60VwYAAIArGB0dtc8D9/fH1XdqXeETyKlevx62xQQmJ1vVB6MrfALq
knBn/cMSALVjMAAAgCu4uLhwzMPFHR0B9Z1aXfgEdPXhw1xNTYkxZa2trdor
I1PwCQAAQOZ42iewvb1t21rNzbWr5xi6wifgBu3tjdlHguPj49qLAwAAQJ+z
s7Oqqipjiru7g+rbtLrwCeRUzgnugkCgKB5fUB+MrvAJuEES9GzrWwmD2pEY
AABAn/HxcWse3tsbU9+m1YVPQF1zc+1OSYHK7e1t7cWREfgEAAAgc7zrE0il
Us3NzbaYwPX1onqCoSt8Ai4RjwQBAABuGR4eNqbC5yt8925CfY9WFz6B3Gln
Z8gWE5iZiagPRl34BNwgCXoS+iQAShjUjsQAAADKYB7+TPgE1HV9vWhLCjQ3
N6dSKe0lkj74BAAAIHO86xPY3Ny0xQQWFjrVswt14RNwiQ4OolQZBQAAEE5O
Tnw+nzHFfX116hu0G4RPIEdKpZZbWmSmFVRXF1NM4J/4BFwjCX0SACUMSjDU
jscAAACa3HYiOziIqm/QbhA+ATdoYaHTlhTY3NzUXiLpg08AAAAyx6M+gVQq
FQ6HjSkLBikmcCN8Au5Rb2+tLSlwenqqvVAAAADUGBwcNKbCmIKjo0n13dkN
wieQI21vD9piAvPzHeqDcYPwCbhEEvqcmVkhwVA7HgMAAKhxenpqiwn09taq
784uET4BN+j6ejEYvCkpEA6HtVdJ+uATAACAzPGoT2Bra8sWE1ha6lLPK9wg
fALu0W2VUUoKAADAk+X09NQpJlA0MFCvvjW7RPgEcqTW1ptiAsFgKeZhK3wC
7pEEQAmDEgzxDwMAwJPFKSZAJ7J/ET4Bl2hpqcuWFNja2tJeKGmCTwAAADLH
oz6BSCTiFBMoTSSW1JMKNwifgKvU03NTUsDv98sS014rAAAACoyPj9viohQT
uBU+gVzo7dtRW0xgbq5dfTAuET4B9+hjSYFnEhK1ozIAAIACHz588Pv9xhT3
9FBM4JPwCbhEicRSMFhqTFkkEtFeK2mCTwAAADLHiz6Bvb09c0PhzExEPaNw
ifAJuEqx2Jh9JDg7O6u9XAAAAPLN5eVlIBAwpqS7O6i+KbtH+ARyIZljknQF
AsXx+IL6YFwifAKukjNFSyQkSmDUjs0AAAD5ZnZ21pqHY7Ex9U3ZPcIn4B7N
zESckgJmb29Pe7mkAz4BAADIHC/6BHp6eowp9/uLLi/n1dMJlwifgNvU1lZl
TEltbW0ikdBeMQAAAHllfn7e6Q9V8ObNiPqO7B7hE8i6jo+nnGZPBWNjTeqD
cY/wCbhKEgYd/3ClBEbt2AwAAJBXEolEbW2tMSVtbVXqO7KrhE/APbq8nPf7
i4wp7+np0V4x6YBPAAAAMsdzPoGTkxOnmEDR6GhYPZdwj/AJuE2bm/32keDq
6qr2ogEAAMgfyWSyrq7OmJKWFp/6duwq4RPIuoaHG2zTgdNTEtFPwifgNkkw
lJAogVHCo3aEBgAAyB+rq6vWPLy52a++HbtK+ARcpdHRsDFFxpiTkxPtRfNg
8AkAAEDmeM4nMDY2ZkyFz1d4fDylnki4R/gE3KZUajkUKjemNBwOay8aAACA
/LG+vm6fB66v96lvx64SPoHs6sOHOefsT0FfX536YFwlfAJukwRD6x+W8Kgd
oQEAAPJHY2OjMaWhUHkqtay+HbtK+ARcpY81yirGxsa0F82DwScAAACZ4y2f
wPX1dXV1Ne1uvxQ+ARdqaanLtriKxWLaSwcAACBPRCIRY8rq6sqSSZ4H/ovw
CWRXi4udtpjA3h7tbv9F+ATcJgmGEhIlMEp41I7QAAAAeSIWizn1YAuXlrrU
92K3CZ+A29TdHTSmpLq6+vr6WnvpPAx8AgAAkDne8gmsra3ZE2qvXg2qpxCu
Ej4BF+q2xdXg4KD20gEAAMgH79+/t88Dp6fb1DditwmfQHYVDt98KQiHn6mP
xG3CJ+BCSUi0/mEJktpxGgAAIB8MDg4aU+73F11ezqtvxG4TPgG36dWrQVv9
aW1tTXvpPAx8AgAAkDne8gncnlCjYtVnwifgTg0M1BtT7Pf74/G49uoBAADI
OdFo1PaHOjsjMfhc+ASyqFhszBYT4ITal8In4EJJSLT1bCVIasdpAACAnBOP
x/1+vzHFAwP16ruwC4VPwG1Kpbxa/QmfAAAAZI6HfAKcUPuG8Am4U2/fjlo/
6vLysvYCAgAAyC2JRCIYvCnY2NVVo74Fu1D4BLKooaEGSbH8/qJ4fEF9MG4T
PgF3SgKjhEcJkhIqtaM1AABAblleXrb1YN++fVQpaLaET8CF8mj1J3wCAACQ
OR7yCXBC7RvCJ+BOpVLLDQ0VxpQ2NzdrLyAAAIDcsrGxYZ8Hbm0NqG/BLhQ+
gWwpHl9wWjsVcELtq8In4E5JYLT+YQmV2tEaAAAgtzQ3NxtT2tBQQT3Yrwqf
gAt1W/1pYmJCewE9AHwCAACQOV7xCSSTSU6ofUM2S5Rk7wcN8Al8QwsLndaP
enh4qL2MAAAAckhXV5cxZbW1pckkzwO/IsVU7ZH5BFZWum3TAU6ofVU/OD4B
+dBVJhs+gd+TBEYJjxIkJVRqR2sAAIAccnh4aOvBLix0qu+/7pT1CaikavgE
vqHb6k/JZFJ7Gd0XfAIAAJA5XvEJvH792kkyC9bX+9TTBhfqNtlTSTLxCXxD
5+ez1o86OTmpvYwAAAByhWSVPp/PmKJotFl983WnFFO1R+YT6Oysli8F9fXl
nFD7qn7AJ+BWSXiUICmhUgKmdswGAADIFZOTk7Ye7Pn5rPrm607hE3Cn1tf7
HDeyef36tfYyui/4BAAAIHO84hMYGRkxptzvL7q6ognpV2STPfoOuFMdHQFj
SkKhkPYyAgAAyBWrq6u26cD+/rj6zutO/UDfgWzo4mLOFhOYmGhRH4w79UPG
fQcymaX4BL4hCY+29YAETO2YDQAAkCtCoZAxJR0dAfWd17WyPoFMOj3RdyAX
urqy3c3KR0ZGtJfRfcEnAAAAmeMJn0Aymaypuan809tbq54zuFP4BNysFy+e
29YD+/v72osJAAAgJ3R2dhpTxhHvbwifQFbkpFU3PoGDg6j6YNwpfAKulYRH
CZISKiVgasdsAACAnLC/v2+bDkjOpr7zulb4BFyr3t5aY0pqamq80noAnwAA
AGSOJ3wCu7u79oTa5ma/esLgTuETcLM+HnyrmJiY0F5MAAAA2UdSSud5YBFH
vL8hfAJZUXu7X9KqUKhcfSSuFT4BN0uCpIRKCZcfaD0AAACPkYmJCWMqJFu7
uJhT33ZdK3wCrtXmZr+t/rS7u6u9mO4FPgEAAMgcT/gEZIS26cD19aJ6wuBO
4RNwuZxGuiX19fWpVEp7PQEAAGSZFy9e0HTgu8InkLnOz2d9vkKZaVNTreqD
ca3wCbhZBwdR+/BZwqZ25AYAAMgyqVSqvr7emJLOzmr1PdfNwifgWl1fL9rW
A+7/c4kFnwAAAGSOJ3wCwWBQksy+vjr1bMG1wifgcq2sdNvWA4eHh9rrCQAA
IMt0dXUZUxYKVahvuG4WPoHM5SRUN00HDg9pOvC7wifgckmolIApYVM7cgMA
AGSZw8ND23RAcjb1DdfNwifgZvX11RlTEgwGtdfTvcAnAAAAmeN+n8BtZ6u1
NR46/a7wCbhc5+ezzmPtZ3Nzc9pLCgAAIJtcX1/7/X5jisfGmtQ3XDcLn0Dm
chqGFtTV8XjzW8In4HJJqJSAKWFTgqd2/AYAAMgmc3NzxjyTbO38fFZ9w3Wz
8Am4Wevrffao1/7+vvaS+j74BAAAIHPc7xOYmZmRJNPnK6Sz1TeET8D9amqq
NKasvb1de0kBAABkk93dXdt0YGdnSH23dbPwCWSoZHI5ECiSmTY83Kg+GDcL
n4DLJaHSW31vAQAA7kl7e7sxZU1Nleq7rcuFT8DNuriYczqdPZuZmdFeUt8H
nwAAAGSO+30CbW1txpS2tPjU8wQ3C5+A+zU52WpMkc/ni8fj2qsKAAAga4yP
jxtT4fcXXV8vqu+2bhY+gQz15s2IbTqwtTWgPhg3C5+Ay/Wx722FBE/t+A0A
AJA14vG4z+czpmhyslV9t3W58Am4XC0tMpNL29ratFfV98EnAAAAmeNyn4CM
0Gk6UDQ93aaeJLhZ+ATcr7dvR+3Roa2tLe2FBQAAkDUaGhqMKenqqlHfal0u
fAIZyrFcFvh8BVdXOFK+JXwC7pcETAmbEjy14zcAAEDW2NraskXG3r71fNqZ
a+ETcLmmp9uMKTLGfPjwQXthfQd8AgAAkDku9wlsbGzYJDMWI8n8lvAJuF8f
i+WWu3nFAQAAPIjj42PH0lm4tNSlvtW6XPgEMpTTwqkgEvGrj8Tlwifgfi0u
dtq+txJCtaM4AABAdhgaGjKmPBAoSiaX1bdalwufgMsVi/121GtjY0N7YX0H
fAIAAJA5LvcJDA8PS5JZXV2cTC6pJwluFj4BT6i7O2hMSSgU0l5YAAAA2WF1
ddVaOt+/n1TfZ10ufAKZ6MOHOdt0YG6uXX0wLhc+AfdLAqZ9+CwhVDuKAwAA
ZIdQKGRMSU9Prfo+637hE3C5ksml6upiY8qHh4e1F9Z3wCcAAACZ43KfQDgc
liTz+XMq2X5H+AQ8odujQxcXF9prCwAAIAvYc0PBYGkqxbmh7wifQCZ69WrQ
+gSoZPtd4RNwvyRgStikzhgAADwaLi4ubJGxxcVO9X3W/cIn4H49f37TJSoc
Dmuvre+ATwAAADLHzT6BeDzu8/mMKeLc0HeFT8AT2tsbs0eHtra2tJcXAABA
FmhoaDCmpLs7qL7Jul/4BDLR5GSrJFFVVYXX14vqg3G58Al4QrbOmIRQ7SgO
AACQBba2tmyRsb29MfVN1v3CJ+B+zc21G1Pk8/ni8bj28voW+AQAACBz3OwT
2NnZsUkm54a+K3wCnlAiseT3FxlTEY1GtZcXAABApnw8N1S0sMC5oe8Ln0Am
ikT88qWgra1KfSTuFz4BT0jCpgRP6owBAMDjIBqNGlPh9xclEvSN/b7wCbhf
b96M2KNeOzs72svrW+ATAACAzHGzT2BqakqSTJ+vgHND3xU+Aa/Iecpd2tra
qr28AAAAMmV7e9taOmMxb/8NOj/CJ5C2EomlqqpCmWkTEy3qg3G/8Al4QhI2
7cNnCaTasRwAACBTWltbjSmNRPzqO6wnhE/A/bq+XvT5JFWrmJqa0l5e3wKf
AAAAZI6bfQLt7e3OX1R96rmB+4VPwCuampKvTkVVVVXX19faKwwAACAjJiYm
jKmoqirk3NB9hE8gbX3s3FSwtTWgPhj3C5+AJ/TR/VIhgVQ7lgMAAGTE9fV1
VVWVMUVTU63qO6wnhE/AE2pt9RlT2t7err3CvgU+AQAAyBw3+wQCgYAxxePj
TeqJgfuFT8ArevVq0HnQbfb397VXGAAAQEZ0dHQYU0op+HsKn0DaWlrqsj6B
i4s59cG4X/gEvCIJnhJCJZBqx3IAAICM2N/fd5qRFbx6Nai+vXpC+AQ8ofHx
JmOKA4GA9gr7FvgEAAAgc1zrEzg5OXGSzMKXL3vUEwP3C5+AV3R2NuM86H62
srKivcgAAAAyorq62pji0dGw+vbqCeETSFvDw42SPgWDpeoj8YTwCXhFEjwl
hEog1Y7lAAAAGbGysmLMM8nWzs54Nngv4RPwhF6+7DGm0BhzcnKivch+F3wC
AACQOa71Cdx2vD04iKonBu6XzRIl2ftBA3wC91cqtRwIFBlTPjY2pr3IAAAA
0uf8/NxaOl+8eK6+vXpCiqma130CTs3Pgs7OavWReEI/OD4B+dBVJhs+gftL
gqd9+CzhVDuiAwAApM/Y2Jgx5YFAUSq1rL69ekLWJ6CSquETuL8ODqLOUa/K
7e1t7UX2u+ATAACAzHGtT2B2dtaYCtmOr68X1RMD9+s22VNJMvEJPEjt7QFj
SiORiPYiAwAASJ+dnR1r6YzFxtT3Vk9IMVXzuk/A7y+SmRaNNquPxBP6AZ+A
RyTB0z58lnCqHdEBAADSJxKJOG3cA+p7q1eET8ATur5edFK1itnZWe1F9rvg
EwAAgMxxrU+gr6/PmLKGhgr1rMATsskefQc8IVtitKamRnuRAQAApM/8/Lyt
LxqPL6jvrZ7QD/QdSEsnJ9POA7oCmpHdUz/Qd8AjkuBp+5EtLCxoR3QAAID0
qampoRnZg2R9AplkXGn3LMAn8CA1NFQYU9bX16e9yH4XfAIAAJA5rvUJNDY2
GlPS11ennhJ4QvgEPKSVlW5bYlRSNe11BgAAkCYDAwPGlNfXl6tvrF4RPoH0
tLU1YH0CNCO7p/AJeEgSQiWQSjjVjugAAABpcnZ2ZpuRrax0q2+sXhE+Aa+o
r6/OmJLGxkbtdfa74BMAAIDMcadPIJlM+nw+Y4pmZiLqKYEnhE/AQ7otMbq7
u6u91AAAANKkpaXFmNLu7qD6xuoV4RNIT3Nz7ZI4+XyFNCO7p/AJeEgSQiWQ
SjjVjugAAABpsru7SzOyhwqfgFc0MxMxpsgYk0wmtZfa18EnAAAAmeNOn8DJ
yYk1o66t8aDpXsIn4CGdn8/aEqMrKyvaSw0AACBNqqurjSkeG2tS31i9InwC
6Wl4uFESp7o6HmneV/gEPCQJoRJIJZxqR3QAAIA0WVlZsc3Izs9n1TdWrwif
gFe0ttZrS8KenJxoL7Wvg08AAAAyx50+gdevXzs+Acyo9xU+AW+pqkqSzIqp
qSntpQYAAJAOV1dXTqpWtLjYqb6rekX4BNJTZ2e1fCmIRPzqI/GK8Al4SBJC
7SE1CaracR0AACAdpqamjKmoqipU31U9JHwCXtHHkrDmzZs32kvt6+ATAACA
zHGnT2B1ddWaUc/O+OvzvYRPwFtqaKgwpqy/v197qQEAAKTDu3fvrKVza2tA
fVf1ivAJpKdQqFxm2uBgSH0kXhE+AQ9JQqh9+CxBVTuuAwAApEN/f78xZQ0N
Feq7qoeET8ArOjubsSVhV1dXtZfa18EnAAAAmeNOn8CtGTWVWlZPCTwhfALe
UldXjTGlbW1t2ksNAAAgHba3t20f0sPDqPqu6hXhE0hD8l3AqcJUMD3dpj4Y
rwifgIckIdR5+FwpQVU7rgMAAKRDW1ubMaVdXTXqu6qHhE/AK/r4ZaRienpa
e6l9HXwCAACQOe70CQwMDGBGfZDwCXhLo6NhY4pra2u1lxoAAEA6LC0t2dJP
8fiC+q7qFeETSEMfj/AUvHzZoz4YrwifgIckIdQeUpOgqh3XAQAA0qG2ttaY
4tHRsPqu6iHhE/CQnJKw5QMDA9pL7evgEwAAgMxxp0+gvb3dmNLOzmr1ZMAr
wifgLc3Pd9hWpIlEQnu1AQAAPJhoNGpMeSBQpL6lekj4BNLQx5agBW/ejKgP
xivCJ+AtSSCVcDoxMaEd1wEAAB5MIpFwmpEVzc93qG+pHhI+AQ+ps7PamNL2
9nbt1fZ18AkAAEDmuNMnEA6HjSkZGKhXTwa8InwC3tLLlz3GFMpXqfPzc+3V
BgAA8GAGBweNKaf004OETyANbW8PWp/A0dGk+mC8InwC3pI9pCZBVTuuAwAA
PJjz83PHJ1BI6acHCZ+AhzQwUG9MSTgc1l5tXwefAAAAZI47fQLBYNCY4vHx
JvVkwCvCJ+AtbW8POA+9zbt377RXGwAAwIPp7u42pqytrUp9S/WQ8AmkodXV
HusTOD+fVR+MV4RPwFuSQCrhVIKqdlwHAAB4MO/evXN8AgXb2wPqW6qHhE/A
QxofbzKmOBgMaq+2r4NPAAAAMsedPgFbtGp2NqKeDHhF+AS8pVhs1PoE3rx5
o73aAAAAHkxbW5sxpd3dQfUt1UPCJ5CGnFZNNz6BRGJJfTBeET4Bb0kCqYRT
CaracR0AAODBvHnzxvoEYjFPpppawifgIc3ORmzrWO3V9nXwCQAAQOa40Cdw
eXlpi1YtL3epJwNeET4Bb+n4eMp56F25ubmpveAAAAAeTCgUMqZkaKhBfUv1
kPAJpKGJiRZJmQKBIvWReEj4BLwlCaQSTiWoasd1AACAB7O5uWlMpWRrx8dT
6luqh4RPwENaXu6yrWMvLy+1F9xXwCcAAACZ40KfwMnJifUJbGz0qScDXhE+
AW/p8nLe8Qk8W1lZ0V5wAAAADyYQCBhTPDHRor6lekj4BNLQ8HCjpEyhUIX6
SDwkfALekmOGKZagqh3XAQAAHszKyooxzyRbu7ycV99SPSR8Ah7Sxkaf9Qmc
nJxoL7ivgE8AAAAyx4U+gb29PVu06vXrYfVkwCvCJ+AtJZNLjk+gYm5uTnvB
AQAAPIxkMmlbRM3NtatvqR4SPoE05JRkL2ht9amPxEPCJ+AtSSC1xWwltGpH
dwAAgIcxNzdnTIVka8kkLaIeIHwCHtLr18O2deze3p72gvsK+AQAACBzXOgT
uG1utb8/rp4MeEX4BDwnv79IvkxNTU1pLzgAAICHEY/HrU9gaYkWUQ8QPoE0
1NlZLV8KOjoC6iPxkPAJeEsSSK1P4OrqSju6AwAAPIypqSljKvx+WkQ9TPgE
PKT9/XHrE3jz5o32gvsK+AQAACBzXOgT2NnZsc2tDg6i6smAV4RPwHOqri42
pnxiYkJ7wWVE29Sboq51hBBCT0oFkeX/+HNhWUXBykq3+n7qIeETSEPt7X75
UtDVVaM+Eg8Jn4C3JIHUFrOV7+baqT0AfGJz70w940LI/fqzifz8a2F1dbH6
fuot4RPwkA4OovJ95D//UvhLaFx9xX25W+ETAACAzHGhT2B7e9v6BI6OJtWT
Aa8In4DnFAyWGlM+Pj6uveAyomF896+tqwghhJ6U/tw4/4efC8oqCl6+7FHf
Tz0kfAJpqK2tSr4UdHcH1UfiIeET8JYkkFqfwPn5uXZqDwCfWI+dqWdcCLlf
P5W1/M8vBcFgqfp+6i3hE/CQjo4m5fvIf/y54E/VQ+or7svdCp8AAABkjgt9
Apubm9YncHw8pZ4MeEX4BDyn+vpyY8pHRka0F1xG4BNACKEnqD83zv7h54Ly
ioL19T71/dRDwieQhlpafPKloLe3Vn0kHhI+AW9JAqn1CZyenmqn9gDwCXwC
CN1HP5aGf/61oL6+XH0/9ZbwCXhIx8dTv/kEAoPqK+7L3QqfAAAAZI4LfQLr
6+vWJ3B2xp+e7yt8Ap5TKHTjE3Db6nso+AQQQugJ6s8NM3/4uaDiWcHmZr/6
fuoh4RNIQ+HwzZeCgYGQ+kg8JHwC3pIEUusTOD4+1k7tAeAT+AQQuo9+LGn8
898LQiF8Ag8TPgEP6exsxuk7UPCnQL/6ivtyt8InAAAAmeNCn8DLly+NeSZb
8Pn5rHoy4BXZLFGSvR80wCeQhhobZZKXDQwMaC+4jMAngBBCT1A/10/94eeC
Z5UFr14Nqu+nHpJiquZdn0BDQ4V8KRgaalAfiYf0g+MTkA9dZbLhE3ioJJDK
JDfGvHv3Tju1B4BP4BNA6D76sbjhL38vCIcr1fdTb8n6BFRSNXwCD9X5+ayk
an/8a8Gf/H3qK+7L3QqfAAAAZI4LfQKrq6vWJ3BxMaeeDHhFt8meSpKJTyAN
NTVVGlPW39+vveAyAp8AQgg9Qf0c+s0nsLMzpL6fekiKqZp3fQJO/aWC4eFG
9ZF4SD/gE/CUJJDiEwBwIfgEELqP/lgc+svfC5qa8Ak8TPgEPKSLizlJ1X78
a8F/V/Wqr7gvdyt8AgAAkDku9AnQdyAN2WSvon1Kpb4oPoE05NQToO8AQggh
7+m278DW1oD6fuoh2edyadcIzSRb865PwMmXCgYG6tVH4iH9QN8BT0kCKX0H
AFwIPgGE7iPbd0ASNvX91FuyPgGV7wX4BB4q23fgj/QdAACAx4sLfQKbm5vW
J3B8PKWeDHhF+AQ8p/r6cmPKh4eHtRdcRuATQAihJ6i/NM794eeC8mcFGxv9
6vuph4RPIA01Nxv5UtDXV6c+Eg8Jn4C3JIHU+gROT0+1U3sA+AQ+AYTuox9L
wj//WlBfX66+n3pL+AQ8pOPjKfk+8p9/KfhT9aD6ivtyt8InAAAAmeNCn8D2
9rb1CRwdTaonA14RPgHPKRgsMaZ8bGxMe8FlBD4BhBB6gvpzeP7GJ1BR8PJl
j/p+6iHhE0hDra0++VLQ3R1UH4mHhE/AW5JAan0C5+fn2qk9AHwCnwBC99GP
Zc0//1oQDJao76feEj4BD+noaFK+j/zHnwv+p3pIfcV9uVvhEwAAgMxxoU9g
d3fX+gQOD6PqyYBXhE/Ac6qpufEJTExMaC+4jMAngBBCT1B/aVr4w88FZeUF
Kyvd6vuph4RPIA21twfkS0FXV436SDwkfALekgRS6xOQ7+baqT0AfAKfAEL3
0U/lLf/zS0F1dbH6fuot4RPwkA4Po/J95N9/Lvif4Ij6ivtyt8InAAAAmeNC
n8Dr16/NDQX7++PqyYBXhE/Ac/L7i4ypmJqa0l5wGYFPACGEnqKal//wc0Fp
ecHy8nP1/dRDwieQhjo7q+VLQUdHQH0kHhI+AW9JAqkx8r3AXF1daaf2APAJ
fAII3Uf/VRH50y8Ffn+R+n7qLeET8JD298fl+8gfbnwCo+or7svdCp8AAABk
jgt9ArFYzPoE3r715PNMFeET8JZSqWWZ4cZUzMzMaC+4jLhOJK8SKYQQQk9K
H+LXlZWm0hQtLHSqb6keEj6BNNTdHZSUqa2tSn0kHhI+AW9JAqn1CSQSCe3U
HgA+kUr9Uz3jQsj9mpyarqyskGwtlVpW31I9JHwCHtLbt6Myw+X77+6bt+or
7svdCp8AAABkjgt9AkdHR9YnsLU1oJ4MeEX4BLyleHzB8Qk8W1pa0l5wAAAA
D8bv9xtTPDXVqr6lekj4BNLQwEC9pEwNDRXqI/GQ8Al4SxJIJZxKUNWO6wAA
AA9maWnJmGeSrV1dLapvqR4SPgEPaWtrwHmEa46OjrQX3FfAJwAAAJnjQp/A
xcWF4xMoXF3tUU8GvCJ8At7S6emMk2RWrq+vay84AACAB1NfX29MychIo/qW
6iHhE0hD0WizpEw1NSXqI/GQ8Al4SxJIJZxKUNWO6wAAAA9mfX3dmErJ1k5P
eSr4AOET8JBWV3uMKTTGXFxcaC+4r4BPAAAAMseFPoFkMun4BIrm5zvUkwGv
CJ+At2SbW8mXqd3dXe0FBwAA8GBaWlqMKenpCapvqR4SPoE0NDsbkZTJ5yuk
mO39hU/AW5JAKuFUgqp2XAcAAHgwu7u71iewvz+uvqV6SPgEPKT5+Q7bIiqZ
TGovuK+ATwAAADLHhT4BIRAIGFM8MdGingx4RfgEvKWdnSFbtEoSNu3VBgAA
8GA6OzuNKY1E/OpbqoeETyANvXjx3EmZCj58mFMfjFeET8BbkkAq4VSCqnZc
BwAAeDAHBwe2dezOzpD6luoh4RPwkCYmWowpDgQC2qvt6+ATAACAzHGnTyAU
ChlTMjTUoJ4MeEX4BLyl9fU+W7Tq9PRUe7UBAAA8mP7+fmPKwuFK9S3VQ8In
kIY2N/utT+D9+0n1wXhF+AS8JQmkEk4lqGrHdQAAgAdzenpqW8eur/epb6ke
Ej4BD2loqMGYklAopL3avg4+AQAAyBx3+gRaW1uNKe3uppjtfYVPwFtaXOy0
Ravi8bj2agMAAHgwY2NjxpQHg6XqW6qHhE8gDb15M2J9ArGYJ8evInwC3pIE
UgmnElS14zoAAMCDicfjtnXs0lKX+pbqIeET8JC6u4PGlLa2tmqvtq+DTwAA
ADLHnT6B3t5eY8qam416MuAV4RPwlqLRZjcXrQIAAPg28/PzxlQYU5BILKnv
ql4RPoE0dHw8ZX0CGxscUruv8Al4SNfXi84Mr5Cgqh3XAQAA0sG2jo1Gm9V3
VQ8Jn4CH1NxsjCnr7e3VXmpfB58AAABkjjt9AtFo1JjyQKBIPRnwivAJeEu9
vbXGlDQ3N2svNQAAgHTY2NgwppJq8A8SPoE09PGvqAXz8x3qg/GK8Al4SBJC
nRleKUFVO64DAACkQ1NTkzElvb216ruqh4RPwEMKBIqMKY9Go9pL7evgEwAA
gMxxp09gaWnJmGfGFFxezqvnA54QPgFvyZpRu7u7tZcaAABAOuzt7TklRgt2
d4fVd1WvCJ9AegoGS2SmjYw0qo/EK8In4CFJCHV8AkaCqnZcB4D/z959t7Wx
ZXnff6P3e5i3cP577pnp7unpe/rMaZONtwISImdEFGByRrIxGDDBHGORMaDg
Z1H7WE07YhRWSfp+rt/VV7ebUBK7Vm2KVXsDeIzBwUGWhP3Z0CdQLLm+XnGm
avXRaFT7VPs6+gQAANlzZ5/A7u6ufUjt6GhGfUpQFKFPoLjS0FDl5mZUAAC+
7+rqyukTqHj5clD9qlosoU/gcenp8ckvBeFwQP1IiiX0CRRRpIRKIZViKkVV
u64DAPAY09PTxtQ1NFSpX1WLKPQJFEuOjmbs0k+7u7vap9rX0ScAAMieO/sE
4vG4fUhtezuiPiUoitAnUERxfzMqAADfl06nfT6fMVVzc13qF9ZiCX0Cj0sk
0iwTp9bWevUjKZbQJ1BEkRIqhVTKqRRV7boOAMBjsCTsI0KfQLFkeztil36K
x+Pap9rX0ScAAMieO/sEbm9vnT6BytVVtiJ9UOgTKKK8f/9HM+rOzo72qQYA
wCO1tbUZUz0yElK/sBZL6BN4XObnu2Ti5PVWpNMx9YMpitAnUESREiqFVMqp
dkUHAOCRdnZ27JKw79+zJOxDQ59AsWR1tc+YSmPM7e2t9qn2dfQJAACy584+
AREMBo2pHh9vUZ8SFEXsLFEme79ooE/gp7K5OWLXFz0+PtY+zwAAeKShoSFj
atvaeMr7oVGcqhV1n8CrV0NOg+WTs7MF9YMpivzi9AnID11lsNEn8FOREiqF
VMqpdkUHAOCRjo+P7X5km5sj6hfWYontE1CZqtEn8FOZmGg1pjoYDGqfZ99E
nwAAIHuu7RMIh8PG1HZ1edSnBEWRzGRPZZJJn8BPZW6u05gqr9ebSqW0zzMA
AB5pYWHBmKdeb0UyGVW/thZFFKdqRd0n8GlXUPYje2h+oU+gSCLFU0qoFFIp
p9oVHQCAR0qlUl6v19mPrFP92losoU+gWNLV5TGmNhwOa59n30SfAAAge67t
E5idnTXmqc9XyRKjD4md7LHvQFFkYCBgTE1HR4f2SQYAwONtbW3ZJUbj8Vn1
a2tR5Bf2HXhUEok12yewuNijfjBFkV/Yd6BIIsXTbkYm5VS7ogMA8HgdHR3G
1AwMBNSvrcUS2yeQzYzr0b9T0Cfw8KTTMZ+v0pins7Oz2ifZN9EnAADInmv7
BDY2NuzN55OTOfWJgftDn0ARJRSqNaZubGxM+yQDAODxTk5OWGL0p0KfwKPT
1nb3S8HQUFD9SIoi9AkUSzKbkUk51a7oAAA83tjYmDF1oRB/gH5o6BMoipyc
zNmWzs3NTe2T7JvoEwAAZM+1fQLv3793bj6zxOiDQp9AseTmZtWZZNavrq5q
n2QAADzevSVGu9Qvr0UR+gQenZGRkEyfWlqeqh9JUYQ+gWKJFE82IwMAlIDV
1VVj6mW2dnOzqn55LYrQJ1AU2d6OOLdwzfv377VPsm+iTwAAkD3X9gkkk0mP
x2NM5cJCt/rEwP2hT6BY8vbtpG1G3dvb0z7JAADISmdnpzE14TBLjD4o9Ak8
OsvLvTJ98ngqEok19YNxf+gTKJZI8ZQSKoVUu5YDAJCVvb09uyTs27dFPOEs
ZOgTKIosLHQbU+nxeJLJpPZJ9k30CQAAsufaPgHR1tZmTDU3nx8S+gSKJaur
/TLJNMZcXV1pn2EAAGRF5pDG1AUC1el0TP0K6/7QJ/Do7O6OO22W3Hx+UOgT
KIpI2ZTiKSXUtb+MAwDwQFdXV86SsJWrq/3qV9iiCH0CRRGnpbO6ra1N+wz7
HvoEAADZc3OfwOTkpDF1fn8lN59/GPoEiiVDQ40yyWxpadE+vQAAyNb6+rp9
dOjkZE79Cuv+0Cfw6Fxfr9g+geXlXvWDcX/oEyiKZHa8lUKqXcsBAMhWc3Oz
MdVDQ43qV9iiCH0C7k86HfP7K42pm5yc1D69voc+AQBA9tzcJ7CxsWFvPsfj
s+rTA5eHPoGiCM8NAQBKyenpqfPoUMX6+pD6Rdb9oU8gm7S23m16OzDAOmM/
Dn0CRREpm1I8pYBKIdWu5QAAZIt1xn4q9Am4P/H4rG3p3NjY0D69voc+AQBA
9tzcJ3B+fm5vPr94MaA+PXB56BMoipyezvPcEACgZKTT6WAwaEz1+HiL+kXW
/aFPIJs8f94qk6hAoFr9SNwf+gSKIlI2pXhKCZVCql3LAQDIVmadsdPTefWL
rPtDn4D78+LFgG3pPD8/1z69voc+AQBA9tzcJyDszedIpEl9euDy0CdQFNnY
GLaTzOPjY+1zCwCAHBgaGjKmtrW1Xv0i6/7QJ5BNXr0aslsPHB+zycUPQp9A
UcRZIqN2cHBQu4oDAJADx8fH9lGvjQ1mAj8OfQLuTyTSZFs6tc+tH6BPAACQ
PZf3CYyMjBhT29RUpz49cHnoEyiKOM8NVTU0NPDcEACgNKysrBhztyD81dWy
+nXW5aFPIJucnS3YPoGXLwfVD8bloU/A/ZGC6Yzn+tXVVe0qDgBAbjQ0NBhT
xTpjDwl9Au5PU1OdMbUjIyPaJ9YP0CcAAMiey/sEotGovfl8dragPkNwc+gT
KIrYSebQ0JD2iQUAQG68e/fOeXToyebmiPp11uWhTyDLBIPVMtJGRkLqR+Ly
0Cfg/kjBdPoEjJRQ7SoOAEBu2HXGeNTrIaFPwOX51KJcH41GtU+sH6BPAACQ
PZf3CZycnNh1q6LRsPokwc2hT8D9OT6ecyaZz168eKF9YgEAkBupVMp5dKh6
bKxZ/VLr8tAnkGWcdZmeNDRUpVIx9YNxc+gTcH+kYErZlOIpJVS7igMAkBsv
Xrww5hm7RD0k9Am4PLHYgN039uTkRPvE+gH6BAAA2XN5n4Bobr67izIwEFCf
JLg59Am4P2tr/XaSeXZ2pn1WAQCQM6Ojo8bUBYM16pdal4c+gSyztTVqtx44
PJxSPxg3hz4B90cKppRNKZ7a9RsAgJw5Ozuzj3qtrfWrX2pdHvoEXJ6BgYAx
1c3Nzdpn1Y/RJwAAyJ77+wQmJyeNqfP5KpPJqPo8wbWhT8D96e+/e9yypaVF
+5QCACCXXr16ZR8dOjqaUb/aujn0CWSZm5tV2ycwP9+lfjBuDn0CLo+USrvI
mBRP7foNAEAutbS0GFPd39+gfrV1eegTcHOSyajPV2lM3dTUlPYp9WP0CQAA
suf+PoHd3V1783lvb0J9quDa0Cfg8iQSa15vhTFPZ2ZmtE8pAABy6erqynl0
qHJpqUf9guvm0CeQfXp6fPJLQUeHUT8SN4c+AZdHSqUUTCmaUjy16zcAALk0
MzNjzFOvtyKRWFO/4Lo59Am4OXt7E7alc3d3V/uU+jH6BAAA2XN/n0AikfB6
vcZUTU+3q08VXBv6BFyeN2/G7CRzb29P+5QCACDHOjo6jKnp7vaqX3DdHPoE
so/zB9a7JQUuL5fUD8a1oU/A5ZFSKQVTyqZ25QYAIMf29vbso15v3oypX3Dd
HPoE3Jzp6XZjqrxebyKR0D6lfow+AQBA9tzfJyDC4bAxtaEQM5lvhj4Bl2ds
rFkmmX6/P5lMap9PAADk2MLCgjH1Hk/FxQXzgW+GPoHs8/69XbD9SSw2oH4w
rg19Am6OFEkplVIwpWxqV24AAHIsmUz6/X5jqsbGmtWvuW4OfQJuTihUa0xt
OBzWPp8ehD4BAED2iqJPILPv7eHhlPpswZ2hT8DNSSajfv/dzlaRSET7ZAIA
IPfi8biz9UDF2lq/+mXXtaFPICdpaXkqvxT09vrVj8S1oU/AzZEiKaVSyqWU
Te3KDQBA7kUiEWPq/P7KZDKqftl1begTcG0OD6fserCvXr3SPpkehD4BAED2
iqJP4Obmxtl6oHJqiq0Hvh47S5TJ3i8a6BP4fnZ2/th0YGdnR/tkAgAgL1pb
W9l64PtRnKqVUp/A/HyXTKs8ngq2HvhWfnH6BOSHrjLY6BP4fuymA1IwtWs2
AAB5sbOzYx/12tlh64FvxvYJqEzV6BP4fqam2o2p9Hq9Nzc32ifTg9AnAADI
XlH0CYjBwUFjahsba9LpmPqcwYXJTPZUJpn0CXw/kQibDgAAStzi4qIx9cY8
YeuBb0VxqlZKfQLx+KzdeoDFK76VX+gTcGvOzxed0VsvBVO7ZgMAkBeZrQci
EbYe+GboE3Bn0ulYY2ONMbWDg4PaZ9JD0ScAAMhesfQJbGxs2H7Ut29L5CZn
bmMne+w74MIkEmt204GxsTHt0wgAgHw5OTmxWw+srvLX26/nF/YdyFHa2u5+
KWDxim/lF6dP4OW//VvhR9ov9Al8N1Ie7aYDUjC1azYAAPkyNjZmtx5IJNbU
L77uTPb7Djz6c+kT+E7evp2068FubGxon0YPRZ8AACB7xdIncHt762w9UDUx
0aI+bXBh6BNwbba2Ru0kc3d3V/s0AgAgj9ra2oyp6egw6hdfd4Y+gVxlcbHH
Lilwfs788yuhT8C1kfIoRbK9vV27WgMAkEe7u7v2Ua+trVH1i687Q5+AOzMx
0WJMldfrvb291T6NHoo+AQBA9oqlT0CMjIzQj/qt0Cfg2vT3NxhTHQwGU6mU
9jkEAEAerays2K0Hjo5m1K+/Lgx9ArnK6em87ROYn+9SPxgXhj4Bd0YKo910
QEqldrUGACCPUqlUMBg0prq/v0H9+uvO0CfgwmTWgx0ZGdE+h34CfQIAgOwV
UZ/A3t6es57tk/X1IfXJg9tCn4A7c3a24PFUGFM/OzurfQIBAJBfV1dXzupP
lc+ft6pfgl0Y+gRymL4+v/xS0NhYk0pF1Q/GbaFPwJ2RwijlUYqklErtag0A
QH7Nzs4aU+/xVJydLahfgl0Y+gRcmPX1Iael0+zt7WmfQD+BPgEAQPaKqE9A
NDU1GVPNbqRfhj4Bd2Z+vsuYSplknp6eap89AADk3fDwMKs/fSv0CeQwm5sj
dkmBnZ0x9YNxW+gTcGEyT6hJkdSu0wAA5N3p6anzqFclqz99NfQJuDDd3V5j
apqamrTPnp9DnwAAIHvF1SewtLRk17ONx2fV5w+uCn0CLkwqFQ2Fao2p7e3t
1T51AAAoBFZ/+k7oE8hhksloQ0OVjLTBwaD6wbgt9Am4MEX6hBoAAI/W29tr
TG0oVMvqT1+GPgG3JR6ftftDLS0taZ86P4c+AQBA9oqrT+Dy8tL2o05Pt6tP
IVwV+gRcmJ2diDPJfLa5ual96gAAUCCs/vSt0CeQ28ivA3ZJgYsLZqH/EvoE
XBjnCbXqontCDQCAR9vc3DTmmbP6U0T9Quy20CfgtkxNtdv1YC8vL7VPnZ9D
nwAAIHvF1ScgBgcH7Xq2t7esZ/vP0Cfgwjg751Y3NDQkk0nt8wYAgALJrP70
7t20+rXYVaFPILc5Pp6zfQJzc53qB+Oq0CfgtkgxLNIn1AAAeLRkMtnQ0GBM
dV+fX/1a7LbQJ+Cq3N7+sT/U4OCg9nnz0+gTAABkr+j6BPb3950lBSpWV/vV
JxLuCX0CbsvR0Yy9Hzg3N6d90gAAUDhXV1c+n8+YqpGRkPrl2FWhTyDn6e9v
kOlWIFCdSNA//M/QJ+C2SDGUkiiFUcqjdoUGAKBw5ubmbP/w0dGM+uXYVaFP
wFVZXe03psIYs7+/r33S/DT6BAAA2Su6PgHR0dHxaYurmPpcwiWhT8BtiUSa
jKnyer1Ft2IVAABZev78uTFPjXlydragfkV2T+gTyHn29ibskgLRaFj9YNwT
+gRcFSmDzih9KoVRuzYDAFBQl5eXXq/XmKpIpEn9iuyq0CfgnqRSsVCo1pja
jo4O7TPmMegTAABkrxj7BDY2NuwWV5ubI+rTCZeEPgFX5eJi0eutMOZp0Z1c
AABk7+TkxOPxGFM5Pd2uflF2T+gTyHnS6Vhb290vBc3NT1OpqPrxuCT0Cbgq
UgalGEpJlMKoXZsBACi08fFxY556vRUXF9w2/GfoE3BPNjdHnJbOZxsbG9qn
y2PQJwAAyF4x9gmkUqlQKGRMTUeHUZ9OuCT0Cbgqs7OdxlQaY+LxuPbpAgCA
gsHBQWPq/P6q6+sV9euyS0KfQD7y6tWQXVJga2tU/WBcEvoE3BMpgFIGi3S7
WwAAshePx53dYytnZzvVr8vuCX0C7sndosWmJhQKpVIp7dPlMegTAABkrxj7
BMTq6qpdUmBvb0J9RuGG0CfgntzcrPr9lcbUhcNh7RMFAAAdb9++dW4JViwt
9ahfml0S+gTykWQyGgxWyy8FnZ2edJotye5Cn4B7IgXQbncrJVG7KgMAoCMc
Djv9w5U3N6vql2aXhD4Bl+TTLmbPVldXtU+UR6JPAACQvSLtE7i9vQ0EAsZU
d3d71ScVbgh9Au7J/HyXvR94cHCgfaIAAKCmu7vbmNpAoJpbgjb0CeQpKyt9
dkmBnZ0x9YNxQ+gTcEmk9EkBlDIoxVC7HgMAoObg4MD2D8/Pd6lfnV0S+gRc
ku5urzHVgUDg9vZW+0R5JPoEAADZK9I+AbG0tGSXFNjdHVefV6iHPgGX5MOH
Zbu4aF9fn/YpAgCApr29PXtLcGGhW/0C7YbQJ5CnJBJrwWCN/FLQ3v5M/WDc
EPoEXBIpfbZ5WIqhdj0GAEBTX1+f3ZLsw4dl9Qu0G0KfgBuyuztuFxNYWlrS
PkUejz4BAED2irdP4Pb2NhgMGlPd0WFYZZQ+AZdkdrbT3g88PDzUPkUAAFDW
09NjVxm9vl5Rv0arhz6B/GVtrd8uKfD69Yj6waiHPgE3RIqe3YlMyqB2JQYA
QNnh4aHtH56d7VS/Rrsh9AmoJ52OdXTImKwOBoPFu5jAR/oEAAC5ULx9AmJl
ZcUuKbC9HVGfYOiGPgE35PJyyee7ux8YDoe1Tw4AAPRlVhmdm2OVUfoE8phE
Yi0UqpVfCtrantE/TJ+AGyJFj53IAADICIfDxtT5fJWXl0vql2n10Cegnu3t
iF1MYHV1VfvkyAp9AgCA7BV1n0AikWhsbDSmur293G8J0ifghkxNtRtTaYx5
9+6d9skBAIAr2FVGfb7Kq6tyX2WUPoG8JhYL2yUFNjbK/e/U9AmoR8qdbR5m
JzIAAKx37945/cOVU1Pt6ldq9dAnoJt0Otbe/syY6sbGxkQioX1yZIU+AQBA
9oq6T0BEo1G7pMCLFwPq0wzF2FmiTPZ+0UCfgOTkZM7jeWLM08HBQe3TAgAA
t/i0ymjlxESr+sVaN4pTtXLoE0gmo01NdfJLQShUm0isqR+PYn5x+gTkh64y
2OgTkEi5s83D7EQGAEDG4OCgMU89nicnJ3PqF2vd2D4BlakafQKSFy8G7GIC
0WhU+7TIFn0CAIDsFXufQDKZbG1tNaY2EKi+uVlVn2loJTPZU5lk0icgCYcD
xlR5vd6TkxPt0wIAABcZGRlxbglWHB3NqF+vFaM4VSuHPgHJ5uaIXVJgYaFb
/WAU8wt9AqqRQiflToqelD7t6gsAgIucnJx4vV5jqsLhgPr1Wjf0CSjm5mY1
EKg2pra1tTWZTGqfFtmiTwAAkL1i7xMQb968sVvfzsx0qE82tGIne+w7oJU3
b8ac+9L109PT2icEAADucn5+7vP5jKnq6fGpX7IV8wv7DuQ56XRMxphMyXy+
youL8p2a/uL0Cfx1JP7ouX02o5Q+AWcQVknRk9KnXX0BAHCX6elpY+pltvbm
zZj6JVsx7DugmJmZDmMqjDFv3rzRPiFygD4BAED2SqBPQPT39xtT5/VWlO3S
VfQJKCaVirW0PDWmOhgMXl9fa58NAAC4zvz8vN0o6vXrEfULt1boEyhA3r2b
dh7lfjI62qR+MFqhT0AxUuLsMrZS9LTrLgAArnN9fR0MBo2pbml5mkrF1C/c
WqFPQCsnJ3Ner/yyUNff3699NuQGfQIAgOyVRp/A8fGxx+MxpmpgoEyXrqJP
QDFra/32fmAsFtM+FQAAcKNEIhEKhYypaWqqK9u94+kTKEzGx1vs7gNv35bL
S/4s9AloRYqblDgpdFLupOhp110AANwoFovZ/uG1tX71a7dW6BPQysDA3aax
Ho/n+PhY+1TIDfoEAADZK40+ATE1NWWXrtraGlWfdRQ+9Alo5eJi0e+vNKa2
ra0tlUppnwcAALjUxsaGc0uwYna2U/3yrRL6BAqTy8slZ272pLW1PpmMqh9P
4UOfgFakuDnL2D6TcqddcQEAcKlUKtXW1mZMrUzYynajKPoEVLK1NWo3jZ2a
mtI+D3KGPgEAQPZKpk/g+vq6sbHRmJpgsPrmZlV97lHg0CegFacTtdLj8Rwe
HmqfBAAAuFc6ne7t7TXmqcfz5OhoRv0KXvjQJ1CwfFrr6cnCQrf6wRQ+9Amo
RMqaFDcpcVLopNxpV1wAANzr8PDQWRW2smxXhaVPoPC5uVkNBquNqWlsbCyl
TWPpEwAAZK9k+gTE9va2uVMxPt6iPv0ocOgTUMnmpt2BtH5yclJ7+AMA4Han
p6c+n8+Y6o4OU4YbktInULCk07GuLo9M0rzeiuPjOfXjKXDoEyh8pKBJWZPi
JiVOCp12rQUAwO0mJyftqrCbmyPq1/HChz6BwsfZm6xCpmvb29vawz+X6BMA
AGSvlPoExNDQkDFPZZ55cPBcfQZSyNAnUPh8+LAcCFTbHUhvbm60xz4AAEVg
eXnZbki6stKnfikvcOgTKGTi8Vmvt6K6+u/d3V71gylw6BMofKSgOc3Dz6TE
aVdZAACKwM3NTSgUMqYmEKj+8GFZ/VJe4NAnUOAcHDx3pmpPh4aGtMd+jtEn
AADIXon1CVxeXvr9fmOqm5vrEok19XlIwUKfQOETiTTZTtSdnR3tgQ8AQHFI
pVIdd4/d1vl8lWdnC+pX80KGPoECp7PT8+c//3t9/W/RaFj9YAoZ+gQKHCll
UtCkrElxkxKnXWUBACgOOzs7dlXYSKRJ/Wpe4NAnUMgkEmvNzXXGVPv9/svL
S+2Bn2P0CQAAsldifQLi5cuXznNqFRMTZbT7AH0CBc7W1qjdcWBkZER7yAMA
UEzevXvn3BKs6urylNXuA/QJFDInJ3Neb8Vf/vKn//3f/+fzVcr/VD+kgoU+
gUJGipizyUWVFDUpbtr1FQCAYjIyMmJ3H9jaGlW/phcy9AkUMhMTdseBZy9f
vtQe8rlHnwAAIHul1yeQTqfD4bDdfWBnZ0x9NlKY0CdQyFxcLNodBxobG+Uk
0h7yAAAUmfn5edvVOT/fpX5ZL1joEyhYksmos1l8Va1D/ov8T/lH9QMrTOgT
KGSkiNk7z1LWtCsrAABF5sOHD42NjXb3gYuLMrqvSJ9AwbKzM2Z3HAiHw+l0
WnvI5x59AgCA7JVen8BHZ/eBYDAo88xgsObyckl9TlKA0CdQyPT1+Y2pNMbs
7e1pD3YAAIpPKpXq6uoyps6YJ2/flsvfr+kTKFhmZzvtn24XHbYpRf5R/cAK
E/oEChYpX86d5zopaOw4AADAI+zt7TlLjVX29fnVr+wFC30Chcnl5VIwWOP8
gSBYejsOWPQJAACyV5J9Ah//uctVZTgcSKdLf0lb+gQKlpWVPud+4LOpqSnt
YQ4AQLE6Ozvz+/3GVDc11d3crKpf3wsQ+gQKk/39CY+nwpin3d3dKYf8F/mf
8o/yf6kfXgFCn0BhIoVLypfd61YKmnZNBQCgWE1NTTldnU9WVvrUr++FCX0C
BUg6HQuHA/Y5r52dHe1hni/0CQAAsleqfQJiYmLCzjNXV/vVJyf5Dn0ChcnR
0YzXW2FMXXt7ezKZ1B7jAAAUsfX1dfug98hISP0SX4DQJ1CAfPiwHArVGlPj
9/vPz8/tSJP/4jSl1Mj/JR+gfpD5Dn0ChYkULrtshZQy3VoKAEBRSyaT7e3t
xtR5vRVHRzPql/gChD6BAmR1td8+5zUxMaE9xvOIPgEAQPZKuE8gkUi0trbK
PNPjKf0lbekTKECur1fsQ0Nerzcej2sPcAAAit7Q0JAx9cY8WVsri65O+gTy
mlQqmtkcamNj4/5Ik/+ZWdJWPkz9UPMa+gQKEClZzp3neiliWvUTAICSEY/H
vV6vXWrs+npF/UKf79AnkO+8fTvp8dxtDtXa2ppIJLQHeB7RJwAAyF4J9wl8
dOaZPp9P5pmNjTWXl0vqs5T8hT6BfOfenednL1++1B7aAACUguvr6+bm5vLp
6qRPIK+Zne20z3d/9bcb+Ue7foV8mPqh5jX0CeQ7mTvPUr6kiBW+cgIAUHpe
vnzpTNXKoquTPoG85vJyqbGxxphqn89X8s950ScAAMheafcJiM3NTfv0UHe3
N5ks2XkmfQL5jnPnufSXqwIAoMAyXZ3BYHXJd3XSJ5C/bG2NOlO1p11dXV/d
HEr+Uf4v+QD5MPlg9QPOX+gTyGukTEmxKpM7zwAAFFJmA9mS7+qkTyB/SSaj
3d1eu8LY5uam9qDOO/oEAADZK/k+ATE9PW2fHpqcbFOfruQp9AnkNdvbEXvn
ubOz86t3ngEAwKNlujp7enypVEz9up+n0CeQvxwfz/n9lcbUBgKBi4uLb400
+b/kA+TD5IPlU9QPO0+hTyB/kQIlZap87jwDAFBIyWSys7PTdnVub0fUr/v5
C30C+cvkZJtdYWx6elp7RBcCfQIAgOyVQ59AKpXq7e2188wXLwbUZyz5CH0C
+cv79zP2znMwGPzOnWcAAPBoU1NTtqtzYqJV/dKfp9AnkKd8+LDc0iLz/Cpj
zP7+/vdHmnyA05RSJZ8in6h+8PkIfQL5ixQoe+dZSlZhaiMAAGXl4uIiGAza
rs7372fUL/15Cn0CecqLFwP2Oa/e3t5UKqU9nAuBPgEAQPbKoU9AXF1dhUIh
u/vt3t6E+rwl57GzRJns/aKhhPsELi4WQ6FaY6o9Hs8P7zwDAIDH+dTVWW/M
k+XlXvUJQD6iOFUr4T6BeyuLPltZWXnIYJMPs7vfluquZL84fQLyQ1cZbCXc
JyClybnzXF8+d54BACi8/f19j8djTHUoVHtxUZo3G22fgMpUrYT7BPb2Jjwe
marVhUKhq6sr7YFcIPQJAACyVyZ9AuL9+/d+v9+YmpJsSbWTvadPn/5fDdHo
2Pv3C+pvQs5zc7Pa3v7Mriz64sUL7SEMAEApk3lpS0uLMXXGPNncHFGfBuQ8
MlWrq6tTmar993//98ZGCTbKptOx0dEm+3z3xMTEwwfbp91vK+TT5Yuov5Dc
Rkbar7/+Kj90lcE2PT2o/g7kI1KUnCaButbWVilWeSuEAADg7rFwuytZe/uz
m5tV9WlAzvMf//EfT548UZmqPX36VP3l5yOfFoOt8fv979+/1x7ChUOfAAAg
e+XTJyB2d3czLamXl0vqc5icZ2FheH194quJxcaWl4fn5sKTkz2RSMfQUOvA
QHM43NTXF+rtbezuDnR1Bbq7gz09QfkX+feBgZahoZaRkfbnz3vks5aWhqLR
yMuX41/94svLo2dnpfZ+plKxcDhg7zzPzs5qD14AAErf6empXWjU6614+7YE
n39fW4t8a6r24sXYysrw/Hx4aqp3bKxzeLhtcLBFZmufpmpBmapJenoa5V/6
+5vC4Wb5gNHR9omJrpmZvoWFgdXVkW9N1eT77u5Oq7/8nGdurss+393f3/9T
z3fLB8un2PUr5Iuov5CcR37c3xpsMkhkqMiAkWEjg0eGkAwkGU4yqGRoyQCz
I02GnAw8+RcZhPIBMiBlWMrglCEqA1WG67dGsnxf9Zef80g5kqJktyGTMpW/
GggAAKzZ2Vnb1RkOB1KpUuvqPDtbWl4e/dZULRqNLC0Nzc2Fnz/vGRlpHxqS
Xwpa7C3cnp6g/b2guztgp2rOLdzmoaHWSKRjcvLuFu7y8nAs9s2p2sJCCS79
dHm5lFkMdnd3V3vwFhR9AgCA7JVVn4DItKR2dJjb2zX1mUw+pkaHh1MbG8NL
Sz0TE619ff7m5jrnvtaT7OPxPGlsrOnu9kYizfPzXevrQ/v7E2dnC6X3HJa8
osz2oyMjI9rDFgCAcnF4eOjz+YypDgSqT07m1KcEOc/Nzeq7d9NbW6Orq/2T
k20DA4HW1nq/vypHU7WKYLCms9MzPNw4O9sZi4V3d8ePj+dKcnX9zPajbW1t
Nzc3PzvS5FPkE+XT5YvIl1J/OTmP/NDlRy8DQIaBDAYZEjIw5LSSQZKTwSaD
VoauDGAZxjKYZUjLwC7JJ/6kEMn7JkVJSpMUqHzUPQAA8KWRkRHbKjA+3lKS
Nx7Pzhb29yfW14fm57sikebubm9jY42zcn4O4vNVNjfX9fX5JyZal5Z6NjaG
Dw+nSvKhOZl/dnSYsl0Mlj4BAED2yq1P4OO9ltSeHl8iUdytAnL8R0czMqWc
nm6XuZ9zC+sxf/33+6vkc/3+ysd1FMjks6vLI/P2aDR8cPD8+npF/Z3JMjMz
Hc5Lq+/p6Ukmk9pjFgCAMvL69WtnAaiqUKj2/Ly49yRNpWLHx3ObmyNzc52D
g0HnOZdH3ujLTNUe8Xdemey1tz8bHW1aWenb3R0vgZ1e5S113oe77UcvLi4e
N9LkE+XT5YvIlyqBrS7kxyo/XPkRyw9aftyPuMks74MMMBlmMthkyD1urMog
l6EuA17eUhn8xf4AoJQg57StkqIkpSmnpQ4AAHxPMpns6emxC0DNzHSozwqy
zPX1ysHB82g0PD7e0tXledxcKzNV8/urHtdRIJ/b1+efnm5fXx86OpopgRvj
PT2+cl4Mlj4BAED2yrBPQEQiEdsq0N/fUHQPWF1cLL5+PTI11d7Z6fn+jb5Q
qFYmS2Njd8/+r631b2wMv3kz9vvvU2dnCzI7vblZ/eprT6dj8u8y0ZKPOT9f
lEnj3t7E5uZILDawuNjz/HlrOHz34Nv3Owqam+vk+758OXh8XHxPAi4sdDuv
4u7xtA9sPwoAQMGtra05C0BVyYyi6B57kSnW7u64zL56e33fvwEYDN4t0zQ6
2jQ727my0re+PrSzM3Z4OHVyMnd1tXx7uybzsVTqK7O1VCpmp2oyLYzHZw8O
nm9tjb54MbC01CNTxMHBYFvbD9YokG89PNy4utonM8Oimwxvb0ec+6K1gUAg
y+1H5dPli8iXki8ob776S/upyA9OfnzyQ5QfpfxAv/PjlsEgQ0IGhgwPGSQy
VGTAyLCRwSNDSAaSM9K+8gd9GX7yf8lQlAEpw1IGp7xLMlBluMqglaErA/j7
31pOATkR5HSQk6LoVhuQ4iMlSAqRFCMpSrmqbwAA4IE+fPiQWQBqYaFbfW7w
szk+nnv5cnBsrNmZUXzvr/+trfXhcOD589bFxZ5YbGBzc2Rvb+LoaOb8/I+p
mkz8vrqogvy7TLHkY87OFmRm+ObN2MbG8Npav8y+5Pv29PhCodrvtxl3dnpk
ivj69UjR9RLLa+/r89smgUgkoj1addAnAADIXnn2CaRSqeHhYdsqMDgYdP9z
LldXyzLNi0Sam5q+PrH0+ytl7ifzyVgsvL8/cXo6X4Bbvs4eB5NyYLOznTKb
bWz8+k3ChoaqgYGAzFGLomdgZaXPNgnIJP7y8lJ7qAIAUKYWFxedqVpla2u9
TITUZwjfz+3t6s7O2ORkW1vbs2/d/evoMGNjzaurfXYvgAI8vHN9vWL3OFhY
6JYZ77fuT/p8d9NI+Rj5YPev6bq3N2F3ivf7/b///nv2I02+iHwp+YLyZeWL
q7/A70d+QPJjkh+W/Mi+1YUiP2j5ccvH2L0ACrDSlwxmu8eBDG8Z5DLUv9VR
LCeInCZyssgpo/5mfj9SdqT4OGvYPpNylP1IAwAAj3B5ednc3GxbBVZW+tRn
CD+MTIrW1voHBgINDV/v2m1srAmHA7Oznc5eAJMFaIpOJqOnp/P7+xOxWPj5
81aZRvr9X59GNjXVRSJNcmDu//0rlYrJjNc2CQwPD6dSKe2hqoM+AQBA9sqz
T+Cjs3pVOBx2Vq+qGBkJffVZLe0JT/TwcGp+vuur6wb4fJV9ff6Fhe6dncj5
+aJLburKNPLg4Pnqat/QUPCrzxbJhNPN9wZlwuwcZ11TU9Oj17AFAAA58Wmv
qMqODuPOJ5Hj8dnV1X6Zkn35V1GP50lXl2dmpuP161H3rL4ub+Pvv0+9eDHw
rceaGhqqRkfde2/w7dtJ54/jNT6f7+DgIFcjTb6UfEHny1bKt1B/mV/G9gzL
j+arN5ztQl7yY5UfrkvOFLvjhgx+OQXkRPhyXVw5ZeTEkdNHTiL1o/0y9za6
fTY3N5erkQYAAB7h4uKiqanJmLu5aywWVp8nfJlMz/BXH+8KBmuGhoKrq30H
B89dMsdOp2Pn54s7O5GFhW6Zkn21+7Sz0zM/33V4OOXOe+YjIyGnSaA+HA6X
846x9AkAALJXtn0CIpFI9Pb22laB4eFGl9y/lcPY25uYmGgNBKo/m6HJv8gs
KBoNHx3NuORov5+zs4VXr4aeP291Hsb5/N7g4GBwc3Pk9tYtO2GtrfXbJoFg
MHh6eqo9PAEAwMfJyclMq4BL7qpJ3r2bnp3t/PI2oN9/t4bS8nLv27eTRbHX
p7yl29uRT3/J/bzVobvbK9NO9+z7sL8/YZsEvF7v3t5ebkeafEH5srZVQL6R
+ou1kTdffgTyg/iiC6XCdqHIj88958V3IqeDnBRyasgJ8uWOGHIqyQklp5X6
cdrIW5ppEpASlNuRBgAAHuH09DQYDNpWgbW1fvXZgs3t7drm5sjgYPDLnuHW
1vrnz1tfvRo6O1tQP84fJpWKHR3NyLRzZCT01dvRExOte3sTLrkXLYcxPNxo
mwR6e3sTiYT28NREnwAAIHvl3Ccgbm9vu7u7bavAwEBAcXvWVCp6cPB8YqLl
y8fwe3p8S0s97rl19ricny/GYmGZPH/WpHqvYUDz6Sd5h22TQCAQiMfj2gMT
AADcSafTExMTmQ0IdP9m/f79zNxc55eP4be1PZud7dzfn1CcSWaf6+sVmY9F
Ik2f3Rv0eCp6e/0yi9P9e/SbN2PODdi7JoHt7e18DDb5srZVQL6RfDvFFytv
tbzh8rZ/1rwhPxr5AcmPqQBbCeQvcprIySKnzJebdMjJJaeYnGiKhydFJrPd
gBQfKUH5GGwAAOBnxePxQCBgWwWWlnoUZwu3t6tfbQ/w+SrlH2UWd36+qD7j
yibv3k3LO9zT4/tyYYSJiZaDg+eKKwzITHJgIGCbBLq7u29vb7UHpjL6BAAA
2SvzPoGPzqoCfX19zv3nu9UvC//wl8we5+e7GhtrPptbjoyEXr8eccnaobmd
0e3vT0xNtQeD1Z+95PHxlsNDhbVe5+a6bJNAKBQ6OTnRHpIAAOCf0ul0ZlWB
5ua6wt92u75eWVvr//Jvmv39DS9fDl5cFPdtwK/m3bvphYXuL9eDGhwM7uyM
Ff5JIpkS2yYBn8+3u7ubv8EmX9xuQCDfTr5pgV+mvLHy9jp3Pj9/Hk1+HMXe
M/zVyOkjJ5GcSl/23shJV/h2CCkvTiPQHysJ0CQAAICrnJychEIh2yowN9dV
+KnL4eHk+HjLZw9ABYPVU1Ptxd4z/NXc3KzKlHhkJPTZS25srJmf7yr872WJ
xFpfn99pEnjW19dX5isJWPQJAACyR5/AR6dVYGBgwLYKdHd7C3NLSmaPW1uj
/f0N9x8UknnX0FBQ/r0o1qrNMul07ODg+eRk22dLKLS21q+t9X/4UKBn1mQy
73zfp83Nzefn59qDEQAAfMXc3JwzVasKhWpPTuYKNlEZHW26/6CQTNv6+vwv
XgwUxWLv2Scen52f72ppefrljcGCraG6vj7kfN9av9+/v7+f75Em30K+kXw7
+abyrQvzGuXN/LJtWN52+Uf5EagPgwJETig5reTkuv+bkZx6cgLKaSgnYwGO
QQqLlBcpMlJqpODke6QBAIBHOD8/b25uNuZudjo11V6YicqHD8tra/2f9dAG
gzWTk20Fm6joJpFY29oaHRr6l0ViZdrW398g/16YBonr6xVnN667JoGBgQGa
BCz6BAAA2aNPwEqlUsPDw/ZRtba2Z3l9NOzycml+vuuzP4739fk3NoZ1197X
Sip1t8JAJNJ8/z68/PdIpCmv647KPHZkJGSbBFpaWmTipD0MAQDANy0uLpo7
VYFA9du3eVyAKJFYi0bDn/1x3D7gXCbtAV/m6GhmZqbjsy0J+vsbdnfH83pr
NLMzVENDw+HhYWFGmnwjp1Ug76vaylsnb+BnT9PLmyxvtbzh6j90lcgvSl8u
3yEno5ySee2jlpLiDO8qKTFSagoz0gAAwCNcXFy0tLTYVoGRkVBe/0j9/v1M
JPIvbcM+X6X8y/7+hOLa+4q5vV3d2Bh2Hur/l5aJ+fmuvP6idHGx6MwP7xZ9
Gh4eTqVS2sPQLegTAABkjz6BDJljjI2N2UfVgsHqfKzteXw8Nz7ecn962dhY
MzfXdXo6rz7Tc0Nublaj0XB7+7PPbkHv7U3k/Bb09fWKs9PW3YZWHR0dV1dX
2gMQAAD8wNramsfjMaZaZlObm7lfFt42czY0VH22L9Lvv0+pT5PckGQyKm/7
ZzcGZeb26tVQzu/QplIxeedtk0AgEDg6OirkSJNvl9kAVw4j51styNslb9pn
k155Y+XtLb0Vax8XOek+W9dXTkw5PeUkzfn3krfd+QWtWsqLFJlCjjQAAPAI
V1dXHR0dxtQbU9HT48v5kqTpdGxvb+KzZk6ZuUWj4dLbH/ZxOT2dn5v7l+Ww
ZDYlk7fj49yv/Pbu3bSzd+3dok9jY2M0CdxHnwAAIHv0CdyXTqfn5+edR9Wq
fb7KnZ2xXE1pDg6eh8OBz+4Ebm9HCr/Ba1FEZoBjY/+yvEBb290t6Fy9XWdn
C85DgndtqOGwTPJvtIceAAB4kK2tLWcH+btl4ZeXe3M19/iymbO1tf7Fi4Hb
29LfCupxU6nZ2c77yws0NtbIjyNXN07lbXduzN71c7a0tJydnRV+pMk3dR5V
u7v/LAeTq5Egb5G8UffvqcrbKG9mwfZxKK7I2y6n4f1lfnN+C1p+HHZjCyks
Ul4KP9IAAMAj3NzchMNhuzBsS8vTXE2lUqnYq1dD95c2snOPfDxNVgKRt2t7
O/JZF/HAQODg4HmuvsXOzpjTOCq/d5j5+fl0Oq099NyFPgEAQPboE/jS+vq6
1+s15u723dpaf5bzmbdvJ53n1jObNz0ZHW0q26VEfyqXl0tzc/9yC7q5uW5j
YzjLpb3uLSv6bGJigjZUAACKy+HhYTAYtM96T0y0ZtlGeHo6H4k0398Vva/P
n+/l9EsjdoOG5uan9//kvbzcm+VGWufni86D9nd7j/b29l5fX2uNNPnWcgDO
/ecKOSQ5sGxel7wt8ub868w278vpl0bsBg33b0HLCSunbZZrsknpkAJi16yQ
klKwjS0AAEBOpFKpiYkJuzBs9huTpVLRjY3h5ua6+zPbubnOfKxlVHo5OpoZ
HW3yeP7ZLdDT48t+q7i1tX7nq9V4vd719XXtEedG9AkAALJHn8BX7e/vZ7Yl
HRtrftztu3fvpu8vUeX3V87MdFxcZHWDsQzz5S3o1tb6Ry81LF/KLitqjFle
XtYeaAAA4DFOT09bW1sza40+7vbd2dnCp5Xt/2jmjESaaeb82aRS0a2t0a4u
z/0tSldX+x83f97bm8j0c46OjiaTSd2RJgcgh5G5/yyH94gXJW+FvCHytmTe
Inm75E0rz21ts4mcnk5Xzz9vQcsp/LjnB6VoZPYgk2IiJUV3pAEAgMdZXl62
C8N6vRXRaPhxc4zNzZH76xfRzPm4XFwszsx0+P3/3Deqv7/hcUsxyJs/NtZs
+zn9fv/+/r72QHMp+gQAANmjT+Bbjo+Pm5ub7f3njg7zUzeg4vHZwcHg/Q6B
+fmu6+sV9Qlb8SaViq6vD93vFmhre/ZTG0PIDDMSabIzTJ/P9/r1a+0hBgAA
Hk/msZ+e9a4MBn/uAaKrq+WJiX/ZZWB8vCXLp8XJ3t5Ed7f3/k4E0Wj44as9
pNOxTyvA17hqWdF7G5PV2N0uHr7WhLx8eRPu7zIgb9Hjmg1IJnKq3u/wkRNZ
Tmc5qR/+FaRcOLvc3u1B1tPTI8VEe5QBAIDHe/36tbMx2d3TXpFI00/9fX9n
Z+z+LgPNzU/X14do5swm19cr8/Nd97sFBgeD8fjsw7/C2dlCR4ex/ZzNzc3H
x8faQ8y96BMAAGSPPoHvuL6+/rTXVVVDQ9Xu7vgPZzIfPixPTrZlJkI+X+Xs
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
+mcjL0kkurwP8BfdDJaeAAAguF+tJ/A3r5La0tLi9O5V19crBwfTi4u9Q0NN
0WjVz36UX97aWtvTU++/8WdhoWt5uX99fWhzc+TFi9GdnXFZoL56NSVLRPkz
ZeH98uXE9vaY/NeNjeGVlX5Zbs3MtPl11ra22qamyh//dQ0N5fJ3zc93yp9z
ceHkhgPyqaiv//z2tPr6+sPDQ+0bFgCAX0s6nR4YGDCm1phSWYG4+HPtdHrt
+Pjx6uqAXH9LS82PWwHhcGk8Xn37Hu25uQ5Z48lS7fnz4a2t35ZqskL7Yqk2
Lks1+U/yC9bWBp886ZmdbR8bi/X3N3R2hn5aQpBFjvwyWd3JYu/DBycbnmdn
T2Kxan8T+IDHj8pv94+6kD/Q0b6rfBHlSylfUPmyeivYn/woX36Z3Cpyw8ht
IzeP3EL+nSY3ldxacoPJbSY3m/yD3Hhy+/l3mtyQclvKzXm794XctD8uIchf
Jze/DAEZCDIcXOz8yOQj1++VBGplUpKpKV+zHAAAuI/Dw8P6+nrvBboyWZ+o
rw1yyMXF4suXE/PznT099T/dN8zbJazW39BVVneJRNfKSv/GxrAs9ryl2sTt
Uu3Vq9+Wai9ejMp/laXa8nL/wsJv25TJ39XaWvvTEoKsDOUXyxpP/kxHG563
J8a2tLR8/CU3g6UnAAAI7hfsCfzNO5M0FosZUy1ribW1QfVVzX1ydbUsy7+5
uY6urtD39ghtbKzo72+QlaQsDmUBeXIyV4h26BeHGgzKQleWlPF49ffWnLIu
lTWqrGnfv0+qfw7vE/mkeXvYVoTD4b29Pe1bFQCAX9H19XVPT49XFSiRhYQT
VYGbm9X9/alksruvL/K9H9fKGqOnp14+ooIeDfDVoQZjY7G2trrvrR6bmytH
R6MrK/1v3sw58Xm+uFiU5aVXEsjPJvC/H3XxuVjrRMdVvkzyxZIvmXzhmpru
3kZMvtzyRZcvfaGPBvjyUAO5seX29hbSdxdUZGjIAJFh4sQhBfJ5lo/Iu/ha
mY5+wbenAQBgg729vXA4bEyFrDFOTubUVwj3iay7NjaGZSHhrVrvXoTH49VD
Q03e0QCDhTsa4PJyST5p29tjy8v9MzNt/f0N39uEVlaPXV2hubmOnZ3xq6tl
9c/hfSKfOu/iq2Ox2NnZmfatqoOeAAAguF+zJyDev3/f1NTkH3T1/Pmw+trm
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
mbWdnXGvzfj32nBDQ/nMTJvKhga6kYXr9vbYyEjzl9sp1NeXTU4WvEUsXwj5
nPsnQ8Visffv32vfhragJwAACI6ewC15bsbjcb8qMDTUVKCXPff2Jnt7/+G1
r9bW2qWlvouLX+41569yc7Mqy/uvPjnxePXa2kCBvhZPn/Z4f0tVfX393t6e
9g0IAAB+5Pr6ur+/33uvd2lbW12Bzmc/Pn48Nhb78n3N/o8pH9LhAjlnf39q
dDT65QuD8slJJrsLtI59+XLCa9VWGGOWl5eLebPJX+cfgCsXIJdRiI9OPmny
qfuyiyKfWPn0yidZ/QutHhluXxV1ZEjKwCzQS9AymXj7ZsiNXSeTjEw1xbzZ
AABAtvb29urr6435/O7+p097CrE8uL5eWVsb8I6++vv3Bb299Vtbow9+A9if
RtaxS0t9ra21X31yCrTDg3wtvE2fPpcE4vH42dmZ9g1oEXoCAIDg6Al86eLi
oqury3+rWmdn6Pz8ab6WNLKGXF8f+nIFFQ6Xjo/HDg9nCv2WeeeSSiW+emEw
7y9Bp9Nrk5MttwdavX79WvvWAwAAP3dzczM+Pu5vC9/UVJHf93rv7k581Vfs
728o5rbnrkSWZMvL/V8ta6emWvO7Pf7KSr/3vq2qcDiscjLU8+fPvbeqVcll
yMXk8UOTT5R8ur6sW8gnUz6l1Ia/inwDJQNQhuFXL0HLUM3j3yLTiEwm/sEW
Mr3IJFP8mw0AAGTr9evXjY2N/hmyk5MteVyxf1vm9GvDxTyRyolkMmuHhzPj
47GvlrXr60N5rFKcnz/t7Az5mz51dXVdXFxo33p2oScAAAiOnsBXrq+vh4aG
vNefy2Kx6uAveMrSaHV1wNsx9e/Ly0Sii1cCf/p5+7ZZ8fhxe/DP26dPK97r
jZ9XmK2tralUSvumAwAA95XJZBKJxBfv9R4PuDDIZNa2t8e8dxP/fckxOdny
4A+FD57d3YmvtogfHm4Kvlu+fEVmZ9v9PmdDQ8OrV6+0bjb5q+UC/Nef5ZKC
l3vlkyOfoq8Os8jvT70fZGQwypD88iVoGbAybIN/RWQCud2zQiYWmV60bjYA
AJCtVCrV2trqv9urv7/h06egm5FeXCw+ftxe0J96P8jI5y2R6PqyWdHUVLG6
OhD88yaLwFhMluKyWqsbGhpi06dv0RMAAARHT+BbmUzm8ePHXlWgIhIp29nJ
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
e3sTa2v9CwsRKW6lpGxurvvYUaTXWx6J+GZmOp8/H377tmB8v9fXf/SwnZiY
0A5VAACAUuTo6MhqAFUrFcXGxqB6eXBHpVLxg4Op1dWHg4OhTxgDpIqTYqO/
v3F6umN1tVcqJSlHz88XsvRYSql2ejovFyDv2PJydHw8/PDhZxpMtbebiYm2
9fWBwvpN7tCQPSn+QU9PTzKZzCbS5OHyJNaoi3J5WvWXdnfJRyYfnHx88iF+
wgwgASBhIMEgISGBIeEhQZKlRUQCVcJVglZCVwJYwliCWUL6Ez+eyHKQRSFL
Qy6ggPwY8o5Z118r6UiSUq7yGwAAANydiYmJzKyo6+uCmRX19u2iVEozM52R
iO9j1bjHU9bcXNfT4x8dbV1YiKyt9e/tTRwfz2ZZqqVSqxcXi2/ezLx4Mfrk
SWx2tnNoqNlqMPXRUq2hobKvL7i01LO7O15AA7mkHLUnxno8ns3NTe1Q1QGf
AAAAZE9p+gR+s7pX2VaBYLBaajD12uYTOjqaWVmJRqMNf1pY+v0VUuyNj4cf
PXoo9aTzNXOmten0dEdvb+BjZWd7u5HSVArOLO0KeZUUw1LA27enjY6O3vv2
NAAAAMiSg4MDv99vTI3UP9vbI+pFwid0djb/5Emsv7/RupnlT35X29HhGRlp
kXLuxYtR55umptOrUutubg7NzXXJRTY3/3lfU/l3qSflrXbz2aC8lrGxVuuC
H3R1dSUSiewjTZ5EnsqyCpTJk8u3UH+ZH5N8NPIBycckH9afHTWXy7/LRywf
tHzc8qE7/1okvCXIJdQl4CXsP/bDi1ykLBmXu1Pkrbauv0YSkaSj7CMNAAAA
7kE6nR4dHbUbQEUiPjdXqqnU6u7u+Oxs58dsnMFgVW9vYHpabSjY1dXy3t7E
o0cPpZ7s6vJ+7IeXaLRByjmX9xmQWtcarXVjEijlibH4BAAAIHtK1icgPH78
2B501dRUc3Iyp17h3JbUiltbQ2NjraHQnxwDhsP1o6OtUlWqHAB+VhcXi5ub
Q1L3Ss354fGgVKEDA01PnsTc1mRAftaQStg2CQwODmISAAAA0GVvb8/n8xlT
7fNV7OyMqpcK72l3d3xmptOaVfTnd0/H473W3dOuK9WurpZfvBidn49I5fPh
8WDmbNBtTlopeicn26yLrGtvb7+6uspVpMlTtd+c59bJk8u3cFt1LR/ExzzD
8vHJv8tHKR+oCwdJSPDLEpCF8LEOG7J8ZBHJUlK/1PckCcfqCSzJxyeJKFeR
BgAAAPcgnU4PDg7aVgGpfNxmFXj7dvHJk9jAQNOf1tVdXd7p6Y7NzSHn3cKf
lW0nXlvrHx1tDYfrPyzVQqHasbHWra0ht82WPTmZs2rLSmPM48ePtSNUE3wC
AACQPaXsExCWl5dtq0AwWOUGn6TUXc+fDw8NhT6sLVtbH0xNtW9vj7jt1+uf
lj0rYWEhIoXxh/21pLyXWtoNI8aurpa7u/2ZQbepVEo7NgEAAOC3Fy9eeL1e
a+Jk+dbWsHrBkE6v7u2NT062NTZWv1fYyL+MjLQUXA9/e1ZCPN778GHgw2Gp
HR2e5eXo6akrXtHoaIttEmhtbb28vMxtpMkTytPaVgH5RuovViRvu7z51jys
//pQ5GOSD+udC8VdZ7aflj0rQZbJny4fWVayuNxg0pBUY1kybgbdSgrKbaQB
AADAPUilUrFYzLYKdHf73WCPvLxcevIkFo02fDiPtavLu7AQKawe/r9Zhoft
7ZGpqfbW1veN0H5/xdBQ6PnzYTcYBo6OZqxmtjcmgeXlZe3YVAafAAAAZE+J
+wSEpaUlyypQFQhUHRxMaRU5OzujIyMtDQ2V/12GVcZijY8ePXRbu4P7Scr4
jY3BD88Gvd7yhw8Da2v9WvWzXFhnpydjEshy0C0AAADkkJ2dHaurQI3HU7a+
PqBVxkiVODXV/t490XJJ3d2+paWe16+n3PD7zSyVTMalIpWX2dJS9+Fp58pK
VOs2qFQqPjQUypgEzs/P8xFp8rQZq4B8O61fwcubLG/1hw5b+VDko5EPyA3H
s1lKFossGVk4snzeO1qXJSYvU/GHMkky1iXVSNqR5JOPSAMAAIB7kEwm+/r6
bKtAZ6dHyyqQSKysrfU/fBh4r9GT7Rne2Bh0g4che52czD169DAWa/T7/+uk
uqGhUl6mYqs3qRIDgSpjRGZpaUk7KvXBJwAAANmDT0BYXV31eDxSY/j9FXt7
E06WN+fnCwsLkfeGC7jKpZkPpdOr+/uT09MdH77w8fGwwweDFxeLbW3yU0aF
PW6ATgIAAABu4+XLl36/37IKlD9+3OdknXB1tfzo0cP37um2LY5Pn8aK4xjw
T3VyMre42G3VSP/1wvv7Gx0+GJR6OBYLWn7OBx0dHTnvJHAbeXL5FvKN5NvJ
N3W4FJc3Vt7e986c5SOQD6I4PMN/KllEspQ+PGyXRSdLz+ElJulFkoykGkk4
knbyF2kAAABwD1Kp1LsBBBVSIzlsYT04mBofD7/XADYUqp2e7tjfnywCz/Cf
6mOdb+WFLyxEzs8XnLyYvb0J6zKqPB7P6uqqdjy6AnwCAACQPfgEbJ4+fWp3
FXBmAG4qFd/aGurrC77XPWBwMLS1VbT2gA8lVfSrVxOTk23v3Z3n2MHg2dm8
dcfcjUlAFkI6ndaORAAAAPgT9vf3A4GAMTcOw+XlHgeqFClRRkZabrfi93jK
ensDT54Usz3gQx0fz87PR96bWBoK1co/OjBhIZFYkffcNgl0dXVdXV3lO9Lk
W8g3sq0C8q0d6HYlb6O8me+5Z+UNl3+UN189AByTLCtZXPKe3+4wIAtQlqEs
RgcuQBKL9U1rJdVIwsl3pAEAAMA9SKfTIyMjtlWgpaXOgXL0+nrlQ9twU1PN
5GSblCjFag/4UMlkfGtreHAw9F6Hgb6+4NbWkAOduHZ2Rq0fzW46CTx9+lQ7
Et0CPgEAAMgefAIZNjY27AG4Hk9Z/m5VSyRW4vHe5ub/6uba1eV98iRWWFOr
ciupq7e3R2Kx4O07ifz+iqmp9vzV/Pv7k+8GWtVPTExgErgHK9vHo48OEEII
IQfUO7X2n6r6ssrK+vqyiYm2PB3KpVLxjY1BayDRH6Vac3Pt0lKPVtd9l+jg
YGpsrPX2nURSMw8NNeevE9T5+UJHh6fuQVltXV1PT08ikXCmvJFvJN/O7mor
F5C/+6TkrZM38PavxeXtlTdZseu+GyQLTZabLLrba1CWpCzMPB1BSzKRlJIx
Cbx+/dqZSAMAN3N4dqVe+SCE/lQjq/v+tr6fyqpr6sqDwar9/ck81SRnZ/NT
U+23q1+v96bl1Pb2SOnYAz5UIrHy5EnsvSFZzc118Xhv/k62raZPZZXVFT+X
13YMLqgHoZY+3K3wCQAAQPbgE7jN9va21dX25lRqZqYjt1Xf+fmCPKc1ROmP
oU6Tk22Hh9PqNZ57ZB8M3p6Km6cj6K2t4YwNdW5uTjv0CpWWyZ0fOp8ghBBC
zui75rm//1j7rx/L6h7c3LqS25OoD82cXm/54GDo5cuxUj4J/PBd+vBgsKfH
n/PzUqmQQ6HaypqyL78rC7V3J5NJJysc+XaxWMy+VU0uI7fluu2PlTcN2/Cn
3yVZerIAb7uI83EELc/2rslbXSgUevPmjZORBgCuZX3vTL3sQQh9Ql/XRf72
bdkvFTfdh7a2hnNbh3xo5mxpqcM2/J6kQp6cbGto+KO9QCBQNTPTkVuTrdSE
8pz19WXf/VL29+8r/zcwph57ivpwt8InAAAA2YNP4D1kA21sbDTm5oh4cDCU
kxEAJydzIyMtt8+4wuH6p09jpTNf4B5F4IsXo1ab2f86gn75ciwnzx+P91rP
We31eulVlQ34BBBCCDms78PL//jF+9UPZTV1N4OKcnJYd3W1PDvbedvM2dhY
vbjY/fYtJ4Ef1eHh9Hv1bWvrg/X1gZy4BXZ2Rv3+irLKsr99W/Z1Tcf63plK
nTM5OWlZBarkYnIymEzenLW1fnmjbntR5G3ENvwJyTKUxShL8vYRtCzYnIz/
kARitRG+GWzR2dl5cXGhEmkA4ELwCSDkfn3jG/j7dxU/lt2UB/F4b04Kj5cv
x94zc/b2Bl68GMU2/DElk/GnT2O3h5TZ9e3JyVxOnnxwMPSgvuzfP5X9/Yea
b5um1aNOVx/uVvgEAAAge/AJfIhsoOFw2B5L2tXlzeb8+exsfmys9fYJqlSb
OzuUl3fV0dHMe0fQ8gbu7Y3f+wlTqdXx8bDdVtTv97948UI73AobfAIIIYSc
1/ftq19VNH35XVlVTVkoVJtN06Hr65X5+cjtbqJtbZg5/4LOzxfes1i0tj7Y
2BjM5jlXV3ul9vu5vOz//W/Zv8xD+cS1fAJCPB43N1TLJT169DCb1yVvy22H
gP3L7vwNNSgy2UfQsjxvz2iQxStL+N7PKalDEogxsvzrY7GYY4MtAKAgwCeA
UEHof4Pjf/uu8tv/lNXXl42Ph1Op+x+37u2N33YI2L/sPjqaUa+CCkLp9OrO
zuh7b+DYWGs2w2QvLha7ury1dWX//KHsy5/qv2tdVI83dX24W+ETAACA7MEn
8KdcX19Ho1G712hTU809fjF9fr4wMdGW+QW3x3PTt/b165IeNnpv2UfQt8/w
e3sD9xhAJs9jtcktt9uKHh0daQdawYNPACGEkJIe/7Om/W/flv1aedNrdG2t
/69WBYnEyuJi9+0+md3dPsyc95M9ssH6levvb2Z7u9naGv6rb2YyGR8Zablp
K/qfsr99V/G/gVH741b0CQjPnz/3+Xz2YDK5vL/qIZE3Qd4KeUMyb468UXmd
31rEso+gZanenuMmC/keb6YkjXczyOonJibS6bRijAGAC8EngFCh6PZgsq4u
7z1MmPv7k7c7mvr9FZg5763Xr6cGB0MeT3nGLTAx0XaPN3Nvb7ypqaaqpuwf
35X9oyzwQ/uqeqS5QR/uVvgEAAAge/AJfIxUKjU+Pm7dQFQlVc3q6l1vIEok
VqSetM6dfncIDAw0YUDNXpeXSzMzf7yxov7+xru3sdrbmwgGq+w7hrq6umgr
mhPwCSCEEFLUvz19f/+u4vtffr+B6I6/wE2nVx8/7gsG/2hjHon4XrzIQVf5
Epe8//F47+3+8F1d3levJu748NPT+Y4OT21d2dc/lv39x9rbbUV1fQK/WYPJ
QqGQ3W1MLlIu9Y4vSl6+ZVL9Y56FvEV0q8hesmBl2WbeWFnOsqjv6EuR9/9d
e7Ear9e7urqqG10A4E7wCSBUQPo+vPzlL75/fH/TbUzKrb29u9afJydz/f2N
mYrC56uYmem8vFxSL3UKXUdHMwMDTRm3gLyxs7Oddzd2SsHs9Zb/p+JmBtk/
q9t+6HisHmMu0Ye7FT4BAADIHnwCn+bp06eZG4iGhkKfLWmePo3dPh2NxRqZ
N5pbXVwsTk21Z9wCUjfepdS0K0zrjiEzMTGRSqW0I6tIwCeAEEJIV//bOPml
dQNR7d1uIHr5cuz2nd0dHZ6czJ1HGUlVtrzcc3sSwdBQ82c7jsqnIA+pqC77
0rpj6Lvw8u1PWd0nIMjPTe+6jVXKpX42bOQlywu/PWVA3hZ6CORW8inIEr7d
xUIW+Kcfcru9WFNT097ennZkAYBLwSeAUIGp4/HXVrex/1TcHBXG472fLgns
m7wybWB9voqpqfZsJs+iD3V4OB2LNd52zD59Gvvs5zI0FKqvL/vWai/2b++A
fmi5SR/uVvgEAAAge/AJfJbXr183NzfbNxCFw/Uf+73/q1cTnZ1/nFNFIr57
NMZHd9T5+cLISEvGmPqJUvPycikWC1pfVuvz+dbX17UDqqjAJ4AQQkhd34eX
//Gr/8vvyiprbn4bu7U19Kclwenp/LuS4EYtLXWbm0NMGciTEomVhYVIxtgp
f5ifj/zpb8lTqdWZmU4p6n4uv7lj6Ovarh86379jyA0+ASGdTs/MzFjdxqrl
guWy/3QGrrxMebG3X7u8FTgE8iRZwrKQZTnf8mkHP9bwQZKD5WC5aS/W3d1N
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
HAgEvvHkGQAAZO2x1RmJhNLp17nQKD2BPOXmJtbQUGlMmdfrPTw8/PaZJr9A
fpn8Yvkt8hvVDz4foSeQp8jQNDTU8KaePAMAUGDX19eBQMBudR4dTarf/fMU
egJ5ytJSt/WeV3V3d3c6ndY+nQuBngAAIHdvoScg5DMNhULGVHo8xdvbEfV5
y4uHnkCecnExZ60s+kNPngEAQHaetjpnZ9vUJwD5CD2BfCSRWGpr8xhTYkzN
8vLyj5xs8susUkqJ/Eb57eqfwouHnkCeIkPTW3vyDABA4X38+NFudQYC5RcX
c+oTgHyEnkA+sr0d8XiKjakMhUKfPn3SPpELhJ4AACB3b6QnIM7Ozmpra19r
JdWeJVZXV/9Bw+Ji5OTkFU7d7+4Wm5tr7JVFNzY2tE9hAABes7u7u+bmZnuh
0fX1fvVpwItHpmpVVVUqU7W///3v796Nqn8FXjzp9Ep/f739fvfExMSPn2yP
u9/Kb39961fImfbzzz/LX7rKyTY52av+FchHZFCytyGTYUoGq/yNhAAAYGNj
w96VrLm55u5uUX0a8OKRKVNxcbHKVK26ulr9089HHheDra2tPTs70z6FC4ee
AAAgd2+nJyAODg7sSmp9/WurpNo9gZKSkv/5in/84x///d///be//e2vf/3r
X/7ylz9b/vSnP/3xj3+0//e//uu//viZ/Bv7F/zFIr9Lfu/f//53+SDPfvCl
pcjl5WtbuDWZXO7s9Nmvp0WjUe2TFwCA1+/q6spaaLTS6y3e339tP9eWqdo/
//nPb0zVZK717FTtkT1b+5Plz5/Jr/+bRX771z74//7v/x4cTKl/BV48ExMt
9vvdfX19Gb3fLb9Yfou9foV8EPVP5GUjZ5qcQvKX/rXzIa/W1kbUvwIvHhmO
ZFCSoUkGKBmm8jcGAgAAWzQatReA6uz0JZPL6pOBl83//b//t6ioSGWqVlJS
ov7pv3guLubq639bDPbg4ED75C0oegIAgNy9qZ7Ar/9ZSf306bX9aDudXonH
Z/f2RtfW+mZmwkNDDe3t3rq6MusJ6svE7y9paanp6wtMTrYsL/fs7Ayfnk6/
vhm7JBIJ2a+nDQ8Pa5+2AAC8FcfHxz6fz5hymXLIHEN9PvDiubqKfvw4vrEx
EI12DA+HOjp8wWDFC07VfL6Sxsaqnp668fHmhYWura2h4+Op+/tXuLr+5+1H
q8LhcCKRyPRMk98iv9Fev0I+lPqnQxwbGYhkOJJBSYYmGaDyMe4BAIAvpNPp
4eFhewGoSCSkPh8gjs2nT7HHxWDfvXunfeYWGj0BAEDu3lpPQMzNzdmV1HDY
4/anpre3CwcHY8vLPaOjTW1tHmuFpYwfJtfWltbXlzc0VMr/yv/3+0s9nsw+
iPz6pqbqoaGGWKxzd3fk6iqq/pXJJen0ythYk/16WldXVyqV0j5nAQB4Q3Z2
dqxW58OepPH4rPrEIJckEktHR5Pr6/0TEy1dXf5M25seT7FM1fz+EvlSBIMV
Evk/8o/Wq82ZzdZCoar+/vq5ufatraHz8xm3L7b/eRH4yoaGhpubm+zONPmN
8tvlg7zWrS5I7pEhSC46GY5kSJKh6WXHOgAA8A2pVKqrq8teAGpsrMnt01eS
j9zfL4XDHnsx2Lm5Oe1zVgE9AQBA7t5gTyCdTo+OjtqV1PZ2byLhpqqAvWLA
+nr/6GhTY2PVtwsAzc01vb0Pb5PFYp1ra33b25GDg7HT0+nr63n5rFOp7ywC
kEwuf/oUkz/u8HB8Zyfy7l3/4mL31FRrf3+gtdXU1pZ+40+vry8fGKhfWuo+
OppMpVw2k5fP0X49rbW1le1HAQAovLW1NXsBqGCwwnV7RclEa2traHKyJRz2
fKN7Kf8pFKrs6vKPjDRGox0rKz3v3w/u74+enExdXUXv7xe/PYOSOaFM1e7u
FmWqJtOt3d2Rzc1BmXo9rihl/XDzWytE9fTUyZ8rf6K7JsMS+Uw9nodF4Ovq
6s7Pz3M50+S3yweRDyUfUD6s+qdGHBUZfKzlPh5eT5NB6aXGNwAA8IPu7u5a
W1vtBaCmplrV5wbEUZHvYuS7Hnsx2NHR0Yy2IXs16AkAAHL3BnsCtqGhIbsq
0N1d6/xl8y8vo6urvX19ga898pV/L5/I9HT43bv+o6PJm5tYAXq2t7cLJydT
29uRaLRjYKA+FKq0ntk+01jo7PTNz3fIgal/Jb+bubl2uyTQ1NR0e3urfZ4C
APBGLS4u2lUBmWBcX8+rzxC+Oyna3BwcHg41NFR+7efy7e3e8fFmmdF9/Dh+
dRX9bmMz9yQSS2dnMx8+DC8sdEUioebm6q8tRBAOe2Qaub8/6vxZ8c7OsNW+
qKitrT05Ocn9TJMPIh9KPqB8WPng6p8gcUhk2JHBxy4JyHCU+5kGAACycHt7
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
2N3dXVpaGhsb6yn/Bfwfb0RX/jr+u7a2SwMDrZOTPWHZ+ebNw42NqWO9SVgq
Ta+sjC4sDE5P3xoaar927Up9/XfVu80XagvL8EI7OzuHh4dfvHjhwVUAwKm0
v7//7t27R48e9fX1lR8uX1mqfbk9GEZLy8W+vqbR0evPng28fj1cLE4e603C
7e0nq6tjL1/em529PTzc2d1dn8ud/+M9wM9twNWrVwcHB3/55ZcPHz5k/UHy
34XDFA5WOGThwB26Ef2lJQ4HOhzucNDDoQ8TIEyDMBmOb6aFaRwmc5jSYWKH
6R0meZjqh2ZapUI5aAPCqRFOkHCahJMl608RAOBYlEqlFy9eDIelWGdndalW
+drX51u49fXfXbt2ZWiofXr61sLC4MrKaKk0fXxLtf39/MbG1Js3D+fm7kxO
9gwMtFYfKFC7hfs542xoaOjp6RkbG1taWtIMp0InAEA8nUBydnZ2CoXC9PR0
f39/U1NTdc15+F7053KgoeFcR8flvr6m+/c7xsZuhPXns2cDi4tDhcLI6urY
+vrEhw9Tm5uPfv/98fb2k93d2Z2dmfAPW1uPwwKyWJxcWxt/9+7nly/vPX8+
MDPTNzHRPTzcEdaTXV0/NjZeqC4pazcAf6iFAblcrre3d3x8/OXLl7/7ihAA
cJbs7e2trKzk8/nBwcG2tra6z36s/mXul8izvv5cW9ul3t7c0FDb6Oj1R496
nz79aWFhcHn5wfv3o2GpFtZjYalWKk1//DgT1mlhhH/+01JtaWl4fv7u7Ozt
ycmekZGuu3ev3rhRX33y+5+Wap/DgOD69esPHz6cn5+32XvSwuELBzEcynBA
qzOtkg38cLhRCSNMiTAxwvQIkyRMlTBhwrQJkydMoTCRwnQKkypMrTDBKjMt
TLnwz2H6hf8pTMUwIcO0DJMzTNEwUcN0DZM2TN0wgcvPEfhTLfw5DAjCKRBO
hHA6hJPC48YAgDPl999/f/ny5fj4eG9YNn1+jFQlG/jzUq2x8UJX148DA63D
wx0TE90zM33Pnw+8fHnvT0u17e0nYZ22uzsb/uH33x+HpdqHD1Nhqba6OlYo
jCwuDj17NjA9fWts7Mb9+x19fU0dHZer271WlmqHG86DPxc0NTX19/dPT08X
CgWPG0uRTgCAeDqB1IX/3C8tLYUV3dDQUFdXV3W3gcrt6MvVO9Lfl+/afUkI
vnJUVpIXyj+ndp/5x9qt5vb29rCqnJycXFhYWF9fdw8QAKAirLeXl5dnZ2eH
h4e7u7urdwhrNwn/ulT7F6u12lLtwn9cqrW0tPT19Y2NjT1//nxlZcX3g06l
cFjDwQ2HOBzocLirz8I4XBT/UJ1p//rPBef++OeCShJwuTbTwvQOkzxM9TDh
w7T/XTAMAFC2t7e3vr6+sLAwOTnZ39/f3t7+/yzVjvAWbm2p9jngbGho6Orq
Ghoamp6eXlpaEgyfAjoBAOLpBE6ZsOwsFovLy8vPnj0LK8+w9uvp6QmLz+oW
uHWHVqFXqmvRH6tRQe2fa//rF7lcrq2t7caNG3fu3BkbG8vn8y9fvlxbW5Ob
AgD8cxsbG2/evJmbm3v06NHw8PCtW7c6Ojqamprq6+v/dqn2439aqn1ZrTU0
NLS0tFy7dq2/v//hw4czMzOLi4srKyvb29tZv2OyEQ59mABhGoTJEKZEmBhh
eoRJcqgrrvvjXPr7yfZZmKhhuoZJG6ZumMBhGofJHKa0W80AAP/czs7O2tra
y5cv8/n82NjYnTt3bty40dbWdqgr/pe3cBsbG9vb23t6eoaGhiYnJ589e7a8
vFwsFn2x6/TRCQAQTydwdoTV4NbWVliCFgqFsApdWFiYn59//vz5L7/8Mjs7
++TJk/B/nz59GlaPc3Nz4X/99ddfX79+/f79+7CiEAMAAByr/f39Uqn022+/
vX37NizVFhcXa0u1fD4/Uxb+ISzVwr9/8eJFWKotLS2trKwUi0UxAP9cmGlh
woRpEyZPmEJhIoXpFCZVmFqHZ1qYeGH6hX8fpmKYkGFahskZpmj45Vm/AwCA
02xnZ2djY+P9+/evX78OS7WFhYW5ubmwVHv69GntFm5tqRb+17BUKxQKa2tr
W1tbYoAzRScAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAA
QCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicA
QDydAAAAAAAAQCp0AgDE0wkAAAAAAACkQicAQDydAAAAAAAAQCp0AgDE0wkA
AAAAAACk4u87gffv34d/2Nra+vZ/5QRAQu4DAAAAAACQlL/+jU+lE1hbW/vw
4YNOAIC/l/V/xwAAAAAAAPg6f/0bnw8fPqyurhaLxfX1dZ0AAAAAAAAAAJxi
W1tb6+vrxWKxVCqtra1tbm5m/YoAAAAAAAAAgOOyubm5trZWKpU+ffpU2VVA
KgAAAAAAAAAAp9Lm5maxWFxdXd3f3//06dP29vba2trGxkbWrwsAAAAAAAAA
OHobGxtra2vb29ufqirbC4R/v7W1lfWrAwAAAAAAAACOxubmZiUSCP/w6Y8q
/77yAAK1AAAAAAAAAAAkbWtrq/K4gcq+AZ/+k8oDCIL19fUPHz5sAAAAAAAA
AAAJ+vDhw/r6eqUBOPy4gf+oVCoVi8XV1dUVAAAAAAAAACBBq6urxWKxVCr9
fSEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJxM/wcznC/+
    "], {{0, 2069.}, {1372., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1372., 2069.},
  PlotRange->{{0, 1372.}, {0, 2069.}}]], "Output",
 CellChangeTimes->{
  3.958973183823432*^9, {3.959040721735125*^9, 3.9590407417310457`*^9}, {
   3.9590408104305687`*^9, 3.959040822565309*^9}, {3.959040949681102*^9, 
   3.9590409515420313`*^9}, {3.9590412226815453`*^9, 3.959041227404285*^9}, {
   3.959041315899027*^9, 3.959041322150628*^9}, {3.959042781412445*^9, 
   3.959042800557123*^9}},
 CellLabel->
  "Out[1354]=",ExpressionUUID->"dfa6f5d4-e0ce-4092-8218-a88ead5b0b68"]
}, Open  ]],

Cell["\<\
The image displays a sophisticated \[OpenCurlyDoubleQuote]Spekkens Toy Model \
Visualizer\[CloseCurlyDoubleQuote] built in Mathematica. At the top, a large \
1\[Times]16 binary pattern (composed of multiple 1\[Times]4 sub-patterns) \
represents the \[OpenCurlyDoubleQuote]Current State.\[CloseCurlyDoubleQuote] \
Below this, there are smaller displays for \[OpenCurlyDoubleQuote]State 1\
\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]State 2,\
\[CloseCurlyDoubleQuote] which are the individual SpekkensStates that combine \
to form the current composite state. The lower part of the interface shows a \
complex graph, which is the full state space of the model, with many nodes, \
each depicting a 4\[Times]4 binary pattern. This particular view highlights \
one of the nodes in orange, indicating it\[CloseCurlyQuote]s the currently \
active state. Controls on the left allow for selecting individual states, \
applying permutations, and randomizing the input states.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958613359695794*^9, 3.958613360748547*^9}, {
   3.958613502768668*^9, 3.958613512935083*^9}, 3.958966855561021*^9, {
   3.9590498058103743`*^9, 
   3.959049806336718*^9}},ExpressionUUID->"a89ff442-bdc1-4d8b-947d-\
9c29832a3ce6"],

Cell["\<\
The Mathematica code begins by defining the core elements of the Spekkens toy \
model: SpekkensStates (six fundamental binary vectors) and \
SpekkensPermutations (four specific transformations). The StatePlot function \
is a utility to visually render these binary states as grids, using red for \
1s and blue for 0s. The crucial part of the visualization is the stateGraph, \
which represents the entire state space of the model. This graph is \
constructed by taking all possible Kronecker products of pairs of \
SpekkensStates to form composite states. NestGraph is then used to connect \
these composite states based on the application of SpekkensPermutations, \
effectively showing all reachable states up to a certain depth. Each vertex \
in this graph is itself a StatePlot of the corresponding composite state.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 3}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958613359695794*^9, 3.958613453936064*^9}, 
   3.958613494123639*^9, 3.958613546720035*^9, {3.958613625503038*^9, 
   3.958613628268882*^9}, 3.9589668587932*^9, {3.95904980876903*^9, 
   3.959049809436769*^9}},ExpressionUUID->"c4cf9688-5e0b-429c-bf0c-\
5c77674c4a8a"],

Cell["\<\
The Manipulate block creates the interactive user interface. Users can select \
state1 and state2 from SetterBar controls, which then form the currentState \
via KroneckerProduct. A PopupMenu allows selection of a permIndex for \
applying a SpekkensPermutations if applyPermutation is toggled on. The large \
StatePlot dynamically updates to show the permutedState. Critically, the \
stateGraph at the bottom dynamically highlights the node corresponding to the \
permutedState in orange, providing an immediate visual context within the \
overall state space. Additional buttons allow for randomizing initial states \
and even animating a transition between two arbitrary composite states, \
making this a powerful tool for exploring the rich dynamics and state space \
of the Spekkens toy model.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.9586136905647163`*^9, 3.958613702330207*^9}, 
   3.958966863278648*^9, {3.959049812553855*^9, 
   3.959049813369267*^9}},ExpressionUUID->"83300d3e-cd9e-46ed-8f96-\
0758a702b63e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permLabel", "[", 
    RowBox[{"Cycles", "[", 
     RowBox[{"{", "}"}], "]"}], "]"}], ":=", "\"\<I\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permLabel", "[", 
    RowBox[{"Cycles", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], "]"}], ":=", 
   "\"\<S12\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permLabel", "[", 
    RowBox[{"Cycles", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], "]"}], ":=", 
   "\"\<S13\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permLabel", "[", 
    RowBox[{"Cycles", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}], "]"}], ":=", 
   "\"\<S14\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"buildOrbitGraph", "[", "state_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"orbit", ",", 
       RowBox[{"edges", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"labels", "=", 
        RowBox[{"{", "}"}]}], ",", "s", ",", "p", ",", "s2", ",", 
       "vertexCoordinates"}], "}"}], ",", 
     RowBox[{
      RowBox[{"orbit", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Permute", "[", 
           RowBox[{"state", ",", "p"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "SpekkensPermutations"}], "}"}]}], "]"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"s2", "=", 
            RowBox[{"Permute", "[", 
             RowBox[{"s", ",", "p"}], "]"}]}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"UnsameQ", "[", 
              RowBox[{"s2", ",", "s"}], "]"}], ",", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"edges", ",", 
                RowBox[{"s", "->", "s2"}]}], "]"}], ";", "\n", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"labels", ",", 
                RowBox[{"permLabel", "[", "p", "]"}]}], "]"}], ";"}]}], 
            "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "SpekkensPermutations"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "orbit"}], "}"}]}], "]"}], ";", "\n", 
      RowBox[{"vertexCoordinates", "=", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", "2", " ", 
               RowBox[{"Pi", "/", 
                RowBox[{"Length", "[", "orbit", "]"}]}]}], "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", "2", " ", 
               RowBox[{"Pi", "/", 
                RowBox[{"Length", "[", "orbit", "]"}]}]}], "]"}]}], "}"}]}], 
          "&"}], ",", "orbit"}], "]"}]}], ";", "\n", 
      RowBox[{"Graph", "[", 
       RowBox[{"orbit", ",", "edges", ",", 
        RowBox[{"EdgeLabels", "->", 
         RowBox[{"Thread", "[", 
          RowBox[{"edges", "->", "labels"}], "]"}]}], ",", 
        RowBox[{"MultiedgeStyle", "->", "True"}], ",", 
        RowBox[{"VertexShapeFunction", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"ArrayPlot", "[", 
              RowBox[{
               RowBox[{"Partition", "[", 
                RowBox[{"#2", ",", "2"}], "]"}], ",", 
               RowBox[{"Mesh", "->", "True"}], ",", 
               RowBox[{"ImageSize", "->", "50"}], ",", 
               RowBox[{"Background", "->", "White"}]}], "]"}], ",", "#1"}], 
            "]"}], "&"}], ")"}]}], ",", 
        RowBox[{"VertexSize", "->", "0.25"}], ",", 
        RowBox[{"EdgeStyle", "->", 
         RowBox[{"Arrowheads", "[", "0.03", "]"}]}], ",", 
        RowBox[{"GraphLayout", "->", "\"\<CircularEmbedding\>\""}], ",", 
        RowBox[{"ImageSize", "->", "500"}], ",", 
        RowBox[{"PlotLabel", "->", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<State Orbit under Permutations\>\"", ",", "16", ",", "Bold"}], 
          "]"}]}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"selectedState", "=", "None"}], ",", 
     RowBox[{"orbitGraph", "=", "None"}]}], "}"}], ",", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Click a state to see its orbit:\>\"", ",", "14", ",", "Bold"}], 
        "]"}], ",", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"s", "=", "ss"}], "}"}], ",", 
               RowBox[{"EventHandler", "[", 
                RowBox[{
                 RowBox[{"ArrayPlot", "[", 
                  RowBox[{
                   RowBox[{"Partition", "[", 
                    RowBox[{"s", ",", "2"}], "]"}], ",", 
                   RowBox[{"Mesh", "->", "True"}], ",", 
                   RowBox[{"ImageSize", "->", "50"}], ",", 
                   RowBox[{"Background", "->", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"selectedState", "===", "s"}], ",", "LightBlue", 
                    ",", "White"}], "]"}]}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<MouseClicked\>\"", ":>", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"selectedState", "=", "s"}], ";", "\n", 
                    RowBox[{"orbitGraph", "=", 
                    RowBox[{"buildOrbitGraph", "[", "s", "]"}]}], ";"}], 
                    ")"}]}], "}"}]}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"ss", ",", "SpekkensStates"}], "}"}]}], "]"}], ",", 
           "3"}], "]"}], ",", 
         RowBox[{"Frame", "->", "All"}]}], "]"}], ",", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"orbitGraph", "=!=", "None"}], ",", "orbitGraph", ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Select a state to visualize its orbit\>\"", ",", "14", ",", 
            "Italic", ",", "Gray"}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"Spacing", "->", "2"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958973194426894*^9, 3.958973194428384*^9}, {
  3.959049827007188*^9, 
  3.9590498294589853`*^9}},ExpressionUUID->"cc01a001-fd44-49c0-8665-\
ec619bd5e2a0"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`selectedState$$ = 
  None, $CellContext`orbitGraph$$ = None}, 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Click a state to see its orbit:\"\>",
       StripOnInput->False,
       FontSize->14,
       FontWeight->Bold]},
     {
      TagBox[GridBox[{
         {
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1}, {0, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                 2}}}],
                Antialiasing->False]}}},
            Background->GrayLevel[1],
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`selectedState$$ = {1, 1, 0, 
                0}; $CellContext`orbitGraph$$ = $CellContext`buildOrbitGraph[{
                 1, 1, 0, 0}]; Null), Method -> "Preemptive", PassEventsDown -> 
             Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{0, 0}, {1, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                 2}}}],
                Antialiasing->False]}}},
            Background->GrayLevel[1],
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`selectedState$$ = {0, 0, 1, 
                1}; $CellContext`orbitGraph$$ = $CellContext`buildOrbitGraph[{
                 0, 0, 1, 1}]; Null), Method -> "Preemptive", PassEventsDown -> 
             Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{0, 1}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                 2}}}],
                Antialiasing->False]}}},
            Background->GrayLevel[1],
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`selectedState$$ = {1, 0, 1, 
                0}; $CellContext`orbitGraph$$ = $CellContext`buildOrbitGraph[{
                 1, 0, 1, 0}]; Null), Method -> "Preemptive", PassEventsDown -> 
             Automatic, PassEventsUp -> True}]]},
         {
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 0}, {1, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                 2}}}],
                Antialiasing->False]}}},
            Background->GrayLevel[1],
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`selectedState$$ = {0, 1, 0, 
                1}; $CellContext`orbitGraph$$ = $CellContext`buildOrbitGraph[{
                 0, 1, 0, 1}]; Null), Method -> "Preemptive", PassEventsDown -> 
             Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{0, 1}, {1, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                 2}}}],
                Antialiasing->False]}}},
            Background->GrayLevel[1],
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`selectedState$$ = {0, 1, 1, 
                0}; $CellContext`orbitGraph$$ = $CellContext`buildOrbitGraph[{
                 0, 1, 1, 0}]; Null), Method -> "Preemptive", PassEventsDown -> 
             Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 0}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                 2}}}],
                Antialiasing->False]}}},
            Background->GrayLevel[1],
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic}],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`selectedState$$ = {1, 0, 0, 
                1}; $CellContext`orbitGraph$$ = $CellContext`buildOrbitGraph[{
                 1, 0, 0, 1}]; Null), Method -> "Preemptive", PassEventsDown -> 
             Automatic, PassEventsUp -> True}]]}
        },
        AutoDelete->False,
        GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]},
     {
      DynamicBox[ToBoxes[
        If[$CellContext`orbitGraph$$ =!= None, $CellContext`orbitGraph$$, 
         Style["Select a state to visualize its orbit", 14, Italic, Gray]], 
        StandardForm],
       ImageSizeCache->{148., {0.145263671875, 6.519775390625}}]}
    },
    $CellContext`Spacing -> 2,
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.958973194603699*^9, 3.959040964858859*^9, 
  3.95904122998598*^9, 3.959041324411367*^9, 3.959042781929504*^9, 
  3.959042835079142*^9},
 CellLabel->
  "Out[1371]=",ExpressionUUID->"5e0aec67-9f3e-45a9-bce8-2e4da343b85a"]
}, Open  ]],

Cell["\<\
The image displays an interactive interface designed to visualize the \
\[OpenCurlyDoubleQuote]orbit\[CloseCurlyDoubleQuote] of different states \
under a set of defined permutations. At the top, a 2\[Times]3 grid showcases \
six distinct 2\[Times]2 binary patterns, representing the SpekkensStates. \
Below this grid, a prompt instructs the user to \[OpenCurlyDoubleQuote]Select \
a state to visualize its orbit,\[CloseCurlyDoubleQuote] indicating that \
clicking on any of these 2\[Times]2 patterns will trigger the display of a \
graph.\
\>", "Item",
 CellChangeTimes->{{3.793891724891276*^9, 3.793891806306624*^9}, {
   3.795737503964374*^9, 3.795737584805357*^9}, {3.795737632794353*^9, 
   3.795737653673546*^9}, {3.958573762821009*^9, 3.958573782462821*^9}, {
   3.958573868949756*^9, 3.958573894310577*^9}, {3.958606885729864*^9, 
   3.958607092174608*^9}, {3.9586072258570004`*^9, 3.958607262092358*^9}, {
   3.958607532255677*^9, 3.9586075361084538`*^9}, {3.958607697827297*^9, 
   3.958607698828539*^9}, {3.9586137064345617`*^9, 3.958613707208494*^9}, 
   3.958966864901493*^9, {3.95904983368852*^9, 
   3.95904983429139*^9}},ExpressionUUID->"5595afa6-f971-444e-b921-\
7fae8cc56307"],

Cell[CellGroupData[{

Cell["\<\
The accompanying Mathematica code defines the core elements: SpekkensStates \
(the six binary patterns shown) and SpekkensPermutations (a set of four cycle \
notations, including identity and three swap permutations). The permLabel \
function is a utility to provide concise labels for these permutations (e.g., \
\[OpenCurlyDoubleQuote]I\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]S12\
\[CloseCurlyDoubleQuote]). The central function is buildOrbitGraph, which \
takes a state as input and generates a graph of its \
\[OpenCurlyDoubleQuote]orbit.\[CloseCurlyDoubleQuote] This orbit consists of \
all unique states reachable from the input state by applying any of the \
SpekkensPermutations. The graph displays these states as nodes arranged in a \
circle, with directed edges labeled by the permutation that transforms one \
state into another.

The DynamicModule handles the user interaction. It presents the initial grid \
of SpekkensStates as clickable elements. When a user clicks on one of these \
ArrayPlot representations, the selectedState variable is updated, and \
critically, the buildOrbitGraph function is called with the selected state. \
The resulting orbitGraph is then dynamically displayed below the selection \
grid. This setup provides an intuitive way for users to explore the concept \
of a state\[CloseCurlyQuote]s \[OpenCurlyDoubleQuote]orbit\
\[CloseCurlyDoubleQuote] under specific group actions, visually demonstrating \
how the Spekkens states transform into one another under the allowed \
permutations.\
\>", "Item",
 CellChangeTimes->{{3.793891724891276*^9, 3.793891806306624*^9}, {
   3.795737503964374*^9, 3.795737584805357*^9}, {3.795737632794353*^9, 
   3.795737653673546*^9}, {3.958573762821009*^9, 3.958573782462821*^9}, {
   3.958573868949756*^9, 3.958573894310577*^9}, {3.958606885729864*^9, 
   3.958607092174608*^9}, {3.9586072258570004`*^9, 3.958607262092358*^9}, {
   3.958607532255677*^9, 3.9586075361084538`*^9}, {3.958607697827297*^9, 
   3.958607698828539*^9}, {3.9586137064345617`*^9, 3.958613710517333*^9}, 
   3.958966865948228*^9, {3.959049836488893*^9, 
   3.959049838198868*^9}},ExpressionUUID->"a2c45367-9313-438e-a779-\
e59796c5f795"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "states", ",", "permNames", ",", "perms", ",", "permuteState", ",", "g0",
       ",", "coords", ",", "edges", ",", 
      RowBox[{"current", "=", "1"}]}], "            ", "}"}], ",", 
    RowBox[{
     RowBox[{"states", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";", 
     "\n", 
     RowBox[{"permNames", "=", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Identity\>\"", ",", "\"\<Swap Horizontally\>\"", ",", 
        "\"\<Swap Vertically\>\"", ",", "\"\<Swap Diagonally\>\""}], "}"}]}], 
     ";", "\n", 
     RowBox[{"perms", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cycles", "[", 
         RowBox[{"{", "}"}], "]"}], ",", 
        RowBox[{"Cycles", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"Cycles", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"Cycles", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"permuteState", "[", 
       RowBox[{"s_List", ",", "p_Cycles"}], "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"permList", "=", 
          RowBox[{"PermutationList", "[", 
           RowBox[{"p", ",", 
            RowBox[{"Length", "[", "s", "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"s", "[", 
         RowBox[{"[", "permList", "]"}], "]"}]}], "]"}]}], ";", "\n", 
     RowBox[{"edges", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"j", "=", 
              RowBox[{"FirstPosition", "[", 
               RowBox[{"states", ",", 
                RowBox[{"permuteState", "[", 
                 RowBox[{
                  RowBox[{"states", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "p"}], "]"}]}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"j", "=!=", 
               RowBox[{"Missing", "[", "\"\<NotFound\>\"", "]"}]}], ",", 
              RowBox[{"i", "<->", 
               RowBox[{"First", "[", "j", "]"}]}], ",", "Nothing"}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "states", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "perms"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
     ";", "\n", 
     RowBox[{"g0", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"edges", ",", 
        RowBox[{"VertexLabels", "->", "None"}], ",", 
        RowBox[{"EdgeStyle", "->", "Black"}]}], "]"}]}], ";", "\n", 
     RowBox[{"coords", "=", 
      RowBox[{"GraphEmbedding", "[", 
       RowBox[{"g0", ",", "\"\<CircularEmbedding\>\""}], "]"}]}], ";", "\n", 
     RowBox[{"Column", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Current State\>\"", ",", "Bold", ",", "14"}], "]"}], 
         ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{"ArrayPlot", "[", 
           RowBox[{
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"states", "[", 
               RowBox[{"[", "current", "]"}], "]"}], ",", "4"}], "]"}], ",", 
            RowBox[{"Mesh", "->", "True"}], ",", 
            RowBox[{"ImageSize", "->", "200"}], ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{
               "\"\<State \>\"", ",", "current", ",", "\"\< of \>\"", ",", 
                RowBox[{"Length", "[", "states", "]"}]}], "}"}], "]"}]}]}], 
           "]"}], "]"}], ",", 
         RowBox[{"Spacer", "[", "10", "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Apply Permutation\>\"", ",", "Bold", ",", "14"}], 
          "]"}], ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"Flatten", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Button", "[", 
                   RowBox[{"#1", ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"new", ",", "pos"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"new", "=", 
                    RowBox[{"permuteState", "[", 
                    RowBox[{
                    RowBox[{"states", "[", 
                    RowBox[{"[", "current", "]"}], "]"}], ",", "#2"}], 
                    "]"}]}], ";", "\n", 
                    RowBox[{"pos", "=", 
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{"states", ",", "new"}], "]"}]}], ";", "\n", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"pos", "=!=", 
                    RowBox[{"Missing", "[", "\"\<NotFound\>\"", "]"}]}], ",", 
                    
                    RowBox[{"current", "=", 
                    RowBox[{"First", "[", "pos", "]"}]}]}], "]"}], ";"}]}], 
                    "]"}], ",", 
                    RowBox[{"ImageSize", "->", "150"}]}], "]"}], "&"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"permNames", ",", "perms"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Button", "[", 
                  RowBox[{"\"\<Random State\>\"", ",", 
                   RowBox[{"current", "=", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"Length", "[", "states", "]"}]}], "}"}], "]"}]}], 
                   ",", 
                   RowBox[{"ImageSize", "->", "150"}]}], "]"}], ",", 
                 RowBox[{"Button", "[", 
                  RowBox[{"\"\<Reset\>\"", ",", 
                   RowBox[{"current", "=", "1"}], ",", 
                   RowBox[{"ImageSize", "->", "150"}]}], "]"}]}], "}"}]}], 
              "}"}]}], ",", "1"}], " ", "]"}], "]"}], ",", 
         RowBox[{"Spacer", "[", "10", "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<State Space Graph (click a state)\>\"", ",", "Bold", ",", 
           "14"}], "]"}], ",", 
         RowBox[{"Dynamic", "@", 
          RowBox[{"Graph", "[", 
           RowBox[{"g0", ",", 
            RowBox[{"VertexCoordinates", "->", "coords"}], ",", 
            RowBox[{"VertexSize", "->", "0.04"}], ",", 
            RowBox[{"VertexStyle", "->", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"i", "===", "current"}], ",", "Red", ",", "Gray"}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], "]"}]}], 
            ",", 
            RowBox[{"VertexShapeFunction", "->", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"EventHandler", "[", 
                RowBox[{
                 RowBox[{"Inset", "[", 
                  RowBox[{
                   RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"states", "[", 
                    RowBox[{"[", "#2", "]"}], "]"}], ",", "4"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "30"}], ",", 
                    RowBox[{"PlotRangePadding", "->", "0"}]}], "]"}], ",", 
                   "#1"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<MouseClicked\>\"", ":>", 
                   RowBox[{"(", 
                    RowBox[{"current", "=", "#2"}], ")"}]}], "}"}]}], "]"}], 
               "&"}], ")"}]}], ",", 
            RowBox[{"ImageSize", "->", "600"}], ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{"\"\<Vertices: \>\"", ",", 
                RowBox[{"VertexCount", "[", "g0", "]"}], ",", 
                "\"\<   Edges: \>\"", ",", 
                RowBox[{"EdgeCount", "[", "g0", "]"}]}], "}"}], "]"}]}]}], 
           "]"}]}]}], "}"}], ",", 
       RowBox[{"Alignment", "->", "Center"}], ",", 
       RowBox[{"Spacings", "->", "0.5"}]}], "]"}]}]}], "]"}], "\n"}]], "Input",\

 CellChangeTimes->{{3.959042918458092*^9, 3.959042918459295*^9}},
 CellLabel->
  "In[1379]:=",ExpressionUUID->"ff2b6b94-bcc3-4eee-bfda-900e3b0d1cfa"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`states$$ = {{1, 1, 0, 0}, {0, 0, 1, 1}, {1, 0,
   1, 0}, {0, 1, 0, 1}}, $CellContext`permNames$$ = {
  "Identity", "Swap Horizontally", "Swap Vertically", 
   "Swap Diagonally"}, $CellContext`perms$$ = {
   Cycles[{}], 
   Cycles[{{1, 2}, {3, 4}}], 
   Cycles[{{1, 3}, {2, 4}}], 
   Cycles[{{1, 4}, {2, 3}}]}, $CellContext`permuteState$$, $CellContext`g0$$ =
   Graph[{1, 2, 3, 4}, {
   Null, {{1, 1}, {1, 1}, {1, 2}, {1, 2}, {2, 2}, {2, 2}, {2, 1}, {2, 1}, {3, 
    3}, {3, 4}, {3, 3}, {3, 4}, {4, 4}, {4, 3}, {4, 4}, {4, 3}}}, {EdgeStyle -> {
      GrayLevel[0]}, VertexLabels -> {None}}], $CellContext`coords$$ = {{-1., 
  1.0106430996148606`*^-15}, {6.049014748177263*^-16, -1.}, {
  1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 
  1.}}, $CellContext`edges$$ = {
   TwoWayRule[1, 1], 
   TwoWayRule[1, 1], 
   TwoWayRule[1, 2], 
   TwoWayRule[1, 2], 
   TwoWayRule[2, 2], 
   TwoWayRule[2, 2], 
   TwoWayRule[2, 1], 
   TwoWayRule[2, 1], 
   TwoWayRule[3, 3], 
   TwoWayRule[3, 4], 
   TwoWayRule[3, 3], 
   TwoWayRule[3, 4], 
   TwoWayRule[4, 4], 
   TwoWayRule[4, 3], 
   TwoWayRule[4, 4], 
   TwoWayRule[4, 3]}, $CellContext`current$$ = 1}, 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Current State\"\>",
       StripOnInput->False,
       FontSize->14,
       FontWeight->Bold]},
     {
      DynamicBox[ToBoxes[
        ArrayPlot[
         Partition[
          Part[$CellContext`states$$, $CellContext`current$$], 4], Mesh -> 
         True, ImageSize -> 200, PlotLabel -> 
         Row[{"State ", $CellContext`current$$, " of ", 
            Length[$CellContext`states$$]}]], StandardForm],
       ImageSizeCache->{125., {21., 24.}}]},
     {
      TemplateBox[{10},
       "Spacer1"]},
     {
      StyleBox["\<\"Apply Permutation\"\>",
       StripOnInput->False,
       FontSize->14,
       FontWeight->Bold]},
     {
      DynamicBox[ToBoxes[
        Row[
         Flatten[{
           MapThread[Button[#, 
             
             Module[{$CellContext`new$, $CellContext`pos$}, $CellContext`new$ = \
$CellContext`permuteState$$[
                 
                 Part[$CellContext`states$$, $CellContext`current$$], #2]; \
$CellContext`pos$ = FirstPosition[$CellContext`states$$, $CellContext`new$]; 
              If[$CellContext`pos$ =!= 
                Missing["NotFound"], $CellContext`current$$ = 
                First[$CellContext`pos$]]; Null], ImageSize -> 
             150]& , {$CellContext`permNames$$, $CellContext`perms$$}], {
            Button[
            "Random State", $CellContext`current$$ = RandomInteger[{1, 
                Length[$CellContext`states$$]}], ImageSize -> 150], 
            Button["Reset", $CellContext`current$$ = 1, ImageSize -> 150]}}], 
         1], StandardForm],
       ImageSizeCache->{604., {7., 12.}}]},
     {
      TemplateBox[{10},
       "Spacer1"]},
     {
      StyleBox["\<\"State Space Graph (click a state)\"\>",
       StripOnInput->False,
       FontSize->14,
       FontWeight->Bold]},
     {
      DynamicBox[ToBoxes[
        Graph[$CellContext`g0$$, VertexCoordinates -> $CellContext`coords$$, 
         VertexSize -> 0.04, VertexStyle -> Table[
           
           If[$CellContext`i === $CellContext`current$$, Red, 
            Gray], {$CellContext`i, 
            Length[$CellContext`states$$]}], 
         VertexShapeFunction -> (EventHandler[
           Inset[
            ArrayPlot[
             Partition[
              Part[$CellContext`states$$, #2], 4], Mesh -> True, ImageSize -> 
             30, PlotRangePadding -> 0], #], {
           "MouseClicked" :> ($CellContext`current$$ = #2)}]& ), ImageSize -> 
         600, PlotLabel -> Row[{"Vertices: ", 
            VertexCount[$CellContext`g0$$], "   Edges: ", 
            EdgeCount[$CellContext`g0$$]}]], StandardForm],
       ImageSizeCache->{375., {190., 193.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}],
   "Column"],
  DynamicModuleValues:>{{
    DownValues[$CellContext`permuteState$$] = {HoldPattern[
         $CellContext`permuteState$$[
          Pattern[$CellContext`s, 
           Blank[List]], 
          Pattern[$CellContext`p, 
           Blank[Cycles]]]] :> 
       Module[{$CellContext`permList = PermutationList[$CellContext`p, 
            Length[$CellContext`s]]}, 
         Part[$CellContext`s, $CellContext`permList]]}}}]], "Output",
 CellChangeTimes->{
  3.958973216407727*^9, 3.959040967026884*^9, 3.959041231265815*^9, {
   3.959041295801539*^9, 3.9590414249273787`*^9}, {3.95904145797069*^9, 
   3.959041473273399*^9}, {3.9590415151370373`*^9, 3.959041547581297*^9}, 
   3.959042782009444*^9, {3.959042830138344*^9, 3.959042867284692*^9}, {
   3.959042909914998*^9, 3.959042918747177*^9}},
 CellLabel->
  "Out[1379]=",ExpressionUUID->"524b874e-2f07-4010-adbe-b7a723373957"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The image displays an interactive \[OpenCurlyDoubleQuote]Spekkens Toy Model \
Explorer,\[CloseCurlyDoubleQuote] focusing on the transitions between a \
limited set of states. At the top, a \[OpenCurlyDoubleQuote]Current State\
\[CloseCurlyDoubleQuote] is shown as a 1\[Times]4 binary pattern (e.g., \
black-black-white-white). Below this, a row of buttons allows users to \
\[OpenCurlyDoubleQuote]Apply Permutation\[CloseCurlyDoubleQuote] (Identity, \
Swap Horizontally, Swap Vertically, Swap Diagonally), select a \
\[OpenCurlyDoubleQuote]Random State,\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]Reset\[CloseCurlyDoubleQuote] to the initial state. \
The lower section presents a graph representing the \
\[OpenCurlyDoubleQuote]State Space,\[CloseCurlyDoubleQuote] where each node \
is a 1\[Times]4 binary pattern, connected by lines indicating possible \
transitions. The current state is highlighted in red within this graph, and \
clicking any node in the graph updates the \[OpenCurlyDoubleQuote]Current \
State\[CloseCurlyDoubleQuote] display.

The Mathematica code initializes four states as 1\[Times]4 binary vectors and \
defines permNames and perms for four basic permutations. The permuteState \
function applies a given permutation to a state. The edges for the state \
space graph are then generated by checking all possible transitions between \
these four states using the defined permutations. A DynamicModule \
orchestrates the interactive elements. The \[OpenCurlyDoubleQuote]Current \
State\[CloseCurlyDoubleQuote] display updates dynamically based on the \
current state index. The permutation buttons, \[OpenCurlyDoubleQuote]Random \
State,\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]Reset\
\[CloseCurlyDoubleQuote] buttons all modify the current state by applying the \
respective operation and updating the current index. The state space graph, \
g0, visually represents these four states in a circular layout. The \
VertexShapeFunction allows each node to display its binary pattern and, \
crucially, an EventHandler on each node enables users to click on a state in \
the graph to set it as the current state, dynamically highlighting it in red. \
This interactive tool provides a clear and concise way to visualize basic \
state transitions within a simplified Spekkens-like model.\
\>", "Item",
 CellChangeTimes->{{3.793891724891276*^9, 3.793891806306624*^9}, {
   3.795737503964374*^9, 3.795737584805357*^9}, {3.795737632794353*^9, 
   3.795737653673546*^9}, {3.958573762821009*^9, 3.958573782462821*^9}, {
   3.958573868949756*^9, 3.958573894310577*^9}, {3.958606885729864*^9, 
   3.958607092174608*^9}, {3.9586072258570004`*^9, 3.958607262092358*^9}, {
   3.958607532255677*^9, 3.9586075361084538`*^9}, {3.958607697827297*^9, 
   3.958607698828539*^9}, {3.9586137064345617`*^9, 3.958613710638617*^9}, 
   3.958966867208213*^9, {3.959049855436631*^9, 
   3.95904985843718*^9}},ExpressionUUID->"1919d043-88a0-40a6-bbd5-\
0447f8749562"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permDisplay", "[", 
    RowBox[{"Cycles", "[", 
     RowBox[{"{", "}"}], "]"}], "]"}], ":=", "\"\<Identity\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permDisplay", "[", 
    RowBox[{"Cycles", "[", "cyc_List", "]"}], "]"}], ":=", 
   RowBox[{"StringJoin", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\"\<(\>\"", "<>", 
         RowBox[{"StringRiffle", "[", 
          RowBox[{
           RowBox[{"ToString", "/@", "#"}], ",", "\"\<\>\""}], "]"}], "<>", 
         "\"\<)\>\""}], ")"}], "&"}], "/@", "cyc"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permuteState", "[", 
    RowBox[{"state_List", ",", "c_Cycles"}], "]"}], ":=", 
   RowBox[{"state", "[", 
    RowBox[{"[", 
     RowBox[{"PermutationList", "[", 
      RowBox[{"c", ",", "4"}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edgeList", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"perm", "=", 
            RowBox[{"SpekkensPermutations", "[", 
             RowBox[{"[", "p", "]"}], "]"}]}], ",", 
           RowBox[{"from", "=", "i"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"to", "=", 
           RowBox[{
            RowBox[{"FirstPosition", "[", 
             RowBox[{"SpekkensStates", ",", 
              RowBox[{"permuteState", "[", 
               RowBox[{
                RowBox[{"SpekkensStates", "[", 
                 RowBox[{"[", "from", "]"}], "]"}], ",", "perm"}], "]"}]}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
          RowBox[{"{", 
           RowBox[{"from", ",", "to", ",", "perm"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "SpekkensStates", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", 
         RowBox[{"Length", "[", "SpekkensPermutations", "]"}]}], "}"}]}], 
      "]"}], ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"graphEdges", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#1", ",", "#2", ",", 
       RowBox[{"permDisplay", "[", "#3", "]"}]}], "}"}], "&"}], "@@@", 
    "edgeList"}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"currentState", "=", "1"}], ",", 
     RowBox[{"highlightPath", "=", 
      RowBox[{"{", "}"}]}]}], "}"}], ",", 
   RowBox[{"Column", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Dynamic", "[", 
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "SpekkensStates", "]"}], "]"}], ",", 
         RowBox[{"DirectedEdge", "@@@", "graphEdges"}], ",", 
         RowBox[{"EdgeLabels", "->", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"DirectedEdge", "[", 
             RowBox[{"u_", ",", "v_", ",", "lbl_"}], "]"}], ":>", "lbl"}], 
           ")"}]}], ",", 
         RowBox[{"EdgeLabelStyle", "->", 
          RowBox[{"Directive", "[", 
           RowBox[{"Red", ",", "Bold", ",", "12"}], "]"}]}], ",", 
         RowBox[{"GraphHighlight", "->", "highlightPath"}], ",", 
         RowBox[{"GraphHighlightStyle", "->", 
          RowBox[{"Directive", "[", 
           RowBox[{"Thick", ",", "Blue", ",", "Dashed"}], "]"}]}], ",", 
         RowBox[{"VertexStyle", "->", 
          RowBox[{"(", 
           RowBox[{"i_", ":>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "===", "currentState"}], ",", "Yellow", ",", 
              "White"}], "]"}]}], ")"}]}], ",", 
         RowBox[{"VertexShapeFunction", "->", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"ArrayPlot", "[", 
                 RowBox[{
                  RowBox[{"Partition", "[", 
                   RowBox[{
                    RowBox[{"SpekkensStates", "[", 
                    RowBox[{"[", "#2", "]"}], "]"}], ",", "2"}], "]"}], ",", 
                  RowBox[{"Mesh", "->", "True"}], ",", 
                  RowBox[{"ImageSize", "->", "60"}], ",", 
                  RowBox[{"Frame", "->", "True"}], ",", 
                  RowBox[{"FrameTicks", "->", "None"}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"highlightPath", ",", 
                   RowBox[{"currentState", "->", "#2"}]}], "]"}], ";", "\n", 
                 RowBox[{"currentState", "=", "#2"}]}], ",", 
                RowBox[{"Appearance", "->", "\"\<Palette\>\""}]}], "]"}], ",",
               "#1"}], "]"}], "&"}], ")"}]}], ",", 
         RowBox[{"GraphLayout", "->", "\"\<SpringElectricalEmbedding\>\""}], 
         ",", 
         RowBox[{"ImageSize", "->", "700"}]}], "]"}], "]"}], ",", 
      RowBox[{"Dynamic", "@", 
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ArrayPlot", "[", 
           RowBox[{
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"SpekkensStates", "[", 
               RowBox[{"[", "currentState", "]"}], "]"}], ",", "2"}], "]"}], 
            ",", 
            RowBox[{"Mesh", "->", "True"}], ",", 
            RowBox[{"Frame", "->", "True"}], ",", 
            RowBox[{"ImageSize", "->", "200"}], ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"\"\<Current State: \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"SpekkensStates", "[", 
                  RowBox[{"[", "currentState", "]"}], "]"}], "]"}]}], ",", 
               "Bold", ",", "14"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"Panel", "[", 
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<Possible Transformations:\>\"", ",", "Bold", ",", "12"}], 
               "]"}], ",", 
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"perm", "=", "p"}], ",", 
                    RowBox[{"newIdx", "=", 
                    RowBox[{
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{"SpekkensStates", ",", 
                    RowBox[{"permuteState", "[", 
                    RowBox[{
                    RowBox[{"SpekkensStates", "[", 
                    RowBox[{"[", "currentState", "]"}], "]"}], ",", "p"}], 
                    "]"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Apply \>\"", ",", 
                    RowBox[{"permDisplay", "[", "perm", "]"}], ",", 
                    "\"\< \[RightArrow] State \>\"", ",", "newIdx"}], "}"}], 
                    "]"}], ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"highlightPath", ",", 
                    RowBox[{"currentState", "->", "newIdx"}]}], "]"}], ";", 
                    "\n", 
                    RowBox[{"currentState", "=", "newIdx"}], ";"}], ")"}], 
                    ",", 
                    RowBox[{"ImageSize", "->", "250"}]}], "]"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"p", ",", "SpekkensPermutations"}], "}"}]}], "]"}], 
               "]"}]}], "}"}], "]"}], "]"}]}], "}"}], "]"}]}]}], "}"}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.959041823634146*^9, 3.959041823635583*^9}, {
  3.959049868707961*^9, 3.959049873895024*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"c10d2c10-aac5-4f64-a26e-393e41ab1efc"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3cuvLMmdH/YLe2PAG6+9onb8E7y8XnpLwTstSMFjkYAxBkYCBAMD9FBL
AsMNB8ONPaJMgCCbD7F7BA43mjscSfQMKAgwX9Pd8+DAksgmm495e3mU90R3
dJzIrKzMrKyMR34+KFzUrcqTVSczI+Kbv8iq8/f+4f/+of/1v3r27Nk//m+G
fz70kX/6P/7Kr3zk//j7/93wn//5l//xx/7RL//S//I//fI/+aV/9Eu/8j/8
w/96ePC//2+fPfvfhjsv7z8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAV7148eT+s2cPr7zyZIHhv8ODw+3583cXHv5NfypdT1x4vJ50bcOqLq0H
ALjFMMheGoXDQB9G4c2GNcfhO7xWliU4g/QYi/EvPerCsRGOt/hsWHK8nnBk
Zgun0gXiKwIAO7prhgxjd1x5miEnK1F0KY1wk/XD7EhLD5tx+MwWSOuNUZpI
AwcbAOxrMkOmMS8bneenBbOnZgJqFi/pWDqnnBYY072fHlfps+EQytaTGh+l
MVWmj6frAQBul8W8rEw0rg5l5Z2HhycLp/Wl8fKxDpk+NX6hh6lZbxqVFZzT
Y+PSGUQ4KtLrHkPCHP9IrDfGQyVGysnapiMKAPaSZsh4Fdnw32w2cPxUOks4
/qmHqVnLNENm648/9bDTdZhUYjK8zWTI7OiKS06uZ3w9ZDzGZubHAYDbpRky
q/6l5cHsqfS/WSEo/W9W5Ex/KhvTx9OXhvs+rMqQWYB8GE1/TxYSs9OWUIRM
7z+4/hYA9rYqQw7/hlta/NkxQ07mVZq2PENeujR3MkOmK4wHTDwys9uDDAkA
e5vJkOlsYFwsvaV1yGhbhkx/0ER2TxZmyHiSEqah40dswvEQ64qTB088csJi
4RZXmF6n4cQEAPaSxrzJr+JJv2EvLRtmI3i0OUOm108a67sxWXLMHoxX26a3
9JiMGTK7cHf8HT6Rz9QAwF1NfqYmnbDOPlMTCjvPRp+pidIQGJccT1LHxDj+
iPcz38HSl8kMGa9UjP/NbulpyHg96cz15Ax1WCA7fwEA9pKN5nFoDlPV6Sh8
adSOETH9b5yIzIqZ6WuNP0AxfoQOvHLDn4kZ1xJvXw8A0BmfpunS5u/VyS5i
3Gs9AEA3Zi5sowPxE1hrf2o8Cb7LegCAPqQT6AAAAAAAAAAAAAAAAAAAAAAA
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
XHjy0tzxzzo3AYB7mPxencmLFbNbeHbm+3zGC8+/hGJRB8JVCmkVOuzZ+HHp
7M/KpM+mD87/NzySfsd49lR85NIlFgDAjcYXrT2MBu4wNGe3+N0+kxe/hSwR
hvjJL+3JXsKEI7vztZAAcFfjDLlQ9p2Qe60HbpRWwh1XAHAnm/9MTDYBvdd6
4EbpLDkAcD/pBWm3/NRe6wEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
HF7WmM9ZT9yZ1sM8E2nwVtsZnSO41YLO/vtWkiGBpWTI69gkeRbv5exg6Fyv
mHfO70xBMa8xFhkyRcfR9aQLIwvF9ZBPtyPoBWyeBq98PMuQwFIXz5AXHCmW
KoJi8ZlyEyP1rQh6q5IzDKW1j+ajBcAiQ6a8l2e//P3XKUPmUoC8lQzzOFp9
hhzdp6MHwOhxNfPokgYf9Pa3vi1DAotcOUN+6c230gBkoNnJrVg4Pzzsmk4X
3cq/bU6GzN9ok38yz9PtDJkud7z14T9Pg48JupEhH/+TH495t/bURIZs6Tyi
cXGDx90kQwJLXTlDxn4jjlBxBJQnG7JJOl10K6LRO68+E8Jbcef3P/XpcGd4
KC2TbvGh8G/4Oawt/vo3vvBG/OHjY++zn485M9z5+7/zu/GWniv8bv4s+UPx
55kxe/5NzOtPahHhCIk/x/vNZQNLyZC5Ik/GsfKArUGTZr6n5uXyISV+nLie
l/zoh+f73//y19Kd5S1f8/Djg7ynhnviuVWeG4c9mwwJLCVD3pL3urE4KU9S
Gv0oyFvfHVM8VHw+T5qYHt7yNcRLK/M7fbYPN6Sp6jlnxDIksJQMOUcsTrp4
ktLqr4kZfsHNJuvh8vJLHPOp6rtkSGCp2G/88tl/e9Zfhnz77bd//OMf/zKz
+rN9XDzJC6vfE51/6cyG6+GSbl3iuEjKkKGHDB1m6Db7y5BxjPvlSzIkrCZD
rjaaJ0XKywnBb0X2G853b7UeLuAH2fdYTVziuIgMCSwlQ24i5UnvxwH2UFyh
vUluzMmQwFIy5B6K3l6JElghLzbufWYqQwJLxc+VlSH3MyxRypPAqDRJnb8p
5pjuQoYEFgm9U8yQv3rWcYb8yU9+8qvMid+XXeRJ78qBixsWG9e9KeZBKUOG
HjJ0mB1nyF+9lL6zTFcMM8Xz3PBv7DdkyFN4Vw5c0InFxglXzpDhb49d8Snp
Hdoy/H4rGfJ03pUDHRt9R8zZL+qFi2fIuEzcRzpeGJXKj+keGbJOw3flpC8p
PvulAfflM9RNnBXKkJGCJIwaPfOVIesXo2Mcj0x8Q4WKD2ysZ4Z6PhkyF3fl
Aa8K6jcsPyYyZIuGE98KlXCk4prGPT6w8WAyZCHsyrBn292hsInpC29iv/Hr
Z9/5zne++93v9pch33nnnQ8++ODXmdYzZEGhsi7rvnFmuJK9n4LZhmXGOq9p
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
Qxru0/L5emhakSHjvo6JLu30/KF0sKX78+iYHgo/DzNkfnoy+lA6oobHMwDw
oKJmmFd1hmPucJq7GMRv/UpemBqNqRMToDRkeIoxLHHfeigee8UBkz80fT3k
MIiO/hYAsImY5UbvHAbC4cxj+vXR9czPnKO/TnOGlz3k5eUU8/JiY7zd+q11
GTJ/LhkSAPYw+k6Eibm/YrBOSw7XU1zPVqx2NEOabWzd0gwZp7njLa9DPp4h
Jy7MAAAeN1qimR52R6NgsZ5hgHzK3kqT36anwmnLrbdfPb2MecOH0just8qQ
aWFFSADYw5w65MQ7FEbrkMVH9+SrTbcUIKevwKQtRczL93I6a7j10MwM+dpv
32JTBNHhhRbpGR1XALC5OddD5jOPxcA9ej1k/ibcIjncegrXQ/Zh+Nk++Xur
872cP3QrNA7/m35lmCGHF9/m7+IBALYVx9lhwbC4M68jFdPT+cRlnJEcnbMu
eF/2dWxbBpxY2/CblRxXALCfIhZOKMbo4gtu5q9nuFoTjmwovdfbcQUA+1n9
NTHFt4FstR540OhbugCAzeXvRHjkt7ZaDwAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAcAWvv/707ruLH8qFZeKSw4Vv3Q8AbCWMtreG7DRGPyitIT4XF1Ts+vDz
a6+NHwyvXn30UPh3+Fv5PXEN6ZYWG73fgQcAm4tD9ugIG7JfGs1Xy4fv+Fwi
5dXEAynf70XwK5bMM2T4ebiedGTGQyj+SpTWnN9frAcAeNyuGbJYeV7YnKhE
0Zl4GDy9jIjDvZ8ezY+6fLG0nnBP+DmF0vzc5NY5i4MNALY1HM3T7PYwQ8aH
ignufHoxfyj8kOYli/E9fyj+yq110oF0FMUjKhUJi12cDsX8qMtLiLfOaGLs
LC66mFgPAPC4IkPm15LlV6alJYdXoOULFxehFWWlVBcqLlpLBahkNBXQomIi
OxpmyHRPceYS709nNKNvnxlmy+LkJV8PALCJPEPmobG4Mi0f2YvIl+fG/KFh
HTJlyBQj00PDlTx4HSaVGA1vRYYcHl1Fhkyly9H1DAuMKXPmc9ymswFgQ8MM
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
cDrn8tMM5ZzFG7gm6LgATicjTbBxOFestglLQyZQAGqgNx6KY7cAyekcikMm
sumD00M6oNpWiHOIWjf12KmRftimf/v1//Te//NXD65k841JB0K3H2+xxd26
hQEi3L7xhTfCLf780ZDx2c8/vfZa+Df+93Nf/Mo7rz4T7om373/q07//O78b
7gz/xh/CLS6W7smXDz/HZeJi8RZWkp6iePaJV5v+KIMat5zeIZ9o2y0pUVOn
zS+P/Ju/+Zv/cFXhb99wS1KtW5kwRa+Y4oZpbTpDhhW+/+WvhTgX/v34KZ4D
ZAx4H6e1d9/9OBC+/vrTq1cf/xyE/4ZbEhcL/6bl08K/XSyuMD5jeorwaHqu
6dB7948t/uQ8c4qdV2As2IpJQ2q27Re16zdo1DA1jWakiUy4QUYKSS/cnp5D
YAh7v60ffpIPYyaMy8Tl46Nx4bRYWk+8P/xW+jn9blQ8RbGe5YqsOJo58016
N3OufiWcy1jwuNAQNhydYT9bnenEfuN/XMy2/QY7GU01RZgZzYQHvb48H8af
U7GxqDEm8dF4T1qsyJnFwvmq4j3F/Y9lyKXuZs5hbhcvm5Ay5Nnd89G2GgvM
X9OWTea1Y7/x/12MDFmJRSmxuhySJqBzw+BXLB/nstOSo+vJZ8CLO0drmGmd
1chD5kS8lDDrkTLk2d3z0TYZCwRIWvT4x/7EfuP/vxgZ8kijM85tpMRpeVGx
uHOYIYexME1bD9eT7hytVRYZMp/+bkFRw5QwK5Ey5Nnd89EeHAt8agpNezBG
ypBsqAgGKRUMZ5zPfqVbGC0AjmbI0bpikSFHpbplWm1aPv781F6GnDaRME2O
70qGXMEH+NCH1edBsd/4n8/+/M///A/+4A/+j+6EP+p/viRDPm46Ll5iiJ+Z
IUcD5NONDBnfm5PEX0xrKG7Dt+F0bXRyXLDcSsqQcSz4oz/6o7N77u2FsSD8
acPhYN1YYP6anqy7PDL2G3/77N1n/6Yv4e966623/uIv/uJvMzLkIuLiuJkZ
MuW9+NE98fZ0I0Pmv55fPxkvg4y39M6a/K3ZF8iQowTLraQMGXrI0GGGbjP8
cHb/vbE4xv3tS+vGAgGS/qz42J/Yb/zds5QhX9tfeJb9tkMuPNEf//Ef/+Vf
/uXfZWTIW4p3uIiLU0bDW5Eh8w/8KT6WJ0XH4ef5jH0+ZPm8db+n5lxzguXZ
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
+sw8q9yutX///t69e7tr8sYbb5zLWq+99pomX3rppU2bNoXZZwAAUJAcPHjQ
SSPjx49funSpiQfGrl278ruD/2U6FiLRjRkzxnR70qRJq1atUlx0IuWWLVvU
YOvWrWYyzAx51j3myjvvvOMUVsHv5MmT6ka/fv3cM8+6kbytNXXqVNPYnFQ0
r//973/neS3nQ9K3b191KcwKAACAAmPcuHEmDHz88cfOzIULF5qZb775pibj
4+O/zpGZmWka7N2718wxAWbjxo16rTiqqPbhhx/qv7/++mvAmWq8e/fuTz75
RHO0NCMjw9lpYmKis83t27f/7W9/++ijj3bs2GGWavVBgwapS7169VKb/fv3
+xyI1jJheMiQIc7MxYsXmwNZsmRJUlLSokWLzOR7772njZjwoxU3bdq0YsUK
HbV2+uOPP4beY1ZWlia1wc8++2znzp3OvpwqpaenByz10KFDtbUZM2aYMk6e
PLnb/wonDeZhLe3OVOb1118/nXN52qw4ZcqUPK915MiRzz//3Mz5+eefz9pt
AABQkDi566WXXnLfIPfLL7+sWrVK+c3kEyctKNqZBnPnzjVzUlNTNWk28sIL
L5iZPXr0cBKIz0xnRePFF190trl27VonuLrbKElq6cCBA90zFyxY4H84f/rT
n8zS8ePHK8Fqd8ePH1e0Uyf1Yt26dT7pS2kwOzvbfd7VMBfxA+5R4dln/vTp
002V/v73v5s5P/30U8Bq62C7uU6BKptpcubMmW+88UaYaTBva6nPpuWyZcvc
PRkxYsS5rJWQkGAaKF6etdsAAKAgiYuLMzHg7bffDtEszAxp6PWECRMCzly/
fr2ZfP755xWBnPhqUpCTIWXUqFF/+ctfzOtevXop3ypY9uzZ08x55ZVXPvnk
E/9+Km260522/+qrr6rzCpCnc84ral9mkZKtNnLs2DHn0JQkJ0+erI6ZycTE
RP89njx58uWXX3Z66IRJpcfTYWTIvn37aumXX35pJlesWKGcphfTpk0LP0Pm
YS0duGm5evVqM2fYsGHdcgL8uayVnJxsGpj+AACAwuOHH34wMWDGjBkhmoWf
IbXBI0eOmIub/jOHDx9uop3ix2lXaFy3bp170kRQcU61paSknA7j7sTs7GxF
LJ/HQEw+NA8R+98P+eOPPy5dulSHY65rz5s3zzQwF6l99vjtt9+apeZEpVbp
37+/JgcMGKDJpKSkb3M4V/zdFEqdavgsylWGzMNaSq2mpSps5igAmznmUaO8
raX9msk1a9aE320AAFAA7Nmzx8SAiRMnhmjmnyE/+OAD/wzpvhHRf6YCnnnC
pUePHrNzOLf2ffjhh6ddGfLrr782qyxYsMDMOXz48Omwn3BRhPvnP/+piOVc
Rpf58+efDvJMjQLq6tWrp06dqijotDfnEn32+PHHHzuh1ByCc/U8dJDbvHnz
//3f/6mZ8q3/T+J4nSE3bdrkc9QmzD///PPnuJY5V6w5y5cvD7/nAADgQpeV
lWVywuDBg92npNLS0kaOHLlw4ULzXLaTIZ2rtOYXcnwypM/PxfjMVHbqFsT0
6dNPuzLk999/b1ZZsmRJ+BkyNjZ21apV6nNMTIyZo9T61VdfmS0o/5wOch7S
OW+piOvETpOWffaoIBrsEBITE0PU2Xki+7PPPvNf6nWG1LGYlqqPmWOeFVKs
Pce1dNTOXa/h9xwAABQAQ4YMMVHB/UN/ziXdcePGnXbd6Wd+IUcmTJjgnyHH
jx/v3rL/TJPWnn/++cM5lPoUSvXCPMjsZEjnyeiAGbJfv34BD2TDhg2msZo5
M1NSUszMl1566bQrQ5o7GE+fucdP6fHbb789fvz46tWrTQPzPLjPHj/55BOz
dOnSpeYQ1Gz//v16Efpv4ijZmmq8/PLL/r+E43WGVPdMy/fee0+TR48eNZ0x
b+65rOXc0jB27Njwew4AAAoA59GJnj17KhopiSmc9OjRw8xUsjqd81PbTpxQ
0Pruu++cBu4M6dzHaPjPdB6TUYTTdswvCClSmovXZ82Q5pFk9XPv3r3+zwIr
iDq9mjRp0vr16xUIX331VTPH3PCpyGom58yZExMTozhnVlHCVH+OHDni/Aqi
uWvRZ49axSwdNWqUupSYmNinTx9Njhw5UptStyfmUDb2r7NzL6VzmtQRMA2q
1NrUihUrgr1x4a916tQpcyVdB/Lvf//buUPACdJ5W0uHbP5RoPcxWCcBAEAB
5lyY9qFoYS5w//zzz04885GrDLljxw7nSWeHApj5WaGzZkj3b3Sbk2M+nPOE
PhRTzUV550cOjYSEBCdkqo27b+bpaf89vvXWW/7bN38XMvRz2dnZ2Wb7/n/Y
JWAaNE+IhzhVmKu13M+8G/369Tt27Ni5rKW33sx0/0gmAAAoVDZu3Oj8ak23
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
kACASDmfMyRPi58/eC8KBjIkACBSzs8MmZWV9fvf//6yyy7btGmTJrdu3fpi
jmCPkA8ZMkRLv/76a7vdjKSkpKTx48f3ypHfffG1fv36Sy+9tEmTJiTJCx0Z
EgAQKWFmyAYNGhQ5o1ixYjfeeOPzzz+vdT36pktMTCxXrpz2NX/+fE2uWLHC
7Do1NTVg+4oVK2rpu+++m6u9vP3220WCWLRoUQQOIzeU0MyudSyWd+0jOTn5
zRx79uwxc2bPnq2OVahQwbt3HHaQIQEAkRJmhrz55ptNwmnZsuUNN9xgXt90
003e/bbktm3b/vGPf5gTXx5lSAXF/5dDkdhs/9ZbbzVzVq9eHYFjCFtKSkrR
okXVgSlTptjcb0B79+411fj888/NHL0La9eu3b59e/52DOeODAkAiJRcZcju
3bubyWnTppmYoZhn5vzzn//s2LFjtWrVrr766k6dOm3cuNFZ99ChQ1p07bXX
XnTRRb/73e+mT58eziIFVEW7Tz/99KgrQ37xxRcKeL/5zW/atGmjVOM09smQ
CQkJzz//fL169S677DK1NBsJQWHJbH/r1q3u+dqI+jBo0KDevXtfeeWVL774
4tGc03S9evWqU6dO+fLl69evP2TIEOcKr2k/ePBgzbzmmmuqVKny7LPPpqWl
maVqNmrUqFtuuaVChQpaXRsxkXjp0qXXX3+96UCNGjXuvPNO0z4pKalv374N
GjSoXLnyfffd507Iy5cv144aNmw4b948FapWrVruvQ8YMOCqq66qWrXqm2++
uWvXLq2r+qirCxcudLYQ7Cg+/vhjzTSd0fty1113aeZHH32kLasnzuoh+ha6
CCHecVVj8eLFsbGxod8snAsyJAAgUvKWIffs2WNixsSJEzX5448/XnLJJe5r
wUoO27Ztc69bpkyZSy+91CxV8jnrIvc1ZSdDKhM6u9DrvXv3msbuDJmZmXn3
3Xc7l931X8Wk0LdKBsuQDz74oGYq7ZilzzzzjGbee++9Phe+FZbc7aOiotxL
FyxYYJYOHTrUzFHAMy/atWun+eq2T+nMUdxzzz0+O1J0N5uaOXOmOTpz4Npj
wL0XLVrUOcUqpUqV2r17t9lCsKOYM2eOe6biujOzZMmSZt3QfQtdhBDvuKKm
JtXgbB9G5B0ZEgAQKXnLkFOnTjUB4IsvvtDkH/7wBxN+NmzYsG7dusqVK2vy
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
XdVSk6+//no4S33OQ9arV8+djhTVtPTDDz/0749PhjRXVG+66SYl1WuvvVbZ
xp0h//Wvf1WoUEEzn3zyyd/97ndaNGTIELMoJiZGk5dffrk6pnXVT02+8cYb
Zmm/fv2uv/56zenevfvgwYM15+DBg07/t27dqlxaqlQp7VEvli5dqpnDhg1T
gy1btpgt6LNRtmzZRx55JMw6K2q2bdu2evXq2lGwNsqoSn3qpD5a/kv9+yzm
VKHeQQVCxUi9nj59erBDkNdee01tbrvtts6dO6smZcqU2bBhg8+OlEuTk5NP
5zzBdKFnSA1MDU8yJADApsKQIb/++muFBHOG0KQLZQ9nqUmJTZs2NRdPjx8/
3qhRo2LFiplL3qGX+mTIMWPGuAOY0lRUVJRW8e+SO0P++OOPWqtly5bmXF9W
VpaCrjtDKvReeeWVhw4dMpOdOnXS0l27dp0+kyGVXc2j1spFVatWVc50duRz
XdidIQ2fC8G7d+9WwBs0aJCZNDF45cqV4Vdb/VeHlQOD/QyU+mzugaxYsWLr
1q3Hjh0bGxvrbuB/LXvAgAEjR4409cnIyFCifuCBB4IdgravQ+jQoYNpHx8f
X61aNZ9/OLiRIQEAyIPCkCF79uypwGZSn7kxsn///s5SkxI//fRTZ87ChQud
OaGX+mRIxTzFSxPAzBk87Tpgl9wZUllRG3Ffb505c6aTIVV8vb7nnnu2njF1
6lTNMdejTYZ0ztdJly5ddIDHjh0zk7nNkNKkSRPnbKpi8OWXX+5/a+Lw4cMH
Bqej016UhM2JPn8pKSmTJk3SjsqUKaOWKtrQoUOdpcHuh9Rnddu2beZfBLVq
1Qp2CB988IEavPvuu07FmjdvrjlOTXyQIQEAyIMCnyGVHMyDtw+fYSazs7NN
A5MS9+7d66xiHml58803z7rU/5mae++91wQwEzUVeAL2yp0hFWjVMj4+3lm6
fv16J0Nu3ry5SCBmpyZDvv322866AwYM0By9ZWYyDxnyvffeM2dTTQx+4YUX
/PvfuXPndsGpCNpClSpVzMnSENTPadOmXXPNNWr/+eefB+zz6Zyf3zEXuB3l
y5cPdgimAv7cJ5/dyJAAAORBgc+QS5YsMRHi3jPMpHNq0aTEdevWOauYR2+0
4lmX+mfIuXPnmgCmKFW7du1gvXJnyAkTJmiVb7/91lm6ePFiJ0MmJCTo9VNP
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
Ym6X+tizZ8/48eOvuuqq6tWrB7vjzqGa33DDDZ07d85th92eeeaZOnXq+Pz6
YkS2fNa94LyizKyBqeGpQUqGBABYE36GTE1NVVLK1Q9Nn+emTp1as2bNpKSk
PCz1MX/+/LJlyzZs2DDgY8j+MjMz27Rp8/777+eiuy4zZsyIjo72/7nIc99y
mHvB+UPv+N69ezU8yZAAAJvCzJBZWVnKEnFxcQcOHMjvLhcQp06dytWv5bhp
xRA3HJ7LlsPfC84TGpIamBqeGqRkSACANeFkyKOux2piYmJSU1Pzu9cA/kOD
UUNSAzOcmyHJkACACAo/Q5pTkQkJCTt27CBGAvlOw1CDUUMyzJOQZEgAQASF
mSGPnrkrMi0tLT4+ftu2bfv379dksB+KAeARDToNPQ3A7du3azBqSIZzJyQZ
EgAQWeFnyKNnrmjrOyshIeHAgQM//PDDjh079EJfZJqj/x7OEQcgQsyYMkNM
LxQdNeg09DTuEhMTNRjDvIpNhgQARFauMuTRMxe19bWVmpqanJyclJSkb7fY
2Fh9o+3bt29Pjt0AIsSMKQ0uDbFDhw5puGnQadhqAGoYhnkJmwwJAIi43GZI
J0keyZGRkZGWlpaSkpKcQ1tLAhA5P+cw40u5UcNNg86MvlylRzIkACCy8pYh
3WEyC4BFeYiOZEgAQMSdY4YEcAEhQwIAIoUMCRQeZEgAQKSQIYHCgwwJAIgU
MiRQeJAhAQCRQoYECg8yJAAgUsiQQOFBhgQARAoZEig8yJAAgEghQwKFBxkS
ABApZEig8CBDAgAihQwJFB5kSABApJAhgcKDDAkAiBQyJFB4kCEBAJFyjhny
FwDWkSEBAPkubxnS/XWWleMIAI+ZsXYuYfIIGRIAECF5yJBOdDyX8yEA8swZ
gLkdg2RIAECk5CpDOmcdMzMz09PT4+Pjk5KS0tLSMjIy3GdLMgFEiHtkaaCl
pqZq0GnoaQBqqXNmkgwJALAs/AxpTnroa0tfZPoKS05OPnHixMmTJ/P7CIDC
RYNOQ09hUsNQg1FDMvwTkmRIAECkhJkhnevX6enpcXFxWiW/Ow4UdhqPGowa
kuFf1yZDAgAiJfwM6QTIzMzM/O41gP/QYHTHSDIkAMCacDKkcxU7MTExISEh
v7sM4L80JDUww7yiTYYEAERKmBnSnISMjY3lKrZx6tSpXbt2paSk5HkLixYt
mjt3bt7WXbhw4YIFC7zYcvh7wXlCQ1IDM8xTkWRIAECkhJkh1UZ5ac+ePcpO
+d3lXFu1alW5cuXWrFkTwW2mpqYWKVLklVdeydvqI0aMqFatWlJSkjNn5cqV
nTp1ev/9993Nvvvuu969ezdu3Lhly5bal3KCma/3onr16gH37rPlnTt39ujR
o379+g0aNOjTp0+w/LBixQrt/cknn3TPDLGXiNDH6bnnnrv99ttr1KjRrl27
+fPne7SjswqzSucnDUlVUm+WBikZEgBgTZgZMjMzMzk5OSYmJr/7mxfNmjVT
3ouOjo7gNs8lQy5btqxUqVLr1683k8eOHevbt2+RHN26dXOaKVWWLVv2kksu
eeihh3QIRYsWrVu3rvZrlm7cuFEbWbx4cYgt//jjj1WqVKlcufLjjz/eunXr
YsWK1alTx//caXx8fFRUlOmAz6KAe4mITZs2aaclS5Zs0aKFAuSVV16pvb/4
4otOA4Xn8uXLh//gv5KzDjMPPQmzSuczDUwNT3M5mwwJALAjVxly586d+d3f
XNu3b5/Sl/KJ4kpiYmKkNpvnDLl79+6KFSuOHj3aTB4/frx+/frqoeKTT4Zs
1KhR9erVFfDM5Pjx49XAfZF67NixSlk7duwIuGXR1sqUKfPTTz+ZyXHjxmkL
s2bN8umSIly5cuXuu+8+/wzpv5dI6dSpU/HixTdv3mwms7KymjdvrjmHDx82
c5599ln1J/wMefHFF7dp0yYPPQmzSuczDUwyJADAsvAzpFpu3749v/uba6NG
jVJC++ijjxQMFMPci+bNm6fcovDQpUuX2rVrt2zZ8p133glzqTtDxsXFqeXE
iROdpSrX3XffPWbMGP/+vPTSS1rRqWR6evoVV1yxevXqX3/91Z0hT5w4oVT5
17/+1Vnx22+/VYNXX33VmbNr1y7N6du3b8Aty6OPPvrMM884k3v27FGDP/7x
j+7+aBeaqeDUq1evgBnSZy/h0AcmOjpamTZEm1q1atWsWdM9R6VWN8xaDz74
YNWqVbXfZs2aPfbYY6ZBdnb2hAkTVOoaNWro7Zg5c6aZryCqmXqXo6Ki9GLy
5MnONmfMmKFgWadOnaeffvrLL78M2JNwqnSe05uu4UmGBADYFH6GTEpKcs7V
XEAU/+644w69qF+//q233upeNHr0aKWFq666qm7dul27dlVLTb7++uvhLPU5
D1mvXj13IlqwYIGWfvjhh/79qVatWpkyZZzTa8pFycnJeuGTIX2omVKQ+8Td
6Zwb4cqVK3f55ZcH3LK/JUuWaBfuJJyRkaEDbNiwodYKliF99hIOrdK2bdvq
1asfPHgwWJv27dsr9b3xxhv6gPkv7dev3/XXX6/+dO/effDgwWamOVWrd1Ol
UIzU6+nTp2v+1q1be/bsWapUqWuvvVYvli5datq/9tpranPbbbd17txZh6ni
bNiw4ayd96/S+U8DU8OTDAkAsKlgZ8ivv/5aecCcITSJQnnDWWpSYtOmTU3u
On78eKNGjYoVK2YueYde6pMhx4wZo8ktW7aYSSWoqKgoreLTH1VSzRo0aODf
1WAZsn///vfdd98VV1xx9dVXL1q0yGfpb3/7W62lKBhiy0ZCQsLVObKyspyZ
imolSpQw3Q6WId17CbZxf9qLErtyYLAfg4qJiTH3QFasWLF169Zjx46NjY11
N/C/lj1gwICRI0eap7rUmQoVKjzwwAPOUp9r2dq+MmqHDh1M+/j4eGVsn39E
+AtYpfMfGRIAYF/BzpA9e/ZURjKpz9wYqUjmLDUp8dNPP3XmLFy40JkTeqlP
hjx06JDi5aBBg07n/NZK2bJltWv//ijYaK1OnTr5LwqRIZWUlEgvuuiiPn36
OM/UGF26dNFaO3fuDLHl0zmJTgG4TJkyX331lTNT0bF48eLOYywhMqSzF5/5
w4cPHxjcE088obXq169vTrT6S0lJmTRpUpMmTdQxtVQBhw4d6iwNdj+kPrHb
tm0z/zqoVauWM98nQ37wwQdq8O677249o3nz5ppz7NixgJ0JVqULAhkSAGBf
Ac6QSgvmWeOHzzCT2dnZpoFJiXv37nVWUazSnDfffPOsS/2fqbn33nvN5WwT
NRVy/Lu0e/duLerRo4f/otDXshWlJk+erAZvvPGGe37v3r01c8eOHSG2fOLE
ifvuu08JzX1t/dSpU7///e+vvPJK568OhciQzl585nfu3LldcCqI1qpSpcqu
XbsCbtahD9i0adOuueYatf/888/NTP8MuXLlSnOB21G+fHlnqU+GHDBgQJFA
3Ceiz1qlCwUZEgBgXwHOkObGNrn3DDPpnFo0KXHdunXOKubRG6141qX+GXLu
3LnmcrbiU+3atQN2KSMjQ206dOjgv8gnQ6alpSmF6r9OA6WpqlWr3nTTTe61
OnbsqLVSUlKCbVmB+ZFHHilatKjPL0/qrVT7iy66qN4ZlStX1py6desOGTLE
ZyPOXgIeVEDab6tWraKior7//nv/pcePH1ehfB6TN+/XiBEjzKRPhkxOTi5e
vLi6N2fOnG3btsXHxzds2NBdDZ8MOXHiRK2+atWq/Wfs27dP/w14v2iwKl0o
yJAAAPsKcIaMjo4uW7as+y4+hZYSJUo4vyJoUmKvXr2cBubyq3k0OPRS/wyp
KlWqVKlPnz7lypUbNWpUsF6pTfPmzf3n+2RIc2164MCBTgO9TVr3/vvvd6+l
YFy+fHlzy1/ALffs2VPbmTJlis/8uLi4zv/LPDSkF++9955PY/dewtS/f3/1
55tvvgm4ND09XVXyOZZZs2apAwsXLjST3bt316Tz00afffZZkZznx82kAq3e
XHeGVF698847nckNGzao/ciRI505a9eunTp1qurs359gVbpQKFSTIQEAluUq
Q+qrKr/7Gy7FxZIlS7Zv395nvnKL0osJliYlli5dWnFFAaZr166abNeunWkZ
emnA34d86qmnzKnOffv2BeuYtqBw5Z9k/K9l33PPPUWLFlW8+fDDD6dPn37L
Lbdo0olYp3POnlWuXNk5+ea/5aFDh5r+jHaZPXt2wI6ZHOU/32cv4dAnqmbN
mqHvKtSRanc6xpkzZy5fvnzIkCEqtXKgc7Zzzpw5atC2bdtly5adzvmgFitW
7LrrrnsvR7169TTpzpD6J0OpUqWGDx9uguvJkydbtmypNn379lXRBg8erO0H
TO+5qtL5iQwJALAvV78PeQFlyEmTJikVOD/z4jAnu0xCMClx3rx55k68ChUq
dOjQwfmD4KGXpqWlaeawYcPcG1+7dq1mNmnSJETH1CW18c9XyjxFcn7Kxpmj
sj/99NMXXXSRSTg1atTw+XsxGzdu1HznYW3/Ld98883+NwT+7ne/C9ix5557
ThnVf77PXsJ01pOWOt6BAwcqz5teadeNGjVy/6Skcn6LFi00v1q1ambO/Pnz
L7nkEjUuXrx4v379mjZtWr9+faf9F198oeCqpS+88IKZow9tx44dnVUeffTR
gE/35KpK5ycNTH5jHABgWa7+Tk3E/1hJ/jIp0VwtjY2N9fkpntBLA1LGcwJq
CA8//HDjxo3D2eDpnDC2d+9e//Bz4sSJu+66y+cPOOZqy+EIuJcIys7O3r59
u2Kq82iPD338fJ6k1nuhD2SwDerD7HPHowp48ODBCNbkPKSBSYYEAFgWZoZU
m5SUlJiYGOeh5gLAnRJzu9THnj17xo8ff9VVV1WvXj3gHXduqvkNN9zQuXPn
3HbY7ZlnnqlTp47Pry9GZMtn3QvOK8rMGpganhqkZEgAgDXhZ8jU1FQlpVz9
0PR5burUqTVr1kxKSsrDUh/z588vW7Zsw4YNAz6G7C8zM7NNmzZ5fgp4xowZ
0dHR6enpEd9ymHvB+UPv+N69ezU8yZAAAJvCzJBZWVnKEnFxcQcOHMjvLhcQ
p06dytWv5bhpxRA3HJ7LlsPfC84TGpIamBqeGqRkSACANeFkyKOux2piYmJ8
/lQKgPyiwaghqYEZzs2QZEgAQASFnyHNqciEhIQdO3YQI4F8p2GowaghGeZJ
SDIkACCCwsyQR8/cFZmWlhYfH79t27b9+/dr8sSJE/l9BEDhokGnoacBuH37
dg1GDclw7oQkQwIAIiv8DHn0zBVtfWclJCQcOHDghx9+2LFjh17oi0xz9N/D
OeIARIgZU2aI6YWiowadhp7GXWJiogZjmFexyZAAgMjKVYY8euaitr62UlNT
k5OTk5KS9O0WGxurb7R9+/btybEbQISYMaXBpSF26NAhDTcNOg1bDUANwzAv
YZMhAQARl9sM6STJIzkyMjLS0tJSUlKSc2hrSQAi5+ccZnwpN2q4adCZ0Zer
9EiGBABEVt4ypDtMZgGwKA/RkQwJAIi4c8yQAC4gZEgAQKSQIYHCgwwJAIgU
MiRQeJAhAQCRQoYECg8yJAAgUsiQQOFBhgQARAoZEig8yJAAgEghQwKFBxkS
ABApZEig8CBDAgAihQwJFB5kSABApJAhgcKDDAkAiBQyJFB4kCEBAJFChgQK
DzIkACBSzjFD/gLAOjIkACDf5S1Dur/OsnIcAeAxM9bOJUweIUMCACIkDxnS
iY7ncj4EQJ45AzC3Y5AMCQCIlFxlSOesY2ZmZnp6enx8fFJSUlpaWkZGhvts
SSaACHGPLA201NRUDToNPQ1ALXXOTJIhAQCWhZ8hzUkPfW3pi0xfYcnJySdO
nDh58mR+HwFQuGjQaegpTGoYajBqSIZ/QpIMCQCIlDAzpHP9Oj09PS4uTqvk
d8eBwk7jUYNRQzL869pkSABApISfIZ0AmZmZmd+9BvAfGozuGEmGBABYE06G
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
Xbt2wC5lZGSojX8UPO2XIYcPH65Jhat6ZxQtWrRixYp169b9xz/+4azVsWNH
NUtJSQm2ZQXmRx55ROv6//LkN9984/PwS69evXyeynG2H/BwAtIeW7VqFRUV
9f333/svPX78uErk84C8eadGjBhhJn0yZHJycvHixXXgc+bM2bZtW3x8fMOG
DW+66SZndZ8MOXHiRK2+atWq/Wfs27dP/w14p2iI+lxAyJAAAPsKcIaMjo4u
W7as+14+RZcSJUo4vyVoUqKCk9PAXIQ1ySr0Uv8MqSpVqlSpT58+5cqVGzVq
VLBeqU3z5s395/tkyGXLlnX+X6VKlapWrZpe/Pjjj85aCsbly5c3N/4F3HLP
nj212SlTpvjvsUGDBsq67mSlNKX6uBOje/th6t+/v3ric03ckZ6ervrcf//9
7pmzZs1SJxcuXGgmu3fvrkllRTP52WefaXLcuHFmUt3T2+rOkMqrd955pzO5
YcMGtR85cqQzZ+3atVOnTjW3lfoIUZ8LiKI1GRIAYFmuMqS+qvK7v+FSXCxZ
sqT7R7kNpRdlGBMsTUosXbq0QotiTNeuXTXZrl070zL00oC/D/nUU0+ZU537
9u0L1jFtQRHLP88E+20fh//vQ2ZnZ1euXNk5Bee/5aFDh5r+jHaZPXu2WTpt
2jQtaty48cyZM5csWfLkk08W+d+fMffZfjj0WapZs2bouwp1jNrRPffco/0u
X758yJAhKrJyoJNd58yZowZt27ZVkD6d8xEtVqzYdddd916OevXqadKdIfWP
BQXs4cOHm+CqVNyyZUu16du3r3Lp4MGDtf2AuT10fS4gZEgAgH25+n3ICyhD
Tpo0SdnA+bEXhznlZXKCSYnz5s0z9+NVqFBBIc35g+Chl6alpWnmsGHD3Btf
u3atZjZp0iREx9QltfFPWUo+RXJ+0CbYipdddtmjjz7qnrNx40atsmjRomBb
vvnmm/1vC/zd7/5/e/fvkzgYgHE8xsnZVY2Dg3FwMubiooOziY4uLq4mxsl/
w83NkcH/wT/CRQg5VERORFpaJKCJ5J7jjaRBxBbfo1C/n+GCpb5y2Kd9pL9+
dWZQi5ubmzPT1eIODg5eX18/Gz+kLz+01P/0+PhYTd783ImJidXV1eBedTX8
zc1NTZ+dnTVTUqnU9PS0Zp6cnDw8PNzY2FheXu7Mf3FxoeKqZ4+OjswULa67
u7udb9H71vPsni/fn3GhYHKNcQDAkEW6T431W5bEy7REs8+0UCh0XYqn/7M9
nZ+fdwpqHzs7O2tra2EG7ENlb319vesGjoONrGXg4wenPce36O3tLZ1Oq6Zq
0eo5gxa8rjOp9VvQovjZgFqMu454VJu9u7v75vs8FhRMOiQAYMhCdkjN4zhO
NpvtnNScAMGWGPXZLrlc7uTkZGZmZn5+vudxd0F6z5eWlvb29qK+4KD9/f3F
xcWuazBaGbnP+BhBas4KpuKpkNIhAQBDE75Duq6rphTpctMj7vT0dGFhoVwu
D/Bsl1QqNTU1tbKy0vNk5I9qtdr29vbA5wKfnZ1tbW15nmd95C/Hx6jRb/z6
+lrxpEMCAIYpZIes1+tqFMViMZ/Px/2SE6LVakW6Zk6QvrHPYYffGTnM+Bgp
iqSCqXgqpHRIAMDQhOmQjcBpNdls1nXduF81gH8URkVSwQxzMCQdEgBgUfgO
aT6KLJVKmUyGGgnETjFUGBXJkB9C0iEBABaF7JCN96Miq9Xqw8PD1dXV7e2t
vgxeCgbAECh0ip4CmE6nFUZFMsyRkHRIAIBd4Ttk432PtrZZpVIpn89fXl5m
Mhk90IZMU/Tvn7YiAEtMpkzE9EDVUaFT9JS7x8dHhTHkXmw6JADArkgdsvG+
U1ubLdd1K5VKuVzW1q1QKGiLdnNzk2v7DcASkymFSxG7v79X3BQ6xVYBVAxD
7sKmQwIArIvaITtN8rnN9/1qteo4TqVNo5UB2PPUZvKl3qi4KXQmfZHaIx0S
AGDXYB0yWCbrAIZogOpIhwQAWPfNDglgjNAhAQC20CGBn4MOCQCwhQ4J/Bx0
SACALZVKZbCD8wGMHTokAMAWc4UQOiTwEyjs37yXOgAAhu/7nufRIYHEU8wV
dkU+7rUOACAJms2m67r1ej3u7RuA/0sxV9gV+bjXOgCAhHAcx/d9aiSQYAq4
Yq6wt1qtuFc5AICEeHl5cV2Xs7OBBFPAFXOFPe71DQAgUcxOLk7QBpJH6TYF
Ug/iXtMAABLIbGXMTm2aJJAA5lakCrX5CzHudQwAILHMTm3xPK9Wqz0DGFuK
sIJsEs0ubADAEDSbTXPs/ROAsWXOleMsbAAAAAAAAAAAAAAAAAAAAAAAevoL
PQKxag==
    "], {{0, 1421.}, {438., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{1082.7374999999997`, Automatic},
  ImageSizeRaw->{438., 1421.},
  PlotRange->{{0, 438.}, {0, 1421.}}]], "Output",
 CellChangeTimes->{{3.959041823839156*^9, 3.9590418378075037`*^9}, 
   3.959042782051211*^9, 3.959049863532093*^9, 3.959051124393807*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"3e70249b-0d2e-4a32-93ff-6e2dde3bb26d"]
}, Open  ]]
}, Open  ]],

Cell["\<\
The image displays a series of three snapshots of an interactive graph, each \
showing the \[OpenCurlyDoubleQuote]Spekkens Toy Model\[CloseCurlyDoubleQuote] \
in action, followed by a control panel. The graph itself features two main \
nodes, each represented by a 2\[Times]2 binary pattern (black and white \
squares). These two nodes are connected by multiple directed blue lines, each \
labeled with a permutation (e.g., \[OpenCurlyDoubleQuote](13)(24)\
\[CloseCurlyDoubleQuote]). Additionally, each node has a self-loop labeled \
\[OpenCurlyDoubleQuote]Identity.\[CloseCurlyDoubleQuote] Below the graph, a \
\[OpenCurlyDoubleQuote]Current State\[CloseCurlyDoubleQuote] is displayed as \
a larger 2\[Times]2 grid, along with a list of \
\[OpenCurlyDoubleQuote]Possible Transformations,\[CloseCurlyDoubleQuote] \
represented as buttons that describe applying a specific permutation and the \
resulting state change.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.9586136905647163`*^9, 3.9586137432194*^9}, 
   3.958966868792427*^9, {3.959049880418785*^9, 
   3.95904988110541*^9}},ExpressionUUID->"43f9b7cd-b06c-4abb-9daf-\
1084821c73f9"],

Cell["\<\
The Mathematica code defines the SpekkensStates (a set of six binary vectors) \
and SpekkensPermutations (the set of four allowed transformations). The \
permDisplay function is a utility for generating human-readable labels for \
these permutations. The permuteState function applies a given permutation to \
a state. The edgeList is then pre-calculated by iterating through all \
SpekkensStates and all SpekkensPermutations, determining the \
\[OpenCurlyDoubleQuote]from\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]to\[CloseCurlyDoubleQuote] states for each possible \
transformation, and storing the permutation itself as part of the edge.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.95861379351714*^9, 3.958613830099538*^9}, {
   3.958613866734705*^9, 3.9586138832850523`*^9}, 3.95896687263752*^9, {
   3.959049883855854*^9, 
   3.959049885051981*^9}},ExpressionUUID->"1a9b3080-b307-4965-976d-\
e00dea4ec404"],

Cell["\<\
The DynamicModule handles the interactive visualization. The main graph \
dynamically displays the nodes (represented by ArrayPlot of SpekkensStates) \
and the DirectedEdge connections with their permDisplay labels. The \
GraphHighlight feature is used to trace the path of transformations by \
highlighting the edges in blue as transformations are applied. Clicking on a \
node in the graph or on one of the \[OpenCurlyDoubleQuote]Possible \
Transformations\[CloseCurlyDoubleQuote] buttons below updates the \
currentState and appends the new transition to the highlightPath, visually \
showing the trajectory through the state space. The Current State display and \
the \[OpenCurlyDoubleQuote]Possible Transformations\[CloseCurlyDoubleQuote] \
section at the bottom dynamically update to reflect the currently selected \
state and the transformations applicable to it, making this a powerful tool \
for understanding the dynamics of the Spekkens toy model.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958613974788539*^9, 3.958613996732398*^9}, {
   3.9589668766286373`*^9, 3.958966878145465*^9}, 
   3.9590498872665663`*^9},ExpressionUUID->"aa198cac-891d-48d3-88fc-\
5cb11a9f4988"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"to16PointPermutation", "[", "perm_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p4", "=", 
        RowBox[{"PermutationList", "[", 
         RowBox[{"perm", ",", "4"}], "]"}]}], ",", 
       RowBox[{"sigma", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "16", "}"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "=", 
          RowBox[{
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}]}], "+", "j"}]}], ";", "\n", 
         RowBox[{"newPos", "=", 
          RowBox[{
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"p4", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "-", "1"}], ")"}]}], "+", 
           RowBox[{"p4", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], ";", "\n", 
         RowBox[{
          RowBox[{"sigma", "[", 
           RowBox[{"[", "newPos", "]"}], "]"}], "=", "k"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "4"}], "}"}]}], "]"}], ";", "\n", "sigma"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations16", "=", 
   RowBox[{"to16PointPermutation", "/@", "SpekkensPermutations"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"compositeStates", "=", 
   RowBox[{"Flatten", "/@", 
    RowBox[{"(", 
     RowBox[{"KroneckerProduct", "@@@", 
      RowBox[{"Tuples", "[", 
       RowBox[{"SpekkensStates", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"currentState", "=", "None"}], ",", 
     RowBox[{"graph", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"{", "}"}], "]"}]}], ",", 
     RowBox[{"depth", "=", "2"}]}], "}"}], ",", 
   RowBox[{"Column", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Click a state to explore permutations:\>\"", ",", "14", ",", 
        "Bold"}], "]"}], ",", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{"Function", "[", 
             RowBox[{"state", ",", 
              RowBox[{"EventHandler", "[", 
               RowBox[{
                RowBox[{"ArrayPlot", "[", 
                 RowBox[{
                  RowBox[{"Partition", "[", 
                   RowBox[{"state", ",", "4"}], "]"}], ",", 
                  RowBox[{"Mesh", "->", "True"}], ",", 
                  RowBox[{"ImageSize", "->", "50"}], ",", 
                  RowBox[{"PlotLabel", "->", 
                   RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"compositeStates", ",", "state"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<MouseClicked\>\"", ":>", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"currentState", "=", "state"}], ";", "\n", 
                    RowBox[{"graph", "=", 
                    RowBox[{"NestGraph", "[", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"s", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Permute", "[", 
                    RowBox[{"s", ",", "#"}], "]"}], "&"}], "/@", 
                    "SpekkensPermutations16"}]}], "]"}], ",", "state", ",", 
                    "depth", ",", 
                    RowBox[{"VertexShapeFunction", "->", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"#2", ",", "4"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "50"}]}], "]"}], ",", "#1"}], 
                    "]"}], "&"}], ")"}]}], ",", 
                    RowBox[{
                    "GraphLayout", "->", 
                    "\"\<SpringElectricalEmbedding\>\""}], ",", 
                    RowBox[{"ImageSize", "->", "600"}], ",", 
                    RowBox[{"PlotLabel", "->", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<State Permutation Graph\>\"", ",", "16", ",", 
                    "Bold"}], "]"}]}], ",", 
                    RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}]}], 
                    "]"}]}], ";"}], ")"}]}], "}"}]}], "]"}]}], "]"}], ",", 
            "compositeStates"}], "]"}], ",", "6"}], "]"}], ",", 
        RowBox[{"Frame", "->", "All"}]}], "]"}], ",", 
      RowBox[{"Dynamic", "[", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"currentState", "===", "None"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Select a state to visualize permutations\>\"", ",", "Italic", 
           ",", "Gray"}], "]"}], ",", "graph"}], "]"}], "]"}]}], "}"}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.95897329730936*^9, 3.958973297310871*^9}, {
  3.959049899483466*^9, 
  3.959049902508449*^9}},ExpressionUUID->"ad961355-19cc-4784-89d0-\
ca7871f171d0"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`currentState$$ = None, $CellContext`graph$$ = 
  Graph[{}, {}], $CellContext`depth$$ = 2}, 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Click a state to explore permutations:\"\>",
       StripOnInput->False,
       FontSize->14,
       FontWeight->Bold]},
     {
      TagBox[GridBox[{
         {
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 1}, {0, 0, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["1", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {1, 1, 0, 0, 1, 
                1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 0, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["2", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 1, 1, 0, 
                0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 0, 1}, {0, 1, 0, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["3", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {1, 0, 1, 0, 1, 
                0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 1, 0}, {1, 0, 1, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["4", TraditionalForm]],
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 1, 0, 1, 0, 
                1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 0, 1}, {1, 0, 0, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["5", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 1, 1, 0, 0, 
                1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 1, 0}, {0, 1, 1, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["6", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {1, 0, 0, 1, 1, 
                0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]]},
         {
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{0, 0, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["7", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 0, 
                0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1,
                  1, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 0, 0}, {1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["8", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 0, 
                0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
                  0, 1, 1}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{0, 1, 0, 1}, {0, 1, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["9", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 0, 
                0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
                  0, 1, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 0, 1, 0}, {1, 0, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["10", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 0, 
                0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0,
                  1, 0, 1}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 0, 0, 1}, {1, 0, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["11", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 0, 
                0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,
                  1, 1, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{0, 1, 1, 0}, {0, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["12", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 0, 
                0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1,
                  0, 0, 1}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]]},
         {
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["13", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {1, 1, 0, 0, 0, 
                0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 0, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["14", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 1, 1, 0, 
                0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {0, 1, 0, 1}, {1, 1, 1, 1}, {0, 1, 0, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["15", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {1, 0, 1, 0, 0, 
                0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 0, 1, 0}, {1, 1, 1, 1}, {1, 0, 1, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["16", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 1, 0, 1, 0, 
                0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 0, 0, 1}, {1, 1, 1, 1}, {1, 0, 0, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["17", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 1, 1, 0, 0, 
                0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {0, 1, 1, 0}, {1, 1, 1, 1}, {0, 1, 1, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["18", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {1, 0, 0, 1, 0, 
                0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]]},
         {
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{0, 0, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["19", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 1, 
                1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1,
                  1, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["20", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 0, 
                0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0,
                  0, 1, 1}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{0, 1, 0, 1}, {1, 1, 1, 1}, {0, 1, 0, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["21", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 1, 
                0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1,
                  0, 1, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 0, 1, 0}, {1, 1, 1, 1}, {1, 0, 1, 0}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["22", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 0, 
                1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,
                  1, 0, 1}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 0, 0, 1}, {1, 1, 1, 1}, {1, 0, 0, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["23", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 0, 
                1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
                  1, 1, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{0, 1, 1, 0}, {1, 1, 1, 1}, {0, 1, 1, 0}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["24", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 1, 
                0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1,
                  0, 0, 1}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]]},
         {
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {0, 0, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["25", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 1, 
                1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 0, 0}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["26", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 0, 
                0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {0, 1, 0, 1}, {0, 1, 0, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["27", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 1, 
                0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 0, 1, 0}, {1, 0, 1, 0}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["28", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 0, 
                1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["29", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 0, 
                1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 1, 1}, {0, 1, 1, 0}, {0, 1, 1, 0}, {1, 1, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["30", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 0, 1, 
                0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0,
                  0, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]]},
         {
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{0, 0, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["31", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {1, 1, 0, 0, 0, 
                0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                  1, 0, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 0, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["32", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 1, 1, 0, 
                0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  0, 1, 1}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{0, 1, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 0, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["33", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {1, 0, 1, 0, 0, 
                0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                  0, 1, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 0, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 1, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["34", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 1, 0, 1, 0, 
                0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  1, 0, 1}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{1, 0, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 0, 
              1}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["35", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {0, 1, 1, 0, 0, 
                0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  1, 1, 0}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]], 
          TagBox[
           
           GraphicsBox[{
             RasterBox[{{0, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 1, 
              0}}, {{0, 0}, {4, 4}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                 4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->50,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox["36", TraditionalForm]],
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`currentState$$ = {1, 0, 0, 1, 0, 
                0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1}; $CellContext`graph$$ = 
               NestGraph[
                 Function[$CellContext`s, 
                  Map[
                  Permute[$CellContext`s, #]& , \
$CellContext`SpekkensPermutations16]], {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                  0, 0, 1}, $CellContext`depth$$, 
                 VertexShapeFunction -> (Inset[
                   ArrayPlot[
                    Partition[#2, 4], Mesh -> True, ImageSize -> 50], #]& ), 
                 GraphLayout -> "SpringElectricalEmbedding", ImageSize -> 600,
                  PlotLabel -> Style["State Permutation Graph", 16, Bold], 
                 PerformanceGoal -> "Quality"]; Null), Method -> "Preemptive",
              PassEventsDown -> Automatic, PassEventsUp -> True}]]}
        },
        AutoDelete->False,
        GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]},
     {
      DynamicBox[ToBoxes[
        If[$CellContext`currentState$$ === None, 
         Style[
         "Select a state to visualize permutations", Italic, 
          Gray], $CellContext`graph$$], StandardForm],
       ImageSizeCache->{156., {1.42822265625, 6.0540771484375}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.958973297712096*^9, 3.95904184908423*^9, 
  3.959042782246097*^9},
 CellLabel->
  "Out[1200]=",ExpressionUUID->"d5801bf0-c79f-4fe4-ab39-ce8d2f5b444e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The image displays a comprehensive grid of 36 distinct 4\[Times]4 binary \
patterns, each labeled with a number from 1 to 36. These patterns represent \
composite states in the Spekkens toy model, formed by the Kronecker product \
of two simpler Spekkens states. The overall interface, hinted by the text \
\[OpenCurlyDoubleQuote]Click a state to visualize permutations,\
\[CloseCurlyDoubleQuote] suggests an interactive tool where selecting one of \
these patterns will trigger a visualization of how that specific state \
transforms under various permutations.

The accompanying Mathematica code initializes the fundamental SpekkensStates \
and SpekkensPermutations. A crucial function, to16PointPermutation, is \
defined to convert the standard 4-element SpekkensPermutations into \
equivalent 16-element permutations suitable for acting on the 4\[Times]4 \
composite states (which are flattened into 16-element vectors). The \
compositeStates are generated by taking the Kronecker product of all possible \
pairs of SpekkensStates, resulting in the 36 unique patterns seen in the \
image. The DynamicModule then creates the interactive grid of these \
compositeStates. When a user clicks on a state, the currentState variable is \
updated, and a graph is dynamically built using NestGraph. This graph shows \
the current state and all other states reachable from it by applying the \
SpekkensPermutations16 up to a specified depth, providing a visual \
representation of the state\[CloseCurlyQuote]s orbit under these \
transformations.\
\>", "Item",
 CellChangeTimes->{{3.793891724891276*^9, 3.793891806306624*^9}, {
   3.795737503964374*^9, 3.795737584805357*^9}, {3.795737632794353*^9, 
   3.795737653673546*^9}, {3.958573762821009*^9, 3.958573782462821*^9}, {
   3.958573868949756*^9, 3.958573894310577*^9}, {3.958606885729864*^9, 
   3.958607092174608*^9}, {3.9586072258570004`*^9, 3.958607262092358*^9}, {
   3.958607532255677*^9, 3.9586075361084538`*^9}, {3.958607697827297*^9, 
   3.958607698828539*^9}, {3.958614016077783*^9, 3.958614018659772*^9}, 
   3.958966879373742*^9, {3.959049911539525*^9, 
   3.959049913586389*^9}},ExpressionUUID->"6595a69a-dc77-4b83-a030-\
0a141a72c34f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AllPermutations", "=", 
   RowBox[{"PermutationCycles", "/@", 
    RowBox[{"Permutations", "[", 
     RowBox[{"Range", "[", "4", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"states", "=", "SpekkensStates"}], ",", 
     RowBox[{"currentSet", "=", "\"\<SpekkensPermutations\>\""}], ",", "g"}], 
    "}"}], ",", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Permutation Set: \>\"", ",", "14", ",", "Bold"}], 
            "]"}], ",", 
           RowBox[{"RadioButtonBar", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "currentSet", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "\"\<SpekkensPermutations\>\"", "->", 
                "\"\<Spekkens Permutations\>\""}], ",", 
               RowBox[{
               "\"\<AllPermutations\>\"", "->", 
                "\"\<All Permutations (Symmetric Group)\>\""}]}], "}"}], ",", 
             
             RowBox[{"Appearance", "->", "\"\<Vertical\>\""}]}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
       RowBox[{"Dynamic", "[", 
        RowBox[{
         RowBox[{"perms", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"currentSet", "===", "\"\<SpekkensPermutations\>\""}], 
            ",", "SpekkensPermutations", ",", "AllPermutations"}], "]"}]}], 
         ";", "\n", 
         RowBox[{"edges", "=", 
          RowBox[{"DeleteDuplicates", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "=", 
                RowBox[{"Permute", "[", 
                 RowBox[{
                  RowBox[{"states", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "p"}], "]"}]}], ";", 
               "\n", 
               RowBox[{"j", "=", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"states", ",", "v"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"j", "=!=", "i"}], ",", 
                 RowBox[{"UndirectedEdge", "[", 
                  RowBox[{"i", ",", "j"}], "]"}], ",", "Nothing"}], "]"}]}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "states", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"p", ",", "perms"}], "}"}]}], "]"}]}]}]}], ";", "\n", 
         RowBox[{"g", "=", 
          RowBox[{"Graph", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", "states", "]"}], "]"}], ",", "edges", ",", 
            RowBox[{"VertexLabels", "->", 
             RowBox[{"{", 
              RowBox[{"v_", ":>", 
               RowBox[{"Placed", "[", 
                RowBox[{
                 RowBox[{"Tooltip", "[", 
                  RowBox[{
                   RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"states", "[", 
                    RowBox[{"[", "v", "]"}], "]"}], ",", "2"}], "]"}], ",", 
                    RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "50"}], ",", 
                    RowBox[{"ColorRules", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "->", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9", ",", "0.36", ",", "0.36"}], "]"}]}], ",", 
                    RowBox[{"0", "->", "White"}]}], "}"}]}], ",", 
                    RowBox[{"FrameStyle", "->", 
                    RowBox[{"GrayLevel", "[", "0.7", "]"}]}], ",", 
                    RowBox[{"FrameTicks", "->", "None"}]}], "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"states", "[", 
                    RowBox[{"[", "v", "]"}], "]"}], ",", "14", ",", 
                    RowBox[{"FontFamily", "->", "\"\<Courier\>\""}]}], 
                    "]"}]}], "]"}], ",", "Center"}], "]"}]}], "}"}]}], ",", 
            RowBox[{"VertexSize", "->", "0.25"}], ",", 
            RowBox[{"VertexStyle", "->", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0.36", ",", "0.51", ",", "0.71"}], "]"}]}], ",", 
            RowBox[{"EdgeStyle", "->", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"RGBColor", "[", 
                RowBox[{"0.2", ",", "0.63", ",", "0.79"}], "]"}], ",", 
               RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
            RowBox[{
            "GraphLayout", "->", "\"\<SpringElectricalEmbedding\>\""}], ",", 
            RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
            RowBox[{"ImageSize", "->", 
             RowBox[{"{", 
              RowBox[{"600", ",", "400"}], "}"}]}], ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"\"\<State Transformations: \>\"", "<>", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                  "currentSet", "===", "\"\<SpekkensPermutations\>\""}], ",", 
                  "\"\<Spekkens Permutations (4)\>\"", ",", 
                  "\"\<All Permutations (24)\>\""}], "]"}], "<>", 
                "\"\<\\nConnected States: \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Length", "[", 
                  RowBox[{"ConnectedComponents", "[", "g", "]"}], "]"}], 
                 "]"}], "<>", "\"\< Component(s)\>\""}], ",", "16", ",", 
               "Bold", ",", 
               RowBox[{"FontFamily", "->", "\"\<Arial\>\""}]}], "]"}]}], ",", 
            
            RowBox[{"Background", "->", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0.98", ",", "0.98", ",", "0.98"}], "]"}]}]}], "]"}]}], 
         ";", "\n", "g"}], "]"}]}], "}"}], ",", 
     RowBox[{"Alignment", "->", "Center"}], ",", 
     RowBox[{"Spacings", "->", "1"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958973304733666*^9, 3.958973304734791*^9}, {
   3.959041858102496*^9, 3.959041869014464*^9}, 
   3.959049936360744*^9},ExpressionUUID->"9099dd31-32a7-4e00-a7bd-\
ed60eb3ff199"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`states$$ = {{1, 1, 0, 0}, {0, 0, 1, 1}, {1, 0,
   1, 0}, {0, 1, 0, 1}, {0, 1, 1, 0}, {1, 0, 0, 
  1}}, $CellContext`currentSet$$ = "SpekkensPermutations", $CellContext`g$$ = 
  Graph[{1, 2, 3, 4, 5, 6}, {
   Null, {{1, 2}, {2, 1}, {3, 4}, {4, 3}, {5, 6}, {6, 5}}}, {
   Background -> RGBColor[0.98, 0.98, 0.98], EdgeStyle -> {
      Directive[
       RGBColor[0.2, 0.63, 0.79], 
       Thickness[0.005]]}, GraphLayout -> "SpringElectricalEmbedding", 
    ImageSize -> {600, 400}, PerformanceGoal -> "Quality", PlotLabel -> 
    Style["State Transformations: Spekkens Permutations (4)\nConnected \
States: 3 Component(s)", 16, Bold, FontFamily -> "Arial"], 
    VertexLabels -> {2 -> Placed[
        Tooltip[
         Graphics[{
           
           Raster[{{{0.9, 0.36, 0.36}, {0.9, 0.36, 0.36}}, {{1., 1., 1.}, {1.,
             1., 1.}}}, {{0, 0}, {2, 2}}, {0, 1}], {{Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
            Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
          Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
          GrayLevel[0.7], FrameTicks -> {{None, None}, {None, None}}, 
          GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> 50, 
          LabelStyle -> {FontFamily -> "Times"}, 
          Method -> {
           "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}], 
         Style[{0, 0, 1, 1}, 14, FontFamily -> "Courier"]], Center], 4 -> 
      Placed[
        Tooltip[
         Graphics[{
           
           Raster[{{{1., 1., 1.}, {0.9, 0.36, 0.36}}, {{1., 1., 1.}, {0.9, 
            0.36, 0.36}}}, {{0, 0}, {2, 2}}, {0, 1}], {{Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
            Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
          Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
          GrayLevel[0.7], FrameTicks -> {{None, None}, {None, None}}, 
          GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> 50, 
          LabelStyle -> {FontFamily -> "Times"}, 
          Method -> {
           "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}], 
         Style[{0, 1, 0, 1}, 14, FontFamily -> "Courier"]], Center], 1 -> 
      Placed[
        Tooltip[
         Graphics[{
           
           Raster[{{{1., 1., 1.}, {1., 1., 1.}}, {{0.9, 0.36, 0.36}, {0.9, 
            0.36, 0.36}}}, {{0, 0}, {2, 2}}, {0, 1}], {{Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
            Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
          Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
          GrayLevel[0.7], FrameTicks -> {{None, None}, {None, None}}, 
          GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> 50, 
          LabelStyle -> {FontFamily -> "Times"}, 
          Method -> {
           "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}], 
         Style[{1, 1, 0, 0}, 14, FontFamily -> "Courier"]], Center], 5 -> 
      Placed[
        Tooltip[
         Graphics[{
           
           Raster[{{{0.9, 0.36, 0.36}, {1., 1., 1.}}, {{1., 1., 1.}, {0.9, 
            0.36, 0.36}}}, {{0, 0}, {2, 2}}, {0, 1}], {{Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
            Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
          Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
          GrayLevel[0.7], FrameTicks -> {{None, None}, {None, None}}, 
          GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> 50, 
          LabelStyle -> {FontFamily -> "Times"}, 
          Method -> {
           "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}], 
         Style[{0, 1, 1, 0}, 14, FontFamily -> "Courier"]], Center], 3 -> 
      Placed[
        Tooltip[
         Graphics[{
           
           Raster[{{{0.9, 0.36, 0.36}, {1., 1., 1.}}, {{0.9, 0.36, 0.36}, {1.,
             1., 1.}}}, {{0, 0}, {2, 2}}, {0, 1}], {{Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
            Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
          Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
          GrayLevel[0.7], FrameTicks -> {{None, None}, {None, None}}, 
          GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> 50, 
          LabelStyle -> {FontFamily -> "Times"}, 
          Method -> {
           "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}], 
         Style[{1, 0, 1, 0}, 14, FontFamily -> "Courier"]], Center], 6 -> 
      Placed[
        Tooltip[
         Graphics[{
           
           Raster[{{{1., 1., 1.}, {0.9, 0.36, 0.36}}, {{0.9, 0.36, 0.36}, {1.,
             1., 1.}}}, {{0, 0}, {2, 2}}, {0, 1}], {{Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 0}}}]}, {
            Antialiasing -> False, 
             GrayLevel[-1 + GoldenRatio], 
             Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 2}}}]}}}, 
          Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
          GrayLevel[0.7], FrameTicks -> {{None, None}, {None, None}}, 
          GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> 50, 
          LabelStyle -> {FontFamily -> "Times"}, 
          Method -> {
           "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}], 
         Style[{1, 0, 0, 1}, 14, FontFamily -> "Courier"]], Center]}, 
    VertexSize -> {0.25}, VertexStyle -> {
      RGBColor[0.36, 0.51, 0.71]}}]}, 
  TagBox[GridBox[{
     {
      TemplateBox[{
        StyleBox["\"Permutation Set: \"", 14, Bold, StripOnInput -> False], 
        InterpretationBox[
         StyleBox[
          GridBox[{{
             GridBox[{{
                RadioButtonBox[
                 Dynamic[$CellContext`currentSet$$], {"SpekkensPermutations"},
                  DefaultBaseStyle -> "RadioButtonBar", Appearance -> 
                 Inherited], 
                StyleBox[
                "\"Spekkens Permutations\"", "RadioButtonBarLabel", 
                 StripOnInput -> False]}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
              BaselinePosition -> {1, 2}]}, {
             GridBox[{{
                RadioButtonBox[
                 Dynamic[$CellContext`currentSet$$], {"AllPermutations"}, 
                 DefaultBaseStyle -> "RadioButtonBar", Appearance -> 
                 Inherited], 
                StyleBox[
                "\"All Permutations (Symmetric Group)\"", 
                 "RadioButtonBarLabel", StripOnInput -> False]}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
              BaselinePosition -> {1, 2}]}}, ColumnAlignments -> Left], 
          "Deploy"], 
         RadioButtonBar[
          Dynamic[$CellContext`currentSet$$], {
          "SpekkensPermutations" -> "Spekkens Permutations", 
           "AllPermutations" -> "All Permutations (Symmetric Group)"}, 
          Appearance -> "Vertical"]]},
       "Row",
       DisplayFunction->(PaneBox[
         RowBox[{
           TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
         Center]& ),
       InterpretationFunction->(RowBox[{"Row", "[", 
          RowBox[{
            RowBox[{"{", 
              TemplateSlotSequence[1, ","], "}"}], ",", 
            RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]},
     {
      DynamicBox[
       ToBoxes[$CellContext`perms = 
         If[$CellContext`currentSet$$ === 
           "SpekkensPermutations", $CellContext`SpekkensPermutations, \
$CellContext`AllPermutations]; $CellContext`edges = DeleteDuplicates[
           Flatten[
            Table[$CellContext`v = Permute[
                
                Part[$CellContext`states$$, $CellContext`i], $CellContext`p]; \
$CellContext`j = Part[
                Position[$CellContext`states$$, $CellContext`v], 1, 1]; 
             If[$CellContext`j =!= $CellContext`i, 
               UndirectedEdge[$CellContext`i, $CellContext`j], 
               Nothing], {$CellContext`i, 
              
              Length[$CellContext`states$$]}, {$CellContext`p, \
$CellContext`perms}]]]; $CellContext`g$$ = Graph[
           Range[
            Length[$CellContext`states$$]], $CellContext`edges, 
           VertexLabels -> {Pattern[$CellContext`v$, 
               Blank[]] :> Placed[
               Tooltip[
                ArrayPlot[
                 Partition[
                  Part[$CellContext`states$$, $CellContext`v$], 2], PlotTheme -> 
                 "Scientific", Mesh -> True, ImageSize -> 50, 
                 ColorRules -> {1 -> RGBColor[0.9, 0.36, 0.36], 0 -> White}, 
                 FrameStyle -> GrayLevel[0.7], FrameTicks -> None], 
                Style[
                 Part[$CellContext`states$$, $CellContext`v$], 14, FontFamily -> 
                 "Courier"]], Center]}, VertexSize -> 0.25, VertexStyle -> 
           RGBColor[0.36, 0.51, 0.71], EdgeStyle -> Directive[
             RGBColor[0.2, 0.63, 0.79], 
             Thickness[0.005]], GraphLayout -> "SpringElectricalEmbedding", 
           PerformanceGoal -> "Quality", ImageSize -> {600, 400}, PlotLabel -> 
           Style[((("State Transformations: " <> 
                If[$CellContext`currentSet$$ === "SpekkensPermutations", 
                  "Spekkens Permutations (4)", "All Permutations (24)"]) <> 
               "\nConnected States: ") <> ToString[
                Length[
                 ConnectedComponents[$CellContext`g$$]]]) <> " Component(s)", 
             16, Bold, FontFamily -> "Arial"], Background -> 
           RGBColor[0.98, 0.98, 0.98]]; $CellContext`g$$, StandardForm],
       ImageSizeCache->{375., {123., 127.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.9589733048994617`*^9, {3.9590418511339703`*^9, 3.959041869594412*^9}, 
   3.959042782285439*^9},
 CellLabel->
  "Out[1204]=",ExpressionUUID->"e2b483db-2cd6-4941-aa81-e07bd1fbd9b6"]
}, Open  ]]
}, Open  ]],

Cell["\<\
The image displays a graph illustrating \[OpenCurlyDoubleQuote]State \
Transformations\[CloseCurlyDoubleQuote] within the Spekkens toy model. It \
specifically shows three pairs of 2\[Times]2 binary patterns (states) \
connected by light blue arcs. Each state is depicted as a grid of red and \
white squares. The title indicates \[OpenCurlyDoubleQuote]Spekkens \
Permutations (4)\[CloseCurlyDoubleQuote] are in effect and that there are \
\[OpenCurlyDoubleQuote]3 Component(s)\[CloseCurlyDoubleQuote] of connected \
states. Above the graph, a radio button bar suggests the ability to switch \
between \[OpenCurlyDoubleQuote]Spekkens Permutations\[CloseCurlyDoubleQuote] \
and \[OpenCurlyDoubleQuote]All Permutations (Symmetric Group),\
\[CloseCurlyDoubleQuote] hinting at how the connectivity of the states can \
change based on the allowed transformations.\
\>", "Item",
 CellChangeTimes->{{3.793891724891276*^9, 3.793891806306624*^9}, {
   3.795737503964374*^9, 3.795737584805357*^9}, {3.795737632794353*^9, 
   3.795737653673546*^9}, {3.958573762821009*^9, 3.958573782462821*^9}, {
   3.958573868949756*^9, 3.958573894310577*^9}, {3.958606885729864*^9, 
   3.958607092174608*^9}, {3.9586072258570004`*^9, 3.958607262092358*^9}, {
   3.958607532255677*^9, 3.9586075361084538`*^9}, {3.958607697827297*^9, 
   3.958607698828539*^9}, {3.958614016077783*^9, 3.9586140188902483`*^9}, 
   3.958966880210552*^9, {3.959049928176837*^9, 
   3.959049929164633*^9}},ExpressionUUID->"782d3234-0a3c-4095-ad07-\
d6ff9fccbead"],

Cell["\<\
The Mathematica code defines the SpekkensStates as six distinct binary \
vectors and two sets of permutations: SpekkensPermutations (a restricted set \
of four transformations) and AllPermutations (the complete set of 24 \
permutations of four elements). The DynamicModule then creates the \
interactive visualization. A RadioButtonBar allows the user to dynamically \
choose between the \[OpenCurlyDoubleQuote]SpekkensPermutations\
\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]AllPermutations\
\[CloseCurlyDoubleQuote] sets. Based on this selection, the edges of the \
graph are constructed by checking which states can be transformed into one \
another by applying the chosen set of permutations. The graph g is then \
rendered with these calculated edges, where each vertex visually represents a \
SpekkensState as an ArrayPlot (red for 1s, white for 0s). The PlotLabel \
dynamically updates to show the selected permutation set and the number of \
connected components in the resulting graph, providing a clear illustration \
of how the choice of allowed transformations drastically affects the \
connectivity and structure of the state space within the Spekkens toy model.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958613974788539*^9, 3.958613996732398*^9}, {
   3.958614035577095*^9, 3.958614048637443*^9}, {3.958839301244407*^9, 
   3.958839361319743*^9}, 3.958966882594849*^9, 
   3.959049931935191*^9},ExpressionUUID->"c5b459d1-eb92-4819-b533-\
07a7a8d2673e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"adjacentStates", "[", "state_", "]"}], ":=", 
  RowBox[{
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Permute", "[", 
       RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", 
     "SpekkensPermutations"}], "]"}], "~", "Complement", "~", 
   RowBox[{"{", "state", "}"}]}]}], "\n", 
 RowBox[{
  RowBox[{"edgeList", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Sort", "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"state", ",", "neighbor"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"state", ",", "SpekkensStates"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"neighbor", ",", 
           RowBox[{"adjacentStates", "[", "state", "]"}]}], "}"}]}], "]"}], 
       ",", "1"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"vertexPositions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "0"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], "->", 
      RowBox[{"{", 
       RowBox[{"2", ",", "0"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], "->", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"selected", "=", "None"}], "}"}], ",", 
   RowBox[{
    RowBox[{"SpekkensStates", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";", 
    "\n", 
    RowBox[{"SpekkensPermutations", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cycles", "[", 
        RowBox[{"{", "}"}], "]"}], ",", 
       RowBox[{"Cycles", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Cycles", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Cycles", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], ";", 
    "\n", 
    RowBox[{
     RowBox[{"adjacentStates", "[", "state_", "]"}], ":=", 
     RowBox[{"Complement", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Permute", "[", 
           RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", 
         "SpekkensPermutations"}], "]"}], ",", 
       RowBox[{"{", "state", "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"edgeList", "=", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"Sort", "/@", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"state", ",", "nbr"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"state", ",", "SpekkensStates"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"nbr", ",", 
             RowBox[{"adjacentStates", "[", "state", "]"}]}], "}"}]}], "]"}], 
         ",", "1"}], "]"}]}], "]"}]}], ";", "\n", 
    RowBox[{"vertexPositions", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "0"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], "->", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], "->", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}]}]}], "}"}]}], ";", "\n", 
    RowBox[{"Graph", "[", 
     RowBox[{"SpekkensStates", ",", 
      RowBox[{"UndirectedEdge", "@@@", "edgeList"}], ",", 
      RowBox[{
       RowBox[{"VertexCoordinates", "->", "SpekkensStates"}], "/.", " ", 
       "vertexPositions"}], ",", 
      RowBox[{"VertexShapeFunction", ":>", 
       RowBox[{"(", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"coords", ",", "v"}], "}"}], ",", 
          RowBox[{"EventHandler", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"v", "===", "selected"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"EdgeForm", "[", 
                   RowBox[{"{", 
                    RowBox[{"Red", ",", 
                    RowBox[{"Thickness", "[", "0.015", "]"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{"FaceForm", "[", "LightYellow", "]"}]}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", 
              RowBox[{"Inset", "[", 
               RowBox[{
                RowBox[{"ArrayPlot", "[", 
                 RowBox[{
                  RowBox[{"Partition", "[", 
                   RowBox[{"v", ",", "2"}], "]"}], ",", 
                  RowBox[{"Mesh", "->", "All"}], ",", 
                  RowBox[{"ImageSize", "->", "35"}], ",", 
                  RowBox[{"Frame", "->", "False"}]}], "]"}], ",", "coords", 
                ",", "Center", ",", 
                RowBox[{"Scaled", "[", "0.1", "]"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"\"\<MouseClicked\>\"", ":>", 
             RowBox[{"(", 
              RowBox[{"selected", "=", "v"}], ")"}]}]}], "]"}]}], "]"}], 
        ")"}]}], ",", 
      RowBox[{"VertexSize", "->", "0.4"}], ",", 
      RowBox[{"EdgeStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"Gray", ",", 
         RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
      RowBox[{"GraphHighlightStyle", "->", "\"\<Thick\>\""}], ",", 
      RowBox[{"ImageSize", "->", "600"}], ",", 
      RowBox[{"PlotLabel", "->", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Spekkens Toy Model State Transitions\>\"", ",", "16", ",", 
         "Bold"}], "]"}]}], ",", 
      RowBox[{"Epilog", ":>", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"selected", "=!=", "None"}], ",", 
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"Framed", "[", 
            RowBox[{
             RowBox[{"Column", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Selected State\>\"", ",", "Bold", ",", "12"}], 
                 "]"}], ",", 
                RowBox[{"ArrayPlot", "[", 
                 RowBox[{
                  RowBox[{"Partition", "[", 
                   RowBox[{"selected", ",", "2"}], "]"}], ",", 
                  RowBox[{"Mesh", "->", "All"}], ",", 
                  RowBox[{"ImageSize", "->", "50"}]}], "]"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Reachable States\>\"", ",", "Bold", ",", "12"}],
                  "]"}], ",", 
                RowBox[{"Grid", "[", 
                 RowBox[{
                  RowBox[{"Partition", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"#", ",", "2"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "All"}], ",", 
                    RowBox[{"ImageSize", "->", "30"}]}], "]"}], "&"}], "/@", 
                    RowBox[{"adjacentStates", "[", "selected", "]"}]}], ",", 
                    "3"}], "]"}], ",", 
                  RowBox[{"Spacings", "->", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], "}"}], "]"}],
              ",", 
             RowBox[{"Alignment", "->", "Center"}], ",", 
             RowBox[{"Spacings", "->", "1"}]}], "]"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.85", ",", "0.8"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", "}"}]}], "  ", "]"}]}], ",", 
      RowBox[{"Background", "->", "LightBlue"}], ",", 
      RowBox[{"GraphStyle", "->", "\"\<BasicBlack\>\""}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9590419681945887`*^9, 3.959041974152304*^9}, {
  3.959049949225287*^9, 
  3.959049953518113*^9}},ExpressionUUID->"1bda8cca-f887-4926-a944-\
76b03d4df527"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`selected$$ = None}, 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{{1, 1, 0, 0}, {0, 0, 1, 1}, {1, 0, 1, 0}, {0, 1, 0, 1}, {0, 1, 1,
        0}, {1, 0, 0, 1}}, {Null, {{2, 1}, {4, 3}, {5, 6}}}, {
       Background -> RGBColor[0.87, 0.94, 1], EdgeStyle -> {
          Directive[
           GrayLevel[0.5], 
           Thickness[0.005]]}, Epilog -> 
        If[$CellContext`selected$10004002 =!= None, 
          Inset[
           Framed[
            Column[{
              Style["Selected State", Bold, 12], 
              ArrayPlot[
               Partition[$CellContext`selected$10004002, 2], Mesh -> All, 
               ImageSize -> 50], 
              Style["Reachable States", Bold, 12], 
              Grid[
               Partition[
                Map[ArrayPlot[
                  Partition[#, 2], Mesh -> All, ImageSize -> 30]& , 
                 $CellContext`adjacentStates[$CellContext`selected$10004002]],
                 3], Spacings -> {1, 1}]}], Alignment -> Center, Spacings -> 
            1], 
           Scaled[{0.85, 0.8}]], {}], GraphHighlightStyle -> {"Thick"}, 
        GraphStyle -> "BasicBlack", ImageSize -> 600, PlotLabel -> 
        Style["Spekkens Toy Model State Transitions", 16, Bold], 
        VertexCoordinates -> {{-2, 0}, {2, 0}, {0, 1}, {-1, 0}, {1, 0}, {
         0, -1}}, VertexShapeFunction -> {
          Function[{$CellContext`coords$, $CellContext`v$}, 
           EventHandler[{
             If[$CellContext`v$ === $CellContext`selected$10004002, {
               EdgeForm[{Red, 
                 Thickness[0.015]}], 
               FaceForm[LightYellow]}, {}], 
             Inset[
              ArrayPlot[
               Partition[$CellContext`v$, 2], Mesh -> All, ImageSize -> 35, 
               Frame -> False], $CellContext`coords$, Center, 
              Scaled[0.1]]}, 
            "MouseClicked" :> ($CellContext`selected$10004002 = \
$CellContext`v$)]]}, VertexSize -> {0.4}}]]}, 
     TagBox[GraphicsGroupBox[{
        {GrayLevel[0.5], Thickness[0.005], Opacity[0.7], 
         LineBox[{{
           DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
            "VertexID$2", Automatic, Center]}, {
           DynamicLocation["VertexID$3", Automatic, Center], DynamicLocation[
            "VertexID$4", Automatic, Center]}, {
           DynamicLocation["VertexID$5", Automatic, Center], DynamicLocation[
            "VertexID$6", Automatic, Center]}}]}, 
        {GrayLevel[0], 
         TagBox[
          TagBox[{{}, InsetBox[
             
             GraphicsBox[{
               RasterBox[{{1, 1}, {0, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {
                {GrayLevel[0.5], 
                 
                 StyleBox[
                  LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                   0}}}],
                  Antialiasing->False]}, 
                {GrayLevel[0.5], 
                 
                 StyleBox[
                  LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                   2}}}],
                  Antialiasing->False]}}},
              BaseStyle->{},
              Frame->False,
              FrameLabel->{None, None},
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.5]],
              FrameTicks->{{None, None}, {None, None}},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImageSize->35,
              
              Method->{
               "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultPlotStyle" -> Automatic}], {-2., 0.}, Center, Scaled[
             0.1]]},
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`selected$10004002 = {1, 1, 0, 0}),
              Method -> "Preemptive", PassEventsDown -> Automatic, 
             PassEventsUp -> True}]],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[
          TagBox[{{}, InsetBox[
             
             GraphicsBox[{
               RasterBox[{{0, 0}, {1, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {
                {GrayLevel[0.5], 
                 
                 StyleBox[
                  LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                   0}}}],
                  Antialiasing->False]}, 
                {GrayLevel[0.5], 
                 
                 StyleBox[
                  LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                   2}}}],
                  Antialiasing->False]}}},
              BaseStyle->{},
              Frame->False,
              FrameLabel->{None, None},
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.5]],
              FrameTicks->{{None, None}, {None, None}},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImageSize->35,
              
              Method->{
               "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultPlotStyle" -> Automatic}], {2., 0.}, Center, Scaled[
             0.1]]},
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`selected$10004002 = {0, 0, 1, 1}),
              Method -> "Preemptive", PassEventsDown -> Automatic, 
             PassEventsUp -> True}]],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[
          TagBox[{{}, InsetBox[
             
             GraphicsBox[{
               RasterBox[{{0, 1}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {
                {GrayLevel[0.5], 
                 
                 StyleBox[
                  LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                   0}}}],
                  Antialiasing->False]}, 
                {GrayLevel[0.5], 
                 
                 StyleBox[
                  LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                   2}}}],
                  Antialiasing->False]}}},
              BaseStyle->{},
              Frame->False,
              FrameLabel->{None, None},
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.5]],
              FrameTicks->{{None, None}, {None, None}},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImageSize->35,
              
              Method->{
               "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultPlotStyle" -> Automatic}], {0., 1.}, Center, Scaled[
             0.1]]},
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`selected$10004002 = {1, 0, 1, 0}),
              Method -> "Preemptive", PassEventsDown -> Automatic, 
             PassEventsUp -> True}]],
          "DynamicName",
          BoxID -> "VertexID$3"], 
         TagBox[
          TagBox[{{}, InsetBox[
             
             GraphicsBox[{
               RasterBox[{{1, 0}, {1, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {
                {GrayLevel[0.5], 
                 
                 StyleBox[
                  LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                   0}}}],
                  Antialiasing->False]}, 
                {GrayLevel[0.5], 
                 
                 StyleBox[
                  LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                   2}}}],
                  Antialiasing->False]}}},
              BaseStyle->{},
              Frame->False,
              FrameLabel->{None, None},
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.5]],
              FrameTicks->{{None, None}, {None, None}},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImageSize->35,
              
              Method->{
               "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultPlotStyle" -> Automatic}], {-1., 0.}, Center, Scaled[
             0.1]]},
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`selected$10004002 = {0, 1, 0, 1}),
              Method -> "Preemptive", PassEventsDown -> Automatic, 
             PassEventsUp -> True}]],
          "DynamicName",
          BoxID -> "VertexID$4"], 
         TagBox[
          TagBox[{{}, InsetBox[
             
             GraphicsBox[{
               RasterBox[{{0, 1}, {1, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {
                {GrayLevel[0.5], 
                 
                 StyleBox[
                  LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                   0}}}],
                  Antialiasing->False]}, 
                {GrayLevel[0.5], 
                 
                 StyleBox[
                  LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                   2}}}],
                  Antialiasing->False]}}},
              BaseStyle->{},
              Frame->False,
              FrameLabel->{None, None},
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.5]],
              FrameTicks->{{None, None}, {None, None}},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImageSize->35,
              
              Method->{
               "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultPlotStyle" -> Automatic}], {1., 0.}, Center, Scaled[
             0.1]]},
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`selected$10004002 = {0, 1, 1, 0}),
              Method -> "Preemptive", PassEventsDown -> Automatic, 
             PassEventsUp -> True}]],
          "DynamicName",
          BoxID -> "VertexID$5"], 
         TagBox[
          TagBox[{{}, InsetBox[
             
             GraphicsBox[{
               RasterBox[{{1, 0}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {
                {GrayLevel[0.5], 
                 
                 StyleBox[
                  LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                   0}}}],
                  Antialiasing->False]}, 
                {GrayLevel[0.5], 
                 
                 StyleBox[
                  LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                   2}}}],
                  Antialiasing->False]}}},
              BaseStyle->{},
              Frame->False,
              FrameLabel->{None, None},
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.5]],
              FrameTicks->{{None, None}, {None, None}},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImageSize->35,
              
              Method->{
               "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultPlotStyle" -> Automatic}], {0., -1.}, Center, Scaled[
             0.1]]},
           
           EventHandlerTag[{
            "MouseClicked" :> ($CellContext`selected$10004002 = {1, 0, 0, 1}),
              Method -> "Preemptive", PassEventsDown -> Automatic, 
             PassEventsUp -> True}]],
          "DynamicName",
          BoxID -> "VertexID$6"]}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   Background->RGBColor[0.87, 0.94, 1],
   BaseStyle->{},
   DefaultBaseStyle->"NetworkGraphics",
   Epilog->{},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->600,
   PlotLabel->FormBox[
     StyleBox[
     "\"Spekkens Toy Model State Transitions\"", 16, Bold, StripOnInput -> 
      False], TraditionalForm]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.9590419684499903`*^9, 3.959041974578448*^9}, 
   3.959042782459671*^9, 3.959049939921397*^9},
 CellLabel->
  "Out[3113]=",ExpressionUUID->"d8773bd5-c1de-4a1d-9b76-2130afd3de75"]
}, Open  ]],

Cell["\<\
The image displays a graph illustrating \[OpenCurlyDoubleQuote]Spekkens Toy \
Model State Transitions\[CloseCurlyDoubleQuote] against a light blue \
background. Six distinct 2\[Times]2 binary patterns (black and white \
squares), representing different states, are arranged in a cross-like \
formation. Some of these states are connected by gray lines, indicating \
possible transitions between them. The arrangement of the states appears \
fixed rather than dynamically generated, suggesting pre-defined positions for \
clarity in depicting relationships.

The Mathematica code defines SpekkensStates as the six binary vectors that \
form the nodes of the graph, and SpekkensPermutations as the set of allowed \
transformations. The adjacentStates function is crucial; it identifies all \
unique states that can be reached from a given state by applying any of the \
SpekkensPermutations, excluding the original state itself. The edgeList is \
then constructed by finding all such pairs of (state, neighbor), forming the \
connections in the graph. vertexPositions are explicitly defined, fixing the \
geometric layout of the states as seen in the image, ensuring a consistent \
and clear visual representation.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958614125691194*^9, 3.958614166022216*^9}, 
   3.958966886638661*^9, {3.959049963177496*^9, 
   3.9590499703760767`*^9}},ExpressionUUID->"1724c93a-59d2-410b-978f-\
d2cc442c6680"],

Cell["\<\
The DynamicModule makes the graph interactive. It re-defines the core \
elements for local scope and then constructs the Graph using the \
SpekkensStates as vertices and UndirectedEdge connections from the edgeList. \
Each vertex is rendered as an ArrayPlot of its corresponding binary pattern. \
An EventHandler attached to each vertex allows users to click on a state. \
When a state is selected, it is highlighted with a red border. An Epilog \
dynamically displays a detailed panel in the top-right corner if a state is \
selected. This panel shows the Selected State and a grid of all Reachable \
States from it, providing an intuitive way to explore the immediate \
neighborhood of any given Spekkens state within the defined transformation \
rules.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958614266321714*^9, 3.958614288388094*^9}, {
   3.958966889469333*^9, 3.958966890420884*^9}, 
   3.9590499711872387`*^9},ExpressionUUID->"51dcc412-da8f-4953-b47e-\
7d97780f2615"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"neighborTable", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "=", 
       RowBox[{"SpekkensStates", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"transformed", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Permute", "[", 
          RowBox[{"s", ",", "#"}], "]"}], "&"}], "/@", 
        "SpekkensPermutations"}]}], ";", "\n", 
      RowBox[{"jIndices", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"SpekkensStates", ",", "#"}], "]"}], "&"}], "/@", 
         "transformed"}], "]"}]}], ";", "\n", 
      RowBox[{"jIndices", "=", 
       RowBox[{"Union", "[", 
        RowBox[{"Flatten", "[", "jIndices", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"jIndices", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"jIndices", ",", "i"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "SpekkensStates", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"selected", "=", "Null"}], ",", 
     RowBox[{"neighbors", "=", 
      RowBox[{"{", "}"}]}]}], "}"}], ",", 
   RowBox[{"Panel", "[", 
    RowBox[{
     RowBox[{"Column", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Spekkens Toy Model: State Transformations\>\"", ",", "16", ",",
            "Bold", ",", 
           RowBox[{"FontFamily", "->", "\"\<Arial\>\""}]}], "]"}], ",", 
         RowBox[{"Spacer", "[", "10", "]"}], ",", 
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", "=", "i"}], "}"}], ",", 
                 RowBox[{"EventHandler", "[", 
                  RowBox[{
                   RowBox[{"Column", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"SpekkensStates", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "80"}], ",", 
                    RowBox[{"ColorRules", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "->", "White"}], ",", 
                    RowBox[{"0", "->", "Black"}]}], "}"}]}], ",", 
                    RowBox[{"FrameStyle", "->", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"selected", "===", "i"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Thick", ",", "Green"}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"neighbors", ",", "i"}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Thick", ",", "Yellow"}], "]"}], ",", "Gray"}], 
                    "]"}]}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"StringRiffle", "[", 
                    RowBox[{
                    RowBox[{"SpekkensStates", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "\"\< \>\""}], "]"}],
                     ",", "10", ",", 
                    RowBox[{"FontFamily", "->", "\"\<Courier\>\""}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"Alignment", "->", "Center"}], ",", 
                    RowBox[{"Spacings", "->", "0.5"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<MouseClicked\>\"", ":>", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"selected", "===", "i"}], ",", 
                    RowBox[{
                    RowBox[{"selected", "=", "Null"}], ";", 
                    RowBox[{"neighbors", "=", 
                    RowBox[{"{", "}"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"selected", "=", "i"}], ";", 
                    RowBox[{"neighbors", "=", 
                    RowBox[{"neighborTable", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}]}], "}"}]}], 
                  "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "[", "SpekkensStates", "]"}]}], "}"}]}], 
              "]"}], ",", "3"}], "]"}], ",", 
           RowBox[{"Alignment", "->", 
            RowBox[{"{", 
             RowBox[{"Center", ",", "Center"}], "}"}]}], ",", 
           RowBox[{"Spacings", "->", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Spacer", "[", "15", "]"}], ",", 
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Green", ",", 
                  RowBox[{"Rectangle", "[", "]"}]}], "}"}], ",", 
                RowBox[{"ImageSize", "->", "20"}]}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Selected state\>\"", ",", "12"}], "]"}], ",", 
              RowBox[{"Spacer", "[", "20", "]"}], ",", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Yellow", ",", 
                  RowBox[{"Rectangle", "[", "]"}]}], "}"}], ",", 
                RowBox[{"ImageSize", "->", "20"}]}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Neighbor state\>\"", ",", "12"}], "]"}]}], "}"}], 
            "}"}], ",", 
           RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
         RowBox[{"Spacer", "[", "5", "]"}], ",", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Reset Selection\>\"", ",", 
           RowBox[{
            RowBox[{"selected", "=", "Null"}], ";", 
            RowBox[{"neighbors", "=", 
             RowBox[{"{", "}"}]}]}], ",", 
           RowBox[{"ImageSize", "->", "Medium"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "->", "500"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958973388170288*^9, 3.95897338817181*^9}, {
  3.959049981018437*^9, 
  3.9590499821310663`*^9}},ExpressionUUID->"d5fd14c0-9fbb-4a22-96dd-\
e6baaf33f95c"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`selected$$ = 
  Null, $CellContext`neighbors$$ = {}}, 
  PanelBox[
   TagBox[GridBox[{
      {
       StyleBox["\<\"Spekkens Toy Model: State Transformations\"\>",
        StripOnInput->False,
        FontFamily->"Arial",
        FontSize->16,
        FontWeight->Bold]},
      {
       TemplateBox[{10},
        "Spacer1"]},
      {
       TagBox[GridBox[{
          {
           TagBox[
            TagBox[GridBox[{
               {
                
                GraphicsBox[{
                  RasterBox[SparseArray[
                   Automatic, {2, 2}, 0., {
                    1, {{0, 0, 2}, {{1}, {2}}}, {1., 1.}}], {{0, 0}, {2, 
                   2}}, {0, 1}], {
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                 Frame->True,
                 FrameLabel->{None, None},
                 FrameStyle->GrayLevel[0.5],
                 FrameTicks->{{None, None}, {None, None}},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->80,
                 
                 Method->{
                  "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic}]},
               {
                StyleBox["\<\"1 1 0 0\"\>",
                 StripOnInput->False,
                 FontFamily->"Courier",
                 FontSize->10]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Center}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}],
             "Column"],
            
            EventHandlerTag[{
             "MouseClicked" :> 
              If[$CellContext`selected$$ === 
                1, $CellContext`selected$$ = 
                 Null; $CellContext`neighbors$$ = {}, $CellContext`selected$$ = 
                 1; $CellContext`neighbors$$ = 
                 Part[$CellContext`neighborTable, 1]], Method -> "Preemptive",
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
           TagBox[
            TagBox[GridBox[{
               {
                
                GraphicsBox[{
                  RasterBox[SparseArray[
                   Automatic, {2, 2}, 0., {
                    1, {{0, 2, 2}, {{1}, {2}}}, {1., 1.}}], {{0, 0}, {2, 
                   2}}, {0, 1}], {
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                 Frame->True,
                 FrameLabel->{None, None},
                 FrameStyle->GrayLevel[0.5],
                 FrameTicks->{{None, None}, {None, None}},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->80,
                 
                 Method->{
                  "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic}]},
               {
                StyleBox["\<\"0 0 1 1\"\>",
                 StripOnInput->False,
                 FontFamily->"Courier",
                 FontSize->10]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Center}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}],
             "Column"],
            
            EventHandlerTag[{
             "MouseClicked" :> 
              If[$CellContext`selected$$ === 
                2, $CellContext`selected$$ = 
                 Null; $CellContext`neighbors$$ = {}, $CellContext`selected$$ = 
                 2; $CellContext`neighbors$$ = 
                 Part[$CellContext`neighborTable, 2]], Method -> "Preemptive",
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
           TagBox[
            TagBox[GridBox[{
               {
                
                GraphicsBox[{
                  RasterBox[SparseArray[
                   Automatic, {2, 2}, 0., {
                    1, {{0, 1, 2}, {{1}, {1}}}, {1., 1.}}], {{0, 0}, {2, 
                   2}}, {0, 1}], {
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                 Frame->True,
                 FrameLabel->{None, None},
                 FrameStyle->GrayLevel[0.5],
                 FrameTicks->{{None, None}, {None, None}},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->80,
                 
                 Method->{
                  "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic}]},
               {
                StyleBox["\<\"1 0 1 0\"\>",
                 StripOnInput->False,
                 FontFamily->"Courier",
                 FontSize->10]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Center}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}],
             "Column"],
            
            EventHandlerTag[{
             "MouseClicked" :> 
              If[$CellContext`selected$$ === 
                3, $CellContext`selected$$ = 
                 Null; $CellContext`neighbors$$ = {}, $CellContext`selected$$ = 
                 3; $CellContext`neighbors$$ = 
                 Part[$CellContext`neighborTable, 3]], Method -> "Preemptive",
               PassEventsDown -> Automatic, PassEventsUp -> True}]]},
          {
           TagBox[
            TagBox[GridBox[{
               {
                
                GraphicsBox[{
                  RasterBox[SparseArray[
                   Automatic, {2, 2}, 0., {
                    1, {{0, 1, 2}, {{2}, {2}}}, {1., 1.}}], {{0, 0}, {2, 
                   2}}, {0, 1}], {
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                 Frame->True,
                 FrameLabel->{None, None},
                 FrameStyle->GrayLevel[0.5],
                 FrameTicks->{{None, None}, {None, None}},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->80,
                 
                 Method->{
                  "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic}]},
               {
                StyleBox["\<\"0 1 0 1\"\>",
                 StripOnInput->False,
                 FontFamily->"Courier",
                 FontSize->10]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Center}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}],
             "Column"],
            
            EventHandlerTag[{
             "MouseClicked" :> 
              If[$CellContext`selected$$ === 
                4, $CellContext`selected$$ = 
                 Null; $CellContext`neighbors$$ = {}, $CellContext`selected$$ = 
                 4; $CellContext`neighbors$$ = 
                 Part[$CellContext`neighborTable, 4]], Method -> "Preemptive",
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
           TagBox[
            TagBox[GridBox[{
               {
                
                GraphicsBox[{
                  RasterBox[SparseArray[
                   Automatic, {2, 2}, 0., {
                    1, {{0, 1, 2}, {{1}, {2}}}, {1., 1.}}], {{0, 0}, {2, 
                   2}}, {0, 1}], {
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                 Frame->True,
                 FrameLabel->{None, None},
                 FrameStyle->GrayLevel[0.5],
                 FrameTicks->{{None, None}, {None, None}},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->80,
                 
                 Method->{
                  "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic}]},
               {
                StyleBox["\<\"0 1 1 0\"\>",
                 StripOnInput->False,
                 FontFamily->"Courier",
                 FontSize->10]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Center}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}],
             "Column"],
            
            EventHandlerTag[{
             "MouseClicked" :> 
              If[$CellContext`selected$$ === 
                5, $CellContext`selected$$ = 
                 Null; $CellContext`neighbors$$ = {}, $CellContext`selected$$ = 
                 5; $CellContext`neighbors$$ = 
                 Part[$CellContext`neighborTable, 5]], Method -> "Preemptive",
               PassEventsDown -> Automatic, PassEventsUp -> True}]], 
           TagBox[
            TagBox[GridBox[{
               {
                
                GraphicsBox[{
                  RasterBox[SparseArray[
                   Automatic, {2, 2}, 0., {
                    1, {{0, 1, 2}, {{2}, {1}}}, {1., 1.}}], {{0, 0}, {2, 
                   2}}, {0, 1}], {
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                   {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                 Frame->True,
                 FrameLabel->{None, None},
                 FrameStyle->GrayLevel[0.5],
                 FrameTicks->{{None, None}, {None, None}},
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->80,
                 
                 Method->{
                  "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic}]},
               {
                StyleBox["\<\"1 0 0 1\"\>",
                 StripOnInput->False,
                 FontFamily->"Courier",
                 FontSize->10]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Center}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}],
             "Column"],
            
            EventHandlerTag[{
             "MouseClicked" :> 
              If[$CellContext`selected$$ === 
                6, $CellContext`selected$$ = 
                 Null; $CellContext`neighbors$$ = {}, $CellContext`selected$$ = 
                 6; $CellContext`neighbors$$ = 
                 Part[$CellContext`neighborTable, 6]], Method -> "Preemptive",
               PassEventsDown -> Automatic, PassEventsUp -> True}]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
        "Grid"]},
      {
       TemplateBox[{15},
        "Spacer1"]},
      {
       TagBox[GridBox[{
          {
           GraphicsBox[
            {RGBColor[0, 1, 0], RectangleBox[{0, 0}]},
            ImageSize->20], 
           StyleBox["\<\"Selected state\"\>",
            StripOnInput->False,
            FontSize->12], 
           TemplateBox[{20},
            "Spacer1"], 
           GraphicsBox[
            {RGBColor[1, 1, 0], RectangleBox[{0, 0}]},
            ImageSize->20], 
           StyleBox["\<\"Neighbor state\"\>",
            StripOnInput->False,
            FontSize->12]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Center}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]},
      {
       TemplateBox[{5},
        "Spacer1"]},
      {
       ButtonBox["\<\"Reset Selection\"\>",
        Appearance->Automatic,
        BaseStyle->{FontFamily -> "Arial"},
        ButtonFunction:>($CellContext`selected$$ = 
          Null; $CellContext`neighbors$$ = {}),
        Evaluator->Automatic,
        FrameMargins->5,
        ImageSize->Medium,
        Method->"Preemptive"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   ImageSize->500],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.958973388437215*^9, 3.959041979958241*^9, 
  3.959042782495803*^9},
 CellLabel->
  "Out[1214]=",ExpressionUUID->"87fb9ab9-945b-4694-9804-dcba25a54f4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The image displays an interactive interface titled \
\[OpenCurlyDoubleQuote]Spekkens Toy Model: State Transformations.\
\[CloseCurlyDoubleQuote] It features a 2\[Times]3 grid of six 2\[Times]2 \
binary patterns (black and white squares), each representing a Spekkens state \
and labeled with its corresponding binary vector. Below the grid, a legend \
clarifies that green indicates a \[OpenCurlyDoubleQuote]Selected state\
\[CloseCurlyDoubleQuote] and yellow indicates a \
\[OpenCurlyDoubleQuote]Neighbor state.\[CloseCurlyDoubleQuote] A \
\[OpenCurlyDoubleQuote]Reset Selection\[CloseCurlyDoubleQuote] button is also \
present. This setup suggests that clicking on a state will highlight it in \
green and its directly reachable \[OpenCurlyDoubleQuote]neighbor\
\[CloseCurlyDoubleQuote] states in yellow, providing a visual exploration of \
state transformations.

The Mathematica code defines the SpekkensStates (the six binary patterns) and \
SpekkensPermutations (the set of four allowed transformations). Crucially, \
the neighborTable is pre-computed. For each Spekkens state, it determines all \
other unique states that can be reached by applying any of the \
SpekkensPermutations. This table stores the indices of these \
\[OpenCurlyDoubleQuote]neighbor\[CloseCurlyDoubleQuote] states. The \
DynamicModule then sets up the interactive display. The grid of ArrayPlot \
representations for each SpekkensState is made clickable using EventHandler. \
When a state is clicked, its FrameStyle changes to green (if selected) or \
yellow (if it\[CloseCurlyQuote]s a neighbor of the selected state). The \
selected variable tracks the currently clicked state, and the neighbors \
variable stores the indices of its adjacent states from the pre-computed \
neighborTable. This dynamic highlighting allows users to visually identify \
the immediate transformation possibilities for any given Spekkens state.\
\>", "Item",
 CellChangeTimes->{{3.793891724891276*^9, 3.793891806306624*^9}, {
   3.795737503964374*^9, 3.795737584805357*^9}, {3.795737632794353*^9, 
   3.795737653673546*^9}, {3.958573762821009*^9, 3.958573782462821*^9}, {
   3.958573868949756*^9, 3.958573894310577*^9}, {3.958606885729864*^9, 
   3.958607092174608*^9}, {3.9586072258570004`*^9, 3.958607262092358*^9}, {
   3.958607532255677*^9, 3.9586075361084538`*^9}, {3.958607697827297*^9, 
   3.958607698828539*^9}, {3.958614291748903*^9, 3.958614293110701*^9}, 
   3.958966891604986*^9, {3.959049985454404*^9, 
   3.959049986978902*^9}},ExpressionUUID->"cd27639c-6567-44cb-b9db-\
888803a32e23"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AllPermutations", "=", 
   RowBox[{"PermutationCycles", "/@", 
    RowBox[{"Permutations", "[", 
     RowBox[{"Range", "[", "4", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "permuteComposite", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permuteComposite", "[", 
    RowBox[{"state_", ",", "perm_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"flat", ",", "mat", ",", "p"}], "}"}], ",", 
     RowBox[{
      RowBox[{"flat", "=", 
       RowBox[{"Flatten", "[", "state", "]"}]}], ";", 
      RowBox[{"p", "=", 
       RowBox[{"PermutationList", "[", 
        RowBox[{"perm", ",", "4"}], "]"}]}], ";", 
      RowBox[{"mat", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{"flat", ",", "4"}], "]"}]}], ";", 
      RowBox[{"Flatten", "[", 
       RowBox[{"mat", "[", 
        RowBox[{"[", 
         RowBox[{"p", ",", "p"}], "]"}], "]"}], "]"}]}]}], "            ", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"states", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"KroneckerProduct", "@@@", 
     RowBox[{"Tuples", "[", 
      RowBox[{"SpekkensStates", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"vertexLabels", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"states", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"ArrayPlot", "[", 
         RowBox[{
          RowBox[{"Partition", "[", 
           RowBox[{"#", ",", "4"}], "]"}], ",", 
          RowBox[{"Mesh", "->", "True"}], ",", 
          RowBox[{"ImageSize", "->", "50"}]}], "]"}], "&"}], "/@", "states"}],
       ")"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"createGraph", "[", "perms_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"edges", ",", "graph"}], "}"}], ",", 
     RowBox[{
      RowBox[{"edges", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"new", "=", 
                 RowBox[{"permuteComposite", "[", 
                  RowBox[{"s", ",", "perm"}], "]"}]}], "}"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"new", "=!=", "s"}], ",", 
                 RowBox[{"DirectedEdge", "[", 
                  RowBox[{"s", ",", "new"}], "]"}], ",", "Nothing"}], "]"}]}],
               "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"s", ",", "states"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"perm", ",", "perms"}], "}"}]}], "]"}], ",", "1"}], 
          "]"}], ",", "Null"}], "]"}]}], ";", "\n", 
      RowBox[{"graph", "=", 
       RowBox[{"Graph", "[", "edges", "]"}]}], ";", "\n", 
      RowBox[{"Graph", "[", 
       RowBox[{"graph", ",", 
        RowBox[{"VertexLabels", "->", "vertexLabels"}], ",", 
        RowBox[{"VertexSize", "->", "0.9"}], ",", 
        RowBox[{"GraphLayout", "->", "\"\<SpringElectricalEmbedding\>\""}], 
        ",", 
        RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
        RowBox[{"ImageSize", "->", "800"}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"graph1", "=", 
   RowBox[{"createGraph", "[", "SpekkensPermutations", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"graph2", "=", 
   RowBox[{"createGraph", "[", "AllPermutations", "]"}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"selected", "=", "None"}], ",", "comp1", ",", "comp2"}], "}"}], 
   ",", 
   RowBox[{
    RowBox[{"comp1", "=", 
     RowBox[{"WeaklyConnectedComponents", "[", "graph1", "]"}]}], ";", "\n", 
    RowBox[{"comp2", "=", 
     RowBox[{"WeaklyConnectedComponents", "[", "graph2", "]"}]}], ";", "\n", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Button", "[", 
        RowBox[{"\"\<Clear Selection\>\"", ",", 
         RowBox[{"selected", "=", "None"}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "]"}], ",", 
       RowBox[{"TabView", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Spekkens Permutations\>\"", "->", 
            RowBox[{"Dynamic", "[", 
             RowBox[{"HighlightGraph", "[", 
              RowBox[{"graph1", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"selected", "===", "None"}], ",", 
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"First", "@", 
                  RowBox[{"Select", "[", 
                   RowBox[{"comp1", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"#", ",", "selected"}], "]"}], "&"}]}], "]"}]}]}],
                 "]"}], ",", 
               RowBox[{"GraphHighlightStyle", "->", "\"\<Thick\>\""}]}], 
              "]"}], "]"}]}], ",", 
           RowBox[{"\"\<All Permutations\>\"", "->", 
            RowBox[{"Dynamic", "[", 
             RowBox[{"HighlightGraph", "[", 
              RowBox[{"graph2", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"selected", "===", "None"}], ",", 
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"First", "@", 
                  RowBox[{"Select", "[", 
                   RowBox[{"comp2", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"#", ",", "selected"}], "]"}], "&"}]}], "]"}]}]}],
                 "]"}], ",", 
               RowBox[{"GraphHighlightStyle", "->", "\"\<Thick\>\""}]}], 
              "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"VertexShapeFunction", "->", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"EventHandler", "[", 
               RowBox[{
                RowBox[{"ArrayPlot", "[", 
                 RowBox[{
                  RowBox[{"Partition", "[", 
                   RowBox[{"#1", ",", "4"}], "]"}], ",", 
                  RowBox[{"Mesh", "->", "True"}], ",", 
                  RowBox[{"ImageSize", "->", "50"}], ",", 
                  RowBox[{"Background", "->", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"selected", "===", "#1"}], ",", "LightYellow", 
                    ",", "None"}], "]"}]}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<MouseClicked\>\"", ":>", 
                  RowBox[{"(", 
                   RowBox[{"selected", "=", "#1"}], ")"}]}], "}"}]}], "]"}], 
              ",", "#2"}], "]"}], "&"}], ")"}]}]}], "]"}]}], "}"}], "]"}]}], 
   ",", 
   RowBox[{"Alignment", "->", "Center"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.959042054156844*^9, 3.9590420541580443`*^9}, {
  3.959049995325088*^9, 3.959050001715076*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"23d501e2-49a8-46d2-ba12-c98dc406a936"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQm8V2W1/4+aQw6VdnMobVKbbLial1QC7rUTpqdLt+uQkJmI4g8xUFEs
Sq00KNHCPKKRqHhMcUpxwJvmVCEoTqmIoCKjzM60wSH+6571P8/d7OH5Pnvv
Z9z78349+uI7nO93f9dea+31eab9iWNH/PeQTXv06DFyK/rffw864z9OPXXQ
jw79AD04fPjIoScMP/64g4efdvwJx5+637Gb0ZP/fE+PHu+h//733xsAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANeWfKd4F3pA+O679
BQAAAAAA1IR4efn2229HUfTmm2++3s1rr732KrAOmV2cAjoddFLo1KTPFwAA
AAAAAOUQ/f/0Dyo+3+iCys633nrrbeANdDropPDZIWkQHy9w7UEAAAAAACA8
xEQgKjVfffVVKjKp4HR9UKA1dJroZNEpoxMnpg+5PigAAAAAABASLATWr1+/
Zs2aN998U+MnL1u2bPHixRo/UDtUSz///PNvd0+50QhZcsaMGRaKc/oiOnF0
+jA6AAAAAAAACsGdyTwi8PLLLxf984ceeujMM8/cb7/99tprr0GDBt15553x
V7/+9a9/9rOf1XewucyfP//EE0/8yle+svvuux922GHXXnut4h9OnDixR48e
Tz31lPZDOv744+mTb731Vu2fnIZOHI8OYGgAAAAAAACoQ6XjO++8s27duuXL
lxedGnTbbbdtuummm2yyyb777nvIIYdsv/329O+f/OQn4g12tMDDDz+8ww47
bL755m1tbSQEPvKRj1ARPnLkSJW/1aUF7rvvvm222ebGG28Uz0ydOpVssnDh
woqfrAKdODp9dBLpVEILAAAAAAAARXhQYO3atYsWLSr0h08++eS222678847
v/DCC/zM6tWrDzzwQCqtH3jgAX7GjhY46qijNttss0ceeYQf0m+hw6Bnli1b
1vJvdWmBu+++mz5HfTxCO3T66Ifz0ICrYwAAAAAAAGEhtEDRHuxhw4ZR9Xv/
/ffHn1ywYMHmm29+5JFH8sOEFli1atXPfvazAw44oGfPnqNHj37ppZfES+++
++5FF11ENfzuu+9+8MEHX3nlleKla665hp7/y1/+8u1vf/vjH//47NmzE0ey
55577rHHHvFnnnnmmQsuuECIFOKKK66gP//MZz4zePBg+ijxfFoL5L1zQ5fY
+elPf9q7d++99trr6KOPfvrpp/n5cePGfelLX6LPoR9Lhzpnzhx68sYbb6R/
r1y5Uvz5pEmTDjvssE996lNknz/84Q/iebIDvfOGG2740Y9+tM8++3zxi188
7bTT6Ixk2z0HOn3QAgAAAAAAoBCsBd5888358+cX+sP9999/1113TT/PW1zy
v+NaIIoiUgFbbLFF//79qdjeaqut9t57b7FUeeTIkVRL9+rViypwkgP0b6qc
+aUxY8bQw+23357q7QEDBqQ1y+GHH77JJpucf/759BWZhzp27Fj6hC9/+cvf
//736Zjpq2fOnMkvJbSA5J1Uae+3337vec97+vXrRyX9+973vm233fbxxx+n
lzo7O9vb2+kPv/a1rw0dOvTFF1+kJ3/961/TM/xvgkQEPaQ6/9hjjyWhQf++
8MIL+aXnnnuOHu68884kE4455hj6XnpIP0f9XGzoWjFBxoQWAAAAAAAA6rAW
eOONN+K96C2han+bbbY5+OCD5W+La4Ff/vKXVOLecMMN/PCWW26hh/QkPzzj
jDPOOeccrmNff/11KrMPOeQQfom1wMknn5z3LVRL8xqB7bbb7pvf/Oa4ceOW
LFkSf5WUwhFHHMEfvnz58t12222fffbhV+NaQP7OX/ziF/TO3/3ud/zw6aef
3nLLLb/3ve/xw/QcobgWmDt3Lv2b9AJ/Mhm8d+/em266KX3Fhm4tsNdee9FZ
YNt++MMfJt0ht20COn3059ACAAAAAABAnXJa4B//+AeVst/5znfkb4trgYMO
Oogq3qdj0MP+/fvH37969eo5c+bMmDGDXtpzzz35SdYCPPEmj5dffvniiy+m
AnurrbaiN9OxnX322fzS1VdfTc/8/ve/F9/LixrWrVu3YWMtIH/nf/7nf+64
447xL+W7APO/5Vqgs7OT/h2fcTR16lR65vbbb9/QrQVGjx4tXj3mmGNIlfD3
KgItAAAAAAAAilJOCxCf/vSnP//5z8vfE9cCPbIQ8/ynTZtGHxh/aZtttuGX
WAtwF3pLSKRQef+xj32M/oTq8w1dIw6ZX82z/eNaQP7OT3ziE1/96lfzvleu
BUaNGpX4CSRt6JmxY8du6NYCv/3tb8WrfCT0W1R+MgMtAAAAAAAAilJaCwwY
MGDzzTdfvXp14vmrrrqKu7s3bKwFevXqtd122y3cmKVLl9JLa9as2Wyzzeid
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
V8ymCiMXsLSW1yN5xSf3Piui3Pwnr3dQp2y7iYtX2Y60U49su1qnMZWcy/Gz
jbJVtt3LC8GaHXDxAj0XFxcnb7yZx2iLjk5PT33O3c/agWFqkSc0zW4wmEV+
qevv3s4fl3wqs6AdWGrH1Yd58e13l169nKdbSlB65dJrNcQlf1S2eTYeSDeT
nxUi234ZKNtanueIrLLN/N4B/7tHsuUVnrL1eZhfffM7UVM25b5++aT49aH+
5JStf+U4ZKsDR7aZN//4kH8aU6LEzz575FmfeWQ7ahddTzEhWxncK/HveIER
YnVFWel6wi9++Y2njnqWopOU/377f1398Gnq5HaroiXOi9PJs/FgxyCYLa+Q
H/T8H/55NS304b3bHyTd0CjfrC8R+Nf/yHp/SyxEtlev3UpaP1svzXO0u2hW
lJtBtp7+Xalcttnyiv50YbhsdeNBBuXa8u89IltxoOkcgUXZLh0QcFDnNKaS
bXfuqmz9H6NN2eIFpoiyzu7cje4IRES6rDbUkech06XQdPLX/3NpB0Isdg/B
Fcb58F9q04+QRjn5678NCU3DNn3x7XcpApREJD0dUFVc2oHINoUjkMqZytZz
WFlqepGtiBfZ7vilUq/rab391f94EJ5R9Pzqm9+JvhIp973bHxhaDpiiso3e
5WZl63lX7VI+mUe2u7889XzIL375zbOXbH2w0a2DiZCqE6cmZUm5Wx8g6YBb
oWzxAktEjFF9UJq2vqdrno1OfWgarWNGrITAKfSccX4r6fKKYWMtRSfPRp9+
LGKAUgtQ2+xEIHFlK2OrQ7arnaeUbAOtbs2yTbfNb7ivwJFUrP7opW0kER1B
b95rSyd2k022njnhtN1nu0Tcrhg+Q5VoPmR2GnMriZbjR2sBSy7e50fPtmb0
Abda2eIF3Ki4Tt54U8LU2cf3/SOVfFLkI/9KF9SW3s39tfeF5KO8Ymm0iiW3
rRsMHAzjfOCGZEec30H0vMIz9/OpWHf969LVpVcvazLvH6Z0aVL+lZ4LkPwk
1u9eFdrlRHpbZauz1tLH3LLtvs8Wtsp2uJaXQrY7Nhgs0cv2N//0vwNlK00Q
UbZd7LxiVrazAXb1h/bxfOkDmlqI+nYr9/XLJ6JcR8+0SzbZerajj2wjDrix
virPNOYO4i7H+8t2deZNVy6SylYG68plixfwRBpR5KC+QK2BRB71y8Mify5/
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
6dt0KtuI42OUlehNzMpWB9xszxDRvytfT2730tUczyaOa/GMghfwQeXz3u0P
Xr98cunVy29duf7jD386KvKHUuRvpcgndVhc/ealq0WmTGerRnYgeoBKl1dI
ZT589FhqSStzWp/6h1qfN26+f3bnbtIcI64RmO7/H3q31R/U//MdjyRVNAry
+eN8Veiot9rT3n7nhsrWs6f5y3bUGaYuPm4CnzSv0N6llfnKpddWw6BUpmcY
3Edq2Q73h2xq6K0/ekm2Uvb+Nrbpe5p7wFXZymekp6k7WP3m0WUOS4yWD6av
DomeymaQrVSUj2z9s5d9xPXvU9mOsiP3Px829NYfrSPFrGwtDrh4AQdqAURB
Kp97P//y+T/+i0+RT6q+dEB0dAzP3f6rHd5EXqF+SupE449nfcrHpGjkF18Q
d3yMOy0zewp4Oo74N/fqT5Su1bsqd5yXv1VjlTTOV0J4T3PL1nNea3oMJINs
o+cV2sd2h0FN2Nz1uYOIv6Z+1WpLRXTx/unZULaHtwbhPU19wVJP85+OHnWG
6U6h6MqNvsIVWJk+2csOUvv30SuGN0VpnwcTGeqAq7L1mca0Yg3wArPoxLXE
FmlcTwU5lCUdYymJ3ZdRzCaZKSYWYilXg9KmiOSozFgxKu5uqNmDhEu5n8+z
Odq0zjhfA3l6mqd/nL0reNQlUkwJxsorNAxqHwsPg6sOy5PoGwymzTTNKDwT
P/ezRZFt9PmQGsjT0yqXbazl+OiVKalvlJEi7uzibDPNLrz6N/rS36pzl/y/
nmnM6OAFRuiMorZ4oI6mqcW0P/gIf+mVxP1kRdLdhoF5RZ+bRazMKKlFomXZ
oSNYyig8m2z2DtK4cd7hUs2RradN3yU9y+wi0XDASirbwOMDOvYlCoMhqUWi
U9IjIz+7J8TTxSPbTaQbcKcDRKBs+4Pk6XbPBq5TJ81eQmSb7jTTULkO2fr8
6NmWFdmqBahqGjMFeIEhMgKefXz//sOgRvfRlP8jOULT1y8vLc9w7GifkHV7
VfTcbBrwpdW2/kapr0vSdNERmvztQP/fmV2qISrsaQ7Z3ly77y4i+/IKGf6k
MpOGQc3Ttj5YhlvORHGi2dm1PH/ZdgPlIlsHtfW0pSX4vul9zGA4+/p5hsqU
LrdPtqlP5q7KdscD9C4gUTXW5gjwAkqGdGLYGcQe+sRwx2vy+liR7c4f/7xC
Onm2ypQiP8h/yiL6BoMltI1mNw5tmqxQ8sT5TS61BursaT6yzZDW7vhBiYa/
pS4nbec/IOapsX6fhkO2m+ozg2zFEfzxT39OWi3RqbOnLTV6Edn6p6+PnzzV
s1F5KtMze+l/EXOyzVCfu6cx04EX6L5fDsigo2GRGC7x0PFUnu+1XHqbbQp8
dC2u6uq1W5krU5UlP3r1+fPU1ahRHDFq9asyx3kZoK3MNJbqafJD3T1t9r2W
U9+XZ46x8+72mrhmrk+fATGbf+9+2CgO2a66+MyTSyLbX33zu8R1E406e9p0
LW92vMtmBzyPDxSpTMlefPLYbNeljipqaVnW51B/hZNLecALnN25m19KfU+4
cfP9pQfzfz1itujUreUVRVxVX+RHOwJUzlqajeGzqYX7kUrFebdLrQHJters
aV97v8ImZ4dczSt0H0uRytQBcenBsvn3bnmNdapc9yNJ30C2S5TtaUtbXPxl
22V08XZlm/N1J0uBdHbAdTySjCliGDNXYz0LBI17AenM6RZwPXvCrB0YXk/n
eeIpZ14xq6kiI+A0QM1G+8x2yf2zRjFq6cNl47zDpRan2p42XMurULZL03TS
1sXD4Gxekb9+Vj9Qv2xr3i9UZ0+rWbbd8ux6DdnLkmyz+fetsl36cNkxRX50
cTvQshcoLqVeUKO8q18T32Srs01WKKMAVUN61tfnMEnLucGg27Jlaxijpg1d
vHMuudTiVNvTuu+vCN7U2TLLdvp4xdOzvjJHeUVVRmD0yaW8sQbZvnXlep12
oNqeJg26dTdLZjswza6rrcz8RsknTXLLtsj6+6g4Fq3y0KwXkGqvQUq9oIZ5
1z4pZdZgN3jOqirz+Q9dduZ3i289yq0xavSQxTOK2W5ZAzX3tH0L4kVk2z9q
JRlF39/6vCLbTuP+x21tPl26Hf6remRboR2otqd1ewfczC5+eJVxJT1tWpn5
LdLWHzddHq1qcqng9R1teoHaMopY3SB/XtG93GVXiZSGRR5p9ShxdKLc6VRb
nK/HDpQ9I7BU5JECe1oR2XaVpWd9f8s/ORal/muTrdiBKJUThUP2tFKyraqn
9ZWZP4kNuTWlH6ZrSwUlbyl16qdBL1Bn7hqrG2SerKgzPdMSnqRtIsqFTsT5
JWruaR998iCwp2W7GbinhmXx2ZLZxR9YtpW4+Gp7mkUXX21l5t/xHh4z61kR
GNVk/mnMrj0vcHFxkf+o+KZuEGgHckYnqcz8lzpuKuFJmidRMoo6Q1OUbhnI
4XtazpuBhRfffvfWlevFK22p5HTxR80onlcg2676nhY+QOScfKu8MnMmseF5
Ts2TS5mnMZXWvMDrl0+KN7S7vHLptcDfMZsdqG19bbZIi2eoivCMQtLdyuN8
wbzCRE87PT0N+R1zungJMsWry13yyDa8zg8/uRTI4XtaTtleevVy8epKWpme
hM+cHH5yaQdNeYHz8/P6MworO4VqttXDksFiRxkO6o/z8oRRqmsrVnqalZ1C
FW7enpYMc4xR1mJamFzaTSM9LY8dqHAf2mxlZvCe4emNicmlPMaqpx0vUPkE
zkhQgVvvUkcnqczr794uXlGe5eq1W+le7RclozARmorMMTbV0zLsFKp8m8Gw
pJ4ZC3deyNZBUz0t9eRb5avGo/5WuWytTC5lPjjQjhcwEbe11H+n0Pn5+aef
f1W8omrQVJTdQYZcauaFy9Z6WmoXb2KqVouEQWn9RPVw+N1Bo26Z3w401dNS
y9bEokBfmenumogi28p3Bw1L0mnMEY14AUNxW0uUpCvRZIUtNWlJNMcYZQho
zaX602ZPS5dXGJqqjVWZs7Szlqcl/1VgDfa0dLI1tCigJdGUURTZmtgonrom
Z2nECxiK230fCJ/JSRSdbE3VptNUlNDUpkv1pNmelsjFG5qqTdrZwqvXomxz
Lg202dMSnfdpM3uZEmUJvsHJJU9a8AK2thz35a0r18OXh6LbAaOV+TzBSZwo
kZ84v0TLPS2Fizc3u6gl+io5sk1Nsz0txXkfc64zVmWOiBISm51c8qEFL2Cx
AzyPF73jzjEarcznsf11lNBkNM5HcamrNN7TotsBc+mrlrhDYSzZmptdfJ5L
tp3ZnhblxjlkqyWubGMtwTc7ueRDC17g5I03i7dmwT4QNzrZ2m43KoE3wPfE
mv+xG+czzDHS0+K6+PovrV0qEsCj1EAs2Rp1qdmWBuz2tCiyjbtTyG5lRsxg
o1SpUdk+z7VN6PBewOgcjpZYMzmx7IBdZ60l1sJlrCStcZfqwHpPk4evaoOf
0W0bWmLJNlaSZle2GV4RQk+LuFPI6MJxxMrs4oVBJpfcHN4LWLlLdrZEnMmJ
kr6aNlbPI/nrWBmF6Tifer+B6cqJ1dO6eOPg4ydPJZgUr5Z9parNG6ZjYIZt
QvS0Dtm+LFG2CcUyVtYnlzJcLnp4L2DaDN57GO0uuFj3cRldZdMiD1/PPdIS
J03H+cDX4bmhp/VEcfHm7nUZFgmDgZUZcaqWySU3jfe0ntaum56tTHn+wBqI
tQTP5NIqh/cCdtdztURZ1ZWhUOKSyCowOp2enhavkMASstYW95oI63E+6Y3l
jfc0RWUrXS48qbC761hL4JGBiFu4mVxyY72nRdmMoUYgPI99/fJJ8QoJKYFb
SaOEPoXJpVXwApWXVy69tvt37yOSFk1lQ8ZE65X5PCyp0NqTmtT/CMwuGo/z
bg7Q03YnFVPZhs8xShgpXiGlOpvWnmhWU4tA2VrvmamPDDTb00ay1c4WKFvr
xipEtpqu9MoNlC2TS6sc2wuY3tupZesOz1FEGoamLmxm2/qOOy27D3X2gX0U
8HeHKeteIF1S0WBP65cApsrVD4TMMZo+zqll93bZPuKNouJuO2/dC4RMLq3S
Wk9zyFa7VogdsL6tRYo8f6Bsu5ehD9k+j3ed2hKH9wLW1eRzAMcRkUahqQuI
TsfI0Pbtuxt5qNka3uQLDtAz051DPEZP+9lnj9w9rZ/wd8i273UhScWLb7+z
nqHt3i479FBRZNva5NImGulp/rLtAlz8AYzV7rPYQ0kuVbW/LzjGgBLlbjoH
x/YCps95aXEc0lyNSNPZRWXfVLZUpsTJ4hUSWPYlFaMac9sunzB1AC+Q7n2I
x+5pm2Q77EK77YDp20i07EsqRrJdrfbVTUTHkG26U/8H6Glu2a5G/oiyNX25
hJZ9sh3VmI9s3SnNMbxA6uPDeIHKyyh0b0okpqmpFvmGnzz89fBPfMqxMzQH
02Du3wRLYeoAcR4v4N/TfFbulpKKYbn64dOtsu0OkaHtSCqm+yE3Rc5ZO3+8
ASUuB+tpu2WrjrIv8g3P/+Gft8q2zTFidhtzuGwPNqCkAC9QeRmGbk0st8al
YVLal7958PeSV4z+0FEO5gU8pxqkiGn677f/16g2Qpqg5TjvL9vD9LSyslUP
e5gMTU/u75btvlYYyfZIA0p0DtPTupfOMZZspZz89f/0l60mw0caI/yrS2Qr
4o014DY+jbkJvEDlZRq6+6mGTbqYVs7WtcumBNXPz0hcGk3y9Be0bo1Lwwo/
UpyPzlF7msp2k3KnlbNjy8GRMjQ30WV78+Uc71C2xxtQInLInrZDtlOF7pBt
O2PE6gJKuGwPOaDEBS9QeXGHbn9fMLubbjbZcFRma4Ja2oXoPy4sDQHtxPkd
HKOnOc4O+8t2tvNsPe9zyAzNwZLoosj22ANKIAfoae4BwtMXzHaeHZNv1itz
k2xndwfpn3vKdum8zzEGFLxACAfoA/7XPrg3N4ZHJ6lMSW+KV0hg8T+MvxSa
urUVT59aPUZSgRcI72luXzDbkRw9c6k+rScV/jc9OirHncItJRKjmrTeM5N6
gXZ62qqdn/1XWyffrFfmpjtF9828NSLb53iBMJq9Am52+mL2k/524BiH8f0z
tKWMYnaawiciDTmAF+BO0Sg9bcisnZ/95CYXf4DLCf29wFJGEUu21pMK6Qkv
vv3O8/fdSlM9rWfWF4RPvh3g0ip/L+Comd0Tbj2tTWPu49heoLP/jonwNzr1
vsChNc+vauflfY5tGH3M35pIDDmAS939Hhkf2ulpS6zKdtNOIesvMPV8z44j
QximaiHvWLEu26TvF+jsv3c48I1OQzs/+4FNfc/6+yg93zvsOfPW+KuR8AKB
4AV6ljIHf4lZz9B+8+L3Phmao0L+/fv3Q/lUlxvrcT7de4e7ZnpaCJt2Clnv
bD6V6c4oYsmWAcWNddeZWrbdlsk367L1NFaOClHl7ptwG2J9QMnQMw/vBc7P
z+8//LJ4O+4r9x5++d7tDzLUkudAKZX5i19+U7xadpdPP/9KfgX377h1M/Zu
Gonz+2ihp4Xjn99KGDEdBn0qc+uR6n1YTypSewHTPa022Z7duWu3MkW28vyr
vyOy9SkZJpcO7wVM7/BMes5rhM9khenKfO63ypYnNHX2XapPnN9NCz0tCp55
hekLXnxuI4k17b+Kddmmnlw6fE+Lgmd3NX18uDbZMrnk5vBewPQOz9R7O4f4
qFIeRjpk8WrZXVYztGyhqTN+fDjdJUKK9R2e2bxA5+fiTR/qXK3MbGt5nXGX
mmFy6dg9LSKesrV7fHj1QBmyrapnHt4LdJaXh1Kv547wyYTtVuaqs84Zmjrj
LjXpwWHlwD0tLp4G1u6etNXF8U1XNQaCbFc5cE+LyOFlu7qJNNsSfNfANGY4
LXgBo5Yw9TaMWVZHVaOV+dwjQ8sZmpQDx/lw7Pa0X/zym5xeoPPLKx4+emxx
v0GFsrXrUvNMLh21p0XH8000Fitz9YxPziV4RWT7mxe/L14z1fbMFryA0Zmc
PHM4Iw68NOB21vlDU3fcOB+LQ/a0RKy6eKObN+qUrUWXmm1y6ZA9LRGrTvaQ
2UvmJXjFqGyl/Oaf/jdeIBbmkq5sNwhNWR1eLWrK7ayLhKbuoHE+Isfraek4
5NIAso1Yck4uHaynpcOnD5urzFXXmX8tT2FyyUE7XsBWUpHz1PAU9xyjucpc
VVPO/cYjLLrUbFvXjtfTkuLj4m11NndllsooOoM1mXnHqbn6qVy2tsKg23UW
WctTzNXk84wutREv0L28VOqekbvgCi4KKAeLTm41FcwoOms1+Tz71jVb9VNq
drFn1dVKYDEUBh2VWTCj6Kx1y+clJpcO09MysDoG2apMh+sstZanPHtJ8Sra
VLK51Ha8gKHoXeSkwAj3UGvrVL5DTWUzCsWWS818nt3WfoyCs4vKkZYGHJVZ
NqNQbMk2/+TSMXpaHlb7s6HsRcJ1nUvwiqGafJ53cqkdL9AZudG9yPVBs7gn
K6xoSh5y6Sb8GjKKzk5NPi/kUq3Uj6On5WTVDpjYflzzWp5ipVs+Lze5dICe
lo1juHj3CksNsj3MNGZ0mvICwskbbxZvX3fJ/E4BB6upcv2XdNWfUShW4nwp
l1r/ma9KMgpldfKt/stsHZfW1rCWp5iwA2Unl0z3tMysdmzTlVnJzFtnRLbP
s08uteYFKu8Gw12dop3imao7Okll/uyzR8UrzVEq3x2kaCvXH+flCUtVUeWy
HfY06VSVy7ar3ns6thnUk1Eo9bvUspNLVnpaDaNtZ/zWDluyNT2NmYLWvEBX
saBGL4gX+UhkEAWVnb62u1Oo8t1B8gySsPWPUXNNPq/gDEvN9TPqaTXI1u5O
IfdsWPH9xr1stXFr7pbPK5BtZ6enSZuqcmuWbbXe6uzj+w7Z1rAEP5Jt5YeI
859hadALdC+PfYntKt7cwzJ7vEt6r0QnLaWyC6PHmtwZRcHQpNG+b9PhX1V7
nsUd57Nhpaepix8qt0hns3inULWb+tQC9G06fIw6u+XzyeRSQaz0NLUDZWW7
agfO7tytrTLd+9DKLsGrBdA2HT5GtbJ9XujoWZteoKvMDjjueRgOQKVMgbkr
Rn/xy29qu41waAFmMwqlqm7Zd85KDrN3dnrayA4UyS58+nlVSVqFbxYbWQCH
bKUnFK/AYalKtp2dnlZctp2Hi6/KDtR5iejQAkyNgFLbaKKl1B0UzXqBrhpB
rV74Nh2M8oep1byintHQLaXMoWnWAixlFEpVdxXWllF0Ndkld08zIduumiSt
KiPgkO1SfdbTLZ9X8IaaWaz0NLdsMyjXkGyresXwrHN3y7Y2O+CexkxKy16g
qyCAewZtR16RLbtYnayQyiwuq1VPnSc0OXIJtxFQ6nGptRkBxURP64zItqsg
r1g9KFeJbFfnQ2qwA3UaAaX+ntY57UA2U+BjB4oPE6sDRJ4leIcF8JStiWnM
1DTuBbqXPaHUJu0ff/hT/6C9mlekzi58dF3WZRc3Aqu5hE9oUornFdUaAaXy
ntazSbYpOqfnjLq0dakziVKZ7vQsdUYRV7Zl84qajYAij1dtT+spLtvOz8WL
bEtlL/Jz3ZWZei3PU7Y+z2BlcikpeIHuZV6R/92mIqWtB7tG+9/cJUWA8rQD
19+9nT+PlRZ0SyldaJpuTQzMKJSCLnU1zteA9rT8M2OrPW2EZ15RVraChKO3
37mRuTJXR8CksvVvmk2yLZVXbJpcKkidPW3EJtmmuEnYU7byS9VZmYlm3jbJ
1j90WJlcSgdeQLm4uDh54808GaxE7Ncvn+xres+cM900ms9khb7aL5uy5Aed
np66L+BKOkeRIqNQirjUGuKSJ9rTsjkmn542i2cPSSdbz3FZfjUJTXnslVSm
hNxSGUW3RbZbQ4e6VGTrIGdPk/jg09OmFJetpx3Q7CVPZXpmL+nW8lZ3cAXK
NvM05m9e/F5+aA3KxQsMkbxCUq90mpJvlogdeM9bqbik+Gs8g7IkyHu6qtS7
g3wC1L6mseJSC5Khp4XXjNvFZ+if/iPj2Z27b79zI3UY9KnM1LuDtFriZhSK
yFZsI7J1U09PW2LVDqQecH0m3xTJXiqpzAwn/X0mRXdE1AqnMbOBFxihnSG6
I5BwLe3+3u0PwiO2I+3Mc1Wm/wCtlZkiT/N3AZseOBBHgAqMjYmqcUecr5N0
PS1iorXUPWqTbfeyPlPkaRoGpaUqySgU941PId+MbFepoae5Weoe2TqnLdl2
uV4IGHI7h5sMk0vqAqpSLl5gloiphehInMXjJ08jtvuSHch2bf4msWtlnrzx
ZniM0rFvU26W8zbCpWnGKA+QKN2NOGgWp2xP82G2b2S7dm/rD+pTi/AuJ5Wp
5yz86zPnbYRLNi38AZCtDxGT2LOP72/taavMpp1V3Qw8RCszYvaCbCOWFMNK
FPACDvrUQrqERBj/MCWfVBFpo6dYA5p9A87wLdtJ2TfT3utLswvP+tTKVAXt
GPtyRmzN65JOH0WMUSkGzUoY9jTpP3l6mg9TF6/3kEgnyXP53o7eOHRYW8Og
WgCdAdsUBrOt5WkgnZ1diRg3ok8uHVi2mXuaJ6PArsNKHtl2u2baW5DtrEeL
+ADDOgxUrtZqbWsBQ/ACPkiXkBbUXiFFZKL6GhVN/uUDmkik3gY2EoL+oQao
DDPhu1V/8ZLzl2hlztan/nlfmfsUlCc09XFJ/2+6jKJHK1ACi7pU/zCVYdCs
h76nnd2528t2qaeJcuVjGVKsUdrZd488Rj5EEcMwKNU1K1vtXRond4fBnLuD
+toYJXu1yVY7qp6BPbZsu+97mspWetqsbLWn5Rxwhz3EqGyXspcolVlEtqMs
KNFwv3saU+u2r9UUzxYLvMAONMd4NiF/iO6FMNKg5hs1vMZolYvvmVZmYH3m
CU3TKD07ZCSij/OSYOgCloR0CT59hNeiWYR8Js+gWSfpetpWHLLNMNMYyyCn
C4MZ9huP/Hv3w6QidRMg201UMuAOXfwwsCNbJY8nKivb4TSmylbK0FKpbMOn
MfODF7DOVB09qRcIsi0I7iPDm8Vma76PTtm2TfZUMmjCKtpJZuWZYaYxQ7K9
mzxXKjlkmz+mIVsr9HZg+lcZZJtzK/5WMiQDSz+irGxrmFyKAl7gADhedJJ6
gaBaO5D6wRzf73BnAD2OLpR6prFl2ToSKmQLq2gXmv2r1Bt0c96DsYkMrxh2
aDP6obw2wQscA3e2nzRAVTjHmOHNYo6cQQ9xJ/rp0A5JZxortANlZaufSfTT
4Ui4JZl0/q1C2XYpFyx0MEW2GcALNIIGqBSqqTA6pbMnFf6ycGCSLhDU5uKb
Mj5wbNLNv9W2UyiduHQyBOXmAS/QFIlmGqsaahOFSnb+QClakG2ih0G2UIpE
CwRV7RRK9DC4gPzgBVojykzjb3/7X1+YIuSXJS5BcWItEJQW4jYCf9mqzA60
SZSXCZYW4jYCa0xlW9XaRwvgBdokcKZR9P6jH/3Fs8iH/+KH/yf1w/4PEFJR
xCWohAiy9VXtjxLK1vsBQiqK5QCohHAjX4MYN4WOfb8msi0IXqBZQgJUC16A
uAQVEirbo3uBnG+DBfAnxMjXIMbUXoBVvLLgBRpnX4A6vBcgLkHN7Jftob1A
hjveAXaz26jWIMZ0XoBptxrAC8COAHVgL0BcAhPsuMz8wF4A2YIVdjjWGsSY
yAsw7VYJeAFQNgWoo3oB4hLYYtNdJUf1AsgWbLF1/q0GMUb3Avj3qsALQI9/
gDqeFyAugV08FwiO5wWQLdjFf/6tBjFG9AIc6qkQvACM8AlQR/ICxCU4AD4L
BAfzAiwHgHU8R58axBjLC3Cop07wAjBlNUAdxgsQl+BIuC8zP4wXYDkAjsTq
MFSDGMO9ALKtGbwALOEIUAfwAsQlOCQOI38ML8ByABwP9/xbDWIM9ALItnLw
AuBgKUBZ9wLEJTg2s0beuhfAv8OxWZp/q0GMu70AsjUBXgBWmQYou16AuASN
MDXydr0Ah3qgEWa7eg1i3OcFmHazAl4AfBhdZm7UCxCXoDWGRt6oF+BQD7TG
qM/XIMatXoBpN1vgBcCf/q4Sc16AuATN0s80mvMCyBaaZbhAUIMYN4UOpt3M
gReArUiAsugFSlcbQEmMeoHS1QZQEk2qaxDjVi9QuuZgG3gB2McXpihdWwBV
UFqI2yhdWwDl0YV4Q5SuMNgDXgD28d7tD+4//PL5P/5LzeWjTx48e/asdFUB
1MLZnbv1y/bHH/4U2QL0WJHt4ydPS1cV7AQvADt48e13b125Xjz4+BTsAIBy
cXHx9js3iksS2QL4g2whA3gB2MGNm+/XP02h5d7Pvzw/Py9dYQDlMbGWh2wB
hphYFOhlK0GmdIXBHvACsBVDiwJamKwAuLi4QLYAtjC0KKCFDX5GwQvAVgwt
ChCdABRDs4vIFkCxKNuHjx6XrjbYDF4ANmFudlHL1Wu35MlLVx5AGczNLiJb
AGQL2cALwCbMTVNoYb8BtIxR2bI0AC1zfn6ObCEPeAHYxKVXLxcPNfvK6elp
6coDKINd2Z688WbpygMog3T+4gLcV16/fFK68mAbeAHwx+gGIS0sXEKbGN1p
gGyhZZAt5AQvAP48fvL0xx/+tHic2VfYJgRtYlq27DeANpFuj2whG3gB8Mfc
DULD8unnX3FjOTSI0cMCWu495EUD0CLWZSvPX7oKYQN4AfDH7q5jLRwZgAax
LluODECD2D0soIUjA7bAC4A/r1x6rXiEIakA2IR1L0BSAQ0i3b649JBtO+AF
wBPTB4e1cKAJWsP0CURkC21yANnK8yNbQ+AFwJMX335n3QtwfBha4wAW/uzj
+8gWmuIAXoDjw7bAC4Anpm8j0YIXgNY4gGzxAtAapi8R0oIXsAVeADw5QFKB
F4DWOIBs8QLQGngByAxeADwhqQAwB7IFMAdeADKDFwBPDpBUsC4ArXEA2eIF
oDXwApAZvAB4coCkAi8ArXEA2eIFoDXwApAZvAB4coCkgssJoTUOkFRwOSG0
hshWLHBx6YWUt65cR7aGwAuAJwe4nPD6u7eJTtAUB5AtXgBa4wB3iiJbW+AF
wB/eOwxgDuvvHUa20CDW3zssYad0FcIG8ALgj3UvcHp6WroKAXJjPanAC0CD
WJetPH/pKoQN4AXAn/duf3D/4ZfFg8y+8unnX52fn5euQoDcmJbtvYdfIlto
kLM7d03LVp6/dBXCBvAC4M/DR4/tnkPkNhJoE9On/pEttInpU/9cImQOvAD4
Y/ocIgeHoU1My5YTiNAm0u2vXrtVXIDIthHwArAJu0cGOCwAzWJ37zGHBaBZ
kC1kAy8AmzC6TYjDAtAyRmXLYQFoGaPbhDgsYBG8AGzC6H4DNghByxiVLTsN
oGWMbhNCthbBC8BWzM0xsigAYE62zC4CIFvIA14AtmIuOrEoAGBuvwGziwDI
FvKAF4AdvHf7g3tGrj5myzGAYku2zC4CdMgWsoAXgB0YurH86rVbTFMAdKbm
GJldBFBEth998qC4JJHtscELwD5M7BTipADAEBOyZS0PYIgV2bIoYBe8AOym
/ncNcMsxwIj6Ly2XJyxdSQB1Ub9sL716uXQlwX7wArCbyicr2B0EMKXynUJs
MwCYIrI9+/h+cXkulbeuXEe2psELQAjV2gEJmxI8S1cPQI0gWwBzVHtMT55K
nq109UAQeAEIpMJbDjgmAOCmQtmy3xjATZ2ylacqXTEQCl4Awrlx8/16AhQZ
BYAPVeUVZBQAPiBbSAFeAKJQiR3ACAD4U0leQUYB4A+yhejgBSAWxe0ARgBg
K8XzCjIKgK0gW4gLXgAiIsGh1OGms4/vYwQAdlBQtvJzySgAdiDjHbKFWOAF
IC4PHz1+68r1zKHpo08ecP0IwG4eP3mKbAFsIbJ9+50b+Y0AtwYdD7wAROfF
t99devVynhVMiUuvXz4howAI5OLiAtkC2EJkK1JCthAIXgAS8d7tD966cj1d
jJJvZl4RIC5nd+4iWwBbiGzffudGUtmKEXj46HHpXxRSgReAdFxcXKRwBBKU
JJ2Q6EdGARCddLLVbcbIFiA6ItsUjgDZNgJeAFKjqUWUGCVB6eq1W89eUvrX
AjgyEVMLle3DR4+RLUBSkC3sAy8AedAYdenVy29duS5Bxj9S6eqkBCXdqSjf
U/pXAWiFXraSXSBbABOobE/eeHOfbOVfiWwfP3mKbNsBLwCZkfAiQUYTDM0x
1B2MioYjKboXiKAEUBARoMhQxCiSRLYAJtgqW90LhGwbBC8AZbl4ybMJhCOA
akG2AOZAtrAEXgAAAAAAoE3wAgAAAAAAbYIXAAAAAABoE7wAAAAAAECb4AUA
AAAAANoELwA7+MIUpWsLoApKC3EbpWsLoApKC3EbpWsLdoIXgK2I3v/ijX9w
2BRG/J+B6ATQIVsAm9QgxhShA6oCLwBbIakAMAeyBbBIDWJMETqgKvACsBWS
CgBzIFsAi9QgxhShA6oCLwBbIakAMAeyBbBIDWJMETqgKvACsBWSCgBzIFsA
i9QgxhShA6oCLwBbIakAMAeyBbBIDWJMETqgKvACsBWSCgBzIFsAi9QgxhSh
A6oCLwBbIakAMAeyBbBIDWJMETqgKvACsBWSCgBzIFsAi9QgxhShA6oCLwBb
IakAMAeyBbBIDWJMETqgKvACsBWSCgBzIFsAi9QgxhShA6oCLwBbIakAMAey
BbBIDWJMETqgKvACsBWSCgBzIFsAi9QgxhShA6oCLwBbIakAMAeyBbBIDWJM
ETqgKvACsIMvTFG6tgCqoLQQt1G6tgCqoLQQt/Ff//VfpSsM9oAXAAAAAABo
E7wAAAAAAECb4AUAAAAAANoELwAAAAAA0CZ4AQAAAACANsELAAAAAAC0CV4A
IDWlr3nbRunaAqiC0kLcRunaAqiC0kLcRuna+r/gBcK5uLh4NuHiJaUfDcoj
ev/Lj37kWb5I9v4X/wcoXWGZQLbgYLO+vD/pHQw2fBjZIltQNomxhq/d/ism
AS+wAw1H5+fnJ2+8+frlk6vXbn30yYOzj+8Py9vv3JA/lw9IkU9qvCr94FAA
vEAlIFvwBy9QCZ6ylSJ/K585u3MX2bYMXmAfeAF/NChpOJL4c+/nXz7/x3/x
KfJJ+fz1d29rgkGYagq8QFlUtiK9fbKVHAPZNgheoCwq29PTU2QLm8AL7AMv
4IMuREpQ+vGHP/WMSEvl08+/ElNAjGoHvEApetlKbhAoW0kw/s/33LmLbBsB
L1CKXrYfffIgXLZiCpBtU+AF9oEXcKOrkxKUwl0AMapN8AL5QbYQCF4gP8gW
wsEL7AMv4EBCk8Sl+w99Vyf3TTZK9Cv9i7ZLfxLt8ZOnfYl7Eg0vkJkMspXU
AtkWZFa2L779LrJsN+nL+5N4gVnyyFYcQelftGlUuUPZJhlwvcVYw9du/xWT
gBeYRc8FxJ2dWCqffv7VyRtvMmWRB6lnCT7v3f5A2vfSq5ffunJdWnlU5A+l
yN9KkU9qsNr9E/EC2cgpW0kt5Gch2zxoCpFbtpv05f1JvMAIPc4TviMI2VZI
P+CKKl+59NqqcsWsZVMuXmAIXmCKTlBkiEvDcvXaLfm5pX/1w6IRSUYBjUWb
TqJpsNIwtSNG4QXyUES2b79zA9mmo7+uQeo5RLYvvv1u64/GC+ShlGxlOCj9
qx8ZUe7DR493D7jSQEEDrrcYa/jarb9gIvACI6T75ZlXnJb/cz0aK5ixkbFG
gpJGpMAGkjAl33Pj5vubUgu8QAbOz8/DDwjvK9KvkG10VLZRrmvYL9tN+vL+
JF6gR08HlJLte7c/KF0BB0RkG3HA3XHQAy+wD7zAEAkO6fYrenZ+8opY6KYC
XYWM20abUgu8QGpEMsVlS14RC5VtigOkm2W7SV/en8QLKGIEPv38K2R7GMQC
JBpwNzkCvMA+8AI9xY1A3/OxA+FIXJKIlPQkmqQWPkMJXiApxY1A3x/IK8LJ
cIBUHcEf//Rn95PgBZJS3Agg27hkGHA9j37jBfaBF1AqMQJ9t8cO7CbzAdJL
r152zzTiBdJRiRHoOwN5xW4yy/aVS6/96pvfOZ4HL5COSowAso2CuABRUz03
NuAF9oEX6CrLKPo+z6WFO3j85Gn+4x5vXbku8XDpkfACiahTtuQVOxAjkP+4
x7psN+nL+5ONe4GqjACyDUSXAzK3l/vGBrzAPvACRbJHnyKDI1eUbEI3KxZp
LPm5N26+P/tUeIEUFMkePXtCCtn++3/+Ifp3VkLB6xpUtrP7hfACKahZtg5j
uJsDy1YQ7RRU7tLeCbzAPhr3AhcXF+IxiweipfLRJw8i5hVf/9O/3fzJ38X6
ttoovsvr3s+/nLUD//Xb335hivxttxWR7dVrt4rLc6nEdfEq26MmFTXI9q0r
15fsgCHyt91WKpdtXBevspX/jfWFVSF6kcGuuHJnV3NKC3Eb+dtuica9wOuX
T4qHIHeRJwz/NTUuaQn/tgopnlH00WlpdQAicvLGm8XbOrNsD+kFKtnl5bAD
EBFkewxEKaKXSpTL5q5YtOwFKhmJ3CVwsmIYl6Q8ePrbiBVYCZUYgT46YQeS
cn5+Xk9zO2Qb8jKjkWwPaeGrCr/YgdRUeExgVrYhO4Wmsj2kFyi+IjBSLnYg
Cs16gcp3Bw3Lvp1C07h0yCXLqjIKolNqKt9mkEi2x7PwdcoWF58Ike31d28X
b2Kfsm/ybVa2h7TwVRmBXrncuxhOs16gwsHI0dU33Sm0FJdGXuDf//MP8n+1
SLIxLEv/fJSfaNFvkG/rS4Lmmqfac9+JTqKBLdlusoQO2Q69wAFk29oBUjCx
KBBdtkMvEFe2Q+UmaK5FPrn3WZ0DLhethNOmFzC0KKDFc47RHZc0pAz/expY
/MNL/+FpfBuGr3TxqvJGJK+ITuUtPtsHosh2qNwDyLbmlR1kG53KWzydbK9+
+DSRbIfKHcpWvzy4xeZ58e13b125Xrx1lkrci1YapE0vYGh20TM6+aQTmTcb
aOzq41X0HKP+c9+vXHotym8KikXZuhNLT9nezLjxeFa2EXOM+g+QItu4GFoU
sC5b9Qgj2UZ5hj/+6c+ii+JN4y5Rjn43S4NewNzsopar127Nvm7PPy6NVi0z
E9camEgLmWOMiLnZxbiyLXXSx5Fj7Pg2E2khso2IoZMCw/LWleuHkW2v3BBH
X+ExgVnlsjSwmwa9gIk00qefb41LZaPTiKk18A9Thtwc0SkWJtLIdLIt6OKH
TK3BJtlacXPYgVjYle2oA+yWbSVXCU1l6/9gle8OGhZ2Cu2mQS9Q/yL1UpEn
119hd1yqyg4MUV/gGaYMuTnuFIqFXdn2K9eNy9bEZbC9bCX5yVaNB+b09LR4
a5aVbYWXgPWzcP3qvPvzJhYFeuVuumgFelrzAoamlKdlut9gdArJ/6aCUvW/
yjBMzWYX5lqQpYFwzDX6sMiTx5JthXZAWc0uDC0K9LJlaSAQoxuEtEy3CR1S
tiM7P/2MoUUBLSwN7KM1LyCdpM5LsXxKlKwy/0Vk+1jKLgwtCvStRlIRSLW3
UGaWbf3KXcouDC0KINtYWJdteAewIttussbX/7mhRYG+4fACO2jNC5jLJIfl
3sMW17/67EL+1+j88NJJNPDEXCY5km2br8JR2X79T/9mdH5YZPurb35XuhYN
Y/SwQC/bNrd39rNwncFFAS1LNzaAg9a8QP0XUbpLf2SgTYzmhMwxBmL3sICW
xi+7M5oTIttAkK11xA1ZHHB59dgOWvMCl169XLyjEp12Y3dwabzhArFu4Rtv
fbuy5V0DIdhtd1pfsZsvnZ6elq48YzTlBYzuMBmWlhe/TDcf24R2Y7rdaX2j
G4T6hnvx7Xelq9Akptsd2XZmNwhpaTlT2kdrXsBu39bS8uKX9ZNoj588LV2F
JjmAF2j5OJt12bJNaB/mbo6abf2Wg7b87nYvWuE2oa005QVMXyKkpWUvYPSw
gJZmT6KFYzqZ1NKyFzB6WKCX7Y2b75euQpMcQ7YtewFzNwiNlNvgRSsh4AVs
lZa9gPXdp41vGt/NMZKKZmVr921TWtg0vo9jyLZlL2D3sIAWjgxsAi9gq7Sc
VFj3AiQV+zhGUoFsjRZku49jyLZlLyA9v3gThJTGL13cCl7AVml2XeAAu08b
P4m2m2MkFc3K9gAHSDk+vINjyLZZL2D64LAWjg9vAi9gq7TsBThA2ibHSCra
bPoDWPiWE8IQjiHbZpv+AF6A48ObwAvYKpIPt2l1GVma5QBN3+ySkLSdjMjF
6x/Z5ucATd/ykpDpS4S04AU20ZQXOMDcMl7AbiGp2McB5pbxAnYL14ruA9ma
Bi/QGk15gc7+0fhm76LBC7SM9fcOS9gpXYVlwAu0DMfG7XIAL9Dshup9tOYF
rCcVzR6Nxwu0jHXZtmzhD+AFkO0+rHuBZi18dwgvwLrAJlrzAu/d/sD06zPO
7twtXYVlOIYXIDTtQ7o9srUIXqBlrL8dsuXXzOEFWqM1L2D6+HDLyeQBkoqW
d58GYl22zSaTx5BtswdIAzHd+i3LtjuEF+BO0U205gWkb9i9KavZg8MdJ9Ha
xnTrNy5b3i/QLKZl23i7m86UtEjkaTbw7qA1L9BZ3nvc7GEBxW7DaWl592k4
dlu/8Xa3vmm85QOk4dht/cZl2/He4cZo0As8fPTY4uLXvYdfnp+fl668ktgd
VrQwuIRgdJtQy4cFlNPT0+KtgGxLgWztYv3SRYk8pavQEg16AaOLX/1Og3//
zz98/U//trU8ePrbYSndCHuwfhKNwSUEo/sN4spWvqR0O2xGZPvp518Vb4jd
sm35AGk4RmXbbxDaJ9uRci3KtjN+0YrEnMbnTrfSoBfoDC4NjDJJCTU3f/J3
u4vR0MRJtMaxKFsZT/vnF91JYrBbtqL6gpW/G2TbOOaWBkYGsE3Zdgbj7bDw
coGttOkFzEWn2eOH+xyBxdAk0ViK0SkmRwvCJszJdva0+D7ZGl3LU9naPT7M
ef9wzJnB2VPD+xyBUdlqkmB0B4UWDg5vpU0v0L1c/7pnZP3Lsb1ka4AyFJr6
xVl9bF3LsLv3mF3HUbAl2+GiwIiteUXOSg5hKNt+5gHZNs75+bkh2Tp2hW01
8oaW4PutTcMJQ7s3NnBYYCvNegFDc4yrU8r+jqDy0KSJhP4u8r8anYYfMDfF
pIXDArEw1AFWp5QPJtvetiNbGGGoA/hcJeop2/qX4Ee2Xcoo1BjdJsRhgR00
6wU6I/3cfzzymbLQzTapK3YTw+kITSQcT2h0mxAbhCJyMNn6OAK3KIqwatuH
SOeXobl4o2wtbBCKiInJN/da3hB/2Val3OmynduwGN0mxAahHbTsBToLt2a9
fvlk02/kcAT9tQb9f2eOVMM7GfpAOjsd4cDEmDIszC5Gp/6V6617S9yyHWbd
q345OrOy3foYItuzj+8Xb5dNsuUGobjUL9ut75JwOIJetqNprmzKdch204KF
ibmXYWFRYB+Ne4HKE8t988lLAWoYATQo9ZFqZBb6/LwvPj90WKZRaBiIQpIZ
Q8vNIY0IDipPLHe/sXTWEUxlO5XVULZD5a7+xJFse+UOI0Obsm38tbMpqLwP
xJXt6GheL9uhrJYG3NWfmE22XfU50rSwKLCPxr1AV7HtDbzObuoIVmcDZgPL
yC+sLjpM05Ldv8IStk6ieS46wyZEGtXKVkLK7t9rKtvV8/6zBnyfbEdpye7f
YhaR7S9++U3xBvKULYsCKag2sQyUbTd3iMD9+aVMvjbZdqZubGBRYDd4ga7K
rh4rh5TI4O8FrFD5/NKwsCiQjmPLdji/F/6FNWBItiwKpOPszt0KZRvF+o2M
fPgXVkK1Dm5aWBTYDV5AqSqviD6Z3F/xEfE7y1L5LpG+HTkpkJTaZBt3Mrnf
exDxO8tiwg6wlpeaY8u2dwRVnRoOpNrtE8PCokAIeIGeSgJUopFIA1T0ry3I
yRtvFm8sd+Fy8gwcW7bd9+/9OQz1v2sA2WagHtkm2gy29Yhu/dR/9FtSgtKV
ZBi8wBAJC2UDFFNS/lQ+x8juoGwUzyuQrT+Vy5bdQdmoQbacCvGn8p1CV6/d
YsANAS8wQgJUqQ4vP5eMYhPV5hWB575hK8jWEDXLNvAAKWzi7M5dZGuIancK
STyRqFK6emyDF5giHT7/+zXIHvdxfn7+6edfFY9Fw8IscRFEPkVkS/a4gwrv
FEK2RRDZvv3ODWRrheKrOdPCMYEo4AVmefHtd5devZynz0tcev3yCa52N1Vd
MUpGUZCLi4ucspWfhX/fTVUuHtkWRGQrI2A22b5y6TWMQAhV2QGMQCzwAg6k
z7915Xq6bi/fzARFFCq5p46MogakMyBbE1RiB5BtDYhs337nBrI1QSV2ACMQ
EbyAm4uLixSOQIKS7ldkOSAWxfMKMop6QLZWKL5ZCNnWg8g2hSNAtikobgcw
AnHBC/gQMbWQoCTf8/DRY+JSdCQylHrpACfRKkRlGyW1QLbpENmWOkqMbCsk
oiNAtkkpeGODRAyMQFzwAv5ojLr06mUJLyIB/0ilq5Pyr16/fCJxiZuv0iEx
/+q1W5njkhgQxppq6WUr2QWyrRORz/V3b2eWLdc11IzK9uSNN5FtzRQ5+s2t
QSnAC+xAwotIQBMMtQbqDkZF/lD+ViKSrk4SlPIg9SwjSJ79Qpz7NsQO2crn
kW0epJ5PT0+RLYzYIVssQE5yHv0WFyCDO8pNAV7An6VXil+8ROJVX569hHBU
kPPz86vXbiU9icbshGlUttKCq7JdEj5ER2R7/d3b6RyBypYDpPXjHm2HslXl
MtqWJcPRbwbcpOAFPJHQFP5K8YO9lLxyZHRI4Qh+/OFPJShxEs0KD57+NvAb
8AI5UdlGdwQi27OP7yNbK4TLltE2M+mOfuvpAJSbFLyAJxKawmPLzZ/8XZSH
AX8iphYSlMRZ6Oxx6V8LvBDNhicVUbQPm4guWw6QGkLcd/hYKZpFtvmJ6AjE
AjDgZgMv4IOGpihegOhUBE0tTt54U7KLs4/vbzqJJp+XiKTbFFmJNoTKFi9g
F5Xt6empytbfF+gBUpGtngtAtrYQxUXxAky+laIfcMUUbB1w1QKI6lFuTvAC
PmhoiuIFiE6l0J0eutdUw5QUiTkarEZFswj5gC5NEpEsorKN4gVw8aVYkq0U
ZHtINIcPHyiRbUH6fZVD5Yo2ZwdcTf5V2ii3FHiBVfrQFBhVdJaS6FQEGRdm
d333J9FGTGMRrWaLXm7hXgDZlgLZNojKLZYXYPItP6LZpajrqVz5Bk5pZQYv
sEofmmJ5AaJTfqKMLEQnQ/SZQCwvgB3IT7jo2DRui162Eb0AHSAzyNYieAE3
w9AUmFQMvQD9PCeOaQp/iE6GGGoNL2CUKLKN8iWQh6FsI3oBJt8yE6XCabXM
4AUcjEJTRC9AP89JlCl9kgpDRJTt6NuwA9mI5b4JtlYYZu9xvQCyzUasgZKF
+MzgBRyMQlNcL0B0ykasZICkwgT9AR9ka5pYyQBJhQlGQgsPtnG/DTyJJTcW
4jODF1hiGpoCk4pRikJ0ykPE+XySivqJLtvpFzJCZSCibEkqTDCaeYvuBegD
ecALGAUvsMQ0NEX3AnT1DERM4IlO9RNdtniBIuAFmmI6OEb3Aky+ZSDuTlqa
LCd4gVlmQ1N0L0BXz0DESubIQOVM8/Zwlc1+J7llauKuwRFpKye6bGe/E9mm
Jq7vZiE+J3iBWWZDUwovQHRKSvTsnaSiZqaLAngBo8QVGklFzWSTLdE7NXGF
xopeTvACU5ZCU2BWmSLigZvoOQBJRbUsjf6BEpu18NiBpES38CQV1ZJItktf
SzdIB7I1DV5ghCM0JfIC9PZ0RE/diU7VsiRbvIA5kG07LA2LibwAk2/pSLGH
lvbKBl5ghCM0JfIC9PZEpAhNJBV1spSxp/MC2IF0pAiJhNkKcWTs6bwAsk1E
ikVzZJsNvMAQd2hK5wWITilIdNSX6FQbbtkGtheyzUwi2bK7r0Ic4kpn4Qng
iUhRsUy+ZQMvMMQdmgJHqHTpCsySaPQnqagNt2zTeQHsQAoSjf4kFbXhTteT
egF6QnQSWXhkmw28QE8fPaRLa8npBejw0UnksIhOVdEvCizJFi9gi0ReG9nW
xqpsQ7pBUqMBUxLpi3u8s4EX6BlFHu2Ew+0H0b3AKAaGPT78gHQxhKSiKpZk
G0tZs3MCwz+kM8QlUSQkqaiKaZ6vyf9QWXG9ALJNSrrlclKjPOAFlhj2bY0h
sbyARqFhD5cfpCXk+2FIuqGfpKJmhq3T5wMhX9jnD8g2A0nFRVJRLbOyDVHW
ULZ96X+WFLxAXNKJC9nmAS+wxMjnSugIGaR0fWEYf+jhSUk3e48XqJmRbFV3
IV84mkXktEhS8AJtMmr3fnVv9xeqF+hly2JuUpLKlpCbB7zAEtOBI6RDTici
6OFJSVq9JBXVMm33wG4wki1JRVKSVi8ht1pmmyZwwB3+X2SblKRegLbLA15g
lgxzvwxMSUmaruMFqiV10zAwJSVpVCTkVkvqpmExNylJoyIhNw94gVkyhA56
eDpSNx9JRZ0gW+sktXK0XbVkmF1hAicdSQdEZJsHvMAsGZI9eng6UueEtF2d
ZPACTDCmA9m2SR5N4QXSkbRuCbl5wAvMksEL0MPTkXrQJ6mokzzrNSQViUgd
Egm5dYIXsE7quqXtMoAXmCVD32NgSkfqnBAvUCd4AdOklhUht07yhFM2diYi
g6wIuRnAC8ySp+/RwxORumJJKuoEL2CaDM1H21UIXsA0GZqPtssAXmAWvIBd
WHFuFryAafACbZJHtuSTichQsbRdBvACU7LN+jIwpQAv0Cx5GoWBKREZmo+2
qxC8gGm4aOUY4AWm4AVMw4pzs+AF7JIn6pJUVEgeQdH0icgQdWm7DOAFpuAF
TIMXaJNssqXpU4AXaJY84yBNn4I8suWAXgbwAlOyBQ28QApYcW4TvIBp8kRd
EsIKwQvYBS9wGPACU/ACpsELtAlewDR4gWbBC9gFL3AY8AJTso31eIEU4AXa
BC9gGrxAm2STLU2fArzAYcALTMELmAYv0CbZxnqaPgUcIG0TvIBp8tQqXiAD
eIEpeAHTsOLcJngB0+AF2gQvYBq8wGHAC0zBC5gGL9Am2WSLF0gBXqBNsrUI
TZ+CPLLFC2QALzAlW4pOUhEdZpmaBS9gGix8m+AFTIMXOAx4gSl4AbvgBZol
m5po+hTkibokFbWBFzANXuAw4AWm4AXsghdoFtYFTIMXaBO8gGnYUH0Y8AJT
svU6und08ALNghewSzbZ4gVqAy9gGpKlw4AXmEL3tgsjS7PgBeyCF2gWIrZp
SJYOA15gCt3bLowszYIXsAteoFm4CtguOdVEspQavMAUdq7aBS/QLOxctUs2
NRF1awMvYBe8wJHAC0zBC9gFL9AseAG7sC7QLHgBu+AFjgReYArXZNkFL9As
yNYueIFmyRZISSZTwMTpYcALTOENmHZhlqlZ8jQ9o1IKuP6rWfACpsELHAa8
wBS8gF3wAs2CF7ALXqBZ8AKmwQscBrzAFLyAXfACzYIXsAteoFnyND2yTQRe
4DDgBabkSfNIJlPALFOz5Gl6kskUZBvribq1gRcwTZ5xkKibAbzAFLyAXfAC
zYIXsAteoFnwAqbBCxwGvMAUvIBd8ALNkqfpkW0K8ALNkqfpSSYTkWccRLYZ
wAtMyRM3SCZTwCxTs+AF7JJNUETd2sALmAYvcBjwAlPwAnbBCzRLnkZhVEpE
nnhI1K2QDI2CbBOBFzgMeIEpGbwAyWQi8ALNkqdRSCYTgRdoFryAXZDtYcAL
TMmQVJBMJgIv0DKphwzaPR0Zhnuar04yJOokk4nIY7JovgzgBWZJ3feYpkgE
u09bBi9gF7xAs6QeDWn3dOAFDgNeYBa8gFHwAi2TWlbINh14gWZJHU5p93Rk
CIk0Xx7wArOkHpjwuelg92mzpE4qaPd0ZKhbLHydIFu7cLjyMOAFZkkaPejb
ScngBbBydZJ6YKLd05EhYSMnrJPUAyLtno4MXgALnwe8wCxJux9eICnsPm0W
ZGuXDCM+Vq5OUiuLdk9HBtli5fKAF5glaQ+nbydl2nZxa5ucsFqSNg3tnpSp
bONGYJqvZtKl67R7UqbVGz23wcrlAS8wC17ALqO2k/8OGQukpaYpCkuW1ZJu
4EC2SRklFSKxwKacpijkhNWCF7DLsO1UtiFxUr5h9M/xAnnAC8ySNIDQt+My
Ch19rq5xSUqgF9Bv6H8KOWHN4AWsMKrMPuSqeVflhny/fkP/U7DwNZNOXMg2
Nb1O+wE35NtU+71UsXLZwAsskSipoG9HR0OQ1KoUHfE1IvUlsML779EAhZWr
mXRDP+0el1nZDsUbV7bkhDWTzqnR7nGZylb/ezjghnx//1XacFj4bOAFlsAL
GGKU/I9KYDAZ2Qr9wr4w1lRFouZAtilwyzaWFxh+4VC25Bj1kC7lw8JHZzrb
NiohXz6yFVPZEocTgRdYIlFSQeqYAnd0iugFomcsEJdESQVeIAVu2Ub3Asi2
WpCtITJ7gVEhfUoEXmCJRNEJL5CIUl6A1qwKZGuLUl6A1qyNFBP4eIFEOOxA
YIW7vQBreenACyyRIowQmtLhiE6B4z6hyRYpkooU3wmdU7bpLDxBuEJSSAwL
n478XgDZJgUv4CB6dMILJCWzF6Ap6yR6AoBsk5LICziSCvLDCkmxooeFT8eS
i0/nBZBtUvACDqInFUxTJGUpOiXyAjRlnURPKpBtUpZkm8gLsJZXJ9Fli4VP
TU4vQFOmBi/gIHp0YpoiNdm8AKGpWvAC5sjpBWI9M0Qnbusg29TMuvhEXoCm
TA1ewEHcpIJpigzMRqcUXoDQVDMRkwpkm4EUsp1NKlgUqJm4XgDfl4E8Fp4I
nAG8gJuI8YRpijxEnwkkNJkDL2CODF6AdqyciJNvyDYPUxefwguQOGUAL+Am
YgLPNEUeptEp8AsJTeaImFRg4fMwlW10L0A7Vg6ytUhcLxDdXIAneAE3saIT
0xQ5SeoFCE31g2wtktQL0I71E1FueIFsjLL36F4g1nOCG7yAm1hJBaEpJ6N4
EvhthCaLRGkpvEBORrKN6wUIvyZAthaJKLS4QQD8wQusEiU6kUNmJuJ8IKHJ
IlEUh4XPTETTPfQCZIZWiDL5lujl47DEMIGP6AWQbU7wAquEj0pMU+SnDykR
vQCNaIgo+QAWPjPDTCDwq4ZeIMqzQQaiyBYLn58UXoBGzAleYJXw6ERoKkJ0
L0AjGiJctlj4IkT3AkwRGyJcdMi2CH0OH8sL0IiZwQvs4OLi4tmzZ4+fPB2W
F99+J38++3np3qSR+dGoEssLEJqsc/GSqWyXlItsi9AnA4Hfo14A2R6AqWwd
A65oFvdXhLhegNibGbyADxqL3rv9weuXT1659NpbV67/+MOfjor8oRT520uv
Xr5x830NVqUfvHUiegFCk0VEhg8fPRblqmynytU/lKKyPbtz12HqIQ9RZKte
ANlaRDSoshVVugdc+YAU+aQoHdmWRdP4KF+Cm8sPXsCBxBaJSJL/ayy69/Mv
n//jv/gU+aQGK00wMAWliLVpnNBkC3XukkVo2uCpXPmYFJHt2+/cQLYFEblF
8QIsCthCB9w++d834IqdxxSUIpYXiPIwsAm8wCzPnj2ToKQRyTMcOcKUfA+p
RSk4QNoUmktsSiQcsiW1KEUUL8CigBVEthEHXPHyyLYIUe6AQrZFwAuMEBfw
3u0PdDoxMCjhCOpEj3uM0M3ks59nUcAEvQuIKFtSi1JM8wFke0h0L1CiAVe+
GdmWZatsMQKlwAsMkbgkEen+w6AZRR9H8Mc//bn079oQGo7Oz89fv3wi5eq1
W2cf35ciba3/IUXyPSknb7wpRT6p8ar0g4MXj588vfTq5eguYOoI5AeV/l0b
wl+28rciW/FryNYWGQZcNfKlf9GG6GUrkkS2hsALKNIbpWcmTSeGAeqVS6/9
6pvflf6lD44GJQ1HW3efSrySf6W+gDBVLdI02WQrRX4QM42pCZStOnpkWzmJ
VvGWOsalVy/TH5KishXpafKPbM2BF+hezitmSyf68taV6xIPS//qx0SPe2gu
EdhMn37+1fV3bxOjKkRaWUaQzLLVmUb50aV/+wOi+weiyJadXTWjywGZlcu6
XiKQ7TH4/9o7nxc7rmtt51/SpCdC6kkjDRo0MQiskRphCUfCwgZ3wAN7EiyQ
MshAEUJYAVseBGvgC9/FwZg7uAMhQV88yCSeOoOMQoLDl5Qzuf5WeuP9lavq
VFfV/rn2eh4WRsit0+fUrnft9e69dh28gGtWzJyXXMjvvXHzTukL0BTuuMcv
3r8fvfuUHFUVRfx7X7nUFRFBtnaQKa/ghCu3WekL0A6uFwjZtoFxLyCZIV2z
4sLbnuMDsXj46InkpaTdp9eu35LsV/qDWqfIuuIg/t3+Sh9yDKSiSC1bKS2Q
bXFkmrty9aj4hIsdiEIe2ZJjs2HZCxQ3Av6elwyJHQgh53GPB4+fH1y6zJJF
KcruCAyUy1QVQuZTWvK7kG0pajAC/k7ADoSAbJvErBeoxAj4G17yZOlLopUi
xeG167doGs+P1N71yPYZzUIBuHXFzOPFWY9S3Lh5px7lYgc2U0q2pNnU2PQC
VRkBn504O7CBgsc9/v14NJaFM1LPjkA/5C1RXq5FhINs7VCVEXCBHdjA8fGx
yKdUmmW8kmLQC9RZUbi7nScLraK4p6NLJBtSb5eahs4MeWPYgeUgW1O8/+Gv
q51wke1yiu/JYt+SYs0LnJyc5H8O4ars1Jgd+MM33yb6JsHiFYVPUNQVqRHZ
Xrt+q/hYz8Qv3r/fWF3RvGypKzLwH1/815WrR8WHe1e05+ITyba4EUC2qbHm
BS7uHxS/n+fj3N6F0hcpJpKabn7w6edffR33ZSupKHyCwg4kpZKZaD4kt5S+
TjER2d5/+mXc0qI22VJXJOVPf/6LTGfFB9qUbEWz0WVbVfpFtokw5QWquqV3
RXtbA1JUuIiVoKqqKHyC4qGFiai5O6gfja0xSkXhZBvLyFeYfnHxSanwmMA4
GusUErU62cZyBDKv1TaI2IEU2PEClXcHDbJTUjvg+nYkacyHW2Fw4f7G/cO1
GcZ7gSgJqtrjHu11idRA/d1B/ZC3mu7xd+GyXSU9X1REMfLVyraxUrAeXrx8
VXN3UD9Sp+61yo0o20AjX+06DA9wi44dL1DhqtSuiGh7+ynIL/T1E85M9HPR
IFn1a/t+BptMXP2fD3QEUmjVPL9gB6JT4arUTMQqLBPJdvBS87IdFBWBsq15
HQbZpkDFpoCLWLu6k7LdoNx6ZFvzOgwuPi5GvEDlk9Hkfb52a2CQQ3we6Kea
6Bd2UHj4X91PVmMvsHnJYu/8fvGhmY/Guk/LUvlkNBkbCsuqZOsqB/f3k7Ld
UFrUf0oL2cZF0aZAoGwHbr24bN0BvSiyPbh0ufi4INtsGPECijYFXCz0Ar7+
7yeidI/uWc4gWc3EckegYhAbaxovi65NAa/cJTeAl62TQD2ydebdmmxZY4yL
ok2BDbJ16kha9q9iuWyXOwIVube9w5UFseAF1G0KuLhy9Wiy99iX2f36P/9V
XciuZYq1CUrRINJyEAUZ8aM3bhcfzQ0xuVrVt+2+kMh/VReyRLZLDhEgW4Oo
2xRwseuwz6Rtz39VF3KmHVhi5BVtyOLiY2HBC4jDffD4efGbdsNN7j3vuP6v
OR31WZKaljiCCp8dtCt4plAUlMr2Wa+qnNy2K31dFxFLtio2BbxseThJFBTl
6n74qlKXbe+zq69vrZFXsSmAbONiwQvU3/a2K/bO77uPoKv+96xKTTNLFpUf
GR4Ha4zhKJqPxnF4eNj9KFsthYRn4abAmY5A0aYAso1I/ae6doWUCl3vIEDp
C7kOs7JlayAKzXsBdTd2P3a1CalgQ2ra5QgUrS6SnaKgt0HIRdKHiyYF2Za6
8m2gtEFIu2y7NXt5845A3SIMpwai0LwXqPYBuW3f5CEVxaCuUOrmVE8rxVE6
6D70rjBvrih8uLpC6Qgi20Cq/SKJJaH3yQ8btuB3yVbjIozqVdNKaN4LqDO5
/fjwIb1w+lYXXeidVmpA72EBF/LmjZ8ZUZp42RoIRN0ThPohEy6y1Zh4+eqx
cJr3AnoPC7jwRwbMorf71DWNwwbk0hUfPkY/BL2Jl4eWh6A3XbtwRwbMgmzN
gheoPM7tXSh9CUui7tRwP+g32Ix22T6z7QWUNggh23Bkwio+giFhuaRU9CjR
cdAmFEjbXkD1vc0d3tF9ahKlPauDkI9gVrly2+uVLW1Cm1G9dOPCshPUfriS
NqEQmvcCepenuMM7tYcFXNB9uo02vMCvfv3IbEmpXbby/ktfQpWofoiQC72n
/sNResbHy5bDlSG07QVU+1wXxr0A3acGEdnKjFx87ALDclGhvcXLcqNICKq3
cZEtsrUMXqDywAsUHwKyU2bwAtpBtjZpwAtYbuzU7gV40EoIeIHKw7IXoPvU
JngB1TTQmSnvH9luAC+gFw5XGgcvUHngBYoPQUiYLQhDwAuopgEvYLYgDAQv
oJcGZMup/xCa9wLaiwrLXoCZxSYNyPaZ4bPDqh8i5IKiYhsNZGyzFr6NhVOb
YxcFvEDlYXnbq4GZBS+wgQZk+8zwM0XxAmZpYOjNdnW24QXMLpyG07YXoAVO
NXgBm7TxTFG8gN7AC2yjga5Oy7LFC1imbS/QcTReM3gBsxweHhYfu8Aw+73D
eAHLaP/eYbNPgcYLGKd5L6C9qMALFB+CkMALbEO7bH//4o94Ab2BF9jMxf2D
4sMXEpZl24AXQLabad4LaP8qPcvfgNlAUcHDCbchsv3ksy+KD9/mePD4udmv
nEa2lnnz9lt6J1zjstXuBSw3VIfTvBdQfQ7R+J5XA92nZk+iBaJats8Mdx13
TTycEC+wGdWbuZa3cTlcaZzmvYDqO5wpSfsXmJrtPg1E+/Fhy16g098oYrkz
MxDVCzjItvgQINtSNO8FOs29x9zbeAGz6JWt5U4Dh/aiAtmGoHf0zR4WcPCg
FctY8AJK+w38YYE/fPOtROmrWAbV3acygsZrwhCUylbi91/9t4y7ZdlK4lIt
W8untMJ5+OiJxjYhZ+Ety5bDlZax4AWUtgn5BqHPv/r6/tMvXVhLU3SfWkbp
1oBMqaJckaoI9uYHnxqUrerjwzyNJBClbUK+QciybPUeHzZ+uDIcC16gUzg3
jU2uW6/QkqbcW/UhdsaH+yA+5l9H6bTiguMegWjcGhg3CCmSbX/ZIVC2eo8P
I9tw1G0NnCnbmpU7kG1fuWtlq3HV1AUHhwOx4wV0FRXz85GKNCVvb230s5n/
UHq7T+k6DkSdbJ/NHj9UIVupH0JkK+FeB9laRt3i25myrXxrHtlyWCAQI16g
O+2F+1BJL5y8zzdvv7XkQ/XTVG3VxYbs5MItaPjXUbfE5IIDpFHQZQcWDnrl
1cU22Trl+hdRVw26oOs4FjKFaZlwl8u2ZjuPbAte/Aaw4wUUFRUbNql9deH9
vtsfTHQxF7LWDgxcgENpmxCdBlGQayjTdPHRXBhrn0k4qC68bMsqd4OLn5St
xn4DZBsLRVXlhkeJDiZcZFs2aBAKx44X6JTYgXCH65KS6yEsbg1CXIBH3dYA
yxQRUSFbCXmTIWdO+7ItXmOElBMeZGscFTdA+AbuWLaldg2W24EZ2SoycV62
C/soYAZTXqDT8GSS6G1vu6zB4GxRxF/nX9z9xhAX4FCXnVhdjIvI9vcv/lh8
WGciRUvYZI1RiWznywkHsoX6+8+jf6eA3+ybkW0s5Q5ke+3d30aRrYq1Fx9s
CkTBmheo/D7PMBl5a+ATiM9aLiafIjL++XH4f943GjN1xRIX4FHUfcrqYnRE
tr/69aPiIzsTGb6xtK/ctbKdUe6kbOcXGJEtLKRyP3jt+q0isu3rbtuEOylb
iSiyFSEoku2Nm3eSjqARrHmBrmI7UMkDcv3CxWRqGjyj7MyFjkkv4DLYqndV
+ZzSD1YXU1CtbCXEpxR/Iv28bGeUO/lquyw8soW1VPsdMYFNfVHoKzFctrss
/AbZVptsB3Hl6tGLl69iDIV1DHqB7vSZQp989kXx27gfra5Kheclj4ruU75r
OB11zlA1VBTRGXuB5mXbZPqthAq3h5p8ztvYC2yWrQoXz0mBiNj0At2pHZBs
UPxmbvuWHmxZbs5Lnr3z+8UHaz4u7h9EuXQwSW124JPPvmivouh+auHDZVt/
0zgPJ09NVXagSSPQ/dTCI1tYhVkv0FVjB1o1Al3PC4TnJUe1280uaDPIQD2b
ek3uCHQJZFv5GiNnD/NQiR1o1Qh0P1r4iLKtauFlLFu6gyIS6AV+q4rx+y9u
Bxo2At3plmWsvOSptuXg7nv3tFSGpYW4jvH7F9kWn6RaNQLdjw8nifua1cq2
klNaSygtxHVMfoTidqBhI5BCttW6eHlXklLifljjhHgB0fsPi9mVHCZfdvn7
X/4edr1swbpC7ueGjUA6ik8o41DUb7xWX6t+eLkYA1NH2TWrho1AOuqUraIM
LEL42Q8/WxJr9ZXoZSc/heTJUuWlyLZVI5COCp8ppEu2WsALdKd1xdEbt/Pn
JcqJzVRVV+hKTW14ge5H2Wbe1/v9iz/KL0W520C2IbThBbrTVs/XXr+RebiZ
cDdTm2x5iGgK8AKOk5OTw8PDPHXFz9/95cX9A/JSIJIQakhQGiuKdD+8XIxR
UofINue+nvwiyRL0lodQSV2hTrZdQ16gO1WuTIJ57gQnWybcEJBt8+AF+khd
kXSlUe5kViciUtwOaExNLXkBR4YNAsqJiBSvKzTKtmvLCzjuvv3Oa6/fSHcz
MOFGBNm2DV5ggFtpjF5a/PzdX7pmRfJSXCQ5lOo+VXrcoz0v0CWT7bNTF8Au
XnSQ7Qba8wLdqXJTOIK7791jwo1OwbMeemWrBbzAJBFLC7mHr12/9fEpy98A
LOfhoydXrh5lTk2Knho0oEkv4HCyPbh0Oby0cCuK7AWk48lHT/PLVtFTg8Y0
6QUczhHIRBk+4YpsmXDTUeSsB08NygBeYAZXWkg9IKZAar/laerfT5V5755k
JClLJCPRYJyaFy9f7Z3fz7ODqf24R8NewOO9vExbItuFN4aTrdQSIltWFDMg
w4Rsl9OwF3B4Ly9Tpyhx+Y3hnLv8K2femXCTkvOsh8hWUoRe/64IvMAS5OaX
DON8gWQqqTEk7UjykXzlQv7scpH8X19IkJEy8+btt65cPUrdfao9L1nwAo6T
U45P8bJ1ZcZAtk65Traqy0WN3H37ndSybWNdsXkv4PETrptPJ2XrJ1yZlJlw
85PhrEcbstUCXmADrsb4eAS5qDgyBCkcgSQl16/YQKFoxwsMOPmRsWxRblmQ
7RLseIEBTLh1kuisR2Oy1QJeANrDlRZRcpQ77vHw0ZNm8pJZLwCVE7G0ENnK
67Qk286wF4CaiSvbK1ePGpOtFvAC0CouR+2d35f0IklmVfepqyVcg3Fjq094
AagZL1sR4GbZPvnoaWOy7fACUDFOtu65DRtkK3O0yFZcQHuy1QJeAJpH0ovU
Bq7AcNbAuYNBuCpCwu1OtpqU8AKggoFsRZ6TspW/lP/bvGw7vABowHVziWxF
kgtl26RzVwdeAKzhu08lBRnsPsULgEaMy7bDC4BCkK0W8AIApsALAGgELwAA
iQj0ArpIfTEB6qe0CrdQ+poBlKe0CldT+oIBwFJCvAAAAAAAAOgFLwAAAAAA
YBO8AAAAAACATfACAAAAAAA2wQsAAAAAANgELwAAAAAAYBO8AAAAAACATfAC
AAAAAAA2wQsAAAAAANgELwAAAAAAYBO8AAAAAACATfACAAAAAAA2wQsAAAAA
ANgELwAAAAAAYBO8AAAAAACATfACAAAAAAA2wQsAAAAAANgELwAAAAAAYBO8
AAAAAACATfACAAAAAAA2wQsAAAAAANgELwAAAAAAYBO8AAAAAACATfACAAAA
AAA2wQsAAAAAANgELwCQmt+qovTVAqiC0kJcR+mrBVAFpYW4jtJX6/+DFwjn
5OTk4xEnp5R+a1Ae0fsPi5Ef/tkPP1sS6V629AXLBLKFGVYJYbkY18o2xbtV
DbKFeXSJsR7l4gU24NLR8fHxwaXLF/cPrl2/9Yv37999714/Xnv9hvy9/ICE
/KTLV6XfOBQAL1AJXraHh4detgPlIltw4AUqAdnCKnSJsR7l4gWW45KSZBtJ
O5J/PvzN75795/8sCflJ+fmjN267TEWaMgVeoCxOtlJIuCoC2cIS8AJlCZSt
uANkaxNdYqxHuXiBJbiNSGcBFmakXfHg8XOpLshRdsALlMLLVmoJZAurwAuU
IqJsxReIKbj79jvI1g66xFiPcvEC87jdSUlKP3/3l4F5aZCjJNdRWlgAL5Cf
dLKltDACXiA/yBbC0SXGepSLF5hBUpPkpXsPl+5ObnYEpT+oXfxJtCcfPZVI
cRINL5AZZNs8/QOk6WS76oeXK3GVbFO82zrJIFvnCEp/UNP0J9xER791ibEe
5eIFJpH78+L+QdzViV3x4PHzg0uXWbLIg8tFb95+S8Z37/z+latHMsqDkL+U
kP8rIXOHZK2Q0cELZMMd5wlv5FtYWiDbbDjZihhFthJS1M3LVgQeLttVP7xc
iatkm+Ld1oY7FxDeEbRQtnL/INtsyKUWJZ454Yqi5f/Kz4jGA49+6xJjPcrF
C4xxCxQZ8lI/rl2/Jb+39EdvFldL+Cpi1Uk0+XmXqbbtMuMF8oBs28PLVq7z
Btk6a7BZtqt+eLkSV8k2xbutiiKylXwuBWrpj94yoriHj56Icl3xv2HC/feq
TuIJtwYx1qNcvMAAuf3ybAeM4+5792g8iI7MNZKUnAUIHCC3y/zm7bdWJSi8
QAZEOHm2AyZlS+NBdJxsnQUIl60UJDdu3nnx8tXyN4AXyIA7HVBEtnJfIdsU
OOU6CxBlwl3rCHSJsR7l4gX6SJmXrl9x4c1PgoqF6wVyu5Bxx8iVFgsTFF4g
NSKZB4+fI9s2cLJNcYB0lSPAC6RGjMAnn31RVrZyp5W+DO2QbsJd5Qh0ibEe
5eIFPMWNgL/zqSvCefLR07vv3Ut6Ek1KiyVTCV4gKSKWSmRLXRFOhgOky2W7
/G3rKj9qQIxAWf+ObOPy8NETsQA1HP3WJcZ6lIsXcFRSUfjbHjuwmZznvmWk
9s7vz6804gXSUZtsqSs2k1m25/YunCnb5W9eV/lRnEqMALKNgrgAUVM25Z55
9FuXGOtRLl6gq6yi8Pc8Zwc24LYDMg/WlatHkg93vSW8QCKqqii8bHHxGyhy
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
G0LzXkDv8pS/wy03wik9LOCC7tNttOEFfvXrR2bnJu2ylfdf+hKqROm3jPXD
8gKO0jM+XrYcrgyhbS+g2ue6MO4FtHefWm4U2YzIVmbk4mMXGJaLCu0tXpYb
RUJQvY2LbJGtZfAClQdeoPgQkJ0ygxfQDrK1SQNewPLz37R7AR60EgJeoPKw
7AXoPrUJXkA1DXRmyvtHthvAC+iFw5XGwQtUHniB4kMQEmYLwhDwAqppwAuY
LQgDwQvopQHZcnw4BLxA5WHZCzCz2KQNL2D27LDqhwi5oKjYRgMZ26yFb6NY
sjl2UWjeC2gvKixvezUws+AFNtCAbJ8ZfqYoXsAsDQy92a7ONryA2YXTcNr2
ArTAqQYvYJM2nimKF9AbeIFtNNDVaVm2eAHLtO0FOo7GawYvYJbDw8PiYxcY
Zh8nixewjPbvHZaCofQlLANewDjNewHtRQVeoPgQhAReYBvaZfv7F3/EC+gN
vMBmtD9O1rJsG/ACyHYzzXsBvkpPLw0UFTyccBsi208++6L48G2OB4+fm/3K
aWRrGZmw9E64xmWr3QtYbqgOp3kvoPocovE9rwa6T82eRAtEtWyfGe467pp4
OCFeYDOqN3Mtb+NyuNI4zXsB1Xc4UxLdpzbRfnzYshcQLu4fFB+CkLDcmRmI
6gUcZFt8CJBtKZr3Ap3m3mPube3dp3iBzeiVreVOA4f2ogLZhqB39M0eFnDw
oBXLWPACSvsNPnz4u7tvvyPv/w/ffFv6EhZDdfepjKDxmjAEpbKV+P1X/+3G
3axytcvWJV7YxsNHTzS2CTkLL5o1K1sOV1rGghdQ2ibkG4Q+/+rrmx98ev/p
lwbTFN2nllG6NeA6DUS2olkX1mSr+vgwTyMJRGmbkG8QsixbvceHjR+uDMeC
F+gUzk3jtSnJSz5H1Z+m+u9WiiIXzsv4WPI6SqcVFxz3CETj1sCgQcjd6qIC
b+cLXs8zmZTtBuWqPj6MbMNRtzWAbDu1q6YuODgciB0voKuomLmxtaQpeXvL
o29zfEJzr6O3+5Su40DUyfbZ7PHDgWzrVK57h9uUi2zBoW7xTbtsXfNAyITr
XkevbDksEIgRL9Cd9sJ9qKQXbnnnW81pam126odPTZ3CJSYXHCCNgi47sHDQ
++t4tclW3kwU2aqrBl1wWCAWMoVpmXA3yLbCVThkW/DiN4AdL6CoqNiwSe3T
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
    "], {{0, 639.}, {514., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{847.7749999999996, Automatic},
  ImageSizeRaw->{514., 639.},
  PlotRange->{{0, 514.}, {0, 639.}}]], "Output",
 CellChangeTimes->{
  3.958973457086753*^9, {3.959041989071407*^9, 3.95904200426124*^9}, {
   3.959042049675332*^9, 3.959042054754343*^9}, 3.959042782611898*^9, 
   3.959050003414746*^9, 3.959051153955501*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"8f99909c-60ba-4fcb-bce6-98fe1ef7ea41"]
}, Open  ]]
}, Open  ]],

Cell["\<\
The image displays an interactive application that allows for the exploration \
of state transformations within the Spekkens Toy Model, contrasting the \
effects of two different sets of permutations. The interface presents two \
tabs: \[OpenCurlyDoubleQuote]Spekkens Permutations\[CloseCurlyDoubleQuote] \
and \[OpenCurlyDoubleQuote]All Permutations.\[CloseCurlyDoubleQuote] Each tab \
likely contains a graph where nodes represent 4\[Times]4 binary patterns \
(composite states) and edges denote transformations. The user can interact \
with these graphs by clicking on a state, which then highlights its entire \
connected component (a group of states reachable from each other) within that \
specific permutation set. A \[OpenCurlyDoubleQuote]Clear Selection\
\[CloseCurlyDoubleQuote] button resets the highlighting.

The provided Mathematica code sets up the foundation for this interactive \
tool. It defines the SpekkensStates as basic binary vectors and two sets of \
transformations: SpekkensPermutations (a restricted set of four cycles) and \
AllPermutations (the complete symmetric group of 24 permutations of four \
elements). The permuteComposite function is crucial for applying these \
permutations to the 4\[Times]4 composite states, which are generated by \
taking the Kronecker product of pairs of SpekkensStates. The createGraph \
function takes a set of permutations as input and builds a directed graph \
where nodes are the compositeStates and edges represent transformations \
between them. This results in two distinct graphs, graph1 (for Spekkens \
permutations) and graph2 (for all permutations), which will generally have \
different connectivity properties.\
\>", "Item",
 CellChangeTimes->{{3.793891724891276*^9, 3.793891806306624*^9}, {
   3.795737503964374*^9, 3.795737584805357*^9}, {3.795737632794353*^9, 
   3.795737653673546*^9}, {3.958573762821009*^9, 3.958573782462821*^9}, {
   3.958573868949756*^9, 3.958573894310577*^9}, {3.958606885729864*^9, 
   3.958607092174608*^9}, {3.9586072258570004`*^9, 3.958607262092358*^9}, {
   3.958607532255677*^9, 3.9586075361084538`*^9}, {3.958607697827297*^9, 
   3.958607698828539*^9}, {3.958614291748903*^9, 3.958614302436019*^9}, 
   3.958966892488077*^9, {3.9590500108223953`*^9, 
   3.959050016203421*^9}},ExpressionUUID->"719554a2-1c7b-4f15-a66d-\
c741db0376c7"],

Cell["\<\
The DynamicModule then orchestrates the interactive tabbed interface. The \
TabView allows users to switch between viewing graph1 and graph2. Both graphs \
are displayed using HighlightGraph, which dynamically highlights the \
WeaklyConnectedComponents of a selected state. When a user clicks on a state \
(represented by its 4\[Times]4 ArrayPlot within a Button), that state becomes \
selected, and its component within the currently viewed graph is highlighted \
in yellow. This dynamic interaction effectively demonstrates how the choice \
of allowed transformations drastically impacts the connectivity and the \
number of distinct components within the state space of the Spekkens Toy \
Model.\
\>", "Text",
 CellChangeTimes->{{3.7957339959966497`*^9, 3.795734054872664*^9}, 
   3.795734184382814*^9, {3.795736915102477*^9, 3.795737038982095*^9}, {
   3.79573706938791*^9, 3.795737081331661*^9}, 3.79581158942852*^9, {
   3.7958116341809053`*^9, 3.79581163418227*^9}, {3.958573532151623*^9, 
   3.958573579139818*^9}, {3.958573622534523*^9, 3.958573718642041*^9}, {
   3.958605083808388*^9, 3.958605295638154*^9}, {3.958605337953578*^9, 
   3.958605512928088*^9}, {3.958605549780453*^9, 3.958605708974288*^9}, {
   3.9586057464858837`*^9, 3.958606317246469*^9}, {3.9586063541540937`*^9, 
   3.958606427009873*^9}, {3.958606459926791*^9, 3.958606648331956*^9}, {
   3.958606718017692*^9, 3.958606735248166*^9}, {3.958606769631173*^9, 
   3.95860682387583*^9}, {3.958607136303744*^9, 3.958607137632812*^9}, {
   3.9586072056643248`*^9, 3.958607216532284*^9}, {3.958607588617208*^9, 
   3.958607666837425*^9}, {3.958614266321714*^9, 3.958614322307296*^9}, {
   3.95883908070922*^9, 3.958839140485702*^9}, {3.95883917870599*^9, 
   3.958839183948724*^9}, {3.958839413383226*^9, 3.958839448920805*^9}, {
   3.95884005973089*^9, 3.9588400758206463`*^9}, {3.958840114472005*^9, 
   3.9588401180888805`*^9}, 3.958966894471884*^9, 
   3.9590500172037487`*^9},ExpressionUUID->"9f0df7ca-d036-487e-8e5e-\
56ce76d61d13"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AllPermutations", "=", 
   RowBox[{"PermutationCycles", "/@", 
    RowBox[{"Permutations", "[", 
     RowBox[{"Range", "[", "4", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StatePlot", "[", 
    RowBox[{"state_", ",", 
     RowBox[{"size_", ":", "60"}]}], "]"}], ":=", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{"state", ",", "4"}], "]"}], ",", 
     RowBox[{"Mesh", "->", "True"}], ",", 
     RowBox[{"ImageSize", "->", "size"}], ",", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"Style", "[", 
       RowBox[{"state", ",", "8"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorPlot", "[", 
    RowBox[{"state1_", ",", "state2_", ",", 
     RowBox[{"size_", ":", "100"}]}], "]"}], ":=", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"state1", ",", "state2"}], "]"}], ",", 
     RowBox[{"Mesh", "->", "True"}], ",", 
     RowBox[{"ImageSize", "->", "size"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Tensor Product\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateStateGraph", "[", 
    RowBox[{"startState_", ",", "depth_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "graph", "}"}], ",", 
     RowBox[{
      RowBox[{"graph", "=", 
       RowBox[{"NestGraph", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"state", ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Permute", "[", 
                RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", 
              "SpekkensPermutations"}], ",", 
             RowBox[{"{", "state", "}"}]}], " ", "]"}]}], "]"}], ",", 
         RowBox[{"{", "startState", "}"}], ",", "depth", ",", 
         RowBox[{"VertexLabels", "->", 
          RowBox[{"(", 
           RowBox[{"v_", ":>", 
            RowBox[{"StatePlot", "[", 
             RowBox[{"v", ",", "40"}], "]"}]}], ")"}]}], ",", 
         RowBox[{"GraphLayout", "->", "\"\<SpringElectricalEmbedding\>\""}]}],
         "]"}]}], ";", "\n", 
      RowBox[{"HighlightGraph", "[", 
       RowBox[{"graph", ",", 
        RowBox[{"{", 
         RowBox[{"Style", "[", 
          RowBox[{"startState", ",", "Green"}], "]"}], "}"}], ",", 
        RowBox[{"GraphHighlightStyle", "->", "\"\<Thick\>\""}]}], "]"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"selectedState1", "=", 
      RowBox[{"First", "@", "SpekkensStates"}]}], ",", 
     RowBox[{"selectedState2", "=", 
      RowBox[{"First", "@", "SpekkensStates"}]}], ",", 
     RowBox[{"tensorResult", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"currentGraph", "=", 
      RowBox[{"Graph", "@", 
       RowBox[{"{", "}"}]}]}], ",", 
     RowBox[{"depth", "=", "2"}]}], "}"}], ",", 
   RowBox[{"Panel", "[", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Spekkens Toy Model State Explorer\>\"", ",", 
            "\"\<Section\>\"", ",", "Bold"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Labeled", "[", 
            RowBox[{
             RowBox[{"PopupMenu", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", "selectedState1", "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "->", 
                  RowBox[{"StatePlot", "[", 
                   RowBox[{"#", ",", "80"}], "]"}]}], "&"}], "/@", 
                "SpekkensStates"}]}], "]"}], ",", "\"\<Select State 1\>\"", 
             ",", "Top"}], "]"}], ",", 
           RowBox[{"Labeled", "[", 
            RowBox[{
             RowBox[{"PopupMenu", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", "selectedState2", "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "->", 
                  RowBox[{"StatePlot", "[", 
                   RowBox[{"#", ",", "80"}], "]"}]}], "&"}], "/@", 
                "SpekkensStates"}]}], "]"}], ",", "\"\<Select State 2\>\"", 
             ",", "Top"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Button", "[", 
           RowBox[{"\"\<Generate Tensor Product\>\"", ",", 
            RowBox[{
             RowBox[{"tensorResult", "=", 
              RowBox[{"KroneckerProduct", "[", 
               RowBox[{"selectedState1", ",", "selectedState2"}], "]"}]}], 
             ";", "\n", 
             RowBox[{"currentGraph", "=", 
              RowBox[{"GenerateStateGraph", "[", 
               RowBox[{"tensorResult", ",", "depth"}], "]"}]}]}]}], "]"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"tensorResult", "=!=", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"Panel", "[", 
              RowBox[{"Column", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<Tensor Product Result\>\"", ",", 
                   "\"\<Subsection\>\""}], "]"}], ",", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"StatePlot", "[", 
                    RowBox[{"selectedState1", ",", "60"}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\< \[CircleTimes] \>\"", ",", "24", ",", "Bold"}], 
                    "]"}], ",", 
                    RowBox[{"StatePlot", "[", 
                    RowBox[{"selectedState2", ",", "60"}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\< = \>\"", ",", "24", ",", "Bold"}], "]"}], 
                    ",", 
                    RowBox[{"TensorPlot", "[", 
                    RowBox[{
                    "selectedState1", ",", "selectedState2", ",", "120"}], 
                    "]"}]}], "}"}], "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<State Evolution Graph\>\"", ",", 
                   "\"\<Subsection\>\""}], "]"}], ",", "currentGraph"}], 
                "}"}], "]"}], "]"}]}], "]"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"depth", ",", "2", ",", "\"\<Graph Depth\>\""}], "}"}],
               ",", "1", ",", "4", ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Reset\>\"", ",", 
             RowBox[{
              RowBox[{"tensorResult", "=", 
               RowBox[{"{", "}"}]}], ";", "\n", 
              RowBox[{"currentGraph", "=", 
               RowBox[{"Graph", "@", 
                RowBox[{"{", "}"}]}]}]}]}], "]"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"Alignment", "->", "Center"}], ",", 
       RowBox[{"Spacings", "->", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"ImageSize", "->", "700"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958973486184897*^9, 3.958973486186166*^9}, {
  3.959050030179934*^9, 3.959050033481407*^9}},
 CellLabel->
  "In[3132]:=",ExpressionUUID->"2af20ffb-a4cc-418e-aceb-80370abf65ba"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`selectedState1$$ = {1, 1, 0, 
  0}, $CellContext`selectedState2$$ = {1, 1, 0, 
  0}, $CellContext`tensorResult$$ = {}, $CellContext`currentGraph$$ = 
  Graph[{}, {}], $CellContext`depth$$ = 2}, 
  PanelBox[
   TagBox[GridBox[{
      {
       StyleBox["\<\"Spekkens Toy Model State Explorer\"\>", "Section",
        StripOnInput->False,
        FontWeight->Bold], ""},
      {
       TemplateBox[{
         PopupMenuBox[
          
          Dynamic[$CellContext`selectedState1$$], {{1, 1, 0, 0} -> 
           GraphicsBox[{
              
              RasterBox[{{0, 0, 1, 1}}, {{0, 0}, {4, 1}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.5], 
                LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}]}}}, 
             BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 80, 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotLabel -> FormBox[
               StyleBox[
                RowBox[{"{", 
                  RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], 8, 
                StripOnInput -> False], TraditionalForm], 
             BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
             ImageSize -> 800], {0, 0, 1, 1} -> GraphicsBox[{
              
              RasterBox[{{1, 1, 0, 0}}, {{0, 0}, {4, 1}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.5], 
                LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}]}}}, 
             BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 80, 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotLabel -> FormBox[
               StyleBox[
                RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], 8, 
                StripOnInput -> False], TraditionalForm], 
             BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
             ImageSize -> 800], {1, 0, 1, 0} -> GraphicsBox[{
              
              RasterBox[{{0, 1, 0, 1}}, {{0, 0}, {4, 1}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.5], 
                LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}]}}}, 
             BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 80, 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotLabel -> FormBox[
               StyleBox[
                RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], 8, 
                StripOnInput -> False], TraditionalForm], 
             BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
             ImageSize -> 800], {0, 1, 0, 1} -> GraphicsBox[{
              
              RasterBox[{{1, 0, 1, 0}}, {{0, 0}, {4, 1}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.5], 
                LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}]}}}, 
             BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 80, 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotLabel -> FormBox[
               StyleBox[
                RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], 8, 
                StripOnInput -> False], TraditionalForm], 
             BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
             ImageSize -> 800], {0, 1, 1, 0} -> GraphicsBox[{
              
              RasterBox[{{1, 0, 0, 1}}, {{0, 0}, {4, 1}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.5], 
                LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}]}}}, 
             BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 80, 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotLabel -> FormBox[
               StyleBox[
                RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], 8, 
                StripOnInput -> False], TraditionalForm], 
             BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
             ImageSize -> 800], {1, 0, 0, 1} -> GraphicsBox[{
              
              RasterBox[{{0, 1, 1, 0}}, {{0, 0}, {4, 1}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.5], 
                LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}]}}}, 
             BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 80, 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotLabel -> FormBox[
               StyleBox[
                RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], 8, 
                StripOnInput -> False], TraditionalForm], 
             BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
             ImageSize -> 800]}], "\"Select State 1\""},
        "Labeled",
        DisplayFunction->(GridBox[{{
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {2, 1}]& ),
        InterpretationFunction->(RowBox[{"Labeled", "[", 
           RowBox[{#, ",", #2, ",", "Top", ",", 
             RowBox[{"{", "}"}]}], "]"}]& )], 
       TemplateBox[{
         PopupMenuBox[
          
          Dynamic[$CellContext`selectedState2$$], {{1, 1, 0, 0} -> 
           GraphicsBox[{
              
              RasterBox[{{0, 0, 1, 1}}, {{0, 0}, {4, 1}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.5], 
                LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}]}}}, 
             BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 80, 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotLabel -> FormBox[
               StyleBox[
                RowBox[{"{", 
                  RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], 8, 
                StripOnInput -> False], TraditionalForm], 
             BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
             ImageSize -> 800], {0, 0, 1, 1} -> GraphicsBox[{
              
              RasterBox[{{1, 1, 0, 0}}, {{0, 0}, {4, 1}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.5], 
                LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}]}}}, 
             BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 80, 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotLabel -> FormBox[
               StyleBox[
                RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], 8, 
                StripOnInput -> False], TraditionalForm], 
             BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
             ImageSize -> 800], {1, 0, 1, 0} -> GraphicsBox[{
              
              RasterBox[{{0, 1, 0, 1}}, {{0, 0}, {4, 1}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.5], 
                LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}]}}}, 
             BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 80, 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotLabel -> FormBox[
               StyleBox[
                RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], 8, 
                StripOnInput -> False], TraditionalForm], 
             BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
             ImageSize -> 800], {0, 1, 0, 1} -> GraphicsBox[{
              
              RasterBox[{{1, 0, 1, 0}}, {{0, 0}, {4, 1}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.5], 
                LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}]}}}, 
             BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 80, 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotLabel -> FormBox[
               StyleBox[
                RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], 8, 
                StripOnInput -> False], TraditionalForm], 
             BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
             ImageSize -> 800], {0, 1, 1, 0} -> GraphicsBox[{
              
              RasterBox[{{1, 0, 0, 1}}, {{0, 0}, {4, 1}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.5], 
                LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}]}}}, 
             BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 80, 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotLabel -> FormBox[
               StyleBox[
                RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], 8, 
                StripOnInput -> False], TraditionalForm], 
             BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
             ImageSize -> 800], {1, 0, 0, 1} -> GraphicsBox[{
              
              RasterBox[{{0, 1, 1, 0}}, {{0, 0}, {4, 1}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.5], 
                LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                 1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}]}}}, 
             BaseStyle -> {}, Frame -> True, FrameLabel -> {None, None}, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 80, 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotLabel -> FormBox[
               StyleBox[
                RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], 8, 
                StripOnInput -> False], TraditionalForm], 
             BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
             ImageSize -> 800]}], "\"Select State 2\""},
        "Labeled",
        DisplayFunction->(GridBox[{{
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {2, 1}]& ),
        InterpretationFunction->(RowBox[{"Labeled", "[", 
           RowBox[{#, ",", #2, ",", "Top", ",", 
             RowBox[{"{", "}"}]}], "]"}]& )]},
      {
       ButtonBox["\<\"Generate Tensor Product\"\>",
        Appearance->Automatic,
        BaseStyle->{FontFamily -> "Arial"},
        ButtonFunction:>($CellContext`tensorResult$$ = 
          KroneckerProduct[$CellContext`selectedState1$$, \
$CellContext`selectedState2$$]; $CellContext`currentGraph$$ = \
$CellContext`GenerateStateGraph[$CellContext`tensorResult$$, \
$CellContext`depth$$]),
        Evaluator->Automatic,
        FrameMargins->5,
        Method->"Preemptive"], ""},
      {
       DynamicBox[ToBoxes[
         If[$CellContext`tensorResult$$ =!= {}, 
          Panel[
           Column[{
             Style["Tensor Product Result", "Subsection"], 
             Row[{
               $CellContext`StatePlot[$CellContext`selectedState1$$, 60], 
               Style[" \[CircleTimes] ", 24, Bold], 
               $CellContext`StatePlot[$CellContext`selectedState2$$, 60], 
               Style[" = ", 24, Bold], 
               $CellContext`TensorPlot[$CellContext`selectedState1$$, \
$CellContext`selectedState2$$, 120]}], 
             Style[
             "State Evolution Graph", 
              "Subsection"], $CellContext`currentGraph$$}]]], StandardForm],
        ImageSizeCache->{12., {1., 5.}}], ""},
      {
       TagBox[
        DynamicBox[ToBoxes[
          Grid[{{"Graph Depth", 
             
             Manipulate`Control[{{$CellContext`depth$$, 2, "Graph Depth"}, 1, 
               4, 1}, Automatic]}}, StripOnInput -> True], StandardForm],
         ImageSizeCache->{175., {6.232574462890625, 9.767425537109375}}],
        "Control"], 
       ButtonBox["\<\"Reset\"\>",
        Appearance->Automatic,
        BaseStyle->{FontFamily -> "Arial"},
        ButtonFunction:>($CellContext`tensorResult$$ = {}; \
$CellContext`currentGraph$$ = Graph[{}]),
        Evaluator->Automatic,
        FrameMargins->5,
        Method->"Preemptive"]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{2}}}],
    "Grid"],
   ImageSize->700],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.958973486632134*^9, {3.959042061979426*^9, 3.9590420636879*^9}, 
   3.959042783495047*^9, {3.9590500221043158`*^9, 3.959050034190649*^9}},
 CellLabel->
  "Out[3138]=",ExpressionUUID->"65929fc7-9a0e-4b06-bf20-8d52d60a8162"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"vertices", "=", 
   RowBox[{"DeleteDuplicates", "[", "SpekkensStates", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"DeleteDuplicates", "@", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"UndirectedEdge", "[", 
        RowBox[{"state", ",", 
         RowBox[{"Permute", "[", 
          RowBox[{"state", ",", "perm"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"state", ",", "vertices"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"perm", ",", "SpekkensPermutations"}], "}"}]}], "]"}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"graph", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"vertices", ",", "edges", ",", 
     RowBox[{"GraphLayout", "->", "\"\<CircularEmbedding\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"selected", "=", "None"}], "}"}], ",", 
   RowBox[{"Dynamic", "@", 
    RowBox[{"Graph", "[", 
     RowBox[{"graph", ",", 
      RowBox[{"VertexStyle", "->", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"v", "->", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"v", "===", "selected"}], ",", "Yellow", ",", 
            RowBox[{
             RowBox[{"selected", "=!=", "None"}], "&&", 
             RowBox[{
              RowBox[{"GraphDistance", "[", 
               RowBox[{"graph", ",", "selected", ",", "v"}], "]"}], "==", 
              "1"}]}], ",", "LightBlue", ",", "True", ",", "White"}], "]"}]}],
          ",", 
         RowBox[{"{", 
          RowBox[{"v", ",", 
           RowBox[{"VertexList", "[", "graph", "]"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"VertexShapeFunction", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"EventHandler", "[", 
          RowBox[{
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"ArrayPlot", "[", 
              RowBox[{
               RowBox[{"Partition", "[", 
                RowBox[{"#2", ",", "2"}], "]"}], ",", 
               RowBox[{"Mesh", "->", "True"}], ",", 
               RowBox[{"ImageSize", "->", "40"}], ",", 
               RowBox[{"ColorRules", "->", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1", "->", "Black"}], ",", 
                  RowBox[{"0", "->", 
                   RowBox[{"Dynamic", "@", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"#2", "===", "selected"}], ",", "Yellow", ",", 
                    RowBox[{
                    RowBox[{"selected", "=!=", "None"}], "&&", 
                    RowBox[{
                    RowBox[{"GraphDistance", "[", 
                    RowBox[{"graph", ",", "selected", ",", "#2"}], "]"}], "==",
                     "1"}]}], ",", "LightBlue", ",", "True", ",", "White"}], 
                    "]"}]}]}]}], "}"}]}]}], "]"}], ",", "#1", ",", "Center"}],
             "]"}], ",", 
           RowBox[{"\"\<MouseClicked\>\"", ":>", 
            RowBox[{"(", 
             RowBox[{"selected", "=", "#2"}], ")"}]}]}], "]"}], "&"}], 
        ")"}]}], ",", 
      RowBox[{"VertexSize", "->", "45"}], ",", 
      RowBox[{"EdgeStyle", "->", "Gray"}], ",", 
      RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
      RowBox[{"PlotLabel", "->", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"Pane", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"selected", "===", "None"}], ",", 
              "\"\<Click any state to see transformations\>\"", ",", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Selected: \>\"", ",", 
                 RowBox[{"ArrayPlot", "[", 
                  RowBox[{
                   RowBox[{"Partition", "[", 
                    RowBox[{"selected", ",", "2"}], "]"}], ",", 
                   RowBox[{"Mesh", "->", "True"}], ",", 
                   RowBox[{"ImageSize", "->", "30"}]}], "]"}], ",", 
                 "\"\< \[RightArrow] Neighbors highlighted in blue\>\""}], 
                "}"}], "]"}]}], "]"}], ",", "14", ",", 
            RowBox[{"FontFamily", "->", "\"\<Arial\>\""}]}], "]"}], ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"{", 
            RowBox[{"400", ",", "30"}], "}"}]}]}], "]"}]}]}], ",", 
      RowBox[{"ImageSize", "->", "500"}], ",", 
      RowBox[{"Background", "->", "Transparent"}]}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.958973538291708*^9, 3.958973538292808*^9}, {
  3.9590500369850802`*^9, 3.959050051031048*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"10890e8f-ebc2-4b00-b4e7-a64611090590"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3VlXa9t58Pkzqm7qsr5CfYu6rcu6fWvUB3jfUdmxE/u4jWOPNO7ixHHs
2HHy2nHsnCS21QtJSAgEAgQIJHoBAolWCG1A9CD6RhL1HNY5OjJ7b20BkuaS
1v837DPYQqz1aGqt+cxnNXP9H//jS//t1f/ywQcffO1/k//8t//+5//XV7/6
37/1//zv8o//98Ovff6PP/yj/+///vDrf/THf/TV//N//K/y4ra896vy/49/
vgcAAAAAAKjaRw2k+rMCAFBfZFUAAGrlqflOe/8HT0RWBQAYAVkVAIBaIasC
AFArZFUAAGqFrAoAQK2QVQEAShQKBdUh1B5ZFQDQSKFQ6Mc//vGXv/zlz3/+
89/73vf+8z//8+TkpJo/7O/v/+53v7uysvLCAKampq6vr5/xh1arVQI4PT2t
8J5mzKpLS0vyuX7yk5/c3NyUv57P5+UL+sUvfvHeJQwPD8sSFhYW3vvOv/mb
v/nlL3/5rt9+//vf/9WvflVNzLUSDocl8kQi8dbf/uAHP6jm41deSPl2W+UC
79/XULLLVNPab8pmsxJMR0fHo9er/wbLDQ4Oyl8lk8k3f6VtPL/5zW+eESSA
6v36179+9erVH//xH8se99d//devHvzZn/1ZJpN579+6XC5588zMzEsCMJlM
spCjo6Nn/O0///M/y98eHh5WeE8zZtVYLKZ9ETabrfz129tbefGv/uqv3rsE
v98v7xwfH3/vO+Wrl+/9Xb+VhXz729+uIuSakfwiK52YmHjrbz/3uc9V8/Er
L6R8u61ygfcVG2p3d/fDDz/8r//6r2qW88j6+roEI0PZR69X/w2W83q98leT
k5Nv/uru7k5+JWODZwQJoEqSy2RH+5M/+ZOtra3SK//yL/8iL0q2fe+f1ySr
/vznPyerPlLKqtKTlx8KqD6rSnsuLy+fn5+/953NlVVXV1c3NjZeuJDy7bbK
Bd5XbCgtM9Y2q1b/DZYjqwJqyUhYdjTJTeUvbm9vSwfypS99qXSa9ebmRt7p
drtl/Fx+VO3NrCoVbm9vr8PhCIfDbx5GliH94OCgLGdxcVFb+Nzc3He+8x1Z
SE9Pj/RvlVcnisWi9IHyeldXl6yrPKvm8/loNPrm2F6fWVU+RYWBRCmrir/4
i78oHQd+M6u+q61kmCStUT7ekOaSRpN0I+28ubkpv724uLj/NFlIMAMDA06n
c3R09OzsrPRXWlbd2dnp7u6WtUhg0s7loaZSqUAgoH3jx8fHpde1VUgA8lv5
cvf39+VF+W9fX5+8WV6RbeCtn72UEOPxeHt7u8Rc2jDE2NjY7Oxs6Z+Xl5eS
QSTs4eFh+Tjy26WlpfcupHy7rXKBFRpKXpFVyAJ/9KMfyUe+uroqNfi79gVZ
snxrshBt+W/NquXfoLxNMqz8PDQ0pC3wXdlWy6qycPnssvz+/n757rRflWdV
2Y8kfmmc8pBkdfJtll6pvC8DeKtsNis72he+8IWpqany3lJ2olJPLklWuvFX
ZX7xi19I937/RlaVXld6ntLbvvzlL5fvttK7li/kq1/9qnRHpWPO4t/+7d8q
r05I51N6/XOf+5xU2aWsKt2C/Pz5z3/+0WfUYVaVtpXGkY+Zy+Xe+gYtq5pM
pu9///vyg9Vq1V7Xsupf/uVfav+s0FaPjh/+x3/8x6PGl/9KlXT/kCyExFOe
x0u9qPaKbCGl3/7DP/yDlo6lZ5bqrHyxMhKTDUn7Qy3RfOMb39B+9bvf/U6K
bu37Knnr8RAtIWoRlkhO135bfsBWEvcXv/jF8rDlvz//+c/fu5B3HQGusMAK
DSX5q3wtsk/dV9wXJF2Wr0X7ufIRYFmUtGT5qv/8z//8raMyLauWf1/S5pKU
7/8wq75Zt2ols2wn2j8r78sAKvjNb36j7Tgffvih9Mnlg9v7h57zb//2b+W3
8jbZ7+RXP/nJT+Sfssvf/2HvJFXnq4cTslKNSlcjQ33ZnaVb03pgLU1885vf
lJG59AY2m03++e///u+SVqSXlp+llJDhd+XVyUBdfv7e974nvZ9UPdqR6lef
ZlVJVb/85S/f7Kh1mFXvP+0zv/vd77616NCaS5Lp69evZZwgP2sVU3lWrdxW
5X2y1FZau0n1IW0loxet3UpZVfutrCKZTP7gBz+Qf8oQSItEe6esSJLF3t7e
j3/8Y/lnW1vb/cM1P1pmkT88PT2VIlRClRyh9fZaVhXSP8t2IrX5P/3TP8k/
5a9k85DKSzYV+eebR1+1hCikwJQvWhuMSZqQz3tflgSvr6+1rCdlr6xdWkxL
OuVZ9V0LeWtWrbzACg0lX4r2ff3rv/7rwcFBoVCosC/IVlpai2z8kpGrzKra
tyB1tHxr2qqlhd/ccrSsKu+XdpZSemRkRPtS5Ofqs2rlfRlAZdLPyA5eXjOK
//k//+fl5aX8Vno/bf8qVbLStcorX/va1+7/sHfSunTZl0tLliwjr0iXLj9L
ApWfZW/VfiVL+9nPfiZJUHqk8vOqlVenraLUD0uEUhy9as7zqtLsMoaR4KWH
1Jq6XCmr3n+aILTjwOVZtXJblffJP/rRj+Tn0qlzWYhUOo+yaqkNo9FoeSev
bQ+lo6DyNUkvLenm/uHqWW04VApbApZXtMtZtaxaqn1K75flawf/FxcXpbt+
s+DSPm95ltHSkBZhKQkmEgl5sfz6ZG3wUJ5V37WQt2bVygus3FCPzqtW2Be0
b00GhBU+r+bNrFpqKykbtUHp/Ru0rCqDn9IrZrNZXpExT/VZtfK+DKBKUv2F
w2HpVbTDdN/+9rel59fKQylj/7mM1tNKLijvnbTSQwrP0tu0fky7ilWWJj/L
vvzmesuzauXVyWhZ689Lqr9aqTHeXLvP57O/w29/+1vto0nWe3QHTXlWlaQp
vZ/802KxlGfVym1V6pMlhUmp8o1vfKN8+doB4VJWlYYt/UpqXm1Ypf3z1cNx
3fKzA1KsyYtS+2iHQ8sXKxXcq4fa+f7TrCqdeem3wWBQC08WKJtZ+SnIclqW
Ke/StcMp2kXppSSolZ+yxZbeJhvwo6z6roW8NatWXmDlhnqUVSvsC1qBX94s
6XS6mqz69a9/vfQrGSDJr956m4+WVUuHGu4/3ZYkt1afVSvvywAqkEGv7OCl
s5aabDZbqmW03kny7F+8QfqcR72TVlI9IulDfisd6Z/+6Z++NYbyrFp5ddK3
yP5e/rdadtBzVpXK8VUVpOsr/6vyrHr/cL5POw48Pz9fyqqV26rUJ0uGlR++
9a1vlS9fq19KWbX80lat4C3Pqj/84Q/L/1Y7Yq9lHNlOyn+lJQjt9k8tq5ZO
s2oikYgsrXTC7pvf/KZ2FrLcm5fvagc6HmVV7SSCLLD0Nkn0j7Lquxby1qxa
eYGVG+pRVq2wL7jdbvnV4OBgaTlaS743q5avWrscokJWLb/LdXFxUUuXb2bV
73//+6W3ra6ulrJq5X0ZQAXaqclHXfr9p9lqbGxMO8z1s5/9rPy3MkrXLrMp
75200eza2lrpbVKJyO6vpezvfve78tvyc4gDAwMej+fk5KQ8q1ZenXQsklzK
C96f/vSnVWbV6ttEe3+tjgBLn5l9h5GRES25aGdCyz3Kqvef9rFaEaFl1cpt
Vd4nf+UrX5EhTXk5LH9VfVZ9dDuJpELpdaUElsJNcnp5GTs5Ofnq0/N9Wlad
np4u/Va+a+0otGwGEphW85Z/Rk2VWVUr+iSJlN6m5YVnZ9XKC6zcUI+yaoV9
Qbu06c211Darll8JPzw8rK2xPKvKt/aq7LK3+4fLjEtZtfK+DKCCcDisDUpf
v35delEqo69//evyutYNvnq4+OHg4ED7rXaUT7p36aXLeyftGphSx1IsFrWi
RjvYpaXprq4u7beyZMmP0j/Lnq4dt9Qukaq8Oq1jLB09kz/RBtWlrHrz4NFn
VJtV30Vyn3Z9rBQvb/72zaxaOg5c6gwrt1V5n6wd/Cz15Nqpveqz6quy86qS
JeWff/d3fyc/a1cfBYNB7VeSZ7UTuNog7VFWlfi//OUvSxYunRzUevs3ry6r
MqtKJ68dF9UuV5bla/E8O6tWXmDlhtKK9NK0RRX2Be2vpMYvTSb20cMpy9pm
1X/8x3/UTl6XNpv5+flHR31loPWFL3xB+7Cls/xaVq28LwOo4PLyUusJJcf9
4Ac/kG7hxz/+sXZe9be//a32Hi0hyj4oP0g/r92toPWc5b2T5DjtKKWUpZIp
ZL/WdmFt75bORBYrncPvf/97+SttMKydw9K6O+moe3p6Kq9ud3dXemZZiMVi
8fl8WuovZVXtUGdT3FkjbaJ1U+86pPZmVr0vOw5cKjEqtFV5nyxfzYcffvjq
4UyZdJ7aQp6UVb/0pS+1PdC2De1WU8lQ2rFc2VQCgcDf//3fa6vQBjZv1qry
/WrBOxwO+eBa3f3m/cVVZlUh29Krh9tnJAtoJ+5ffXrz9TOyauUFVm4o7ecv
fvGLsgft7+9X3hdk69V+JYPMX/3qV9paaptVxU9/+tPOzk7tS9EuXnqUVbUx
w3e+8x1pDW1rLGXVyvEDqExGs9Ihl+4rfPVQumoJTnN7e+t0Okt3GkryLZUn
Ho/nVdmVvalUSjvS++rhBjfpYcrPmq2urpauNNbSq3bwcGVlRbuUV+s3Kqzu
/qHOKpVs8n7tCLA2+YCWVeUPH31AHWZV+eDSj5lMpne9QTr8V2+7OETraUsd
bIW2kh71VdkcO9vb29KLypciKUPyi9ZPyov3D2lFutbSKrTTfKWpceWbksX+
8Ic/1FYhf15+vkDSq2TJUuaVZFS6AEnr3svfLNH+7ne/K51o/spXvlJ+NdGj
z1h+QlYbPGiHU6S3L831JDWUvFn+qc1frWVS7SLeygsp326rXGDlhpI/LOVH
LZVX2BckN8nGr922IyuSNnlVNogtKf8GH61au1DqrfMzazHL0mSspe1okny1
O2K0o77ybWrvlJGAdlW2FuHg4OCrsvq08r4MoBqnp6dSvLxrzhbpCkrn7CqT
XViqqncNa2Ut8ts3J40/OjoqP2tTeXUnJyelw57vpcOsev/wkbV7J1/uvV/N
2NhYOBwuNa+sV+swKz+V4BFp893d3bfGLMvZ2tqqspCRt0lqq3wqvMp4pNbT
ym2N5NBXD1NnqFrg2dnZoyatsC/IBiCNVr8zlbJ8WfVbr7IuJ5uNpMt3bYqV
92UAxqTPrNpI2nlVl8sl5byMmrQqssGz+9acpPhXDyeRJUdLt7+xsfGtb33r
1TumwFWyQABoSWRVqb9KxwO1M6Ff+9rXWuCAXumgq3bR2qu3XVGsdoEA0HrI
qvcPJ52np6d///vf/+53v4tEIuXT4De1zc3N7u7uX//6136//60PFVW+QABo
MWRVAABqhawKAECtkFUBAKgVsioAALVCVgUAoFbIqgAA1ApZFQCAWiGrAgBQ
Kx81kOrPCgBAfZFVAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdCWf
z5+dne3t7W1sbCwuLi4tLaXT6Ww2e3R0dHFxIb9VHSAAAPpVLBYPDw/n5+eD
waDD4TA9MJvNTqfT7/f7fD75wWKxlF6XF6empra2tu7u7lTHDgCALkhOXF9f
j0QikjQlXUqujMVimUxmf3///Py8UCiUv1ky7+3trdSwu7u7kn/7+vqsVquk
2u7ubvnn9fW1qk8BAIBaV1dXs7OzjgfhcHhtbe3y8vKpC8nn89lsdmZmpr29
XTLs+Pi45Nx6RAsAgD5JEToxMSFJ0Ov1rqys1OokqVS4UrRKwTs0NCSlbk2W
CQCAbl1fX0ejUYvFEggENjY26rGK3d3dUChkNpuHh4c5JgwAaFWSRtva2jo7
O7PZbL3XdXh46Pf7XS7X5uZmvdcFAEAjXV1dhcNhKVHj8fijC5DqR1YUi8Wk
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
cvoY0KFcLjc5OWm322VPnJmZadLr8FX3do+pbg9UsrS0JFt7NVcXqN6OHqvm
08le7PF4mCYFUOvu7k66Gp/PJ6VrKBTa3Nxsrr1SdW/3mOr2QCWybXd0dITD
4fe+U/s2P3iBly+hfDnvDfjg4MBisbTenXRAkyoWizs7O8PDw7JjulyuWCx2
dnamOqiqaH3Otz/44Nn/a3DvB7WOj4+tVuva2lrltzVXVpWxcXt7ezQarV07
AaiNq6urhYUF2UOldO3t7V1fX9f5WddmyaoySpGefHp6enR0dGhoSNq2s7NT
2tnv9/f19cl4ZnJyMh6Py3uk229kAxrQ4uKizWar/Hi45sqqkUhEtqXWvhAL
aGpSumaz2ZGRERnV2+32iYmJo6Mj1UG9nZ6zqgxRlpeXJWNK+W8ymeS/AwMD
0gFKAp2dnU0mk5JDpYeXn8fGxiTVBoNBj8cj75Q2l1Qrr29vbxtnRqBGki9C
RjUVTnY0UVaVoa/FYmntp1YBLePm5mZlZSUQCEhX39XVJSng8vJSdVB/QJ9Z
VdotFotJQeR2uyWNSvas/sHZ0sKZTEaq2p6eHusDycut+sQEVWTAI4OcaDT6
rjnHmiWrHh4eyhiM6VCAppPL5aSflxwh6bW3t1dS7fX1teqgPqa3rCrNMjMz
I/nU6/W+fKJIKaY2NzeljJViRBpfllx9dkZlUtxJPnrXucimyKraR+BhE0BT
29nZGR0ddTgc0s+HQqH19XW1Z3P0llXj8bjkUylOa9vRSfG7uLjY2dkpoxpJ
suTWmqiQWPWfVSV42Q1lZ6x/OwGou3w+n8lkpHvXDlGGw2H5p5LrmvSWVaUR
6nprkvSlvb29MqSZmppqmVmdFTo8PHQ6nSMjI49GQTrPqtqTm8bGxqhSgRYj
hWo6nR4cHJTcqj35VNJrI6tXvWXVxnzq169fS0UsDZ5MJpvr/mIdOjo6kpaU
sUr5EQDdZlVJo/KlS0odHx8npQItTDLp+vq6ll5FKBRaWVlpwKVNxsyq9w+n
XJeWlqTO6urqOj8/b9h6W9LZ2VlfX59st/Pz89ooRZ9ZVQYA8nXb7XYe9AYY
h6RXKVelaJUO32w2BwKBeDxevxtzDJtVNVdXV1JkSanVAs9KUC6VSslG29HR
sb+/r7esKrvV9PS07FDhcFhv1+EDaAwZ8+/s7ExOTnq9XpPJ5PF4JiYmpPOv
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
    "], {{0, 371.}, {313., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{641.1437500000001, Automatic},
  ImageSizeRaw->{313., 371.},
  PlotRange->{{0, 313.}, {0, 371.}}]], "Output",
 CellChangeTimes->{
  3.9589735385646753`*^9, 3.958973600462433*^9, 3.959042069198796*^9, 
   3.959042783535449*^9, 3.959042937150959*^9, {3.959050035663289*^9, 
   3.959050051176513*^9}, 3.959051175058304*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"aecc9cbe-8c04-4a99-ae14-5d0ebb8c1ad9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AllPermutations", "=", 
   RowBox[{"PermutationCycles", "/@", 
    RowBox[{"Permutations", "[", 
     RowBox[{"Range", "[", "4", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NextStates", "[", 
    RowBox[{"state_", ",", "perms_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Permute", "[", 
      RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", "perms"}]}], 
  ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "vertices", ",", "edges", ",", "expanded", ",", "permSet", ",", "perms", 
     ",", "initialState", ",", "layout"}], "}"}], ",", 
   RowBox[{
    RowBox[{"vertices", "=", 
     RowBox[{"vertices", "/.", " ", 
      RowBox[{"_", ":>", 
       RowBox[{"{", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{"SpekkensStates", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"SpekkensStates", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "}"}]}]}]}], ";", "\n", 
    RowBox[{"edges", "=", 
     RowBox[{"{", "}"}]}], ";", "\n", 
    RowBox[{"expanded", "=", 
     RowBox[{"Association", "[", "]"}]}], ";", "\n", 
    RowBox[{"permSet", "=", "\"\<Spekkens\>\""}], ";", "\n", 
    RowBox[{"perms", "=", "SpekkensPermutations"}], ";", "\n", 
    RowBox[{"layout", "=", "Automatic"}], ";", "\n", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Permutation Set: \>\"", ",", "Bold"}], "]"}], ",", 
          RowBox[{"RadioButtonBar", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", 
             RowBox[{"permSet", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"permSet", "=", "#"}], ";", "\n", 
                 RowBox[{"perms", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"permSet", "===", "\"\<Spekkens\>\""}], ",", 
                    "SpekkensPermutations", ",", "AllPermutations"}], "]"}]}],
                  ";"}], ")"}], "&"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Spekkens\>\"", ",", "\"\<All\>\""}], "}"}], ",", 
            RowBox[{"Appearance", "->", "\"\<Vertical\>\""}]}], "]"}], ",", 
          RowBox[{"Spacer", "[", "20", "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{"\"\<Reset\>\"", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"vertices", "=", 
               RowBox[{"{", 
                RowBox[{"KroneckerProduct", "[", 
                 RowBox[{
                  RowBox[{"SpekkensStates", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"SpekkensStates", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "}"}]}], ";", 
              "\n", 
              RowBox[{"edges", "=", 
               RowBox[{"{", "}"}]}], ";", "\n", 
              RowBox[{"expanded", "=", 
               RowBox[{"<|", "|>"}]}], ";", "\n", 
              RowBox[{"layout", "=", "Automatic"}], ";"}], ")"}]}], "]"}], 
          ",", 
          RowBox[{"Spacer", "[", "20", "]"}], ",", 
          RowBox[{"PopupMenu", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", "layout", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Automatic", "->", "\"\<Automatic\>\""}], ",", 
              RowBox[{"SpringEmbedding", "->", "\"\<Spring\>\""}], ",", 
              RowBox[{"LayeredDigraphEmbedding", "->", "\"\<Layered\>\""}]}], 
             "}"}]}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"Graph", "[", 
         RowBox[{"vertices", ",", "edges", ",", 
          RowBox[{"VertexShapeFunction", "->", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Inset", "[", 
              RowBox[{
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"st", "=", "#2"}], "}"}], ",", 
                 RowBox[{"EventHandler", "[", 
                  RowBox[{
                   RowBox[{"Tooltip", "[", 
                    RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{"st", ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "50"}], ",", 
                    RowBox[{"PlotLabel", "->", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"expanded", "[", "st", "]"}], "]"}], ",", 
                    "\"\<Expanded\>\"", ",", "\"\<Click to expand\>\""}], 
                    "]"}]}]}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"MatrixForm", "[", "st", "]"}], ",", "12"}], 
                    "]"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<MouseClicked\>\"", ":>", 
                    RowBox[{"(", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{"expanded", "[", "st", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"expanded", "[", "st", "]"}], "=", "True"}], ";", 
                    "\n", 
                    RowBox[{"next", "=", 
                    RowBox[{"NextStates", "[", 
                    RowBox[{"st", ",", "perms"}], "]"}]}], ";", "\n", 
                    RowBox[{"newVs", "=", 
                    RowBox[{"Complement", "[", 
                    RowBox[{"next", ",", "vertices"}], "]"}]}], ";", "\n", 
                    RowBox[{"newEs", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DirectedEdge", "[", 
                    RowBox[{"st", ",", "#"}], "]"}], "&"}], "/@", "next"}]}], 
                    ";", "\n", 
                    RowBox[{"vertices", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"vertices", ",", "newVs"}], "]"}]}], ";", "\n", 
                    RowBox[{"edges", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"edges", ",", "newEs"}], "]"}]}], ";"}]}], "]"}], 
                    ")"}]}], "}"}]}], "]"}]}], "]"}], ",", "#1"}], "]"}], 
             "&"}], ")"}]}], ",", 
          RowBox[{"VertexSize", "->", "1.5"}], ",", 
          RowBox[{"GraphLayout", "->", "layout"}], ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"{", 
            RowBox[{"800", ",", "600"}], "}"}]}], ",", 
          RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{"\"\<Current states: \>\"", ",", 
                RowBox[{"Length", "[", "vertices", "]"}], ",", 
                "\"\< | Expanded: \>\"", ",", 
                RowBox[{"Count", "[", 
                 RowBox[{
                  RowBox[{"Values", "[", "expanded", "]"}], ",", "True"}], 
                 "]"}], ",", "\"\< | Edges: \>\"", ",", 
                RowBox[{"Length", "[", "edges", "]"}]}], "}"}], "]"}], ",", 
             "14", ",", "Bold"}], "]"}]}]}], "]"}], "]"}]}], "}"}], "]"}]}]}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.959042117822893*^9, 3.959042117824292*^9}, {
  3.959050047223716*^9, 3.959050055744604*^9}},
 CellLabel->
  "In[3157]:=",ExpressionUUID->"f1b48bac-4125-44a0-b41d-9c0ddfa98cf7"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`vertices$$ = {{{1, 1, 0, 0}, {1, 1, 0, 0}, {0,
   0, 0, 0}, {0, 0, 0, 
  0}}}, $CellContext`edges$$ = {}, $CellContext`expanded$$ = <||>, \
$CellContext`permSet$$ = "Spekkens", $CellContext`perms$$ = {
   Cycles[{}], 
   Cycles[{{1, 2}, {3, 4}}], 
   Cycles[{{1, 3}, {2, 4}}], 
   Cycles[{{1, 4}, {2, 
    3}}]}, $CellContext`initialState$$, $CellContext`layout$$ = Automatic}, 
  TagBox[GridBox[{
     {
      TemplateBox[{
        StyleBox["\"Permutation Set: \"", Bold, StripOnInput -> False], 
        InterpretationBox[
         StyleBox[
          GridBox[{{
             GridBox[{{
                RadioButtonBox[
                 
                 Dynamic[$CellContext`permSet$$, ($CellContext`permSet$$ = #; \
$CellContext`perms$$ = 
                   If[$CellContext`permSet$$ === 
                    "Spekkens", $CellContext`SpekkensPermutations, \
$CellContext`AllPermutations]; Null)& ], {"Spekkens"}, DefaultBaseStyle -> 
                 "RadioButtonBar", Appearance -> Inherited], 
                StyleBox[
                "\"Spekkens\"", "RadioButtonBarLabel", StripOnInput -> 
                 False]}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
              BaselinePosition -> {1, 2}]}, {
             GridBox[{{
                RadioButtonBox[
                 
                 Dynamic[$CellContext`permSet$$, ($CellContext`permSet$$ = #; \
$CellContext`perms$$ = 
                   If[$CellContext`permSet$$ === 
                    "Spekkens", $CellContext`SpekkensPermutations, \
$CellContext`AllPermutations]; Null)& ], {"All"}, DefaultBaseStyle -> 
                 "RadioButtonBar", Appearance -> Inherited], 
                StyleBox[
                "\"All\"", "RadioButtonBarLabel", StripOnInput -> False]}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
              BaselinePosition -> {1, 2}]}}, ColumnAlignments -> Left], 
          "Deploy"], 
         RadioButtonBar[
          
          Dynamic[$CellContext`permSet$$, ($CellContext`permSet$$ = #; \
$CellContext`perms$$ = 
            If[$CellContext`permSet$$ === 
              "Spekkens", $CellContext`SpekkensPermutations, \
$CellContext`AllPermutations]; Null)& ], {"Spekkens", "All"}, Appearance -> 
          "Vertical"]], 
        TemplateBox[{20}, "Spacer1"], 
        ButtonBox["\"Reset\"", ButtonFunction :> ($CellContext`vertices$$ = {
             KroneckerProduct[
              Part[$CellContext`SpekkensStates, 1], 
              
              Part[$CellContext`SpekkensStates, 
               1]]}; $CellContext`edges$$ = {}; $CellContext`expanded$$ = \
<||>; $CellContext`layout$$ = Automatic; Null), Appearance -> Automatic, 
         BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> Automatic, 
         FrameMargins -> 5, Method -> "Preemptive"], 
        TemplateBox[{20}, "Spacer1"], 
        PopupMenuBox[
         Dynamic[$CellContext`layout$$], {
         Automatic -> "\"Automatic\"", $CellContext`SpringEmbedding -> 
          "\"Spring\"", $CellContext`LayeredDigraphEmbedding -> 
          "\"Layered\""}]},
       "RowDefault"]},
     {
      DynamicBox[ToBoxes[
        Graph[$CellContext`vertices$$, $CellContext`edges$$, 
         VertexShapeFunction -> (Inset[
           With[{$CellContext`st$ = #2}, 
            EventHandler[
             Tooltip[
              
              ArrayPlot[$CellContext`st$, Mesh -> True, ImageSize -> 50, 
               PlotLabel -> If[
                 TrueQ[
                  $CellContext`expanded$$[$CellContext`st$]], "Expanded", 
                 "Click to expand"]], 
              Style[
               MatrixForm[$CellContext`st$], 12]], {"MouseClicked" :> If[
                Not[
                 TrueQ[
                  $CellContext`expanded$$[$CellContext`st$]]], \
$CellContext`expanded$$[$CellContext`st$] = 
                 True; $CellContext`next = \
$CellContext`NextStates[$CellContext`st$, $CellContext`perms$$]; \
$CellContext`newVs = 
                 Complement[$CellContext`next, $CellContext`vertices$$]; \
$CellContext`newEs = 
                 Map[DirectedEdge[$CellContext`st$, #]& , $CellContext`next]; \
$CellContext`vertices$$ = 
                 
                 Join[$CellContext`vertices$$, $CellContext`newVs]; \
$CellContext`edges$$ = Join[$CellContext`edges$$, $CellContext`newEs]; 
                Null]}]], #]& ), VertexSize -> 1.5, 
         GraphLayout -> $CellContext`layout$$, ImageSize -> {800, 600}, 
         PerformanceGoal -> "Quality", PlotLabel -> Style[
           Row[{"Current states: ", 
             Length[$CellContext`vertices$$], " | Expanded: ", 
             Count[
              Values[$CellContext`expanded$$], True], " | Edges: ", 
             Length[$CellContext`edges$$]}], 14, Bold]], StandardForm],
       ImageSizeCache->{500., {186., 189.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.958973546913923*^9, {3.958973577794283*^9, 3.95897360231523*^9}, {
   3.959042070833335*^9, 3.95904207838054*^9}, {3.959042114217994*^9, 
   3.959042118005293*^9}, 3.9590427835925703`*^9, 3.9590500560940123`*^9},
 CellLabel->
  "Out[3161]=",ExpressionUUID->"67a9934e-4045-4f86-8432-42f7fcfa3e47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"bipartiteStates", "=", 
   RowBox[{"Flatten", "/@", 
    RowBox[{"Outer", "[", 
     RowBox[{
     "KroneckerProduct", ",", "SpekkensStates", ",", "SpekkensStates", ",", 
      "1"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ApplyPermutation", "[", 
    RowBox[{"state_", ",", "perm_"}], "]"}], ":=", 
   RowBox[{"Permute", "[", 
    RowBox[{"state", ",", "perm"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ApplyRowPermutation", "[", 
    RowBox[{"state_", ",", "perm_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mat", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{"state", ",", "4"}], "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"mat", "=", 
       RowBox[{"mat", "[", 
        RowBox[{"[", 
         RowBox[{"PermutationList", "[", 
          RowBox[{"perm", ",", "4"}], "]"}], "]"}], "]"}]}], ";", "\n", 
      RowBox[{"Flatten", "[", "mat", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ApplyColPermutation", "[", 
    RowBox[{"state_", ",", "perm_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mat", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{"state", ",", "4"}], "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"mat", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", "mat", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"PermutationList", "[", 
           RowBox[{"perm", ",", "4"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"Flatten", "[", "mat", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetReachableStates", "[", "state_", "]"}], ":=", 
   RowBox[{"DeleteDuplicates", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "state", "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"ApplyPermutation", "[", 
         RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", 
       "SpekkensPermutations"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"ApplyRowPermutation", "[", 
         RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", 
       "SpekkensPermutations"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"ApplyColPermutation", "[", 
         RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", 
       "SpekkensPermutations"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"currentState", "=", 
      RowBox[{"First", "[", "bipartiteStates", "]"}]}], ",", 
     RowBox[{"reachableStates", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"bg", "=", "Transparent"}], ",", 
     RowBox[{"highlight", "=", "Yellow"}]}], "}"}], ",", 
   RowBox[{"Panel", "[", 
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Spekkens Toy Model: Bipartite State Explorer\>\"", ",", 
          "\"\<Section\>\""}], "]"}], ",", 
        RowBox[{"Panel", "[", 
         RowBox[{"Column", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Initial States (click to select)\>\"", ",", 
              "\"\<Subsection\>\""}], "]"}], ",", 
            RowBox[{"Grid", "[", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"MapIndexed", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"EventHandler", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"#", ",", "4"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "60"}], ",", 
                    RowBox[{"PlotLabel", "->", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#", "===", "currentState"}], ",", 
                    "\"\<\[FilledCircle]\>\"", ",", "\"\<\>\""}], "]"}]}], 
                    ",", 
                    RowBox[{"Background", "->", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#", "===", "currentState"}], ",", "highlight", 
                    ",", "bg"}], "]"}]}]}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<MouseClicked\>\"", ":>", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"currentState", "=", "#"}], ";", "\n", 
                    RowBox[{"reachableStates", "=", 
                    RowBox[{
                    "GetReachableStates", "[", "currentState", "]"}]}], ";"}],
                     ")"}]}], "}"}]}], "]"}], "&"}], ",", "bipartiteStates"}],
                 "]"}], ",", "6"}], "]"}], "]"}]}], "}"}], "]"}], "]"}], ",", 
        
        RowBox[{"Dynamic", "[", 
         RowBox[{"Panel", "[", 
          RowBox[{"Column", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Current State\>\"", ",", "\"\<Subsection\>\""}], 
              "]"}], ",", 
             RowBox[{"ArrayPlot", "[", 
              RowBox[{
               RowBox[{"Partition", "[", 
                RowBox[{"currentState", ",", "4"}], "]"}], ",", 
               RowBox[{"Mesh", "->", "True"}], ",", 
               RowBox[{"ImageSize", "->", "100"}]}], "]"}], ",", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{"\"\<Vector: \>\"", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"currentState", ",", "Bold"}], "]"}]}], "}"}], 
              "]"}]}], "}"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"Dynamic", "[", 
         RowBox[{"Panel", "[", 
          RowBox[{"Column", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Reachable States\>\"", ",", "\"\<Subsection\>\""}],
               "]"}], ",", 
             RowBox[{"Grid", "[", 
              RowBox[{
               RowBox[{"Partition", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"#", ",", "4"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "80"}], ",", 
                    RowBox[{"PlotLabel", "->", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ApplyPermutation", "[", 
                    RowBox[{"currentState", ",", "#"}], "]"}], "&"}], "/@", 
                    "SpekkensPermutations"}], ",", "#"}], "]"}], ",", 
                    "\"\<P\>\"", ",", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ApplyRowPermutation", "[", 
                    RowBox[{"currentState", ",", "#"}], "]"}], "&"}], "/@", 
                    "SpekkensPermutations"}], ",", "#"}], "]"}], ",", 
                    "\"\<R\>\"", ",", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ApplyColPermutation", "[", 
                    RowBox[{"currentState", ",", "#"}], "]"}], "&"}], "/@", 
                    "SpekkensPermutations"}], ",", "#"}], "]"}], ",", 
                    "\"\<C\>\"", ",", "True", ",", "\"\<\>\""}], "]"}]}]}], 
                    "]"}], "&"}], "/@", "reachableStates"}], ",", "6"}], 
                "]"}], ",", 
               RowBox[{"Frame", "->", "All"}]}], "]"}]}], "}"}], "]"}], "]"}],
          "]"}]}], "}"}], ",", 
      RowBox[{"Background", "->", "bg"}]}], "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958973671676222*^9, 3.958973671677388*^9}, {
  3.959050066908454*^9, 3.9590500899753237`*^9}},
 CellLabel->
  "In[3162]:=",ExpressionUUID->"3fbb3ba1-7302-4409-9560-66213c6c9688"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`currentState$$ = {1, 1, 0, 0, 1, 1, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
  1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 
  0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 
  1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
  0}, $CellContext`reachableStates$$ = {}, $CellContext`bg$$ = GrayLevel[
  0, 0], $CellContext`highlight$$ = RGBColor[1, 1, 0]}, 
  PanelBox[
   TagBox[GridBox[{
      {
       StyleBox["\<\"Spekkens Toy Model: Bipartite State Explorer\"\>", 
        "Section",
        StripOnInput->False]},
      {
       PanelBox[
        TagBox[GridBox[{
           {
            
            StyleBox["\<\"Initial States (click to select)\"\>", "Subsection",
             
             StripOnInput->False]},
           {
            TagBox[GridBox[{
               {
                TagBox[
                 DynamicBox[ToBoxes[
                   ArrayPlot[
                    
                    Partition[{1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                     0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 
                    0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 
                    0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 
                    0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 
                    0, 0, 0, 0}, 4], Mesh -> True, ImageSize -> 60, PlotLabel -> 
                    If[{1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 
                    0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 
                    0, 0} === $CellContext`currentState$$, "\[FilledCircle]", 
                    ""], Background -> 
                    If[{1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 
                    0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 
                    0, 0} === $CellContext`currentState$$, \
$CellContext`highlight$$, $CellContext`bg$$]], StandardForm],
                  ImageSizeCache->{38., {110., 112.}}],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentState$$ = {1, 1, 0, 
                    0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 
                    1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 
                    0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
                    0}; $CellContext`reachableStates$$ = \
$CellContext`GetReachableStates[$CellContext`currentState$$]; Null), Method -> 
                   "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                   True}]], 
                TagBox[
                 DynamicBox[ToBoxes[
                   ArrayPlot[
                    
                    Partition[{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0,
                     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 
                    0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 
                    1, 0, 0, 1}, 4], Mesh -> True, ImageSize -> 60, PlotLabel -> 
                    If[{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 
                    0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 
                    0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 
                    0, 1} === $CellContext`currentState$$, "\[FilledCircle]", 
                    ""], Background -> 
                    If[{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 
                    0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 
                    0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 
                    0, 1} === $CellContext`currentState$$, \
$CellContext`highlight$$, $CellContext`bg$$]], StandardForm],
                  ImageSizeCache->{38., {110., 112.}}],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 
                    0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 
                    0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 
                    0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 
                    1}; $CellContext`reachableStates$$ = \
$CellContext`GetReachableStates[$CellContext`currentState$$]; Null), Method -> 
                   "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                   True}]], 
                TagBox[
                 DynamicBox[ToBoxes[
                   ArrayPlot[
                    
                    Partition[{1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
                     0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 
                    0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 
                    0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
                    1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 
                    0, 0, 0, 0}, 4], Mesh -> True, ImageSize -> 60, PlotLabel -> 
                    If[{1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
                    1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 
                    0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 
                    0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 
                    0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 
                    0, 0} === $CellContext`currentState$$, "\[FilledCircle]", 
                    ""], Background -> 
                    If[{1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
                    1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 
                    0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 
                    0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 
                    0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 
                    0, 0} === $CellContext`currentState$$, \
$CellContext`highlight$$, $CellContext`bg$$]], StandardForm],
                  ImageSizeCache->{38., {110., 112.}}],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentState$$ = {1, 1, 0, 
                    0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 
                    0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 
                    0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 
                    0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 
                    0}; $CellContext`reachableStates$$ = \
$CellContext`GetReachableStates[$CellContext`currentState$$]; Null), Method -> 
                   "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                   True}]], 
                TagBox[
                 DynamicBox[ToBoxes[
                   ArrayPlot[
                    
                    Partition[{0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,
                     0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 
                    0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 
                    0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 
                    0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 
                    1, 0, 0, 1}, 4], Mesh -> True, ImageSize -> 60, PlotLabel -> 
                    If[{0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 
                    0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 
                    0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 
                    0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 
                    0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 
                    0, 1} === $CellContext`currentState$$, "\[FilledCircle]", 
                    ""], Background -> 
                    If[{0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 
                    0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 
                    0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 
                    0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 
                    0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 
                    0, 1} === $CellContext`currentState$$, \
$CellContext`highlight$$, $CellContext`bg$$]], StandardForm],
                  ImageSizeCache->{38., {110., 112.}}],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 
                    0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
                    1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 
                    0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 
                    0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 
                    0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 
                    1}; $CellContext`reachableStates$$ = \
$CellContext`GetReachableStates[$CellContext`currentState$$]; Null), Method -> 
                   "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                   True}]], 
                TagBox[
                 DynamicBox[ToBoxes[
                   ArrayPlot[
                    
                    Partition[{0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
                     0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 
                    0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 
                    1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 
                    0, 0, 0, 0}, 4], Mesh -> True, ImageSize -> 60, PlotLabel -> 
                    If[{0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 
                    0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 
                    0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 
                    0, 0} === $CellContext`currentState$$, "\[FilledCircle]", 
                    ""], Background -> 
                    If[{0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 
                    0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 
                    0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 
                    0, 0} === $CellContext`currentState$$, \
$CellContext`highlight$$, $CellContext`bg$$]], StandardForm],
                  ImageSizeCache->{38., {110., 112.}}],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentState$$ = {0, 0, 0, 
                    0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 
                    0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 
                    0}; $CellContext`reachableStates$$ = \
$CellContext`GetReachableStates[$CellContext`currentState$$]; Null), Method -> 
                   "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                   True}]], 
                TagBox[
                 DynamicBox[ToBoxes[
                   ArrayPlot[
                    
                    Partition[{1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,
                     0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 
                    0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
                    1, 0, 0, 1}, 4], Mesh -> True, ImageSize -> 60, PlotLabel -> 
                    If[{1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 
                    1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 
                    0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
                    0, 1} === $CellContext`currentState$$, "\[FilledCircle]", 
                    ""], Background -> 
                    If[{1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 
                    1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 
                    0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
                    0, 1} === $CellContext`currentState$$, \
$CellContext`highlight$$, $CellContext`bg$$]], StandardForm],
                  ImageSizeCache->{38., {110., 112.}}],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentState$$ = {1, 1, 0, 
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 
                    0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 
                    0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
                    1}; $CellContext`reachableStates$$ = \
$CellContext`GetReachableStates[$CellContext`currentState$$]; Null), Method -> 
                   "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                   True}]]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]]},
      {
       DynamicBox[ToBoxes[
         Panel[
          Column[{
            Style["Current State", "Subsection"], 
            ArrayPlot[
             Partition[$CellContext`currentState$$, 4], Mesh -> True, 
             ImageSize -> 100], 
            Row[{"Vector: ", 
              Style[$CellContext`currentState$$, Bold]}]}]], StandardForm],
        ImageSizeCache->{855., {196., 199.}}]},
      {
       DynamicBox[ToBoxes[
         Panel[
          Column[{
            Style["Reachable States", "Subsection"], 
            Grid[
             Partition[
              Map[ArrayPlot[
                Partition[#, 4], Mesh -> True, ImageSize -> 80, PlotLabel -> 
                Which[
                  MemberQ[
                   
                   Map[$CellContext`ApplyPermutation[$CellContext`\
currentState$$, #]& , $CellContext`SpekkensPermutations], #], "P", 
                  MemberQ[
                   
                   Map[$CellContext`ApplyRowPermutation[$CellContext`\
currentState$$, #]& , $CellContext`SpekkensPermutations], #], "R", 
                  MemberQ[
                   
                   Map[$CellContext`ApplyColPermutation[$CellContext`\
currentState$$, #]& , $CellContext`SpekkensPermutations], #], "C", True, 
                  ""]]& , $CellContext`reachableStates$$], 6], Frame -> 
             All]}]], StandardForm],
        ImageSizeCache->{103., {17., 21.}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxBackground->{"Columns" -> {{
          GrayLevel[0, 0]}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.9589736719108267`*^9, 3.959042126769046*^9, 
  3.959042783626327*^9, 3.9590500901681347`*^9},
 CellLabel->
  "Out[3169]=",ExpressionUUID->"6eec4f5a-348b-4959-8bc0-ec2214e8b851"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "  ", "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "  ", "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"Length", "[", "SpekkensStates", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{"SpekkensStates", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"s2", "=", 
         RowBox[{"Permute", "[", 
          RowBox[{"s", ",", "p"}], "]"}]}], ";", "\n", 
        RowBox[{"pos", "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"SpekkensStates", ",", "s2"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "!=", "pos"}], ",", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"edges", ",", 
             RowBox[{"i", "->", "pos"}]}], "]"}], ";"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "SpekkensPermutations"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"DeleteDuplicates", "[", "edges", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"graph", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Range", "[", "n", "]"}], ",", "edges"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"comps", "=", 
   RowBox[{"ConnectedComponents", "[", "graph", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"compIndex", "=", 
   RowBox[{"Association", "@@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"j", "->", "i"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "comps", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"comps", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"selected", "=", "None"}], "}"}], ",", 
   RowBox[{"Panel", "[", 
    RowBox[{
     RowBox[{"Column", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Spekkens Toy Model: State Explorer\>\"", ",", 
           "\"\<Section\>\"", ",", "16"}], "]"}], ",", 
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"Partition", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", "=", "i"}], "}"}], ",", 
                 RowBox[{"EventHandler", "[", 
                  RowBox[{
                   RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"SpekkensStates", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "80"}], ",", 
                    RowBox[{"ColorRules", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "->", 
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.6", ",", "1", ",", "1"}], "]"}]}], ",", 
                    RowBox[{"0", "->", "LightGray"}]}], "}"}]}], ",", 
                    RowBox[{"Epilog", "->", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"selected", "=!=", "None"}], "&&", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"comps", "[", 
                    RowBox[{"[", 
                    RowBox[{"compIndex", "[", "selected", "]"}], "]"}], "]"}],
                     ",", "i"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Yellow", ",", 
                    RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"Scaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
                    RowBox[{"Scaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "]"}]}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", "}"}]}], "]"}], "]"}]}], ",", 
                    RowBox[{"PlotLabel", "->", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{"\"\<State \>\"", ",", 
                    RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", "12"}],
                     "]"}]}]}], "]"}], ",", 
                   RowBox[{"\"\<MouseClicked\>\"", ":>", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"selected", "=", "i"}], ";"}], ")"}]}]}], "]"}]}],
                 "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ",", "3"}], "]"}], 
           ",", 
           RowBox[{"Spacings", "->", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"selected", "===", "None"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Click a state to see its orbit\>\"", ",", "\"\<Text\>\"", 
              ",", "Italic"}], "]"}], ",", 
            RowBox[{"Column", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringJoin", "[", 
                  RowBox[{"\"\<Selected: State \>\"", ",", 
                   RowBox[{"ToString", "[", "selected", "]"}]}], "]"}], ",", 
                 "Bold"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringJoin", "[", 
                  RowBox[{"\"\<Component: States \>\"", ",", 
                   RowBox[{"StringRiffle", "[", 
                    RowBox[{
                    RowBox[{"comps", "[", 
                    RowBox[{"[", 
                    RowBox[{"compIndex", "[", "selected", "]"}], "]"}], "]"}],
                     ",", "\"\< \>\""}], "]"}]}], "]"}], ",", "Italic"}], 
                "]"}]}], "}"}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"Spacings", "->", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "->", "600"}], ",", 
     RowBox[{"Background", "->", 
      RowBox[{"Lighter", "[", 
       RowBox[{"Gray", ",", "0.99"}], "]"}]}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9589736987495193`*^9, 3.9589736987507553`*^9}, {
  3.9590501062175817`*^9, 3.959050112706169*^9}},
 CellLabel->
  "In[3180]:=",ExpressionUUID->"617b121d-dc83-49ef-b838-eeaecdf92428"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`selected$$ = None}, 
  PanelBox[
   TagBox[GridBox[{
      {
       StyleBox["\<\"Spekkens Toy Model: State Explorer\"\>", "Section",
        StripOnInput->False,
        FontSize->16]},
      {
       TagBox[GridBox[{
          {
           TagBox[
            
            GraphicsBox[{
              RasterBox[{{{0.85, 0.85, 0.85}, {0.85, 0.85, 0.85}}, {{0., 
               0.40000000000000036`, 1.}, {0., 0.40000000000000036`, 1.}}}, {{
               0, 0}, {2, 2}}, {0, 1}], {
               {GrayLevel[0.5], 
                
                StyleBox[
                 LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                  0}}}],
                 Antialiasing->False]}, 
               {GrayLevel[0.5], 
                
                StyleBox[
                 LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                  2}}}],
                 Antialiasing->False]}}},
             BaseStyle->{},
             Epilog->DynamicBox[
               Typeset`ToBoxes[
                If[
                 And[$CellContext`selected$$ =!= None, 
                  MemberQ[
                   Part[$CellContext`comps, 
                    $CellContext`compIndex[$CellContext`selected$$]], 1]], {
                 Yellow, 
                  Thickness[0.01], 
                  Rectangle[
                   Scaled[{0, 0}], 
                   Scaled[{1, 1}]]}, {}], StandardForm, Graphics]],
             Frame->True,
             FrameLabel->{None, None},
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]],
             FrameTicks->{{None, None}, {None, None}},
             GridLinesStyle->Directive[
               GrayLevel[0.5, 0.4]],
             ImageSize->80,
             
             Method->{
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic},
             PlotLabel->FormBox[
               StyleBox["\"State 1\"", 12, StripOnInput -> False], 
               TraditionalForm]],
            
            EventHandlerTag[{
             "MouseClicked" :> ($CellContext`selected$$ = 1; Null), Method -> 
              "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
              True}]], 
           TagBox[
            
            GraphicsBox[{
              RasterBox[{{{0., 0.40000000000000036`, 1.}, {0., 
               0.40000000000000036`, 1.}}, {{0.85, 0.85, 0.85}, {0.85, 0.85, 
               0.85}}}, {{0, 0}, {2, 2}}, {0, 1}], {
               {GrayLevel[0.5], 
                
                StyleBox[
                 LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                  0}}}],
                 Antialiasing->False]}, 
               {GrayLevel[0.5], 
                
                StyleBox[
                 LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                  2}}}],
                 Antialiasing->False]}}},
             BaseStyle->{},
             Epilog->DynamicBox[
               Typeset`ToBoxes[
                If[
                 And[$CellContext`selected$$ =!= None, 
                  MemberQ[
                   Part[$CellContext`comps, 
                    $CellContext`compIndex[$CellContext`selected$$]], 2]], {
                 Yellow, 
                  Thickness[0.01], 
                  Rectangle[
                   Scaled[{0, 0}], 
                   Scaled[{1, 1}]]}, {}], StandardForm, Graphics]],
             Frame->True,
             FrameLabel->{None, None},
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]],
             FrameTicks->{{None, None}, {None, None}},
             GridLinesStyle->Directive[
               GrayLevel[0.5, 0.4]],
             ImageSize->80,
             
             Method->{
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic},
             PlotLabel->FormBox[
               StyleBox["\"State 2\"", 12, StripOnInput -> False], 
               TraditionalForm]],
            
            EventHandlerTag[{
             "MouseClicked" :> ($CellContext`selected$$ = 2; Null), Method -> 
              "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
              True}]], 
           TagBox[
            
            GraphicsBox[{
              RasterBox[{{{0., 0.40000000000000036`, 1.}, {0.85, 0.85, 
               0.85}}, {{0., 0.40000000000000036`, 1.}, {0.85, 0.85, 
               0.85}}}, {{0, 0}, {2, 2}}, {0, 1}], {
               {GrayLevel[0.5], 
                
                StyleBox[
                 LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                  0}}}],
                 Antialiasing->False]}, 
               {GrayLevel[0.5], 
                
                StyleBox[
                 LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                  2}}}],
                 Antialiasing->False]}}},
             BaseStyle->{},
             Epilog->DynamicBox[
               Typeset`ToBoxes[
                If[
                 And[$CellContext`selected$$ =!= None, 
                  MemberQ[
                   Part[$CellContext`comps, 
                    $CellContext`compIndex[$CellContext`selected$$]], 3]], {
                 Yellow, 
                  Thickness[0.01], 
                  Rectangle[
                   Scaled[{0, 0}], 
                   Scaled[{1, 1}]]}, {}], StandardForm, Graphics]],
             Frame->True,
             FrameLabel->{None, None},
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]],
             FrameTicks->{{None, None}, {None, None}},
             GridLinesStyle->Directive[
               GrayLevel[0.5, 0.4]],
             ImageSize->80,
             
             Method->{
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic},
             PlotLabel->FormBox[
               StyleBox["\"State 3\"", 12, StripOnInput -> False], 
               TraditionalForm]],
            
            EventHandlerTag[{
             "MouseClicked" :> ($CellContext`selected$$ = 3; Null), Method -> 
              "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
              True}]]},
          {
           TagBox[
            
            GraphicsBox[{
              RasterBox[{{{0.85, 0.85, 0.85}, {0., 0.40000000000000036`, 
               1.}}, {{0.85, 0.85, 0.85}, {0., 0.40000000000000036`, 1.}}}, {{
               0, 0}, {2, 2}}, {0, 1}], {
               {GrayLevel[0.5], 
                
                StyleBox[
                 LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                  0}}}],
                 Antialiasing->False]}, 
               {GrayLevel[0.5], 
                
                StyleBox[
                 LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                  2}}}],
                 Antialiasing->False]}}},
             BaseStyle->{},
             Epilog->DynamicBox[
               Typeset`ToBoxes[
                If[
                 And[$CellContext`selected$$ =!= None, 
                  MemberQ[
                   Part[$CellContext`comps, 
                    $CellContext`compIndex[$CellContext`selected$$]], 4]], {
                 Yellow, 
                  Thickness[0.01], 
                  Rectangle[
                   Scaled[{0, 0}], 
                   Scaled[{1, 1}]]}, {}], StandardForm, Graphics]],
             Frame->True,
             FrameLabel->{None, None},
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]],
             FrameTicks->{{None, None}, {None, None}},
             GridLinesStyle->Directive[
               GrayLevel[0.5, 0.4]],
             ImageSize->80,
             Method->{
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic},
             PlotLabel->FormBox[
               StyleBox["\"State 4\"", 12, StripOnInput -> False], 
               TraditionalForm]],
            
            EventHandlerTag[{
             "MouseClicked" :> ($CellContext`selected$$ = 4; Null), Method -> 
              "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
              True}]], 
           TagBox[
            
            GraphicsBox[{
              RasterBox[{{{0., 0.40000000000000036`, 1.}, {0.85, 0.85, 
               0.85}}, {{0.85, 0.85, 0.85}, {0., 0.40000000000000036`, 
               1.}}}, {{0, 0}, {2, 2}}, {0, 1}], {
               {GrayLevel[0.5], 
                
                StyleBox[
                 LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                  0}}}],
                 Antialiasing->False]}, 
               {GrayLevel[0.5], 
                
                StyleBox[
                 LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                  2}}}],
                 Antialiasing->False]}}},
             BaseStyle->{},
             Epilog->DynamicBox[
               Typeset`ToBoxes[
                If[
                 And[$CellContext`selected$$ =!= None, 
                  MemberQ[
                   Part[$CellContext`comps, 
                    $CellContext`compIndex[$CellContext`selected$$]], 5]], {
                 Yellow, 
                  Thickness[0.01], 
                  Rectangle[
                   Scaled[{0, 0}], 
                   Scaled[{1, 1}]]}, {}], StandardForm, Graphics]],
             Frame->True,
             FrameLabel->{None, None},
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]],
             FrameTicks->{{None, None}, {None, None}},
             GridLinesStyle->Directive[
               GrayLevel[0.5, 0.4]],
             ImageSize->80,
             
             Method->{
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic},
             PlotLabel->FormBox[
               StyleBox["\"State 5\"", 12, StripOnInput -> False], 
               TraditionalForm]],
            
            EventHandlerTag[{
             "MouseClicked" :> ($CellContext`selected$$ = 5; Null), Method -> 
              "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
              True}]], 
           TagBox[
            
            GraphicsBox[{
              RasterBox[{{{0.85, 0.85, 0.85}, {0., 0.40000000000000036`, 
               1.}}, {{0., 0.40000000000000036`, 1.}, {0.85, 0.85, 0.85}}}, {{
               0, 0}, {2, 2}}, {0, 1}], {
               {GrayLevel[0.5], 
                
                StyleBox[
                 LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                  0}}}],
                 Antialiasing->False]}, 
               {GrayLevel[0.5], 
                
                StyleBox[
                 LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                  2}}}],
                 Antialiasing->False]}}},
             BaseStyle->{},
             Epilog->DynamicBox[
               Typeset`ToBoxes[
                If[
                 And[$CellContext`selected$$ =!= None, 
                  MemberQ[
                   Part[$CellContext`comps, 
                    $CellContext`compIndex[$CellContext`selected$$]], 6]], {
                 Yellow, 
                  Thickness[0.01], 
                  Rectangle[
                   Scaled[{0, 0}], 
                   Scaled[{1, 1}]]}, {}], StandardForm, Graphics]],
             Frame->True,
             FrameLabel->{None, None},
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]],
             FrameTicks->{{None, None}, {None, None}},
             GridLinesStyle->Directive[
               GrayLevel[0.5, 0.4]],
             ImageSize->80,
             
             Method->{
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic},
             PlotLabel->FormBox[
               StyleBox["\"State 6\"", 12, StripOnInput -> False], 
               TraditionalForm]],
            
            EventHandlerTag[{
             "MouseClicked" :> ($CellContext`selected$$ = 6; Null), Method -> 
              "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
              True}]]}
         },
         AutoDelete->False,
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
        "Grid"]},
      {
       DynamicBox[ToBoxes[
         If[$CellContext`selected$$ === None, 
          Style["Click a state to see its orbit", "Text", Italic], 
          Column[{
            Style[
            "Selected: State " <> ToString[$CellContext`selected$$], Bold], 
            Style["Component: States " <> StringRiffle[
               Part[$CellContext`comps, 
                $CellContext`compIndex[$CellContext`selected$$]], " "], 
             Italic]}]], StandardForm],
        ImageSizeCache->{103., {0.11249999999999999`, 6.675}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
    "Column"],
   Background->RGBColor[0.995, 0.995, 0.995],
   ImageSize->600],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.9589736990427*^9, 3.958973752068329*^9}, 
   3.959042129989114*^9, 3.9590427837015467`*^9, {3.959050108394494*^9, 
   3.959050113164834*^9}},
 CellLabel->
  "Out[3189]=",ExpressionUUID->"c4f1ea56-b98d-4416-b75b-cda077f12c65"]
}, Open  ]],

Cell["\<\
The collection of images and associated Mathematica code represent a \
sophisticated suite of interactive tools designed to explore Robert Spekkens\
\[CloseCurlyQuote] toy model of quantum mechanics. This model provides a \
classical, epistemic framework that can reproduce various quantum phenomena, \
and these visualizations aim to make its abstract concepts more tangible and \
intuitive.

The first set of images (image_8481a9.png, image_8481e8.png, \
image_848223.png) focuses on individual state exploration and the generation \
of state evolution graphs. The user can select two initial Spekkens states, \
visualize their tensor product (a composite state), and then generate a graph \
showing the evolution of this composite state under a predefined set of \
permutations up to a certain depth. This allows for a step-by-step \
understanding of how states transform and what other states are reachable \
through successive operations. The circular graph layout and the highlighting \
of paths provide clear visual cues for understanding these transitions.

The next set of images (image_848283.png) introduces the concept of bipartite \
states, generated by the Kronecker product of two Spekkens states, and their \
reachable states. The large grid of initial states allows users to select a \
starting point, and the interface then dynamically displays the \
\[OpenCurlyDoubleQuote]Current State\[CloseCurlyDoubleQuote] and a collection \
of \[OpenCurlyDoubleQuote]Reachable States\[CloseCurlyDoubleQuote] from it. \
This highlights the concept of accessibility within the state space under the \
model\[CloseCurlyQuote]s transformation rules.

Finally, the image image_848568.png and its accompanying code streamline the \
exploration of individual Spekkens states and their \
\[OpenCurlyDoubleQuote]orbits\[CloseCurlyDoubleQuote] under permutations. \
This simplified interface presents the six fundamental Spekkens states as \
clickable entities. When a state is clicked, the application dynamically \
displays its \
\[OpenCurlyDoubleQuote]orbit\[CloseCurlyDoubleQuote]\[LongDash]all unique \
states reachable from the selected state by applying the defined \
permutations. This set of tools, collectively, provides a comprehensive and \
engaging platform for learning about and researching the Spekkens toy model, \
making complex quantum-like phenomena more approachable through interactive \
visualization.\
\>", "Text",
 CellChangeTimes->{{3.959050133546049*^9, 
  3.959050153204269*^9}},ExpressionUUID->"077cfc3f-785e-41ab-94a9-\
e4251dce0fab"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"applyPerm", "[", 
    RowBox[{"state_", ",", "perm_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pList", ",", "mat"}], "}"}], ",", 
     RowBox[{
      RowBox[{"pList", "=", 
       RowBox[{"PermutationList", "[", 
        RowBox[{"perm", ",", "4"}], "]"}]}], ";", "\n", 
      RowBox[{"mat", "=", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"state", ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"Flatten", "[", 
       RowBox[{"mat", "[", 
        RowBox[{"[", 
         RowBox[{"pList", ",", "pList"}], "]"}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"initStates", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"KroneckerProduct", "[", "##", "]"}], "]"}], "&"}], "@@@", 
    RowBox[{"Tuples", "[", 
     RowBox[{"SpekkensStates", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stateGraph", "=", 
   RowBox[{"NestGraph", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"state", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"applyPerm", "[", 
          RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", 
        "SpekkensPermutations"}]}], "]"}], ",", "initStates", ",", "2", ",", 
     RowBox[{"VertexLabels", "->", "None"}], ",", 
     RowBox[{"GraphLayout", "->", "\"\<SpringElectricalEmbedding\>\""}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"selection", "=", 
      RowBox[{"First", "[", 
       RowBox[{"VertexList", "[", "stateGraph", "]"}], "]"}]}], ",", 
     "neighbors", ",", "edgeStyleRules"}], "}"}], ",", 
   RowBox[{
    RowBox[{"neighbors", "=", 
     RowBox[{"AdjacencyList", "[", 
      RowBox[{"stateGraph", ",", "selection"}], "]"}]}], ";", "\n", 
    RowBox[{"edgeStyleRules", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"DirectedEdge", "[", 
         RowBox[{"selection", ",", "_"}], "]"}], "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Red"}], "]"}]}], ",", 
       RowBox[{"_DirectedEdge", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", "Gray"}], "]"}]}]}], "}"}]}], ";", "\n", 
    RowBox[{"Panel", "[", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EventHandler", "[", 
           RowBox[{
            RowBox[{"Graph", "[", 
             RowBox[{"stateGraph", ",", 
              RowBox[{"VertexShapeFunction", "->", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"#2", "===", "selection"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", "Red"}], "}"}], "]"}], ",", 
                    "LightRed", ",", 
                    RowBox[{"Disk", "[", 
                    RowBox[{"#1", ",", "0.05"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "Gray", "]"}], ",", "LightBlue", 
                    ",", 
                    RowBox[{"Disk", "[", 
                    RowBox[{"#1", ",", "0.03"}], "]"}]}], "}"}]}], "]"}], 
                 "&"}], ")"}]}], ",", 
              RowBox[{"EdgeStyle", "->", "edgeStyleRules"}], ",", 
              RowBox[{"VertexSize", "->", "0.1"}], ",", 
              RowBox[{"ImageSize", "->", "500"}], ",", 
              RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"\"\<MouseClicked\>\"", ":>", 
              RowBox[{"(", 
               RowBox[{"selection", "=", 
                RowBox[{
                 RowBox[{"Nearest", "[", 
                  RowBox[{
                   RowBox[{"VertexList", "[", "stateGraph", "]"}], ",", 
                   RowBox[{"MousePosition", "[", "\"\<Graphics\>\"", "]"}], 
                   ",", "1"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"Dynamic", "@", 
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Column", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<Selected State\>\"", ",", "Bold", ",", "14"}], 
                  "]"}], ",", 
                 RowBox[{"ArrayPlot", "[", 
                  RowBox[{
                   RowBox[{"Partition", "[", 
                    RowBox[{"selection", ",", "4"}], "]"}], ",", 
                   RowBox[{"Mesh", "->", "True"}], ",", 
                   RowBox[{"ImageSize", "->", "200"}], ",", 
                   RowBox[{
                   "PlotLabel", "->", "\"\<State Visualization\>\""}]}], 
                  "]"}], ",", 
                 RowBox[{"Spacer", "[", "10", "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<State Vector:\>\"", ",", "Bold"}], "]"}], ",", 
                 "selection", ",", 
                 RowBox[{"Spacer", "[", "20", "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<Neighbors:\>\"", ",", "Bold"}], "]"}], ",", 
                 RowBox[{"Column", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"#", ",", "4"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "100"}]}], "]"}], "&"}], "/@", 
                   "neighbors"}], "]"}]}], "}"}], ",", 
               RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
             RowBox[{"ImageSize", "->", "300"}]}], "]"}]}]}], "}"}], "}"}], 
       "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Spekkens Toy Model State Explorer\>\"", ",", "Bold", ",", "16"}], 
       "]"}]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958973773992133*^9, 3.958973773993476*^9}, {
  3.959050165421863*^9, 3.9590501679643*^9}},
 CellLabel->
  "In[3190]:=",ExpressionUUID->"efbc7148-2189-44a7-b520-90b63c86283f"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`selection$$ = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1, 1, 0, 0, 1, 1}, $CellContext`neighbors$$ = {{0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0, 1, 1, 0, 0, 1, 1}, {1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0}}, $CellContext`edgeStyleRules$$ = {
  DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1}, 
     Blank[]] -> Directive[
     Thickness[Large], 
     RGBColor[1, 0, 0]], Blank[DirectedEdge] -> Directive[
     Thickness[Tiny], 
     GrayLevel[0.5]]}}, 
  TemplateBox[{
    PanelBox[
     TagBox[
      GridBox[{{
         TagBox[
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[CompressedData["
1:eJxTTMoPSmJiYGBQAWIBBmTAyAjCEJIBEzBCIToXlziGflSDoTxGnOI4tWNz
IYyPUEEcD7vjMHkINioPydNQGomJpBBPGCErRNKPIoXmaFj4wMMPlxwWDyGL
I6uFi2PxIIqf0DwIAO2VAm0=
                 
                 "], {{{1, 1}, {1, 2}, {3, 3}, {3, 4}, {3, 5}, {3, 6}, {7, 
                  7}, {7, 8}, {7, 9}, {7, 10}, {8, 7}, {8, 8}, {8, 9}, {8, 
                  10}, {4, 3}, {4, 4}, {4, 5}, {4, 6}, {11, 11}, {11, 12}, {
                  13, 13}, {13, 14}, {13, 15}, {13, 16}, {17, 17}, {17, 18}, {
                  17, 19}, {17, 20}, {21, 21}, {21, 22}, {23, 23}, {23, 24}, {
                  23, 25}, {23, 26}, {27, 27}, {27, 28}, {27, 29}, {27, 30}, {
                  31, 31}, {31, 32}, {28, 27}, {28, 28}, {28, 29}, {28, 30}, {
                  33, 33}, {33, 34}, {35, 35}, {35, 36}, {24, 23}, {24, 24}, {
                  24, 25}, {24, 26}, {14, 13}, {14, 14}, {14, 15}, {14, 16}, {
                  18, 17}, {18, 18}, {18, 19}, {18, 20}, {19, 17}, {19, 18}, {
                  19, 19}, {19, 20}, {15, 13}, {15, 14}, {15, 15}, {15, 16}, {
                  12, 11}, {12, 12}, {25, 23}, {25, 24}, {25, 25}, {25, 26}, {
                  36, 35}, {36, 36}, {5, 3}, {5, 4}, {5, 5}, {5, 6}, {34, 
                  33}, {34, 34}, {29, 27}, {29, 28}, {29, 29}, {29, 30}, {9, 
                  7}, {9, 8}, {9, 9}, {9, 10}, {32, 31}, {32, 32}, {30, 27}, {
                  30, 28}, {30, 29}, {30, 30}, {10, 7}, {10, 8}, {10, 9}, {10,
                   10}, {26, 23}, {26, 24}, {26, 25}, {26, 26}, {22, 21}, {22,
                   22}, {6, 3}, {6, 4}, {6, 5}, {6, 6}, {20, 17}, {20, 18}, {
                  20, 19}, {20, 20}, {16, 13}, {16, 14}, {16, 15}, {16, 16}, {
                  2, 1}, {2, 2}}, Null}, {
                 EdgeStyle -> {
                   DirectedEdge[{1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0,
                     0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0,
                     0}, {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0,
                     0}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
                     0}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                     1}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0,
                     1}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1,
                     0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0,
                     0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1,
                     1}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1,
                     1}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0,
                     1}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
                     0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,
                     0}, {0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1,
                     1}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
                     0}, {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1,
                     1}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,
                     0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
                     0}, {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
                     0}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1,
                     0}, {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1,
                     0}, {0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
                     0}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0,
                     1}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
                     0}, {1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                     1}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                     1}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0,
                     0}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
                     0}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,
                     0}, {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0,
                     0}, {0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0,
                     0}, {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0,
                     1}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
                     1}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0,
                     1}, {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1,
                     0}, {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1,
                     1}, {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,
                     0}, {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0,
                     0}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1,
                     1}, {1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1,
                     0}, {1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0,
                     1}, {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0,
                     0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
                     1}, {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0,
                     1}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1,
                     0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0,
                     1}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
                     1}, {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1,
                     0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1,
                     0}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0,
                     0}, {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
                     0}, {0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,
                     0}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
                     0}, {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0,
                     0}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0,
                     0}, {0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0,
                     0}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0,
                     0}, {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
                     0}, {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0,
                     1}, {1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0,
                     0}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
                     0}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                     0}, {1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0,
                     1}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1,
                     0}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                     1}, {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
                     1}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0,
                     1}, {1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
                     0}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0,
                     0}, {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                     1}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1,
                     0}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                     1}, {0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0,
                     0}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0,
                     0}, {0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0,
                     1}, {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1,
                     0}, {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0,
                     1}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
                     0}, {1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0,
                     0}, {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1,
                     0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1,
                     0}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
                     0}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0,
                     0}, {0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,
                     0}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
                     0}, {0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0,
                     0}, {1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
                     0}, {0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0,
                     0}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1,
                     0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0,
                     0}, {0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0,
                     0}, {1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,
                     0}, {0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,
                     0}, {0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,
                     0}, {0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0,
                     1}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
                     0}, {1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    DirectedEdge[{0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0,
                     0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0}] -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]]}, 
                  GraphLayout -> {
                   "Dimension" -> 2, "VertexLayout" -> 
                    "SpringElectricalEmbedding"}, ImageSize -> 500, 
                  PerformanceGoal -> "Quality", VertexLabels -> {None}, 
                  VertexShapeFunction -> {
                   If[#2 === $CellContext`selection$10093863, {
                    EdgeForm[{Thick, Red}], LightRed, 
                    Disk[#, 0.05]}, {
                    EdgeForm[Gray], LightBlue, 
                    Disk[#, 0.03]}]& }, VertexSize -> {0.1}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.022692217815527493`], {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], {
                    6.1581410203237095`, -8.899980839804892}, {
                    6.3570194978613, -8.843584597344297}, {
                    6.484190122335757, -8.90254167611917}, {
                    6.484190122335758, -9.278987068261216}, {
                    6.357019497861301, -9.33794414703609}, {
                    6.1581410203237095`, -9.281547904575495}, 
                    DynamicLocation["VertexID$1", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], {
                    5.569661764855701, -9.25520511937328}, 
                    DynamicLocation["VertexID$2", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], {
                    5.569661764856111, -8.926323625007095}, 
                    DynamicLocation["VertexID$1", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], {
                    4.981182509388189, -9.281547904575495}, {
                    4.782304031850598, -9.33794414703609}, {
                    4.655133407376141, -9.278987068261216}, {
                    4.65513340737614, -8.90254167611917}, {
                    4.782304031850598, -8.843584597344297}, {
                    4.981182509388189, -8.899980839804892}, 
                    DynamicLocation["VertexID$2", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], {
                    4.7236862272172235`, -4.434633182120018}, {
                    4.905737179267182, -4.532564973939876}, {
                    4.956011677934676, -4.6634113711032}, {
                    4.69399495065546, -4.9337044858709795`}, {
                    4.561648836008636, -4.887522121219743}, {
                    4.4581046697439275`, -4.708603730259253}, 
                    DynamicLocation["VertexID$3", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], {
                    4.096102923060304, -4.659158378817197}, 
                    DynamicLocation["VertexID$4", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], {
                    4.378265266840994, -4.079872407024993}, 
                    DynamicLocation["VertexID$5", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], {
                    3.9471303123407706`, -4.228501492194007}, 
                    DynamicLocation["VertexID$6", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], {
                    4.091776137031257, -4.374066428099779}, 
                    DynamicLocation["VertexID$3", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], {
                    3.735853143916828, -4.719533993602312}, {
                    3.637864781308591, -4.9015545028442675`}, {
                    3.50700276678387, -4.951788336277739}, {
                    3.2367910913486075`, -4.689687623338137}, {
                    3.2830145826395736`, -4.557355867059593}, {
                    3.461965143121016, -4.453867307814033}, 
                    DynamicLocation["VertexID$4", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], {
                    3.9426753119777755`, -3.9439044637286997`}, 
                    DynamicLocation["VertexID$5", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], {
                    3.51154035747762, -4.092533548897403}, 
                    DynamicLocation["VertexID$6", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], {
                    4.662699059449382, -4.0753444134768575`}, 
                    DynamicLocation["VertexID$3", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], {
                    4.231435890615567, -4.224468420897934}, 
                    DynamicLocation["VertexID$4", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], {
                    4.438288715708072, -3.4488271301747595`}, {
                    4.536305496904956, -3.2668219225702892`}, {
                    4.66717535309716, -3.2166085218975424`}, {
                    4.93734610212839, -3.4787514211583908`}, {
                    4.891101949774209, -3.6110759587163708`}, {
                    4.712135233281657, -3.7145365762440985`}, 
                    DynamicLocation["VertexID$5", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], {
                    4.082463279895927, -3.793811534274604}, 
                    DynamicLocation["VertexID$6", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$6", Automatic, Center], {
                    4.227506056845814, -3.93905426550225}, 
                    DynamicLocation["VertexID$3", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$6", Automatic, Center], {
                    3.7962428880119874`, -4.088178272923188}, 
                    DynamicLocation["VertexID$4", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$6", Automatic, Center], {
                    4.078405231792721, -3.508892301131135}, 
                    DynamicLocation["VertexID$5", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$6", Automatic, Center], {
                    3.4508915640929785`, -3.7327698805020897`}, {
                    3.268916825706237, -3.634696542736818}, {
                    3.2187440975548665`, -3.5038110881716196`}, {
                    3.480970944442715, -3.233721817677148}, {
                    3.613281104431848, -3.2800070899626177`}, {
                    3.7166860999264575`, -3.459005950009557}, 
                    DynamicLocation["VertexID$6", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$7", Automatic, Center], {
                    1.998807437488381, -1.7118422205778054`}, {
                    2.180858389538339, -1.809774012397664}, {
                    2.231132888205832, -1.9406204095609878`}, {
                    1.969116160926616, -2.2109135243287668`}, {
                    1.836770046279792, -2.16473115967753}, {
                    1.7332258800150842`, -1.98581276871704}, 
                    DynamicLocation["VertexID$7", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$7", Automatic, Center], {
                    1.37122413333148, -1.9363674172750769`}, 
                    DynamicLocation["VertexID$8", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$7", Automatic, Center], {
                    1.65338647711215, -1.3570814454828206`}, 
                    DynamicLocation["VertexID$9", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$7", Automatic, Center], {
                    1.2222515226118917`, -1.505710530651743}, 
                    DynamicLocation["VertexID$10", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$8", Automatic, Center], {
                    1.3668973473021917`, -1.6512754665575875`}, 
                    DynamicLocation["VertexID$7", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$8", Automatic, Center], {
                    1.0109743541879848`, -1.996743032060098}, {
                    0.9129859915797482, -2.178763541302054}, {
                    0.7821239770550271, -2.228997374735525}, {
                    0.5119123016197644, -1.9668966617959236`}, {
                    0.5581357929107308, -1.8345649055173796`}, {
                    0.7370863533921729, -1.731076346271819}, 
                    DynamicLocation["VertexID$8", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$8", Automatic, Center], {
                    1.2177965222490421`, -1.2211135021864283`}, 
                    DynamicLocation["VertexID$9", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$8", Automatic, Center], {
                    0.7866615677487775, -1.3697425873553164`}, 
                    DynamicLocation["VertexID$10", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$9", Automatic, Center], {
                    1.9378202697205562`, -1.352553451934743}, 
                    DynamicLocation["VertexID$7", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$9", Automatic, Center], {
                    1.506557100886732, -1.5016774593557825`}, 
                    DynamicLocation["VertexID$8", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$9", Automatic, Center], {
                    1.7134099259792295`, -0.7260361686325457}, {
                    1.8114267071761136`, -0.5440309610280756}, {
                    1.9422965633683182`, -0.49381756035532925`}, {
                    2.212467312399547, -0.7559604596161784}, {
                    2.166223160045366, -0.8882849971741587}, {
                    1.9872564435528137`, -0.9917456147018855}, 
                    DynamicLocation["VertexID$9", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$9", Automatic, Center], {
                    1.357584490167148, -1.071020572732447}, 
                    DynamicLocation["VertexID$10", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$10", Automatic, Center], {
                    1.5026272671169574`, -1.2162633039600437`}, 
                    DynamicLocation["VertexID$7", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$10", Automatic, Center], {
                    1.0713640982831425`, -1.3653873113811172`}, 
                    DynamicLocation["VertexID$8", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$10", Automatic, Center], {
                    1.3535264420638133`, -0.786101339588881}, 
                    DynamicLocation["VertexID$9", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$10", Automatic, Center], {
                    0.7260127743641358, -1.0099789189598762`}, {
                    0.5440380359773941, -0.9119055811946046}, {
                    0.49386530782602334`, -0.7810201266294058}, {
                    0.7560921547138718, -0.5109308561349343}, {
                    0.8884023147030049, -0.5572161284204038}, {
                    0.9918073101976146, -0.7362149884673435}, 
                    DynamicLocation["VertexID$10", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$11", Automatic, Center], {
                    7.460628322489001, -2.77370117633491}, {
                    7.659506800026591, -2.717304933874316}, {
                    7.786677424501049, -2.7762620126491893`}, {
                    7.7866774245010495`, -3.1527074047912356`}, {
                    7.659506800026592, -3.211664483566109}, {
                    7.460628322489001, -3.1552682411055146`}, 
                    DynamicLocation["VertexID$11", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$11", Automatic, Center], {
                    6.872149067021145, -3.128925455903388}, 
                    DynamicLocation["VertexID$12", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$12", Automatic, Center], {
                    6.8721490670211445`, -2.8000439615370687`}, 
                    DynamicLocation["VertexID$11", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$12", Automatic, Center], {
                    6.28366981155348, -3.155268241105515}, {
                    6.084791334015889, -3.2116644835661092`}, {
                    5.957620709541432, -3.152707404791236}, {
                    5.957620709541431, -2.7762620126491897`}, {
                    6.084791334015889, -2.7173049338743165`}, {
                    6.28366981155348, -2.7737011763349106`}, 
                    DynamicLocation["VertexID$12", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$13", Automatic, Center], {
                    1.998807437488381, -7.157424143662232}, {
                    2.180858389538339, -7.25535593548209}, {
                    2.231132888205832, -7.386202332645414}, {
                    1.969116160926616, -7.656495447413193}, {
                    1.836770046279792, -7.610313082761956}, {
                    1.7332258800150842`, -7.431394691801466}, 
                    DynamicLocation["VertexID$13", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$13", Automatic, Center], {
                    1.3712241333315298`, -7.381949340359527}, 
                    DynamicLocation["VertexID$14", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$13", Automatic, Center], {
                    1.6533864771121605`, -6.802663368567339}, 
                    DynamicLocation["VertexID$15", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$13", Automatic, Center], {
                    1.2222515226118906`, -6.951292453736182}, 
                    DynamicLocation["VertexID$16", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$14", Automatic, Center], {
                    1.3668973473020627`, -7.096857389642021}, 
                    DynamicLocation["VertexID$13", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$14", Automatic, Center], {
                    1.0109743541879848`, -7.4423249551445245`}, {
                    0.9129859915797482, -7.62434546438648}, {
                    0.7821239770550271, -7.674579297819951}, {
                    0.5119123016197644, -7.41247858488035}, {
                    0.5581357929107308, -7.280146828601806}, {
                    0.7370863533921729, -7.1766582693562455`}, 
                    DynamicLocation["VertexID$14", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$14", Automatic, Center], {
                    1.217796522249036, -6.6666954252708255`}, 
                    DynamicLocation["VertexID$15", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$14", Automatic, Center], {
                    0.7866615677487675, -6.815324510439767}, 
                    DynamicLocation["VertexID$16", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$15", Automatic, Center], {
                    1.9378202697205584`, -6.798135375019194}, 
                    DynamicLocation["VertexID$13", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$15", Automatic, Center], {
                    1.506557100886707, -6.947259382440235}, 
                    DynamicLocation["VertexID$14", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$15", Automatic, Center], {
                    1.7134099259792297`, -6.171618091716972}, {
                    1.811426707176114, -5.9896128841125025`}, {
                    1.9422965633683187`, -5.9393994834397565`}, {
                    2.2124673123995473`, -6.201542382700606}, {
                    2.166223160045366, -6.333866920258586}, {
                    1.9872564435528137`, -6.437327537786313}, 
                    DynamicLocation["VertexID$15", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$15", Automatic, Center], {
                    1.3575844901671414`, -6.5166024958168896`}, 
                    DynamicLocation["VertexID$16", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$16", Automatic, Center], {
                    1.5026272671169842`, -6.661845227044498}, 
                    DynamicLocation["VertexID$13", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$16", Automatic, Center], {
                    1.0713640982831407`, -6.810969234465457}, 
                    DynamicLocation["VertexID$14", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$16", Automatic, Center], {
                    1.3535264420638193`, -6.2316832626733065`}, 
                    DynamicLocation["VertexID$15", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$16", Automatic, Center], {
                    0.7260127743641358, -6.455560842044303}, {
                    0.5440380359773941, -6.357487504279031}, {
                    0.49386530782602334`, -6.226602049713832}, {
                    0.7560921547138718, -5.956512779219361}, {
                    0.8884023147030049, -6.00279805150483}, {
                    0.9918073101976146, -6.1817969115517695`}, 
                    DynamicLocation["VertexID$16", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$17", Automatic, Center], {
                    4.723686227217224, -7.157424143662232}, {
                    4.905737179267183, -7.25535593548209}, {
                    4.956011677934676, -7.386202332645414}, {
                    4.693994950655459, -7.656495447413193}, {
                    4.561648836008636, -7.610313082761956}, {
                    4.4581046697439275`, -7.431394691801466}, 
                    DynamicLocation["VertexID$17", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$17", Automatic, Center], {
                    4.096102923060481, -7.381949340359619}, 
                    DynamicLocation["VertexID$18", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$17", Automatic, Center], {
                    4.378265266840896, -6.8026633685673925`}, 
                    DynamicLocation["VertexID$19", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$17", Automatic, Center], {
                    3.9471303123407626`, -6.951292453736217}, 
                    DynamicLocation["VertexID$20", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$18", Automatic, Center], {
                    4.091776137030962, -7.096857389642056}, 
                    DynamicLocation["VertexID$17", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$18", Automatic, Center], {
                    3.735853143916828, -7.4423249551445245`}, {
                    3.637864781308591, -7.62434546438648}, {
                    3.50700276678387, -7.674579297819951}, {
                    3.2367910913486075`, -7.41247858488035}, {
                    3.2830145826395736`, -7.280146828601806}, {
                    3.461965143121016, -7.1766582693562455`}, 
                    DynamicLocation["VertexID$18", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$18", Automatic, Center], {
                    3.942675311977885, -6.6666954252708575`}, 
                    DynamicLocation["VertexID$19", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$18", Automatic, Center], {
                    3.511540357477669, -6.815324510439571}, 
                    DynamicLocation["VertexID$20", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$19", Automatic, Center], {
                    4.662699059449297, -6.7981353750190285`}, 
                    DynamicLocation["VertexID$17", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$19", Automatic, Center], {
                    4.231435890615607, -6.947259382440234}, 
                    DynamicLocation["VertexID$18", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$19", Automatic, Center], {
                    4.438288715708073, -6.171618091716972}, {
                    4.536305496904958, -5.9896128841125025`}, {
                    4.667175353097162, -5.9393994834397565`}, {
                    4.937346102128391, -6.201542382700606}, {
                    4.891101949774209, -6.333866920258586}, {
                    4.712135233281657, -6.437327537786313}, 
                    DynamicLocation["VertexID$19", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$19", Automatic, Center], {
                    4.082463279895845, -6.51660249581693}, 
                    DynamicLocation["VertexID$20", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$20", Automatic, Center], {
                    4.2275060568458125`, -6.661845227044497}, 
                    DynamicLocation["VertexID$17", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$20", Automatic, Center], {
                    3.796242888011973, -6.81096923446517}, 
                    DynamicLocation["VertexID$18", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$20", Automatic, Center], {
                    4.078405231792938, -6.231683262673267}, 
                    DynamicLocation["VertexID$19", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$20", Automatic, Center], {
                    3.4508915640929785`, -6.455560842044303}, {
                    3.268916825706237, -6.357487504279031}, {
                    3.2187440975548665`, -6.226602049713832}, {
                    3.480970944442715, -5.956512779219361}, {
                    3.613281104431848, -6.00279805150483}, {
                    3.7166860999264575`, -6.1817969115517695`}, 
                    DynamicLocation["VertexID$20", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$21", Automatic, Center], {
                    7.460628322489001, -4.815794397491571}, {
                    7.659506800026591, -4.759398155030976}, {
                    7.786677424501049, -4.818355233805849}, {
                    7.7866774245010495`, -5.194800625947895}, {
                    7.659506800026592, -5.253757704722769}, {
                    7.460628322489001, -5.197361462262175}, 
                    DynamicLocation["VertexID$21", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$21", Automatic, Center], {
                    6.872149067020941, -5.171018677060062}, 
                    DynamicLocation["VertexID$22", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$22", Automatic, Center], {
                    6.872149067020941, -4.842137182693743}, 
                    DynamicLocation["VertexID$21", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$22", Automatic, Center], {
                    6.28366981155348, -5.197361462262175}, {
                    6.084791334015889, -5.253757704722769}, {
                    5.957620709541432, -5.194800625947895}, {
                    5.957620709541431, -4.81835523380585}, {
                    6.084791334015889, -4.759398155030976}, {
                    6.28366981155348, -4.81579439749157}, 
                    DynamicLocation["VertexID$22", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$23", Automatic, Center], {
                    1.998807437488381, -4.434633182120019}, {
                    2.180858389538339, -4.532564973939877}, {
                    2.231132888205832, -4.6634113711032015`}, {
                    1.969116160926616, -4.93370448587098}, {
                    1.836770046279792, -4.887522121219743}, {
                    1.7332258800150842`, -4.708603730259253}, 
                    DynamicLocation["VertexID$23", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$23", Automatic, Center], {
                    1.3712241333314523`, -4.659158378817274}, 
                    DynamicLocation["VertexID$24", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$23", Automatic, Center], {
                    1.6533864771121525`, -4.079872407025085}, 
                    DynamicLocation["VertexID$25", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$23", Automatic, Center], {
                    1.2222515226118733`, -4.228501492193928}, 
                    DynamicLocation["VertexID$26", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$24", Automatic, Center], {
                    1.36689734730216, -4.374066428099822}, 
                    DynamicLocation["VertexID$23", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$24", Automatic, Center], {
                    1.0109743541879848`, -4.719533993602312}, {
                    0.9129859915797482, -4.9015545028442675`}, {
                    0.7821239770550271, -4.951788336277739}, {
                    0.5119123016197644, -4.689687623338137}, {
                    0.5581357929107308, -4.557355867059593}, {
                    0.7370863533921729, -4.453867307814033}, 
                    DynamicLocation["VertexID$24", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$24", Automatic, Center], {
                    1.2177965222490306`, -3.9439044637286527`}, 
                    DynamicLocation["VertexID$25", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$24", Automatic, Center], {
                    0.7866615677487694, -4.092533548897549}, 
                    DynamicLocation["VertexID$26", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$25", Automatic, Center], {
                    1.9378202697205347`, -4.075344413476886}, 
                    DynamicLocation["VertexID$23", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$25", Automatic, Center], {
                    1.506557100886719, -4.224468420898004}, 
                    DynamicLocation["VertexID$24", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$25", Automatic, Center], {
                    1.7134099259792295`, -3.448827130174759}, {
                    1.8114267071761136`, -3.2668219225702892`}, {
                    1.9422965633683182`, -3.216608521897543}, {
                    2.212467312399547, -3.478751421158392}, {
                    2.166223160045366, -3.611075958716372}, {
                    1.9872564435528137`, -3.714536576244099}, 
                    DynamicLocation["VertexID$25", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$25", Automatic, Center], {
                    1.3575844901671736`, -3.7938115342746745`}, 
                    DynamicLocation["VertexID$26", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$26", Automatic, Center], {
                    1.5026272671169405`, -3.9390542655022616`}, 
                    DynamicLocation["VertexID$23", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$26", Automatic, Center], {
                    1.07136409828313, -4.0881782729233205`}, 
                    DynamicLocation["VertexID$24", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$26", Automatic, Center], {
                    1.353526442063852, -3.5088923011310906`}, 
                    DynamicLocation["VertexID$25", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$26", Automatic, Center], {
                    0.7260127743641358, -3.7327698805020897`}, {
                    0.5440380359773941, -3.634696542736818}, {
                    0.49386530782602334`, -3.5038110881716196`}, {
                    0.7560921547138718, -3.233721817677148}, {
                    0.8884023147030049, -3.2800070899626177`}, {
                    0.9918073101976146, -3.459005950009557}, 
                    DynamicLocation["VertexID$26", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$27", Automatic, Center], {
                    4.723686227217224, -1.7118422205778054`}, {
                    4.905737179267183, -1.809774012397664}, {
                    4.956011677934676, -1.9406204095609878`}, {
                    4.693994950655459, -2.2109135243287668`}, {
                    4.561648836008636, -2.16473115967753}, {
                    4.4581046697439275`, -1.98581276871704}, 
                    DynamicLocation["VertexID$27", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$27", Automatic, Center], {
                    4.096102923060313, -1.9363674172750587`}, 
                    DynamicLocation["VertexID$28", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$27", Automatic, Center], {
                    4.378265266840981, -1.357081445482854}, 
                    DynamicLocation["VertexID$29", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$27", Automatic, Center], {
                    3.9471303123407244`, -1.5057105306517435`}, 
                    DynamicLocation["VertexID$30", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$28", Automatic, Center], {
                    4.091776137031078, -1.6512754665575828`}, 
                    DynamicLocation["VertexID$27", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$28", Automatic, Center], {
                    3.735853143916828, -1.996743032060098}, {
                    3.637864781308591, -2.178763541302054}, {
                    3.50700276678387, -2.228997374735525}, {
                    3.2367910913486075`, -1.9668966617959236`}, {
                    3.2830145826395736`, -1.8345649055173796`}, {
                    3.461965143121016, -1.731076346271819}, 
                    DynamicLocation["VertexID$28", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$28", Automatic, Center], {
                    3.9426753119779074`, -1.2211135021863992`}, 
                    DynamicLocation["VertexID$29", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$28", Automatic, Center], {
                    3.511540357477621, -1.3697425873552898`}, 
                    DynamicLocation["VertexID$30", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$29", Automatic, Center], {
                    4.662699059449398, -1.3525534519346678`}, 
                    DynamicLocation["VertexID$27", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$29", Automatic, Center], {
                    4.231435890615559, -1.501677459355807}, 
                    DynamicLocation["VertexID$28", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$29", Automatic, Center], {
                    4.438288715708072, -0.7260361686325457}, {
                    4.536305496904957, -0.5440309610280756}, {
                    4.667175353097161, -0.49381756035532925`}, {
                    4.93734610212839, -0.7559604596161784}, {
                    4.8911019497742085`, -0.8882849971741587}, {
                    4.712135233281656, -0.9917456147018855}, 
                    DynamicLocation["VertexID$29", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$29", Automatic, Center], {
                    4.082463279895985, -1.0710205727324378`}, 
                    DynamicLocation["VertexID$30", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$30", Automatic, Center], {
                    4.227506056845788, -1.2162633039600306`}, 
                    DynamicLocation["VertexID$27", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$30", Automatic, Center], {
                    3.7962428880119865`, -1.3653873113810862`}, 
                    DynamicLocation["VertexID$28", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$30", Automatic, Center], {
                    4.078405231792631, -0.7861013395888813}, 
                    DynamicLocation["VertexID$29", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$30", Automatic, Center], {
                    3.4508915640929785`, -1.0099789189598762`}, {
                    3.268916825706237, -0.9119055811946046}, {
                    3.2187440975548665`, -0.7810201266294058}, {
                    3.480970944442715, -0.5109308561349343}, {
                    3.613281104431848, -0.5572161284204038}, {
                    3.7166860999264575`, -0.7362149884673435}, 
                    DynamicLocation["VertexID$30", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$31", Automatic, Center], {
                    7.460628322489001, -6.857887618648231}, {
                    7.659506800026591, -6.801491376187636}, {
                    7.786677424501049, -6.860448454962509}, {
                    7.7866774245010495`, -7.236893847104556}, {
                    7.659506800026592, -7.29585092587943}, {
                    7.460628322489001, -7.239454683418836}, 
                    DynamicLocation["VertexID$31", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$31", Automatic, Center], {
                    6.87214906702094, -7.213111898216689}, 
                    DynamicLocation["VertexID$32", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$32", Automatic, Center], {
                    6.872149067020942, -6.88423040385037}, 
                    DynamicLocation["VertexID$31", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$32", Automatic, Center], {
                    6.28366981155348, -7.239454683418836}, {
                    6.084791334015889, -7.29585092587943}, {
                    5.957620709541432, -7.236893847104556}, {
                    5.957620709541431, -6.86044845496251}, {
                    6.084791334015889, -6.801491376187636}, {
                    6.28366981155348, -6.85788761864823}, 
                    DynamicLocation["VertexID$32", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$33", Automatic, Center], {
                    2.010870743031313, -8.899980839804892}, {
                    2.209749220568904, -8.843584597344297}, {
                    2.3369198450433615`, -8.90254167611917}, {
                    2.3369198450433615`, -9.278987068261216}, {
                    2.2097492205689044`, -9.33794414703609}, {
                    2.0108707430313135`, -9.281547904575495}, 
                    DynamicLocation["VertexID$33", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$33", Automatic, Center], {
                    1.4223914875635852`, -9.255205119373269}, 
                    DynamicLocation["VertexID$34", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$34", Automatic, Center], {
                    1.4223914875634798`, -8.926323625007042}, 
                    DynamicLocation["VertexID$33", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$34", Automatic, Center], {
                    0.8339122320957922, -9.281547904575495}, {
                    0.6350337545582014, -9.33794414703609}, {
                    0.5078631300837442, -9.278987068261216}, {
                    0.5078631300837442, -8.90254167611917}, {
                    0.6350337545582014, -8.843584597344297}, {
                    0.8339122320957922, -8.899980839804892}, 
                    DynamicLocation["VertexID$34", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$35", Automatic, Center], {
                    7.460628322489001, -0.7316079551782504}, {
                    7.659506800026591, -0.675211712717656}, {
                    7.786677424501049, -0.7341687914925292}, {
                    7.7866774245010495`, -1.1106141836345755`}, {
                    7.659506800026592, -1.1695712624094488`}, {
                    7.460628322489001, -1.1131750199488548`}, 
                    DynamicLocation["VertexID$35", Automatic, Center]}, 
                    SplineDegree -> 7]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$35", Automatic, Center], {
                    6.872149067021232, -1.0868322347466628`}, 
                    DynamicLocation["VertexID$36", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$36", Automatic, Center], {
                    6.872149067021284, -0.7579507403804259}, 
                    DynamicLocation["VertexID$35", Automatic, Center]}]]}, {
                  GrayLevel[0.5], 
                  Thickness[Tiny], 
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$36", Automatic, Center], {
                    6.28366981155348, -1.113175019948855}, {
                    6.084791334015889, -1.1695712624094492`}, {
                    5.957620709541432, -1.110614183634576}, {
                    5.957620709541431, -0.7341687914925297}, {
                    6.084791334015889, -0.6752117127176565}, {
                    6.28366981155348, -0.7316079551782505}, 
                    DynamicLocation["VertexID$36", Automatic, Center]}, 
                    SplineDegree -> 7]]}}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 TagBox[{
                   RGBColor[1, 0.85, 0.85], 
                   EdgeForm[{
                    RGBColor[1, 0, 0], 
                    Thickness[Large]}], 
                   DiskBox[{6.069661764855949, -9.090764372190193}, 0.05]}, 
                  "DynamicName", BoxID -> "VertexID$1"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{5.069661764855949, -9.090764372190193}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$2"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{4.527366091894134, -4.510034371396226}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$3"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{3.660512968197202, -4.523190435520874}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$4"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{4.513598234396253, -3.6451824491057665`}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$5"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{3.647270277292396, -3.6575213862999862`}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$6"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   
                   DiskBox[{1.8024873021652907`, -1.7872434098540126`}, 
                    0.03]}, "DynamicName", BoxID -> "VertexID$7"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0.9356341784683593, -1.8003994739786604`}, 0.03]},
                   "DynamicName", BoxID -> "VertexID$8"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{1.7887194446674097`, -0.9223914875635529}, 0.03]},
                   "DynamicName", BoxID -> "VertexID$9"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0.9223914875635528, -0.9347304247577725}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$10"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{7.37214906702124, -2.964484708720213}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$11"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{6.37214906702124, -2.964484708720213}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$12"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{1.8024873021652907`, -7.232825332938439}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$13"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0.9356341784683593, -7.245981397063087}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$14"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{1.7887194446674097`, -6.36797341064798}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$15"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0.9223914875635528, -6.380312347842199}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$16"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{4.527366091894134, -7.232825332938439}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$17"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{3.660512968197202, -7.245981397063087}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$18"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{4.513598234396253, -6.36797341064798}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$19"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{3.647270277292396, -6.380312347842199}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$20"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{7.37214906702124, -5.0065779298768724`}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$21"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{6.37214906702124, -5.0065779298768724`}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$22"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{1.8024873021652907`, -4.510034371396226}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$23"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0.9356341784683593, -4.523190435520874}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$24"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   
                   DiskBox[{1.7887194446674097`, -3.6451824491057665`}, 
                    0.03]}, "DynamicName", BoxID -> "VertexID$25"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0.9223914875635528, -3.6575213862999862`}, 0.03]},
                   "DynamicName", BoxID -> "VertexID$26"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{4.527366091894134, -1.7872434098540126`}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$27"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{3.660512968197202, -1.8003994739786604`}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$28"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{4.513598234396253, -0.9223914875635529}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$29"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{3.647270277292396, -0.9347304247577725}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$30"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{7.37214906702124, -7.048671151033533}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$31"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{6.37214906702124, -7.048671151033533}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$32"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{1.9223914875635528`, -9.090764372190193}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$33"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0.9223914875635528, -9.090764372190193}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$34"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{7.37214906702124, -0.9223914875635528}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$35"], 
                 TagBox[{
                   RGBColor[0.87, 0.94, 1], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{6.37214906702124, -0.9223914875635528}, 0.03]}, 
                  "DynamicName", BoxID -> "VertexID$36"]}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], BaseStyle -> {}, 
           DefaultBaseStyle -> "NetworkGraphics", FormatType -> 
           TraditionalForm, FrameTicks -> None, ImageSize -> 500], 
          
          EventHandlerTag[{
           "MouseClicked" :> ($CellContext`selection$$ = Part[
               Nearest[
                VertexList[$CellContext`stateGraph], 
                MousePosition["Graphics"], 1], 1]), Method -> "Preemptive", 
            PassEventsDown -> Automatic, PassEventsUp -> True}]], 
         DynamicBox[
          ToBoxes[
           Panel[
            Column[{
              Style["Selected State", Bold, 14], 
              ArrayPlot[
               Partition[$CellContext`selection$$, 4], Mesh -> True, 
               ImageSize -> 200, PlotLabel -> "State Visualization"], 
              Spacer[10], 
              Style["State Vector:", Bold], $CellContext`selection$$, 
              Spacer[20], 
              Style["Neighbors:", Bold], 
              Column[
               Map[ArrayPlot[
                 Partition[#, 4], Mesh -> True, ImageSize -> 
                 100]& , $CellContext`neighbors$$]]}, Alignment -> Center], 
            ImageSize -> 300], StandardForm], 
          ImageSizeCache -> {188., {167., 171.}}]}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
    StyleBox[
    "\"Spekkens Toy Model State Explorer\"", Bold, 16, StripOnInput -> False]},
   "Labeled",
   DisplayFunction->(GridBox[{{
       ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
        "PanelLabel"]}, {
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      BaselinePosition -> {2, 1}]& ),
   InterpretationFunction->(RowBox[{"Labeled", "[", 
      RowBox[{#, ",", 
        RowBox[{"{", #2, "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"{", 
            RowBox[{"Top", ",", "Left"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{
            RowBox[{"DefaultLabelStyle", "\[Rule]", "\"PanelLabel\""}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
            RowBox[{"Spacings", "\[Rule]", "Automatic"}]}], "}"}]}], "]"}]& )],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.958973774205867*^9, 3.959042131396319*^9, 
  3.959042783754019*^9, 3.959050168982828*^9},
 CellLabel->
  "Out[3195]=",ExpressionUUID->"3080404c-89f8-4e29-81aa-340ccb949f74"]
}, Open  ]],

Cell["\<\
The image displays an interactive \[OpenCurlyDoubleQuote]Spekkens Toy Model \
State Explorer\[CloseCurlyDoubleQuote] with a large graph on the left and a \
detailed information panel on the right. The graph consists of numerous \
nodes, some of which are highlighted (one in red, some in light blue), and \
interconnected by gray and red lines. These nodes represent states, likely \
composite states from the Spekkens model. The right panel, titled \
\[OpenCurlyDoubleQuote]Selected State,\[CloseCurlyDoubleQuote] shows a larger \
4\[Times]4 binary pattern corresponding to the currently selected node, its \
\[OpenCurlyDoubleQuote]State Vector,\[CloseCurlyDoubleQuote] and visual \
representations of its \[OpenCurlyDoubleQuote]Neighbors.\
\[CloseCurlyDoubleQuote]

The Mathematica code defines the SpekkensStates and SpekkensPermutations, \
which are the fundamental elements of the Spekkens toy model. The applyPerm \
function is crucial; it defines how a given permutation acts on a state, \
treating it as a 4\[Times]4 array for transformations. The initStates are \
generated by taking Kronecker products of all possible pairs of \
SpekkensStates, creating a comprehensive set of composite states.

The stateGraph is then constructed using NestGraph. This function iteratively \
applies the applyPerm function with all SpekkensPermutations to the \
initStates up to a depth of 2, building a graph that represents the \
connectivity between these composite states under the defined \
transformations. The GraphLayout is set to \
\[OpenCurlyDoubleQuote]SpringElectricalEmbedding\[CloseCurlyDoubleQuote] for \
a visually appealing arrangement of nodes.

The DynamicModule orchestrates the interactive elements. The large graph on \
the left is rendered, and its VertexShapeFunction dynamically changes the \
appearance of nodes: the selection (the clicked node) is highlighted in red, \
and other nodes are light blue. Importantly, an EventHandler attached to the \
graph allows users to click anywhere within the graph to select the nearest \
node. When a node is selected, the selection variable is updated, and the \
neighbors of that selected node (obtained using AdjacencyList) are \
determined. The right panel then dynamically updates to display the visual \
representation and state vector of the Selected State, along with the visual \
representations of its Neighbors, providing a clear and interactive way to \
explore the local connectivity within the Spekkens toy \
model\[CloseCurlyQuote]s state space.\
\>", "Text",
 CellChangeTimes->{{3.959050133546049*^9, 3.959050153204269*^9}, {
  3.95905018468279*^9, 
  3.9590501917338057`*^9}},ExpressionUUID->"ebedf707-0d21-4f4b-983b-\
9a6f12c90a63"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"compositeStates", "=", 
   RowBox[{"KroneckerProduct", "@@@", 
    RowBox[{"Tuples", "[", 
     RowBox[{"SpekkensStates", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"current", "=", 
      RowBox[{"compositeStates", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"permuted", "=", 
         RowBox[{"Permute", "[", 
          RowBox[{"current", ",", "perm"}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"compositeStates", ",", "permuted"}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"edges", ",", 
            RowBox[{"current", "->", "permuted"}]}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"perm", ",", "SpekkensPermutations"}], "}"}]}], "]"}]}], ",", 
    
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "compositeStates", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"graph", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"edges", ",", 
     RowBox[{"VertexCoordinates", "->", "Automatic"}], ",", 
     RowBox[{"GraphLayout", "->", "\"\<SpringElectricalEmbedding\>\""}], ",", 
     
     RowBox[{"EdgeStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Gray", ",", 
        RowBox[{"Thickness", "[", "0.001", "]"}]}], "]"}]}], ",", 
     RowBox[{"VertexSize", "->", "0.2"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"selected", "=", "None"}], "}"}], ",", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Text", "[", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Spekkens Toy Model: State Evolution Graph\>\"", ",", "18", ",", 
          "Bold"}], "]"}], "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Click any state to see connected permutations\>\"", ",", "14", 
          ",", "Italic"}], "]"}], "]"}], ",", 
       RowBox[{"EventHandler", "[", 
        RowBox[{
         RowBox[{"Graph", "[", 
          RowBox[{"graph", ",", 
           RowBox[{"VertexShapeFunction", "->", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Inset", "[", 
               RowBox[{
                RowBox[{"Tooltip", "[", 
                 RowBox[{
                  RowBox[{"ArrayPlot", "[", 
                   RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"#2", ",", "4"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "40"}], ",", 
                    RowBox[{"ColorRules", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "->", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9", ",", "0.1", ",", "0.1"}], "]"}]}], ",", 
                    RowBox[{"0", "->", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.2", ",", "0.4", ",", "0.8"}], "]"}]}]}], 
                    "}"}]}], ",", 
                    RowBox[{"Frame", "->", "False"}]}], "]"}], ",", "#2"}], 
                 "]"}], ",", "#1"}], "]"}], "&"}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"VertexStyle", "->", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#", "===", "selected"}], ",", 
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"EdgeForm", "[", 
                  RowBox[{"{", 
                   RowBox[{"Thick", ",", "Yellow"}], "}"}], "]"}], ",", 
                 RowBox[{"RGBColor", "[", 
                  RowBox[{"0.9", ",", "0.9", ",", "0.2"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"EdgeForm", "[", 
                  RowBox[{"{", 
                   RowBox[{"Thin", ",", "Black"}], "}"}], "]"}], ",", 
                 "LightGray"}], "]"}]}], "]"}]}], "&"}], ",", 
           RowBox[{"GraphHighlight", "->", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"selected", "===", "None"}], ",", 
              RowBox[{"{", "}"}], ",", 
              RowBox[{"ConnectedComponents", "[", 
               RowBox[{"Subgraph", "[", 
                RowBox[{"graph", ",", "selected"}], "]"}], "]"}]}], "]"}]}], 
           ",", 
           RowBox[{"GraphHighlightStyle", "->", "\"\<Thick\>\""}], ",", 
           RowBox[{"ImageSize", "->", "700"}], ",", 
           RowBox[{"EdgeShapeFunction", "->", "\"\<Line\>\""}], ",", 
           RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<VertexClicked\>\"", ":>", 
            RowBox[{"(", 
             RowBox[{"selected", "=", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{
                  RowBox[{"VertexList", "[", "graph", "]"}], ",", "#"}], 
                 "]"}], ",", "#", ",", "selected"}], "]"}]}], ")"}]}], "&"}], 
          "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Alignment", "->", "Center"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958973860397011*^9, 3.958973860398609*^9}, {
  3.959050196779685*^9, 3.959050199840438*^9}},
 CellLabel->
  "In[3196]:=",ExpressionUUID->"00634352-6e57-44a6-9ac2-ad8d341cc8a1"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`selected$$ = None}, 
  TagBox[GridBox[{
     {
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"Spekkens Toy Model: State Evolution Graph\"\>",
          StripOnInput->False,
          FontSize->18,
          FontWeight->Bold], TextForm]], "InlineText",ExpressionUUID->
        "a1832381-0ba8-4b21-bcb7-84154e903f0d"],
       Text[
        Style["Spekkens Toy Model: State Evolution Graph", 18, Bold]]]},
     {
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"Click any state to see connected permutations\"\>",
          StripOnInput->False,
          FontSize->14,
          FontSlant->Italic], TextForm]], "InlineText",ExpressionUUID->
        "a1c644a7-991c-4f05-a72b-a3545d764d08"],
       Text[
        Style[
        "Click any state to see connected permutations", 14, Italic]]]},
     {
      TagBox[
       GraphicsBox[
        NamespaceBox["NetworkGraphics",
         DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[CompressedData["
1:eJxTTMoPymNmYGBQAWIWKGaEYhhA51MKiDV/oNzBiMTHRlPDXkLmD7QbBjIN
4LOXGm4gZD4hv5IaFuSaN1DuIJTWSE2L5Jg30G4YyDRAKL2Tmh8oNY/UsoDa
YTPQ7iC1LKZ22hwMbhjINEBqfUBp/gAAng4Ccg==
            
            "], {{{1, 1}, {1, 1}, {1, 2}, {1, 2}, {3, 3}, {3, 3}, {3, 4}, {3, 
             4}, {5, 5}, {5, 5}, {5, 6}, {5, 6}, {7, 7}, {7, 7}, {7, 8}, {7, 
             8}, {9, 9}, {9, 9}, {9, 10}, {9, 10}, {11, 11}, {11, 11}, {11, 
             12}, {11, 12}, {2, 2}, {2, 2}, {2, 1}, {2, 1}, {4, 4}, {4, 4}, {
             4, 3}, {4, 3}, {6, 6}, {6, 6}, {6, 5}, {6, 5}, {8, 8}, {8, 8}, {
             8, 7}, {8, 7}, {10, 10}, {10, 10}, {10, 9}, {10, 9}, {12, 12}, {
             12, 12}, {12, 11}, {12, 11}, {13, 13}, {13, 14}, {13, 13}, {13, 
             14}, {15, 15}, {15, 16}, {15, 15}, {15, 16}, {17, 17}, {17, 
             18}, {17, 17}, {17, 18}, {19, 19}, {19, 20}, {19, 19}, {19, 
             20}, {21, 21}, {21, 22}, {21, 21}, {21, 22}, {23, 23}, {23, 
             24}, {23, 23}, {23, 24}, {14, 14}, {14, 13}, {14, 14}, {14, 
             13}, {16, 16}, {16, 15}, {16, 16}, {16, 15}, {18, 18}, {18, 
             17}, {18, 18}, {18, 17}, {20, 20}, {20, 19}, {20, 20}, {20, 
             19}, {22, 22}, {22, 21}, {22, 22}, {22, 21}, {24, 24}, {24, 
             23}, {24, 24}, {24, 23}, {25, 25}, {25, 26}, {25, 26}, {25, 
             25}, {27, 27}, {27, 28}, {27, 28}, {27, 27}, {29, 29}, {29, 
             30}, {29, 30}, {29, 29}, {31, 31}, {31, 32}, {31, 32}, {31, 
             31}, {33, 33}, {33, 34}, {33, 34}, {33, 33}, {35, 35}, {35, 
             36}, {35, 36}, {35, 35}, {26, 26}, {26, 25}, {26, 25}, {26, 
             26}, {28, 28}, {28, 27}, {28, 27}, {28, 28}, {30, 30}, {30, 
             29}, {30, 29}, {30, 30}, {32, 32}, {32, 31}, {32, 31}, {32, 
             32}, {34, 34}, {34, 33}, {34, 33}, {34, 34}, {36, 36}, {36, 
             35}, {36, 35}, {36, 36}}, Null}, {
            EdgeShapeFunction -> {"Line"}, EdgeStyle -> {
               Directive[
                GrayLevel[0.5], 
                Thickness[0.001]]}, GraphHighlightStyle -> {"Thick"}, 
             GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> 
               "SpringElectricalEmbedding"}, ImageSize -> 700, 
             PerformanceGoal -> "Quality", VertexShapeFunction -> {Inset[
                Tooltip[
                 ArrayPlot[
                  Partition[#2, 4], Mesh -> True, ImageSize -> 40, 
                  ColorRules -> {
                   1 -> RGBColor[0.9, 0.1, 0.1], 0 -> 
                    RGBColor[0.2, 0.4, 0.8]}, Frame -> False], #2], #]& }, 
             VertexSize -> {0.2}}]]}, 
          TagBox[GraphicsGroupBox[{
             {GrayLevel[0.5], Thickness[0.001], Opacity[0.7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$1", Automatic, Center], {
                7.229941359366487, -9.364662312559187}, {
                7.285834988019676, -9.217380522914048}, {
                7.3721360383039585`, -9.15542919635533}, {
                7.653478894200267, -9.246843031630457}, {
                7.686883834401489, -9.347689192254984}, {
                7.645532665974548, -9.499696113659315}, DynamicLocation[
                "VertexID$1", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$1", Automatic, Center], {
                7.645532665974548, -9.750523886340684}, {
                7.686883834401489, -9.902530807745013}, {
                7.653478894200267, -10.003376968369542`}, {
                7.3721360383039585`, -10.094790803644669`}, {
                7.285834988019676, -10.03283947708595}, {
                7.229941359366487, -9.885557687440812}, DynamicLocation[
                "VertexID$1", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$1", Automatic, Center], {
                6.875049999999689, -9.789550747183114}, DynamicLocation[
                "VertexID$2", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$1", Automatic, Center], {
                6.875049999998713, -9.680088669647265}, DynamicLocation[
                "VertexID$2", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$2", Automatic, Center], {
                6.875050000000098, -9.460669252816661}, DynamicLocation[
                "VertexID$1", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$2", Automatic, Center], {
                6.875049999999872, -9.570131330352748}, DynamicLocation[
                "VertexID$1", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$2", Automatic, Center], {
                6.520158640633514, -9.885557687440812}, {
                6.4642650119803235`, -10.03283947708595}, {
                6.377963961696041, -10.094790803644669`}, {
                6.096621105799732, -10.003376968369542`}, {
                6.063216165598511, -9.902530807745013}, {
                6.104567334025452, -9.750523886340684}, DynamicLocation[
                "VertexID$2", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$2", Automatic, Center], {
                6.104567334025452, -9.499696113659315}, {
                6.063216165598511, -9.347689192254986}, {
                6.096621105799732, -9.246843031630457}, {
                6.377963961696041, -9.15542919635533}, {
                6.4642650119803235`, -9.217380522914048}, {
                6.520158640633513, -9.364662312559187}, DynamicLocation[
                "VertexID$2", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$3", Automatic, Center], {
                1.729901359366487, -2.3645823125591883`}, {
                1.7857949880196768`, -2.21730052291405}, {
                1.872096038303959, -2.155349196355331}, {
                2.153438894200268, -2.246763031630458}, {
                2.1868438344014893`, -2.347609192254986}, {
                2.145492665974548, -2.499616113659316}, DynamicLocation[
                "VertexID$3", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$3", Automatic, Center], {
                2.145492665974548, -2.750443886340684}, {
                2.1868438344014893`, -2.902450807745014}, {
                2.153438894200268, -3.003296968369542}, {
                1.8720960383039595`, -3.094710803644669}, {
                1.785794988019677, -3.0327594770859503`}, {
                1.7299013593664871`, -2.885477687440812}, DynamicLocation[
                "VertexID$3", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$3", Automatic, Center], {
                1.3750099999999945`, -2.7894707471831124`}, DynamicLocation[
                "VertexID$4", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$3", Automatic, Center], {
                1.3750099999999097`, -2.6800086696472945`}, DynamicLocation[
                "VertexID$4", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$4", Automatic, Center], {
                1.375010000000009, -2.460589252816883}, DynamicLocation[
                "VertexID$3", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$4", Automatic, Center], {
                1.3750099999999545`, -2.5700513303526926`}, DynamicLocation[
                "VertexID$3", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$4", Automatic, Center], {
                1.0201186406335134`, -2.8854776874408117`}, {
                0.9642250119803236, -3.0327594770859503`}, {
                0.877923961696041, -3.094710803644669}, {
                0.5965811057997319, -3.003296968369542}, {
                0.5631761655985106, -2.902450807745014}, {
                0.6045273340254521, -2.750443886340684}, DynamicLocation[
                "VertexID$4", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$4", Automatic, Center], {
                0.6045273340254522, -2.4996161136593162`}, {
                0.5631761655985107, -2.3476091922549864`}, {
                0.596581105799732, -2.2467630316304583`}, {
                0.8779239616960408, -2.1553491963553313`}, {
                0.9642250119803233, -2.21730052291405}, {
                1.020118640633513, -2.3645823125591883`}, DynamicLocation[
                "VertexID$4", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$5", Automatic, Center], {
                1.729901359366487, -4.114602312559188}, {
                1.7857949880196768`, -3.96732052291405}, {
                1.872096038303959, -3.9053691963553305`}, {
                2.153438894200268, -3.9967830316304576`}, {
                2.1868438344014893`, -4.097629192254986}, {
                2.145492665974548, -4.2496361136593155`}, DynamicLocation[
                "VertexID$5", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$5", Automatic, Center], {
                2.145492665974548, -4.500463886340684}, {
                2.1868438344014893`, -4.652470807745014}, {
                2.153438894200268, -4.753316968369542}, {
                1.8720960383039595`, -4.844730803644669}, {
                1.785794988019677, -4.78277947708595}, {
                1.7299013593664871`, -4.635497687440812}, DynamicLocation[
                "VertexID$5", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$5", Automatic, Center], {
                1.375010000000025, -4.539490747183119}, DynamicLocation[
                "VertexID$6", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$5", Automatic, Center], {
                1.3750099999998824`, -4.430028669647298}, DynamicLocation[
                "VertexID$6", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$6", Automatic, Center], {
                1.3750100000000316`, -4.210609252816892}, DynamicLocation[
                "VertexID$5", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$6", Automatic, Center], {
                1.3750099999999492`, -4.320071330352691}, DynamicLocation[
                "VertexID$5", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$6", Automatic, Center], {
                1.0201186406335134`, -4.635497687440812}, {
                0.9642250119803236, -4.78277947708595}, {
                0.877923961696041, -4.844730803644669}, {
                0.5965811057997319, -4.753316968369543}, {
                0.5631761655985106, -4.652470807745014}, {
                0.6045273340254521, -4.500463886340684}, DynamicLocation[
                "VertexID$6", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$6", Automatic, Center], {
                0.6045273340254522, -4.2496361136593155`}, {
                0.5631761655985107, -4.097629192254986}, {
                0.596581105799732, -3.9967830316304576`}, {
                0.8779239616960408, -3.9053691963553305`}, {
                0.9642250119803233, -3.9673205229140494`}, {
                1.020118640633513, -4.114602312559188}, DynamicLocation[
                "VertexID$6", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$7", Automatic, Center], {
                4.479921359366488, -0.6145623125591881}, {
                4.535814988019677, -0.46728052291405}, {
                4.622116038303959, -0.405329196355331}, {
                4.903458894200268, -0.49674303163045797`}, {
                4.93686383440149, -0.597589192254986}, {
                4.8955126659745485`, -0.7495961136593159}, DynamicLocation[
                "VertexID$7", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$7", Automatic, Center], {
                4.8955126659745485`, -1.0004238863406842`}, {
                4.93686383440149, -1.152430807745014}, {
                4.903458894200268, -1.2532769683695422`}, {
                4.622116038303959, -1.3446908036446692`}, {
                4.535814988019677, -1.2827394770859502`}, {
                4.479921359366488, -1.135457687440812}, DynamicLocation[
                "VertexID$7", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$7", Automatic, Center], {
                4.125030000000034, -1.0394507471831254`}, DynamicLocation[
                "VertexID$8", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$7", Automatic, Center], {
                4.125030000000012, -0.9299886696473073}, DynamicLocation[
                "VertexID$8", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$8", Automatic, Center], {
                4.125029999999977, -0.7105692528168859}, DynamicLocation[
                "VertexID$7", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$8", Automatic, Center], {
                4.125029999999995, -0.8200313303526944}, DynamicLocation[
                "VertexID$7", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$8", Automatic, Center], {
                3.7701386406335136`, -1.1354576874408118`}, {
                3.714245011980324, -1.28273947708595}, {
                3.6279439616960416`, -1.3446908036446692`}, {
                3.3466011057997322`, -1.253276968369542}, {
                3.313196165598511, -1.1524308077450138`}, {
                3.3545473340254524`, -1.0004238863406838`}, DynamicLocation[
                "VertexID$8", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$8", Automatic, Center], {
                3.354547334025453, -0.749596113659316}, {
                3.3131961655985114`, -0.5975891922549862}, {
                3.3466011057997322`, -0.496743031630458}, {
                3.627943961696041, -0.40532919635533093`}, {
                3.714245011980324, -0.46728052291405}, {
                3.7701386406335136`, -0.614562312559188}, DynamicLocation[
                "VertexID$8", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$9", Automatic, Center], {
                4.479921359366488, -2.3645823125591883`}, {
                4.535814988019677, -2.21730052291405}, {
                4.622116038303959, -2.155349196355331}, {
                4.903458894200268, -2.246763031630458}, {
                4.93686383440149, -2.347609192254986}, {
                4.8955126659745485`, -2.499616113659316}, DynamicLocation[
                "VertexID$9", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$9", Automatic, Center], {
                4.8955126659745485`, -2.750443886340684}, {
                4.93686383440149, -2.902450807745014}, {
                4.903458894200268, -3.003296968369542}, {
                4.622116038303959, -3.094710803644669}, {
                4.535814988019677, -3.0327594770859503`}, {
                4.479921359366488, -2.885477687440812}, DynamicLocation[
                "VertexID$9", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$9", Automatic, Center], {
                4.125030000000015, -2.7894707471831457`}, DynamicLocation[
                "VertexID$10", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$9", Automatic, Center], {
                4.125030000000043, -2.6800086696473087`}, DynamicLocation[
                "VertexID$10", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$10", Automatic, Center], {
                4.125029999999945, -2.4605892528168893`}, DynamicLocation[
                "VertexID$9", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$10", Automatic, Center], {
                4.125030000000115, -2.5700513303526953`}, DynamicLocation[
                "VertexID$9", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$10", Automatic, Center], {
                3.7701386406335136`, -2.8854776874408117`}, {
                3.714245011980324, -3.0327594770859503`}, {
                3.6279439616960416`, -3.094710803644669}, {
                3.3466011057997322`, -3.003296968369542}, {
                3.313196165598511, -2.902450807745014}, {
                3.3545473340254524`, -2.750443886340684}, DynamicLocation[
                "VertexID$10", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$10", Automatic, Center], {
                3.354547334025453, -2.4996161136593162`}, {
                3.3131961655985114`, -2.3476091922549864`}, {
                3.3466011057997322`, -2.2467630316304583`}, {
                3.627943961696041, -2.1553491963553313`}, {
                3.714245011980324, -2.21730052291405}, {
                3.7701386406335136`, -2.3645823125591883`}, DynamicLocation[
                "VertexID$10", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$11", Automatic, Center], {
                4.479921359366488, -4.114602312559188}, {
                4.535814988019677, -3.96732052291405}, {
                4.622116038303959, -3.9053691963553305`}, {
                4.903458894200268, -3.9967830316304576`}, {
                4.93686383440149, -4.097629192254986}, {
                4.8955126659745485`, -4.2496361136593155`}, DynamicLocation[
                "VertexID$11", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$11", Automatic, Center], {
                4.8955126659745485`, -4.500463886340684}, {
                4.93686383440149, -4.652470807745014}, {
                4.903458894200268, -4.753316968369542}, {
                4.622116038303959, -4.844730803644669}, {
                4.535814988019677, -4.78277947708595}, {
                4.479921359366488, -4.635497687440812}, DynamicLocation[
                "VertexID$11", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$11", Automatic, Center], {
                4.1250299999998745`, -4.539490747183124}, DynamicLocation[
                "VertexID$12", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$11", Automatic, Center], {
                4.1250300000002, -4.430028669647372}, DynamicLocation[
                "VertexID$12", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$12", Automatic, Center], {
                4.125030000000295, -4.21060925281687}, DynamicLocation[
                "VertexID$11", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$12", Automatic, Center], {
                4.125030000000252, -4.320071330352666}, DynamicLocation[
                "VertexID$11", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$12", Automatic, Center], {
                3.7701386406335136`, -4.635497687440812}, {
                3.714245011980324, -4.78277947708595}, {
                3.6279439616960416`, -4.844730803644669}, {
                3.3466011057997322`, -4.753316968369543}, {
                3.313196165598511, -4.652470807745014}, {
                3.3545473340254524`, -4.500463886340684}, DynamicLocation[
                "VertexID$12", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$12", Automatic, Center], {
                3.354547334025453, -4.2496361136593155`}, {
                3.3131961655985114`, -4.097629192254986}, {
                3.3466011057997322`, -3.9967830316304576`}, {
                3.627943961696041, -3.9053691963553305`}, {
                3.714245011980324, -3.9673205229140494`}, {
                3.7701386406335136`, -4.114602312559188}, DynamicLocation[
                "VertexID$12", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$13", Automatic, Center], {
                1.729901359366487, -5.864622312559189}, {
                1.7857949880196768`, -5.717340522914051}, {
                1.872096038303959, -5.6553891963553315`}, {
                2.153438894200268, -5.746803031630458}, {
                2.1868438344014893`, -5.847649192254987}, {
                2.145492665974548, -5.9996561136593165`}, DynamicLocation[
                "VertexID$13", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$13", Automatic, Center], {
                2.145492665974548, -6.250483886340685}, {
                2.1868438344014893`, -6.402490807745015}, {
                2.153438894200268, -6.503336968369543}, {
                1.8720960383039595`, -6.59475080364467}, {
                1.785794988019677, -6.532799477085951}, {
                1.7299013593664871`, -6.385517687440813}, DynamicLocation[
                "VertexID$13", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$13", Automatic, Center], {
                1.3750100000000185`, -6.2895107471831135`}, DynamicLocation[
                "VertexID$14", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$13", Automatic, Center], {
                1.3750099999996837`, -6.1800486696473085`}, DynamicLocation[
                "VertexID$14", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$14", Automatic, Center], {
                1.375010000000053, -5.960629252816877}, DynamicLocation[
                "VertexID$13", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$14", Automatic, Center], {
                1.3750100000001535`, -6.070091330352652}, DynamicLocation[
                "VertexID$13", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$14", Automatic, Center], {
                1.0201186406335134`, -6.385517687440813}, {
                0.9642250119803236, -6.532799477085951}, {
                0.877923961696041, -6.59475080364467}, {
                0.5965811057997319, -6.503336968369544}, {
                0.5631761655985106, -6.402490807745015}, {
                0.6045273340254521, -6.250483886340685}, DynamicLocation[
                "VertexID$14", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$14", Automatic, Center], {
                0.6045273340254522, -5.9996561136593165`}, {
                0.5631761655985107, -5.847649192254987}, {
                0.596581105799732, -5.746803031630459}, {
                0.8779239616960408, -5.6553891963553315`}, {
                0.9642250119803233, -5.717340522914051}, {
                1.020118640633513, -5.864622312559189}, DynamicLocation[
                "VertexID$14", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$15", Automatic, Center], {
                4.479921359366488, -5.864622312559189}, {
                4.535814988019677, -5.717340522914051}, {
                4.622116038303959, -5.6553891963553315`}, {
                4.903458894200268, -5.746803031630458}, {
                4.93686383440149, -5.847649192254987}, {
                4.8955126659745485`, -5.9996561136593165`}, DynamicLocation[
                "VertexID$15", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$15", Automatic, Center], {
                4.8955126659745485`, -6.250483886340685}, {
                4.93686383440149, -6.402490807745015}, {
                4.903458894200268, -6.503336968369543}, {
                4.622116038303959, -6.59475080364467}, {
                4.535814988019677, -6.532799477085951}, {
                4.479921359366488, -6.385517687440813}, DynamicLocation[
                "VertexID$15", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$15", Automatic, Center], {
                4.125030000000026, -6.289510747183071}, DynamicLocation[
                "VertexID$16", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$15", Automatic, Center], {
                4.125030000000057, -6.1800486696473405`}, DynamicLocation[
                "VertexID$16", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$16", Automatic, Center], {
                4.125030000000135, -5.960629252816815}, DynamicLocation[
                "VertexID$15", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$16", Automatic, Center], {
                4.125029999999783, -6.070091330352697}, DynamicLocation[
                "VertexID$15", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$16", Automatic, Center], {
                3.7701386406335136`, -6.385517687440813}, {
                3.714245011980324, -6.532799477085951}, {
                3.6279439616960416`, -6.59475080364467}, {
                3.3466011057997322`, -6.503336968369544}, {
                3.313196165598511, -6.402490807745015}, {
                3.3545473340254524`, -6.250483886340685}, DynamicLocation[
                "VertexID$16", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$16", Automatic, Center], {
                3.354547334025453, -5.9996561136593165`}, {
                3.3131961655985114`, -5.847649192254987}, {
                3.3466011057997322`, -5.746803031630459}, {
                3.627943961696041, -5.6553891963553315`}, {
                3.714245011980324, -5.717340522914051}, {
                3.7701386406335136`, -5.864622312559189}, DynamicLocation[
                "VertexID$16", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$17", Automatic, Center], {
                7.229941359366487, -0.6145623125591881}, {
                7.285834988019676, -0.46728052291405}, {
                7.3721360383039585`, -0.405329196355331}, {
                7.653478894200267, -0.49674303163045797`}, {
                7.686883834401489, -0.597589192254986}, {
                7.645532665974548, -0.7495961136593159}, DynamicLocation[
                "VertexID$17", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$17", Automatic, Center], {
                7.645532665974548, -1.0004238863406842`}, {
                7.686883834401489, -1.152430807745014}, {
                7.653478894200267, -1.2532769683695422`}, {
                7.3721360383039585`, -1.3446908036446692`}, {
                7.285834988019676, -1.2827394770859502`}, {
                7.229941359366487, -1.135457687440812}, DynamicLocation[
                "VertexID$17", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$17", Automatic, Center], {
                6.875050000000026, -1.0394507471831251`}, DynamicLocation[
                "VertexID$18", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$17", Automatic, Center], {
                6.875049999999892, -0.9299886696473108}, DynamicLocation[
                "VertexID$18", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$18", Automatic, Center], {
                6.875050000000025, -0.7105692528168717}, DynamicLocation[
                "VertexID$17", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$18", Automatic, Center], {
                6.875050000000037, -0.820031330352683}, DynamicLocation[
                "VertexID$17", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$18", Automatic, Center], {
                6.520158640633514, -1.1354576874408118`}, {
                6.4642650119803235`, -1.28273947708595}, {
                6.377963961696041, -1.3446908036446692`}, {
                6.096621105799732, -1.253276968369542}, {
                6.063216165598511, -1.1524308077450138`}, {
                6.104567334025452, -1.0004238863406838`}, DynamicLocation[
                "VertexID$18", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$18", Automatic, Center], {
                6.104567334025452, -0.749596113659316}, {
                6.063216165598511, -0.5975891922549862}, {
                6.096621105799732, -0.496743031630458}, {
                6.377963961696041, -0.40532919635533093`}, {
                6.4642650119803235`, -0.46728052291405}, {
                6.520158640633513, -0.614562312559188}, DynamicLocation[
                "VertexID$18", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$19", Automatic, Center], {
                7.229941359366487, -2.3645823125591883`}, {
                7.285834988019676, -2.21730052291405}, {
                7.3721360383039585`, -2.155349196355331}, {
                7.653478894200267, -2.246763031630458}, {
                7.686883834401489, -2.347609192254986}, {
                7.645532665974548, -2.499616113659316}, DynamicLocation[
                "VertexID$19", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$19", Automatic, Center], {
                7.645532665974548, -2.750443886340684}, {
                7.686883834401489, -2.902450807745014}, {
                7.653478894200267, -3.003296968369542}, {
                7.3721360383039585`, -3.094710803644669}, {
                7.285834988019676, -3.0327594770859503`}, {
                7.229941359366487, -2.885477687440812}, DynamicLocation[
                "VertexID$19", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$19", Automatic, Center], {
                6.875049999999836, -2.789470747183155}, DynamicLocation[
                "VertexID$20", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$19", Automatic, Center], {
                6.875050000000205, -2.6800086696472465`}, DynamicLocation[
                "VertexID$20", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$20", Automatic, Center], {
                6.87505000000004, -2.460589252816902}, DynamicLocation[
                "VertexID$19", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$20", Automatic, Center], {
                6.875050000000368, -2.5700513303527286`}, DynamicLocation[
                "VertexID$19", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$20", Automatic, Center], {
                6.520158640633514, -2.8854776874408117`}, {
                6.4642650119803235`, -3.0327594770859503`}, {
                6.377963961696041, -3.094710803644669}, {
                6.096621105799732, -3.003296968369542}, {
                6.063216165598511, -2.902450807745014}, {
                6.104567334025452, -2.750443886340684}, DynamicLocation[
                "VertexID$20", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$20", Automatic, Center], {
                6.104567334025452, -2.4996161136593162`}, {
                6.063216165598511, -2.3476091922549864`}, {
                6.096621105799732, -2.2467630316304583`}, {
                6.377963961696041, -2.1553491963553313`}, {
                6.4642650119803235`, -2.21730052291405}, {
                6.520158640633513, -2.3645823125591883`}, DynamicLocation[
                "VertexID$20", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$21", Automatic, Center], {
                7.229941359366487, -4.114602312559188}, {
                7.285834988019676, -3.96732052291405}, {
                7.3721360383039585`, -3.9053691963553305`}, {
                7.653478894200267, -3.9967830316304576`}, {
                7.686883834401489, -4.097629192254986}, {
                7.645532665974548, -4.2496361136593155`}, DynamicLocation[
                "VertexID$21", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$21", Automatic, Center], {
                7.645532665974548, -4.500463886340684}, {
                7.686883834401489, -4.652470807745014}, {
                7.653478894200267, -4.753316968369542}, {
                7.3721360383039585`, -4.844730803644669}, {
                7.285834988019676, -4.78277947708595}, {
                7.229941359366487, -4.635497687440812}, DynamicLocation[
                "VertexID$21", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$21", Automatic, Center], {
                6.875050000000187, -4.539490747183152}, DynamicLocation[
                "VertexID$22", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$21", Automatic, Center], {
                6.875049999999709, -4.430028669647256}, DynamicLocation[
                "VertexID$22", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$22", Automatic, Center], {
                6.875050000000041, -4.21060925281688}, DynamicLocation[
                "VertexID$21", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$22", Automatic, Center], {
                6.875050000000286, -4.3200713303526745`}, DynamicLocation[
                "VertexID$21", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$22", Automatic, Center], {
                6.520158640633514, -4.635497687440812}, {
                6.4642650119803235`, -4.78277947708595}, {
                6.377963961696041, -4.844730803644669}, {
                6.096621105799732, -4.753316968369543}, {
                6.063216165598511, -4.652470807745014}, {
                6.104567334025452, -4.500463886340684}, DynamicLocation[
                "VertexID$22", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$22", Automatic, Center], {
                6.104567334025452, -4.2496361136593155`}, {
                6.063216165598511, -4.097629192254986}, {
                6.096621105799732, -3.9967830316304576`}, {
                6.377963961696041, -3.9053691963553305`}, {
                6.4642650119803235`, -3.9673205229140494`}, {
                6.520158640633513, -4.114602312559188}, DynamicLocation[
                "VertexID$22", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$23", Automatic, Center], {
                7.229941359366487, -5.864622312559189}, {
                7.285834988019676, -5.717340522914051}, {
                7.3721360383039585`, -5.6553891963553315`}, {
                7.653478894200267, -5.746803031630458}, {
                7.686883834401489, -5.847649192254987}, {
                7.645532665974548, -5.9996561136593165`}, DynamicLocation[
                "VertexID$23", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$23", Automatic, Center], {
                7.645532665974548, -6.250483886340685}, {
                7.686883834401489, -6.402490807745015}, {
                7.653478894200267, -6.503336968369543}, {
                7.3721360383039585`, -6.59475080364467}, {
                7.285834988019676, -6.532799477085951}, {
                7.229941359366487, -6.385517687440813}, DynamicLocation[
                "VertexID$23", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$23", Automatic, Center], {
                6.875049999999632, -6.289510747183064}, DynamicLocation[
                "VertexID$24", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$23", Automatic, Center], {
                6.875050000001027, -6.180048669647354}, DynamicLocation[
                "VertexID$24", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$24", Automatic, Center], {
                6.875050000000039, -5.960629252816878}, DynamicLocation[
                "VertexID$23", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$24", Automatic, Center], {
                6.8750499999998675`, -6.070091330352587}, DynamicLocation[
                "VertexID$23", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$24", Automatic, Center], {
                6.520158640633514, -6.385517687440813}, {
                6.4642650119803235`, -6.532799477085951}, {
                6.377963961696041, -6.59475080364467}, {
                6.096621105799732, -6.503336968369544}, {
                6.063216165598511, -6.402490807745015}, {
                6.104567334025452, -6.250483886340685}, DynamicLocation[
                "VertexID$24", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$24", Automatic, Center], {
                6.104567334025452, -5.9996561136593165`}, {
                6.063216165598511, -5.847649192254987}, {
                6.096621105799732, -5.746803031630459}, {
                6.377963961696041, -5.6553891963553315`}, {
                6.4642650119803235`, -5.717340522914051}, {
                6.520158640633513, -5.864622312559189}, DynamicLocation[
                "VertexID$24", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$25", Automatic, Center], {
                1.729901359366487, -7.614642312559188}, {
                1.7857949880196768`, -7.46736052291405}, {
                1.872096038303959, -7.405409196355331}, {
                2.153438894200268, -7.496823031630457}, {
                2.1868438344014893`, -7.597669192254986}, {
                2.145492665974548, -7.749676113659316}, DynamicLocation[
                "VertexID$25", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$25", Automatic, Center], {
                2.145492665974548, -8.000503886340685}, {
                2.1868438344014893`, -8.152510807745013}, {
                2.153438894200268, -8.253356968369543}, {
                1.8720960383039595`, -8.34477080364467}, {
                1.785794988019677, -8.282819477085951}, {
                1.7299013593664871`, -8.135537687440813}, DynamicLocation[
                "VertexID$25", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$25", Automatic, Center], {
                1.375009999999926, -8.039530747183102}, DynamicLocation[
                "VertexID$26", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$25", Automatic, Center], {
                1.375010000000171, -7.93006866964733}, DynamicLocation[
                "VertexID$26", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$26", Automatic, Center], {
                1.3750100000000252`, -7.7106492528168795`}, DynamicLocation[
                "VertexID$25", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$26", Automatic, Center], {
                1.3750100000001235`, -7.82011133035268}, DynamicLocation[
                "VertexID$25", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$26", Automatic, Center], {
                1.0201186406335134`, -8.135537687440813}, {
                0.9642250119803236, -8.282819477085951}, {
                0.877923961696041, -8.34477080364467}, {
                0.5965811057997319, -8.253356968369543}, {
                0.5631761655985106, -8.152510807745013}, {
                0.6045273340254521, -8.000503886340685}, DynamicLocation[
                "VertexID$26", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$26", Automatic, Center], {
                0.6045273340254522, -7.749676113659316}, {
                0.5631761655985107, -7.597669192254986}, {
                0.596581105799732, -7.496823031630458}, {
                0.8779239616960408, -7.405409196355331}, {
                0.9642250119803233, -7.46736052291405}, {
                1.020118640633513, -7.614642312559188}, DynamicLocation[
                "VertexID$26", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$27", Automatic, Center], {
                4.479921359366488, -7.614642312559188}, {
                4.535814988019677, -7.46736052291405}, {
                4.622116038303959, -7.405409196355331}, {
                4.903458894200268, -7.496823031630457}, {
                4.93686383440149, -7.597669192254986}, {
                4.8955126659745485`, -7.749676113659316}, DynamicLocation[
                "VertexID$27", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$27", Automatic, Center], {
                4.8955126659745485`, -8.000503886340685}, {
                4.93686383440149, -8.152510807745013}, {
                4.903458894200268, -8.253356968369543}, {
                4.622116038303959, -8.34477080364467}, {
                4.535814988019677, -8.282819477085951}, {
                4.479921359366488, -8.135537687440813}, DynamicLocation[
                "VertexID$27", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$27", Automatic, Center], {
                4.125029999999779, -8.039530747183148}, DynamicLocation[
                "VertexID$28", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$27", Automatic, Center], {
                4.125030000000523, -7.930068669647374}, DynamicLocation[
                "VertexID$28", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$28", Automatic, Center], {
                4.125029999999975, -7.710649252816893}, DynamicLocation[
                "VertexID$27", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$28", Automatic, Center], {
                4.125029999999907, -7.820111330352665}, DynamicLocation[
                "VertexID$27", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$28", Automatic, Center], {
                3.7701386406335136`, -8.135537687440813}, {
                3.714245011980324, -8.282819477085951}, {
                3.6279439616960416`, -8.34477080364467}, {
                3.3466011057997322`, -8.253356968369543}, {
                3.313196165598511, -8.152510807745013}, {
                3.3545473340254524`, -8.000503886340685}, DynamicLocation[
                "VertexID$28", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$28", Automatic, Center], {
                3.354547334025453, -7.749676113659316}, {
                3.3131961655985114`, -7.597669192254986}, {
                3.3466011057997322`, -7.496823031630458}, {
                3.627943961696041, -7.405409196355331}, {
                3.714245011980324, -7.46736052291405}, {
                3.7701386406335136`, -7.614642312559188}, DynamicLocation[
                "VertexID$28", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$29", Automatic, Center], {
                7.229941359366487, -7.614642312559188}, {
                7.285834988019676, -7.46736052291405}, {
                7.3721360383039585`, -7.405409196355331}, {
                7.653478894200267, -7.496823031630457}, {
                7.686883834401489, -7.597669192254986}, {
                7.645532665974548, -7.749676113659316}, DynamicLocation[
                "VertexID$29", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$29", Automatic, Center], {
                7.645532665974548, -8.000503886340685}, {
                7.686883834401489, -8.152510807745013}, {
                7.653478894200267, -8.253356968369543}, {
                7.3721360383039585`, -8.34477080364467}, {
                7.285834988019676, -8.282819477085951}, {
                7.229941359366487, -8.135537687440813}, DynamicLocation[
                "VertexID$29", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$29", Automatic, Center], {
                6.875050000000041, -8.039530747183063}, DynamicLocation[
                "VertexID$30", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$29", Automatic, Center], {
                6.875049999999706, -7.930068669647292}, DynamicLocation[
                "VertexID$30", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$30", Automatic, Center], {
                6.875050000000039, -7.7106492528170065`}, DynamicLocation[
                "VertexID$29", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$30", Automatic, Center], {
                6.875049999999872, -7.820111330352666}, DynamicLocation[
                "VertexID$29", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$30", Automatic, Center], {
                6.520158640633514, -8.135537687440813}, {
                6.4642650119803235`, -8.282819477085951}, {
                6.377963961696041, -8.34477080364467}, {
                6.096621105799732, -8.253356968369543}, {
                6.063216165598511, -8.152510807745013}, {
                6.104567334025452, -8.000503886340685}, DynamicLocation[
                "VertexID$30", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$30", Automatic, Center], {
                6.104567334025452, -7.749676113659316}, {
                6.063216165598511, -7.597669192254986}, {
                6.096621105799732, -7.496823031630458}, {
                6.377963961696041, -7.405409196355331}, {
                6.4642650119803235`, -7.46736052291405}, {
                6.520158640633513, -7.614642312559188}, DynamicLocation[
                "VertexID$30", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$31", Automatic, Center], {
                1.729901359366487, -9.364662312559187}, {
                1.7857949880196768`, -9.217380522914048}, {
                1.872096038303959, -9.15542919635533}, {
                2.153438894200268, -9.246843031630457}, {
                2.1868438344014893`, -9.347689192254984}, {
                2.145492665974548, -9.499696113659315}, DynamicLocation[
                "VertexID$31", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$31", Automatic, Center], {
                2.145492665974548, -9.750523886340684}, {
                2.1868438344014893`, -9.902530807745013}, {
                2.153438894200268, -10.003376968369542`}, {
                1.8720960383039595`, -10.094790803644669`}, {
                1.785794988019677, -10.03283947708595}, {
                1.7299013593664871`, -9.885557687440812}, DynamicLocation[
                "VertexID$31", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$31", Automatic, Center], {
                1.3750100000000205`, -9.78955074718314}, DynamicLocation[
                "VertexID$32", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$31", Automatic, Center], {
                1.3750100000002659`, -9.68008866964731}, DynamicLocation[
                "VertexID$32", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$32", Automatic, Center], {
                1.3750099999998753`, -9.460669252816926}, DynamicLocation[
                "VertexID$31", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$32", Automatic, Center], {
                1.375009999999805, -9.570131330352677}, DynamicLocation[
                "VertexID$31", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$32", Automatic, Center], {
                1.0201186406335134`, -9.885557687440812}, {
                0.9642250119803236, -10.03283947708595}, {
                0.877923961696041, -10.094790803644669`}, {
                0.5965811057997319, -10.003376968369542`}, {
                0.5631761655985106, -9.902530807745013}, {
                0.6045273340254521, -9.750523886340684}, DynamicLocation[
                "VertexID$32", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$32", Automatic, Center], {
                0.6045273340254522, -9.499696113659315}, {
                0.5631761655985107, -9.347689192254986}, {
                0.596581105799732, -9.246843031630457}, {
                0.8779239616960408, -9.15542919635533}, {
                0.9642250119803233, -9.217380522914048}, {
                1.020118640633513, -9.364662312559187}, DynamicLocation[
                "VertexID$32", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$33", Automatic, Center], {
                4.479921359366488, -9.364662312559187}, {
                4.535814988019677, -9.217380522914048}, {
                4.622116038303959, -9.15542919635533}, {
                4.903458894200268, -9.246843031630457}, {
                4.93686383440149, -9.347689192254984}, {
                4.8955126659745485`, -9.499696113659315}, DynamicLocation[
                "VertexID$33", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$33", Automatic, Center], {
                4.8955126659745485`, -9.750523886340684}, {
                4.93686383440149, -9.902530807745013}, {
                4.903458894200268, -10.003376968369542`}, {
                4.622116038303959, -10.094790803644669`}, {
                4.535814988019677, -10.03283947708595}, {
                4.479921359366488, -9.885557687440812}, DynamicLocation[
                "VertexID$33", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$33", Automatic, Center], {
                4.125030000000135, -9.789550747183153}, DynamicLocation[
                "VertexID$34", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$33", Automatic, Center], {
                4.125029999999225, -9.680088669647217}, DynamicLocation[
                "VertexID$34", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$34", Automatic, Center], {
                4.125029999999809, -9.460669252816832}, DynamicLocation[
                "VertexID$33", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$34", Automatic, Center], {
                4.1250300000017734`, -9.570131330352698}, DynamicLocation[
                "VertexID$33", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$34", Automatic, Center], {
                3.7701386406335136`, -9.885557687440812}, {
                3.714245011980324, -10.03283947708595}, {
                3.6279439616960416`, -10.094790803644669`}, {
                3.3466011057997322`, -10.003376968369542`}, {
                3.313196165598511, -9.902530807745013}, {
                3.3545473340254524`, -9.750523886340684}, DynamicLocation[
                "VertexID$34", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$34", Automatic, Center], {
                3.354547334025453, -9.499696113659315}, {
                3.3131961655985114`, -9.347689192254986}, {
                3.3466011057997322`, -9.246843031630457}, {
                3.627943961696041, -9.15542919635533}, {
                3.714245011980324, -9.217380522914048}, {
                3.7701386406335136`, -9.364662312559187}, DynamicLocation[
                "VertexID$34", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$35", Automatic, Center], {
                1.729901359366487, -0.6145623125591881}, {
                1.7857949880196768`, -0.46728052291405}, {
                1.872096038303959, -0.405329196355331}, {
                2.153438894200268, -0.49674303163045797`}, {
                2.1868438344014893`, -0.597589192254986}, {
                2.145492665974548, -0.7495961136593159}, DynamicLocation[
                "VertexID$35", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$35", Automatic, Center], {
                2.145492665974548, -1.0004238863406842`}, {
                2.1868438344014893`, -1.152430807745014}, {
                2.153438894200268, -1.2532769683695422`}, {
                1.8720960383039595`, -1.3446908036446692`}, {
                1.785794988019677, -1.2827394770859502`}, {
                1.7299013593664871`, -1.135457687440812}, DynamicLocation[
                "VertexID$35", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$35", Automatic, Center], {
                1.3750100000000012`, -1.0394507471831154`}, DynamicLocation[
                "VertexID$36", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$35", Automatic, Center], {
                1.3750099999999783`, -0.9299886696473122}, DynamicLocation[
                "VertexID$36", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$36", Automatic, Center], {
                1.3750099999999972`, -0.7105692528168867}, DynamicLocation[
                "VertexID$35", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$36", Automatic, Center], {
                1.3750100000000178`, -0.8200313303526878}, DynamicLocation[
                "VertexID$35", Automatic, Center]}], 
              BezierCurveBox[{
               DynamicLocation["VertexID$36", Automatic, Center], {
                1.0201186406335134`, -1.1354576874408118`}, {
                0.9642250119803236, -1.28273947708595}, {
                0.877923961696041, -1.3446908036446692`}, {
                0.5965811057997319, -1.253276968369542}, {
                0.5631761655985106, -1.1524308077450138`}, {
                0.6045273340254521, -1.0004238863406838`}, DynamicLocation[
                "VertexID$36", Automatic, Center]},
               SplineDegree->7], 
              BezierCurveBox[{
               DynamicLocation["VertexID$36", Automatic, Center], {
                0.6045273340254522, -0.749596113659316}, {
                0.5631761655985107, -0.5975891922549862}, {
                0.596581105799732, -0.496743031630458}, {
                0.8779239616960408, -0.40532919635533093`}, {
                0.9642250119803233, -0.46728052291405}, {
                1.020118640633513, -0.614562312559188}, DynamicLocation[
                "VertexID$36", Automatic, Center]},
               SplineDegree->7]}, 
             {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1", "1", "0", "0"}, {"1", "1", "0", "0"}, {
                    "0", "0", "0", "0"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{1, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {7.37505, -9.62511}],
               "DynamicName",
               BoxID -> "VertexID$1"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"0", "0", "0", "0"}, {
                    "1", "1", "0", "0"}, {"1", "1", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {1,
                    1, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {6.37505, -9.62511}],
               "DynamicName",
               BoxID -> "VertexID$2"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "1", "1"}, {"0", "0", "1", "1"}, {
                    "0", "0", "0", "0"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {1.87501, -2.62503}],
               "DynamicName",
               BoxID -> "VertexID$3"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"0", "0", "0", "0"}, {
                    "0", "0", "1", "1"}, {"0", "0", "1", "1"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0,
                    0, 1, 1}}, "Tooltip"]& ],
                 TraditionalForm], {0.8750100000000001, -2.62503}],
               "DynamicName",
               BoxID -> "VertexID$4"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1", "0", "1", "0"}, {"1", "0", "1", "0"}, {
                    "0", "0", "0", "0"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{1, 0, 1, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {1.87501, -4.37505}],
               "DynamicName",
               BoxID -> "VertexID$5"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"0", "0", "0", "0"}, {
                    "1", "0", "1", "0"}, {"1", "0", "1", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {1,
                    0, 1, 0}}, "Tooltip"]& ],
                 TraditionalForm], {0.8750100000000001, -4.37505}],
               "DynamicName",
               BoxID -> "VertexID$6"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "1", "0", "1"}, {"0", "1", "0", "1"}, {
                    "0", "0", "0", "0"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 1, 0, 1}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {4.625030000000001, -0.8750100000000001}],
               "DynamicName",
               BoxID -> "VertexID$7"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"0", "0", "0", "0"}, {
                    "0", "1", "0", "1"}, {"0", "1", "0", "1"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0,
                    1, 0, 1}}, "Tooltip"]& ],
                 TraditionalForm], {3.6250300000000006, -0.8750100000000001}],
               
               "DynamicName",
               BoxID -> "VertexID$8"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "1", "1", "0"}, {"0", "1", "1", "0"}, {
                    "0", "0", "0", "0"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 1, 1, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {4.625030000000001, -2.62503}],
               "DynamicName",
               BoxID -> "VertexID$9"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"0", "0", "0", "0"}, {
                    "0", "1", "1", "0"}, {"0", "1", "1", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0,
                    1, 1, 0}}, "Tooltip"]& ],
                 TraditionalForm], {3.6250300000000006, -2.62503}],
               "DynamicName",
               BoxID -> "VertexID$10"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1", "0", "0", "1"}, {"1", "0", "0", "1"}, {
                    "0", "0", "0", "0"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  Annotation[#, {{1, 0, 0, 1}, {1, 0, 0, 1}, {0, 0, 0, 0}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {4.625030000000001, -4.37505}],
               "DynamicName",
               BoxID -> "VertexID$11"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"0", "0", "0", "0"}, {
                    "1", "0", "0", "1"}, {"1", "0", "0", "1"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {0, 0, 0, 0}, {1, 0, 0, 1}, {1,
                    0, 0, 1}}, "Tooltip"]& ],
                 TraditionalForm], {3.6250300000000006, -4.37505}],
               "DynamicName",
               BoxID -> "VertexID$12"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1", "1", "0", "0"}, {"0", "0", "0", "0"}, {
                    "1", "1", "0", "0"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{1, 1, 0, 0}, {0, 0, 0, 0}, {1, 1, 0, 0}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {1.87501, -6.125070000000001}],
               "DynamicName",
               BoxID -> "VertexID$13"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"1", "1", "0", "0"}, {
                    "0", "0", "0", "0"}, {"1", "1", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}, {1,
                    1, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {0.8750100000000001, -6.125070000000001}],
               "DynamicName",
               BoxID -> "VertexID$14"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "1", "1"}, {"0", "0", "0", "0"}, {
                    "0", "0", "1", "1"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 1, 1}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {4.625030000000001, -6.125070000000001}],
               "DynamicName",
               BoxID -> "VertexID$15"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"0", "0", "1", "1"}, {
                    "0", "0", "0", "0"}, {"0", "0", "1", "1"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 0, 0}, {0,
                    0, 1, 1}}, "Tooltip"]& ],
                 TraditionalForm], {3.6250300000000006, -6.125070000000001}],
               "DynamicName",
               BoxID -> "VertexID$16"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1", "0", "1", "0"}, {"0", "0", "0", "0"}, {
                    "1", "0", "1", "0"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{1, 0, 1, 0}, {0, 0, 0, 0}, {1, 0, 1, 0}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {7.37505, -0.8750100000000001}],
               "DynamicName",
               BoxID -> "VertexID$17"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"1", "0", "1", "0"}, {
                    "0", "0", "0", "0"}, {"1", "0", "1", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {1, 0, 1, 0}, {0, 0, 0, 0}, {1,
                    0, 1, 0}}, "Tooltip"]& ],
                 TraditionalForm], {6.37505, -0.8750100000000001}],
               "DynamicName",
               BoxID -> "VertexID$18"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "1", "0", "1"}, {"0", "0", "0", "0"}, {
                    "0", "1", "0", "1"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 1, 0, 1}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {7.37505, -2.62503}],
               "DynamicName",
               BoxID -> "VertexID$19"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"0", "1", "0", "1"}, {
                    "0", "0", "0", "0"}, {"0", "1", "0", "1"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 0, 0, 0}, {0,
                    1, 0, 1}}, "Tooltip"]& ],
                 TraditionalForm], {6.37505, -2.62503}],
               "DynamicName",
               BoxID -> "VertexID$20"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "1", "1", "0"}, {"0", "0", "0", "0"}, {
                    "0", "1", "1", "0"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {7.37505, -4.37505}],
               "DynamicName",
               BoxID -> "VertexID$21"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"0", "1", "1", "0"}, {
                    "0", "0", "0", "0"}, {"0", "1", "1", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 0, 0, 0}, {0,
                    1, 1, 0}}, "Tooltip"]& ],
                 TraditionalForm], {6.37505, -4.37505}],
               "DynamicName",
               BoxID -> "VertexID$22"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1", "0", "0", "1"}, {"0", "0", "0", "0"}, {
                    "1", "0", "0", "1"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{1, 0, 0, 1}, {0, 0, 0, 0}, {1, 0, 0, 1}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {7.37505, -6.125070000000001}],
               "DynamicName",
               BoxID -> "VertexID$23"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"1", "0", "0", "1"}, {
                    "0", "0", "0", "0"}, {"1", "0", "0", "1"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {1, 0, 0, 1}, {0, 0, 0, 0}, {1,
                    0, 0, 1}}, "Tooltip"]& ],
                 TraditionalForm], {6.37505, -6.125070000000001}],
               "DynamicName",
               BoxID -> "VertexID$24"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"1", "1", "0", "0"}, {
                    "1", "1", "0", "0"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {1, 1, 0, 0}, {1, 1, 0, 0}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {1.87501, -7.87509}],
               "DynamicName",
               BoxID -> "VertexID$25"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1", "1", "0", "0"}, {"0", "0", "0", "0"}, {
                    "0", "0", "0", "0"}, {"1", "1", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{1, 1, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1,
                    1, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {0.8750100000000001, -7.87509}],
               "DynamicName",
               BoxID -> "VertexID$26"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"0", "0", "1", "1"}, {
                    "0", "0", "1", "1"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, 1}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {4.625030000000001, -7.87509}],
               "DynamicName",
               BoxID -> "VertexID$27"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "1", "1"}, {"0", "0", "0", "0"}, {
                    "0", "0", "0", "0"}, {"0", "0", "1", "1"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 1, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0,
                    0, 1, 1}}, "Tooltip"]& ],
                 TraditionalForm], {3.6250300000000006, -7.87509}],
               "DynamicName",
               BoxID -> "VertexID$28"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"1", "0", "1", "0"}, {
                    "1", "0", "1", "0"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {1, 0, 1, 0}, {1, 0, 1, 0}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {7.37505, -7.87509}],
               "DynamicName",
               BoxID -> "VertexID$29"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1", "0", "1", "0"}, {"0", "0", "0", "0"}, {
                    "0", "0", "0", "0"}, {"1", "0", "1", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{1, 0, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1,
                    0, 1, 0}}, "Tooltip"]& ],
                 TraditionalForm], {6.37505, -7.87509}],
               "DynamicName",
               BoxID -> "VertexID$30"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"0", "1", "0", "1"}, {
                    "0", "1", "0", "1"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {0, 1, 0, 1}, {0, 1, 0, 1}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {1.87501, -9.62511}],
               "DynamicName",
               BoxID -> "VertexID$31"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "1", "0", "1"}, {"0", "0", "0", "0"}, {
                    "0", "0", "0", "0"}, {"0", "1", "0", "1"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 1, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0,
                    1, 0, 1}}, "Tooltip"]& ],
                 TraditionalForm], {0.8750100000000001, -9.62511}],
               "DynamicName",
               BoxID -> "VertexID$32"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"0", "1", "1", "0"}, {
                    "0", "1", "1", "0"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 0}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {4.625030000000001, -9.62511}],
               "DynamicName",
               BoxID -> "VertexID$33"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "1", "1", "0"}, {"0", "0", "0", "0"}, {
                    "0", "0", "0", "0"}, {"0", "1", "1", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 1, 1, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0,
                    1, 1, 0}}, "Tooltip"]& ],
                 TraditionalForm], {3.6250300000000006, -9.62511}],
               "DynamicName",
               BoxID -> "VertexID$34"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "0"}, {"1", "0", "0", "1"}, {
                    "1", "0", "0", "1"}, {"0", "0", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{0, 0, 0, 0}, {1, 0, 0, 1}, {1, 0, 0, 1}, {0,
                    0, 0, 0}}, "Tooltip"]& ],
                 TraditionalForm], {1.87501, -0.8750100000000001}],
               "DynamicName",
               BoxID -> "VertexID$35"], 
              TagBox[InsetBox[
                FormBox[
                 TagBox[
                  TooltipBox[
                   
                   GraphicsBox[{
                    RasterBox[{{{0.5, 0., 0., 1.}, {0.5, 0., 0., 1.}, {0.5, 
                    0., 0., 1.}, {0.5, 0., 0., 1.}}}, {{0, 0}, {4, 1}}, {0, 
                    1}], {
                    {GrayLevel[0.5], 
                    StyleBox[LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->40,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}],
                   RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"1", "0", "0", "1"}, {"0", "0", "0", "0"}, {
                    "0", "0", "0", "0"}, {"1", "0", "0", "1"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]],
                  
                  Annotation[#, {{1, 0, 0, 1}, {0, 0, 0, 0}, {0, 0, 0, 0}, {1,
                    0, 0, 1}}, "Tooltip"]& ],
                 TraditionalForm], {0.8750100000000001, -0.8750100000000001}],
               
               "DynamicName",
               BoxID -> "VertexID$36"]}}],
           MouseAppearanceTag["NetworkGraphics"]],
          AllowKernelInitialization->False]],
        BaseStyle->{},
        DefaultBaseStyle->"NetworkGraphics",
        FormatType->TraditionalForm,
        FrameTicks->None,
        ImageSize->700],
       EventHandlerTag[{"VertexClicked" :> ($CellContext`selected$$ = If[
            MemberQ[
             
             VertexList[$CellContext`graph], #], #, $CellContext`selected$$])& \
, Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.958973860858759*^9, 3.959042132852433*^9, 
  3.95904278399725*^9, 3.959050200687665*^9},
 CellLabel->
  "Out[3202]=",ExpressionUUID->"075ccdfb-9181-40fd-81ee-bb67fdb4be10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"currentState", "=", 
      RowBox[{"First", "[", "SpekkensStates", "]"}]}], ",", 
     RowBox[{"states", "=", "SpekkensStates"}], ",", 
     RowBox[{"perms", "=", "SpekkensPermutations"}], ",", 
     RowBox[{"graph", "=", "Null"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"stateGrid", "[", 
      RowBox[{"state_", ",", 
       RowBox[{"size_", ":", "Small"}]}], "]"}], ":=", 
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{"state", ",", "2"}], "]"}], ",", 
       RowBox[{"Mesh", "->", "True"}], ",", 
       RowBox[{"ImageSize", "->", "size"}], ",", 
       RowBox[{"ColorRules", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0", "->", "LightBlue"}], ",", 
          RowBox[{"1", "->", "DarkBlue"}]}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "->", 
        RowBox[{"Style", "[", 
         RowBox[{"state", ",", "10"}], "]"}]}]}], "]"}]}], ";", "\n", 
    RowBox[{"graph", "=", 
     RowBox[{"Graph", "[", 
      RowBox[{"states", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"DirectedEdge", "[", 
           RowBox[{
            RowBox[{"states", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"Permute", "[", 
             RowBox[{
              RowBox[{"states", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "perm"}], "]"}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "states", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"perm", ",", "perms"}], "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"VertexShapeFunction", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Inset", "[", 
           RowBox[{
            RowBox[{"DynamicWrapper", "[", 
             RowBox[{
              RowBox[{"stateGrid", "[", 
               RowBox[{"#2", ",", "Tiny"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<MouseClicked\>\"", ":>", 
                RowBox[{"(", 
                 RowBox[{"currentState", "=", "#2"}], ")"}]}], "}"}]}], "]"}],
             ",", "#", ",", "Center", ",", 
            RowBox[{"Scaled", "[", "0.05", "]"}]}], "]"}], "&"}], ")"}]}], 
       ",", 
       RowBox[{"VertexSize", "->", "0.1"}], ",", 
       RowBox[{"GraphLayout", "->", "\"\<SpringEmbedding\>\""}], ",", 
       RowBox[{"ImageSize", "->", "500"}], ",", 
       RowBox[{"EdgeStyle", "->", 
        RowBox[{"Opacity", "[", "0.3", "]"}]}], ",", 
       RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}]}], "]"}]}], ";", 
    "\n", 
    RowBox[{"Panel", "[", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Spekkens Toy Model State Explorer\>\"", ",", "16", ",", 
            "Bold"}], "]"}], ",", 
          RowBox[{"Spacer", "[", "10", "]"}], ",", 
          RowBox[{"Panel", "[", 
           RowBox[{
            RowBox[{"Column", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Current State\>\"", ",", "14", ",", "Bold"}], 
                 "]"}], ",", 
                RowBox[{"Dynamic", "[", 
                 RowBox[{"stateGrid", "[", 
                  RowBox[{"currentState", ",", "Medium"}], "]"}], "]"}], ",", 
                
                RowBox[{"Dynamic", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<State Vector: \>\"", ",", "currentState"}], 
                    "}"}], "]"}], ",", "12"}], "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
            RowBox[{"Background", "->", 
             RowBox[{"Lighter", "[", 
              RowBox[{"Gray", ",", "0.9"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"Spacer", "[", "10", "]"}], ",", 
          RowBox[{"Panel", "[", 
           RowBox[{"Column", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Apply Permutation\>\"", ",", "14", ",", "Bold"}],
                 "]"}], ",", 
               RowBox[{"Row", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Button", "[", 
                    RowBox[{"\"\<Identity\>\"", ",", 
                    RowBox[{"currentState", "=", 
                    RowBox[{"Permute", "[", 
                    RowBox[{"currentState", ",", 
                    RowBox[{"perms", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"ImageSize", "->", "Medium"}], ",", 
                    RowBox[{"Background", "->", "LightGreen"}]}], "]"}], ",", 
                   
                   RowBox[{"Button", "[", 
                    RowBox[{
                    "\"\<Swap 1\[LeftRightArrow]2,3\[LeftRightArrow]4\>\"", 
                    ",", 
                    RowBox[{"currentState", "=", 
                    RowBox[{"Permute", "[", 
                    RowBox[{"currentState", ",", 
                    RowBox[{"perms", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"ImageSize", "->", "Medium"}]}], "]"}], ",", 
                   RowBox[{"Button", "[", 
                    RowBox[{
                    "\"\<Swap 1\[LeftRightArrow]3,2\[LeftRightArrow]4\>\"", 
                    ",", 
                    RowBox[{"currentState", "=", 
                    RowBox[{"Permute", "[", 
                    RowBox[{"currentState", ",", 
                    RowBox[{"perms", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"ImageSize", "->", "Medium"}]}], "]"}], ",", 
                   RowBox[{"Button", "[", 
                    RowBox[{
                    "\"\<Swap 1\[LeftRightArrow]4,2\[LeftRightArrow]3\>\"", 
                    ",", 
                    RowBox[{"currentState", "=", 
                    RowBox[{"Permute", "[", 
                    RowBox[{"currentState", ",", 
                    RowBox[{"perms", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{"ImageSize", "->", "Medium"}]}], "]"}]}], "}"}], 
                 ",", 
                 RowBox[{"Spacer", "[", "5", "]"}]}], "]"}], ",", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<Reset to Random State\>\"", ",", 
                 RowBox[{"currentState", "=", 
                  RowBox[{"RandomChoice", "[", "states", "]"}]}], ",", 
                 RowBox[{"ImageSize", "->", "Large"}], ",", 
                 RowBox[{"Background", "->", "LightRed"}]}], "]"}]}], "}"}], 
             ",", 
             RowBox[{"Alignment", "->", "Center"}]}], "]"}], "]"}], ",", 
          RowBox[{"Spacer", "[", "10", "]"}], ",", 
          RowBox[{"Panel", "[", 
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<State Transition Graph\>\"", ",", "14", ",", "Bold"}], 
               "]"}], ",", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"HighlightGraph", "[", 
                RowBox[{"graph", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"currentState", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Red", ",", "Thick"}], "]"}]}], "]"}], ",", 
                   RowBox[{"EdgeStyle", "->", 
                    RowBox[{
                    RowBox[{"DirectedEdge", "[", 
                    RowBox[{
                    RowBox[{"Alternatives", "@@", "states"}], ",", 
                    "currentState"}], "]"}], "->", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Red", ",", "Thick"}], "]"}]}]}]}], "}"}]}], 
                "]"}], "]"}]}], "}"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
      RowBox[{"Background", "->", 
       RowBox[{"Lighter", "[", 
        RowBox[{"Blue", ",", "0.95"}], "]"}]}]}], "]"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.958973876064739*^9, 3.958973876066292*^9}, {
  3.9590502086392393`*^9, 3.959050208760186*^9}},
 CellLabel->
  "In[3203]:=",ExpressionUUID->"7463d364-e795-48b6-bf75-75870c6b7bc2"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`currentState$$ = {1, 1, 0, 
  0}, $CellContext`states$$ = {{1, 1, 0, 0}, {0, 0, 1, 1}, {1, 0, 1, 0}, {0, 
  1, 0, 1}, {0, 1, 1, 0}, {1, 0, 0, 1}}, $CellContext`perms$$ = {
   Cycles[{}], 
   Cycles[{{1, 2}, {3, 4}}], 
   Cycles[{{1, 3}, {2, 4}}], 
   Cycles[{{1, 4}, {2, 3}}]}, $CellContext`graph$$ = 
  Graph[{{1, 1, 0, 0}, {0, 0, 1, 1}, {1, 0, 1, 0}, {0, 1, 0, 1}, {0, 1, 1, 
   0}, {1, 0, 0, 
   1}}, {{{1, 1}, {1, 1}, {1, 2}, {1, 2}, {2, 2}, {2, 2}, {2, 1}, {2, 1}, {3, 
    3}, {3, 4}, {3, 3}, {3, 4}, {4, 4}, {4, 3}, {4, 4}, {4, 3}, {5, 5}, {5, 
    6}, {5, 6}, {5, 5}, {6, 6}, {6, 5}, {6, 5}, {6, 6}}, Null}, {EdgeStyle -> {
      Opacity[0.3]}, GraphLayout -> "SpringEmbedding", ImageSize -> 500, 
    PerformanceGoal -> "Quality", VertexShapeFunction -> {Inset[
       DynamicWrapper[
        $CellContext`stateGrid[#2, Tiny], {
        "MouseClicked" :> ($CellContext`currentState$10097392 = #2)}], #, 
       Center, 
       Scaled[0.05]]& }, VertexSize -> {0.1}}]}, 
  PanelBox[
   TagBox[GridBox[{
      {
       StyleBox["\<\"Spekkens Toy Model State Explorer\"\>",
        StripOnInput->False,
        FontSize->16,
        FontWeight->Bold]},
      {
       TemplateBox[{10},
        "Spacer1"]},
      {
       PanelBox[
        TagBox[GridBox[{
           {
            StyleBox["\<\"Current State\"\>",
             StripOnInput->False,
             FontSize->14,
             FontWeight->Bold]},
           {
            DynamicBox[ToBoxes[
              $CellContext`stateGrid[$CellContext`currentState$$, Medium], 
              StandardForm],
             ImageSizeCache->{92., {2., 5.}}]},
           {
            DynamicBox[ToBoxes[
              Style[
               Row[{"State Vector: ", $CellContext`currentState$$}], 12], 
              StandardForm],
             ImageSizeCache->{87., {2., 6.}}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Center}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        Background->RGBColor[0.95, 0.95, 0.95]]},
      {
       TemplateBox[{10},
        "Spacer1"]},
      {
       PanelBox[
        TagBox[GridBox[{
           {
            StyleBox["\<\"Apply Permutation\"\>",
             StripOnInput->False,
             FontSize->14,
             FontWeight->Bold]},
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              ButtonBox[
              "\"Identity\"", 
               ButtonFunction :> ($CellContext`currentState$$ = 
                Permute[$CellContext`currentState$$, 
                  Part[$CellContext`perms$$, 1]]), ImageSize -> Medium, 
               Background -> RGBColor[0.88, 1, 0.88], Appearance -> Automatic,
                BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> Automatic, 
               FrameMargins -> 5, Method -> "Preemptive"], 
              ButtonBox[
              "\"Swap 1\[LeftRightArrow]2,3\[LeftRightArrow]4\"", 
               ButtonFunction :> ($CellContext`currentState$$ = 
                Permute[$CellContext`currentState$$, 
                  Part[$CellContext`perms$$, 2]]), ImageSize -> Medium, 
               Appearance -> Automatic, BaseStyle -> {FontFamily -> "Arial"}, 
               Evaluator -> Automatic, FrameMargins -> 5, Method -> 
               "Preemptive"], 
              ButtonBox[
              "\"Swap 1\[LeftRightArrow]3,2\[LeftRightArrow]4\"", 
               ButtonFunction :> ($CellContext`currentState$$ = 
                Permute[$CellContext`currentState$$, 
                  Part[$CellContext`perms$$, 3]]), ImageSize -> Medium, 
               Appearance -> Automatic, BaseStyle -> {FontFamily -> "Arial"}, 
               Evaluator -> Automatic, FrameMargins -> 5, Method -> 
               "Preemptive"], 
              ButtonBox[
              "\"Swap 1\[LeftRightArrow]4,2\[LeftRightArrow]3\"", 
               ButtonFunction :> ($CellContext`currentState$$ = 
                Permute[$CellContext`currentState$$, 
                  Part[$CellContext`perms$$, 4]]), ImageSize -> Medium, 
               Appearance -> Automatic, BaseStyle -> {FontFamily -> "Arial"}, 
               Evaluator -> Automatic, FrameMargins -> 5, Method -> 
               "Preemptive"]},
             "RowWithSeparator"]},
           {
            ButtonBox["\<\"Reset to Random State\"\>",
             Appearance->Automatic,
             Background->RGBColor[1, 0.85, 0.85],
             BaseStyle->{FontFamily -> "Arial"},
             
             ButtonFunction:>($CellContext`currentState$$ = 
              RandomChoice[$CellContext`states$$]),
             Evaluator->Automatic,
             FrameMargins->5,
             ImageSize->Large,
             Method->"Preemptive"]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Center}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]]},
      {
       TemplateBox[{10},
        "Spacer1"]},
      {
       PanelBox[
        TagBox[GridBox[{
           {
            StyleBox["\<\"State Transition Graph\"\>",
             StripOnInput->False,
             FontSize->14,
             FontWeight->Bold]},
           {
            DynamicBox[ToBoxes[
              HighlightGraph[$CellContext`graph$$, {
                Style[$CellContext`currentState$$, 
                 Directive[Red, Thick]], EdgeStyle -> (DirectedEdge[
                   Apply[
                   Alternatives, $CellContext`states$$], \
$CellContext`currentState$$] -> Directive[Red, Thick])}], StandardForm],
             ImageSizeCache->{313., {414., 417.}}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   Background->RGBColor[0.95, 0.95, 1.]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.958973876251559*^9, 3.959042134260412*^9, 
  3.9590427840573397`*^9, 3.959050209452964*^9},
 CellLabel->
  "Out[3205]=",ExpressionUUID->"a63d633c-b933-4a27-85c3-7be5178fed60"]
}, Open  ]],

Cell["\<\
The provided images and Mathematica code demonstrate two distinct but related \
interactive tools for exploring the Spekkens Toy Model of quantum mechanics. \
Both tools leverage graph theory to visualize state transitions and \
relationships within this intriguing theoretical framework.

The first image (`image_8488ee.png`) displays a grid of 18 identical \
\[OpenCurlyDoubleQuote]dumbbell\[CloseCurlyDoubleQuote] like structures. Each \
dumbbell represents a graph node, and the visual similarity suggests that \
these are repetitions of a core graph or components within a larger, more \
complex state space, perhaps highlighting the structure of the connected \
components when specific permutations are applied to composite states. The \
associated code defines the `SpekkensStates` and `SpekkensPermutations` and \
constructs a graph (`graph`) based on the `compositeStates` (Kronecker \
product of pairs of Spekkens states). It then dynamically allows users to \
click on any node within this graph. When a node is selected, its connected \
component (all states reachable from it within the graph) is highlighted, \
providing a visual representation of the equivalence classes of states under \
the Spekkens permutations. This tool emphasizes the global structure of the \
state space and the partitions induced by the allowed transformations.

The second image (`image_84890e.png`) depicts a more focused \
\[OpenCurlyDoubleQuote]Spekkens Toy Model State Explorer\
\[CloseCurlyDoubleQuote] with a clear user interface. At the top, the \
\[OpenCurlyDoubleQuote]Current State\[CloseCurlyDoubleQuote] is displayed as \
a $2 \\times 2$ binary pattern, along with its state vector. Below this, a \
set of buttons allows the user to \[OpenCurlyDoubleQuote]Apply Permutation\
\[CloseCurlyDoubleQuote] (Identity, Swap 1\[LeftRightArrow]2,3\
\[LeftRightArrow]4, etc.) or \[OpenCurlyDoubleQuote]Reset to Random State.\
\[CloseCurlyDoubleQuote] The lower portion of the interface shows a \
\[OpenCurlyDoubleQuote]State Transition Graph,\[CloseCurlyDoubleQuote] which \
specifically visualizes the direct connections between the *fundamental* \
`SpekkensStates`. This graph allows users to see how applying a permutation \
transforms the current state into another, with the current state highlighted \
in red. The associated code directly defines the graph of these fundamental \
states and their transitions. When a permutation button is pressed, the \
`currentState` variable is updated, and the graph dynamically highlights the \
path from the previous state to the new one, offering an intuitive, \
step-by-step exploration of state evolution for the basic Spekkens states.\
\>", "Text",
 CellChangeTimes->{{3.959050133546049*^9, 3.959050153204269*^9}, {
  3.95905018468279*^9, 3.9590501917338057`*^9}, {3.9590502261453867`*^9, 
  3.9590502305900993`*^9}},ExpressionUUID->"826225b4-97ed-4b60-8218-\
e291ae22e8a5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"compositeStates", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"#1", ",", "#2"}], "]"}], ",", "1"}], "]"}], "&"}], "@@@", 
    RowBox[{"Tuples", "[", 
     RowBox[{"SpekkensStates", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"compositeStates", "=", 
   RowBox[{"DeleteDuplicates", "[", "compositeStates", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"indexMap", "=", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{"compositeStates", "->", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "compositeStates", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"applyPermutation", "[", 
    RowBox[{"state_List", ",", "cycle_Cycles"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"permList", ",", "mat"}], "}"}], ",", 
     RowBox[{
      RowBox[{"permList", "=", 
       RowBox[{"PermutationList", "[", 
        RowBox[{"cycle", ",", "4"}], "]"}]}], ";", "\n", 
      RowBox[{"mat", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{"state", ",", "4"}], "]"}]}], ";", "\n", 
      RowBox[{"Flatten", "[", 
       RowBox[{"mat", "[", 
        RowBox[{"[", 
         RowBox[{"permList", ",", "permList"}], "]"}], "]"}], "]"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{
    RowBox[{"Reap", "[", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"cur", "=", 
         RowBox[{"compositeStates", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"trans", "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"applyPermutation", "[", 
             RowBox[{"cur", ",", "#"}], "]"}], "&"}], "/@", 
           "SpekkensPermutations"}], "]"}]}], ";", "\n", 
        RowBox[{"neigh", "=", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"indexMap", "/@", "trans"}], ",", "i"}], "]"}]}], ";", 
        "\n", 
        RowBox[{"Sow", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"DirectedEdge", "[", 
             RowBox[{"i", ",", "#"}], "]"}], "&"}], "/@", "neigh"}], 
          ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "compositeStates", "]"}]}], "}"}]}], "]"}], 
     "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"graph", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"edges", ",", 
     RowBox[{"VertexLabels", "->", 
      RowBox[{"Placed", "[", 
       RowBox[{"\"\<Name\>\"", ",", "Center"}], "]"}]}], ",", 
     RowBox[{"EdgeStyle", "->", "Black"}], ",", 
     RowBox[{"VertexSize", "->", "0.3"}], ",", 
     RowBox[{"GraphLayout", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<SpringElectricalEmbedding\>\"", ",", 
        RowBox[{"\"\<RepulsiveForcePower\>\"", "->", 
         RowBox[{"-", "2"}]}]}], "}"}]}], ",", 
     RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"selected", "=", "1"}], "}"}], ",", 
   RowBox[{"Column", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{"graph", ",", 
        RowBox[{"VertexShapeFunction", "->", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"pos", ",", "v", ",", "s"}], "}"}], ",", 
           RowBox[{"EventHandler", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"FaceForm", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"v", "==", "selected"}], ",", "LightYellow", ",", 
                  "LightBlue"}], "]"}], "]"}], ",", 
               RowBox[{"EdgeForm", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"v", "==", "selected"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Thick", ",", "Red"}], "}"}], ",", "Gray"}], "]"}],
                 "]"}], ",", 
               RowBox[{"Disk", "[", 
                RowBox[{"pos", ",", "0.15"}], "]"}], ",", 
               RowBox[{"Inset", "[", 
                RowBox[{
                 RowBox[{"ArrayPlot", "[", 
                  RowBox[{
                   RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"compositeStates", "[", 
                    RowBox[{"[", "v", "]"}], "]"}], ",", "4"}], "]"}], ",", 
                   RowBox[{"ImageSize", "->", "30"}], ",", 
                   RowBox[{"Mesh", "->", "True"}], ",", 
                   RowBox[{"PlotRangePadding", "->", "0"}], ",", 
                   RowBox[{"Frame", "->", "False"}], ",", 
                   RowBox[{"FrameTicks", "->", "None"}]}], "]"}], ",", 
                 "pos"}], "]"}]}], "}"}], ",", 
             RowBox[{"\"\<MouseClicked\>\"", ":>", 
              RowBox[{"(", 
               RowBox[{"selected", "=", "v"}], ")"}]}]}], "]"}]}], "]"}]}], 
        ",", 
        RowBox[{"PlotLabel", "->", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Click a state to explore\>\"", ",", "14", ",", "Bold"}], 
          "]"}]}], ",", 
        RowBox[{"ImageSize", "->", "800"}]}], "]"}], ",", 
      RowBox[{"Dynamic", "[", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Selected index:\>\"", ",", "selected"}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"\"\<State (4\[Times]4):\>\"", ",", 
             RowBox[{"MatrixForm", "@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"compositeStates", "[", 
                 RowBox[{"[", "selected", "]"}], "]"}], ",", "4"}], "]"}]}]}],
             "}"}]}], "}"}], ",", 
         RowBox[{"Alignment", "->", "Left"}]}], "]"}], "]"}]}], "}"}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.959042303131877*^9, 3.959042303133115*^9}, {
  3.959050237230364*^9, 3.959050245292934*^9}},
 CellLabel->
  "In[3206]:=",ExpressionUUID->"3b768f2f-7a46-49b1-aca5-cd7f53844afb"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`selected$$ = 1}, 
  TagBox[GridBox[{
     {
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{1, 8, 2, 7, 3, 4, 9, 10, 5, 6, 12, 11, 13, 19, 14, 20, 15, 
           22, 16, 21, 17, 24, 18, 23, 25, 31, 32, 26, 27, 34, 33, 28, 29, 36,
            30, 35}, {{{1, 2}, {3, 4}, {5, 6}, {5, 7}, {5, 8}, {6, 5}, {6, 
            8}, {6, 7}, {9, 10}, {9, 11}, {9, 12}, {10, 9}, {10, 12}, {10, 
            11}, {4, 3}, {2, 1}, {7, 8}, {7, 5}, {7, 6}, {8, 7}, {8, 6}, {8, 
            5}, {12, 11}, {12, 10}, {12, 9}, {11, 12}, {11, 9}, {11, 10}, {13,
             14}, {13, 15}, {13, 16}, {15, 16}, {15, 13}, {15, 14}, {17, 
            18}, {19, 20}, {21, 22}, {21, 23}, {21, 24}, {23, 24}, {23, 21}, {
            23, 22}, {14, 13}, {14, 16}, {14, 15}, {16, 15}, {16, 14}, {16, 
            13}, {20, 19}, {18, 17}, {24, 23}, {24, 22}, {24, 21}, {22, 21}, {
            22, 24}, {22, 23}, {25, 26}, {25, 27}, {25, 28}, {28, 27}, {28, 
            26}, {28, 25}, {29, 30}, {29, 31}, {29, 32}, {32, 31}, {32, 30}, {
            32, 29}, {33, 34}, {35, 36}, {26, 25}, {26, 28}, {26, 27}, {27, 
            28}, {27, 25}, {27, 26}, {31, 32}, {31, 29}, {31, 30}, {30, 29}, {
            30, 32}, {30, 31}, {36, 35}, {34, 33}}, Null}, {EdgeStyle -> {
              GrayLevel[0]}, 
            GraphLayout -> {
             "Dimension" -> 2, 
              "VertexLayout" -> {
               "SpringElectricalEmbedding", "RepulsiveForcePower" -> -2}}, 
            ImageSize -> 800, PerformanceGoal -> "Quality", PlotLabel -> 
            Style["Click a state to explore", 14, Bold], VertexLabels -> {
              Placed["Name", Center]}, VertexShapeFunction -> {
              
              Function[{$CellContext`pos$, $CellContext`v$, $CellContext`s$}, 
               
               EventHandler[{
                 FaceForm[
                  
                  If[$CellContext`v$ == $CellContext`selected$10098449, 
                   LightYellow, LightBlue]], 
                 EdgeForm[
                  
                  If[$CellContext`v$ == $CellContext`selected$10098449, {
                   Thick, Red}, Gray]], 
                 Disk[$CellContext`pos$, 0.15], 
                 Inset[
                  ArrayPlot[
                   Partition[
                    Part[$CellContext`compositeStates, $CellContext`v$], 4], 
                   ImageSize -> 30, Mesh -> True, PlotRangePadding -> 0, 
                   Frame -> False, FrameTicks -> None], $CellContext`pos$]}, 
                "MouseClicked" :> ($CellContext`selected$10098449 = \
$CellContext`v$)]]}, VertexSize -> {0.3}}]]}, 
         TagBox[GraphicsGroupBox[{
            {GrayLevel[0], Opacity[0.7], Arrowheads[0.024548674271217385`], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$1", Automatic, Center], {
                2.4828028359157592`, -3.4358359783164127`}, DynamicLocation[
                "VertexID$2", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$2", Automatic, Center], {
                2.4828028359156575`, -3.1069544839501866`}, DynamicLocation[
                "VertexID$1", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$3", Automatic, Center], {
                2.4828028359156575`, -2.752487574372173}, DynamicLocation[
                "VertexID$4", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$4", Automatic, Center], {
                2.4828028359157086`, -2.4236060800059307`}, DynamicLocation[
                "VertexID$3", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$5", Automatic, Center], {
                2.7295892896048946`, -1.8130423845490904`}, DynamicLocation[
                "VertexID$6", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$5", Automatic, Center], {
                3.0193852321913335`, -1.2373836045913873`}, DynamicLocation[
                "VertexID$7", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$5", Automatic, Center], {
                3.162374411504873, -1.6705443360056584`}, DynamicLocation[
                "VertexID$8", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$6", Automatic, Center], {
                2.444629480809434, -1.8132515340922895`}, DynamicLocation[
                "VertexID$5", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$6", Automatic, Center], {
                2.8772232987752075`, -1.6707138452591823`}, DynamicLocation[
                "VertexID$7", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$6", Automatic, Center], {
                3.0202124780887183`, -2.1038745766734306`}, DynamicLocation[
                "VertexID$8", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$7", Automatic, Center], {
                3.01954287473997, -1.5219796529207221`}, DynamicLocation[
                "VertexID$5", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$7", Automatic, Center], {
                3.162340750119352, -1.9551007440453088`}, DynamicLocation[
                "VertexID$6", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$7", Automatic, Center], {
                3.5951258720192953`, -1.8126026955018526`}, DynamicLocation[
                "VertexID$8", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$8", Automatic, Center], {
                2.8775113715938603`, -1.9554553463040545`}, DynamicLocation[
                "VertexID$5", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$8", Automatic, Center], {
                3.020309246973236, -2.3885764374286556`}, DynamicLocation[
                "VertexID$6", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$8", Automatic, Center], {
                3.310105189559651, -1.812917657470906}, DynamicLocation[
                "VertexID$7", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$9", Automatic, Center], {
                0.3136349763654128, -0.6044375214476458}, DynamicLocation[
                "VertexID$10", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$9", Automatic, Center], {
                0.6034309189518428, -0.028778741489893366`}, DynamicLocation[
                "VertexID$11", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$9", Automatic, Center], {
                0.7464200982653716, -0.4619394729041693}, DynamicLocation[
                "VertexID$12", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$10", Automatic, Center], {
                0.02867516756992594, -0.6046466709908387}, DynamicLocation[
                "VertexID$9", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$10", Automatic, Center], {
                0.46126898553570767`, -0.46210898215767393`}, DynamicLocation[
                "VertexID$11", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$10", Automatic, Center], {
                0.60425816484924, -0.8952697135719526}, DynamicLocation[
                "VertexID$12", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$11", Automatic, Center], {
                0.603588561500491, -0.31337478981922817`}, DynamicLocation[
                "VertexID$9", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$11", Automatic, Center], {
                0.7463864368798352, -0.7464958809438197}, DynamicLocation[
                "VertexID$10", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$11", Automatic, Center], {
                1.1791715587798015`, -0.6039978324003354}, DynamicLocation[
                "VertexID$12", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$12", Automatic, Center], {
                0.46155705835437005`, -0.7468504832025638}, DynamicLocation[
                "VertexID$9", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$12", Automatic, Center], {
                0.6043549337337168, -1.1799715743271542`}, DynamicLocation[
                "VertexID$10", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$12", Automatic, Center], {
                0.8941508763201543, -0.6043127943694024}, DynamicLocation[
                "VertexID$11", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$13", Automatic, Center], {
                2.7295892896049154`, -0.6044375214476618}, DynamicLocation[
                "VertexID$14", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$13", Automatic, Center], {
                3.0193852321913415`, -0.028778741489893393`}, DynamicLocation[
                "VertexID$15", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$13", Automatic, Center], {
                3.162374411504884, -0.46193947290417425`}, DynamicLocation[
                "VertexID$16", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$14", Automatic, Center], {
                2.4446294808094224`, -0.604646670990857}, DynamicLocation[
                "VertexID$13", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$14", Automatic, Center], {
                2.8772232987752027`, -0.46210898215767693`}, DynamicLocation[
                "VertexID$15", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$14", Automatic, Center], {
                3.020212478088765, -0.8952697135719586}, DynamicLocation[
                "VertexID$16", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$15", Automatic, Center], {
                3.0195428747399893`, -0.3133747898192267}, DynamicLocation[
                "VertexID$13", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$15", Automatic, Center], {
                3.162340750119342, -0.7464958809438162}, DynamicLocation[
                "VertexID$14", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$15", Automatic, Center], {
                3.595125872019301, -0.6039978324003298}, DynamicLocation[
                "VertexID$16", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$16", Automatic, Center], {
                2.8775113715938643`, -0.7468504832025699}, DynamicLocation[
                "VertexID$13", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$16", Automatic, Center], {
                3.0203092469732162`, -1.1799715743271437`}, DynamicLocation[
                "VertexID$14", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$16", Automatic, Center], {
                3.31010518955965, -0.6043127943694172}, DynamicLocation[
                "VertexID$15", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$17", Automatic, Center], {
                0.670837100986058, -3.094161776344279}, DynamicLocation[
                "VertexID$18", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$18", Automatic, Center], {
                0.670837100986062, -2.7652802819780544`}, DynamicLocation[
                "VertexID$17", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$19", Automatic, Center], {
                2.4828028359157086`, -3.0941617763442766`}, DynamicLocation[
                "VertexID$20", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$20", Automatic, Center], {
                2.482802835915708, -2.7652802819780504`}, DynamicLocation[
                "VertexID$19", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$21", Automatic, Center], {
                1.5216121329851644`, -0.6044375214476528}, DynamicLocation[
                "VertexID$22", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$21", Automatic, Center], {
                1.8114080755715942`, -0.028778741489892446`}, DynamicLocation[
                "VertexID$23", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$21", Automatic, Center], {
                1.954397254885128, -0.46193947290417203`}, DynamicLocation[
                "VertexID$24", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$22", Automatic, Center], {
                1.2366523241896752`, -0.6046466709908553}, DynamicLocation[
                "VertexID$21", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$22", Automatic, Center], {
                1.669246142155462, -0.4621089821576688}, DynamicLocation[
                "VertexID$23", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$22", Automatic, Center], {
                1.8122353214689688`, -0.8952697135719606}, DynamicLocation[
                "VertexID$24", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$23", Automatic, Center], {
                1.8115657181202343`, -0.3133747898192264}, DynamicLocation[
                "VertexID$21", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$23", Automatic, Center], {
                1.9543635934995789`, -0.7464958809438248}, DynamicLocation[
                "VertexID$22", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$23", Automatic, Center], {
                2.387148715399553, -0.60399783240035}, DynamicLocation[
                "VertexID$24", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$24", Automatic, Center], {
                1.6695342149741332`, -0.7468504832025874}, DynamicLocation[
                "VertexID$21", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$24", Automatic, Center], {
                1.8123320903534659`, -1.1799715743271542`}, DynamicLocation[
                "VertexID$22", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$24", Automatic, Center], {
                2.1021280329399015`, -0.604312794369403}, DynamicLocation[
                "VertexID$23", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$25", Automatic, Center], {
                0.313634976365414, -1.813042384549141}, DynamicLocation[
                "VertexID$26", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$25", Automatic, Center], {
                0.6034309189518416, -1.2373836045913866`}, DynamicLocation[
                "VertexID$27", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$25", Automatic, Center], {
                0.7464200982653602, -1.6705443360056533`}, DynamicLocation[
                "VertexID$28", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$26", Automatic, Center], {
                0.0286751675699259, -1.8132515340923288`}, DynamicLocation[
                "VertexID$25", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$26", Automatic, Center], {
                0.4612689855357096, -1.6707138452591643`}, DynamicLocation[
                "VertexID$27", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$26", Automatic, Center], {
                0.6042581648492433, -2.1038745766734457`}, DynamicLocation[
                "VertexID$28", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$27", Automatic, Center], {
                0.6035885615004867, -1.5219796529207197`}, DynamicLocation[
                "VertexID$25", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$27", Automatic, Center], {
                0.746386436879848, -1.9551007440452999`}, DynamicLocation[
                "VertexID$26", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$27", Automatic, Center], {
                1.179171558779802, -1.8126026955018308`}, DynamicLocation[
                "VertexID$28", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$28", Automatic, Center], {
                0.46155705835436633`, -1.955455346304048}, DynamicLocation[
                "VertexID$25", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$28", Automatic, Center], {
                0.6043549337337224, -2.3885764374286462`}, DynamicLocation[
                "VertexID$26", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$28", Automatic, Center], {
                0.894150876320153, -1.8129176574708858`}, DynamicLocation[
                "VertexID$27", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$29", Automatic, Center], {
                1.5216121329851686`, -1.8130423845491448`}, DynamicLocation[
                "VertexID$30", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$29", Automatic, Center], {
                1.8114080755715956`, -1.2373836045913797`}, DynamicLocation[
                "VertexID$31", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$29", Automatic, Center], {
                1.954397254885114, -1.6705443360056662`}, DynamicLocation[
                "VertexID$32", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$30", Automatic, Center], {
                1.2366523241896796`, -1.8132515340923083`}, DynamicLocation[
                "VertexID$29", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$30", Automatic, Center], {
                1.6692461421554574`, -1.6707138452591714`}, DynamicLocation[
                "VertexID$31", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$30", Automatic, Center], {
                1.812235321468982, -2.103874576673448}, DynamicLocation[
                "VertexID$32", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$31", Automatic, Center], {
                1.811565718120237, -1.5219796529207161`}, DynamicLocation[
                "VertexID$29", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$31", Automatic, Center], {
                1.954363593499585, -1.955100744045319}, DynamicLocation[
                "VertexID$30", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$31", Automatic, Center], {
                2.38714871539955, -1.8126026955018284`}, DynamicLocation[
                "VertexID$32", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$32", Automatic, Center], {
                1.66953421497412, -1.9554553463040403`}, DynamicLocation[
                "VertexID$29", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$32", Automatic, Center], {
                1.8123320903534534`, -2.38857643742865}, DynamicLocation[
                "VertexID$30", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$32", Automatic, Center], {
                2.10212803293991, -1.8129176574709172`}, DynamicLocation[
                "VertexID$31", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$33", Automatic, Center], {
                0.6708371009860479, -3.435835978316402}, DynamicLocation[
                "VertexID$34", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$34", Automatic, Center], {
                0.6708371009860357, -3.1069544839501826`}, DynamicLocation[
                "VertexID$33", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$35", Automatic, Center], {
                0.6708371009860626, -2.7524875743721573`}, DynamicLocation[
                "VertexID$36", Automatic, Center]}]], 
             ArrowBox[
              BezierCurveBox[{
               DynamicLocation["VertexID$36", Automatic, Center], {
                0.6708371009860564, -2.423606080005933}, DynamicLocation[
                "VertexID$35", Automatic, Center]}]]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[{RGBColor[1, 0, 0], Thickness[Large]}], FaceForm[
                  RGBColor[1, 1, 0.85]], 
                  DiskBox[{2.982802835915687, -3.2713952311332934`}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 1}, {0, 
                    0, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {2.982802835915687, -3.2713952311332934}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 1), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$1"], 
               InsetBox["1", DynamicLocation["VertexID$1", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$1"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{1.9828028359156868`, -3.2713952311332934`}, 0.15],
                   InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 0, 0}, {1, 1, 0, 0}, {1, 1, 1, 1}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {1.9828028359156868, -3.2713952311332934}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 8), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$2"], 
               InsetBox["8", DynamicLocation["VertexID$2", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$2"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{2.982802835915687, -2.588046827189045}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 1, 0, 0}, {1, 
                    1, 0, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {2.982802835915687, -2.588046827189045}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 2), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$3"], 
               InsetBox["2", DynamicLocation["VertexID$3", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$3"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{1.9828028359156868`, -2.588046827189045}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{0, 0, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 1}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {1.9828028359156868, -2.588046827189045}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 7), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$4"], 
               InsetBox["7", DynamicLocation["VertexID$4", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$4"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{2.5867914142255617`, -1.379921293424551}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 0, 1}, {0, 
                    1, 0, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    PlotRangePadding->
                    0], {2.5867914142255617, -1.379921293424551}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 3), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$5"], 
               InsetBox["3", DynamicLocation["VertexID$5", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$5"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{2.5874273561887766`, -2.246372625216921}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 1, 0}, {1, 
                    0, 1, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {2.5874273561887766, -2.246372625216921}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 4), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$6"], 
               InsetBox["4", DynamicLocation["VertexID$6", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$6"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{3.4521366927057673`, -1.3794419640875533`}, 0.15],
                   InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{0, 1, 0, 1}, {0, 1, 0, 1}, {1, 1, 1, 1}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {3.4521366927057673, -1.3794419640875533}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 9), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$7"], 
               InsetBox["9", DynamicLocation["VertexID$7", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$7"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{3.453094368873187, -2.246078388885171}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 0, 1, 0}, {1, 0, 1, 0}, {1, 1, 1, 1}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {3.453094368873187, -2.246078388885171}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 10), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$8"], 
               InsetBox["10", DynamicLocation["VertexID$8", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$8"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{0.17083710098606208`, -0.17131643032305965`}, 
                   0.15], InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {1, 0, 0, 1}, {1, 
                    0, 0, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {0.17083710098606208, -0.17131643032305965}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 5), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$9"], 
               InsetBox["5", DynamicLocation["VertexID$9", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$9"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{0.17147304294927712`, -1.0377677621154295`}, 
                   0.15], InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {1, 1, 1, 1}, {0, 1, 1, 0}, {0, 
                    1, 1, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {0.17147304294927712, -1.0377677621154295}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 6), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$10"], 
               InsetBox["6", DynamicLocation["VertexID$10", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$10"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{1.0361823794662677`, -0.17083710098606197`}, 
                   0.15], InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{0, 1, 1, 0}, {0, 1, 1, 0}, {1, 1, 1, 1}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {1.0361823794662677, -0.17083710098606197}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 12), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$11"], 
               InsetBox["12", DynamicLocation["VertexID$11", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$11"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{1.0371400556336878`, -1.0374735257836796`}, 0.15],
                   InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 0, 0, 1}, {1, 0, 0, 1}, {1, 1, 1, 1}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {1.0371400556336878, -1.0374735257836796}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 11), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$12"], 
               InsetBox["11", DynamicLocation["VertexID$12", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$12"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{2.5867914142255617`, -0.17131643032305965`}, 
                   0.15], InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {0, 0, 1, 1}, {1, 1, 1, 1}, {0, 
                    0, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {2.5867914142255617, -0.17131643032305965}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 13), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$13"], 
               InsetBox["13", DynamicLocation["VertexID$13", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$13"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{2.5874273561887766`, -1.0377677621154295`}, 0.15],
                   InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{0, 0, 1, 1}, {1, 1, 1, 1}, {0, 0, 1, 1}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {2.5874273561887766, -1.0377677621154295}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 19), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$14"], 
               InsetBox["19", DynamicLocation["VertexID$14", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$14"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{3.4521366927057673`, -0.17083710098606197`}, 
                   0.15], InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 1, 1}, {1, 
                    1, 0, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {3.4521366927057673, -0.17083710098606197}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 14), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$15"], 
               InsetBox["14", DynamicLocation["VertexID$15", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$15"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{3.453094368873187, -1.0374735257836796`}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 0, 0}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {3.453094368873187, -1.0374735257836796}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 20), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$16"], 
               InsetBox["20", DynamicLocation["VertexID$16", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$16"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{1.1708371009860619`, -2.9297210291611693`}, 0.15],
                   InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {0, 1, 0, 1}, {1, 1, 1, 1}, {0, 
                    1, 0, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {1.1708371009860619, -2.9297210291611693}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 15), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$17"], 
               InsetBox["15", DynamicLocation["VertexID$17", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$17"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{0.17083710098606203`, -2.9297210291611693`}, 
                   0.15], InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 0, 1, 0}, {1, 1, 1, 1}, {1, 0, 1, 0}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {0.17083710098606203, -2.9297210291611693}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 22), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$18"], 
               InsetBox["22", DynamicLocation["VertexID$18", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$18"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{2.982802835915687, -2.9297210291611693`}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {1, 0, 1, 0}, {1, 1, 1, 1}, {1, 
                    0, 1, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {2.982802835915687, -2.9297210291611693}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 16), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$19"], 
               InsetBox["16", DynamicLocation["VertexID$19", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$19"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{1.9828028359156868`, -2.9297210291611693`}, 0.15],
                   InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{0, 1, 0, 1}, {1, 1, 1, 1}, {0, 1, 0, 1}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {1.9828028359156868, -2.9297210291611693}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 21), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$20"], 
               InsetBox["21", DynamicLocation["VertexID$20", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$20"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{1.378814257605812, -0.17131643032305965`}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {1, 0, 0, 1}, {1, 1, 1, 1}, {1, 
                    0, 0, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {1.378814257605812, -0.17131643032305965}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 17), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$21"], 
               InsetBox["17", DynamicLocation["VertexID$21", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$21"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{1.379450199569027, -1.0377677621154295`}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{0, 1, 1, 0}, {1, 1, 1, 1}, {0, 1, 1, 0}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {1.379450199569027, -1.0377677621154295}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 24), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$22"], 
               InsetBox["24", DynamicLocation["VertexID$22", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$22"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{2.2441595360860176`, -0.17083710098606197`}, 
                   0.15], InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {0, 1, 1, 0}, {1, 1, 1, 1}, {0, 
                    1, 1, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {2.2441595360860176, -0.17083710098606197}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 18), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$23"], 
               InsetBox["18", DynamicLocation["VertexID$23", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$23"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{2.2451172122534375`, -1.0374735257836796`}, 0.15],
                   InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 0, 0, 1}, {1, 1, 1, 1}, {1, 0, 0, 1}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {2.2451172122534375, -1.0374735257836796}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 23), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$24"], 
               InsetBox["23", DynamicLocation["VertexID$24", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$24"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{0.17083710098606208`, -1.379921293424551}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {0, 0, 1, 1}, {0, 0, 1, 1}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {0.17083710098606208, -1.379921293424551}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 25), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$25"], 
               InsetBox["25", DynamicLocation["VertexID$25", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$25"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{0.17147304294927712`, -2.246372625216921}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{0, 0, 1, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 
                    0, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {0.17147304294927712, -2.246372625216921}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 31), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$26"], 
               InsetBox["31", DynamicLocation["VertexID$26", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$26"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{1.0361823794662677`, -1.3794419640875533`}, 0.15],
                   InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 0, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 
                    1, 0, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {1.0361823794662677, -1.3794419640875533}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 32), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$27"], 
               InsetBox["32", DynamicLocation["VertexID$27", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$27"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{1.0371400556336878`, -2.246078388885171}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {1, 1, 0, 0}, {1, 1, 0, 0}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {1.0371400556336878, -2.246078388885171}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 26), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$28"], 
               InsetBox["26", DynamicLocation["VertexID$28", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$28"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{1.378814257605812, -1.379921293424551}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {0, 1, 0, 1}, {0, 1, 0, 1}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {1.378814257605812, -1.379921293424551}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 27), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$29"], 
               InsetBox["27", DynamicLocation["VertexID$29", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$29"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{1.379450199569027, -2.246372625216921}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 0, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 
                    0, 1, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {1.379450199569027, -2.246372625216921}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 34), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$30"], 
               InsetBox["34", DynamicLocation["VertexID$30", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$30"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{2.2441595360860176`, -1.3794419640875533`}, 0.15],
                   InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{0, 1, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 
                    1, 0, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {2.2441595360860176, -1.3794419640875533}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 33), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$31"], 
               InsetBox["33", DynamicLocation["VertexID$31", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$31"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{2.2451172122534375`, -2.246078388885171}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {1, 0, 1, 0}, {1, 0, 1, 0}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {2.2451172122534375, -2.246078388885171}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 28), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$32"], 
               InsetBox["28", DynamicLocation["VertexID$32", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$32"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{1.1708371009860619`, -3.2713952311332934`}, 0.15],
                   InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {1, 0, 0, 1}, {1, 0, 0, 1}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {1.1708371009860619, -3.2713952311332934}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 29), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$33"], 
               InsetBox["29", DynamicLocation["VertexID$33", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$33"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{0.17083710098606203`, -3.2713952311332934`}, 
                   0.15], InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{0, 1, 1, 0}, {1, 1, 1, 1}, {1, 1, 1, 1}, {0, 
                    1, 1, 0}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {0.17083710098606203, -3.2713952311332934}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 36), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$34"], 
               InsetBox["36", DynamicLocation["VertexID$34", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$34"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{1.1708371009860619`, -2.588046827189045}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 1, 1, 1}, {0, 1, 1, 0}, {0, 1, 1, 0}, {1, 
                    1, 1, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {1.1708371009860619, -2.588046827189045}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 30), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$35"], 
               InsetBox["30", DynamicLocation["VertexID$35", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$35"], 
             TagBox[{
               TagBox[
                TagBox[
                 {EdgeForm[GrayLevel[0.5]], FaceForm[RGBColor[0.87, 0.94, 1]],
                   DiskBox[{0.17083710098606203`, -2.588046827189045}, 0.15], 
                  InsetBox[
                   
                   GraphicsBox[{
                    RasterBox[{{1, 0, 0, 1}, {1, 1, 1, 1}, {1, 1, 1, 1}, {1, 
                    0, 0, 1}}, {{0, 0}, {4, 4}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}],
                    Antialiasing->False]}}},
                    BaseStyle->{},
                    Frame->False,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic},
                    
                    PlotRangePadding->
                    0], {0.17083710098606203, -2.588046827189045}]},
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selected$10098449 = 35), 
                   Method -> "Preemptive", PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]],
                "DynamicName",
                BoxID -> "VertexID$36"], 
               InsetBox["35", DynamicLocation["VertexID$36", None, Center],
                BaseStyle->"Graphics"]},
              "DynamicName",
              BoxID -> "VertexLabelID$36"]}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       BaseStyle->{},
       DefaultBaseStyle->"NetworkGraphics",
       FormatType->TraditionalForm,
       FrameTicks->None,
       ImageSize->800,
       PlotLabel->FormBox[
         StyleBox[
         "\"Click a state to explore\"", 14, Bold, StripOnInput -> False], 
         TraditionalForm]]},
     {
      DynamicBox[ToBoxes[
        Grid[{{"Selected index:", $CellContext`selected$$}, {
          "State (4\[Times]4):", 
           MatrixForm[
            Partition[
             Part[$CellContext`compositeStates, $CellContext`selected$$], 
             4]]}}, Alignment -> Left], StandardForm],
       ImageSizeCache->{87., {9., 13.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.958973905263815*^9, 3.959042137437147*^9, {3.959042170470594*^9, 
   3.959042198395795*^9}, {3.9590422427279882`*^9, 3.959042303523415*^9}, 
   3.95904278428666*^9, 3.959050245779529*^9},
 CellLabel->
  "Out[3214]=",ExpressionUUID->"c0e2911a-041f-4427-b59f-7d72df49419d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"permutationNames", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Identity\>\"", ",", "\"\<Flip Horizontal\>\"", ",", 
     "\"\<Flip Vertical\>\"", ",", "\"\<Rotate 180\>\""}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"currentState", "=", 
      RowBox[{"SpekkensStates", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"initialState", "=", "1"}], ",", 
     RowBox[{"history", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"maxHistory", "=", "10"}]}], "}"}], ",", 
   RowBox[{"Panel", "[", 
    RowBox[{
     RowBox[{"Column", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Spekkens Toy Model Explorer\>\"", ",", "Bold", ",", "16"}], 
         "]"}], ",", 
        RowBox[{"Spacer", "[", "12", "]"}], ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Column", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Initial States\>\"", ",", "Bold", ",", "12"}], 
                 "]"}], ",", 
                RowBox[{"Grid", "[", 
                 RowBox[{
                  RowBox[{"Partition", "[", 
                   RowBox[{
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"state", ",", "idx"}], "}"}], ",", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"state", ",", "2"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "50"}], ",", 
                    RowBox[{"Epilog", "->", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"initialState", "==", 
                    RowBox[{"First", "[", "idx", "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Red", ",", 
                    RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5"}], ",", 
                    RowBox[{"-", "0.5"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2.5", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"currentState", "=", "state"}], ";", "\n", 
                    RowBox[{"initialState", "=", 
                    RowBox[{"First", "[", "idx", "]"}]}], ";", "\n", 
                    RowBox[{"history", "=", 
                    RowBox[{"{", "}"}]}], ";"}], ")"}]}], "]"}]}], "]"}], ",",
                     "SpekkensStates"}], "]"}], ",", "3"}], "]"}], ",", 
                  RowBox[{"Spacings", "->", 
                   RowBox[{"{", 
                    RowBox[{"0.5", ",", "0.5"}], "}"}]}]}], "]"}]}], "}"}], 
              "]"}], ",", 
             RowBox[{"ImageSize", "->", 
              RowBox[{"{", 
               RowBox[{"200", ",", "250"}], "}"}]}]}], "]"}], ",", 
           RowBox[{"Spacer", "[", "20", "]"}], ",", 
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Column", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<Current State\>\"", ",", "Bold", ",", "12"}], 
                  "]"}], ",", 
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"ArrayPlot", "[", 
                   RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"currentState", ",", "2"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "150"}], ",", 
                    RowBox[{"PlotLabel", "->", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<State: \>\"", "<>", 
                    RowBox[{"ToString", "[", "currentState", "]"}]}], ",", 
                    "12"}], "]"}]}], ",", 
                    RowBox[{"Epilog", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<1\>\"", ",", "10"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "1.5"}], "}"}]}], "]"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<2\>\"", ",", "10"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.5", ",", "1.5"}], "}"}]}], "]"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<3\>\"", ",", "10"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "0.5"}], "}"}]}], "]"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<4\>\"", ",", "10"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.5", ",", "0.5"}], "}"}]}], "]"}]}], "}"}]}]}], 
                   "]"}], "]"}], ",", 
                 RowBox[{"Button", "[", 
                  RowBox[{"\"\<Reset to Initial\>\"", ",", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"currentState", "=", 
                    RowBox[{"SpekkensStates", "[", 
                    RowBox[{"[", "initialState", "]"}], "]"}]}], ";", "\n", 
                    RowBox[{"history", "=", 
                    RowBox[{"{", "}"}]}], ";"}], ")"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
             RowBox[{"ImageSize", "->", 
              RowBox[{"{", 
               RowBox[{"200", ",", "250"}], "}"}]}]}], "]"}], ",", 
           RowBox[{"Spacer", "[", "20", "]"}], ",", 
           RowBox[{"Panel", "[", 
            RowBox[{
             RowBox[{"Column", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Permutations\>\"", ",", "Bold", ",", "12"}], 
                 "]"}], ",", 
                RowBox[{"Grid", "[", 
                 RowBox[{
                  RowBox[{"Partition", "[", 
                   RowBox[{
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"name", ",", "perm"}], "}"}], ",", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Column", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"name", ",", "10"}], "]"}], ",", 
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Permute", "[", 
                    RowBox[{"currentState", ",", "perm"}], "]"}], ",", "2"}], 
                    "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "50"}]}], "]"}]}], "}"}], 
                    "]"}], ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"history", ",", "currentState"}], "]"}], ";", 
                    "\n", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "history", "]"}], ">", 
                    "maxHistory"}], ",", 
                    RowBox[{"history", "=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"history", ",", "1"}], "]"}]}]}], "]"}], ";", 
                    "\n", 
                    RowBox[{"currentState", "=", 
                    RowBox[{"Permute", "[", 
                    RowBox[{"currentState", ",", "perm"}], "]"}]}], ";"}], 
                    ")"}]}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"permutationNames", ",", "SpekkensPermutations"}],
                     "}"}]}], "]"}], ",", "2"}], "]"}], ",", 
                  RowBox[{"Spacings", "->", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], ",", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Undo\>\"", ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "history", "]"}], ">", "0"}], ",", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"currentState", "=", 
                    RowBox[{"Last", "[", "history", "]"}]}], ";", "\n", 
                    RowBox[{"history", "=", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"history", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], ";"}], ")"}]}], "]"}]}], 
                 "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"ImageSize", "->", 
              RowBox[{"{", 
               RowBox[{"200", ",", "250"}], "}"}]}]}], "]"}]}], "}"}], "]"}], 
        ",", 
        RowBox[{"Spacer", "[", "20", "]"}], ",", 
        RowBox[{"Panel", "[", 
         RowBox[{"Column", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<State Space Visualization\>\"", ",", "Bold", ",", "12"}], 
             "]"}], ",", 
            RowBox[{"Dynamic", "[", 
             RowBox[{"SimpleGraph", "[", 
              RowBox[{
               RowBox[{"UndirectedGraph", "[", 
                RowBox[{
                 RowBox[{"NestGraph", "[", 
                  RowBox[{
                   RowBox[{"Function", "[", 
                    RowBox[{"state", ",", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Permute", "[", 
                    RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", 
                    "SpekkensPermutations"}], ",", 
                    RowBox[{"{", "state", "}"}]}], "]"}]}], "]"}], ",", 
                   RowBox[{"KroneckerProduct", "@@@", 
                    RowBox[{"Tuples", "[", 
                    RowBox[{"SpekkensStates", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], ",", "2"}], "]"}], 
                 ",", 
                 RowBox[{"VertexLabels", "->", 
                  RowBox[{"(", 
                   RowBox[{"v_", ":>", 
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", "v", "]"}], ",", "4"}], "]"}], 
                    ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "30"}]}], "]"}], ",", "v"}], 
                    "]"}]}], ")"}]}], ",", 
                 RowBox[{
                  RowBox[{"VertexStyle", "->", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#", "==", "currentState"}], ",", "Red", ",", 
                    "LightBlue"}], "]"}]}], "&"}], ",", 
                 RowBox[{"VertexSize", "->", "0.8"}], ",", 
                 RowBox[{"EdgeStyle", "->", "Gray"}], ",", 
                 RowBox[{"GraphHighlight", "->", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{"VertexList", "[", 
                    RowBox[{"NestGraph", "[", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"state", ",", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Permute", "[", 
                    RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", 
                    "SpekkensPermutations"}], ",", 
                    RowBox[{"{", "state", "}"}]}], "]"}]}], "]"}], ",", 
                    RowBox[{"KroneckerProduct", "@@@", 
                    RowBox[{"Tuples", "[", 
                    RowBox[{"SpekkensStates", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], ",", "2"}], "]"}], 
                    "]"}], ",", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "==", "currentState"}], "&"}], ")"}]}]}], 
                   "]"}]}], ",", 
                 RowBox[{
                 "GraphHighlightStyle", "->", "\"\<DehighlightHide\>\""}]}], 
                "]"}], ",", 
               RowBox[{"ImageSize", "->", "500"}]}], "]"}], "]"}]}], "}"}], 
          "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"ImageSize", "->", "800"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.959042398358714*^9, 3.959042398360447*^9}, {
  3.9590502619180613`*^9, 3.959050264811308*^9}},
 CellLabel->
  "In[3215]:=",ExpressionUUID->"939ff016-d338-4019-966b-9c04d6f81eb7"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`currentState$$ = {1, 1, 0, 
  0}, $CellContext`initialState$$ = 
  1, $CellContext`history$$ = {}, $CellContext`maxHistory$$ = 10}, 
  PanelBox[
   TagBox[GridBox[{
      {
       StyleBox["\<\"Spekkens Toy Model Explorer\"\>",
        StripOnInput->False,
        FontSize->16,
        FontWeight->Bold]},
      {
       TemplateBox[{12},
        "Spacer1"]},
      {
       TemplateBox[{
         PanelBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"Initial States\"", Bold, 12, StripOnInput -> False]}, {
              TagBox[
               GridBox[{{
                  ButtonBox[
                   GraphicsBox[{
                    
                    RasterBox[{{1, 1}, {0, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {
                    RGBColor[1, 0, 0], 
                    Thickness[0.01], 
                    RectangleBox[{-0.5, -0.5}, {2.5, 1.5}]}, Frame -> True, 
                    FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                    BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                    ImageSize -> 800], 
                   ButtonFunction :> ($CellContext`currentState$$ = {1, 1, 0, 
                    0}; $CellContext`initialState$$ = 
                    First[{1}]; $CellContext`history$$ = {}; Null), 
                   Appearance -> Automatic, 
                   BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> 
                   Automatic, FrameMargins -> 5, Method -> "Preemptive"], 
                  ButtonBox[
                   GraphicsBox[{
                    
                    RasterBox[{{0, 0}, {1, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {}, Frame -> True, 
                    FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                    BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                    ImageSize -> 800], 
                   ButtonFunction :> ($CellContext`currentState$$ = {0, 0, 1, 
                    1}; $CellContext`initialState$$ = 
                    First[{2}]; $CellContext`history$$ = {}; Null), 
                   Appearance -> Automatic, 
                   BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> 
                   Automatic, FrameMargins -> 5, Method -> "Preemptive"], 
                  ButtonBox[
                   GraphicsBox[{
                    
                    RasterBox[{{0, 1}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {}, Frame -> True, 
                    FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                    BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                    ImageSize -> 800], 
                   ButtonFunction :> ($CellContext`currentState$$ = {1, 0, 1, 
                    0}; $CellContext`initialState$$ = 
                    First[{3}]; $CellContext`history$$ = {}; Null), 
                   Appearance -> Automatic, 
                   BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> 
                   Automatic, FrameMargins -> 5, Method -> "Preemptive"]}, {
                  ButtonBox[
                   GraphicsBox[{
                    
                    RasterBox[{{1, 0}, {1, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {}, Frame -> True, 
                    FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                    BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                    ImageSize -> 800], 
                   ButtonFunction :> ($CellContext`currentState$$ = {0, 1, 0, 
                    1}; $CellContext`initialState$$ = 
                    First[{4}]; $CellContext`history$$ = {}; Null), 
                   Appearance -> Automatic, 
                   BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> 
                   Automatic, FrameMargins -> 5, Method -> "Preemptive"], 
                  ButtonBox[
                   GraphicsBox[{
                    
                    RasterBox[{{0, 1}, {1, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {}, Frame -> True, 
                    FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                    BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                    ImageSize -> 800], 
                   ButtonFunction :> ($CellContext`currentState$$ = {0, 1, 1, 
                    0}; $CellContext`initialState$$ = 
                    First[{5}]; $CellContext`history$$ = {}; Null), 
                   Appearance -> Automatic, 
                   BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> 
                   Automatic, FrameMargins -> 5, Method -> "Preemptive"], 
                  ButtonBox[
                   GraphicsBox[{
                    
                    RasterBox[{{1, 0}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {}, Frame -> True, 
                    FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                    BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                    ImageSize -> 800], 
                   ButtonFunction :> ($CellContext`currentState$$ = {1, 0, 0, 
                    1}; $CellContext`initialState$$ = 
                    First[{6}]; $CellContext`history$$ = {}; Null), 
                   Appearance -> Automatic, 
                   BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> 
                   Automatic, FrameMargins -> 5, Method -> "Preemptive"]}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.5}}}],
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
           ImageSize -> {200, 250}], 
         TemplateBox[{20}, "Spacer1"], 
         PanelBox[
          TagBox[
           GridBox[{{
              StyleBox[
              "\"Current State\"", Bold, 12, StripOnInput -> False]}, {
              DynamicBox[
               ToBoxes[
                ArrayPlot[
                 Partition[$CellContext`currentState$$, 2], Mesh -> True, 
                 ImageSize -> 150, PlotLabel -> 
                 Style["State: " <> ToString[$CellContext`currentState$$], 
                   12], Epilog -> {
                   Text[
                    Style["1", 10], {0.5, 1.5}], 
                   Text[
                    Style["2", 10], {1.5, 1.5}], 
                   Text[
                    Style["3", 10], {0.5, 0.5}], 
                   Text[
                    Style["4", 10], {1.5, 0.5}]}], StandardForm]]}, {
              ButtonBox[
              "\"Reset to Initial\"", 
               ButtonFunction :> ($CellContext`currentState$$ = 
                 Part[$CellContext`SpekkensStates, \
$CellContext`initialState$$]; $CellContext`history$$ = {}; Null), Appearance -> 
               Automatic, BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> 
               Automatic, FrameMargins -> 5, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
           ImageSize -> {200, 250}], 
         TemplateBox[{20}, "Spacer1"], 
         PanelBox[
          TagBox[
           GridBox[{{
              StyleBox["\"Permutations\"", Bold, 12, StripOnInput -> False]}, {
              TagBox[
               GridBox[{{
                  ButtonBox[
                   TagBox[
                    GridBox[{{
                    StyleBox["\"Identity\"", 10, StripOnInput -> False]}, {
                    GraphicsBox[{
                    
                    RasterBox[{{1, 1}, {0, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Frame -> True, 
                    FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                    BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                    ImageSize -> 800]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ButtonFunction :> (
                    AppendTo[$CellContext`history$$, \
$CellContext`currentState$$]; 
                    If[Length[$CellContext`history$$] > \
$CellContext`maxHistory$$, $CellContext`history$$ = 
                    Drop[$CellContext`history$$, 
                    1]]; $CellContext`currentState$$ = 
                    Permute[$CellContext`currentState$$, 
                    Cycles[{}]]; Null), Appearance -> Automatic, 
                   BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> 
                   Automatic, FrameMargins -> 5, Method -> "Preemptive"], 
                  ButtonBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Flip Horizontal\"", 10, StripOnInput -> False]}, {
                    GraphicsBox[{
                    
                    RasterBox[{{1, 1}, {0, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Frame -> True, 
                    FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                    BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                    ImageSize -> 800]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ButtonFunction :> (
                    AppendTo[$CellContext`history$$, \
$CellContext`currentState$$]; 
                    If[Length[$CellContext`history$$] > \
$CellContext`maxHistory$$, $CellContext`history$$ = 
                    Drop[$CellContext`history$$, 
                    1]]; $CellContext`currentState$$ = 
                    Permute[$CellContext`currentState$$, 
                    Cycles[{{1, 2}, {3, 4}}]]; Null), Appearance -> Automatic,
                    BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> 
                   Automatic, FrameMargins -> 5, Method -> "Preemptive"]}, {
                  ButtonBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Flip Vertical\"", 10, StripOnInput -> False]}, {
                    GraphicsBox[{
                    
                    RasterBox[{{0, 0}, {1, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Frame -> True, 
                    FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                    BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                    ImageSize -> 800]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ButtonFunction :> (
                    AppendTo[$CellContext`history$$, \
$CellContext`currentState$$]; 
                    If[Length[$CellContext`history$$] > \
$CellContext`maxHistory$$, $CellContext`history$$ = 
                    Drop[$CellContext`history$$, 
                    1]]; $CellContext`currentState$$ = 
                    Permute[$CellContext`currentState$$, 
                    Cycles[{{1, 3}, {2, 4}}]]; Null), Appearance -> Automatic,
                    BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> 
                   Automatic, FrameMargins -> 5, Method -> "Preemptive"], 
                  ButtonBox[
                   TagBox[
                    GridBox[{{
                    StyleBox["\"Rotate 180\"", 10, StripOnInput -> False]}, {
                    GraphicsBox[{
                    
                    RasterBox[{{0, 0}, {1, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Frame -> True, 
                    FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                    BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                    ImageSize -> 800]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ButtonFunction :> (
                    AppendTo[$CellContext`history$$, \
$CellContext`currentState$$]; 
                    If[Length[$CellContext`history$$] > \
$CellContext`maxHistory$$, $CellContext`history$$ = 
                    Drop[$CellContext`history$$, 
                    1]]; $CellContext`currentState$$ = 
                    Permute[$CellContext`currentState$$, 
                    Cycles[{{1, 4}, {2, 3}}]]; Null), Appearance -> Automatic,
                    BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> 
                   Automatic, FrameMargins -> 5, Method -> "Preemptive"]}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}], 
               "Grid"]}, {
              ButtonBox[
              "\"Undo\"", ButtonFunction :> 
               If[Length[$CellContext`history$$] > 
                 0, $CellContext`currentState$$ = 
                  Last[$CellContext`history$$]; $CellContext`history$$ = 
                  Drop[$CellContext`history$$, -1]; Null], Appearance -> 
               Automatic, BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> 
               Automatic, FrameMargins -> 5, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
           ImageSize -> {200, 250}]},
        "RowDefault"]},
      {
       TemplateBox[{20},
        "Spacer1"]},
      {
       PanelBox[
        TagBox[GridBox[{
           {
            StyleBox["\<\"State Space Visualization\"\>",
             StripOnInput->False,
             FontSize->12,
             FontWeight->Bold]},
           {
            DynamicBox[ToBoxes[
              SimpleGraph[
               UndirectedGraph[
                NestGraph[
                 Function[$CellContext`state, 
                  Join[
                   Map[
                   Permute[$CellContext`state, #]& , \
$CellContext`SpekkensPermutations], {$CellContext`state}]], 
                 MapApply[KroneckerProduct, 
                  Tuples[$CellContext`SpekkensStates, {2}]], 2], 
                VertexLabels -> (Pattern[$CellContext`v, 
                   Blank[]] :> Tooltip[
                   ArrayPlot[
                    Partition[
                    Flatten[$CellContext`v], 4], Mesh -> True, ImageSize -> 
                    30], $CellContext`v]), VertexStyle -> 
                If[# == $CellContext`currentState$$, Red, LightBlue]& , 
                VertexSize -> 0.8, EdgeStyle -> Gray, GraphHighlight -> 
                Cases[
                  VertexList[
                   NestGraph[
                    Function[$CellContext`state, 
                    Join[
                    Map[
                    Permute[$CellContext`state, #]& , \
$CellContext`SpekkensPermutations], {$CellContext`state}]], 
                    MapApply[KroneckerProduct, 
                    Tuples[$CellContext`SpekkensStates, {2}]], 2]], 
                  PatternTest[
                   Blank[], # == $CellContext`currentState$$& ]], 
                GraphHighlightStyle -> "DehighlightHide"], ImageSize -> 500], 
              StandardForm],
             ImageSizeCache->{313., {140., 142.}}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   ImageSize->800],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.959042388991686*^9, 3.959042398666284*^9}, 
   3.959042784404564*^9, 3.9590502652859*^9},
 CellLabel->
  "Out[3218]=",ExpressionUUID->"7f62f488-66d1-49f1-8910-71432c079299"]
}, Open  ]],

Cell["\<\
The two images and their corresponding Mathematica code snippets showcase \
complementary interactive tools for exploring the Spekkens Toy Model, \
focusing on state transformations and the structure of the state space.

The first image (`image_8488ee.png`) displays a grid of many identical \
\[OpenCurlyDoubleQuote]dumbbell\[CloseCurlyDoubleQuote] like graphical \
structures. Each \[OpenCurlyDoubleQuote]dumbbell\[CloseCurlyDoubleQuote] \
likely represents a connected component within the larger state space of the \
Spekkens toy model. This visualization suggests that under the specified \
permutation rules, the vast number of possible composite states group into \
smaller, disconnected sets of reachable states. The associated code directly \
reflects this by defining composite states (Kronecker products of basic \
Spekkens states) and then constructing a graph where edges represent \
transitions under `SpekkensPermutations`. The `DynamicModule` then renders \
this graph and allows for clicking on a state to highlight its entire \
connected component, thereby visually demonstrating the partitioning of the \
state space based on reachability.

The second image (`image_84890e.png`) provides a more detailed \
\[OpenCurlyDoubleQuote]Spekkens Toy Model State Explorer\
\[CloseCurlyDoubleQuote] with a rich user interface. At the top, it features \
an \[OpenCurlyDoubleQuote]Initial States\[CloseCurlyDoubleQuote] section, \
allowing the user to select one of the fundamental Spekkens states. This \
chosen state is then displayed as the \[OpenCurlyDoubleQuote]Current State\
\[CloseCurlyDoubleQuote] along with its binary vector representation. A set \
of \[OpenCurlyDoubleQuote]Apply Permutation\[CloseCurlyDoubleQuote] buttons \
allows for direct manipulation of the `Current State`, including an \
\[OpenCurlyDoubleQuote]Undo\[CloseCurlyDoubleQuote] feature to trace back \
changes. Crucially, the bottom section, \[OpenCurlyDoubleQuote]State Space \
Visualization,\[CloseCurlyDoubleQuote] dynamically displays a graph where \
nodes are `compositeStates` (the $4 \\times 4$ binary patterns) and edges \
represent transitions. The `Current State` is highlighted in red within this \
large graph. The associated code integrates these features by defining the \
fundamental states and permutations, implementing functions for applying \
permutations and maintaining a history of states. The \
\[OpenCurlyDoubleQuote]State Space Visualization\[CloseCurlyDoubleQuote] \
dynamically highlights the current state and its neighborhood within the \
pre-calculated graph of composite states, offering an intuitive way to \
understand how individual actions (permutations) navigate through the \
complex, interconnected state space of the Spekkens model.\
\>", "Text",
 CellChangeTimes->{{3.959050133546049*^9, 3.959050153204269*^9}, {
  3.95905018468279*^9, 3.9590501917338057`*^9}, {3.9590502261453867`*^9, 
  3.9590502305900993`*^9}, {3.959050275392338*^9, 
  3.9590502803162327`*^9}},ExpressionUUID->"ced9bf4c-21d8-4f1a-8a48-\
1ee0de4d5311"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"current", "=", "None"}], ",", "states", ",", "perms", ",", 
     "adj", ",", "edges", ",", "coords"}], "}"}], ",", 
   RowBox[{
    RowBox[{"states", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";", 
    "\n", 
    RowBox[{"perms", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cycles", "[", 
        RowBox[{"{", "}"}], "]"}], ",", 
       RowBox[{"Cycles", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Cycles", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Cycles", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], ";", 
    "\n", 
    RowBox[{"adj", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"jList", "=", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"t", "=", 
                 RowBox[{"Permute", "[", 
                  RowBox[{
                   RowBox[{"states", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "perm"}], "]"}]}], 
                ",", "j"}], "}"}], ",", 
              RowBox[{
               RowBox[{"j", "=", 
                RowBox[{
                 RowBox[{"FirstPosition", "[", 
                  RowBox[{"states", ",", "t", ",", "0"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"j", "=!=", "0"}], "&&", 
                  RowBox[{"j", "=!=", "i"}]}], ",", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"jList", ",", "j"}], "]"}]}], "]"}]}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"perm", ",", "perms"}], "}"}]}], "]"}], ";", "\n", 
          RowBox[{"DeleteDuplicates", "[", "jList", "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\n", 
    RowBox[{"edges", "=", 
     RowBox[{"Union", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"i", ",", "j"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "states", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"adj", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
       "]"}], "]"}]}], ";", "\n", 
    RowBox[{"coords", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"2", "->", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0"}], "}"}]}], ",", 
       RowBox[{"3", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], ",", 
       RowBox[{"4", "->", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}]}], ",", 
       RowBox[{"5", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}]}], ",", 
       RowBox[{"6", "->", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}]}]}], "}"}]}], ";", "\n", 
    RowBox[{"Dynamic", "[", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "edgeStyles", "}"}], ",", 
       RowBox[{
        RowBox[{"edgeStyles", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"e", "=", 
               RowBox[{"edges", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"e", "->", 
              RowBox[{"Which", "[", 
               RowBox[{
                RowBox[{"current", "===", "None"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Gray", ",", "Dotted"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"current", "===", 
                  RowBox[{"e", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "||", 
                 RowBox[{"current", "===", 
                  RowBox[{"e", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"Red", ",", "Thick"}], "}"}], ",", "True", ",", 
                RowBox[{"{", 
                 RowBox[{"Gray", ",", "Dotted"}], "}"}]}], "]"}]}]}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", 
             RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "states", "]"}], "]"}], ",", "edges", ",", 
          RowBox[{"EdgeStyle", "->", "edgeStyles"}], ",", 
          RowBox[{"VertexCoordinates", "->", "coords"}], ",", 
          RowBox[{"VertexSize", "->", "0.35"}], ",", 
          RowBox[{"VertexShapeFunction", ":>", 
           RowBox[{"(", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"pt", ",", "id"}], "}"}], ",", 
              RowBox[{"EventHandler", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"EdgeForm", "[", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"id", "===", "current"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", 
                    RowBox[{"Darker", "@", "Yellow"}]}], "}"}], ",", 
                    "Black"}], "]"}], "]"}], ",", 
                  RowBox[{"FaceForm", "[", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"id", "===", "current"}], ",", "Yellow", ",", 
                    "LightBlue"}], "]"}], "]"}], ",", 
                  RowBox[{"Disk", "[", 
                   RowBox[{"pt", ",", "0.17"}], "]"}], ",", 
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"states", "[", 
                    RowBox[{"[", "id", "]"}], "]"}], ",", "2"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "All"}], ",", 
                    RowBox[{"MeshStyle", "->", "Gray"}], ",", 
                    RowBox[{"ColorRules", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "->", 
                    RowBox[{"Darker", "@", "Cyan"}]}], ",", 
                    RowBox[{"0", "->", "White"}]}], "}"}]}], ",", 
                    RowBox[{"ImageSize", "->", "28"}]}], "]"}], ",", "pt"}], 
                   "]"}]}], "}"}], ",", 
                RowBox[{"\"\<MouseClicked\>\"", ":>", 
                 RowBox[{"(", 
                  RowBox[{"current", "=", "id"}], ")"}]}]}], "]"}]}], "]"}], 
            ")"}]}], ",", 
          RowBox[{"PlotRange", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.5"}], ",", "2.5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.5"}], ",", "2.5"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "->", "550"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"current", "===", "None"}], ",", 
              "\"\<Click any state to show transformations\>\"", ",", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<State \>\"", ",", "current", ",", 
                 "\"\< transformations (click new state)\>\""}], "}"}], 
               "]"}]}], "]"}], "]"}]}], ",", 
          RowBox[{"BaseStyle", "->", 
           RowBox[{"{", 
            RowBox[{"Bold", ",", "14"}], "}"}]}], ",", 
          RowBox[{"Background", "->", "Transparent"}], ",", 
          RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}]}], "]"}]}]}], 
      "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.959042453521213*^9, 3.959042453522894*^9}, {
  3.9590502846986103`*^9, 3.959050288828581*^9}},
 CellLabel->
  "In[3220]:=",ExpressionUUID->"1ca093bb-5b21-47c9-8051-e62579e75303"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`current$$ = None, $CellContext`states$$ = {{1,
   1, 0, 0}, {0, 0, 1, 1}, {1, 0, 1, 0}, {0, 1, 0, 1}, {0, 1, 1, 0}, {1, 0, 0,
   1}}, $CellContext`perms$$ = {
   Cycles[{}], 
   Cycles[{{1, 2}, {3, 4}}], 
   Cycles[{{1, 3}, {2, 4}}], 
   Cycles[{{1, 4}, {2, 3}}]}, $CellContext`adj$$ = {{2}, {1}, {4}, {3}, {6}, {
  5}}, $CellContext`edges$$ = {
   UndirectedEdge[1, 2], 
   UndirectedEdge[2, 1], 
   UndirectedEdge[3, 4], 
   UndirectedEdge[4, 3], 
   UndirectedEdge[5, 6], 
   UndirectedEdge[6, 5]}, $CellContext`coords$$ = {
  1 -> {0, 0}, 2 -> {2, 0}, 3 -> {0, 1}, 4 -> {2, 1}, 5 -> {0, 2}, 
   6 -> {2, 2}}}, 
  DynamicBox[ToBoxes[
    Module[{$CellContext`edgeStyles$}, $CellContext`edgeStyles$ = Table[
        With[{$CellContext`e$ = 
          Part[$CellContext`edges$$, $CellContext`k]}, $CellContext`e$ -> 
         Which[$CellContext`current$$ === None, {Gray, Dotted}, 
           
           Or[$CellContext`current$$ === 
            Part[$CellContext`e$, 1], $CellContext`current$$ === 
            Part[$CellContext`e$, 2]], {Red, Thick}, True, {
           Gray, Dotted}]], {$CellContext`k, 
         Length[$CellContext`edges$$]}]; Graph[
       Range[
        Length[$CellContext`states$$]], $CellContext`edges$$, 
       EdgeStyle -> $CellContext`edgeStyles$, 
       VertexCoordinates -> $CellContext`coords$$, VertexSize -> 0.35, 
       VertexShapeFunction :> Function[{$CellContext`pt$, $CellContext`id$}, 
         EventHandler[{
           EdgeForm[
            If[$CellContext`id$ === $CellContext`current$$, {Thick, 
              Darker[Yellow]}, Black]], 
           FaceForm[
            
            If[$CellContext`id$ === $CellContext`current$$, Yellow, 
             LightBlue]], 
           Disk[$CellContext`pt$, 0.17], 
           Inset[
            ArrayPlot[
             Partition[
              Part[$CellContext`states$$, $CellContext`id$], 2], Mesh -> All, 
             MeshStyle -> Gray, ColorRules -> {1 -> Darker[Cyan], 0 -> White},
              ImageSize -> 28], $CellContext`pt$]}, 
          "MouseClicked" :> ($CellContext`current$$ = $CellContext`id$)]], 
       PlotRange -> {{-0.5, 2.5}, {-0.5, 2.5}}, ImageSize -> 550, PlotLabel -> 
       Dynamic[
         If[$CellContext`current$$ === None, 
          "Click any state to show transformations", 
          
          Row[{"State ", $CellContext`current$$, 
            " transformations (click new state)"}]]], BaseStyle -> {Bold, 14},
        Background -> Transparent, PerformanceGoal -> "Quality"]], 
    StandardForm],
   ImageSizeCache->{344., {176., 180.}}],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.958973941869042*^9, {3.959042405287635*^9, 3.959042416619822*^9}, 
   3.959042453727002*^9, 3.959042784790292*^9, {3.9590502857842603`*^9, 
   3.959050289108766*^9}},
 CellLabel->
  "Out[3220]=",ExpressionUUID->"c1b7d9af-2221-4f0c-9a07-40fe4aea2bd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"spekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"spekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"permutationNames", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Identity\>\"", ",", "\"\<Swap Horizontally\>\"", ",", 
     "\"\<Swap Vertically\>\"", ",", "\"\<Swap Diagonally\>\""}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"currentA", "=", 
      RowBox[{"spekkensStates", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"currentB", "=", 
      RowBox[{"spekkensStates", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"history", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"showHistory", "=", "False"}]}], "}"}], ",", 
   RowBox[{"Column", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Row", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<System A States\>\"", ",", "Bold", ",", "14"}], 
               "]"}], ",", 
              RowBox[{"Grid", "[", 
               RowBox[{
                RowBox[{"Partition", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"s", "=", "state"}], "}"}], ",", 
                    RowBox[{"EventHandler", "[", 
                    RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"s", ",", "2"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "60"}], ",", 
                    RowBox[{"Epilog", "->", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"s", "===", "currentA"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Red", ",", "Thick", ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"\"\<MouseClicked\>\"", ":>", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"currentA", "=", "s"}], ";", 
                    RowBox[{"history", "=", 
                    RowBox[{"{", "}"}]}]}], ")"}]}]}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"state", ",", "spekkensStates"}], "}"}]}], "]"}], 
                  ",", "3"}], "]"}], ",", 
                RowBox[{"Spacings", "->", 
                 RowBox[{"{", 
                  RowBox[{"0.5", ",", "0.5"}], "}"}]}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
          RowBox[{"Spacer", "[", "30", "]"}], ",", 
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<System B States\>\"", ",", "Bold", ",", "14"}], 
               "]"}], ",", 
              RowBox[{"Grid", "[", 
               RowBox[{
                RowBox[{"Partition", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"s", "=", "state"}], "}"}], ",", 
                    RowBox[{"EventHandler", "[", 
                    RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"s", ",", "2"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "60"}], ",", 
                    RowBox[{"Epilog", "->", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"s", "===", "currentB"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Red", ",", "Thick", ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"\"\<MouseClicked\>\"", ":>", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"currentB", "=", "s"}], ";", 
                    RowBox[{"history", "=", 
                    RowBox[{"{", "}"}]}]}], ")"}]}]}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"state", ",", "spekkensStates"}], "}"}]}], "]"}], 
                  ",", "3"}], "]"}], ",", 
                RowBox[{"Spacings", "->", 
                 RowBox[{"{", 
                  RowBox[{"0.5", ",", "0.5"}], "}"}]}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Alignment", "->", "Center"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", 
      RowBox[{"Row", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<System A\>\"", ",", "Bold", ",", "12"}], "]"}], 
              ",", 
              RowBox[{"ArrayPlot", "[", 
               RowBox[{
                RowBox[{"Partition", "[", 
                 RowBox[{"currentA", ",", "2"}], "]"}], ",", 
                RowBox[{"Mesh", "->", "True"}], ",", 
                RowBox[{"ImageSize", "->", "100"}]}], "]"}], ",", 
              RowBox[{"ButtonBar", "[", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"idx", "=", "i"}], ",", 
                    RowBox[{"name", "=", 
                    RowBox[{"permutationNames", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"name", ":>", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"history", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<A\>\"", ",", "idx", ",", "currentA", ",", 
                    "currentB"}], "}"}]}], "]"}], ";", "\n", 
                    RowBox[{"currentA", "=", 
                    RowBox[{"currentA", "[", 
                    RowBox[{"[", 
                    RowBox[{"PermutationList", "[", 
                    RowBox[{
                    RowBox[{"spekkensPermutations", "[", 
                    RowBox[{"[", "idx", "]"}], "]"}], ",", "4"}], "]"}], 
                    "]"}], "]"}]}], ";"}], ")"}]}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"Length", "[", "spekkensPermutations", "]"}]}], 
                   "}"}]}], "]"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
          RowBox[{"Spacer", "[", "30", "]"}], ",", 
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<System B\>\"", ",", "Bold", ",", "12"}], "]"}], 
              ",", 
              RowBox[{"ArrayPlot", "[", 
               RowBox[{
                RowBox[{"Partition", "[", 
                 RowBox[{"currentB", ",", "2"}], "]"}], ",", 
                RowBox[{"Mesh", "->", "True"}], ",", 
                RowBox[{"ImageSize", "->", "100"}]}], "]"}], ",", 
              RowBox[{"ButtonBar", "[", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"idx", "=", "i"}], ",", 
                    RowBox[{"name", "=", 
                    RowBox[{"permutationNames", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"name", ":>", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"history", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<B\>\"", ",", "idx", ",", "currentA", ",", 
                    "currentB"}], "}"}]}], "]"}], ";", "\n", 
                    RowBox[{"currentB", "=", 
                    RowBox[{"currentB", "[", 
                    RowBox[{"[", 
                    RowBox[{"PermutationList", "[", 
                    RowBox[{
                    RowBox[{"spekkensPermutations", "[", 
                    RowBox[{"[", "idx", "]"}], "]"}], ",", "4"}], "]"}], 
                    "]"}], "]"}]}], ";"}], ")"}]}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"Length", "[", "spekkensPermutations", "]"}]}], 
                   "}"}]}], "]"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
          RowBox[{"Spacer", "[", "30", "]"}], ",", 
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<Bipartite State (A \[CircleTimes] B)\>\"", ",", "Bold", 
                ",", "14"}], "]"}], ",", 
              RowBox[{"ArrayPlot", "[", 
               RowBox[{
                RowBox[{"KroneckerProduct", "[", 
                 RowBox[{"currentA", ",", "currentB"}], "]"}], ",", 
                RowBox[{"Mesh", "->", "True"}], ",", 
                RowBox[{"ImageSize", "->", "200"}], ",", 
                RowBox[{"ColorRules", "->", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "->", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.2", ",", "0.6", ",", "1"}], "]"}]}], ",", 
                   RowBox[{"0", "->", "White"}]}], "}"}]}], ",", 
                RowBox[{"Frame", "->", "True"}], ",", 
                RowBox[{"FrameTicks", "->", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Range", "[", "4", "]"}], ",", 
                   RowBox[{"Range", "[", "4", "]"}]}], "}"}]}]}], "]"}], ",", 
              
              RowBox[{"Button", "[", 
               RowBox[{"\"\<Reset History\>\"", ",", 
                RowBox[{"history", "=", 
                 RowBox[{"{", "}"}]}]}], "]"}], ",", 
              RowBox[{"Checkbox", "[", 
               RowBox[{"Dynamic", "[", "showHistory", "]"}], "]"}], ",", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"If", "[", 
                RowBox[{
                "showHistory", ",", "\"\<Showing History\>\"", ",", 
                 "\"\<Hide History\>\""}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"Alignment", "->", "Center"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
      RowBox[{"Dynamic", "[", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"showHistory", "&&", 
          RowBox[{"history", "=!=", 
           RowBox[{"{", "}"}]}]}], ",", 
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"MapIndexed", "[", 
              RowBox[{
               RowBox[{"Function", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"item", ",", "idx"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"First", "[", "idx", "]"}], ",", 
                   RowBox[{"item", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"permutationNames", "[", 
                    RowBox[{"[", 
                    RowBox[{"item", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
                   RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"item", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", "2"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "30"}]}], "]"}], ",", 
                   RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"item", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], ",", "2"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "30"}]}], "]"}]}], "}"}]}], 
                "]"}], ",", "history"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Step\>\"", ",", "\"\<System\>\"", ",", "\"\<Operation\>\"",
                ",", "\"\<A State\>\"", ",", "\"\<B State\>\""}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"Frame", "->", "All"}], ",", 
           RowBox[{"Alignment", "->", "Center"}], ",", 
           RowBox[{"Background", "->", 
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"{", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"0.95", ",", "0.95", ",", "1"}], "]"}], "}"}]}], 
             "}"}]}]}], "]"}], ",", "Nothing"}], "]"}], "]"}]}], "}"}], "]"}],
    ",", 
   RowBox[{"Initialization", ":>", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"SetOptions", "[", 
       RowBox[{"ArrayPlot", ",", 
        RowBox[{"MeshStyle", "->", "Gray"}], ",", 
        RowBox[{"FrameStyle", "->", 
         RowBox[{"Directive", "[", 
          RowBox[{"Thin", ",", "Gray"}], "]"}]}], ",", 
        RowBox[{"Frame", "->", "True"}]}], "]"}], ";", "\n", 
      RowBox[{"SetOptions", "[", 
       RowBox[{"Grid", ",", 
        RowBox[{"Alignment", "->", "Center"}], ",", 
        RowBox[{"ItemSize", "->", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "Automatic"}], "}"}]}]}], "]"}], ";"}], 
     ")"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.959042708032864*^9, 3.959042708034681*^9}, {
  3.959050300495202*^9, 3.959050302735796*^9}},
 CellLabel->
  "In[3229]:=",ExpressionUUID->"7a52d74a-8b37-47e8-bc0b-b9baa2530a11"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`currentA$$ = {1, 1, 0, 
  0}, $CellContext`currentB$$ = {1, 1, 0, 
  0}, $CellContext`history$$ = {}, $CellContext`showHistory$$ = False}, 
  TagBox[GridBox[{
     {
      TemplateBox[{
        TagBox[
         GridBox[{{
            StyleBox[
            "\"System A States\"", Bold, 14, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TagBox[
                 GraphicsBox[{
                   
                   RasterBox[{{1, 1}, {0, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    RectangleBox[{0, 0}, {2, 2}]}, Frame -> True, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 60, 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                  BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                  ImageSize -> 800], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentA$$ = {1, 1, 0, 
                    0}; $CellContext`history$$ = {}), Method -> "Preemptive", 
                   PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                TagBox[
                 GraphicsBox[{
                   
                   RasterBox[{{0, 0}, {1, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {}, Frame -> True, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 60, 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                  BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                  ImageSize -> 800], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentA$$ = {0, 0, 1, 
                    1}; $CellContext`history$$ = {}), Method -> "Preemptive", 
                   PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                TagBox[
                 GraphicsBox[{
                   
                   RasterBox[{{0, 1}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {}, Frame -> True, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 60, 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                  BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                  ImageSize -> 800], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentA$$ = {1, 0, 1, 
                    0}; $CellContext`history$$ = {}), Method -> "Preemptive", 
                   PassEventsDown -> Automatic, PassEventsUp -> True}]]}, {
                TagBox[
                 GraphicsBox[{
                   
                   RasterBox[{{1, 0}, {1, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {}, Frame -> True, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 60, 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                  BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                  ImageSize -> 800], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentA$$ = {0, 1, 0, 
                    1}; $CellContext`history$$ = {}), Method -> "Preemptive", 
                   PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                TagBox[
                 GraphicsBox[{
                   
                   RasterBox[{{0, 1}, {1, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {}, Frame -> True, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 60, 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                  BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                  ImageSize -> 800], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentA$$ = {0, 1, 1, 
                    0}; $CellContext`history$$ = {}), Method -> "Preemptive", 
                   PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                TagBox[
                 GraphicsBox[{
                   
                   RasterBox[{{1, 0}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {}, Frame -> True, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 60, 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                  BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                  ImageSize -> 800], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentA$$ = {1, 0, 0, 
                    1}; $CellContext`history$$ = {}), Method -> "Preemptive", 
                   PassEventsDown -> Automatic, PassEventsUp -> True}]]}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], 
             "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
          DefaultBaseStyle -> "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
        TemplateBox[{30}, "Spacer1"], 
        TagBox[
         GridBox[{{
            StyleBox[
            "\"System B States\"", Bold, 14, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TagBox[
                 GraphicsBox[{
                   
                   RasterBox[{{1, 1}, {0, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    RectangleBox[{0, 0}, {2, 2}]}, Frame -> True, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 60, 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                  BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                  ImageSize -> 800], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentB$$ = {1, 1, 0, 
                    0}; $CellContext`history$$ = {}), Method -> "Preemptive", 
                   PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                TagBox[
                 GraphicsBox[{
                   
                   RasterBox[{{0, 0}, {1, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {}, Frame -> True, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 60, 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                  BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                  ImageSize -> 800], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentB$$ = {0, 0, 1, 
                    1}; $CellContext`history$$ = {}), Method -> "Preemptive", 
                   PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                TagBox[
                 GraphicsBox[{
                   
                   RasterBox[{{0, 1}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {}, Frame -> True, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 60, 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                  BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                  ImageSize -> 800], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentB$$ = {1, 0, 1, 
                    0}; $CellContext`history$$ = {}), Method -> "Preemptive", 
                   PassEventsDown -> Automatic, PassEventsUp -> True}]]}, {
                TagBox[
                 GraphicsBox[{
                   
                   RasterBox[{{1, 0}, {1, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {}, Frame -> True, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 60, 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                  BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                  ImageSize -> 800], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentB$$ = {0, 1, 0, 
                    1}; $CellContext`history$$ = {}), Method -> "Preemptive", 
                   PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                TagBox[
                 GraphicsBox[{
                   
                   RasterBox[{{0, 1}, {1, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {}, Frame -> True, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 60, 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                  BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                  ImageSize -> 800], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentB$$ = {0, 1, 1, 
                    0}; $CellContext`history$$ = {}), Method -> "Preemptive", 
                   PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                TagBox[
                 GraphicsBox[{
                   
                   RasterBox[{{1, 0}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, BaseStyle -> {}, Epilog -> {}, Frame -> True, 
                  FrameLabel -> {None, None}, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 60, 
                  Method -> {
                   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, 
                  BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
                  ImageSize -> 800], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`currentB$$ = {1, 0, 0, 
                    1}; $CellContext`history$$ = {}), Method -> "Preemptive", 
                   PassEventsDown -> Automatic, PassEventsUp -> True}]]}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], 
             "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
          DefaultBaseStyle -> "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
       "Row",
       DisplayFunction->(PaneBox[
         RowBox[{
           TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
         Center]& ),
       InterpretationFunction->(RowBox[{"Row", "[", 
          RowBox[{
            RowBox[{"{", 
              TemplateSlotSequence[1, ","], "}"}], ",", 
            RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]},
     {
      TemplateBox[{20},
       "Spacer1"]},
     {
      TemplateBox[{
        TagBox[
         GridBox[{{
            StyleBox["\"System A\"", Bold, 12, StripOnInput -> False]}, {
            GraphicsBox[{
              
              RasterBox[{{1, 1}, {0, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                 0}}}]}, {Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                 2}}}]}}}, BaseStyle -> {}, Frame -> True, 
             FrameLabel -> {None, None}, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 100, 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, 
             BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
             ImageSize -> 800]}, {
            InterpretationBox[
             GridBox[{{
                ButtonBox[
                "\"Identity\"", 
                 ButtonFunction :> (
                  AppendTo[$CellContext`history$$, {
                    "A", 1, $CellContext`currentA$$, \
$CellContext`currentB$$}]; $CellContext`currentA$$ = 
                   Part[$CellContext`currentA$$, 
                    PermutationList[
                    Part[$CellContext`spekkensPermutations, 1], 4]]; Null), 
                 Appearance -> {"AbuttingRight"}, 
                 BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> Automatic,
                  FrameMargins -> 5, Method -> "Preemptive"], 
                ButtonBox[
                "\"Swap Horizontally\"", 
                 ButtonFunction :> (
                  AppendTo[$CellContext`history$$, {
                    "A", 2, $CellContext`currentA$$, \
$CellContext`currentB$$}]; $CellContext`currentA$$ = 
                   Part[$CellContext`currentA$$, 
                    PermutationList[
                    Part[$CellContext`spekkensPermutations, 2], 4]]; Null), 
                 Appearance -> {"AbuttingLeftRight"}, 
                 BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> Automatic,
                  FrameMargins -> 5, Method -> "Preemptive"], 
                ButtonBox[
                "\"Swap Vertically\"", 
                 ButtonFunction :> (
                  AppendTo[$CellContext`history$$, {
                    "A", 3, $CellContext`currentA$$, \
$CellContext`currentB$$}]; $CellContext`currentA$$ = 
                   Part[$CellContext`currentA$$, 
                    PermutationList[
                    Part[$CellContext`spekkensPermutations, 3], 4]]; Null), 
                 Appearance -> {"AbuttingLeftRight"}, 
                 BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> Automatic,
                  FrameMargins -> 5, Method -> "Preemptive"], 
                ButtonBox[
                "\"Swap Diagonally\"", 
                 ButtonFunction :> (
                  AppendTo[$CellContext`history$$, {
                    "A", 4, $CellContext`currentA$$, \
$CellContext`currentB$$}]; $CellContext`currentA$$ = 
                   Part[$CellContext`currentA$$, 
                    PermutationList[
                    Part[$CellContext`spekkensPermutations, 4], 4]]; Null), 
                 Appearance -> {"AbuttingLeft"}, 
                 BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> Automatic,
                  FrameMargins -> 5, Method -> "Preemptive"]}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              ColumnSpacings -> 0], 
             
             ButtonBar[{
              "Identity" :> (
                AppendTo[$CellContext`history$$, {
                  "A", 1, $CellContext`currentA$$, $CellContext`currentB$$}]; \
$CellContext`currentA$$ = Part[$CellContext`currentA$$, 
                   PermutationList[
                    Part[$CellContext`spekkensPermutations, 1], 4]]; Null), 
               "Swap Horizontally" :> (
                AppendTo[$CellContext`history$$, {
                  "A", 2, $CellContext`currentA$$, $CellContext`currentB$$}]; \
$CellContext`currentA$$ = Part[$CellContext`currentA$$, 
                   PermutationList[
                    Part[$CellContext`spekkensPermutations, 2], 4]]; Null), 
               "Swap Vertically" :> (
                AppendTo[$CellContext`history$$, {
                  "A", 3, $CellContext`currentA$$, $CellContext`currentB$$}]; \
$CellContext`currentA$$ = Part[$CellContext`currentA$$, 
                   PermutationList[
                    Part[$CellContext`spekkensPermutations, 3], 4]]; Null), 
               "Swap Diagonally" :> (
                AppendTo[$CellContext`history$$, {
                  "A", 4, $CellContext`currentA$$, $CellContext`currentB$$}]; \
$CellContext`currentA$$ = Part[$CellContext`currentA$$, 
                   PermutationList[
                    Part[$CellContext`spekkensPermutations, 4], 4]]; Null)}, 
              Appearance -> {Automatic}]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
        TemplateBox[{30}, "Spacer1"], 
        TagBox[
         GridBox[{{
            StyleBox["\"System B\"", Bold, 12, StripOnInput -> False]}, {
            GraphicsBox[{
              
              RasterBox[{{1, 1}, {0, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                 0}}}]}, {Antialiasing -> False, 
                GrayLevel[0.5], 
                
                LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                 2}}}]}}}, BaseStyle -> {}, Frame -> True, 
             FrameLabel -> {None, None}, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 100, 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, 
             BaseStyle -> {FontFamily -> "Courier", FontSize -> 10}, 
             ImageSize -> 800]}, {
            InterpretationBox[
             GridBox[{{
                ButtonBox[
                "\"Identity\"", 
                 ButtonFunction :> (
                  AppendTo[$CellContext`history$$, {
                    "B", 1, $CellContext`currentA$$, \
$CellContext`currentB$$}]; $CellContext`currentB$$ = 
                   Part[$CellContext`currentB$$, 
                    PermutationList[
                    Part[$CellContext`spekkensPermutations, 1], 4]]; Null), 
                 Appearance -> {"AbuttingRight"}, 
                 BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> Automatic,
                  FrameMargins -> 5, Method -> "Preemptive"], 
                ButtonBox[
                "\"Swap Horizontally\"", 
                 ButtonFunction :> (
                  AppendTo[$CellContext`history$$, {
                    "B", 2, $CellContext`currentA$$, \
$CellContext`currentB$$}]; $CellContext`currentB$$ = 
                   Part[$CellContext`currentB$$, 
                    PermutationList[
                    Part[$CellContext`spekkensPermutations, 2], 4]]; Null), 
                 Appearance -> {"AbuttingLeftRight"}, 
                 BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> Automatic,
                  FrameMargins -> 5, Method -> "Preemptive"], 
                ButtonBox[
                "\"Swap Vertically\"", 
                 ButtonFunction :> (
                  AppendTo[$CellContext`history$$, {
                    "B", 3, $CellContext`currentA$$, \
$CellContext`currentB$$}]; $CellContext`currentB$$ = 
                   Part[$CellContext`currentB$$, 
                    PermutationList[
                    Part[$CellContext`spekkensPermutations, 3], 4]]; Null), 
                 Appearance -> {"AbuttingLeftRight"}, 
                 BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> Automatic,
                  FrameMargins -> 5, Method -> "Preemptive"], 
                ButtonBox[
                "\"Swap Diagonally\"", 
                 ButtonFunction :> (
                  AppendTo[$CellContext`history$$, {
                    "B", 4, $CellContext`currentA$$, \
$CellContext`currentB$$}]; $CellContext`currentB$$ = 
                   Part[$CellContext`currentB$$, 
                    PermutationList[
                    Part[$CellContext`spekkensPermutations, 4], 4]]; Null), 
                 Appearance -> {"AbuttingLeft"}, 
                 BaseStyle -> {FontFamily -> "Arial"}, Evaluator -> Automatic,
                  FrameMargins -> 5, Method -> "Preemptive"]}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              ColumnSpacings -> 0], 
             
             ButtonBar[{
              "Identity" :> (
                AppendTo[$CellContext`history$$, {
                  "B", 1, $CellContext`currentA$$, $CellContext`currentB$$}]; \
$CellContext`currentB$$ = Part[$CellContext`currentB$$, 
                   PermutationList[
                    Part[$CellContext`spekkensPermutations, 1], 4]]; Null), 
               "Swap Horizontally" :> (
                AppendTo[$CellContext`history$$, {
                  "B", 2, $CellContext`currentA$$, $CellContext`currentB$$}]; \
$CellContext`currentB$$ = Part[$CellContext`currentB$$, 
                   PermutationList[
                    Part[$CellContext`spekkensPermutations, 2], 4]]; Null), 
               "Swap Vertically" :> (
                AppendTo[$CellContext`history$$, {
                  "B", 3, $CellContext`currentA$$, $CellContext`currentB$$}]; \
$CellContext`currentB$$ = Part[$CellContext`currentB$$, 
                   PermutationList[
                    Part[$CellContext`spekkensPermutations, 3], 4]]; Null), 
               "Swap Diagonally" :> (
                AppendTo[$CellContext`history$$, {
                  "B", 4, $CellContext`currentA$$, $CellContext`currentB$$}]; \
$CellContext`currentB$$ = Part[$CellContext`currentB$$, 
                   PermutationList[
                    Part[$CellContext`spekkensPermutations, 4], 4]]; Null)}, 
              Appearance -> {Automatic}]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
        TemplateBox[{30}, "Spacer1"], 
        TagBox[
         GridBox[{{
            StyleBox[
            "\"Bipartite State (A \[CircleTimes] B)\"", StripOnInput -> False,
              FontSize -> 14, FontWeight -> Bold]}, {
            GraphicsBox[{
              RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2A9VetZMEDhpbwwGjwmKDzbzAfkfTNw=
               "], {{0, 0}, {4, 4}}, {0, 1}], {{
                GrayLevel[0.5], 
                StyleBox[
                 
                 LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                  2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}], Antialiasing -> 
                 False]}, {
                GrayLevel[0.5], 
                StyleBox[
                 
                 LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                  4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}], Antialiasing -> 
                 False]}}}, BaseStyle -> {}, Frame -> True, 
             FrameLabel -> {None, None}, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.5]], FrameTicks -> {{{{3.5, 
                  FormBox["1", TraditionalForm]}, {2.5, 
                  FormBox["2", TraditionalForm]}, {1.5, 
                  FormBox["3", TraditionalForm]}, {0.5, 
                  FormBox["4", TraditionalForm]}}, None}, {{{0.5, 
                  FormBox["1", TraditionalForm]}, {1.5, 
                  FormBox["2", TraditionalForm]}, {2.5, 
                  FormBox["3", TraditionalForm]}, {3.5, 
                  FormBox["4", TraditionalForm]}}, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 200, 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}]}, {
            ButtonBox[
            "\"Reset History\"", Appearance -> Automatic, 
             BaseStyle -> {FontFamily -> "Arial"}, 
             ButtonFunction :> ($CellContext`history$$ = {}), Evaluator -> 
             Automatic, FrameMargins -> 5, Method -> "Preemptive"]}, {
            CheckboxBox[
             Dynamic[$CellContext`showHistory$$]]}, {
            DynamicBox[
             ToBoxes[
              
              If[$CellContext`showHistory$$, "Showing History", 
               "Hide History"], StandardForm], 
             ImageSizeCache -> {49., {2., 7.}}]}}, DefaultBaseStyle -> 
          "Column", GridBoxAlignment -> {"Columns" -> {{Center}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
       "Row",
       DisplayFunction->(PaneBox[
         RowBox[{
           TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
         Center]& ),
       InterpretationFunction->(RowBox[{"Row", "[", 
          RowBox[{
            RowBox[{"{", 
              TemplateSlotSequence[1, ","], "}"}], ",", 
            RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]},
     {
      DynamicBox[ToBoxes[
        If[
         And[$CellContext`showHistory$$, $CellContext`history$$ =!= {}], 
         Grid[
          Prepend[
           MapIndexed[
            Function[{$CellContext`item, $CellContext`idx}, {
              First[$CellContext`idx], 
              Part[$CellContext`item, 1], 
              Part[$CellContext`permutationNames, 
               Part[$CellContext`item, 2]], 
              ArrayPlot[
               Partition[
                Part[$CellContext`item, 3], 2], Mesh -> True, ImageSize -> 
               30], 
              ArrayPlot[
               Partition[
                Part[$CellContext`item, 4], 2], Mesh -> True, ImageSize -> 
               30]}], $CellContext`history$$], {
           "Step", "System", "Operation", "A State", "B State"}], Frame -> 
          All, Alignment -> Center, Background -> {None, {
             RGBColor[0.95, 0.95, 1]}}], Nothing], StandardForm],
       ImageSizeCache->{32., {2., 7.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{},
  Initialization:>(
   SetOptions[
    ArrayPlot, MeshStyle -> Gray, FrameStyle -> Directive[Thin, Gray], Frame -> 
     True]; SetOptions[
    Grid, Alignment -> Center, ItemSize -> {Automatic, Automatic}]; 
   Null)]], "Output",
 CellChangeTimes->{{3.959042708302399*^9, 3.959042711986342*^9}, 
   3.959042784899453*^9, {3.959050298646948*^9, 3.959050303043324*^9}},
 CellLabel->
  "Out[3232]=",ExpressionUUID->"55539118-6e79-415d-9cd3-a3500110e7f6"]
}, Open  ]],

Cell["\<\
The first image (`image_848a07.png`) presents a graphical representation of \
state transformations within the Spekkens Toy Model. It shows three distinct \
pairs of $2 \\times 2$ binary patterns (states), each pair connected by a \
series of dotted lines. Each state is depicted as a $2 \\times 2$ grid with \
cyan and white squares. The overall layout appears symmetrical, suggesting a \
visualization of specific transformation pathways or relationships between a \
subset of Spekkens states. The title \[OpenCurlyDoubleQuote]Click any state \
to show transformations\[CloseCurlyDoubleQuote] indicates interactivity.

The second image (`image_848cb3.png`) depicts a more comprehensive \
\[OpenCurlyDoubleQuote]Spekkens Toy Model Explorer,\[CloseCurlyDoubleQuote] \
focusing on bipartite states and their individual manipulations. At the top, \
two grids of $2 \\times 2$ binary patterns represent \
\[OpenCurlyDoubleQuote]System A States\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]System B States,\[CloseCurlyDoubleQuote] allowing the \
user to select an initial state for each. Below these, larger $2 \\times 2$ \
grids show the \[OpenCurlyDoubleQuote]Current State\[CloseCurlyDoubleQuote] \
for System A and System B, along with buttons to \[OpenCurlyDoubleQuote]Apply \
Permutation\[CloseCurlyDoubleQuote] (Identity, Swap Horizontally, Swap \
Vertically, Swap Diagonally) to each system independently. The right-most \
panel shows the \[OpenCurlyDoubleQuote]Bipartite State (A \[CircleTimes] B),\
\[CloseCurlyDoubleQuote] which is the Kronecker product of the current states \
of System A and System B. Below this, there\[CloseCurlyQuote]s a \
\[OpenCurlyDoubleQuote]Reset History\[CloseCurlyDoubleQuote] button and a \
checkbox to toggle the display of a detailed history of transformations.

The provided Mathematica code implements both of these interactive tools. The \
first part of the code defines the fundamental `SpekkensStates` and \
`SpekkensPermutations`. It then constructs a graph where nodes are these \
fundamental states, and edges represent allowed transitions. The \
`DynamicModule` then renders this graph, making each state (node) clickable. \
When a state is clicked, it highlights the selected state in yellow and its \
directly connected edges in red, demonstrating immediate transformations. The \
second, more extensive part of the code implements the bipartite state \
explorer shown in the second image. It allows independent selection of states \
for System A and System B. Users can apply permutations separately to System \
A or System B, and the composite bipartite state (A \[CircleTimes] B) is \
dynamically calculated and displayed. A key feature is the `history` \
tracking, which records each transformation applied and allows for a detailed \
log of state changes, which can be displayed or hidden. This comprehensive \
set of tools facilitates a deep exploration of both individual state \
transitions and the behavior of composite systems within the Spekkens Toy \
Model.\
\>", "Text",
 CellChangeTimes->{{3.959050133546049*^9, 3.959050153204269*^9}, {
  3.95905018468279*^9, 3.9590501917338057`*^9}, {3.9590502261453867`*^9, 
  3.9590502305900993`*^9}, {3.959050275392338*^9, 3.9590502803162327`*^9}, {
  3.959050317387114*^9, 
  3.959050319691307*^9}},ExpressionUUID->"49179350-1712-4945-8302-\
8261f9af297c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"baseStates", "=", 
   RowBox[{"KroneckerProduct", "@@@", 
    RowBox[{"Tuples", "[", 
     RowBox[{"SpekkensStates", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"selected", "=", "None"}], "}"}], ",", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Spekkens Toy Model: State Transition Explorer\>\"", ",", "18", 
         ",", "Bold"}], "]"}], ",", 
       RowBox[{"Button", "[", 
        RowBox[{"\"\<Reset Selection\>\"", ",", 
         RowBox[{"selected", "=", "None"}], ",", 
         RowBox[{"ImageSize", "->", "Medium"}]}], "]"}], ",", "\"\<\\n\>\"", 
       ",", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"selected", "===", "None"}], ",", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"s", "=", "st"}], "}"}], ",", 
                  RowBox[{"Button", "[", 
                   RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{"s", ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "70"}]}], "]"}], ",", 
                    RowBox[{"selected", "=", "s"}]}], "]"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"st", ",", "baseStates"}], "}"}]}], "]"}], ",", "6", 
              ",", "6", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", "}"}]}], "]"}], ",", 
            RowBox[{"Frame", "->", "All"}]}], "]"}], ",", 
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<Selected State & Permutations\>\"", ",", "16", ",", 
                "Bold"}], "]"}], ",", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<Center: \>\"", ",", "Italic"}], "]"}], ",", 
                 RowBox[{"ArrayPlot", "[", 
                  RowBox[{"selected", ",", 
                   RowBox[{"Mesh", "->", "True"}], ",", 
                   RowBox[{"ImageSize", "->", "70"}]}], "]"}]}], "}"}], "]"}],
               ",", 
              RowBox[{"DynamicModule", "[", 
               RowBox[{
                RowBox[{"{", "graph", "}"}], ",", 
                RowBox[{
                 RowBox[{"graph", "=", 
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"nbrs", "=", 
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Permute", "[", 
                    RowBox[{"selected", ",", "#"}], "]"}], "&"}], "/@", 
                    "SpekkensPermutations"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Union", "[", 
                    RowBox[{
                    RowBox[{"{", "selected", "}"}], ",", "nbrs"}], "]"}], ",", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"selected", "->", "#"}], "&"}], "/@", "nbrs"}], 
                    ",", 
                    RowBox[{"selected", "->", "selected"}]}], "]"}], ",", 
                    RowBox[{"VertexLabels", "->", 
                    RowBox[{"Placed", "[", 
                    RowBox[{"\"\<Name\>\"", ",", "Tooltip"}], "]"}]}], ",", 
                    RowBox[{"VertexShapeFunction", "->", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{"#2", ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "40"}]}], "]"}], ",", "#1", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "&"}], ")"}]}], 
                    ",", 
                    RowBox[{"GraphLayout", "->", 
                    RowBox[{"{", 
                    RowBox[{"\"\<RadialEmbedding\>\"", ",", 
                    RowBox[{"\"\<RootVertex\>\"", "->", "selected"}]}], 
                    "}"}]}], ",", 
                    RowBox[{"EdgeStyle", "->", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
                    RowBox[{"VertexSize", "->", "0.25"}], ",", 
                    RowBox[{"ImageSize", "->", "600"}], ",", 
                    RowBox[{"PlotLabel", "->", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Click a state to explore permutations\\n(Radial \
Layout: Center=Selected State)\>\"", ",", "14"}], "]"}]}]}], "]"}]}], "]"}]}],
                  ";", "\n", 
                 RowBox[{"EventHandler", "[", 
                  RowBox[{"graph", ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<MouseClicked\>\"", ":>", 
                    RowBox[{"(", 
                    RowBox[{"selected", "=", "None"}], ")"}]}], "}"}], ",", 
                   RowBox[{"PassEventsDown", "->", "True"}]}], "]"}]}]}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"Alignment", "->", "Center"}]}], "]"}]}], "]"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"Alignment", "->", "Center"}], ",", 
     RowBox[{"Spacings", "->", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1"}], "}"}]}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958974153523089*^9, 3.9589741535246162`*^9}, {
   3.959050341306889*^9, 3.9590503414274883`*^9}, 
   3.959051228176642*^9},ExpressionUUID->"a0a2d88d-fb1b-42f1-8cb6-\
f964317a6252"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQeUZFW5vj+CBANXxATmnDDr9bpUDJgTRlAUvYqYAypGQMWIV8wBxexV
EMyYr6LX5YCOiKiAQ3CY6Wkm9uTp6TxD/b9/7zvnd+hTXX1qf6f32W/P86wF
q6e6vr33eZ/ap74+XVV9p2OPf84r91q0aNEJ+9v/nvOydzz2LW952buee6D9
48g3nvCaV73xFcc95Y1vfcWrXvGWhx27t914P/vfyfbf//91BwAAAAAAAAAA
AAAAAAAaYsuWLe94xzuOOOKI8847bz7uDwAAeXLttdf+61//Ouecc973vvd9
4xvf+Mc//jE5OZlm6tvc5jbXn8aeUHrc7Ywzzgh322effXbs2JFmbU4s1cEa
rF69OtmSpqaminnXrFkz2922b99e3G3r1q0NLuCOd7xj8PiWt7yl39qaD5U5
afHR3ggZPq4ieP/7379omoMOOmhsbKzx+zdIedd0Zdu2bfM3e1MPewCAHPjN
b35zq1vdatF12W+//T796U8nmP0Wt7hFmLF3E/L5z3++WJt1RAkW5mflypWL
arDvvvsmW9KFF15YzLv33nuvXbu2692e9axnFXd7xSte0eACbn3rW4dh3/CG
N/RbW/Oh0pv6j/Yrr7zy99P85S9/iZ6ukUFmkOHjKoLXvOY1YZ32U+TQ0FC4
cWJi4ve72bBhw5z3T0N513TlzW9+8/zN3sjDHgAgBz71qU9Z7zHbufTFL37x
fC+AnrOtntP46Ec/Wr2PPaHb03pxn4XUc/b1aH/Ri14Ubr/LXe4SN11Tg8wg
w8dVBFdcccWDH/zgm9zkJh/84AeLG//1r38V6//Wt7415/3TQM8JAODHmjd7
YgontL322uuoo45673vf+/KXv/yAAw4oTqcXXHDBvK5hAfeca9euvX2Jm970
psUh2FEXt9/97ndPtqQZz573vve9q/f55Cc/Wb7Pguk5+320Z9tzZvi4imbX
rl3lf/boObvePw3lXXPggQfevsK8tsH0nACwMPjud79bnEvPPvvs4vYVK1b8
27/9W7j9Na95TbjxH//4x7en+d73vteZfuL78pe/fOKJJ55zzjlbtmzpOr49
QVx88cUf//jHrcE466yzur7ArOsZ9Y9//OO3d7N8+fLOLD3njh07irv9+Mc/
7mvqGYdjh2yHYwf7kY985M9//nN1nddee63dbvd54xvf+M53vvPMM8+84oor
5sj3uthzaHEIS5Ysme1uNtGll156+umnv/a1rz3jjDOWLl1qt5TvYKbCyn/+
85+Xb1+/fn2Rhj13dx28esWmupL73e9+vXtO0/2zn/3MQjjppJN++ctf9ngx
29atW7///e/bg+QrX/lKePloj55z48aNP/jBD970pjedeuqp9gCovsbS+eRb
/9Fu+VuGD3vYw8KNN7/5zUOqK1euLA9oDwB7GNjR2ZrN1/nnn19ec81B5jzq
Oen9uLIHjz3+w9RXXnmlbRl72NiaP/vZz9Y/lk7/+8Uejeeee641Y3Yf+ynm
vPPOm/Ey7JCPYSeQcIut87TTTiuO5VWvepV996c//els9y8fY+8tMyOE8fHx
3/72t3awJ5xwwte+9rU5Xx9e3jXf+MY3ZrvbsmXLig1YzuTqq68ubrfZq2H2
Ppf2eNj3e+Cz2e/3bGmPlk9/+tPvete7Lrvsst7RAQAUHH/88cW5dHBwsPwt
ex78wDTFOdbOMOGe9gRtjcSNb3zjovb617++dWIzBv/9739/0EEHzehwHve4
x42MjJTvVj2jXnDBBfvtt1+48T73uU84CVd7TjtPPvOZzyxutJN2X1OXD8fO
w3vttVdxz+td73onn3xyeZH2BPqUpzxlxoB2t7e97W1TU1M1067Tc/7pT3+y
5mTGRAcffPDf/va34j4PfOADw+3777//6Ohocbs9CxQllkDX8as9pz2zl+9g
Tz0z7lDuOXfu3HnMMceUs1o0fc3wla985YwnO8Oe0O2BUdztgAMOsK6va89p
GR555JGWZ3nYG93oRj/84Q/LA8725GsH9eIXv9gGtCf3rkcdqP9of8973rOo
G8WVt+Hh4de97nUzFmw8+tGPLl6FOOcgNY96Tno/riYmJorv2gHe7W53C1/f
9ra3rX8snT73i50fbnKTm8wY8K53vas9uor7FPnc4AY36Ex3R13jKq4Pz7h/
QZ0tUw7BmuRHPepRM6a46qqreiRcs+e0B1VxVrzVrW5VtLKHH354uPGGN7xh
eIj2dS6d7WHf74F3td/p/2z5pS99qbib/SzZIzcAgDLls8cjH/nI8jNCleK0
Y0835ZNkgY1W3NnOe9UnncCTn/zk8iWUGWfUFStWFLfc/va3X7VqVbhbtee0
fq98Ou136uJw9t577+IyV4E9jZavVDziEY8ovlXuo4x3vvOdNdOes+e0lR94
4IFdV26ZXH755eFu5WtBv/zlL4vypz71qeFG6+tm+xVktee0GcvvArbObcYd
ip7TuoKXvexlXZdnvP71ry9PZE/N1ftYQ2V9cvi66Dlt2Je+9KVdx7QfPX7z
m98UY3Z98rUjtcdJuN389si//qN9znbRMpkthwc/+MF1Bql/1HNSv+csP86L
rqPOsXT62S+//e1vy98q7xdrFzdv3jwjH0/PWXPLlEMovxShwPZOj4Rr9pyd
674u5f3vf7/d8utf/7q4pXj5dF/n0q4P+4gD72q/37OlLdh2cXEfek4AqM+V
V14545rV7W53u6OOOuqzn/1s9YN0itNO4AlPeIJ1es94xjOKW/bdd9/169d3
pp8+bnOb24Qbb3nLW/7gBz9YunTphz/84eKeH/rQh4phy2fUbdu2HXrooeGf
N7vZzYozZ6fSc9q5rvjn6173uuJu9acuH84Nb3jDE0880Z4j7nznOxc3Fmf4
tWvXFleBTjnllPDBKUcccUS45ZBDDtm5c2edtOf8HWhxDdCk2Hp+8YtfnHDC
CUVJ8fK8a665pljPm970pnDj+Pi4HUW4sXrNuaD87PnmN785fHHWWWeF79oz
lMUewj/mmGPCd4ue84tf/GJRa93ImWee+c1vfvO+971vcWMxzpYtW4re0nji
E59oD5UZF4qLnvOMM84obnz5y19uT4LWtBTXcu0Z2Q6t+lApjsgecsVj+OCD
D+6Rf/1H+xVXXGGPnOIHjfBAMsJPQJs2bbK2J3zrWc961h/+8AfrKx7/+McX
w4bReg9S/6jnpH7PuWj6avNzn/tce3SFD96peSydfvbLq1/96nDLHe5wh2XL
ltkCzj333OKVtKeffnq4W7WH/NGPfvSZz3ym/AixuIr2u3r/+ltmRgiPetSj
Pv3pT1sO5ffK9XiVeHnX2IP5hAobN24M97RTwYMe9KBwT+vxhoaGbKeEf5rc
4kRR/1za6fawjz7wGfbjzpbGAx7wALNjJ5DFixfXfJQCAHSmr0fNeCIuTmV2
Zv7rX/9a3LN82jn66KOL24unGONXv/qV3WK9YnFL+QOcX/va14Yby9ejijOq
dUp2e/jantRmPHuWe057CiueLI488sjyNb36U5cPp7h+Ze1cceMzn/nMcGP5
us23v/3tcOPw8PCFu6n5vobevYG1KMV3yx/EV463aAAe/ehHh1vuda97VRf5
xz/+cbY1lJ89//GPf4Qv7CkvfPf73/9+uMWeUKwRCl8XPecLXvCCcMtBBx1U
vOLLmoriQs0rX/nKcKO1LsUsL3rRi4rZjz322OL2oud8/vOfH26xx1uRpDVm
heIiq9l+yWh946LpS23hylIP6j/aO7O//WfHjh2/3k3RGf79738vRrMY5xyk
/lHPSf2e08SZ9Lhjqb9fDjvssHCLdSbF75ft4R02i5WEW7pet+zxHqLq/etv
mXII97nPfYoL+8WD3Cj/SnoGc75vPbxKM3DRRRcVn41gCYQv7Ja4c2mn28M+
7sCr9uPOlnZCqL6QBgCgJvZ08+xnP7u4EFHGflS3/iHcrXzasR+Hi3JrP4rb
wy+PvvnNbxa3WCf55t3c8Y53DDfe9KY3Lc5axRm1jP3YPmOR5Z6z+G3dne98
5xmXg+pPXRyO9SrlSxz3vve9w+2Pecxjwi1bt24tNyr2PHL88cefddZZxW8J
a9K7Nyj/Mrr86rK//OUvxe0/+tGPwo3lS47hpYlvf/vbwz9vf/vb93hGKD97
WqvzkIc8ZNF0xxUGefrTnx6+dfHFF1d7ziLDF77wheUxn/a0p4Xb73//+4db
yrLKT8flD/kpes473elOxY1vLlHc+KlPfSrcs8ebKaxNmu1tUzOo+Wjv1HjL
+aZNm+yB+vWvf91WWH6xaPGDSY9B6h/1nNTvOV/60pfONsicx1J/v5QvuFmk
z33uc+20UH2fkb/nrL9lyiG89a1vLe5ZflvZbC+B7vTZc3au+8rhgGVSvkP9
c2mn28M+7sCr9iPOlsbAwMBsQQEA1MQ6qHPOOedtb3ub9SHlNxQ8+tGPDnco
Tjv77LPPjN8mF68seslLXtLp9prAKsWJq2vPWbxZtaDcxhTY892Mt/DUn7r8
qvjyCE960pPC7cVzqPGxj32sOo7l8MxnPnPdunU1E+7dG7z+9a8P37KOuhyv
Pb8XVSeddFK40TqE4oJYePOU9Xvhn+Wn1Cozes7Pfe5z4esPfvCDa9euDc38
/e53v07pElDoOTdu3FgUnnLKKeUxi05p7733DleQiusk1trNuAhcfDBR6DnL
w85G8VzZ4IfGzPlo7/TsOa1PePjDH159301gzp6zr6Oek/o9pz2Mq+U1j6X+
flmzZs3d73736lDWZn/1q18tCv09Z/0tUw7hE5/4RHHPP/3pT8XtNXtO21+/
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
0VRytRMAAACyIlwQC1c4N2/eXL/wjDPOOKbEySef/Mtf/nL+1lmf5cuXv/a1
r/2P//iPu9zlLs973vO+853v1Cz80pe+tGjRoksvvbTxJb3iFa+wkX/yk580
PnIVkxiudnKpEwAAAPLB2pKdO3eOj4+vW7eur1+pv/jFL7Y+6n7T3O1ud1s0
zXHHHbdr1675W+3//u//3uhGN/r+978/2x0uvPDCgw46aJ999nn84x9vDedt
bnMbW9UJJ5xQZ/Cmes7qIs8999ynPvWpK1eudI5cB5NoKk2oaaXnBAAAgEwI
FzlHRkYGBwf7KrSe8/rXv37xz2XLlj32sY+1nu13v/td02v8f/zmN7+xKXpc
ujzmmGP23nvviy66KPzTjuvwww+3W9auXTvn4E31nHMucr4xlXbg4VJnW2sA
AAAAKFP0nP1ehZvRcxo///nPrdd673vfW9zy5z//+TWvec297nWvpz/96aef
fnq5BVqzZs1xxx133/ve9wEPeMCrXvWqoaGh4lsbNmx43/ve9/CHP/yhD33o
iSeeaPcMt5922mn3v//9bQob0DrJyy+/vLqqu93tbne9613LtyxduvTjH//4
1VdfXdzy9a9//dnPfvY973nPl7/85X/4wx+K26s952z3NDZu3HjKKaccdthh
hx566Ete8pLLLrusxyK///3v29flY/zqV7/6vOc97+53v/sLXvCCM888sxyL
3fN73/veu971rgc96EH3u9/93vrWt5qd6pH2wFTScwIAAEBWhJ5zx44dy5cv
76uw2nOec8451mt97nOfC//8+9//fuMb3/iQQw6xluxhD3uYfeukk04K3xof
H7/1rW994IEHnnDCCdbO3ehGN7JeMfxSfmxszLrNfffd94gjjrB+b//993/g
Ax8Y3tn0rW9962lPe5qN87jHPc5a2RUrVlRXdeSRR17vetf72Mc+ZuN0Xfap
p55qIzz4wQ/+z//8z9ve9rY2/pIlS8K3ZvScPe5pHZ0dkR3+E5/4RGsd/+3f
/s2O9G9/+9tsi/zEJz5htxQLtmY1vCzh2GOPtYbWvv70pz8dvvWvf/3L/nnw
wQdbO/rSl77U5rV/2uH0pcZUWmL0nAAAAJAPoeccHh4uXwmsQ7nnnJyc/MUv
fmHNoTVIAwMD4cYHPehBt7nNbVavXh3+ecwxx9h3ly1bZl//+te/tq+//OUv
h2/97Gc/s/Zs1apV9vVHPvIR+9b3vve98K0f//jH9k+7Mfxzzl9bW88WXsN5
wAEHPP3pTz/ttNPCsMV3rSM96qijQjO2bt26293udrbO8N1yz9n7nh/60Ifs
nmeccUb452WXXbbffvtZILMtstxzXnnllfa19aVhZAv/sMMO22uvvWyKzu6e
89BDDzUj9k/rw605t/62HzMdU2nl9JwAAACQD56e07qjvaax9sy+3nfffa0Z
C98dHR21W57whCdctpsvfvGLdsvZZ5/dmf59d+iszjnnnE2bNpWHfdKTnmTf
uqyE/fOII44I363zUsnNmzd//vOft0Zu//33Dyssft3/7W9/O/S6xeCHH364
3TI+Pt65bs/Z+57PeMYzbnnLW5YnDX8VaLZFlnvOb33rW/Z1+Tf15557rt1i
jXdnd8954oknFt996UtfavGGeWtCzwkAAAC54ek5rRc6dZpXvvKV1im9/vWv
L7570UUXLerGe97znnAHa0EPPvhgu8UGeeQjH1l8zlLXquIlmn29Pcf6Xmsj
73CHO1iJFdot73jHO7qOH16NWe45e9/zTne6k615tnl795xvf/vb7etwVTNw
+eWX2y0WY2d3z/mZz3ym+G5YiR1LnUMO0HMCAABAbjTyu/Vdu3bd9773vcEN
blC8+X39+vXWKR177LErr8u2bduKEWzeP/7xj+9+97tvcYtb7L333qGde8Qj
HnHAAQfMqCp+Qd+755yYmPjb3/5WfqtOZ/r9O1by/ve/377+3Oc+Z19bf1uM
PDAwYP/fuXNn57o9Z+97Hn744dbKzpZM757z85//vH3917/+tfjub3/7W7vl
rLPO6tBzAgAAwAKl6Dmd7yEKb1ovXtNo3O52t3vIQx5ifWD4p7WjX/ziF6+8
8kr72jrDb37zm1u2bAnfOvvss632W9/6ln19wgknWP/5z3/+s1je17/+9V/8
4hfhn6E9++xnP9t1SdbQ3vCGN3zyk59cvtEmspJzzjnHvl6yZIl9/YEPfKD4
7u9//3tbVfjbQ+Wes/c9Qx9Y/H7cDuQJT3hC8Qvx6iLLPeeFF15oX9sIxXfD
VeKrrrqq01DPaSrpOQEAACArivetd30beA+q71t/zGMec73rXa/4bMzQwj3u
cY+zpvELX/jCne98Z2sIwycyhQb10Y9+9A9+8IOf/OQn1prutdde4WKmNV03
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
OWp1d3HpNZthypWnd1c1GMjNoz/PuJX7a9X3YFsj5HDuVXcXl0A1h5Szs+9y
6FvanRd3ngz9+XuOWt1dXHrNZphy5endVQ0GcvPozzNu5f5a9T3Y1gg5nHvV
3cUlUM0h5ezsuxz6lnbnxZ0nQ3/+nqNWdxeXXrMZplx5endVg4FmPe6ZhATU
9+CeSUgAd4qEBHCnSEgAd4qEBHCnSEiAnlOdkAB7UJGQAO4UCQngTpGQAO4U
CQngTpGQwELqOeOu+gY8I5TzjFu5v1Z9D7Y1gt+7/zGj7i4ugWoOKWdn3zW1
73S9486ToT9/z1Gru4tLr9kMU648vbuqwUBuHv15xq3cX6u+B9saIYdzr7q7
uASqOaScnX2XQ9/S7ry482Toz99z1Oru4tJrNsOUK0/vrmowkJtHf55xK/fX
qu/BtkbI4dyr7i4ugWoOKWdn3+XQt7Q7L+48Gfrz9xy1uru49JrNMOXK07ur
Ggzk5tGfZ9zK/bXqe7CtEXI496q7i0ugmkPK2dl3OfQt7c6LO0+G/vw9R63u
Li69ZjNMufL07qoGA7l59OcZt3J/rfoebGuEHM696u7iEqjmkHJ29l0OfUu7
8+LOk6E/f89Rq7uLS6/ZDFOuPL27qsFAbh79ecat3F+rvgfbGiGHc6+6u7gE
qjmknJ19l0Pf0u68uPNk6M/fc9Tq7uLSazbDlCtP765qMJCbR3+ecSv316rv
wbZGyOHcq+4uLoFqDilnZ9/l0Le0Oy/uPBn68/cctbq7uPSazTDlytO7qxoM
5ObRn2fcyv216nuwrRFyOPequ4tLoJpDytnZdzn0Le3OiztPhv78PUet7i4u
vWYzTLny9O6qBgO5efTnGbdyf636HmxrhBzOveru4hKo5pBydvZdDn1Lu/Pi
zpOhP3/PUau7i0uv2QxTrjy9u6rBQG4e/XnGrdxfq74H2xohh3Ovuru4BKo5
pJydfZdD39LuvLjzZOjP33PU6u7i0ms2w5QrT++uajCQm0d/nnEr99eq78G2
Rsjh3KvuLi6Bag4pZ2ff5dC3tDsv7jwZ+vP3HLW6u7j0ms0w5crTu6saDOTm
0Z9n3Mr9tep7sK0Rcjj3qruLS6CaQ8rZ2Xc59C3tzos7T4b+/D1Hre4uLr1m
M0y58vTuqgYDuXn05xm3cn+t+h5sa4Qczr3q7uISqOaQcnb2XQ59S7vz4s6T
oT9/z1Gru4tLr9kMU648vbuqwUBuHv15xq3cX6u+B9saIYdzr7q7uASqOaSc
nX2XQ9/S7ry482Toz99z1Oru4tJrNsOUK0/vrmowkJtHf55xK/fXqu/BtkbI
4dyr7i4ugWoOKWdn3+XQt7Q7L+48Gfrz9xy1uru49JrNMOXK07urGgzk5tGf
Z9zK/bXqe7CtEXI496q7i0ugmkPK2dl3OfQt7c6LO0+G/vw9R63uLi69ZjNM
ufL07qoGA7l59OcZt3J/rfoebGuEHM696u7iEqjmkHJ29l0OfUu78+LOk6E/
f89Rq7uLS6/ZDFOuPL27qsFAbh79ecat3F+rvgfbGiGHc6+6u7gEqjmknJ19
l0Pf0u68uPNk6M/fc9Tq7uLSazbDlCtP765qMNCsxz2TkID6HtwzCQngTpGQ
AO4UCQngTpGQAO4UCQnQc6oTEmAPKhISwJ0iIQHcKRISwJ0iIQHcKRISWEg9
Z1sj5FCrvgfbGiGHWtzp1uJOtxZ3urW4062l5/SPkEMte1C3Fne6tbjTrcWd
bi3udGvpOf0j5FDLHtStxZ1uLe50a3GnW4s73Vp6Tv8IOdSyB3Vrcadbizvd
Wtzp1uJOt5ae0z9CDrXsQd1a3OnW4k63Fne6tbjTraXn9I+QQy17ULcWd7q1
uNOtxZ1uLe50a+k5/SPkUMse1K3FnW4t7nRrcadbizvdWnpO/wg51LIHdWtx
p1uLO91a3OnW4k63lp7TP0IOtexB3Vrc6dbiTrcWd7q1uNOtpef0j5BDLXtQ
txZ3urW4063FnW4t7nRr6Tn9I+RQyx7UrcWdbi3udGtxp1uLO91aek7/CDnU
sgd1a3GnW4s73Vrc6dbiTreWntM/Qg617EHdWtzp1uJOtxZ3urW4062l5/SP
kEMte1C3Fne6tbjTrcWdbi3udGvpOf0j5FDLHtStxZ1uLe50a3GnW4s73Vp6
Tv8IOdSyB3VrcadbizvdWtzp1uJOt5ae0z9CDrXsQd1a3OnW4k63Fne6tbjT
raXn9I+QQy17ULcWd7q1uNOtxZ1uLe50axdSz7lnEhJQ34N7JiEB3CkSEsCd
IiEB3CkSEsCdIiEBek51QgLsQUVCArhTJCSAO0VCArhTJCSAO0VCAgup52xr
hBxq1fdgWyPkUIs73Vrc6dbiTrcWd7q19Jz+EXKoZQ/q1uJOtxZ3urW4063F
nW4tPad/hBxq2YO6tbjTrcWdbi3udGtxp1tLz+kfIYda9qBuLe50a3GnW4s7
3Vrc6dbSc/pHyKGWPahbizvdWtzp1uJOtxZ3urX0nP4RcqhlD+rW4k63Fne6
tbjTrcWdbi09p3+EHGrZg7q1uNOtxZ1uLe50a3GnW0vP6R8hh1r2oG4t7nRr
cadbizvdWtzp1tJz+kfIoZY9qFuLO91a3OnW4k63Fne6tfSc/hFyqGUP6tbi
TrcWd7q1uNOtxZ1uLT2nf4QcatmDurW4063FnW4t7nRrcadbS8/pHyGHWvag
bi3udGtxp1uLO91a3OnW0nP6R8ihlj2oW4s73Vrc6dbiTrcWd7q19Jz+EXKo
ZQ/q1uJOtxZ3urW4063FnW5tJj3n8uXLPWvAo9+jKYjbg7hz1uJOtxZ3urW4
063FnW5tGne9e86RkRE8Omsb8bhjx45+9yDu/LW4063FnW4t7nRrcadbm8bd
nD3nwMCAZw149Hu0EUxExB7EnbMWd7q1uNOtxZ1uLe50a9O4o+ec71q/R1PA
HmylFne6tbjTrcWdbi3udGvTuOvRc+7cuXN0dPSaa66ZmJiIXsMpezAhAadH
0zc4OGgiTEf9PYg7JyEB3CkSEsCdIiEB3CkSEsCdIiGBNO7m7DlXrVo1PDwc
vYy2s2yTkIDT49jYmG2luD2Iu2hCArhTJCSAO0VCArhTJCSAO0VCAmnc9e45
x8fH161bt3HjRs9K/BdspXEevoVvCkxEv3sQd35wpwvudMGdLrjTJY27Hj3n
rl27JiYmNm/ebL2rZyV49JRb+KbARJiO+nsQd42AO11wpwvudMGdLmnczdZz
dkofezUwMDA2Nha9kqVLl67Yg1m9enV0dPYjg43Q4wOvOt32YAd3DYE7XXCn
C+50wZ0uadzN2XOawfXr1zs/+QrisNgtfFMQtwdx1yK40wV3uuBOF9zpUt9d
j57T2LVr1+TkpPWuK1euHBwcnLf1QhcscIvdwjcFJmK2u81mEHctgjtdcKcL
7nTBnS59uevdcxavzt28efOyZctWrVo1P0uGmVjUFrjF3uMVuYEer8jFXSvg
Thfc6YI7XXCnS7/uevecnd1XrUdHRzdt2rR8+fIrrrhi27Zt87Bw+D8sXgvZ
orbALfYeV6oDc746AnfJwJ0uuNMFd7rgTpc4d3P2nJ2SSmtlBwcHL7nkEpto
zZo14Q9rNnoQeygWo4VpkVqwFu/KlSst6joSOz33YAd38w/udMGdLrjTBXe6
+N3V6Tk70y+WCBeuh4eHh4aGbCKb8eKLL77wwguXLFlywQUXnD/NYqhNSMyi
swAtRgvTIrVgLV4LOVym7vHSiBkecZcS3OmCO11wpwvudGnWXc2es7P79RIT
ExNjY2M20ZYtWzZs2LBu3bo106xevXoV9ImFFtKzGC1Mi9SCtXgt5N6vi+hr
D+JuPsCdLrjTBXe64E6XBt3V7zkDO6eZmpqyuay/tUlHdrMD+qSIzmK0MC1S
CzYkXN9IfYO4axDc6YI7XXCnC+50adBdvz1nIFy+hsapc4G6q0fctQ7udMGd
LrjTBXe6RLuL6zkhHzCoC+50wZ0uuNMFd7rQcy4MMKgL7nTBnS640wV3utBz
LgwwqAvudMGdLrjTBXe60HMuDDCoC+50wZ0uuNMFd7rQcy4MMKgL7nTBnS64
0wV3utBzLgwwqAvudMGdLrjTBXe6LAIAAAAAAAAAAABYQLR9zRXiwaAuuNMF
d7rgThfc6ULPuTDAoC640wV3uuBOF9zpQs+5MMCgLrjTBXe64E4X3OlCz7kw
wKAuuNMFd7rgThfc6ULPuTDAoC640wV3uuBOF9zpQs+5MMCgLrjTBXe64E4X
3OlCz7kwwKAuuNMFd7rgThfc6ULPuTDAoC640wV3uuBOF9zp4uk5r4V5I84j
7nIAd7rgThfc6YI7XeLcRRvctZud4KYIM8JmfYO4mw9wpwvudMGdLrjTxe+u
X4OFu8nJyYlpxncz1o1T9mC6BlKmiC4kaZEWTuvbrGMQd/2CO11wpwvudMGd
Lind1ew5C4lTU1M278jIyNatWzdu3Dg0NLRuN2vXrl1Toe0s2+SiaRYvXlyN
xVhXwmLctGmTRWrBWrwWcn2VcxrEXQS40wV3uuBOF9zpktJd/Z8arK21/nZ4
eNhmNIPbt2+3f9qNvWvDEc25mHkaIYfaFStWzHl/+6lhdHTUIrVgLV4LOWRb
R2Vvg7jz1OJOtxZ3urW4063FnW5tGnd1fmoIF6itp7XmdsOGDTZF7QPCYy2P
ZSxeC9mitsDD5eveKnsYxJ2zFne6tbjTrcWdbi3udGvTuKv5U4ONuWmavpbU
wWP/HgMh7aCy908QsxnEnb8Wd7q1uNOtxZ1uLe50a9O4m7PntN7VutktW7ZE
SOzgMdZjZ1qlxW7h9/7xoccexJ2zFne6tbjTrcWdbi3udGvTuJvzSvXU1NTw
8PDQ0FDcYvAY7dGw2C384mW6Xe/T1SDucIe7uEE6uGu7Fne6tbjTrU3jrnfP
uXPnzrGxMRttcnIybiV49Hi02NevX28KwlXrrveZbQ/izl+LO91a3OnW4k63
Fne6tWnc9X51hHWt27dvj/7BoYNHn8fO9I8PpsBEzPZKiapB3OEOd7jTrcWd
bi3udGvTuOv96gjrXcNnMUUvA49Ojxa+KTARs12y7roHcYc73MUNEsBdi7W4
063FnW5tGnc9es5wsXrt2rXj4+PRy8Cj06OFbwp6XLLuugdxhzvcxQ0SwF2L
tbjTrcWdbm0ad3P2nKtXr56amopeBh6dHi18UxC3B3HnrMWdbi3udGtxp1uL
O93aNO569Jw2wsjIyODgoGcZeHR6NEyBiQgvk6h+t+sexB3ucBc3SAHu2qrF
nW4t7nRr07ibs+ccGBjwrAGPfo+mIG4P4s5ZizvdWtzp1uJOtxZ3urVp3M3Z
czqXgUe/Rxshbg/izlmLO91a3OnW4k63Fne6tWnc9e45d+zYgUdnbSMeTUS/
exB3/lrc6dbiTrcWd7q1uNOtTeOud885PDx89dVXe9aAR79HUxA+4b+vPYg7
fy3udGtxp1uLO91a3OnWpnFHzznftexB3Vrc6dbiTrcWd7q1uNOtpef0j5BD
LXtQtxZ3urW4063FnW4t7nRr6Tn9I+RQyx7UrcWdbi3udGtxp1uLO91aek7/
CDnUsgd1a3GnW4s73Vrc6dbiTreWntM/Qg617EHdWtzp1uJOtxZ3urW4061d
SD3nnklIQH0P7pmEBHCnSEgAd4qEBHCnSEgAd4qEBOg51QkJsAcVCQngTpGQ
AO4UCQngTpGQAO4UCQkspJ6zrRFyqFXfg22NkEMt7nRrcadbizvdWtzp1tJz
+kfIoZY9qFuLO91a3OnW4k63Fne6tfSc/hFyqGUP6tbiTrcWd7q1uNOtxZ1u
LT2nf4QcatmDurW4063FnW4t7nRrcadbS8/pHyGHWvagbi3udGtxp1uLO91a
3OnW0nP6R8ihlj2oW4s73Vrc6dbiTrcWd7q19Jz+EXKoZQ/q1uJOtxZ3urW4
063FnW4tPad/hBxq2YO6tbjTrcWdbi3udGtxp1tLz+kfIYda9qBuLe50a3Gn
W4s73Vrc6dbSc/pHyKGWPahbizvdWtzp1uJOtxZ3urX0nP4RcqhlD+rW4k63
Fne6tbjTrcWdbi09p3+EHGrZg7q1uNOtxZ1uLe50a3GnW0vP6R8hh1r2oG4t
7nRrcadbizvdWtzp1tJz+kfIoZY9qFuLO91a3OnW4k63Fne6tfSc/hFyqGUP
6tbiTrcWd7q1uNOtxZ1uLT2nf4QcatmDurW4063FnW4t7nRrcadbS8/pHyGH
Wvagbi3udGtxp1uLO91a3OnW0nP6R8ihlj2oW4s73Vrc6dbiTrcWd7q1C6nn
3DMJCajvwT2TkADuFAkJ4E6RkADuFAkJ4E6RkAA9pzohAfagIiEB3CkSEsCd
IiEB3CkSEsCdIiGBhdRzLnLgGaGcZ9zK/bXqe7CtEfze/Y8ZdXdxCVRzSDk7
+66pfafrHXeeDP35e45a3V1ces1mmHLl6d1VDQZy8+jPM27l/lr1PdjWCDmc
e9XdxSVQzSHl7Oy7HPqWdufFnSdDf/6eo1Z3F5desxmmXHl6d1WDgdw8+vOM
W7m/Vn0PtjVCDudedXdxCVRzSDk7+y6HvqXdeXHnydCfv+eo1d3FpddshilX
nt5d1WAgN4/+PONW7q9V34NtjZDDuVfdXVwC1RxSzs6+y6FvaXde3Hky9Ofv
OWp1d3HpNZthypWnd1c1GMjNoz/PuJX7a9X3YFsj5HDuVXcXl0A1h5Szs+9y
6FvanRd3ngz9+XuOWt1dXHrNZphy5endVQ0GcvPozzNu5f5a9T3Y1gg5nHvV
3cUlUM0h5ezsuxz6lnbnxZ0nQ3/+nqNWdxeXXrMZplx5endVg4HcPPrzjFu5
v1Z9D7Y1Qg7nXnV3cQlUc0g5O/suh76l3Xlx58nQn7/nqNXdxaXXbIYpV57e
XdVgIDeP/jzjVu6vVd+DbY2Qw7lX3V1cAtUcUs7Ovsuhb2l3Xtx5MvTn7zlq
dXdx6TWbYcqVp3dXNRjIzaM/z7iV+2vV92BbI+Rw7lV3F5dANYeUs7Pvcuhb
2p0Xd54M/fl7jlrdXVx6zWaYcuXp3VUNBnLz6M8zbuX+WvU92NYIOZx71d3F
JVDNIeXs7Lsc+pZ258WdJ0N//p6jVncXl16zGaZceXp3VYOB3Dz684xbub9W
fQ+2NUIO5151d3EJVHNIOTv7Loe+pd15cefJ0J+/56jV3cWl12yGKVee3l3V
YCA3j/4841bur1Xfg22NkMO5V91dXALVHFLOzr7LoW9pd17ceTL05+85anV3
cek1m2HKlad3VzUYyM2jP8+4lftr1fdgWyPkcO5VdxeXQDWHlLOz73LoW9qd
F3eeDP35e45a3V1ces1mmHLl6d1VDQZy8+jPM27l/lr1PdjWCDmce9XdxSVQ
zSHl7Oy7HPqWdufFnSdDf/6eo1Z3F5desxmmXHl6d1WDgdw8+vOMW7m/Vn0P
tjVCDudedXdxCVRzSDk7+y6HvqXdeXHnydCfv+eo1d3FpddshilXnt5d1WAg
N4/+PONW7q9V34NtjZDDuVfdXVwC1RxSzs6+y6FvaXde3Hky9OfvOWp1d3Hp
NZthypWnd1c1GMjNoz/PuJX7a9X3YFsj5HDuVXcXl0A1h5Szs+9y6FvanRd3
ngz9+XuOWt1dXHrNZphy5endVQ0GcvPozzNu5f5a9T3Y1gg5nHvV3cUlUM0h
5ezsuxz6lnbnxZ0nQ3/+nqNWdxeXXrMZplx5endVg4FmPe6ZhATU9+CeSUgA
d4qEBHCnSEgAd4qEBHCnSEiAnlOdkAB7UJGQAO4UCQngTpGQAO4UCQngTpGQ
wELqOeOu+gY8I5TzjFu5v1Z9D7Y1gt+7/zGj7i4ugWoOKWdn3zW173S9486T
oT9/z1Gru4tLr9kMU648vbuqwUBuHv15xq3cX6u+B9saIYdzr7q7uASqOaSc
nX2XQ9/S7ry482Toz99z1Oru4tJrNsOUK0/vrmowkJtHf55xK/fXqu/BtkbI
4dyr7i4ugWoOKWdn3+XQt7Q7L+48Gfrz9xy1uru49JrNMOXK07urGgzk5tGf
Z9zK/bXqe7CtEXI496q7i0ugmkPK2dl3OfQt7c6LO0+G/vw9R63uLi69ZjNM
ufL07qoGA7l59OcZt3J/rfoebGuEHM696u7iEqjmkHJ29l0OfUu78+LOk6E/
f89Rq7uLS6/ZDFOuPL27qsFAbh79ecat3F+rvgfbGiGHc6+6u7gEqjmknJ19
l0Pf0u68uPNk6M/fc9Tq7uLSazbDlCtP765qMJCbR3+ecSv316rvwbZGyOHc
q+4uLoFqDilnZ9/l0Le0Oy/uPBn68/cctbq7uPSazTDlytO7qxoM5ObRn2fc
yv216nuwrRFyOPequ4tLoJpDytnZdzn0Le3OiztPhv78PUet7i4uvWYzTLny
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
h4eHbUYzuH37dvun3di7NhzRIgeeEULtnFH0WLm/dsWKFXPe335qGB0dtUgt
WIvXQg7Z1lHZ26Df3ZyLn6cR/N79jxl1d3EJVHPolxz2rLq7ORc/5wi63nHn
ydCff9yaw9fq7uLSazbDuFr/mtO4622wMy0xXKC2ntaa2w0bNtgUtcOg56zl
sYzFayFb1BZ4uHzdW2UPg42462vxDY6Qw7lX3V1cAtUc+iWHPavurq/Fdx1B
1zvuPBn6849bc/ha3V1ces1mGFfrX3Madz0Mdko/NdiYm6bpa0kdes7+PQZC
2kFl758gZjPYlLt+q5oaIYdzr7q7uASqOaScnX2XQ9/S7ry482Toz99z1Oru
4tJrNsOUK0/vbjaDgfCDg3WzW7ZsiZDYoeeM9diZVmmxW/i9f3yYzWBT7iIK
Gxkhh3Ovuru4BKo5pJydfZdD39LuvLjzZOjP33PU6u7i0ms2w5QrT+9uNoOd
3RKnpqaGh4eHhobiFtOUR3+ecSv310Z7NCx2C794mW7X+3Q12KC7uFr/CDmc
e9XdxSVQzSHl7Oy7HPqWdufFnSdDf/6eo1Z3F5desxmmXHl6d10NBsKV6rGx
MRttcnIybiVNefTnGbdyf63Ho8W+fv16UxCuWne9T1eDDbqLq/WPkMO5V91d
XALVHFLOzr7LoW9pd17ceTL05+85anV3cek1m2HKlad319VgZ/erI6xr3b59
e/QPDh16Tp/HzvSPD6bARMz2SomqwWbdRZc7R8jh3KvuLi6Bag4pZ2ff5dC3
tDsv7jwZ+vP3HLW6u7j0ms0w5crTu6saDISL1da7hs9iil5GUx79ecat3F/r
9GjhmwITMdsl66rBZt1FlztHyOHcq+4uLoFqDilnZ9/l0Le0Oy/uPBn68/cc
tbq7uPSazTDlytO7qxoMFBer165dOz4+Hr2Mpjz684xbub/W6dHCNwU9LllX
DTbrLrrcOUIO5151d3EJVHNIOTv7Loe+pd15cefJ0J+/56jV3cWl12yGKVee
3l3VYKDwuHr16qmpqehlNOXRn2fcyv21To8WvimI24ONuIsud46Qw7lX3V1c
AtUcUs7Ovsuhb2l3Xtx5MvTn7zlqdXdx6TWbYcqVp3dXNRgIL5AYGRkZHBz0
LKMpj/4841bur3V6NEyBiQgvk6h+t2qwWXdtjZDDuVfdXVwC1RxSzs6+y6Fv
aXde3Hky9OfvOWp1d3HpNZthypWnd1c1GCg8DgwMeNbQlEd/nnEr99f6PZqC
uD3YiLu2Rsjh3KvuLi6Bag4pZ2ff5dC3tDsv7jwZ+vP3HLW6u7j0ms0w5crT
u6saDBQenctoyqM/z7iV+2v9Hm2EuD3YiLu2Rsjh3KvuLi6Bag4pZ2ff5dC3
tDsv7jwZ+vP3HLW6u7j0ms0w5crTu6saDASPO3bsyMSjP8+4lftrG/FoIvrd
g025a2uEHM696u7iEqjmkHJ29l0OfUu78+LOk6E/f89Rq7uLS6/ZDFOuPL27
qsFA8Dg8PHz11Vd71tCUR3+ecSv31/o9moLwCf997cGm3LU1Qg7nXnV3cQlU
c0g5O/suh76l3Xlx58nQn7/nqNXdxaXXbIYpV57eXdVgIDeP/jzjVu6vVd+D
bY2Qw7lX3V1cAtUcUs7Ovsuhb2l3Xtx5MvTn7zlqdXdx6TWbYcqVp3dXNRjI
zaM/z7iV+2vV92BbI+Rw7lV3F5dANYeUs7Pvcuhb2p0Xd54M/fl7jlrdXVx6
zWaYcuXp3VUNBnLz6M8zbuX+WvU92NYIOZx71d3FJVDNIeXs7Lsc+pZ258Wd
J0N//p6jVncXl16zGaZceXp3VYOB3Dz684xbub9WfQ+2NUIO5151d3EJVHNI
OTv7Loe+pd15cefJ0J+/56jV3cWl12yGKVee3l3VYCA3j/4841bur1Xfg22N
kMO5V91dXALVHFLOzr7LoW9pd17ceTL05+85anV3cek1m2HKlad3VzUYaNbj
nklIQH0P7pmEBHCnSEgAd4qEBHCnSEgAd4qEBOg51QkJsAcVCQngTpGQAO4U
CQngTpGQAO4UCQkspJ6zrRFyqFXfg22NkEMt7nRrcadbizvdWtzp1tJz+kfI
oZY9qFuLO91a3OnW4k63Fne6tfSc/hFyqGUP6tbiTrcWd7q1uNOtxZ1uLT2n
f4QcatmDurW4063FnW4t7nRrcadbS8/pHyGHWvagbi3udGtxp1uLO91a3OnW
0nP6R8ihlj2oW4s73Vrc6dbiTrcWd7q19Jz+EXKoZQ/q1uJOtxZ3urW4063F
nW4tPad/hBxq2YO6tbjTrcWdbi3udGtxp1tLz+kfIYda9qBuLe50a3GnW4s7
3Vrc6dbSc/pHyKGWPahbizvdWtzp1uJOtxZ3urX0nP4RcqhlD+rW4k63Fne6
tbjTrcWdbi09p3+EHGrZg7q1uNOtxZ1uLe50a3GnW0vP6R8hh1r2oG4t7nRr
cadbizvdWtzp1tJz+kfIoZY9qFuLO91a3OnW4k63Fne6tfSc/hFyqGUP6tbi
TrcWd7q1uNOtxZ1uLT2nf4QcatmDurW4063FnW4t7nRrcadbS8/pHyGHWvag
bi3udGtxp1uLO91a3OnW0nP6R8ihlj2oW4s73Vrc6dbiTrcWd7q1C6nn3DMJ
CajvwT2TkADuFAkJ4E6RkADuFAkJ4E6RkAA9pzohAfagIiEB3CkSEsCdIiEB
3CkSEsCdIiGBhdRzLnLgGaGcZ9zK/bXqe7CtEfze/Y8ZdXdxCVRzSDk7+66p
fafrHXeeDP35e45a3V1ces1mmHLl6d1VDQZy8+jPM27l/lr1PdjWCDmce9Xd
xSVQzSHl7Oy7HPqWdufFnSdDf/6eo1Z3F5desxmmXHl6d1WDgdw8+vOMW7m/
Vn0PtjVCDudedXdxCVRzSDk7+y6HvqXdeXHnydCfv+eo1d3FpddshilXnt5d
1WAgN4/+PONW7q9V34NtjZDDuVfdXVwC1RxSzs6+y6FvaXde3Hky9OfvOWp1
d3HpNZthypWnd1c1GMjNoz/PuJX7a9X3YFsj5HDuVXcXl0A1h5Szs+9y6Fva
nRd3ngz9+XuOWt1dXHrNZphy5endVQ0GcvPozzNu5f5a9T3Y1gg5nHvV3cUl
UM0h5ezsuxz6lnbnxZ0nQ3/+nqNWdxeXXrMZplx5endVg4HcPPrzjFu5v1Z9
D7Y1Qg7nXnV3cQlUc0g5O/suh76l3Xlx58nQn7/nqNXdxaXXbIYpV57eXdVg
IDeP/jzjVu6vVd+DbY2Qw7lX3V1cAtUcUs7Ovsuhb2l3Xtx5MvTn7zlqdXdx
6TWbYcqVp3dXNRjIzaM/z7iV+2vV92BbI+Rw7lV3F5dANYeUs7Pvcuhb2p0X
d54M/fl7jlrdXVx6zWaYcuXp3VUNBnLz6M8zbuX+WvU92NYIOZx71d3FJVDN
IeXs7Lsc+pZ258WdJ0N//p6jVncXl16zGaZceXp3VYOB3Dz684xbub9WfQ+2
NUIO5151d3EJVHNIOTv7Loe+pd15cefJ0J+/56jV3cWl12yGKVee3l3VYCA3
j/4841bur1Xfg22NkMO5V91dXALVHFLOzr7LoW9pd17ceTL05+85anV3cek1
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
E9HvHsSdvxZ3urW4063FnW4t7nRr07jr3XMODw9fffXVnjXg0e/RFIRP+O9r
D+LOX4s73Vrc6dbiTrcWd7q1adzRc853LXtQtxZ3urW4063FnW4t7nRr6Tn9
I+RQyx7UrcWdbi3udGtxp1uLO91aek7/CDnUsgd1a3GnW4s73Vrc6dbiTreW
ntM/Qg617EHdWtzp1uJOtxZ3urW4062l5/SPkEMte1C3Fne6tbjTrcWdbi3u
dGsXUs+5ZxISUN+DeyYhAdwpEhLAnSIhAdwpEhLAnSIhAXpOdUIC7EFFQgK4
UyQkgDtFQgK4UyQkgDtFQgILqedc5MAzQjnPuJX7a9X3YFsj+L37HzPq7uIS
qOaQcnb2XVP7Ttc77jwZ+vP3HLW6u7j0ms0w5crTu6saDOTm0Z9n3Mr9tep7
sK0Rcjj3qruLS6CaQ8rZ2Xc59C3tzos7T4b+/D1Hre4uLr1mM0y58vTuqgYD
uXn05xm3cn+t+h5sa4Qczr3q7uISqOaQcnb2XQ59S7vz4s6ToT9/z1Gru4tL
r9kMU648vbuqwUBuHv15xq3cX6u+B9saIYdzr7q7uASqOaScnX2XQ9/S7ry4
82Toz99z1Oru4tJrNsOUK0/vrmowkJtHf55xK/fXqu/BtkbI4dyr7i4ugWoO
KWdn3+XQt7Q7L+48Gfrz9xy1uru49JrNMOXK07urGgzk5tGfZ9zK/bXqe7Ct
EXI496q7i0ugmkPK2dl3OfQt7c6LO0+G/vw9R63uLi69ZjNMufL07qoGA7l5
9OcZt3J/rfoebGuEHM696u7iEqjmkHJ29l0OfUu78+LOk6E/f89Rq7uLS6/Z
DFOuPL27qsFAbh79ecat3F+rvgfbGiGHc6+6u7gEqjmknJ19l0Pf0u68uPNk
6M/fc9Tq7uLSazbDlCtP765qMJCbR3+ecSv316rvwbZGyOHcq+4uLoFqDiln
Z9/l0Le0Oy/uPBn68/cctbq7uPSazTDlytO7qxoM5ObRn2fcyv216nuwrRFy
OPequ4tLoJpDytnZdzn0Le3OiztPhv78PUet7i4uvWYzTLny9O6qBgO5efTn
Gbdyf636HmxrhBzOveru4hKo5pBydvZdDn1Lu/PizpOhP3/PUau7i0uv2QxT
rjy9u6rBQG4e/XnGrdxfq74H2xohh3Ovuru4BKo5pJydfZdD39LuvLjzZOjP
33PU6u7i0ms2w5QrT++uajCQm0d/nnEr99eq78G2Rsjh3KvuLi6Bag4pZ2ff
5dC3tDsv7jwZ+vP3HLW6u7j0ms0w5crTu6saDOTm0Z9n3Mr9tep7sK0Rcjj3
qruLS6CaQ8rZ2Xc59C3tzos7T4b+/D1Hre4uLr1mM0y58vTuqgYDuXn05xm3
cn+t+h5sa4Qczr3q7uISqOaQcnb2XQ59S7vz4s6ToT9/z1Gru4tLr9kMU648
vbuqwUBuHv15xq3cX6u+B9saIYdzr7q7uASqOaScnX2XQ9/S7ry482Toz99z
1Oru4tJrNsOUK0/vrmowkJtHf55xK/fXqu/BtkbI4dyr7i4ugWoOKWdn3+XQ
t7Q7L+48Gfrz9xy1uru49JrNMOXK07urGgzk5tGfZ9zK/bXqe7CtEXI496q7
i0ugmkPK2dl3OfQt7c6LO0+G/vw9R63uLi69ZjNMufL07qoGA8163DMJCajv
wT2TkADuFAkJ4E6RkADuFAkJ4E6RkAA9pzohAfagIiEB3CkSEsCdIiEB3CkS
EsCdIiGBhdRztjVCDrXqe7CtEXKoxZ1uLe50a3GnW4s73Vp6Tv8IOdSyB3Vr
cadbizvdWtzp1uJOt5ae0z9CDrXsQd1a3OnW4k63Fne6tbjTraXn9I+QQy17
ULcWd7q1uNOtxZ1uLe50a+k5/SPkUMse1K3FnW4t7nRrcadbizvdWnpO/wg5
1LIHdWtxp1uLO91a3OnW4k63lp7TP0IOtexB3Vrc6dbiTrcWd7q1uNOtpef0
j5BDLXtQtxZ3urW4063FnW4t7nRr6Tn9I+RQyx7UrcWdbi3udGtxp1uLO91a
ek7/CDnUsgd1a3GnW4s73Vrc6dbiTreWntM/Qg617EHdWtzp1uJOtxZ3urW4
062l5/SPkEMte1C3Fne6tbjTrcWdbi3udGvpOf0j5FDLHtStxZ1uLe50a3Gn
W4s73Vp6Tv8IOdSyB3VrcadbizvdWtzp1uJOt5ae0z9CDrXsQd1a3OnW4k63
Fne6tbjTraXn9I+QQy17ULcWd7q1uNOtxZ1uLe50a+k5/SPkUMse1K3FnW4t
7nRrcadbizvdWnpO/wg51LIHdWtxp1uLO91a3OnW4k63diH1nHsmIQH1Pbhn
EhLAnSIhAdwpEhLAnSIhAdwpEhKg51QnJMAeVCQkgDtFQgK4UyQkgDtFQgK4
UyQksJB6zkUOPCOU84xbub9WfQ+2NYLfu/8xo+4uLoFqDilnZ981te90vePO
k6E/f89Rq7uLS6/ZDFOuPL27qsFAbh79ecat3F+rvgfbGiGHc6+6u7gEqjmk
nJ19l0Pf0u68uPNk6M/fc9Tq7uLSazbDlCtP765qMJCbR3+ecSv316rvwbZG
yOHcq+4uLoFqDilnZ9/l0Le0Oy/uPBn68/cctbq7uPSazTDlytO7qxoM5ObR
n2fcyv216nuwrRFyOPequ4tLoJpDytnZdzn0Le3OiztPhv78PUet7i4uvWYz
TLny9O6qBgO5efTnGbdyf636HmxrhBzOveru4hKo5pBydvZdDn1Lu/PizpOh
P3/PUau7i0uv2QxTrjy9u6rBQG4e/XnGrdxfq74H2xohh3Ovuru4BKo5pJyd
fZdD39LuvLjzZOjP33PU6u7i0ms2w5QrT++uajCQm0d/nnEr99eq78G2Rsjh
3KvuLi6Bag4pZ2ff5dC3tDsv7jwZ+vP3HLW6u7j0ms0w5crTu6saDOTm0Z9n
3Mr9tep7sK0Rcjj3qruLS6CaQ8rZ2Xc59C3tzos7T4b+/D1Hre4uLr1mM0y5
8vTuqgYDuXn05xm3cn+t+h5sa4Qczr3q7uISqOaQcnb2XQ59S7vz4s6ToT9/
z1Gru4tLr9kMU648vbuqwUBuHv15xq3cX6u+B9saIYdzr7q7uASqOaScnX2X
Q9/S7ry482Toz99z1Oru4tJrNsOUK0/vrmowkJtHf55xK/fXqu/BtkbI4dyr
7i4ugWoOKWdn3+XQt7Q7L+48Gfrz9xy1uru49JrNMOXK07urGgzk5tGfZ9zK
/bXqe7CtEXI496q7i0ugmkPK2dl3OfQt7c6LO0+G/vw9R63uLi69ZjNMufL0
7qoGA7l59OcZt3J/rfoebGuEHM696u7iEqjmkHJ29l0OfUu78+LOk6E/f89R
q7uLS6/ZDFOuPL27qsFAbh79ecat3F+rvgfbGiGHc6+6u7gEqjmknJ19l0Pf
0u68uPNk6M/fc9Tq7uLSazbDlCtP765qMFB4XL58uWcNTXn05xm3cn+t36Mp
iNuDjbhra4Qczr3q7uISqOaQcnb2XQ59S7vz4s6ToT9/z1Gru4tLr9kMU648
vbuqwUDwODIykolHf55xK/fXNuJxx44d/e7Bpty1NUIO5151d3EJVHNIOTv7
Loe+pd15cefJ0J+/56jV3cWl12yGKVee3l3VYKDwODAw4FlDUx79ecat3F/r
92gjmIiIPdiIu7ZGyOHcq+4uLoFqDilnZ9/l0Le0Oy/uPBn68/cctbq7uPSa
zTDlytO7qxoM5ObRn2fcyv21fo+mQPr86alt9zGj7i4ugWoOKWdn3+XQt7Q7
L+48Gfrz9xy1uru49JrNMOXK07urGgxYyc6dO0dHR6+55pqJiYnoNZyyBxMS
cHo0fYODgybCdNTfg7hzEhLAnSIhAdwpEhLAnSIhAdwpEhJI427OnnPVqlXD
w8PRy2g7yzYJCTg9jo2N2VaK24O4iyYkgDtFQgK4UyQkgDtFQgK4UyQkkMZd
755zfHx83bp1Gzdu9KzEf8FWGufhW/imwET0uwdx5wd3uuBOF9zpgjtd0rjr
0XPu2rVrYmJi8+bN1rt6VoJHT7mFbwpMhOmovwdx1wi40wV3uuBOF9zpksbd
bD1np/SxVwMDA2NjY9ErWbp06Yo9mNWrV0dHZz8y2Ag9PvCq020PdnDXELjT
BXe64E4X3OmSxt2cPacZXL9+vfOTryAOi93CNwVxexB3LYI7XXCnC+50wZ0u
9d316DmNXbt2TU5OWu+6cuXKwcHBeVsvdMECt9gtfFNgIma722wGcdciuNMF
d7rgThfc6dKXu949Z/Hq3M2bNy9btmzVqlXzs2SYiUVtgVvsPV6RG+jxilzc
tQLudMGdLrjTBXe69Ouud8/Z2X3VenR0dNOmTcuXL7/iiiu2bds2DwuH/8Pi
tZAtagvcYu9xpTow56sjcJcM3OmCO11wpwvudIlzN2fP2SmptFZ2cHDwkksu
sYnWrFkT/rBmowexh2IxWpgWqQVr8a5cudKiriOx03MPdnA3/+BOF9zpgjtd
cKeL312dnrMz/WKJcOF6eHh4aGjIJrIZL7744gsvvHDJkiUXXHDB+dMshtqE
xCw6C9BitDAtUgvW4rWQw2XqHi+NmOERdynBnS640wV3uuBOl2bd1ew5O7tf
LzExMTE2NmYTbdmyZcOGDevWrVszzerVq1dBn1hoIT2L0cK0SC1Yi9dC7v26
iL72IO7mA9zpgjtdcKcL7nRp0F39njOwc5qpqSmby/pbm3RkNzugT4roLEYL
0yK1YEPC9Y3UN4i7BsGdLrjTBXe64E6XBt3123MGwuVraJw6F6i7esRd6+BO
F9zpgjtdcKdLtLu4nhPyAYO64E4X3OmCO11wpws958IAg7rgThfc6YI7XXCn
Cz3nwgCDuuBOF9zpgjtdcKcLPefCAIO64E4X3OmCO11wpws958IAg7rgThfc
6YI7XXCnCz3nwgCDuuBOF9zpgjtdcKfLIgAAAAAAAAAAAIAFRNvXXCEeDOqC
O11wpwvudMGdLvScCwMM6oI7XXCnC+50wZ0u9JwLAwzqgjtdcKcL7nTBnS70
nAsDDOqCO11wpwvudMGdLvScCwMM6oI7XXCnC+50wZ0u9JwLAwzqgjtdcKcL
7nTBnS70nAsDDOqCO11wpwvudMGdLvScCwMM6oI7XXCnC+50wZ0unp7zWpg3
4jziLgdwpwvudMGdLrjTJc5dtMFdu9kJboowI2zWN4i7+QB3uuBOF9zpgjtd
/O76NVi4m5ycnJhmfDdj3ThlD6ZrIGX+v/bOrifOI+ui+enz3zyRomiUi1xE
uUhsTIyN8VdiDBhjv/2WqDGypnDTnF2cOhvWvkoy3lX1rOXzqGi1mCt0nWRD
euV0d5u7GMTdbYM73+DON7jzDe58k+luxzvnlcSLi4u278nJyd9///369euj
o6PDr3nx4sXzIatZrsx/LvPo0aMRS8vhN2kY37x505A2sA1vg7y7yhsN4i4Q
3PkGd77BnW9w55tMd7v/1NCute1+e3x83HZsBt+/f9/+tf3H7d3+RDce5o5W
qNB98uTJjX++/dRwenrakDawDW+D3NnuonK7QdwpXdz5dnHn28Wdbxd3vt0c
d7v81NA/oG532na5ffXqVdti5wfC404ev03D2yA31A14//h6u8otBnEndnHn
28Wdbxd3vl3c+XZz3O34U0Nb881lbnWkDR5v77Gn0+4qt/8E8T2DuNO7uPPt
4s63izvfLu58uznubrxztrtru82+e/cuIHGDx6jHzaXKhr3B3/7jw5YZxJ3Y
xZ1vF3e+Xdz5dnHn281xd+Mn1RcXF8fHx0dHR7HD4DHssaVhb/CvvqZ77Z+5
1iDucIe72CIb3K3u4s63izvfbo677XfOz58/n52dtdU+ffoUOwkeFY8N+8uX
L5uC/qn1tX/mezOIO72LO98u7ny7uPPt4s63m+Nu+7cj2q31/fv34R8cNnjU
PG4uf3xoCpqI731TYjSIO9zhDne+Xdz5dnHn281xt/3bEe3u2n8XU/gYeBQ9
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
8+3izrfLnVNfoUKXGfTt4s63izvfLu58u7jz7XLn1Feo0GUGfbu48+3izreL
O98u7ny73Dn1FSp0mUHfLu58u7jz7eLOt4s73y53Tn2FCl1m0LeLO98u7ny7
uPPt4s63y51TX6FClxn07eLOt4s73y7ufLu48+0WuXM+fvxYOQMedY9NQWwG
cSd2cefbxZ1vF3e+Xdz5dnPcbb9znpyc4FHsTvH44cOH284g7vQu7ny7uPPt
4s63izvfbo67G++ce3t7yhnwqHtsKzQRgRnEndjFnW8Xd75d3Pl2cefbzXHH
nfOuu7rHpoAZXNLFnW8Xd75d3Pl2cefbzXG35c75+fPn09PTv/766/z8PHyG
fz3gdAKix6Zvf3+/iWg6dp9B3InpBHDnmE4Ad47pBHDnmE4Ad47pBHLc3Xjn
fPbs2fHxcfgYq1muTCcgejw7O2ujFJtB3IXTCeDOMZ0A7hzTCeDOMZ0A7hzT
CeS4237n/Pjx4+Hh4evXr5WT6B/YWkd8/Aa/KWgibjuDuNODO9/gzje48w3u
fJPjbsud88uXL+fn52/fvm13V+UkeFTqDX5T0EQ0HbvPIO6mBHe+wZ1vcOcb
3Pkmx9337pybb37t1d7e3tnZWfgkv/3225MHnIODgzC69iNDW2HLL7zaXDeD
G9xNCu58gzvf4M43uPNNjrsb75zN4MuXL8XffEViadgb/KYgNoO4Wxjc+QZ3
vsGdb3Dnm93dbblztnz58uXTp0/t7vr06dP9/f07Oy+5Jg14w97gNwVNxPf+
2PcM4m5hcOcb3PkGd77BnW9u5W77nfPq27lv3779448/nj17djdHJv+bhroB
b9i3fCO3Z8s3cnG3JLjzDe58gzvf4M43t3W3/c65+fqp9enp6Zs3bx4/fvz7
77//888/d3Bw8t80vA1yQ92AN+xbPqnuufHbEbhLC+58gzvf4M43uPNNzN2N
d87NNyrbVXZ/f//XX39tGz1//rz/H2tOfYgHmoaxwWxIG9iG9+nTpw31LhI3
W2dwg7u7D+58gzvf4M43uPON7m6XO+fm8ssS/YPr4+Pjo6OjtlHb8Zdffvn5
559/+umnH3/88d+XeUR2TifW0DWADWOD2ZA2sA1vg9w/pt7y1Yj/8Yi7zODO
N7jzDe58gzvfzHW3451z8/X7Eufn52dnZ22jd+/evXr16vDw8PllDg4OnpFb
pkHr9BrGBrMhbWAb3gZ5+/cibjWDuLuL4M43uPMN7nyDO99MdLf7nbPn82Uu
Li7aXu1+2zY9+ZoP5Ja5QtcwNpgNaQPbCe9uZHeDuJsY3PkGd77BnW9w55uJ
7m575+zpH1+T6dnlA+prPeJueXDnG9z5Bne+wZ1vwu5id05SJxj0De58gzvf
4M43uPMNd877EQz6Bne+wZ1vcOcb3PmGO+f9CAZ9gzvf4M43uPMN7nzDnfN+
BIO+wZ1vcOcb3PkGd77hznk/gkHf4M43uPMN7nyDO99w57wfwaBvcOcb3PkG
d77BnW9+IIQQQgghhBBCCCGEkHuU1Z+5kngw6Bvc+QZ3vsGdb3DnG+6c9yMY
9A3ufIM73+DON7jzDXfO+xEM+gZ3vsGdb3DnG9z5hjvn/QgGfYM73+DON7jz
De58w53zfgSDvsGdb3DnG9z5Bne+4c55P4JB3+DON7jzDe58gzvfcOe8H8Gg
b3DnG9z5Bne+wZ1vuHPej2DQN7jzDe58gzvf4M43yp3z/8idJeYRdxWCO9/g
zje48w3ufBNzFzb45Ws+EzlXMAM2dzeIu7sI7nyDO9/gzje4843u7rYGr9x9
+vTp/DIfv+bsuvzrAedaIN/mCl0n2ZBeOd3d5i4GcXfb4M43uPMN7nyDO99k
utvxznkl8eLiou17cnLy999/v379+ujo6PBrXrx48XzIapYr85/LPHr0aMTS
cvhNGsY3b940pA1sw9sg767yRoO4CwR3vsGdb3DnG9z5JtPd7j81tGttu98e
Hx+3HZvB9+/ft39t/3F7tz/RD0KUFXr3RhRbTq53nzx5cuOfbz81nJ6eNqQN
bMPbIHe2u6jcblB3d+Ph72gF3bv+d8bdXYzAyOG2qTCz7u5uPPyNK/h6x53C
UOcfO3P/Z3d3MXpzGca6+plz3G03uLmU2D+gbnfadrl99epV22JnGNw5d/L4
bRreBrmhbsD7x9fbVW4xOMXdrQ4/cYUK7153dzECI4fbpsLMuru71eGvXcHX
O+4Uhjr/2Jn7P7u7i9GbyzDW1c+c426Lwc03PzW0Nd9c5lZH2nDnvL3Hnk67
q9z+E8T3DM5yd9vWrBUqvHvd3cUIjBwyd2fuKtxb1u6LO4Whzl95and3MXpz
GWaePN/d9wz29B8c2m323bt3AYkb7pxRj5tLlQ17g7/9x4fvGZzlLlCcskKF
d6+7uxiBkUPm7sxdhXvL2n1xpzDU+StP7e4uRm8uw8yT57v7nsHNV4kXFxfH
x8dHR0exw8zyqPOMnVzvhj22NOwN/tXXdK/9M9canOgu1tVXqPDudXcXIzBy
yNyduatwb1m7L+4Uhjp/5and3cXozWWYefJ8d9ca7OmfVJ+dnbXVPn36FDvJ
LI86z9jJ9a7isWF/+fJlU9A/tb72z1xrcKK7WFdfocK7191djMDIIXN35q7C
vWXtvrhTGOr8lad2dxejN5dh5snz3V1rcPP12xHt1vr+/fvwDw4b7pyax83l
jw9NQRPxvW9KjAbnugvXxRUqvHvd3cUIjBwyd2fuKtxb1u6LO4Whzl95and3
MXpzGWaePN/daLCnf1jd7q79dzGFjzHLo84zdnK9K3ps8JuCJuJ7H1mPBue6
C9fFFSq8e93dxQiMHDJ3Z+4q3FvW7os7haHOX3lqd3cxenMZZp48391osOfq
w+oXL158/PgxfIxZHnWesZPrXdFjg98UbPnIejQ41124Lq5Q4d3r7i5GYOSQ
uTtzV+HesnZf3CkMdf7KU7u7i9GbyzDz5PnuRoM9Vx4PDg4uLi7Cx5jlUecZ
O7neFT02+E1BbAanuAvXxRUqvHvd3cUIjBwyd2fuKtxb1u6LO4Whzl95and3
MXpzGWaePN/daLCnf0Hi5ORkf39fOcYsjzrP2Mn1ruixpSloIvrXJMb/dTQ4
192qFSq8e93dxQiMHDJ3Z+4q3FvW7os7haHOX3lqd3cxenMZZp48391osOfK
497ennKGWR51nrGT613dY1MQm8Ep7latUOHd6+4uRmDkkLk7c1fh3rJ2X9wp
DHX+ylO7u4vRm8sw8+T57kaDPVcexWPM8qjzjJ1c7+oe2wqxGZzibtUKFd69
7u5iBEYOmbszdxXuLWv3xZ3CUOevPLW7uxi9uQwzT57vbjTY0z1++PChiEed
Z+zkeneKxybitjM4y92qFSq8e93dxQiMHDJ3Z+4q3FvW7os7haHOX3lqd3cx
enMZZp48391osKd7PD4+/vPPP5UzzPKo84ydXO/qHpuC/hv+bzWDs9ytWqHC
u9fdXYzAyCFzd+auwr1l7b64Uxjq/JWndncXozeXYebJ892NBnuqedR5xk6u
d91ncNUKFd697u5iBEYOmbszdxXuLWv3xZ3CUOevPLW7uxi9uQwzT57vbjTY
U82jzjN2cr3rPoOrVqjw7nV3FyMwcsjcnbmrcG9Zuy/uFIY6f+Wp3d3F6M1l
mHnyfHejwZ5qHnWesZPrXfcZXLVChXevu7sYgZFD5u7MXYV7y9p9cacw1Pkr
T+3uLkZvLsPMk+e7Gw32VPOo84ydXO+6z+CqFSq8e93dxQiMHDJ3Z+4q3FvW
7os7haHOX3lqd3cxenMZZp48391osKeaR51n7OR6130GV61Q4d3r7i5GYOSQ
uTtzV+HesnZf3CkMdf7KU7u7i9GbyzDz5PnuRoM9cz0+zHQC7jP4MNMJ4M4x
nQDuHNMJ4M4xnQDuHNMJcOd0TyfADDqmE8CdYzoB3DmmE8CdYzoB3DmmE7hP
d85VK1Tous/gqhUqdHHn28Wdbxd3vl3c+Xa5c+orVOgyg75d3Pl2cefbxZ1v
F3e+Xe6c+goVusygbxd3vl3c+XZx59vFnW+XO6e+QoUuM+jbxZ1vF3e+Xdz5
dnHn2+XOqa9QocsM+nZx59vFnW8Xd75d3Pl2uXPqK1ToMoO+Xdz5dnHn28Wd
bxd3vl3unPoKFbrMoG8Xd75d3Pl2cefbxZ1vlzunvkKFLjPo28Wdbxd3vl3c
+XZx59vlzqmvUKHLDPp2cefbxZ1vF3e+Xdz5drlz6itU6DKDvl3c+XZx59vF
nW8Xd75d7pz6ChW6zKBvF3e+Xdz5dnHn28Wdb5c7p75ChS4z6NvFnW8Xd75d
3Pl2cefb5c6pr1Chywz6dnHn28Wdbxd3vl3c+Xa5c+orVOgyg75d3Pl2cefb
xZ1vF3e+Xe6c+goVusygbxd3vl3c+XZx59vFnW+XO6e+QoUuM+jbxZ1vF3e+
Xdz5dnHn2+XOqa9QocsM+nZx59vFnW8Xd75d3Pl2uXPqK1ToMoO+Xdz5dnHn
28Wdbxd3vt37dOd8mOkE3GfwYaYTwJ1jOgHcOaYTwJ1jOgHcOaYT4M7pnk6A
GXRMJ4A7x3QCuHNMJ4A7x3QCuHNMJ3Cf7pyrVqjQdZ/BVStU6OLOt4s73y7u
fLu48+1y59RXqNBlBn27uPPt4s63izvfLu58u9w59RUqdJlB3y7ufLu48+3i
zreLO98ud059hQpdZtC3izvfLu58u7jz7eLOt8udU1+hQpcZ9O3izreLO98u
7ny7uPPtcufUV6jQZQZ9u7jz7eLOt4s73y7ufLvcOfUVKnSZQd8u7ny7uPPt
4s63izvfLndOfYUKXWbQt4s73y7ufLu48+3izrfLnVNfoUKXGfTt4s63izvf
Lu58u7jz7XLn1Feo0GUGfbu48+3izreLO98u7ny73Dn1FSp0mUHfLu58u7jz
7eLOt4s73y53Tn2FCl1m0LeLO98u7ny7uPPt4s63y51TX6FClxn07eLOt4s7
3y7ufLu48+1y59RXqNBlBn27uPPt4s63izvfLu58u9w59RUqdJlB3y7ufLu4
8+3izreLO98ud059hQpdZtC3izvfLu58u7jz7eLOt8udU1+hQpcZ9O3izreL
O98u7ny7uPPtcufUV6jQZQZ9u7jz7eLOt4s73y7ufLv36c75MNMJuM/gw0wn
gDvHdAK4c0wngDvHdAK4c0wnwJ3TPZ0AM+iYTgB3jukEcOeYTgB3jukEcOeY
TuA+3Tl/EKKs8C3P2Mn1rvsMrlpB967/nXF3FyMwcsjcnbmbNXe+3nGnMNT5
K0/t7i5Gby7DzJPnuxsN9lTzqPOMnVzvus/gqhUqvHvd3cUIjBwyd2fuKtxb
1u6LO4Whzl95and3MXpzGWaePN/daLCnmkedZ+zketd9BletUOHd6+4uRmDk
kLk7c1fh3rJ2X9wpDHX+ylO7u4vRm8sw8+T57kaDPdU86jxjJ9e77jO4aoUK
7153dzECI4fM3Zm7CveWtfviTmGo81ee2t1djN5chpknz3c3Guyp5lHnGTu5
3nWfwVUrVHj3uruLERg5ZO7O3FW4t6zdF3cKQ52/8tTu7mL05jLMPHm+u9Fg
TzWPOs/YyfWu+wyuWqHCu9fdXYzAyCFzd+auwr1l7b64Uxjq/JWndncXozeX
YebJ892NBnuqedR5xk6ud91ncNUKFd697u5iBEYOmbszdxXuLWv3xZ3CUOev
PLW7uxi9uQwzT57vbjTYU82jzjN2cr3rPoOrVqjw7nV3FyMwcsjcnbmrcG9Z
uy/uFIY6f+Wp3d3F6M1lmHnyfHejwZ5qHnWesZPrXfcZXLVChXevu7sYgZFD
5u7MXYV7y9p9cacw1PkrT+3uLkZvLsPMk+e7Gw32VPOo84ydXO+6z+CqFSq8
e93dxQiMHDJ3Z+4q3FvW7os7haHOX3lqd3cxenMZZp48391osKeaR51n7OR6
130GV61Q4d3r7i5GYOSQuTtzV+HesnZf3CkMdf7KU7u7i9GbyzDz5PnuRoM9
1TzqPGMn17vuM7hqhQrvXnd3MQIjh8zdmbsK95a1++JOYajzV57a3V2M3lyG
mSfPdzca7KnmUecZO7nedZ/BVStUePe6u4sRGDlk7s7cVbi3rN0XdwpDnb/y
1O7uYvTmMsw8eb670WBPNY86z9jJ9a77DK5aocK7191djMDIIXN35q7CvWXt
vrhTGOr8lad2dxejN5dh5snz3Y0Ge648Pn78WDnDLI86z9jJ9a7usSmIzeAU
d6tWqPDudXcXIzByyNyduatwb1m7L+4Uhjp/5and3cXozWWYefJ8d6PBnu7x
5OSkiEedZ+zkeneKxw8fPtx2Bme5W7VChXevu7sYgZFD5u7MXYV7y9p9cacw
1PkrT+3uLkZvLsPMk+e7Gw32XHnc29tTzjDLo84zdnK9q3tsKzQRgRmc4m7V
ChXeve7uYgRGDpm7M3cV7i1r98WdwlDnrzy1u7sYvbkMM0+e72402FPNo84z
dnK9q3tsCqzfn0p37d8Zd3cxAiOHzN2Zuwr3lrX74k5hqPNXntrdXYzeXIaZ
J893NxrsaZXPnz+fnp7+9ddf5+fn4TP86wGnExA9Nn37+/tNRNOx+wziTkwn
gDvHdAK4c0wngDvHdAK4c0wnkOPuxjvns2fPjo+Pw8dYzXJlOgHR49nZWRul
2AziLpxOAHeO6QRw55hOAHeO6QRw55hOIMfd9jvnx48fDw8PX79+rZxE/8DW
OuLjN/hNQRNx2xnEnR7c+QZ3vsGdb3Dnmxx3W+6cX758OT8/f/v2bbu7KifB
o1Jv8JuCJqLp2H0GcTcluPMN7nyDO9/gzjc57r5359x882uv9vb2zs7Owif5
7bffnjzgHBwchNG1HxnaClt+4dXmuhnc4G5ScOcb3PkGd77BnW9y3N1452wG
X758Kf7mKxJLw97gNwWxGcTdwuDON7jzDe58gzvf7O5uy52z5cuXL58+fWp3
16dPn+7v79/Zeck1acAb9ga/KWgivvfHvmcQdwuDO9/gzje48w3ufHMrd9vv
nFffzn379u0ff/zx7Nmzuzky+d801A14w77lG7k9W76Ri7slwZ1vcOcb3PkG
d765rbvtd87N10+tT09P37x58/jx499///2ff/65g4OT/6bhbZAb6ga8Yd/y
SXXPjd+OwF1acOcb3PkGd77BnW9i7m68c26+Udmusvv7+7/++mvb6Pnz5/3/
WHPqQzzQNIwNZkPawDa8T58+bah3kbjZOoMb3N19cOcb3PkGd77BnW90d7vc
OTeXX5boH1wfHx8fHR21jdqOv/zyy88///zTTz/9+OOP/77MI7JzOrGGrgFs
GBvMhrSBbXgb5P4x9ZavRvyPR9xlBne+wZ1vcOcb3Plmrrsd75ybr9+XOD8/
Pzs7axu9e/fu1atXh4eHzy9zcHDwjNwyDVqn1zA2mA1pA9vwNsjbvxdxqxnE
3V0Ed77BnW9w5xvc+Waiu93vnD2fL3NxcdH2avfbtunJ13wgt8wVuoaxwWxI
G9hOeHcjuxvE3cTgzje48w3ufIM730x0d9s7Z0//+JpMzy4fUF/rEXfLgzvf
4M43uPMN7nwTdhe7c5I6waBvcOcb3PkGd77BnW+4c96PYNA3uPMN7nyDO9/g
zjfcOe9HMOgb3PkGd77BnW9w5xvunPcjGPQN7nyDO9/gzje48w13zvsRDPoG
d77BnW9w5xvc+YY75/0IBn2DO9/gzje48w3ufPMDIYQQQgghhBBCCCGE3Ius
/rSVEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh5KHn/wHQSEh3
    "], {{0, 407.}, {446., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{867.125, Automatic},
  ImageSizeRaw->{446., 407.},
  PlotRange->{{0, 446.}, {0, 407.}}]], "Output",
 CellChangeTimes->{3.958974153805546*^9, 3.959042718440847*^9, 
  3.959042784931229*^9, 3.959050322590982*^9, 3.959051219284906*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"4e70a378-0199-4aa8-b6f4-e074a18c9f6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permName", "[", 
    RowBox[{"Cycles", "[", 
     RowBox[{"{", "}"}], "]"}], "]"}], ":=", "\"\<Identity\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permName", "[", 
    RowBox[{"Cycles", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], "]"}], ":=", 
   "\"\<(1,2)(3,4)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permName", "[", 
    RowBox[{"Cycles", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], "]"}], ":=", 
   "\"\<(1,3)(2,4)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permName", "[", 
    RowBox[{"Cycles", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}], "]"}], ":=", 
   "\"\<(1,4)(2,3)\>\""}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"view", "=", "\"\<grid\>\""}], ",", 
     RowBox[{"selected", "=", "None"}], ",", "orbit", ",", "edges", ",", 
     "coords"}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"coords", "[", "orbit_", "]"}], ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"orbit", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "Pi", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "/", 
             RowBox[{"Length", "[", "orbit", "]"}]}]}], "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "Pi", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "/", 
             RowBox[{"Length", "[", "orbit", "]"}]}]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "orbit", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"Dynamic", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"view", "===", "\"\<grid\>\""}], ",", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"Partition", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"s", "=", "state"}], "}"}], ",", 
                RowBox[{"ClickPane", "[", 
                 RowBox[{
                  RowBox[{"ArrayPlot", "[", 
                   RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"s", ",", "2"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "80"}], ",", 
                    RowBox[{"PlotLabel", "->", "None"}], ",", 
                    RowBox[{"Frame", "->", "False"}], ",", 
                    RowBox[{"FrameTicks", "->", "None"}]}], "]"}], ",", 
                  RowBox[{"Function", "[", 
                   RowBox[{"pt", ",", 
                    RowBox[{
                    RowBox[{"selected", "=", "s"}], ";", 
                    RowBox[{"view", "=", "\"\<orbit\>\""}], ";"}]}], "]"}]}], 
                 "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"state", ",", "SpekkensStates"}], "}"}]}], "]"}], ",", 
            "3", ",", "3", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}], ",", 
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"Background", "->", "LightGray"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"orbit", "=", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Permute", "[", 
              RowBox[{"selected", ",", "#"}], "]"}], "&"}], "/@", 
            "SpekkensPermutations"}], "]"}]}], ";", "\n", 
         RowBox[{"edges", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Tooltip", "[", 
               RowBox[{
                RowBox[{"DirectedEdge", "[", 
                 RowBox[{"s", ",", 
                  RowBox[{"Permute", "[", 
                   RowBox[{"s", ",", "g"}], "]"}]}], "]"}], ",", 
                RowBox[{"permName", "[", "g", "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"s", ",", "orbit"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"g", ",", "SpekkensPermutations"}], "}"}]}], "]"}], 
            ",", "1"}], "]"}]}], ";", "\n", 
         RowBox[{"Column", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Orbit of: \>\"", ",", "14", ",", "Bold"}], "]"}],
                ",", 
               RowBox[{"ArrayPlot", "[", 
                RowBox[{
                 RowBox[{"Partition", "[", 
                  RowBox[{"selected", ",", "2"}], "]"}], ",", 
                 RowBox[{"Mesh", "->", "True"}], ",", 
                 RowBox[{"ImageSize", "->", "50"}]}], "]"}], ",", 
               RowBox[{"Spacer", "[", "20", "]"}], ",", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\<Back to States\>\"", ",", 
                 RowBox[{
                  RowBox[{"view", "=", "\"\<grid\>\""}], ";", 
                  RowBox[{"selected", "=", "None"}]}], ",", 
                 RowBox[{"ImageSize", "->", "Medium"}]}], "]"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"Graph", "[", 
             RowBox[{"orbit", ",", "edges", ",", 
              RowBox[{"VertexShapeFunction", "->", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Inset", "[", 
                  RowBox[{
                   RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"#1", ",", "2"}], "]"}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "50"}], ",", 
                    RowBox[{"Background", "->", 
                    RowBox[{"Lighter", "[", 
                    RowBox[{"Gray", ",", "0.95"}], "]"}]}]}], "]"}], ",", 
                   "#2", ",", 
                   RowBox[{"Background", "->", "None"}]}], "]"}], "&"}], 
                ")"}]}], ",", 
              RowBox[{"VertexSize", "->", "0.7"}], ",", 
              RowBox[{"EdgeStyle", "->", 
               RowBox[{"{", 
                RowBox[{"Black", ",", 
                 RowBox[{"Arrowheads", "[", "0.02", "]"}]}], "}"}]}], ",", 
              RowBox[{"Multiedges", "->", "True"}], ",", 
              RowBox[{"VertexCoordinates", "->", 
               RowBox[{"coords", "[", "orbit", "]"}]}], ",", 
              RowBox[{"ImageSize", "->", "500"}], ",", 
              RowBox[{"GraphLayout", "->", "\"\<CircularEmbedding\>\""}], ",", 
              RowBox[{"PlotLabel", "->", 
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<Click edges to see permutations\>\"", ",", "Italic"}], 
                "]"}]}], ",", 
              RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}]}], "]"}]}],
            "}"}], "]"}]}]}], "]"}], ",", 
      RowBox[{"Alignment", "->", "Center"}], ",", 
      RowBox[{"Background", "->", "White"}]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958974254093416*^9, 3.958974254095359*^9}, {
  3.959050332350218*^9, 3.9590503333324623`*^9}},
 CellLabel->
  "In[3237]:=",ExpressionUUID->"8b710cb3-b0f6-43d4-9e5d-7910755b4de2"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`view$$ = "grid", $CellContext`selected$$ = 
  None, $CellContext`orbit$$, $CellContext`edges$$, $CellContext`coords$$}, 
  DynamicBox[ToBoxes[
    If[$CellContext`view$$ === "grid", 
     Grid[
      Partition[
       Table[
        With[{$CellContext`s$ = $CellContext`state}, 
         ClickPane[
          ArrayPlot[
           Partition[$CellContext`s$, 2], Mesh -> True, ImageSize -> 80, 
           PlotLabel -> None, Frame -> False, FrameTicks -> None], 
          
          Function[$CellContext`pt$, $CellContext`selected$$ = \
$CellContext`s$; $CellContext`view$$ = "orbit"; 
           Null]]], {$CellContext`state, $CellContext`SpekkensStates}], 3, 
       3, {1, 1}, {}], Frame -> True, Background -> 
      LightGray], $CellContext`orbit$$ = DeleteDuplicates[
        Map[
        Permute[$CellContext`selected$$, #]& , \
$CellContext`SpekkensPermutations]]; $CellContext`edges$$ = Flatten[
        Table[
         Tooltip[
          DirectedEdge[$CellContext`s, 
           Permute[$CellContext`s, $CellContext`g]], 
          $CellContext`permName[$CellContext`g]], {$CellContext`s, \
$CellContext`orbit$$}, {$CellContext`g, $CellContext`SpekkensPermutations}], 
        1]; Column[{
        Row[{
          Style["Orbit of: ", 14, Bold], 
          ArrayPlot[
           Partition[$CellContext`selected$$, 2], Mesh -> True, ImageSize -> 
           50], 
          Spacer[20], 
          Button[
          "Back to States", $CellContext`view$$ = 
            "grid"; $CellContext`selected$$ = None, ImageSize -> Medium]}], 
        Graph[$CellContext`orbit$$, $CellContext`edges$$, 
         VertexShapeFunction -> (Inset[
           ArrayPlot[
            Partition[#, 2], Mesh -> True, ImageSize -> 50, Background -> 
            Lighter[Gray, 0.95]], #2, Background -> None]& ), VertexSize -> 
         0.7, EdgeStyle -> {Black, 
           Arrowheads[0.02]}, $CellContext`Multiedges -> True, 
         VertexCoordinates -> $CellContext`coords$$[$CellContext`orbit$$], 
         ImageSize -> 500, GraphLayout -> "CircularEmbedding", PlotLabel -> 
         Style["Click edges to see permutations", Italic], PerformanceGoal -> 
         "Quality"]}]], StandardForm],
   Alignment->Center,
   Background->GrayLevel[1],
   ImageSizeCache->{162., {52.089874267578125`, 56.910125732421875`}}],
  DynamicModuleValues:>{{DownValues[$CellContext`coords$$] = {HoldPattern[
         $CellContext`coords$$[
          Pattern[$CellContext`orbit, 
           Blank[]]]] :> Table[Part[$CellContext`orbit, $CellContext`i] -> {
           Cos[2 Pi (($CellContext`i - 1)/Length[$CellContext`orbit])], 
           Sin[
           2 Pi (($CellContext`i - 1)/
             Length[$CellContext`orbit])]}, {$CellContext`i, 
          Length[$CellContext`orbit]}]}}}]], "Output",
 CellChangeTimes->{3.9589742543438263`*^9, 3.959042720122767*^9, 
  3.959042785070291*^9, 3.959050333621479*^9},
 CellLabel->
  "Out[3243]=",ExpressionUUID->"d800e646-f079-40ce-82a6-72718be3c398"]
}, Open  ]],

Cell["\<\
The first image (`image_848cf2.png`) displays a grid of 36 unique $4 \\times \
4$ binary patterns, which represent composite states in the Spekkens Toy \
Model. Each pattern is a square composed of 16 smaller black or white \
squares. The title \[OpenCurlyDoubleQuote]Spekkens Toy Model: State \
Transition Explorer\[CloseCurlyDoubleQuote] and a \
\[OpenCurlyDoubleQuote]Reset Selection\[CloseCurlyDoubleQuote] button \
indicate an interactive tool. The arrangement of the states in a large grid \
suggests that the user can select any state to explore its transformation \
properties.

The accompanying Mathematica code for this part defines the `SpekkensStates` \
and `SpekkensPermutations`. The `baseStates` are generated by taking the \
Kronecker product of all possible pairs of `SpekkensStates`, resulting in the \
36 unique $4 \\times 4$ composite states seen in the image. The \
`DynamicModule` handles the interaction: initially, it displays the grid of \
all `baseStates`. When a user clicks on a state (`selected = s`), the display \
changes to a \[OpenCurlyDoubleQuote]Selected State & Permutations\
\[CloseCurlyDoubleQuote] view. This view shows the `selected` state \
prominently at the center of a graph. This graph dynamically shows the \
`selected` state as the root, with arrows pointing to all other unique states \
reachable from it by applying a single `SpekkensPermutation`. The layout uses \
a \[OpenCurlyDoubleQuote]RadialEmbedding\[CloseCurlyDoubleQuote] centered on \
the selected state, visually emphasizing its immediate \
\[OpenCurlyDoubleQuote]neighborhood\[CloseCurlyDoubleQuote] under the defined \
transformations. Clicking anywhere on this detailed graph reverts the view to \
the initial grid of all states.

The second image (`image_848d10.png`) shows a smaller grid of six $2 \\times \
2$ binary patterns, which are the fundamental `SpekkensStates`. The overall \
context suggests this is an initial selection screen for a deeper \
exploration. The associated code for this second part implements an \
\[OpenCurlyDoubleQuote]Orbit Explorer.\[CloseCurlyDoubleQuote] It first \
displays these six fundamental `SpekkensStates` in a grid. When a user clicks \
on one of these states (`selected = s`), the view switches to an \
\[OpenCurlyDoubleQuote]orbit\[CloseCurlyDoubleQuote] visualization. This \
orbit is a graph that includes all unique states reachable from the \
`selected` state by applying any of the `SpekkensPermutations`. The graph \
displays these states in a circular layout, with directed edges labeled by \
the specific permutation that causes the transition. This allows users to \
trace the entire set of transformations and interconnections for any single \
fundamental state within the Spekkens model.\
\>", "Text",
 CellChangeTimes->{{3.959050133546049*^9, 3.959050153204269*^9}, {
  3.95905018468279*^9, 3.9590501917338057`*^9}, {3.9590502261453867`*^9, 
  3.9590502305900993`*^9}, {3.959050275392338*^9, 3.9590502803162327`*^9}, {
  3.959050317387114*^9, 
  3.95905034959617*^9}},ExpressionUUID->"3da49c64-2541-40d5-aeea-\
ef907ca45cb1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"s", "->", 
         RowBox[{"Permute", "[", 
          RowBox[{"s", ",", "p"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "SpekkensStates"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "SpekkensPermutations"}], "}"}]}], "]"}], ",", 
      "1"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"edges", ",", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"Equal", "@@", "#"}]}], "&"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"selection", "=", "None"}], "}"}], ",", 
   RowBox[{"Column", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{"edges", ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"(", 
          RowBox[{"v_", ":>", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"EventHandler", "[", 
              RowBox[{
               RowBox[{"Graphics", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
                   RowBox[{"FaceForm", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"v", "===", "selection"}], ",", "LightYellow", 
                    ",", "LightBlue"}], "]"}], "]"}], ",", 
                   RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
                   RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"v", ",", "2"}], "]"}], ",", 
                    RowBox[{"ColorRules", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "->", "Black"}], ",", 
                    RowBox[{"0", "->", "White"}]}], "}"}]}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "30"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "Center"}], "]"}]}], 
                  "}"}], ",", 
                 RowBox[{"ImageSize", "->", "40"}]}], "]"}], ",", 
               RowBox[{"\"\<MouseClicked\>\"", ":>", 
                RowBox[{"(", 
                 RowBox[{"selection", "=", "v"}], ")"}]}]}], "]"}], ",", 
             "Center"}], "]"}]}], ")"}]}], ",", 
        RowBox[{"VertexSize", "->", "0.9"}], ",", 
        RowBox[{"EdgeStyle", "->", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", 
           RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
        RowBox[{"GraphLayout", "->", "\"\<SpringElectricalEmbedding\>\""}], 
        ",", 
        RowBox[{"ImageSize", "->", "600"}], ",", 
        RowBox[{"PlotLabel", "->", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Spekkens Toy Model State Transitions\>\"", ",", "16", ",", 
           "Bold"}], "]"}]}]}], "]"}], ",", 
      RowBox[{"Dynamic", "[", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"selection", "===", "None"}], ",", 
         RowBox[{"Panel", "[", 
          RowBox[{"\"\<Click any state to see transformations\>\"", ",", 
           RowBox[{"ImageSize", "->", 
            RowBox[{"{", 
             RowBox[{"600", ",", "200"}], "}"}]}]}], "]"}], ",", 
         RowBox[{"Panel", "[", 
          RowBox[{
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Selected State\>\"", ",", "14", ",", "Bold"}], 
               "]"}], ",", 
              RowBox[{"ArrayPlot", "[", 
               RowBox[{
                RowBox[{"Partition", "[", 
                 RowBox[{"selection", ",", "2"}], "]"}], ",", 
                RowBox[{"ColorRules", "->", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "->", "Black"}], ",", 
                   RowBox[{"0", "->", "White"}]}], "}"}]}], ",", 
                RowBox[{"Mesh", "->", "True"}], ",", 
                RowBox[{"ImageSize", "->", "100"}]}], "]"}], ",", 
              RowBox[{"Spacer", "[", "10", "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Transformed States\>\"", ",", "14", ",", "Bold"}],
                "]"}], ",", 
              RowBox[{"Grid", "[", 
               RowBox[{
                RowBox[{"Partition", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"transformed", "=", 
                    RowBox[{"Permute", "[", 
                    RowBox[{"selection", ",", "p"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Column", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"transformed", ",", "2"}], "]"}], ",", 
                    RowBox[{"ColorRules", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "->", "Black"}], ",", 
                    RowBox[{"0", "->", "White"}]}], "}"}]}], ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "70"}]}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", "p", "]"}], ",", "15"}], "]"}], 
                    ",", "10"}], "]"}]}], "}"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"p", ",", "SpekkensPermutations"}], "}"}]}], 
                   "]"}], ",", "4", ",", "4", ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", "}"}]}], "]"}], ",", 
                RowBox[{"Spacings", "->", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "2"}], "}"}]}]}], "]"}]}], "}"}], "]"}], 
           ",", 
           RowBox[{"ImageSize", "->", 
            RowBox[{"{", 
             RowBox[{"600", ",", "250"}], "}"}]}]}], "]"}]}], "]"}], "]"}]}], 
     "}"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958974293246091*^9, 3.958974293247181*^9}, {
  3.959050358982584*^9, 
  3.959050360877287*^9}},ExpressionUUID->"00893c44-7dbb-4a2d-bbd2-\
bc0783c06030"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`selection$$ = None}, 
  TagBox[GridBox[{
     {
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{{1, 1, 0, 0}, {0, 0, 1, 1}, {1, 0, 1, 0}, {0, 1, 0, 1}, {0, 
           1, 1, 0}, {1, 0, 0, 
           1}}, {{{1, 2}, {2, 1}, {3, 4}, {4, 3}, {5, 6}, {6, 5}}, Null}, {
           EdgeStyle -> {
              Directive[
               GrayLevel[0], 
               Thickness[0.005]]}, GraphLayout -> "SpringElectricalEmbedding",
             ImageSize -> 600, PlotLabel -> 
            Style["Spekkens Toy Model State Transitions", 16, Bold], 
            VertexLabels -> {{1, 0, 0, 1} -> Placed[
                EventHandler[
                 Graphics[{
                   EdgeForm[
                    GrayLevel[0]], 
                   FaceForm[
                    RGBColor[0.87, 0.94, 1]], 
                   Disk[{0, 0}, 1], 
                   Inset[
                    Graphics[{
                    Raster[
                    SparseArray[
                    Automatic, {2, 2}, 1., {
                    1, {{0, 1, 2}, {{2}, {1}}}, {0., 0.}}], {{0, 0}, {2, 
                    2}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, Frame -> True, FrameLabel -> {None, None}, 
                    FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 30, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}], {0, 0}, Center]}, 
                  ImageSize -> 40], 
                 "MouseClicked" :> ($CellContext`selection$484708 = {1, 0, 0, 
                   1})], Center], {0, 1, 0, 1} -> Placed[
                EventHandler[
                 Graphics[{
                   EdgeForm[
                    GrayLevel[0]], 
                   FaceForm[
                    RGBColor[0.87, 0.94, 1]], 
                   Disk[{0, 0}, 1], 
                   Inset[
                    Graphics[{
                    Raster[
                    SparseArray[
                    Automatic, {2, 2}, 1., {
                    1, {{0, 1, 2}, {{2}, {2}}}, {0., 0.}}], {{0, 0}, {2, 
                    2}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, Frame -> True, FrameLabel -> {None, None}, 
                    FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 30, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}], {0, 0}, Center]}, 
                  ImageSize -> 40], 
                 "MouseClicked" :> ($CellContext`selection$484708 = {0, 1, 0, 
                   1})], Center], {0, 1, 1, 0} -> Placed[
                EventHandler[
                 Graphics[{
                   EdgeForm[
                    GrayLevel[0]], 
                   FaceForm[
                    RGBColor[0.87, 0.94, 1]], 
                   Disk[{0, 0}, 1], 
                   Inset[
                    Graphics[{
                    Raster[
                    SparseArray[
                    Automatic, {2, 2}, 1., {
                    1, {{0, 1, 2}, {{1}, {2}}}, {0., 0.}}], {{0, 0}, {2, 
                    2}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, Frame -> True, FrameLabel -> {None, None}, 
                    FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 30, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}], {0, 0}, Center]}, 
                  ImageSize -> 40], 
                 "MouseClicked" :> ($CellContext`selection$484708 = {0, 1, 1, 
                   0})], Center], {1, 1, 0, 0} -> Placed[
                EventHandler[
                 Graphics[{
                   EdgeForm[
                    GrayLevel[0]], 
                   FaceForm[
                    RGBColor[0.87, 0.94, 1]], 
                   Disk[{0, 0}, 1], 
                   Inset[
                    Graphics[{
                    Raster[
                    SparseArray[
                    Automatic, {2, 2}, 1., {
                    1, {{0, 0, 2}, {{1}, {2}}}, {0., 0.}}], {{0, 0}, {2, 
                    2}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, Frame -> True, FrameLabel -> {None, None}, 
                    FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 30, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}], {0, 0}, Center]}, 
                  ImageSize -> 40], 
                 "MouseClicked" :> ($CellContext`selection$484708 = {1, 1, 0, 
                   0})], Center], {0, 0, 1, 1} -> Placed[
                EventHandler[
                 Graphics[{
                   EdgeForm[
                    GrayLevel[0]], 
                   FaceForm[
                    RGBColor[0.87, 0.94, 1]], 
                   Disk[{0, 0}, 1], 
                   Inset[
                    Graphics[{
                    Raster[
                    SparseArray[
                    Automatic, {2, 2}, 1., {
                    1, {{0, 2, 2}, {{1}, {2}}}, {0., 0.}}], {{0, 0}, {2, 
                    2}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, Frame -> True, FrameLabel -> {None, None}, 
                    FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 30, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}], {0, 0}, Center]}, 
                  ImageSize -> 40], 
                 "MouseClicked" :> ($CellContext`selection$484708 = {0, 0, 1, 
                   1})], Center], {1, 0, 1, 0} -> Placed[
                EventHandler[
                 Graphics[{
                   EdgeForm[
                    GrayLevel[0]], 
                   FaceForm[
                    RGBColor[0.87, 0.94, 1]], 
                   Disk[{0, 0}, 1], 
                   Inset[
                    Graphics[{
                    Raster[
                    SparseArray[
                    Automatic, {2, 2}, 1., {
                    1, {{0, 1, 2}, {{1}, {1}}}, {0., 0.}}], {{0, 0}, {2, 
                    2}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    Line[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[0.5], 
                    
                    Line[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}]}}}, Frame -> True, FrameLabel -> {None, None}, 
                    FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 30, 
                    Method -> {
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}], {0, 0}, Center]}, 
                  ImageSize -> 40], 
                 "MouseClicked" :> ($CellContext`selection$484708 = {1, 0, 1, 
                   0})], Center]}, VertexSize -> {0.9}}]]}, 
         TagBox[GraphicsGroupBox[{
            {GrayLevel[0], Thickness[0.005], Opacity[0.7], Arrowheads[Medium],
              ArrowBox[
              BezierCurveBox[{{1.12501, -0.12501}, {
               0.6250100000000008, -0.2894507471831166}, {
               0.12501000000000007`, -0.12501}}], 0.11250900000000001`], 
             ArrowBox[
              BezierCurveBox[{{0.12501000000000007`, -0.12501}, {
               0.6250099999999997, 0.03943074718311646}, {
               1.12501, -0.12501}}], 0.11250900000000001`], 
             ArrowBox[
              BezierCurveBox[{{1.12501, -0.37503000000000003`}, {
               0.6250099999999997, -0.539470747183116}, {
               0.12501000000000007`, -0.37503000000000003`}}], 
              0.11250900000000001`], 
             ArrowBox[
              BezierCurveBox[{{0.12501000000000007`, -0.37503000000000003`}, {
               0.6250100000000008, -0.21058925281688348`}, {
               1.12501, -0.37503000000000003`}}], 0.11250900000000001`], 
             ArrowBox[
              BezierCurveBox[{{1.12501, -0.6250500000000001}, {
               0.6250100000000002, -0.7894907471831161}, {
               0.12501000000000007`, -0.6250500000000001}}], 
              0.11250900000000001`], 
             ArrowBox[
              BezierCurveBox[{{0.12501000000000007`, -0.6250500000000001}, {
               0.6250099999999957, -0.46060925281688503`}, {
               1.12501, -0.6250500000000001}}], 0.11250900000000001`]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
             0.7]}], {DiskBox[{1.12501, -0.12501}, 0.11250900000000001], 
              InsetBox[
               FormBox[
                TagBox[
                 GraphicsBox[
                  {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.87, 0.94, 1]], 
                   DiskBox[{0, 0}, 1], InsetBox[
                    
                    GraphicsBox[{
                    RasterBox[SparseArray[
                    Automatic, {2, 2}, 1., {
                    1, {{0, 0, 2}, {{1}, {2}}}, {0., 0.}}], {{0, 0}, {2, 
                    2}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                    Frame->True,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}], {0, 0}, Center]},
                  ImageSize->40],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selection$484708 = {1, 1, 0,
                     0}), Method -> "Preemptive", PassEventsDown -> Automatic,
                    PassEventsUp -> True}]],
                TraditionalForm], {1.12501, -0.12501},
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.12501000000000007`, -0.12501}, 0.11250900000000001], 
              InsetBox[
               FormBox[
                TagBox[
                 GraphicsBox[
                  {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.87, 0.94, 1]], 
                   DiskBox[{0, 0}, 1], InsetBox[
                    
                    GraphicsBox[{
                    RasterBox[SparseArray[
                    Automatic, {2, 2}, 1., {
                    1, {{0, 2, 2}, {{1}, {2}}}, {0., 0.}}], {{0, 0}, {2, 
                    2}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                    Frame->True,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}], {0, 0}, Center]},
                  ImageSize->40],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selection$484708 = {0, 0, 1,
                     1}), Method -> "Preemptive", PassEventsDown -> Automatic,
                    PassEventsUp -> True}]],
                TraditionalForm], {0.12501000000000007, -0.12501},
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.12501, -0.37503000000000003`}, 0.11250900000000001], 
              InsetBox[
               FormBox[
                TagBox[
                 GraphicsBox[
                  {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.87, 0.94, 1]], 
                   DiskBox[{0, 0}, 1], InsetBox[
                    
                    GraphicsBox[{
                    RasterBox[SparseArray[
                    Automatic, {2, 2}, 1., {
                    1, {{0, 1, 2}, {{1}, {1}}}, {0., 0.}}], {{0, 0}, {2, 
                    2}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                    Frame->True,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}], {0, 0}, Center]},
                  ImageSize->40],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selection$484708 = {1, 0, 1,
                     0}), Method -> "Preemptive", PassEventsDown -> Automatic,
                    PassEventsUp -> True}]],
                TraditionalForm], {1.12501, -0.37503000000000003},
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.12501000000000007`, -0.37503000000000003`}, 
               0.11250900000000001], InsetBox[
               FormBox[
                TagBox[
                 GraphicsBox[
                  {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.87, 0.94, 1]], 
                   DiskBox[{0, 0}, 1], InsetBox[
                    
                    GraphicsBox[{
                    RasterBox[SparseArray[
                    Automatic, {2, 2}, 1., {
                    1, {{0, 1, 2}, {{2}, {2}}}, {0., 0.}}], {{0, 0}, {2, 
                    2}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                    Frame->True,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}], {0, 0}, Center]},
                  ImageSize->40],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selection$484708 = {0, 1, 0,
                     1}), Method -> "Preemptive", PassEventsDown -> Automatic,
                    PassEventsUp -> True}]],
                TraditionalForm], {0.12501000000000007, -0.37503000000000003},
               
               BaseStyle->"Graphics"]}, {
              DiskBox[{1.12501, -0.6250500000000001}, 0.11250900000000001], 
              InsetBox[
               FormBox[
                TagBox[
                 GraphicsBox[
                  {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.87, 0.94, 1]], 
                   DiskBox[{0, 0}, 1], InsetBox[
                    
                    GraphicsBox[{
                    RasterBox[SparseArray[
                    Automatic, {2, 2}, 1., {
                    1, {{0, 1, 2}, {{1}, {2}}}, {0., 0.}}], {{0, 0}, {2, 
                    2}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                    Frame->True,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}], {0, 0}, Center]},
                  ImageSize->40],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selection$484708 = {0, 1, 1,
                     0}), Method -> "Preemptive", PassEventsDown -> Automatic,
                    PassEventsUp -> True}]],
                TraditionalForm], {1.12501, -0.6250500000000001},
               BaseStyle->"Graphics"]}, {
              DiskBox[{0.12501000000000007`, -0.6250500000000001}, 
               0.11250900000000001], InsetBox[
               FormBox[
                TagBox[
                 GraphicsBox[
                  {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.87, 0.94, 1]], 
                   DiskBox[{0, 0}, 1], InsetBox[
                    
                    GraphicsBox[{
                    RasterBox[SparseArray[
                    Automatic, {2, 2}, 1., {
                    1, {{0, 1, 2}, {{2}, {1}}}, {0., 0.}}], {{0, 0}, {2, 
                    2}}, {0, 1}], {
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                    0}}}],
                    Antialiasing->False]}, 
                    {GrayLevel[0.5], 
                    
                    StyleBox[
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}}],
                    Antialiasing->False]}}},
                    Frame->True,
                    FrameLabel->{None, None},
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.5]],
                    FrameTicks->{{None, None}, {None, None}},
                    GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                    ImageSize->30,
                    
                    Method->{
                    "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}], {0, 0}, Center]},
                  ImageSize->40],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`selection$484708 = {1, 0, 0,
                     1}), Method -> "Preemptive", PassEventsDown -> Automatic,
                    PassEventsUp -> True}]],
                TraditionalForm], {0.12501000000000007, -0.6250500000000001},
               BaseStyle->"Graphics"]}}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->"NetworkGraphics",
       FormatType->TraditionalForm,
       FrameTicks->None,
       ImageSize->600,
       PlotLabel->FormBox[
         StyleBox[
         "\"Spekkens Toy Model State Transitions\"", 16, Bold, StripOnInput -> 
          False], TraditionalForm]]},
     {
      DynamicBox[ToBoxes[
        If[$CellContext`selection$$ === None, 
         Panel[
         "Click any state to see transformations", ImageSize -> {600, 200}], 
         Panel[
          Column[{
            Style["Selected State", 14, Bold], 
            ArrayPlot[
             Partition[$CellContext`selection$$, 2], 
             ColorRules -> {1 -> Black, 0 -> White}, Mesh -> True, ImageSize -> 
             100], 
            Spacer[10], 
            Style["Transformed States", 14, Bold], 
            Grid[
             Partition[
              Table[
               
               With[{$CellContext`transformed = 
                 Permute[$CellContext`selection$$, $CellContext`p]}, 
                Column[{
                  ArrayPlot[
                   Partition[$CellContext`transformed, 2], 
                   ColorRules -> {1 -> Black, 0 -> White}, Mesh -> True, 
                   ImageSize -> 70], 
                  Style[
                   StringTake[
                    ToString[$CellContext`p], 15], 
                   10]}]], {$CellContext`p, \
$CellContext`SpekkensPermutations}], 4, 4, {1, 1}, {}], Spacings -> {2, 2}]}],
           ImageSize -> {600, 250}]], StandardForm],
       ImageSizeCache->{375., {61., 64.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.958974293559197*^9, 3.959042721288454*^9, 
  3.9590427851364927`*^9},
 CellLabel->
  "Out[1311]=",ExpressionUUID->"9fc0022c-ed49-43f4-9348-3cb73590c31d"]
}, Open  ]],

Cell["\<\
The image displays an interactive graph illustrating \
\[OpenCurlyDoubleQuote]Spekkens Toy Model State Transitions.\
\[CloseCurlyDoubleQuote] It features six nodes, each represented as a light \
gray circle containing a $2 \\times 2$ binary pattern (black and white \
squares). These nodes are arranged in two vertical columns of three, and they \
are connected by implicit or explicit edges, though specific lines are not \
clearly visible in the provided image. The title and the prompt \
\[OpenCurlyDoubleQuote]Click any state to see transformations\
\[CloseCurlyDoubleQuote] at the bottom suggest that interacting with a node \
will reveal information about its transformations.

The provided Mathematica code defines the fundamental `SpekkensStates` (six \
binary vectors) and `SpekkensPermutations` (four allowed transformations). \
The `edges` for the graph are generated by considering all possible \
transitions from each `SpekkensState` by applying every \
`SpekkensPermutation`, and importantly, self-loops (where a permutation \
transforms a state into itself) are explicitly `Select`ed out.

The `DynamicModule` then creates the interactive visualization. The `Graph` \
is constructed using these `SpekkensStates` as vertices and the `edges` as \
connections. Each vertex is rendered as a clickable `Graphics` object: a \
light blue disk containing the `ArrayPlot` of the state. An `EventHandler` on \
each node allows users to `select` a state by clicking on it. When a state is \
selected, its color dynamically changes to `LightYellow` with a `Thick, \
Darker@Yellow` edge, while other states remain `LightBlue`. Below the graph, \
a `Dynamic` panel provides details about the `selection`. If no state is \
selected, it displays the initial prompt. However, once a state is selected, \
it shows the `Selected State` as a larger `ArrayPlot` and, crucially, a grid \
of \[OpenCurlyDoubleQuote]Transformed States.\[CloseCurlyDoubleQuote] This \
grid displays the result of applying each of the `SpekkensPermutations` to \
the `Selected State`, along with the string representation of the permutation \
itself. This interactive setup provides a clear and direct way to explore how \
individual Spekkens states transform under specific permutations.\
\>", "Text",
 CellChangeTimes->{{3.959050133546049*^9, 3.959050153204269*^9}, {
  3.95905018468279*^9, 3.9590501917338057`*^9}, {3.9590502261453867`*^9, 
  3.9590502305900993`*^9}, {3.959050275392338*^9, 3.9590502803162327`*^9}, {
  3.959050317387114*^9, 
  3.9590503675522537`*^9}},ExpressionUUID->"d4f63024-ec55-4233-a4a4-\
9a88fd5018c6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"basePerms", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PermutationList", "[", 
      RowBox[{"#", ",", "4"}], "]"}], "&"}], "/@", "basePerms"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AllPermutations", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"PermutationList", "[", 
      RowBox[{"#", ",", "4"}], "]"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{"PermutationCycles", "/@", 
      RowBox[{"Permutations", "[", 
       RowBox[{"Range", "[", "4", "]"}], "]"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"allStates", "=", 
   RowBox[{"KroneckerProduct", "@@@", 
    RowBox[{"Tuples", "[", 
     RowBox[{"SpekkensStates", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permuteState", "[", 
    RowBox[{"vec_", ",", "perm_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mat", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{"vec", ",", "4"}], "]"}]}], "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"mat", "[", 
       RowBox[{"[", 
        RowBox[{"perm", ",", "perm"}], "]"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nextStates", "[", 
    RowBox[{"state_", ",", "perms_"}], "]"}], ":=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"permuteState", "[", 
       RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", "perms"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"statePlot", "[", 
    RowBox[{"vec_", ",", 
     RowBox[{"size_", ":", "30"}]}], "]"}], ":=", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{"vec", ",", "4"}], "]"}], ",", 
     RowBox[{"Mesh", "->", "True"}], ",", 
     RowBox[{"ImageSize", "->", "size"}], ",", 
     RowBox[{"PlotRangePadding", "->", "0"}], ",", 
     RowBox[{"Frame", "->", "False"}], ",", 
     RowBox[{"ColorRules", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "->", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.9", ",", "0.36", ",", "0.36"}], "]"}]}], ",", 
        RowBox[{"0", "->", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.93", ",", "0.93", ",", "0.93"}], "]"}]}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g", ",", "init", ",", "permset"}], "}"}], ",", 
     RowBox[{
      RowBox[{"init", "=", 
       RowBox[{"allStates", "[", 
        RowBox[{"[", "stateIndex", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"permset", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"permType", "==", "\"\<Spekkens\>\""}], ",", 
         "SpekkensPermutations", ",", "AllPermutations"}], "]"}]}], ";", "\n", 
      RowBox[{"g", "=", 
       RowBox[{"NestGraph", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"nextStates", "[", 
           RowBox[{"#", ",", "permset"}], "]"}], "&"}], ",", "init", ",", 
         "depth", ",", 
         RowBox[{"VertexLabels", "->", 
          RowBox[{"Placed", "[", 
           RowBox[{"\"\<Name\>\"", ",", "Tooltip"}], "]"}]}], ",", 
         RowBox[{"VertexShapeFunction", "->", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"statePlot", "[", 
               RowBox[{"#2", ",", "35"}], "]"}], ",", "#1", ",", "Center"}], 
             "]"}], "&"}], ")"}]}], ",", 
         RowBox[{"GraphLayout", "->", "layout"}], ",", 
         RowBox[{"ImageSize", "->", "600"}], ",", 
         RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
         RowBox[{"VertexSize", "->", "0.7"}], ",", 
         RowBox[{"EdgeStyle", "->", 
          RowBox[{"Directive", "[", 
           RowBox[{"Gray", ",", 
            RowBox[{"Thickness", "[", "0.003", "]"}]}], "]"}]}], ",", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Spekkens Model Evolution: \>\"", ",", "depth", ",", 
               "\"\< steps (\>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"permType", "==", "\"\<Spekkens\>\""}], ",", 
                 "\"\<4\>\"", ",", "\"\<24\>\""}], "]"}], ",", 
               "\"\< permutations)\>\""}], "}"}], "]"}], ",", "16", ",", 
            "Bold"}], "]"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{"g", ",", 
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<Initial State: \>\"", ",", 
               RowBox[{"statePlot", "[", 
                RowBox[{"init", ",", "100"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Current Settings: \>\"", ",", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Depth: \>\"", ",", "depth", ",", 
                  "\"\< | Permutations: \>\"", ",", "permType"}], "}"}], 
                "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"Alignment", "->", "Left"}]}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"stateIndex", ",", "1", ",", "\"\<Initial State\>\""}], "}"}], 
     ",", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "allStates", "]"}], "]"}], "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"statePlot", "[", 
           RowBox[{"#", ",", "40"}], "]"}], "&"}], "/@", "allStates"}], 
        ")"}]}], "]"}], ",", "PopupMenu", ",", 
     RowBox[{"ImageSize", "->", "All"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"depth", ",", "2", ",", "\"\<Evolution Depth\>\""}], "}"}], ",",
      "1", ",", "3", ",", "1", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "permType", ",", "\"\<Spekkens\>\"", ",", "\"\<Permutation Set\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Spekkens\>\"", "->", "\"\<Minimal (4)\>\""}], ",", 
       RowBox[{"\"\<All\>\"", "->", "\"\<Full (24)\>\""}]}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "layout", ",", "\"\<SpringElectricalEmbedding\>\"", ",", 
       "\"\<Graph Layout\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "\"\<SpringElectricalEmbedding\>\"", "->", "\"\<Force-Directed\>\""}], 
       ",", 
       RowBox[{"\"\<LayeredDigraphEmbedding\>\"", "->", "\"\<Layered\>\""}], 
       ",", 
       RowBox[{"\"\<CircularEmbedding\>\"", "->", "\"\<Circular\>\""}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"TrackedSymbols", ":>", 
    RowBox[{"{", 
     RowBox[{"stateIndex", ",", "depth", ",", "permType", ",", "layout"}], 
     "}"}]}], ",", 
   RowBox[{"ControlPlacement", "->", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958974328226014*^9, 3.958974328227228*^9}, {
  3.959050378395522*^9, 3.959050382346191*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"8a802a9d-187d-40e4-857b-25a8702cf39e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
bb3mau+/v+9hh0V59Qs6ad/DD48W5soro0V1+OEmtQfZ0f33E+bjjz+uf6My
q8VV88oC6xWf+Frk1+PzvN3FgfAE/leB98S8wArJx73i/WBg4A1/phXXttIC
71dveT8aFDkeFLi0Inhr7ZeBuVqzWl05L1oMs1q6i8Z3xEIIIYQQ4hAwq8Wk
QsZpsbLaSy65xKwWu7T/Ec+9e/e6VKGT5eXlpGrjxo3f/OY3CwsLzV9IqrMY
vrVr1y43k1uX1fLFtWvXIrNExXcTEhJOPPHEuLg4Mv7SSy/dfvvt+JGLk2Rk
ZWW5yVk+6tSp09NPP02a3aXLRFiXWXdMq80pC/jp/7wa+dV5lrcx21uX5Y1Y
510wyvv+gIDS2kfHv+p9/xXvvDe9kRu8tJLAQsfnjgjYbsR4Zid6JbJaETtk
tUIIIYQQsaXVWu2QIUN+9rOfXXzxxcccc8zZZ589bNgwAuzevfvCCy9cvHgx
0nrCCSccdthhP/7xj5cuXbp161aEFPEkzPjx43/4wx8ee+yxRx111PDhw9lY
l9WSQaI64ogj4uPjLcs4MrseO3bs8ccf/+1vf/uss85ij0jrww8/TDK+853v
nHvuucuXLyfOF198ER0+8sgjr7/+eqSYglqwYMGPfvQj9sv/8+bNC9lXh7Xa
0wYHXDXiCyG1BZB5c/SACAGOHRB4/XRYIMyxkQLYS1YrYousts1BVzynloUL
F9LPN9OOampqdtZSV5isrCwLQKqaKRmHjktkeDo5o7mPUlJSDn1fLsIG1Ut9
itGf1IhEPzs3ArJgMXM+OvTYKN7mSGQjqE/Dbt+47B/0QY028KN9tkzC2jpN
e8iIjkZrttpf/epXr732Wl5e3htvvHHOOeeQHme1mOaOHTv+7d/+zb6Iljqr
HTRo0LJlyxhhvvnmm3/5y182b94c5Qrk7Ozsu+6661vf+taNN974+uuvI8u2
nf3efffddpttamoq32XXxEng/v37Eyep+sc//tG7d28Lv3bt2osuumjMmDF2
ZTJaHVJuHdZqT3ndO/blyK+j+3vfezHw+u/+dYY5qr/3nRcCYeoKwGvWDlmt
iCWy2jYEPfAHH3zQKYzHHnsMvW3y3XGqsvg5v9QVJi4ujjMUYebOndvkCWgS
Pvnkk2effdaVlT+ddLOffvqp+4jT4qGLLSdKq5G33367nl9BGV566SUr57o8
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
E/1Ly7qicEpuYkLz8KfzEK3Wj7tswH5giRiGHDHapABJm1sZmCbdtWvX4cOH
ewezWiQxvOoxZe/rF5+73Tmrffzxxy0Yo9mVK1diNwMGDPDrLYaYFraarhHR
asmgKa3FQL+BqDojW7t2reXO1iAiYdSRZYFWR2lPnTo14r6c1foX/qX6TMHI
bHZ2tuWILTSekKKYMGGCPfK1rqcjhS9p5azW/cDStFZrrZrUknG200ppt51q
n+1rYepvtWzk4PXXr4stxGoJ7zqcEKtlC6NE2gPpsYI1EG12Z2Irq23ryGpb
DCtSOgH6QFun112X1S758suvrkMO3GBb7m3N9WYkBFT0qfnew9O9+6d4f4vz
7uU12ftrHa977RXn/W1KIPyD07zH53j9V3iTtnnrM73cskDM1TWBvVCwnGjo
AwsLC0tLS9VoRUsiq20TmGrZyp8hN8rRadidm9Gtlq67R48ebsRl1+La6K6o
lvz8fIaXtlCq59MThsF85aOPPrIR9eLFiytqZ4ic1Q4bNmzVqlUjR47s5Juu
9c9KTJs2zfZC5FuCMEiju/vyyy/rY7VecJiakZGBffD/jh07Fi1aZO4GURYI
8sfjfMFgpxRmiDD6rTbkZ4EXXnjB1J7RL4mxqMisW3S3IvgMgk61VkvWyKxF
hT3x3hU1g09K2yZYm9xqSQZDX0K63xmo5RUrVtin7gJI2pJbp9oLTuFZUilV
q9+6rNafzkO02pAJMrJmS+vY5GkTWi0jlsTERJI0ZMgQf65HjRplqQ2Zlw+B
ukPTyCwWSUg0x77FMYWyRbdaKs4e+QS0W3tv7dxVPa3Izbi5e7HdEW0lw3ta
Pv9juOTdDsY1a9ZURJqujWi1hAxRWr/IE9L/ZOcQ7GCJWDjOakmYGxmiwFaV
8+bNY5Dj/I69hHQ4lC113TJWS+FbqqJYLdspVbbg+HRf7LS4uNj9WrWg9rHg
9bdad/WL4a5gefzxx03n62+1qbWwUwp26NChnYJz+uPGjfNktW0fWW1LwmFl
a0Zx7qNrtW6ZgyhWT1RvAWqCK0dV1QRufS0q95I/8zZkeSt3e0t3eUtSvEXJ
3sKDvRaleItTAuFXpHqfZHj/Kgisk1xeGfDlqpovbdkHulnK05anpsWGLPwl
RLMiq20rOBFgAIwSfhaEcQ41aDfMPvHEEzbA899Xi13aMImhkY2R7HZLuxbX
PwCj52FE9OGHHy5cuNCWHQ7REzYyiLL7OtPT020g56zWrI292KM32Itd2WhL
o/AtBuruWZBjgzC0C1kDOYrVkmYskmhtwsjuArZJ6k7BG+4OWm4Wj/vTxtg2
YqzrvlorQMupm3tyJWZFCnzdtpBIi8pNWFfUDq0pQ3dL8oYNGyjnWbNmmRA1
yGqJmdHszlqSfPgF3C5CdkoycuRIN8XvnyryV8rcuXMtsHP5EKslBrsX26WT
VH388cd2cWa41doWy3Vd99XyP/VitsIXaQl+gWqQ1ZI8Kpf/Qx69akRsihSg
5ZEjiLqIOFdrFzbQvKluKwdbbstyzf9EFdHIOF5MoEaPHm13i5NaPqV4XVT+
uWlbRonIMR3S07lz5379+lF6JJKq4XhBtcwZCfbWW29ZeTrlCYHmak+TcVbL
d7FO1yRIBortbzx8hdjm+LCnVllV0qKcd4fgrJYaMVMmqv79+9stpf7fMfwH
C6VB4+FAWLx4cV1laDTOahlfuf7BKZ5b4S2K1bLF/WBlWQ6ZXbWonNX6XT7E
akM6bfZoSw3YD0G2Xlw9rZaGTSMkkcRp99K6dPpXXHdl6L+wX7QVZLUtia2Z
TMGWlJRk15Kfn2+PP+Moow/hQHMrNoRTVUtdARpKi0V4IPjaX1lZcaCyfH/l
F7wqKj+vqCw72Ovz/VVf7K8q31+1b3/lvgNVfH1fxf7PgwvcFRYW5uTkUoZZ
WVn01e52WrVY0ZLIatsK9BJ2yStjGEZNdvHee++9ZwMk/w1fboxk40y7DJUR
st0SyOCKPo3Y2GjjTMauC4O4xXMiWq0X1DFbAMdN14Y8r5ZonZjYRXfuetcu
Xbowgl27dq2zJ7eCSn2s1g0+CYnW8emqVauIwZ6REWUIFxKP03kbfDL8jjgN
6h+oo598F6On5DEFhuKWSHe7JfFThoQZP368yY4bZ/pVwsSE7Pfq1Ytkux8H
GmS1IXco+3E/NfiLy0qMtPmPcX+lkCo+JVVWSk5MvDCr9V+6bM9XJUnukabh
Vgtzg1QGn+ga8mQf13L8sblVqe2y5AZZLQVuFWFX7YYTkmsS5mo5ZFLeD3m3
pBI5u6A50QCsoiPaBHESM8LIRtMxQk6dOpWqt0c5d4q0BrLdcMoBQkrcss+2
0BOHs93uak2ReGj/IYdzeLLz8vKwaZq0+xWIwYb9/OUatr/xRDwFNHS1qE7B
KeDZs2fbweL3O9d9WTG6MrRfyZrDait9F2YQmNOcO/QiWq11qsRMkdoXiYpd
s2XFihWu5UyYMMHS4KzW6sV+oQqxWvuZi3is0ybL9kgg620sqnparfudyn4I
IlVsHzZsmKXT7r+23sa6xCj1JVotstqWx1aOQmOLi4s599k6FRlB3LIV9md6
GBm1hH/UOFo4wjReaQ18pRNV7SuDkgm8bEcUlPNZ3UsrYoWstg3BSJhxkX8O
znwWzWEYaSrqfX2u1hZHsj8ZTTE0cnVtYusG1Xap6uDBg93dc+FWy+DTnh1J
VLZ+b4jVel8fJeImhGGwin3b9JMbVxOnmwatj9XaKqBO4fmIqHgzZMiQKBO1
4fGQPLtM2h4SxIksotVShojP888/b2NgV4CMb/0FyGCSjLg7i3lDmft9x+aU
icrNCVqEBLMC9Br+ZJ+6cMJouKoJj9YqhRT6NSekUrwwq/WCU10h+aXh2Xpl
biBd4bvys1Ptsq7hVmszTTaz7wLbLK2bVm6Q1R70ebX+phiS65BrcUMgqfiO
uQnZdCv2uMfO8l1basnFaZrMIel/orETPTfB6p+rJeP2+0CnsGsbaI12mYTF
Y29CDucQzKfMhb2w5+aEE3GCu6FWi9L6DxlSaBOLFgxbtMZjvU2n2ktzw+8J
bRKrJUIakmuKZISEuRQ6q7Xl1FwjJFrSiVxYvVhXw1ds2Sj/w2FtvW6XWWvY
IVbr1f4q4n5islzTzcbFxVn91tNq7XixArTfWKzH7t27N1HZWgc2PU2ao9eX
aLXIamOCLR5FCeO2JSUl9pTVXbt2cd7csWPHv4LEiyD/Cr4S/vUViYmJnOZo
sZwB6dDoTsvKyjRFK2KIrLZtUVBQ8OGHHzK+ejHISy+9hNZNmTLFf6ug/77a
tWvXDho0iJD87zcyw5Y5tdhsOU3icSud0jxsHse/JCkBCMZGYiMA/9ufTiXc
2qGM0m28WlVVRac3ceJEl2YL7y7bI5hFQg9ZUXuTIP0nMYTEzO4sOy7v/oxH
JCQelzz2aLeaWi7YMmzYMPeUGS94n+m0adMYf7IjV4AVX7+H0VbxwlysANnR
qlWrJkyYQMLmzp1rYWyJHsrQ4rGoCOaisjolAe7izHBcIqNA6fnXu3AZj+g+
hETho1SKF5z9ZCPZIYUuqSH5tZksq24XM7ljy0tBbFlXqokyCUkksZE2vohi
uAjjfQtKc3IkhVZZ/sRba+Ej/9NaKT02UpL+GMJz7ZqiZTk81xGxwnTHXcja
sxYz8ViWiZMSsDitbVvV269MZNmvPOY7REh1oFd1NWwrQH8TCj+c/fDR4sWL
zYLtInAEPErjiRiVa0L+xY7CcVbL8IZDhrxETKEdLK4YQ8rQn8KQ3yVmzJhh
jcfFRsKsul3btnOZNRUXZ0hTJEnswg5qWrVrPMTGt2xdazsGrZewdPJFm7G1
qPxNkYS5zFrDtuKiEbpDxvt6N2ux+btZ6x/Cm6LrFXljfYUdff7jhQBuIW4r
hH79+nXp0gXZj1JfotUiq40t9nBqe6oXdmaSWyzCcMViD7unrCgxKzq1TxFb
ZLVtESrOLoyJ+KyNkNWi7KKaKON2i80/DGsObFkku0blUOIhIxaP30CbFXYU
vQDtQUsHLUBbFRCiTAu2MI2rlPrnt57R1jPCpsJy3Yh26I67upJaV5btGKwI
W9YpZA1ka9tRGrY1xeit0cGQw26tdbeCNhOvf30N5IMeLy3T4fixeoly3NlD
KELOg5bOup5nZFhm63NE1ye2ehLxeCENtjYdlX6IfayIFbJaIYQ4FGS17Y+6
nuwjhGhVRHyyT1NB97548WJ3/2bz8XqkJ/uIFobqXrlypf/OX9HmkNUKIcSh
IKttf8hqhWgTNKvVerXTtW519GZCVhtz7P79F154gepusYtYRJMjqxVCiENB
Vtv+4Jz4bJCFCxfKaoVoteTk5AwfPtyWBW6O+BkAz507t3fv3itXrmyO+A1b
fRrYXfPtRUTBVkJ7/vnnx44dG+u0iMYjqxVC1MW+uol10loRslohhBBCiNgi
qxVChOC31/I6cG4rz5XVCiGEEELEFlmtEMIRUWa/iIQTW/emw7qtrFYIIYQQ
IrbIaoUQRojPmr3aA6dgrw/bQhdhwcIncDsUslohhBBCiNgiqxVCVHxdae0B
ymhacXFxYWFhQUFBXl5eTk5OdpDc3Fz+ZGNRUVFJSYnprXPbDii2slohhBBC
iNgiqxVCOKW1yVlclWM/Pz8fk+X/PXv20BscOHCgpqamurp6//79hGGjP4Df
bTua2MpqhRBCCCFiS32sNiYDRSFEi+FXWtPVvLy84uJiBDZ6B8IX6SVyc3ML
CgpwYWe1sc5Qi2JWi9e3TKcthBBCCCFCMKtNS0sLGafJaoXoIDil3bt3b1FR
ET6Lnx7UZ/0QA1aL2yLCdrNthxJbWa0QQgghRGyR1QrRkXFKi8nis/n5+fzZ
uM4EpUVs6TTKyso6lNjKaoUQQgghYkt9rLbjjE6F6FCY0nKkm9IWFBRwvH/5
5ZeN60xqamr27NmTk5Njt9l2nKuRdV+tEEIIIURs0WpRQnRMbE0nu/A4Pz8f
pT1w4ECjldZAbO02W1tgqoOsHCWrFUIIIYSILbJaITomNlFbVlZmD+7Zv3//
ISqtgdgSIZrccRaPktUKIYQQQsQWWa0QHRCbQuUYLy4uzsnJ4f+qqqqm6lWI
Fk0uKiqy65Db/XStrFYIIYQQIrbIaoXogPgnavPz85tqotawG2xturYjLIks
qxVCCCGEiC1NYrUM5wp9FBcXN2hMSBpWrVrF6Lo+gUtLSydPnhye4PpDviyd
DLwbHUkIOTk5ixYtSk9Pb6oIhWhW7I5arJOmy/HbhBO1Biabl5dHB8IB24RW
S5pJcFZWFkdxk0TYJMhqhRBCCCFiy6FbLWO5l1566aSTTjr11FNPO+20008/
/Z577mnQmPCdd9557LHHtm/fXleA1NTUMWPGxMfH876oqOiGG26YP39+g3bh
IFMLFy780Y9+ZKm99NJLu3XrVk+h9oO5z5o1C5O1Pzds2PCHP/xh6dKldYWn
DPFoRuMZtaQLESPSgnBYJSQkJCYmNu1ErVFTU0Mj37Fjx86dO9kX72n89Cf+
zgSnXlYHEaV15cqVv/3tb88777yf/exnf/3rX9euXdvQw7aZkNUKIYQQQsSW
JrHa7t27//nPf54zZ87SIBs3buQrpaWlNjS1qAjmvvJZEBftm2++ef/992/d
urW8vNx9yx44YhM9DF9vvfVW4i8rK2PjqlWrsrOz64rNvsX/uCrhQ1LL9pkz
Z/70pz/FSVHjESNG3HTTTV26dOErLgyR+2eXSDmFwC7QUjfYZoj+9NNP9+/f
n5E5gSnDa665hggtWHgpsZ2B/W4fqULEiF27dqWkpCQlJW3ZsoU3lZWVzdG3
5OTkxMfH08MkJyezR9o8R43/Qg7ez6tlwYIFmZmZ7s+IR+7DDz/cs2fPSZMm
TZ06Fat99dVXOfqidE0thqxWCCGEECK2NInV9ujRo1u3bkVFRW4jZjdkyJDB
gwdbgGHDhvXr14/3DFYJfMMNN1x77bV8hVEukTur3bFjx1NPPTVhwgRC8n7c
uHFvvPEGY+8HH3zw6KOPvvrqq99///09e/bw5/r1611s1113ncXGTonto48+
evzxx2+77TY084EHHti2bRvW6RJmVnvxxRfn5+ezPTc3d+HChWeccQYmTk4T
ExP/9Kc/kbzf/e53S5YsMYd97LHHiPz3v/89CXjyyScJgwKPGTPm1FNPPeus
s9hiZUic99xzz4033njFFVdYxv2Q091fJ9ZmIzouOCamSUtGx2iZ1dXVzdG3
cKhuD7Jz5072yH7T0tLy8vLcQeG3Wg5DDqvoVov50i1gsunp6Z07d37mmWca
erNDMyGrFUIIIYSILU1ltZdddlmvXr1efPHFgQMHzpkzh5Hn+PHjL7nkEkan
yCZvPvjgAwK/9dZbl19+OV7JABXrHDp0KC7srJbBIVb4+uuv20Dx1Vdf/cc/
/sHYmKjOO+88DJehOLFdcMEFixcvdrEtWrTIYhs1ahSx8a1f/OIXuO3cuXOJ
7e2332ZE7VLrrNauOiZr6C2RYKlk9o477ujatevKlStJw6WXXspHBLjyyiux
5mnTps2ePRu3Jc0M1Ddt2kRgrBkdZqeU4a9//WtyQcIGDRp0+umnh1zVHDJR
K6sVMcSsFkPcsGEDzb6mpqY5+pby8vL4+HiOa2e1NPucnBx3UPitlgMnutVy
JNLVrF27lqOe465Tp05Lly71/2AVQ2S1QgghhBCxpams9qKLLurWrdtzzz3X
r1+/6dOn8y1078ILL9yyZQsOeNZZZzGEJvB999336KOP2qW8jz/++MMPP5yd
ne232ptuuinEann/ySefXHHFFUhlRXAW2Fmtxca+/LHxLWSWQTsJ69y5M6Jt
E7tGiNVWBG/UJfzgwYMzMzO///3vd+/enQAY9BFHHMGYnMixWpLBaBxVx3mf
euqpZcuW5ebmssfevXtbJJQhXk8kxE+Wjz32WEby/lLi67Ja0UpwVsuhgT82
+U21RmVlJUcQh4N/rtb/aw9WO3/+fJvPTUhIwGrjg/Anx13E3mbdunWjRo26
8847b7vtNjoEWa0QQgghhPCazmrvvffe5cuXM+ZEZlNSUiqCd6eimS+//DKj
0Ntvv90iue6663BYu8d25MiRDE0zMjL8VnvDDTcMGjSIT4lnwIAB0a3WYrNk
ENstt9xCbFgtMms33qLYzz77LAlzqQ2fq83Kyjr//PMnTZrEOP+www7r1avX
q0FI27Zt2wiP1ZIFWzB52LBhXbp0IYZwq7366qvnzp3L+/z8/B//+MfkxV9K
GDE7YlQvqxUxx1ktByxi2ExWW11djaJu3rw5KSmJPdL4OWr8N7D7rZaOKLrV
8qkttob/8q2HHnroueeeC/ntKFbIaoUQQgghYktTWe1TTz2FzX0RxCZQ8LjJ
kydfdNFFyCZvLDCey3A0Ly+PTzsHycnJ8d9Xe9lll/Xs2RN1nTdvHp+a1Zoz
jhs3ruLrVmuxMdz1x4aQ/v3vf7cLHV988UWGvhGtlgE2g2p2ikRjtQyPMzMz
jzvuuMGDB2/ZsmXFihV9+vRhCE1esNpHH32UT4uKip544onu3bsTIVJs7+1u
YlstasGCBbzno1NOOSXEailDEkngQiFiDU2UY5AmbVcjNN9cbUpKCkdWdnY2
e6Txc6j6O5MG3VdLggcMGLBy5UrST7/Ecd2pUyf/ZRgxRFYrhBBCCBFbmvYK
5GeDvP322xXBRYwTEhLOO++8Cy+80N1Mt2TJkuuuuw5vZVB6ww03TJ8+Hddz
Vsu4929/+9tvf/tbbJEhKwHMakkkXnnXXXctWrSo0Ge1Ftvzzz9vsc2fP5/Y
Bg4ceFCrPfHEE7t27Uqyif+OO+4YM2aMPbuzX79+d9555wsvvPDPf/7zySef
dPfVXn/99U8//TThSRuGju0yAn/ttdduvvnmV155JS0tLdxqN23a1JTjZiGa
Dvew2vT0dP5vpvtq2QXibPOzER9Z2yCr3bNnD8fgQw89ZL3HPffcM2LECP9a
6DFEViuEEEIIEVsO3WoZf44cOfKyWi6//HJT0Yrg9AoD0SeeeMIFJra+ffve
eOON2Gjv3r0Z8RI5bjtgwAC7mHDcuHEPPPAAhnjvvfeilkOHDq0I3pQ6YcIE
9HP06NEMbh955BGbo7HYrgtCbHxEbOPHjx88eLBdYPzBBx9grJ9++qk/AatW
rbKkXnXVVdj0kCFD7OpiBt4pKSloNXtHY99//327WhKrRbHxWbaTHbu+GlDs
v/71r8Rg10ySWkqyIvgQHwQ8KSnpEIfKQjQTZrVYGNbJkdJMayBb/Pn5+XQR
Ea3WVn8y1q1bR4fzSRD+jPi82tWrVz/88MP0HjfccEP37t39x3VskdUKIYQQ
QsSWQ7faRlAWpK5o7eG2ITfW7QsScXEYwkeJrREguf5cI7+TJk0qLCwkVSEJ
sIWqmmq/QrQMzmpzcnKysrKqqqqao2/hkCFy/q/LahtHcZAm75QOBVmtEEII
IURsiYnVti26du26bNky/yo3QrRp7AcimnR+fr4d+01+a211dXV2EPoQepIm
tNpWiKxWCCGEECK2yGqF6IBwUJeVlXGA79q1i/+bfLqW3iMtLS0vL6+4uLjd
9yGyWiGEEEKI2CKrFaIDYgc4ypmRkYF+Nu3zfWpqavDZ9PR0u26/3fchsloh
hBBCiNgiqxWiA+IuQi4oKEhOTkZCKysrm6pXQZZTU1Ozs7NLSkra/eXHFbJa
IYQQQohYI6sVomPipmvT09N37drVVA+urampSUtLw2oLCwux5o7QgchqhRBC
CCFii6xWiI6Jf7o2JSUFsT3065BR2szMzMTExOzsbLujtt1P1FbIaoUQQggh
Yo2sVogOix3mJSUl+fn5ycnJqampqChm2rjOhC9mZWWZ0u7Zs6dpH+jTmpHV
CiGEEELEFlmtEB0ZJ7a5ubk7g3DU46cNmrQlfHV1dXp6+o4dOzIyMoihtLS0
gyhthaxWCCGEECLW1MdqYzJQFEK0DBzjdoMtYpuSkkKfkJmZWVZWVv9uhO8m
JibGx8c7pe1Qv4aZ1ZLr5uuohRBCCCFEFMxq09LSQsZpslohOg7l5eU2Y1tY
WEhvQLewffv23bt3H9Rt8dnk5ORt27b5LzzuUEpbIasVQgghhIg1slohREWt
2KJmHPX4aWpqanx8/KZNm+gieF9QUMCn1dXVVVVVhMnLy0tJSUFmP/30UwLg
v/n5+U5pY52VlkZWK4Rw0FvSK8YH+fjjj+Pi4iZGYs6cOcuXL1+zZk1SUlJR
UVGsUy2EEG2e+lhth5p2EaJjYksic7xjpsXFxYWFhTk5OfhsYmLi9u3bEbf1
tWzYsMFsd+fOnenp6bm5uQzJ9u7dS49h3UVH6zF0X60QHZzq6uodQaZNmzZl
ypTJtUyaNCmi0hqTgqC9fGXGjBmrVq2iJ6HvjXVuhBCiTaLVooQQhgmp3WaL
25aUlOzZs6egoABvzcrKysjISA/Cm+zs7Ly8PEZf+K/5LNjyUB2wu5DVCtEx
OXDgQEJCQnx8/NSpU+OCmK5+8MEHixcv3rx589Yg9JlZYSQnJ3/66adLly5d
sGCBX3KJavXq1QgyfW+s8yeEEG0JWa0QwrGvFrsg2a5JxtdKghQHsfdstOuN
/T7bMfsKWa0QHQ18Fl3FQG1OFo1FS81hMzMz6RYqKyura6mJhN3QURmEnhPP
3blz56JFi0xviXPKlCmrVq2S2wohRD2R1QohQtjnw7w1HLYjs/7AsU51zJDV
CtFxoN+Lj4+fNWsW1omBop+bNm3avHkzXaIpKq7aoCejAeGRXL5L15qamrpk
yRL0duzYsXFxcTNmzMB2+bSZsiOEEO0GWW0rwd3V2F4xPzL8clRWS2kdHDRA
QynzEbLlC7X2r7OvbmKdtFaErFaIDgKnaRzWfJb/t2/fzlnjQJAmiR+9RYrt
dJmcnIzesqNp06Yh0Xl5eTU1NU2yFyGEaJfIamMO5eyu8NzTfmEwUFxc/FmQ
oqKiwsLCgoICTtPZ2dmZQTJqSU9PT/ORXktaE+EidHtk71lZWTk5OZY2KsJm
IYWoD7JaIdo9nBo2b948c+bMKUHMZysrK5tpd6a3dC9ItN11O3369DVr1rCl
mfYohBBtHVltDCktLeVESTlTwgyJeU+BmwMW10FJLXUFaCgtFqGzWrKJSNqD
Y9CBpKSk3Nxct+KQf/a2WfHPF5MkJHfr1q3r168nYegtSSK1VjWxbiaitSOr
FaJ9wzli9erVNkWL2KK0zeezIbAjhmHLly+3m21XrVpVIbEVQohIyGpjBWPg
wsJCBHZvENPAkq+zNwx3GW34R42jxSKkFZHB/Pz8nTt34rOILdlnOw1s//79
1XXjX1ujSQhZr8PuZqoI/shQHHyiDaLNcZGZmVlQUGApj3VjEa0aWa0Q7Zjc
3NyVK1dOnTp1xowZW7duxXDLy8tbOA2MBzZu3IjVkowNGzZwbmoxrRZCiLaC
rLbl4YTIaZGzkj0YxW+v9b8ntMlvMm3uCGlFOTk527dv37VrF7k2k/0ySKwP
gq+wxNgP4wxjGL1g33l5ee4xrLFuOKKVIqsVor2yc+fOZcuWoZMLFizg/MWJ
IFYp4TREYqZNm4bYzp8/Py0tTWIrhBB+ZLUtj12Raxcbm9JGtMJ2Bq1oy5Yt
2dnZvGn9S14wWqBqGEJwgJDmoqIiLZEk6kJWK0S7hFPAvHnzTGlTU1NjqLTG
gQMHUlJSENuJEyfOmTOHUURs0yOEEK0KWW0LQ3kWFBTYnbN+pY21dDY7tKKM
jIzy8vLWMzkbHdSbaoqPj09ISMjJybF7bHUsiHBktUK0P3Jzc22Wdvbs2bY2
VKxTFIBk0OHYHb5JSUlNtfayEEK0A2S1LQylitVSsHbnbEdQWndfbSOe4hdb
ENvU1FSGEGlpabYwso4FEY6sVoh2RnFx8cqVK92Fx61EaQ0Ss2bNmqlTp9oM
ssRWCCEMWW0Lw7myqKjIf+1xrKWz2ckOQkNqW0prUFNJSUnJycmFhYU6FkRE
ZLVCtDM2bdrktLFVKa3BKGLdunWWQgYVsU6OEEK0CmS1LUx+fj7nI//lx7GW
zmYnJSVl586dNKe2aLVVVVU5OTkJCQlZWVk6FkREZLVCtCcyMzPnzZvXyi/x
ZRSB0loiW6F3CyFEyyOrbWE6oNUmJye3XauFvLy8+Ph4xjl6fK2IiKxWiHYD
Grty5copU6a0/uWY1qxZM3nyZFKblZUV67QIIUTsabTVmrAQpnXebEjC0JAm
edgoJYCHop/k9NAT5rfacKXdG3xwbcjzcdxGqiMpKSmKP6anp+fm5hK+cfrJ
1wsLCyOKNhtJeUFBgX8LubB9kTxKm/8jRlsfq+WjKh/V1dV1haQ62JE9Z5b0
7N+/P2JsjEzYtb2vrKxk7xHjZF81NTWEISMEi5hCinTbtm2yWlEXsloh2g0Z
GRnTpk3DalNTU1v5o3NIKuo9ceLETZs2tdo5ZSGEaDEaZ7VsXLp0KT3/rFmz
FixYsG7dupycnGYd8LNHdoFZRAmTl5eHlxGS9/T2gwcPjo+PP8RUUTILFy58
//33OcdRUBRIXRHWJ4UVUa2WUTHD4/nz56ekpLiN7JH9Us58un379qeeeqou
eYQxY8ZQHZRDA3X2K4YMGcK+wuNn14mJiYsXLyYBLlWbN2+eOXPm1q1b+RMX
Jtkff/xxRKE+qNWyHT8lBhJPaS9atIgWVVeLXbNmzaRJk4iN0hswYAADj/DY
SAYZIYVIKwHsMq0VK1bs2bPHHxJdZXcJCQkI77ogVG54Is1qaVGyWhERWa0Q
7QObqLUJUE4xsU7OwVm7dq0taaXpWiGEaJzVsv03v/nNsccee+qpp5522mlX
XXXV+PHjUQb3Xf+3eGOznOVB7I3Fb49K4c+Q8O4RKvYp/xM5Xfd7773nnzC1
L7pvoX5vvvkm2sh7NOSBBx5YtWqVCxC+F4vZpSocwvfv3//MM8+8+OKLf/KT
n1x//fUoFcl2Ebp56rpSGE4Uq2U70nriiSeOGDHCPuJ/DPemm2464ogjCM95
9rLLLiMGM02bxvVfxtytW7fRo0fjX+7pt26e16ZWQ2aBQ7ZcfvnlH374IRkJ
0dL09PShQ4e+/PLLptt8JT4+/qGHHjrmmGP69u1rkkvabr31Vr+P199qcc95
8+Z961vfOv300ynns88++6677vqyFgvj/hw+fPj999+PR2dnZ9P8qOKQ2Ngj
iXn88cdJDAmjSInwyiuvJPIpU6a4YJjswIEDjzzyyCeffJLqS0pKuueee9D2
8MlfrBZ5l9WKupDVCtE+oLefPn06p3JOW21i9jMzM9Oma7ds2RLlGichhOgI
NM5qER+sls4fg+C7eAEaMnPmTISOr+zYsYM4d+3ahU9VBN2QvRBs/fr1+BFO
hDvw59q1awmZk5NDb8xHbCE2wmdlZRHMDMJi4yto0aOPPspeEhISTEXpzG0w
mZaWZo/L6dGjx+9+9zs0x2QKTzHRJgGcqmwvpMo2EoCo+HPTpk2kh6+HD1aJ
+Yc//CH5IgHEgCajVCTYIsR0Nm/eTLIZzZIAfwqjDIAParXf+MY3UFfes4Vg
S5cu/fd///ejjjqKwKjcp59+aoHRdva4ceNGCoHisklSsmxXAufl5fGefNkU
JInEQz/++GO22NXU/E/BYn98nQKPYrUE7t27d/fu3VevXm1biPzdd98944wz
brjhBrNaE9thw4bde++94Rcw18dq58+ff8kll/h/G6+pqWFH1Iv9Sb5IGBuj
Wy27oFk+9thjaHJlZSUN75e//KVp/qBBg2i0LiQFeNJJJ11zzTXdunWjRbEF
56WK+UpIOmW1IjqyWiHaB5988glKu2TJkja0sLBNLi9btsydLoUQomNyiFZr
99WOHTv2vvvuQzfQkJEjR5577rnnnXfer371q0mTJvFdetqf/OQnV1111Vln
nRUXF8cI8Pjjj7/uuuvOP/98zOiRRx4hKvzij3/8I85F+FdfffWf//wnRsn7
hQsXXnzxxfjXmDFjTjzxxP/5n/+59dZb2c6Obr/99jPPPJM42REiOWPGDGI7
5phjUDMsjy1XXnnl8uXLSS1fJ8KfBbn00kvffvttko3Pnn322STjF7/4BV98
/vnnw7OJi/HRuHHjUlJS2CNCypmO/CYmJqKfxHbOOedce+21c+bMQQz9KYwy
AD6o1X7nO9+55ZZbyDifonJdu3alMClAwqOlRx55pAUm2eyaMjz55JM7d+5s
4vbXv/516NChvMfp7rjjDoSOPFIdREj5Wzxz584lKkrm5z//OVvQ9i5duthk
bkSrpfooyR49eiCS/MmnnEOJnBJDHp3V8nXK+dhjj8X6G2e1F110EcVoU8/7
9++nOp588skXX3zRwtx2220jRoxge3SrJUCfPn1wVXZHtARbv349+yUZ7733
HruwYFTizTffPHDgQAqcrJnVEub000+n5PmiP05ZrYiOrFaIdkB1dfXq1asx
xBUrVnCWjHVy6ktSUtLixYuXLl3KKCXWaRFCiFhyKFb70UcfoTA4S7du3fAp
dIkzAvaEBrJ99OjRKBWGghbx5tFHH7VLcxkBfve736UT5iNs6/rrr0dC16xZ
g5wuWbIkotUSAzLYu3fvv//97xXBS39Jds+ePdENPkJtEFVie+211+655x67
s9VZLZEMHjz4rrvuQn/IzrvvvnvZZZdxFsBq0dJevXqRzZkzZyJ3DErDx6vP
PPMMrkqmnnvuOc4aWBJ7HzJkyN13382f5KV///5kASHypzAKB7VaskM8dv8s
2cRbBwwYENFqH374YbJPSZ522mlbtmwxqyVtZrXINSWZmpqKzeHmWD/l3KlT
p3/84x9UX1xcHBpOAZKL//zP/7RFoiJaLVZI9l9++WVT13Xr1r3wwgt/+ctf
Nm7c6LfasuBzadkRVdY4qz3ppJNeeuml119/HW+lTYZY7R//+Ee2H9RqyTuN
B+l2W9gpYxVKkhbLd+0y5kmTJiH7xPbss886qwXCUCwh4xlZrYiOrFaIdgBn
5+nTp3N2oLdvE5cfG4zfli1bNmvWrPBVJoQQokNxKFZ7/PHHn3XWWfjgBRdc
MGHCBFwAdTruuOMefPBBfOdvf/vbKaecsm3bNszr5z//ObLjRoB8hdMH79EW
tCg/CPa6YMGCEKtlS7jVsh0rpA/HSTt37vyNb3zjlVdeYUgZ0WpRxe7du+Pd
fIXtOBrKM2fOHKz217/+NecCYkNbjj76aMwrJJt2Ky5RjRgx4tprryW/w4YN
o6yIkBw98sgjZPO222675JJL+G5TWe1FF12EZV999dWbNm3CwTHNFStWRLRa
Tr5UBBlH7nBb4vRb7eOPPz5lyhRCUvKkELXMycmhbO+77z72y+kPf8RwH3jg
gcMOO8yuo45otZMnT8YoR48eXRZcFapPnz4EY3foLYWP7NNILCTFeM011wwd
OrRxVnvCCSdQ7z179mQXuLZZLQZtYepptZ9++ikZJx77kz3W1NSQWRyfb6G3
bKEkaYEUEfVLVRKYLZY2bB2PpqD8ccpqRXRktUK0AxgOMZLh7OZ+52wTcPpm
qDNx4sTt27fHOi1CCBFLDsVqESgkAmcxYSQ8pnnmmWd+8MEH06dPj4uL++ij
j+zWSBxwyZIlbgR40kknRbdabNE8CE32W+2jjz5KAERp3LhxxxxzzKBBg6ZN
m3bUUUfxFbPau+++G6sljLNakooode3aFQ9i+9q1a2+//XZ2hNXijzhRRdA0
jz322HCrRWQ2bNhA7uxOXnQJkyXLTz/99C233DJ+/Hj2jlryP5H7UxhlAHxQ
q7300ku3bNnSpUsXdkdSR44cuXLlyohWSyETD+/POOOMcKt94oknSFhEqyUN
f/rTn6644oq3336bU2F0q6UMScabb77Je0rvjjvuOO200+66667f/e537PeX
v/ylCa9ZLWVuKt0Iqw25r5ZiNMk1M73xxhvrY7Xs65lnnqH92J98kfZwzz33
/O1vf6MGiYoYaJ9U99+CnHPOOWeffTaCb7umWEaNGhXyjEJZrYiOrFaIdgBn
k8mTJ9tvqrFOSwPg1L9u3TpO5du2beOUF+vkCCFEzDj0+2r92+lasQ9EDJVY
tGgRckEMDbXaMWPG3HnnnRhZfHw8XmNWi8W88sorN998sz2PtX///jgp73FM
9Nasli9iVSihTbC6+2rfeuutP//5z6QWt0KEr7322rS0tBCr/f73vx9utUjc
T3/606lTp2ZlZREhytOnTx++i8ehzyj8jh07kDhkltOKP4VRBsD1sdq8vDx8
k3yde+656enpTW61pJC9vPTSS9T70KFDo1stH6HwfJHUkhhiGxtk4MCB1113
HQW7Zs2asuDFyZTSz372M8qkSawW/aSyLrvsMqJNTEzEQwcPHnxQqyUG8kXt
2FNoCfbQQw9R0dQa7ylh9pWSkjKllltvvfX3v/89JUzV8BXazJw5c3jvj1NW
K6IjqxWiHWBW2xaf/cpgCau1hw/GOi1CCBEz6mO14aM4xAcHCbdaxIqTAq7x
ne9854c//CH2x0ZsIsRqTz75ZFtzGKvt169fQRA02awWg7jnnnuI4cQTT0Rp
2U4M7IgzzgknnHDaaaeVl5ejrogeYdjX+eefj/7YQ3AuuOCC4447jjd40FVX
XWVWi83hznz3u9/9LoIze/ZsNqamphL56tWrK4KmybeQr/CcEjM+dfTRR//X
f/3XNddcs379evaOT6G3JI8IzznnnAkTJlQEp6pdCqMMgM1qUdTwR7tS2t26
dcPjeI8qUsJdu3a11ZnOPPNMwhO/s1pyPWPGDLNaimLp0qW8v/fee7HUzMxM
JJGytUWqFy1ahMNSJtgZKvrAAw8QJ6b/7W9/m3zddtttZrUU4BVXXDFu3Ljw
J/vgfT179gxZBopqeuyxx6g++5Ovb968+ZRTTikLg11Ht9rq6mqqnkT6rZbA
fPGss846/PDDiRaLHzZsGIONESNGPPjgg5Qh6aGoqcGQ2F5//fXf/va3dgc0
xXKYjyOOOCLkkbXPPvssWasIaiyN8Lzzzvvkk09CInTPq434C48QZrVt4umW
Qoi64AwbFxeH1VZWVsY6LQ2DcyXjAQY8nMpjnRYhhIgZZrVpaWkh47ToVhsd
voJTNOKL/r3jaOw9ZDuewtDR/ZmXlxdiGXZ9ckT1sMezNiIxlAOObJbk326P
gg3ZGJLCcKJYbQtDaYSvVxwRHBn7+/DDD6OEIV933333Rx99FP7RQa02CnYb
bIO+mJCQMHLkyL59+zZ0d0888cR7770X/nAEWa2IjqxWiHbAtGnTJk6cmJ6e
3uYe/IrMzpkzR1YrhOjgNIfViii0HqttEGvWrBk8eDAnzYifYscDBw50N9iG
cChW2zjw0DFjxkydOrX+X3n//fffeustUhsxNqw2MzNTVisiIqsVoh3Q1q12
3bp1begxu0II0eTUx2o1km9C/PfV2rNZm9FFmw5Sm5eXZ4+sDYeMZGdnu8WQ
QzjofbVNTk1NDY2Wplv/r5BOaidiCrHa7du3Y7W6r1ZERPfVCtEOmDp1KlbL
cKjNWa3dV4vVhtxiI4QQHYrGrRYlGo1ZLaeetmW1ZcE7Z+tKbZSPymIxV+sF
L11u0O7qCr9///6MjAwOk6ysLB0LIiKyWiHaAWa1mzdvbnOrRW3fvl1WK4QQ
stoWhlLFainYNme1jYbzLPm1B+vEur03mMzMTJwFKy8uLtaxICIiqxWiHbBy
5co2ugayrFYIITxZbYuDxrbRi5APEVoRQ4W29TS96urqHTt2cICkpqZSX4i5
jgURjqxWiHZAG32yj3teraxWCNHBkdW2MBSmrRbF2adDiS0Z37hxI7luKzO2
KG1aWtr69esTExNzc3NNaXUsiHBktUK0A+Lj46dOnbps2bKKrz+yvJXDWRWf
nTVrVkpKSpu7I1gIIZoQWW3LQ5HmB6F4/WIb/e7Utg6tKCEhgZNvRkZG638a
IJWCqnzyySdJSUlFRUVUkCZqRV3IaoVoB3CGwmonT57coJUGY862bdvmzZs3
e/ZsPdZHCNHBkdW2PJQnirRnzx7EtrgWc9sQStsR5Do3N3fnzp2ffvopFpCd
nU3TqqmpaT1Tt7ZgFMXOQbFhw4atW7eSWurIlj7WUSDqQlYrRDvgwIEDs2bN
mjhxYmZmZhu6CHnFihWTJk1au3atuiAhRAdHVhsrKFhk1p6Vg+TifXuCOMmN
iBPeugI0lBaL0C69zsnJ2bVr15YtWzZt2oQLbN68mT/z8vLc03vDddjN9jaV
X4fPI7N3EmYyu3HjRnw2Pj4+IyPDakftX0RHVitE+2D27NlY7bZt2zgpxzot
9YIz1MKFC+2mWsZssU6OEELEElltDOG8+XkQVAvvQ2Y/Oxh7ajloyHrSYhGS
Wf7HE3FYhDElJWXHjh0MHrYGsTfY7uYWZEsQ27slgMMBy87KyiL99muDGr84
KLJaIdoHnBemTJmyYsUKzsixTku94FS1YMGCGTNmJCUl6aZaIUQHR1Ybc+yC
ZMqZAm+B+1tjBdksq51vxd85FxcVFeXn5+fm5mKRmZmZqG56JDJqifhpI8jw
YX+y9+zsbLvTGTexS45j3S5Em0FWK0T7gPPR9OnTp06dWlhYGOu01IuEhASU
VjfVCiGEJ6ttNdidm+UHY18tBw1ZT1osQv8WU3hn8Xhu+D3F4TcXRwnTIPxX
I/s3khKSVK75WdFAZLVCtA84N82cOXPixIlJSUmt/9ZaTlWrV6+ePHnysmXL
8vPzY50cIYSIMbJaIYQ4FGS1QrQb1q5diycuWLCguLg41mk5CKmpqbNnz54x
Y8b27dtbv4MLIURzI6sVQohDQVYrRLuhqKgIT2z907VuonbdunWaqBVCCE9W
K4QQh4asVoj2xNq1a6dOndrKp2tTUlJmzZqFgGdlZbVm+xZCiBZDVttK2CcO
jUbc+dugbzUowpbNerMQ6wOiLSGrFaI9kZmZOW/evIkTJ6anp7fOhYXR2DVr
1sTFxa1cubK0tDTWyRFCiFaBrDbm7OsYayA3Ift8yym7FZ/sOb9N+5SieuJ/
0DCEL0sVkn7qmhqPRcnVC9rhF0F04NcTWa0Q7Qy7uxZnpIdvJWJLn7x///4v
v/yS97t27ZozZ86UKVNSU1MrKytjnTQhhGgVyGpjSHlHel5tE0ZIg7QHA0Fe
Xl5OTk56ejptOC0tLSsrK9tHVjNje8kJwpuMjAxLBn/m5uYWFhaSwvAcUd0c
VvXJclMVY4MipB2WBLHGSSuN9YHS2pHVCtHOoAO36dotW7a0huuQDxw4sHHj
Rk4xVVVVdDW2ULMmaoUQwo+sNlYgC4gD4mNPR+U8ZfZh830lom4oLv43pU1N
Td21a9fWILyhAEMsrMUu0yVJmZmZ8fHxOE5KSkpycjJuS/2G16mpYsyKrw5s
ptvEltZoPQDp5yOJbXRktUK0P2wtpvnz5+/cuTPm07XZ2dlxcXGI7b7aRaKm
TZvGiUZ31AohhENW2/LYJccYRH5+vrtsFXeI/mRV4aAAaZmmkDTg3Nxczuw1
NTV2aVZsIQ2khMpNTEzctm1bWloatcyfrn5LgxO1NIBYl+L/Ed7wnOcC6ae0
9RjfKMhqhWh/0AcuXbp00qRJixcvzsrKiqHYsusVK1aQkokTJ3JmmT59Olab
nJwspRVCCD+y2paHIs0P4q72jHIPpgiHBoktbtq0yXw21sdQnSCzmzdvTkpK
sp8vXC235vtq/apbUntVvDVXkh3rQ6eVIqsVol2SmZm5YMECFBKxzc7OjpXY
pqenx8XFTQwyduzYCRMmrFq1Sh2OEEKEIKttYSjMoqIifMEuTHVKG2ubaUtQ
hngELbM1TM5Gp6qqKj4+Pjk5uaCgwNV1a7Zah19sba6ZdquuICKyWiHaKxjl
ihUr0MnVq1fn5ubW1NS0cAJQ6Ylh0CFXVla2fGKEEKI1I6ttYZCF/Px8BEFK
22hokAcOHGj9Smsw9sB6du3axdFkNd4mrLbs62JLi6XdsiXWB1BrRFYrRDsm
LS1tzpw5uOT8+fMLCwtb0iU5zW3dujXcaidPnrxo0aLWsIyVEEK0HmS1LQyl
auviSmkbgS1nRINsK0prJCQk7Ny5026wbUNWW+YTW4qddkvrjfUB1BqR1QrR
jqHH3rBhAyI5adIkxLagoKDFLkXOycmJqLSoLqcVEtYyyRBCiDaBrLaFsYla
t3yQrLZBpKSkoIcoYduyWhKcnp7O+MR+zWiLVmuPUsrLy4v1AdQakdUK0b6h
08YilyxZgtjOmjWL980ttpzj2MWyZctCfHbq1KkobWteUEIIIWJFfaw2JgPF
9opZrZS2cbRRq/WCN2dlZ2fbQ3Psl6JYl2V9cWIrq60Ls9pSPThSiHYN3eDC
hQuxy2nTpnEmatZ9obTx8fEhs7T4bGVlZbPuVwgh2i5mtWlpaSHjNFltM+G3
2lj7Stuj7Voth1gbtVqQ1UZHVitEB8HEdsKECePHj1+9ejW9YnPshRMc54sQ
n435M3OFEKKVEyurLSgoWL9+fWFhYZNc3jxjxozExERkp64A9hTOQ9/RoRPd
avko2weBW1JecnJy2Cn/h6Rt2rRp8+fP56MWSwnNY/r06ZzHQ7bXx2r3799P
gJY8iMJZsmRJQkKC/0f13bt3Z2VlUb/1t1qOSo5NjkG35cMPP9y0aVNxcXGj
CxYtHTNmjD/O+iCrjY6sVoiOAx04/bDJJifHHTt2NPkuqqqq3LXH8fHxTR6/
EEK0S+pjtU17Xy1j47vuuuu44447+eSTjz766O7duzNUPsRd3HDDDZMnT2b4
HfFTxuS9evV6/vnn2fWh7KU+oGODBw/evHlzXQH8CyCHXIHM9mefffaII444
Nsjxxx9PvhrtLw0FmT3hhBOOOeYYKuW0006jjrZt22YC1blz565du5KpQ4l/
5MiRK1eupK7rE3jXrl233HILEheyPTk5ObrVorT9+vWj3Gi9LXwo+aH03n77
bX8aUlNTMzIyCgsLD3pfLc2VkNdccw1t4IwzzvjBD37wzjvv7Nmzh4/+8Ic/
vPvuu7SxRtcCA7ATTzwRv67/V2ilbhlkWW1EdF+tEB0Hzj4HDhzYvXv3okWL
sM4pU6asWbOGvr2p4q+urt6+fXtcXJzdP6spWiGEqCctv1rUbbfdduWVV27Z
sgW/W7FiBeP20aNH26DdpoQYOXOCICQjfwbSjPBtEpZkkBhC8icJLvM5LBFO
mDAhN0j45DLR4s7dunULt1ryiG4wYndZtvcG4V32+Sg7O9s92YSN5qT2njek
nIQlJiZefPHFnOnqmhqObrVPPfXUhRdemJSUlBWE7DizsFlUF9jWpKWgUlJS
iMo2UnSZmZkhc3mETE9PP+g9vET+ve99b926dQRGP6mmyy+/nDdkhDjZu6W5
KAgJI5h9kY2UYXj89iwb2046b7zxxqFDh5I1NxHMRnZqVe+yyZ+mroR///33
Q+Ksj9U+88wzl1xySbjV1tTUsDsqy/6sqqryr6VMRTN4sD/5iGS45TjYznti
Jk6M0sVGxl1sBl9nF5WVlZTeqFGjGme1VCJWft1119GWiG38+PHoLfVC+ael
pZEAKyWrfarGNRJKmwBW+6ai5r+8ZyOBeZ+QkHD00Uc7qyUeytNVE/9/FoQA
tCu3UVYbHVmtEB0KunpOAXTjGzdutEWcENsmiZnTDYMEOmr5rBBCNJQWtlrk
6D/+4z8YohO5WeqCBQtmz57NmBmFufXWW0899dTf/OY3nCM4WfTq1euEE044
+eSTGeTzFUbXixYt+vGPf3zTTTexkY/GjRtn0WK1SNDpp59+1FFH3X///biA
f6eMNnv06BFitQzXly9ffs4555xyyik/+MEPBg4cSGLWr1/Pe8KTts2bNxMh
5cN70nb22Weza/6fNGmSjfl79uw5fPhwosIshgwZct9995G7O++88/DDDycX
L774YsQSOKjVXnTRRc5TzCmwIUqG/P7oRz/605/+ZJeP9u/f/+qrrz7xxBPv
uOMOqo+NnTt3Puuss4477rhrrrnmvffeQ1jY/vzzz7PxpJNOuvbaaym9g1pt
fHy8/baAH5177rl4KJl65JFHnn76aT5auHDhvffei3cTZ58+fdgF1UeZED9b
5s2bZ1FRdxTs/8/em8BWltx12yCQEASUECFEUCACBRIIiOwhgYCIEshGyIIU
CCFKgACBQECKFEgggW+SDGSmu2dfunum98U97b29u71feftst2157zte2rtf
26/94Xc87enx9+j83i7dXC99fc85d/P/0Wjkvkudqjp16vyfW3WqqC507P77
71e5fvInf/I1r3kNZ4d0+OLXv/51Skr+f//3f//hhx9WBp577jlOByf3zW9+
89ve9rbkrPZf//Vf46wWzWxpaSFNzgtH/O53v8uLPT09/I33kRQhBIdDw/m7
pKTkve99LyUie5gpx2psbPzqV7/KPykUBZG6fuITn+B0kOB//Md/6CidnZ00
GPL/1re+9Td+4zceffTRJKyWyidjP/zDP0zDU/OgrjTMzSn+2Mc+duHCBRI5
fvw4f3P0d7/73bxC4lwLb3zjGykRBTlx4gR1TmVyKSmFc+fOcdXEWS2+rLbB
meIQnGgOymXCCX3Tm95Ek9MEeLPae2JWaxiHBLrx+2PgRvz/ePDHf93lfn9w
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
6MD/xyPdtW4YhhEWZrUpxllt7CRkE9sDQYNcWlrKCrElh5xlwo+xsTHNPM8W
q1WzdNOPzWr3wazWMLKU5ubmS5cuXdybgoICDLGrq4tukM/Pzc2d8nj22Wcf
ffTR/77LkSNHHvc4ffr0qRiOHz/+wAMP4Kq8xVf04smTJx9++OH777//wQcf
PLUDPnb06FHS/N73vnfs2DFSUJqkwCs3b97URvOTk5PRaLS3txcHb2pqqqqq
Iqv5+fmFhYVXrlyhUM5z+buyshLDHfagJ1evTjSyubn54osvZv6d1DAMIxHM
alOPphJRt7HzkOPWBzb2gQbJDXp2dpbKTMFCT0lz+/ZtTrEGasmtTjenOJOt
NrYpurnH+hFm5e6uW0YcZrWGkUUgcRq1pH/jVnL58uW9fBZVHBgYkM86Xnrp
pXXvcRiM+KzHuXPnioqKuru7CaXijoV7YpfPPPPMyMiI21GOW1h7ezsvXr16
defg6dbWFv2JnFS745FP7nQTExPIKd5aVlYWO4BLNjSgXF9fX1NTwz/5AJ/s
7Ozkn+UeZI8EOZyKpi9yFO5NQ0NDuj2teLsP0KHhubYOlWEY2YhZberBaJaW
lhYWFhYXF92IrduUZ392tQ8/ZGOCNMibN2/Sbvk/TfQFz21Ts+7TPVE2iArI
MPEMkUZ/fz/xj+ac6xTLahMpclDVeKAEXWvU7/m0UtoqLTakVcFzALNaw8hk
tMk4HS8d4Pz8PBKn2bmY3a4+q22+iY6418Smg+vRQ46Pjzc0NCCzzz777NNP
P33S4/z581ht3HG5EWCap06dysvLoyONfQtX5XW+jt462xXczuhv6VXInjyU
P2ZmZrQfYm9v77Vr1/YZX9bILGVUhvWzJPfKrq4uclhbWyulJWU3mAsyZYyY
Gxaei0FrchHlpRRxOTQMw8hMzGrTBcqALGj8bi/+9w52qodPsjFBGiRVF41G
9WARf+hF4patra2X7sWdGO754URwqXH0F7wtqIhAOjs7ubJGRka09HHszxdc
WRhiIkUOqhr3T3CfFkj7pKptlHZ/zGoNI9NQh8xNgVsD/R63CbQOk3Ued9Wj
oKAgVu6uXLnCP/v6+rBCt6QwnTx/02ljxPgsNvqkx7Fjx/BZiSQ9wM480Plz
iMcee6ykpIRoKvYt+tXy8vKnnnoK4eVYO8dG5baRSMQNsHZ0dHBzoVAoamlp
KVndqbQXLlwg//RI+wy2Lnlw6yRxMlbgwbfISeywdVFRUXV1NZ6LxVMQFwpq
JNcGcw3DyEDMatMIt1puLlpZkb//l8eyx15LIDrd2GeZxAORjQlSXVQUAcbU
1BQNGH+sr69vaWm5cePGxMSEFrTk/3N7MB/DXp9JHB1ucXGRv0dHR4marl+/
zv97enoIBniRt+JO6Pr6OpdVIkUOqhoTSVANT41wzRsQp2XSPvk73RdKpmNW
axiZwO3bt3EuTBYDpVseGxujKy4rK3Om9pxHcXExVjjiQRfX29srm5PPDg8P
u6FJ/uAC57bCBZ6fn//4448fPXr0yJEjzmfFTmnd9ly4trb2xIkTWC16uOrt
M+vguFVVVU888cTDDz9MZm7durWXJ5JJtxhUZWUlhdLqHEg6x40btD1//jxi
i4rKQ8n8PfWTbp+bFDcvrBnPxbXludg04nzZQ5VDKSiRbm2Tk5NKH6gljpIJ
c6UMwzjkmNWmHerZjZctGwlAg1z2/Is7O9rI7ZsGzK2fxswNF8XAc7lBt7e3
t+1Gewy7fuBAkEinBzEG0dHQ0FA0GkW3Z2dnNXE39scKIatNU+XdGye/tMx0
XxzZgVmtYaQFjaJqIJX+iu6XfhinKyoqkuXl5eXpeVItC4yxom9xiTQ2NvIB
vjI4OBjrs6RJgnV1dajiUQ98Fgl95plnYqf77qq0gAujtHyFz3d3d+98fnZg
YODcuXMke/z4cZR5H7EFsk0OKY4mJOO2GoDGc7U2lBurJbfyUP5P5rkZJai3
jlVv8yC8lWzjuQ0NDRxaS1E5yVXZqz2ocwq77m2HxN2Z06FJU+a5hmGkGLPa
DIFK5h76P0YCUFfubzer1i3VC0v78r9i2P+TCRLrrVJCZUnbBe6EEx1bhExD
2Uv3BZFNmNUaRspwJktnhbL19PRgVYWFhU61sDwslVfQ2I6ODkwW+9snwba2
NuzVSR8+S8q8ojSVGlpHyrE+q2OVlZXtqrRkD2N98MEHH3nkEf4YHx9385kd
mmDMZzBlVPSeYsuBWltb0XO5LYdGw/kKxcdtJZtkFUmvr693Eqp81tbWutHV
JCYPk3k8d3Z2Vustkwd5LofL83B1Qk6ocyqcImvOjx4O0nhuJq/uaBhGDmBW
axiG4QezWsMIj5dffllrIGxtbaFXMzMzvb29N27ccIOGGkDUsCwm29nZiVL9
zwE3ZtUhSH9gYEDTfUkTpdW+bKOjozU1NXEPse41SktSfX19jz/+OMZ68uTJ
Cxcu7Gq1gCc++eSTGq4lQTx0bm5uf/XjiJoOreKjmfQ8fAuT5RWyRDjHsRYW
Fqanp+vq6igCNeMGc9FbXtcCUFpl8UC1FFvG+fl5tLrRQ9OVNWM5dlI0p4N6
44xQgQj4ysqKDs2p1GIUyR3dMAxjV8xqDcMw/GBWaxjB4kwWA9rc3JyamkJj
MTKnSzJZPSfLW6ioZC2JY2ntI8lyrM/iYuvr6yitfBZZi1W2oqKiXZV223NV
ZBalfeqpp86fP8+HJycnd83b2tpaZWUln3zssceQX4ktObmn7nFosldQUCBz
7Onp4Vv9/f10RBMTE7FFQ2/JD84r63T5r66uJlcaRfWjtw6tlo/nNjc3a/kp
J9Sxnsvr1CcyjuRqSa7bHjaSaxiGf8xqDcMw/GBWaxj+Qaw0IIvjEHXgXF1d
XciXm+6rya4yWQwOk01OYx0anO3r69PIr7xVmozPkg09zapZzQ0NDcgjEnrR
28p25/O5AjUrLi4+cuTII488IqUFoqldP8zRUekHHniAz586dco9C6x9ee4J
AltWVqZBW1QRsdUY6K65WvBw46rONCkRESAVHviiTwSQ1BJ9IwdFvaXVWmnZ
HZ2/yXltbS31QP71TK4ey9Vgrj2caxhG4iRitWkJFA3DMLICWe3a2lq6u3PD
yGIINnDV7u5uZ7KxT7Bev3693yPAPWVILfYouBU+qwWjCIqQU73OofFB5bCt
rY3XR0ZG9kpzamrqoYceQlSfffZZl/I+06Gnp6f5PFZ74sQJV1g0MMEirKys
kKWSkhLNiOZvXrnnt7RFUdz6yRUVFdFo1OcPBftAJXDcW7ducYr32ilYta1z
rS0GzGoNw0gcWe34+HhcnGZWaxiGkQhmtYaRHNgi/uK8LJa8vDzMi3cHBweD
PShejL3GHot/xvqyNtPRW+RNSrt917sR3n0Sv3z5sgZqNaP4ojfXl15ir8/T
b6B4WPDRo0djLT5xsd32qhET1HfJ+f45jPtiU1NT7HJP0luKedAHk5NAE7+p
fDIfO708DiqQD6DDSG540m0YRg5gVmsYhuEHs1rDSBycEWlqbm6+evVqnL/w
Cq+jsUtLS4Ef1zlU7BHjBn/Jm8sVPntQs+vs7HzAI3agdn+r5RAIrCYhHz9+
/Ny5c3V1dQRmTqUTRMatMVCKQOYPVId8mK/EnZHEB38D4eWXX9Y+8hqujRtK
jpVuDebyyRSot2EYWUQiVmvP1RqGYeyFPVdrGPszPDw8MDCgdYTinqwsKiqK
RCKjo6N4nNvqNNiFg7SyMT6rQ1/0Hufkn7we+yQpmdT6Sxe9tYXX1tYOOv0V
Jz116tSzHm6slv5hnxFGDnHr1q0nnnjiwQcfxGr5FmqZRA3oqWR6IXKuAhYW
Fu718O9OOJyWmOYskILb8FcLZ/FPhH2v1bGC4uW76NFarXdN5fT19WH6NTU1
bqMiPQGtB3XJW2NjIz2wmlDYmTQMI5Ox1aIMwzD8YFZrGDvRirhNTU1ompYs
diar/XcIPFZWVrTPS0hL4BLAcKDnnnvu8l1qa2uxJPms+5h8VtLU0dHBt8jS
gZSW1CisSldVVaUhWolYV1fX/vNmcbennnrq6aeflgjzFfKTXHnJMwHbyMgI
NXzRW3CYrmlxcTHxFKS3nBROTU9Pj9JxekstkSBn9kBpJo0WjHJriEm6BwYG
GhoaqFun3vLcvLw8eS6ZpNVxOlKWT8MwMgSzWsMwDD+Y1RrG9t09TJGO/v5+
LbQbu1MqloffTU5OarldrdYb3lpA6Aw+qx1U5XfaAEgr/cZ+EoXUhj5SWrJ3
0FxREMxUT6dqRPji3d18OOKtW7co7D5f39zcHBsbc2O7F701lpMps4cbtKUs
Mj7ORRKarHSoLoJAp8lKkFqlxpqbm7WuctJZTYJYyZV6U71kD8l1Obx4dxsm
SS7Fb2xsRHJpnOTW9g8yjBzGrNYwDMMPZrXGYcbN79UWpRoSlVzU1tZ2d3fz
lts4Juy9WpBZjeU5ny0qKtIeQNqXNvbDOI7GkfkYxk0mDzpEK/hWXV2dyjs3
N8eh+RtXlRjes8i8SzeChJIT7RzkZ7jWpUmRCe2UIFlqaWlJOinpLfXjEnR6
Czij9Db1whi7r7FyiOSSSSQ3diXt2JFcWiknq7+/f3Z2VpPeU5xnwzDCw6zW
MAzDD2a1xmFjaWkJ7cJYi4uL0Ub5rJuq2uWhpSZf9EjB/ixTU1NkqampSfON
yUlhYeHQ0NDGxoY264kFDxoZGXFP0SY3RCuwKvxIR0SpyAAOhfrtPOg+4MXR
aJQU8vPzNcZK3vbZPygR9IDq2tqaEuQERSIRP8twKUEqan19ndw6vUUYCzya
m5up8Pn5+QB3XzpoDjWS+388yOf4+PjExES1R+wmuTQSqpo803q11Pbk5OTi
4qItP2UYWY1ZrWEYhh/Mao3DwOrqKpE/JltTU4MOxJosf6CxPT09hA3EDGjs
gZzOJxgWzoKkyGfxFPQKl9nVZ7c9pR0YGNB6v3yRr3MVJ+3dFJZDY0wkRcqa
fkxMdaCBS46OfmqmdF9fnzyUHCaXpbiUCeGUoPTT//rSTm8517HO6GwRtceg
kf30joRKckEdNbmlAeO5NNTa2lo3o0BzlaltKqewsJDmTXXRKpDc5eXlNObf
MIyDYlZrGIbhB7NaI1chqh8dHR0eHkZbiPn1tKzGvIj/Mdne3t6pqSmZbOoV
BvUoLy8nV8oSMkuWyM/m5uauw4VI7uDgoAaXNeuY6ze5WccuQQRZNkpSCKNE
KYmRX/Lc1taGeFIK6lPp+ByuFZrhfPPmTffQLskGNZzqnBFhRBVpJ25hLvS2
vr4eveWtDBkDleTSUF/wJJemguRS4WQ7du0pzoIkF0pLS1tbW6kxW13ZMDIf
s1rDMAw/mNUaOcbExARRQUNDQ0VFRbGHBrYI8vGUnp4ePoDBER5sbGykXmaV
vbq6upKSEvksueLFtbU1+fWu38JA0XPJC8VJYjvaOPCj2dlZEiS1zs5OXiFN
rfCcxFA12cay9SAwoq0Neqh5SuonkwKxxZoXFha0oS3Jjo2NBTtPmPyvrq6u
rKyMjo62t7dXVVVpDBTfRwz5Z0tLSzQaXV9fD/CgPtFPMTQbsk17pgkNDQ3h
sNQSTcs9lovhUmOc1uvXr3OOuru7Vzxs4SnDyDTMag3DMPxgVmvkAETpRAJE
7ITuMln3HCLOSKgvk0UBCAnS9eCkZFbZU96am5unp6fJ1f5ZktIWFhZqqjB+
53/0EE/k6CRYU1Oj1Kg6DbAmUT8o0uLiouYJj4+PUyI5MiX1mc9YEE8lqy1o
OaGBn0o8kdrgQOgtkkjj0Ux1JJeyIIwNDQ0DAwMZpbdCw7iEvlwLy8vLtCvy
39/fT57dAstIOpJb4cF5p/PHc2lOfD5dF4VhGA6zWsMwDD+Y1RpZCnE4d/+x
sbHa2loNy+ppU9kiJktgPz8/rzHQNAbtyieZdDIbiUSUPeRo/yEzfBbpaG9v
R2nRq46ODoTLf5ZIFuXBcSSh5AEVUu3dunUruVE8Yq2ysjLsD+l7+eWX3Txk
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
Vy2mRGcow52bm6Plk7fDY7jb3nMN6H9PT09XV1dVVZW2NqNy3EPKNEs9qbG4
uOh+AUh3ro1gMKs1DMPwg1ltKtG+GNyViJapeezV7flI3ILSDg4OBrW3SFrA
aLTxBxEXURnRqdvyQxs4Ujqi2XRnM3m4ZNrb2ykLVtvU1JSCFY8JZlSNBLSj
o6MBJp5FVitoORqx7ejo4CIKz3S4NrWDLYZ70B9e5ufn1eZnZ2cz3GppTiom
cpQubdSj05FIBLmmA8zPz8/zUB1WVlZGo9Hx8XENUG5tbfH5w2O46C0daXd3
N/Xj9Pby5csyXP6uq6vDcGmlyA5dE31vNv5OaDjMag3DMPxgVpsCCG4RPW5G
RI8E5IRqTmahuLiYcB3dy96AhJxj4hRwYmICmdVcWUIv4i4KSDxG6YI1srTA
9dLY2CilpZhhKy3ROxemlJZq5FINNv2ss9rtFIqt5iGXlZUtLCwc6MJUlaIe
WTGCpqWKaGMpHq7dFfrJ+fn5iIe2wkFv9UQGVFRUjI2NOcOVwWX47wbBwu2D
jpTKqamp4cRxIVz2cLu84b+Tk5MyXDrk7L2hHFrMag3DMPxgVhseBBWS2cXF
RU0zjhu4HPFIdzaTRzK7sbExPT09ODhYVVWlAhKL5ufnV1dXE4NFo9F0ZzMY
XvCUluhRShv2PqT4Gofo7e0NSWm3s9Nqtz2x1QOhiG1426DQbt0DtgfawZZS
k7e6urpMfqjWMTo6ql8JQp3UnRzE8Hp4obCwMNZwy8rK6Fu4IjBc7WRNN/uS
R7qznDqQegSWymlqatIYtzNcGi31Qx+lJab1CwCtMdPOr7ETs1rDMAw/mNUG
DqJHlIWSEFQgs9q5MscGLikjt9epqSm0i5hTBUT3CD4pILrBW+nOY5C8kFql
vXPnTthKu521VrvtuZjEVs/YhjRg51aOqqqqSnyNaz1W0NfXly2SpaeVsfiM
1XCC+cXFxfb2diTu2rVrnHouQ7cQARXe3NyM4c7MzCjgz5aaD4p7zuLWPkpu
jNsMN2MxqzUMw/CDWW1QEFoQLRAzEHITYLhdCIkuiMEIjwcGBrJdZjU4Sxkp
i1uiU65HATs7Owk+053H4OG01tfXaygEXwt7cxlNPCa8kdL63/V1L7LXamF4
eFgtkKB9fX09JLGdmJiQ9PX29iZ4iGxZKsqhpbFSsxKyf9zeZ3Q4VzxinzOt
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
T4e9UpkRNma1hmEYNxOzWqNumJiYIJ73uFKNG/yNxmoJpwn7CbMJsInK9Iqi
5pQO5YEd8InCLfkCToEYYjTlTql1VotdejmFsqx2aWmpra2NbyYSiVBLmPpA
rjgWxcWZ/hZsiezYWm02d0HpHnt7e7mm3d3dXvrbq9BUZMJsbQ5L8eaLrTJz
dnaWTqep0tRPLSTFz6GOI5dFfg71JiY1hCvLGcUnk0a5mNUahmHcTMxqjbqh
pq2WKHpycpLQurGxEUEYHR2leq+urhLGnJ6e/p8L8PnW1hYNQUsHSytIIZPJ
lH76IVktCZKr4t/kfOXm5Pno6MjL0a8C/ZQ+41a/BVNaynZtbU1JeVxE15fV
ZnPXFLuU2PJvqGIrKFJVQgqZJlNQLDLHg4MD7jUUGg2Kr8VKG53bKod6lKRM
hjrebYSEWa1hGMbNJAKrpROenZ3l1kCQ4MUOzGqNS6lRq8VDp6enUTykpq+v
j/a4vr6O6CmAKfKHnCZfQ4hQocHBQY3bIjI///wzIXopeSZyI4Kibba2tno5
FwSBQrtWkzllmjAZ1pq94e2xQiFsb29TqjrH169fB0yQMl9dXSU1+h8vORQn
JyczMzNerDabO2vNDdbYtJddwotDPZTYasmvi3WPS0xYzq90LcgYFX58fDw+
bkueyaHmS1Atlcmurq5YZdIoBfrP5uZmalqQBRbMag3DMGqOCKyW3pgwm1sD
cayXBM1qjUupRaslYJbfaTLDxsYGcUu5+ZfeEstpQeOWlpbu7m4aHa5U/A/L
mjBcCqUM/pJVTEHKEOrWKly1zc1NjiKlRamCHyskq+Wi05sRis/NzXlJ8PT0
dGlpSWpGrfCSZnHyxfaqhb8oPRR7a2tL2qjZ9eQzAu8uHTJ5fHycn0m5bagr
Sxse8bJsoFmtYRhGzWFWa9QNslpCgvPzcy8Jhm21y8vLRPVuyJLYPkj45NyW
1FpyvHjxAk0uEtp5t1pKnvi/uNUmEon29nZMgVMO73EBZ+2Uln+9KG02ZKul
JnDJvCTIlc0X28XFRS/JFseJbUdHR5EVrf/xj39IG6empjRzvr+/f2FhIVZu
q0zu7e0pk5wUV3x0dNTcNv54sdqPHz+6TcoqXo6vXMxqDcMwgmBWa9QNmtxY
waJJVxGq1e7s7BDMu+VqfQ0HEPZQAtPT01pFipZSJHEiN1RCkZuXxWndBrgz
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
oJLwv2HMv9XqTKQf52n89EI///xze3u7XrZFjhCQyKo6mtOS45dffolzKQWH
CkYz0TJZlDZ3AY8pc8m4ds3NzYRDvpKtALNawzCMIJjVGrUF4jkzM9PU1DQ1
NeU3ZTf9mNgm+MqiRJhaqZvIPyZzbjc3N//93//988u4nePPf/7zZ//8z7eu
+O/f//jHv/zlL5f+Ody6devf/vQn9+XP/+Vf3H/65M9/+pPHsZVqwWXVaD7C
5XEAuuasNvtJbDWcWvHOzsWhNH744YeBgYHj4+P4vF17KUhWd3e3SoOuCQGh
1UfgthyFfkZiu7i4WDeTIgrgvNA6t0IUcYvHxAmEUqmUHlX5fVJaLma1hmEY
QYjMakdGRgiq/aZpVnvT0PRjief6+rrfxAlBqU74MnU1eGqEYZlMhqx631G3
YmiADx8+fHc1WO3m//pfmX/6p0v/e/CHPxA/X/W3W1tbqOtVf8t///mv/1oH
Vgvazri9vd3j1ja1aLXZ3Oj/5OQkpUHmT09PvYsnYTwKE//hWnF4eDg7O9vV
1UUf0tvbu7KyQv4j0EyJrXpF+pywDxc9lOHu7u7U1JSm6OC2HhOn0h4cHGig
lsvnMeUKMKs1DMMIQgRWu7Gx0dnZ+fPPP3vcW9as9mbiph8Hf++1AGIbwmaC
cyLS8fFxL2mS4A85YjKGYlbrBbNax4cPH3799VcNUGoesvdDaBO3ubm5+Fut
oCFo0SHKZHh4OJ1OUyxhD9oiO+pqaKFx6Go8QtGh6pSknhDyg9/3Xs/Ozqhj
GgKu7kBt1qzWMAwjGBFYrR4jm9UaAdEyRAMDA0TRYUw/3t7e1oRhX5sgE16q
8kMchmvNar1gVluAltkB4m3vw7WahEzi8Z+E7OBqzs/PU0Oampo6OzsXFhao
KqGKrXuLPz4zQ7xwfn6eTqcxWUqS8vS+RgE1irCkr6+Pewohit/EK8Cs1jAM
IwhmtUatcHZ2poHajo4Oj0Ih3r9/r4Fav76s4VryrOHa6oblZrVeMKu9SKjD
tVqIqYaGawUtYmxsTM2/t7f3119/DXUUNf9F/joYruUU6JPn5+c7OzvplilJ
ytP7UWI1UJs1qzUMwwiGWa1RE+ihugZqvT9U1+rH2n/Try/nD9cSlld3502z
Wi+Y1V5kZWVF+hbScK0WW66h4VqBg9Dq6bI0aJtKpcIW21i98lAxZJ6y0grY
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
Wm/3q7fh6tPB8kkYr5CUiPbx0ZKD9ITxrzBmtYZhGEEwqzXiA0GINnKltoS0
bA5RAXVG254S54RxiDhA5LO7u4vEKcLk3/zZgFcpbTY3xPbXv/719u3bbmkp
2tqlQkqISMgqF9Prk3wtnU47bXTyuLi4uL+/H+VY7aWQATo6Ljp6++LFC01O
Vg41eRvz5QtEj8WzalZbClQJ1TcqiV+boFbTRYT0xn21oJWpNu7t7fltKZub
m83NzaRMxfaYbD5ca64yDqtF27QWenV9lv6NE+/v729qaqLrozOMv9JmzWoN
wzCCYVZrxARCI71O29fXhxyFEYRIxAi6qDlzc3NhD15UC4LJhYUFvUqmCBOV
29raGhsbQzSKKO3x8fGTJ09u3br11VdfudWSiwTDbrjWveR4fn6u1W/yrZar
WXWlzefjx48nJyeEjsvLyxSO01t8HGPik1QqJb29VOfla37XGas/q83m9JO6
Qa2jXnlMVgtG0f/XwYJR+Wi4dnh42O9wLY1diw+H8UIHbYHLwSWWz9IbqLep
7hwYGtHs7Czt2iltzCceO8xqDcMwgmBWa8QBbtZTU1NS2pCmipEmKcvCCMPq
aaDHoe1cZRNE/kR0tD5FmPy7uLjo/vdSENLbOdxALaJX5IU4ktJcbjcJGXvN
ZDKah0xU6QJ1PoyV2Do4hXy91R64Tm813lRQG/mkv7/f796ydWm1eoLkhvJ9
oQWjuATYisdkq054w7V0et/n9of12K9SUeWzNH/5LOlzRar+TgfFSK7UkCcn
JynMWlHarFmtYRhGMMxqjapDrJVKpbTF6tLSUkhDqMjIxMQEVRHXC2l3yOqC
flKMKGRLSwsqQbvmNJ2881ukvmCPnnxQD2T21q1b9+7dc3sADQ0NFbkc/ApT
5msdHR1Ofokh19fX9ZKgBISf8eXj4+N4iq3QAPfo6Ci6pH0tJeZ8SKxO5jlZ
DaKZ1ZbIzs5OT0+PRgk9+tT29jbXhbKitvtKMya4xuJ3e1m6ApKdmZk5OzsL
nhpixf13dnZWQ8C0fXoJDDcOU1/IG6epTavpCff392tIabNmtYZhGMEwqzWq
DmGqlJZIqYh2BUE7J7bnwLnCOEQVQRmOjo5oy8SZFGN3dzfRUUGQiZFdVbYf
P37UDiBffPHF3/72Ny19LK3D8n67sK1PPrgwYS3HXV5ezj8W8TnhZTY3sia1
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
cO3EmEwm09bW5qulX4vz7vx8ms8Wx6zWMAwjCGa1RnC4z25sbKBOWo2E8Mn7
IYj8OQQxEjYxOTkZt91eymVra4tgVe/ShjTxWM8ZdFFoJpdOO0Sd+FxW6yXa
PD8/18uAIa3hQ8OXUZLh6enpvb296BUvGqvN5q4OxyLE5XBdXV2aolytsw6I
W6qIK+glwZtgtdvb262tre51cpoqpcf5Uoxq12NjY5q3UEpq9JnBN8C9Fmos
maRPo88hk3ogQz4x3Di8FB9zzGoNwzCCYFZrBMTZE1eZi0I84/0QUlqtEozS
1nR0RFhC6NLd3S2l3d3dDUNpgRLDkmgjNMCr3qT78OEDGZDVejkotrW4uKj3
5rwkeBFXgNqNaG1tje4rSssLyWqpD8PDw1cdcXNzkyLFbVVtoj/rgBCoUxvN
assi30NpwpyvNjNSSfK/9ISlP4wikVDHavOlW3sS0fnQXb969aqme+woMas1
DMMIglmtERDZE5cY6+Rn76/Tch93A8F1oLSzs7MaauRcwht0I8IcGxvjQDST
IkFsSFaLeQXfJ6g4W1tbo6Oj2gtpeno6pCncl+LdavVC+rUJym3Hx8fdWeML
XOiacFuz2gqQ1TY0NFAx6C70Vmx/fz+nTDGWu+jTycmJXnmg7XjfOEyTKJzP
8q98tlrrLdcoZrWGYRhBMKs1gpDJZLSEr5TW+7AjN3E3jVZjE37Tj5J8pUVJ
Dg8PQ1r8R8M6ep1Wu99e9U2C2/X1dfLT1dXl5dCyWo8JFoGYXzsWcTgMl1g9
pFHvArxbbVkJ0gQ4656enqamJpRnYmKCE4//u4pmtRVAoT1+/Pju3buIrR4b
cr/b3d2t+HJLOVdXV321FPksAqvbMTnUIDL3AvPZCjCrNQzDCIJZrVExVBvi
cLSC6HphYcH7KG3+xOOQXteNDKIRBLO5uTnslY4oNEIjt7lS8djSDa1eNfe1
XEgwmUx6HPwtztHRERF1W1sbpzA2Nra3t0clDHvssrpWm82d9dLSktbh0Ymn
Uil62jgP2nq3WjofLe5NffOSYKygStBFcGv+8ssv//KXv2jaOWcaUBU9Wu1/
5+D+S9XVLYDE6XC40OazFWNWaxiGEQSzWqMyTk9PR0dHFc9ca08V4JQ2vBWo
okFr/rjFe0PdlYZCQ3C6urq4LojPtc8ZnNUODAx4yYD3Kc2lsLy8TP4RHE58
YWEh7NnIVbdagduiOTpx2iAppNPpaEarK8C71eoWQJqk7CXBmKDVlmZnZzUJ
4Ysc3KO97P3txWrls3Nzc/LZjo4O57Nh7OZ2ozCrNQzDCIJZrVEBhFiUvFNa
78FM/qLK1J+aVtrj42MpbWtrK0p7fn4e3uG0aKq2UOG4136fzJAlrHZqaspL
BqpitdncTPjx8XE3GzlUv4uJ1QqdOFqhtwBSqRTX/dItnKqLWe21OFvUSwrY
Ym9v73fffff06VMuq5drGtBq832WTMpnX716ZT7rC7NawzCMIJjVGuVCfMXV
bMlB+XsZRChIn0jJbeJTu+/SorREIASB1P/m5macJVSlpdwoLgoNsSUMLiVw
ddvL+mqeWC2eJauNeELs0dERLk+d1HTNra0tamYYeYiV1WZzJ0570aBtZ2fn
1NQUlyBuYru5udnV1WVWexVcr5c5uIjc17iOy8vLXEe/e/Fo5fBkMnl2dlb6
X9GPkT3NN3Y5BDoNKl7calpNY1ZrGIYRBLNaoyxwJae0/BCS0nZ0dNST0qKZ
vgzoKvKvS4lKm82zWvoBjzmR1Ya6LeZVuNnIZKCnpyedTpcVwJdC3KxW0FLw
WbpEDaKtrq7SvcfnTVv12FS2/f19jwnWutXSS9BeJIzqKLiCWKcunPcdZrWX
NJWtxPWmlL3j42NlLz+H5rNhYFZrGIYRBLNao3T0GibepNE971GNU1oOUetK
S82X0hKXrq2thXo4Ik9dl3IfNTirRQY9ZqaKVpv9n37HvzMzM34HbeNptdlP
K5LpbXdOnB92dnZioh7eJbTWrdYJo3oJCSMdBVfQ1dUqWi3ZOzs7K8ieurL8
HBp+Mas1DMMIglmtUSIfPnxIp9PNzc3ajZTK4zd9LZ/b2dlJ3EUoRUTnN/3I
yB+lpYoSBIZ6OMqNxvVDDty2rDfmUJ6hoSH+kGjKV36qbrXZnN9RlyTs5KS3
tzeTyfia/h1bq3WpUffUTjWsxomHtDpZ6XiXUGoX17cWrZb+gTarpQnUUrhY
OOPKykrBN6titWSPCqNapOzppQay52v2uHEVZrWGYRhBMKs1SkRKy6UMT2k1
vkY0Ff/9N68iYqXFVpaXlyk0FGZhYaHcRWBkoC0tLR4NlDTJDMn6mmtaMdQi
bWhLfiiiqakp8hbc72JutdncJdjc3BwdHdWzDi2fVd3xNe9Wq+Wnurq6astq
1T9w2xoYGJAw4q0XfVZEbLXy2aOjo3yfJQNhd2KGw6zWMAwjCGa1RikQ7VDa
Glbwrpx1qbQRRIMczo2ej42N/Vb+o4YwrFazmknW46zmIBClkx89kGlra6PE
Ag7axt9qhealq3rolQFOnDrj8RClE5LVelx+KmwKxkA1AFq8i4jMaj98+CCf
5Qtu+Lizs9N8NmLMag3DMIJgVmtcCwEPpU1sTKjjfdAnX2kJwmtXaYkMaUdO
adfX10M9HEHy3t7e06dPtY9PZaZ2E6w2mzvN7e1t6lhTDoqLTyquxrVitdlc
46KScL4azR8dHeV/qzJoe5Ot9qIz6pHXtS9ZeLda7vX04flWS95osNSKAp8N
u/syLqUUq61KoGgYhlETyGpL2dqyMhSweQ9xiWRGRkZaW1sTiYTHZI1LoagV
8BD8eB/rWVlZ0RarL1++jMnKNpVB1Nrf3+9WfQn7cAS6uigE9hUPPoZhtXoG
EiurFXR3Q0NDLnSvOHv0aTMzM9qqyUvGvCdYgBZ5+/4TVbku6rE9ThgmHVIj
zfhbLTnUjtX5q0KV8ocHBweyWl/nyHE5OplxVqvr4vJWi+8p1xOy2s3NzYI4
zazWMAyjFMxqjSIQD3PhFPAQGHsf5UFpNTXUlLZcXCAa5FHDjbLa7KexS1d0
9CEVnLh3CVXlCc9qs58mq+u66MRD3Tr5It5vBLLa0jepqQrkjXw6bcQZy+oc
QrJaKhtVToPd5rOxwqzWMAwjCGa1xlXkD/Fw+Uxpr4JoUEpbbtRaGfiIr9Hz
m2a1wuWwsrodktVG8Dwk/yFVSFMvrsL7jUAnEmerLfDZCpwxJKttaGh49uxZ
/rOd+I933xBKsVp7r9YwDOMq7L1a41LcfjFulNZvADwxMYFMSWm5TVdrEZvg
bG1t9fT0NDU1dXZ2plKpsF9axMjGxsa0yDBWEmT9H7KaTqe/z63V7LH8Y/he
bQHaKtQN2uKnFGkmkylxeeR3794NDAxQaKurq17yQ4JYbQQrZmtPmfwT5xqV
u252ZXi/EZCOrJaUvSToEfqEvr4+rdNFJmkOlfUM3t+rHR8f/+tf//rll18i
tiT74sULKgMNtuobPxnCVosyDMMIglmtcRFtTasVZihn76aG0ire4/IRVNe6
0nIi0Svt4uLixxwVp0Zud3d3ZbUeM0myiUQizlabzfmd3FazEbQSWomK511C
I7NaoRNXRdK+PxEsIXVzrNb1CfJZaWNlxSurRZCpIUGyRL3SVuCPHj367LPP
7ty5g94eHR3FYSNjIx+zWsMwjCCY1RoFaAjP7Rfj9/07Uqs/pa14LKYsKCsa
kUzEyzvO4VmtVBFd8phsSGjskqyqYCmK7e3t4mVb61YraImajCGjv/asA0Iz
X1pakocGdLRsrsR0WyHN+HQg6+vrmKPeqnjx4gXaGHAYdG1tjVpB3ai4xFZW
VtwK8+Tq66+/vn///k8//XRwcBCfcjMcZrWGYRhBMKs1CqBWEORLdrwrbf5Q
Y00rLfl3SpvJZCJQWo74Qw6akpfDhW21IyMjHpMND20k6ubbYyUavrxq3LY+
rDb76flVW1ubzjrsfbXc6Orh4WHApEghjNtKxXDhnM9KaY+Pj4N3biRbsdWu
5CBLqtXcKLm+CwsLLS0tQTTZCBWzWsMwjCCY1Rr5UCUmJiYIhDR84zFlxGFq
asqFWO/fv69dpV1eXu7o6EDPBwcHEcOwlZayovkQjmqU1teLkGa1+VCqRIyq
/IDrjY2N0QQulnbdWG02d7HcWVPB0PlLT9kL9Wq16+vrevsVZmZm3r59e3Z2
5mVmbwVWywVFZn/66afWHGRpbm5OaxdwWVdXVwMO/hqhYlZrGIYRBLNawyF7
ckrrUdac0kKtr3gspaVKT05OEmZEprTgUWmzZrWXQZe4s7OD3Kmu4gVU14OD
g/zv1JPVCs7aPTbhlFOpVBiDtrJaasXm5mbApEiBdDo7O1+/fu0jaxWCz3Z3
d3Ph5LNHR0e+fFaUZbV0FPgsZaL86OGh81k9Qgwy+GtEgFmtYRhGEMxqDXF6
eppvTx5ljWrmlJaUa1ppaS9S2qWlpcPDw7DXWsm/KPzgdxDNrPZSyP9vObel
0lIylHx7e3sikXCiR+ejwVxfK9NW3WqzOSfilDWpHrHl3AtcPjgYKM5Fvx18
X1RSIJ0qbrFK4aytrbkh2rm5Oe503ieflCihXLvl5WXns3pySHV9nyM/V2a1
Mces1jAMIwhmtUY2FxdxJ8XXiOEVEflK+ezsbHZ2VsuVEPvFdnPJUnATj+fn
52kyYY/SEr3QatxFwXD9pm9WW4Tff//9+Ph4aWlJ5sK/k5OTyWTy5OQEmdUn
b9++9XKsOFhtNnfKhM34LPWNzIyNjW1sbFAJfaVPD4OHerFargsCXhWrpXpr
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
e3x8HF5Hvby8LKsNMsBRAIENMbPHCLO+ITpCo4g2g8zcK+Dg4EABEgFq7Spt
Nhdja0hlYmIi7GO5uZp7e3vVVdrsp/2YNELtN9m6tFr1YxUv3nsptEdM+fHj
xw0NDd9/QmuJe5xTERkrKyt6x5auZnd396oa/vvvv6PA2jzr2gWaSFMGqk6s
v7+/sk6My6e8AfWzsn2FimSSS+bSV6/IEQNeRJ2yxw7Wddq1WLtuArLazc3N
gjjNrNYwDKMUzGrrnrW1NQpK65R6fIUzYJAZE2gCep3Wr9ldCjVWSktQXXWl
zZrVloM6HE7q+fPnfpPVpj/0jXgW5abaKLfF5ug8a2tYjTPSVOSCDue/c+R/
TRXv2pWQZcoUy9OnTxsbG8udbaJBXl07Xb50Ol3iJkTXQt7yZdn5rC8JNau9
aZjVGoZhBMGstu756aeftJCLx+EJFx15nNIcPUQIep2Wcwk7zFMriI/SZs1q
yyGMgVqqn4Ys81/U1URZ5CtflChJjy4WNjQldQ75/cN/5XDfcZOQKdLiqbnp
DYKyGslRyoVwVdFj05Mmu+bsoCfhGvlt2ma1N41SrNbeqzUMw7gKe6+2vnEv
ux0fH3uMint6ekhzYGCAa1orwXYBBNtra2s//PAD5ZNMJsN7jZFA183MpLpy
3JiUmL1XWyJv377VYF8Fm9EUgTB1dXWVwqcTdtWPusHPVJKdnZ1EIiG91YvY
fHNsbCwOc9eLox1/tOK6tn6mu0bN8pdJ5zQzmYzqXvE1gQustikHDfbaZYG1
1rFbbpo6GbDpaXM0MtzS0uLGZ2nRpIxo6FVov03b3qu9adhqUYZhGEEwq61v
FMPMzc15HFElCpUpb2xsnJ2d+Uo2Yo6OjgYHBwkap6amwtMEhdaKgYPH1X4x
qy0RXAaTQmlTqZTHZDc3N6mBl3ZiclutQYTG0tfJ7JzeYoh8HttpEgViOzQ0
1NXVReYpSfcdonT6Jc6l+BJtBVYLuB5KW6QdUSzUQFLWkk1qdxRmZU2PvyXb
FLgSdDOZJbPaxCekRm1We9MwqzUMwwiCWW0dQwyjd9z8DtR2d3fLlKk/8XG0
siA2IP9EywTe4QV4xPbpdFqRMNU1vOi3MsxqS2Fra0sDtUtLS36ffqyvr+N6
vb29xVdMos7gtriVlvBVdXJ6i2tjxzFcrk0jzvPz8+S2sbHRTaV2w7Vu/j/9
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
Vll16zvhiVxTWSEi/F858OKLDYovjJXA6OgoHt3b28sPpH/v3j16rfFP8AV+
y6/c91tbW+/fv3/37t2nT5/yq0sTlLW5vOVzcnLy/38impWyAmJWe9MwqzUM
wwiCWW1dEobVavmpycnJ3/wtyBkZbtrnq1evvCdOpJFKpdpzJBIJ7+mHhFlt
PjidRmk7Ozt3dnbCUFoN1OIpcRioLQL5fPfuHXWD3pX2srCwQO9N86e/zX9N
lf91novk0s/TyjDHjx8/3rlzh2/2X0Fzc/Otf/7n7v/9v6/6789//nOR3/K3
pHBV4hyXo1e7CP1gVnvTMKs1DMMIglltXUJESuCHrXi32rm5OY+LKkfD+/fv
tfhqX18fJeM3cfRna2trbGyM+HN8fDzm6x7nY1brIFakYj99+rSlpWV2djak
Gp5Op7u7uzlESG92hwFXUxOVyfzLly/n5+eHh4f7cuCPWhjNeS4frq+v8yd4
JY3i3RVwR3jwhz9k/umfrvoPqy3yW/6WFK5KnOOa1RbBrDbOmNUahmEEway2
LlleXtZsYY/LmcpqEZaaC4dkExRIGDZBIK2SGRgYyGQyfhMPFbNaIaWleqBp
4SktrYY+EKUdGxvz/mglPGgvb968SaVSb9++paofHR1x1+ATAuzXr1/juYlE
4vnz5/39/Sgthsvd5Pz83KzWC7Zf7U3DrNYwDCMIZrV1iVmtQwO12ERIA7Wv
Xr3S3OOaW7jMrDab28dnZmZGSou7hbSpTTa30pEGai/diSbOHBwcUL3JOepK
l4IQUed//fVXFJIYW70BP9O9Lyws8OUPHz6Y1XpBVut3KQCz2jhjVmsYhhEE
s9q6JDyrjdsqN9dCmN3b20tpzM7Oel8nioYzPT1NsQwODtbQ3OP/y96b98SV
rPm6X/So/+vP0Do6fY6OdG/37b1xlavK5fJcdtlgDAVmNpBQzIipSTYghmQo
BjMYkEnB3Vxj0zb3OfmTQ7mTwUmuIdfKfB+VEIUhVqyY1vtkxIoQ5Wy1X758
0draRCKhEpibmwviXVpBN9TWx3TJ6LST//rKx8s4PT39/zIwbqNXOcfi0Oa5
l2QyqU2MP2QC77OzM+1XHAWrVRUHV6chYFZbbpjVGoZheMGstiQJzmo3NjaI
Xf1KMwSWl5cbGxuxzrW1NX9T/vz5sxJvbW2dnp72N/EQKFurxXcY+tAfCVpd
XV2gSnue6Y+1GWgw4diEnI6umi2qiod1ZC1BMn15LcPU1NTkBQYHBxNfaWtr
u/7sV35HK6u1t3DRrZbbZ+jj1rhHSfeHjBpQCE69o09wVptKpcxqI4hZrWEY
hhfMaksSW4EsCOzHx8e1BdD+/r6/ibuJWhKPzgRc/pSn1WI0hIW0CnJYU1PD
GEKEH6jSMsxq6+CJiYmTkxO/kiXP9O6ceVXS18k1+B1Ot7q66iyVoV6KetFJ
X10Gveb3DHyjQ2wvpa6u7vXr1xTj/Pz84uKiSrLoVou64rPZ0i0oBB4ZlFL2
zHJk8d1qqR01xShvwV3OmNUahmF4way2JDGrFTs7O21tbS9evCDe9nf5MfGh
m6glkPYx5dAoN6tFYbC/o6MjKS06hjUEfVFKQ6f51NfXF/a5SvYiYQJaTbPC
5ubm9PR0zrxq9sk72dKqHdG1ZbE8FPhljaLkcPgCyWRyMQMDOCNJdoJKjT9s
aWlJpVIHBwc5eS661TLuYdnc4OuvcNdkW3re0dFBWdF/KUaKlF+Opt76brW0
QIrCrDaymNUahmF4IQSrxbB4jHIVxmS/0jSrvR6zWkG0T/gdxEuvRPJ62XB0
dNT313XDoaysNnuKVreM9YRw3d3dXXxWS/ev7zjk8HMGaaybh93KgMBSqt3d
3dnTptVfcROsiFvtV6SxWAw9F2+dyzCfYS+DVgt/k9PTU/7Q2TEJktr15z4X
3WqVDW5w7yvcNdmmKDT7TKFJbxkkEfOTkxPKPGpua1ZbbpjVGoZheCEEq5WB
Eo/5aKBmtdfDw5FwKJFI+Gi1xITxslpiWk1dEYH7m2dSpuOQeHNzs++v64ZG
mVgtqnJ2dqbje6RmBPbXS5lfcF21QIriQ9bhLBJY2Su/I4ElWKU6kF9KL5lM
5iwVzrZXN/GKkfVnmJiYkLTSGiVx+J1fd0FSnZ2db968If2lpaV8/gSv5Dd3
r2BycvLev/zL2j/906X/rf/TP2G161f8K//xt6RwVeJc9/o9kDE7yoenXn19
vdNb7g63TafTkXJbs9pyw6zWMAzDC2a1JQlBCwEb0YuPNkdMS4hFvB0Xq6UQ
NE1GEOtvykQXhMGxnqg9Lw+rxVCOjo7cFr6h+ex5phx6e3sloUSkzmHpPngi
JY9/UVAIqdrSpQJLL9aaYZLCXgl66YY7Ozthbu1LC7/pGvtffvnl//kW/5Yh
+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
YFZbwvAERD8pqIWFBR9nkZBZlFbJ+r4dk3cIPonc8Bd/8yaXL5nlx+eRt1pp
IyqabU9UrgTqm3+OpTLgzM3NdXZ2Mv6oxWo2EE0YGxsjqXQ6/fcMN/30g6a1
uLioNMtKaVUp9AK5vIqRe6eokdO6urpHjx719/fzw2uWSVB609PTepGBFNx6
cllt+Mcc58nZ2RmaSSZpTuFc0ay23DCrNQzD8IJZbWkzMTERxLyqm649ODjw
MVlf0C37vlWUDq+cn5+PoMgXRmStlhLWNKjTRmdP3/zbnZ0dTHZoaIj60guz
eh0SNaBhEMwrHS+aQPYYf8gbGeMe88xY3MFnuVMqghvHPTs6OpzLa4SXllLy
R0dH1893M2i8zkClZE/UCtQ4rHu6GV++fEmn08pkONO1ZrXlhlmtYRiGF8xq
Sxsegm5eNYjpWvwlapbX399PKDg6Ourj4TvZq5pLY/nxeSStlrak2VW1Ls3l
fVMbcY2NjY3p6em+vr7W1lZqSu9pypvIDBpFCt4/2KEHcSGyR8rkjcEz0JEz
OlAvxNuaouXG8Vk6wvHx8fLyMgO7lBYFy2dlOH+o5kExIlnZE7WO0O7rpoQ8
XWtWW26Y1RqGYXghBKslcm5vbzerLRZDQ0OERsSQ/uqnkqUKVldXP3786GPK
HiFL1dXV8/PzPlr82tpaXV1dfX19Kc3KRcpqKVgyMzk5qTlxmlZvby+GSxx+
zZ/wr/zO6Ogov4zPSmb1GRousLi4iBGjUX7c1v+53Pr6uuYWKbGBgYEILlTw
Hbo2BUghq1tRyBMTExT758+fcdiuri55KHXN/37zAx9So1JIigKkgqhxakqL
zKuqqnSybZStlhvc2tpSJmlaQX/AZVZbbpjVGoZheCEEq+XpT+iC2BIa+ZWm
WW3+aL0fxUVM7qN+kiyBPdEpteCXOPiCZn/83QBZq5r7+vo+lMTuxyIiVkuc
trq6Sugun5UwMlZc5Yx7GWZnZ/kTLuG2z+XPh4aGpqamSM33VcGkxpjDJfRJ
DlcpB6XlrpHQ/v5+nXxE+2cMOT4+3t3dnZ6exkb1Gix1kafiIVM8C/SRxd5X
Njc3sVrtE4XHNTc3R/mzo0+fPnV2dqp5B73ltVltuWFWaxiG4YXQrLapqWly
ctKXBFEzsq01bFFb/hpN3HStv/pJYC8TIfSNSCDqNsjydyYliPnfolN0q6U1
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
W1tbfRFbs9p8wBaJzCl5AuYnT578x3/8x1/+8pcXGTTjRl0QQRVsKN6tluqj
a2t/Y635JA53PltYmqXH5uamNs2jfBhae3t76a1VVVVUK+Otj4vwr+Ls7Eyj
BKyurnrsv67ZcEd+5dAvTk5OGKMYqRhbwhwKzGrLDbNawzAML5jVGhdBbFEb
Qjhqrbm5ObhyXl9fV7g4MDBA2/C4oNSs9nq4i7dv305NTXV2dqI/Wq2K0v71
r3+VhM7OznrfwsuL1SqHk5OT9G4ySW3yDb62l8FLrkqJg4MDmjrF8vvvvzOo
0oPaM+h/qd8Qzm2hlpeXlzWHLkvyOHtOq9va2pIjR6quP336ND8//+LFi/A3
szKrLTfMag3DMLxgVmtcykWxDWi7JMRW79hKbL1cZW1traamhkjbr7WXlIAO
uIm71ZJ/+vjq6ip9EJ99mkFWW1FR8csvv+CzfqlEYVZLtCafJYfar4wOTpMg
V8T2vmSsBKAo5LPaiZey4n/dCmT+lyoOYZaWwWF7e5uORrellv1SJPxRA07Q
Jx3nj1uoT64o9pBl0Ky23DCrNQzD8EI4VktgQNzV0tLiy4EIZrXhILElwpTY
Li8vByS2m5ub9fX1XAWLIX4r+CpuatWv0xhLw2oJhOiAQ0NDbW1tT7/y7Nkz
lKSuru7+/ft4ro+Xu6nVkj1cjEhbPstAQTNA1qjNg4MDHzMWaxCc2dlZilQ+
29nZOTU1tbS0xAAu8ZHShtBQqV993kX70TS6XynnTNcWfSswCpOhSWvgaZPh
f7piVltumNUahmF4IRyrdUdy+OKhZrWhoR1otccpYTOWEVCo6aafJiYmaI2F
XcV3q437CmTin8PDQ5QWn33+/Dky++DBgydPnuAjzc3NKJLei9R5tX6Rv9WS
PVoU2XPzs62trdg30uRjfuIOcSztcGxsTB2koaEhkUikUqmTkxOd3K3Tn8N5
l1abHqvZUFnr6+v+pv/p0ye30/XZ2Zm/id8ImjEuOTg4SGehfaK34efBrLbc
MKs1DMPwQhytdnl5mWc9HrSxseE9NeOb5IhtEDO26XTazUMhtoUtITardUgY
sUt89rfffnv8+PH9DHyPB/X19RGlu/Nqw7dalz0F7Xoh1Hw2G+1GTgvE7zR9
2djY2NXVhc+ifjRIhkEpLV/DVFpELyClPf/6MZrulzGhWDtdS2l5xBRRac8D
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
BSe7vLwspeVrmEpLnCyl5dLk4YMfe6wZfqHNnRYWFnz5YM2sNvqY1RqGYXgh
NKvFcYaHh32x2vOs9cxra2veUzOCgMj86OhIR5r6uxT5y5cvhHlah0zKOSfY
zs7O4mVdXV08/b1cpa+vj2ifdIK22sXFxefPn+OzFRUVlZWV/O/JyUkIKi2r
raqq+vXXXylDepM7VpWype6QWcq5gJW0pWe1BwcH2KtO6nE+yyhEkOnxfWcp
rUoepaVGwlRavUurfXHDXGlvfJP3799LQv2yWkZgBsb29nbvW1sYAWFWaxiG
4YXQrHZvb29kZISwbXp62ntqxIE88f1yZCMgPn/+fHh4ODg4SGzW2tq6vr7u
V8pah6yF6Dkn2M7NzWn1rMeX0ZAyAv6JiYmzszNvmb2Szc1NgsynT5+itD/9
9JO2wPoQ1nwZoTKmdvfu3R9++EGzQkCR7uzsEEEVLDilZLUUBSPM5OTkmzdv
GHBQ2srKSr7hBvf3909OTjym/+nTp7W1Nb3TitgyrIV55AptW68DMyZzL6a0
kcJNrW5tbfnypjNjCyNMIpEI4tg1wxfMag3DMLwQstXyVPVl42Kizc7OTr8c
2QgOia30s6WlBR3wK2WC8HQ6LRfL/nCD535DQ4OiQS/TXpo+I+WANs8hyHzx
4oXeoqVfpFIpgpZwpAaZ4nL0IKTm1q1bOPVoBjqpF58VpWG1m5ubQ0NDra2t
+L6WZCO2aCDieXBw4HEZgCARp7R8DVlpqSOteTaljSay2ra2Nr+mVsfHx3WW
t1ltZDGrNQzD8ELIVltdXd3X1+dLat3d3X6lZgQKVujmVQmkk8mkX2HV2dmZ
m64lEnAOq5lHwvWC1/GSQ/kyUYTvAf/S0hLe/ejRI4zy559/RpcQ8OBmhB2E
Q5QSPktkSwa09vju3bvk5O8ZfLlKrK0WmaWIGFXQTM1j9vb2MnAtLi7SJHxc
GU5dzMzMOKVFb8NUWvqglJYo2pQ2mvguodpReXR09Pj42JcEDd8xqzUMw/BC
aFbLJWZnZ/3auJjUhoaGbBvkuEDYTCjFI1srLdvb27Ml1Euy7tVdTNYZB0F7
bW3t5ORkwabw7t07Tc/5/n7r/Pw8Lvndd99VVFToxXAac9CvUhIYz83NdXZ2
ckVNZFM+Y2NjiNXz58+JdX28Vhytdn19nQbZ09ODYFJEetUUn+XnNDC9POvj
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
Ggty9erVePCVV17JnH58nhw+fHhR1UYqph21V65cidc6cxZPFMsSK63uG6c8
x6fZOz3ZOV2SOt2gJ72Up06dihd3Y17TLJY33iHxrkvnqldjtrOz8+zZs/HV
dMb3Bj+kH1jE1aIAcqhaNoJ0wah0vdbou56enmoqpkvcxAZ8PPIUwbim0pV5
In9iO6R6gdzIutS2k5OTK59ULH78GKaw3b59e+T8qodtjHZ6ejpdPmjPnj3V
B2dmZtLIY83nXIo5NrcW3dYnJpiyKx17vBZ5+PgVt1Y+lxheRHdzc/PCmI0w
jE3HjXYLqupVy2Jh0xWM04Bjqav/20fMwqamagFyqFo2muoO3NhQ7+/vj1CK
TfdqMEbexoZ9bN7HRv47ysa1U72FSmxyxAbJgQMHFg41xrnCsxpjOilso2rr
5u8wuyo3Wl00iwjbmHhTU1N1d22s6nTBqNimymmiWPy01NVLRXV3d6czpiOc
1zRpe3p6Vn7b31jGwcHBtBO5uq8zujs2F+NFXJXbNq2KdOvk1N0x1Oodpqr1
fefOnXQP6I0zZuCpqVqAHKqWDSsiJd1qM0KsUqnE5n31ckARI9FlUTRtbW1R
NE93Nuuqi7KIxIjNj5GRkepQ0zjTIN82u+IJt2/fjp/KSNpImMj50dHR1R1k
BGb1esgpbKun1kaEPvVBwjGRdCRzLG9K41je1IyxkbYWd+ONpUhJG3+Zmppa
ySyiAeNd1NraGoOsnj8bPRtvsHinbYQwTMeiX7x48fjx4zHO5nlpnAcOHIg3
RrwfYrTxIsaA1+4ex8D6U7UAOVQtG1860DeSJBVuNOPBgwfTLtFUuFE30WgR
ApEDEQVlD8JMbZuGGj9faZxpkDHC8fHx5WMktXxswMSTI2zju2Iiqzu82EBK
YRvd9NZ8SQ0MDKRBPvUFqOMb+/v7Y8CHDx9Oj6TkXIsdtbFyTpw4kU7XjQWJ
xVl+lcbYYrXHMqaeTYe1n5mX7jtcvGfv3bs3NDSURhjrLQZZPcY4jTPeS/GO
igXZaIdGA6tF1QLkULVsLtVmjBCoVCqjo6PRTdUzcNOO0UiDY8eOjY2NTU5O
FrxPUAw15h7jvHz5chpkjLClpSWGd+HCheVv0RuZNjU1FWGbYjPS+Pbt26s4
sDt37qQpDw8Pxz+j7NI6jJX2dHsA48Okq6srFjDSLF6g6lnG8fjqVtilS5di
Baa9wClpl5l+qsWowljtqYJjhFHfKWbX7jZDK3Hr1q1Ust3d3bt27Yq3bhph
fX19Z2dnX1/flStXquNUsrDlqVqAHKqWTSrtwI2Airdx/K6PcoyqinhM5x6m
fozCPXLkSBRWCoSC44xBphGm4UXCxPBSei/V3VGXsSUT4ZNKZ8+ePdUzYfNV
j0OOVZQmm7r7/PnzT7enO1Zvuq7XjRs3YqGqF4larQEnC+8k++abb8YG3lK5
F80YYVitxRhbrPxYuhhnwf/RcefOndHR0XhN33jjjbRPNo0tFif+EqsrjTDt
lnXdJ6gpqhYgh6pla4gKiGRId/C8ePFiuhhvioVoh0jCjo6OSInBwcHIrrt3
75Ya4cTExMmTJ9PYYmD79u07ceJEDOmJ+w0jbO/duzcwMJBOs927d+9qXT8q
7QtOe1Tb29vjkWjApz61Nt2pNi1RbHSlye7fv391/09C9aa0MeBYY0sd2BzL
FXkYz0mHQMefsYbjgy5WfqzMVRzPyl29ejUGH2+/WCdtbW2xFOlA6Hhzxhv1
9OnTIyMjk5OTsbpKjRAoTtUC5FC1bDH356V+vHTpUiRDhEP16NNonCjciIvI
tyjc27dvxzPXeYSxZZLGltI7xhZDivJ64m1qI9zi5/TmzZsRtumOPGfPnl2V
YUTYVo9Dju2oa9eupSx9il2ZEZjHjx+PZeno6BgeHk7JtlrXuYpxRvF1dXWl
pO3t7Y2tu8cPkx4bG0vlGD2bBhCvdayrW7duFanFy5cvx3j6+/sPHz6cSnbh
7Xji5R4aGorlSq1d9lhoYCNQtQA5VC1bWDqtNcIh8iEqI1IiejbtwksXYoq+
iBA7c+ZM1EcU7qrfInb5scXAogGPHDnSOC+NJ7osenDR3uR0ady0D7S5uTkS
b1WGWj0BNporHeocYkjv9NjX2NZKVxWO721tbY11G+t5VQ70jZGMjIykok9J
G/NatIv26tWrsdL27t1bLcdYjbE40bOxBZg/hpWLFyW2SPv6+g4dOrR7XvV4
6aj+ePvFm3B8fDyeVvZAaGADUrUAOVQtNSJdCDc2GM6fPx99cfTo0WreRn20
tbXFgxFNX5u3bifhxoyuXbsWP4bVPYzxZ0RrPBKPL4yy6LuxsbHIt1RJMdro
3Mx7u8S3xzQ7OztjgofmxdqIzn1HByHHRGIkKbejaqs7f3MGlqRFTsNLL9Ci
O/9Gtw4ODh45ciStuliHseriaaOjo+vzCsay3717N0Z18+bNgYGBmHWswxhq
eo0i8GPwsT7PnTsXCxJPU7LAUlQtQA5VS62JsogthKmpqZGRkciNKJFIxQiQ
VCLVwo1IiTiKDYzIlrW+Am1sqETDDg0Nxc9jdFm6sUs0Wvzz8uXL1UCLYcSP
alRS6qYIqFiEzOFFl6VTYtMEo2pjVazkgNhIzhTdsT5jnOkA74i4mEJ3d/dT
j6c68cjA/v7+NMHDhw8v/F8N6RDueIGiZ6s7Z8+cORPrMB5f656NscWrEDOK
Ecb7Jz4/4yVL6Z3qO1ZjPBJfivdP1G68QG4sC7wtVQuQQ9VSy9J1huP9HwGS
CiXyZOG+tojctK/tzTffTIWyplemTTuUz58/n3YlR7Lt3bu3t7d3cHDw1q1b
b82HbYwhNnsindIIY3hPfTueJBo2Ta3q4sWLb7uY6frMU1NT9+7dq/4/gRAD
npycfOrBvDW/EqJPOzo60p70SNfqBCfmnTx5MgV4PCGeFvEbz1/r3aAppWNG
Mbs33ngjujWNMA0y/hlDitCOlyYNUskC74iqBcihaiFJwZiOUl7maNKImpGR
kQjJCLo1KqmYbLqYc7RtCsbI24i7GFWlUkn7IqObYoRpeDGwGFL8FD9dSVUP
IU5efvnl119//fr168uHbVR2BGz0XSTw9u3bX3vttTTOCPCnXOxv9OyZM2ci
GKuLHEmbRhh/rx4mnZY6Xot4Idbu/zPEqxDzHR0dTUetR7q2t7entZRuFRQj
jC/FwFLJrtEwgFqgagFyqFp4ooVX/omWaWlpSSdvpqNMjx8/Hkl1+fLliLvp
6em1uIxtTPDGjRunT58+ePDgrl270j7ByL2o3Tt37qTyjTHs2bMnHYIbbfXU
YRvSFYa3bdv2xS9+8fnnn49PhmWavXorn8bGxn379sV3vfTSSxG20XpPfRmr
mOb4+Hh0YlrSWKKrV68+evQoNuciXdPdddMh4iGF/FpcOjheyth0jJSOwZw9
ezZidmHJxqyj5aNnu7u74+0RI1z1AQC1SdUC5FC18Lai1M6dO3fmzJnDhw+n
qyinU1/T7WMixKq3HI3eXPXL20a7pdsART/GfNMVhlPbzszMVCqVAwcOpN2X
0doTExOx2bPyto1s/IN50e/bt29/5ZVXnn322c9+9rMxu2UuIBybWBcvXkyt
F9/16quvxne98MILEblPsYCp0C9fvhxrMhYkEj7+kk4Zjp5NV2lOPRs5mS7n
tYr7Z2PuaQ3EqouSjZcySjbdCiq9vjHf6v2OY9YxpNWaNUCVqgXIoWrhHYnU
GhwcjMKNxonSieSJ0kwRFH/GIydPnowIjUSKUks7VVdlvtFxt27dih/YaNt0
v5ho2xjJzZs3r127Frnd0tISD8ZX+/v7V77TNiZ7/vz53t7emNprr70Wifo7
v/M7UbVf+MIXpqenl/quhVW7bdu2F198Mb7l937v9+LDZPnZpYRc2KTxyOjo
aNof2tDQEOOPvo7xx6JFpC/q2RWuq+VFyM/MzFRLdmhoKBY/SrZ6P9nI6phj
jOTgwYMxjJjvjRs31vkmQUCtUbUAOVQtPLXYxogm6unp6e7ubm1tjdhsmJcC
LZooWuzKlSvxtPTj9uDBg8zLKUerjo+Pxxx37ty5Y8eOVGGnTp2KAo0GTGEb
zp07F49Eu83Ozi6ftxGYEW7V26qGl1566bPzJicnlxptSvvqjtrnn3/+2Wef
ff3112O7a/l5RYDHlls6NTjGdu/evcuXL6ezaJuamvbu3XtmXvV443hwz549
w8PDOSvtrfmSjZV/f1663FaaUXWpm+bFCozXcWBgIF7WsbExN+IB1o2qBcih
amFVRAFFwEZvHjt2LMoonYdb3f13cN7o6Ggk1f87LyIrKu+pI/fWrVsxr127
dlXP9t2/f3/kbTVs9+3bd+LEiWjP2BZa/njd+OqlS5cWhu3nPve5qNpDhw7F
R8QTv+XmzZvpwODXXnvt93//9+PJX/7yly9evLj8XCJpY3gxyDt37sSU4/np
fOF0KeNozLRztr6+PhYqxtPe3p7Ts6lkI+1jbUfjx8qPWcTcq4vZPC+dqHvh
woUo2fHx8TW9xjXAUlQtQA5VC6suXfgoqi0yLQp3586dUU/VXasHDhyIwh0Z
GalUKrGtElsps7Oz8S1PcaGn2M6JIN2zZ0911220berc7du3/+///b8jNuOr
kdtve2GlhWGbjiiOSS112G1sd8VXYxZf/epX07HH58+fX2biKflTcUer9vb2
Hj58uNrjVdGz8ZxYORGYEaHvdG28Nb//N+YVJXvv3r10S+KYVwR+mn6sorRP
NpXspXlPMReAVadqAXKoWlhT6a40Fy5cOHr0aGRj47x0cadUuJ2dndFW165d
iwqLKEv7cN9p4U5OTsYPciRhdcqvvvpqJO3nP//55557LjpuYGDgbY9GjkGm
0oxvTAchx5CeuDc5Ve1rr732hS984dlnn42/LDPZdOpudbf1K6+88vrrr2//
hmrPRnJG8F6+fDl9V8x35acGh9Szw8PDZ8+e7enpqd5CN6Ycs46JR/gfP358
cHAwknklkwVYT6oWIIeqhfUU+RmRG3kVkZUKN5qrmqLRYlFkkWbxnGi0FLkr
L9zY7Ikf5127dqWEfOGFF9Kln0Lk7b59+972CNsovhS20cLxXTG1J55bOjo6
unfv3rRLN8I2NsaWmuCipE0l+9JLL0V0R95u27Ytlj1WQnd398KejaWOT6dY
V0+cZqyQVLLpPNkI1SjZasamk5ojY2Oy8WAsQjwh/8xcgDWlagFyqFooJbZS
ol5Pnz599OjRSNFFhRt12dnZGbmXLltULdy3jdypqamYZjrc9/XXX4/2jLZ9
dt5XvvKVM2fOxNSWadsUtl/+8pfTzXru3Lnz+O7aCNVo0ufnLXM3n5hL9GZK
2ojZdLXkL33pS5/73Od+//d/P8aWerZar6lnY46nTp2K6l/4eIippSs+3bhx
49y5czHl6jHM6SJd6QDj9vb2WPxKpfLUd84FWH+qFiCHqoWNIBIsCndwcDAK
N7os6iwarRq58Zco3MOHD1+7di2aLsqueqDyE48Qjq/Gz3X1TN7ox+jZz3/+
85/97Gefe+65+GdsPi2zFziFbbTwF7/4xZMnT8YG1cKvxhwjjVMsR3sudd3j
lLTVno2YTXfCTWOIb29ra7t9+3Z6ctr9Oj09Xb07bUw5Vkg6tHhmZub69esx
ta6uroU7ZNOVk0NkbKy6eI6rFgOb1EqqtsiGIsCmkKp2mRtTAusv6iwCtq+v
7+DBg3VPcujQoYGBgZs3bz6xauMbF17TuNq2UakpKr/61a8eO3YssnGpAVy4
cOGVV15JCbzoabFlFXP/3d/93SjlmNFSU4jhpfmm3b6f/YYXXnghFioSNRaw
GqExi3h+9YY+dfMXKI5Hzp8/v7BkF4oppJOFn3YdA2wgqWorlcqi7TRVC7AS
qhY2uHRF5WjApfouHo/MjCek02anpqaGhoaOHz8eD7a1tS168rZt26IrIzN/
7/d+r76+vru7e6m2vXTp0he+8IWo2ojNdIfZJD4u9u/f//zzz+/evfuJR/nG
GFLSphNvky996Usxr+vXry86+Dmm/LWvfS2G+sRFezzkg5vvAFuPqgXIoWph
E3n06NH4vEPzqifhVh08eDAeHx0djeekPaGxIZSiuK+vL74UT0h35Pnd3/3d
z3/+8y+//HJMJB5/4uzi8yGe0NPTs7BqL168GGn82muvPXFHbSRnVHDq2ZhF
/OWVV145e/bsE1N0mZ6NWcQ3RsPGlt4y+5QBtoaVVK3zagGW4rxa2ETS/W7S
VZUWXjqpq6srXZSpfl66AnC6dNKpU6ciHm/fvh3Pn50X20URubHtFLmaujj+
fOLsImBjOidOnFhYtcPDwy0tLfv27bt169ai58fYxsbG4kvp+saRz/39/TG7
SNpFR0pfvnw5xhbjfDzMk1icY8eOpWsdP8WdfAE2F1eLAsihamFTS9dZSndr
jaKMXI1W7ezsXHh94L1790ZdXrly5be/4TPzPvWpT/1f3/A/5v32N/v0pz8d
X4qnPf7gM888E1P47cfEg/Gl6mTjydUvpc+ZiOLUs297yHG0s3vLAjVC1QLk
ULWwZaT7/qR9shG5ExMTkZARuV1dXWfOnKlUKi989KOVf/tvH//v8vx/n/zk
Jy9fvnxzCS+++OKJD3zgid8e/w38+3//7LPPLvW9IWr3zp07b80fopyGVzU1
NXXtSSLDYzNvqbvWAmwlqhYgh6qFrap6W5zYEIo/o2pf/OhHx37+55f6L6o2
8nNqCS+99NL//Yu/uNT3Xnr/+5977rmlvjdUq/ZxaXfz49Ih1q4NBdQCVQuQ
Q9VCjdiwVQuAqgXIoWqhRqhagA1L1QLkULVQI1QtwIalagFyqFqoEaoWYMNS
tQA5VC3UCFULsGGpWoAcqhZqhKoF2LBULUAOVQs1QtUCbFiqFiCHqoUaEVX7
7G/8xp5f//Wl/ouq3bNnz/4lRLTWfeQjS31v84c+FN261PeGZ555RtUCLEXV
AuRQtVAjIiqPLKH7G5Z6wsodOnToq1/96ssvv/z4NOMDp/Q6ANigVC1ADlUL
Nevhw4cTExOxpbRaE3z06FG08+7du9va2gYGBmLiqzVlgK1N1QLkULVQg6Jn
YwNpenr65MmTq9ieMdnJycl9+/bVzevt7Y3InZmZidpdrVkAbEmqFiCHqoWa
knp2amrqxIkT8bMfBRp/X93pR9h2dXU1NzdH2O7fv39wcPDu3bvCFmAZqhYg
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
DXUX10ja8+fPN8y7cuWKG/oAQO1QtQA5arBqN+Du2hjGwMBA9Gx9fX1/f7/T
aQGgpqykaotsKAJsCqlqp6enS3+cr6t0JeTe3t4NcqDv+Ph4Y2NjDKmrqyte
lNLDAQDWVaraSqWyaDtN1QKsRG1W7aVLl1LYTkxMlB7L19XNi6R98OBB6bEA
AOtN1QLkqM2qDZGQG2R37aFDh1LVXr9+fYMcEQ0ArCdVC5CjZqv2a1/7Wtnd
tRGw4+PjkhYAWEnVuloUwFJq8GpRydzcXGdnZ+TkyZMnJycn13nuDx8+vHHj
RmNjY319fYzh7Nmzs7OzqhYAapNrIAPkqNmqDSMjI62trQ0NDUeOHFnPsI2g
HhgY2LFjR3UvbTwiaQGgZqlagBy1XLXRkils6+vr1y1s79+/n+5LGzPt6upy
4DEAoGoBctRy1YbZ2dmhoaGOjo7IzGPHjl29enWtZxdJ29TUFEl76NChWP9R
1ms6RwBg41O1ADlqvGrfmi/Na9eupbBtb29fo7C9d+/ewMBAa2trY2NjzKi/
v/8P3ZcWAJinagFyqNq35g9FvnTpUjoUua2tra+v7/bt26s18dSzhw8fjp6t
q6uLP8+ePXv//v3Vmj4AsNmpWoAcqjaJ3xQjIyNHjhyJsN25c2dnZ2f+Ttup
qamI5Vi9u3btapx3+vTpycnJ4nfIBQA2FFULkEPVVt2/fz9+a/T397e1tUXb
7t27N/5eqVQiTt/ppOJbzpw5097enno2Mjl6Nqr53r17azFyAGBTU7UAOVTt
Qg8fPoxfGZcvX963b19dXV1zc/Pu3bv3799/6tSp27dvL5+3Y2Nj8cvo3Llz
3d3d0bNNTU0xhejZEydOnD9/PnrWUccAwBOpWoAcqvZxs7Ozt27dGhwcPH78
eLqlbGNjY4Rq5G1XV1dfX19vb++ZBQ4fPhyP7927NxK4paWlvr4+viWePzQ0
FNNJv4ZKLxMAsHGpWoAcqvaJHj58ePfu3bGxsXPnzvX09ESutra2psJta2vb
uXPn7gVSxqY9sx0dHW+88Uas1dHRUefPAgAroWoBcqja5aW8jd8yUakDAwMn
5h06dKjrm0X59vf3j4yMRAjHynSwMQCwcqoWIIeqfUf+YN7EY6J85+bmSo8O
ANiUVC1ADlULAFCWqgXIoWoBAMpStQA5VC0AQFmqFiCHqgUAKEvVAuRQtQAA
ZalagByqFgCgLFULkEPVAgCUpWoBcqhaAICyVC1ADlULAFCWqgXIoWoBAMpa
SdUW2VAE2BRS1U5PT5f+OAcAqFGpaiuVyqLtNFULsBKqFgCgLFULkEPVAgCU
pWoBcqhaAICyVlK1rhYFsBRXiwIAKMs1kAFyqFoAgLJULUAOVQsAUJaqBcih
agEAylK1ADlULQBAWaoWIIeqBQAoS9UC5FC1AABlqVqAHKoWAKAsVQuQQ9UC
AJSlagFyqFoAgLJULUAOVQsAUJaqBcihagEAylK1ADlULQBAWaoWIIeqBQAo
S9UC5FC1AABlqVqAHKoWAKAsVQuQQ9UCAJSlagFyqFoAgLJULUAOVQsAUJaq
BcihagEAylK1ADlULQBAWaoWIIeqBQAoS9UC5FC1tezBgwel34C17tGjR6Xf
BQCUt5KqLfJ7CmBTSFU7PT1d+uOcArq7uz9JUXfu3Cn9LgCgvFS1lUpl0Xaa
qgVYCVVby1RtcaoWgLdULUAeVVvL/k/Vvv/9n3jXu1b/v7/wF74+8Q99aE0m
/q3f+vWJf+xjazLxd70rJWfMZY2m//VZfOhDqhaARNUC5FC1tUzVqloANoKV
VK2rRQEsxdWiatmRI0e+3m5rWbWfWMuq/cRmrtpPqFoAvsE1kAFyqNpapmpV
LQAbgaoFyKFqa5mqVbUAbASqFiDH+lTt7OzslStXhoeHl7o7Zzx+7969vr6+
R/OWn1p8sI+Pj9+9e3cNRlpbVK2qBWAjULUAOXKqtq6u7r/8l/8Sn7Fv+8yD
Bw/+xE/8xD/6R/8oZvfEJ8REPvrRj/6ZP/Nnurq6IoGXn1pzc/M/+2f/7OWX
X37iVx8+fDgyMvLxj3/8Z37mZ37sx37sV37lV9ra2t52mrVJ1apaADYCVQuQ
I6dqf/EXf/E7vuM7VvK9AwMD0b+/9Eu/dP369fjnzMzMnj17fuRHfiSqKj3h
/v37DQ0Nkb0RpHNzc8tP7bXXXvu7f/fvfuELX3j8SzGdWJz3vOc93/3d3/3e
9773p3/6p7/3e7/33e9+92/+5m/GwqbnfO5zn/uhH/qhEydOvO1O4eTu3bs/
+qM/+rGPfWwlT95cVK2qBWAjULUAOXKq9t/8m3/zR//oH13JZvns7OzU1NTt
27dTscbH8rZt2/70n/7TbW1t6QnpCOTx8fEHDx68bWwuU7Xxsf8f/sN/+FN/
6k+1t7fH1CYnJ4eHh//+3//73/Vd3/Xmm28+fPgwnvPxj3/827/92w8dOrTC
qo2VE10cC7uSJ28uqlbVArARqFqAHKtVtVGsH/vYx6IlX3755f/4H/9jpOX/
/J//s1KpRKXGV+MvL7744vPPPx+fzBMTE1/5yld+4id+4k/8iT/xUz/1U/Fd
V69ejacdPXr0wx/+cEwtxWYM6Ytf/GJM6t/9u3/3W7/1WzHI6qHOy1TtjRs3
fvAHf/A973lPzCg9EiW7e/fuX//1Xx8aGoq//6//9b/+zt/5O3/sj/2xf/Ev
/sVv/uZvxsDemm/qwcHB3/md34nZ/cIv/MJnPvOZ7u7ut+Zj/PTp0x/84Ae/
5Vu+5a/8lb8Sw2ttba3Oq7OzM6oknv+pT32qt7e3Osf79+9fv359bGwsRfRG
pmpVLQAbgaoFyLFaVRt5+D3f8z0Rmz/yIz/yz//5P/9rf+2vxT+feeaZ8+fP
x1dPnToVFfmP//E/jqSN3Pv85z8fT/vjf/yP/8N/+A9/6Zd+Kb53ZmYmGvY7
v/M7o3AjBufm5iJmv+/7vi/i9yd/8if/8l/+yz/8wz8cCRbB+NayVTs+Pv6+
973vu77ru1paWtKTw717965duxZ/Rr3+9//+33/gB34ghv3jP/7jv/qrvzoy
MpKGF8vyN//m33zve9/7T//pP/2rf/Wv/r2/9/cOHz4cUzh+/Pi/+lf/Kqr2
L/7FvxhDamhoSNNsbGz8G3/jb8TTfvqnf/pv/a2/9bf/9t+OOcZvnPjS9u3b
f/7nfz46Okr5aX6xrSNVq2oB2AhULUCO1ara0dHRb//2b4/0a25ujk/mkydP
/tiP/dg/+Af/oK6uLr4as4g+jRS9efNmpGJ8aH/2s5+Nhn3hhReiK9NIPve5
z73rXe+Kwo2qvX79+vvf//5Pf/rTp0+fjqk999xzf+kv/aVPfepTt27demvZ
qo0P/F27dr373e+OEP4n/+SffPzjH48Oje+q7jaN6X/gAx/4tm/7tldfffXN
N99M+38PHjwYhRuD6e/vP3fu3PPPPx9d/JGPfCS+K9ZMrKLv+I7viHodHh5O
A4jh/fW//tdj6Y4dOxbp2tHRESEcC5gytqmp6Wd/9md/+Zd/OZ7/lL/b1ouq
VbUAbASqFiDH6lZthGQUX7o7z6/92q993/d937PPPhttuLBq35pvz9dff/27
v/u7q+fV/uE3V+3U1NT+/fsvXrwYE5+YmNizZ8/3f//3R3heu3btrWWrdm5u
bmxsLGIhRhJhG9/14z/+4//5P//n6NZ0LHT42Mc+9if/5J9ceF5tDP7w4cPR
13fv3o0RRonHE37mZ34mfTVWTgz1X//rf12dS3d3dzzhwx/+8JUrV2J4Meb3
ve99f/7P//mI3JhmTKe1tfXAgQMbP1hUraoFYCNQtQA5Vrdq/+t//a/VrfTn
n3/+z/25P/cbv/EbkZPvtGpDlGM88t/+23/74Ac/+C//5b9897vf/Qu/8Avp
NNhlqvat+ZNk4/P/xIkTX/3qVz/xiU/81E/91Hd+53f+6I/+6MDAQLpW1eNV
G78s2tvbP/WpT0X//sqv/MpP/uRP/pE/8kd+6Id+KH318aqNgX3rt35rhPMv
//Ivf3Be5HM80tzcPDMz8xRrshRVq2oB2AhULUCO1a3aqMjp6en01RdffPF7
vud7ompnZ2ffadX29fW9733vi+dHz/7qr/5qZOOf/bN/9m2rNir1/v37MYt7
9+6lRyKoz5w584EPfOBbvuVb4vkpORdVbTy4Y8eO9773vVG+Mbtf+7Vfi+WK
2f3wD/9wmsjjVfuZz3wmGvZnf/Zn/9N/+k8fWuDUqVPVk3k3BVWragHYCFQt
QI5SVbtt27ZIxZaWlvTkP/zmqo0CjWz8yEc+cvTo0atXr54+ffoHf/AHV1K1
t27devnll3t6ehY+HtH6bd/2bc8888wfzt+yNlVtR0dHOtk2hvThD3/4e7/3
e3/rt37r+PHj165diy+95z3viQGnb09V+3M/93PVCb766qsxwZjR9evXx+cN
Dw+fO3cunplK+cG8p1il60zVqloANgJVC5CjSNXOzMz8f+2dCXxNZ/7/a4sO
qbHEIJRSTGy1ZFBLhUpa0Y7WUmOrfQkpY6m19r2YQYhlKsoYZYbaihJMbfOK
Tl+15WeoMrGM2F4JMs1fLM39v3ufn/O6zebKCff6+bxfXl435zznOd/neb7n
3ud9z3I3bdpUuHDhadOmxcfHU+D2z612zJgx+fPn37JlC9p4/vz5mTNnlitX
7qFWy4bYJX4aFBSEY7IvPgX4gCCGggULbtiwgR1RbMaMGYUKFYqIiDh37hxL
+Bzp1atXgwYN1q9fTzBnzpyZO3cu5S2rpUXly5dv2LAh5ZOSklhy4sSJsmXL
0vzY2Fj2QlSffPLJ9OnT6QSslpgPHjz49ddfW7/147XIamW1QgghvAFZrRBC
2CFnrZZZujtWa/SzYsWKVatWHTlyJBp4++dWu337duQUkWRteHg4G/r6+rpz
Xy0NmTp1KgrMtqNGjcKaCbJYsWLNmjVj1+ZEKipXqVKlwMBAKkeZ+Zhg1wQT
Gho6fPjwfv361a5d28/Pz7La5OTk3r17Fy1alAC2bdtm4h87diyta9eu3ejR
o7t37/7yyy936NDBPPSYhjdu3LhNmzaYdTZ69Ukiq5XVCiGE8AZktUIIYQc7
Vjt9+vTg4GBzRjI+Pr5ly5YrVqwwv9kKW7Zsad++/bJly+7fv3/ixAmEsX//
/gkJCWYtW6GlmOMbb7xx8uTJO3furFu3rmnTprgnznjv3r358+ezFjl9++23
165di5zOmjXLSPHOnTupauPGjelDwlt5z6fmkJCQevXq1alTp0mTJmFhYUi3
9eM+FJgyZcpbb73VqlUrPkRYwocI/tu8eXN2h6iyo0GDBhGwKU8wMTExSOtr
r70WGRlpVUKx1q1bN2rUKCgoCLeljeaq4+jo6KFDh06ePPncuXPZ6NUniaxW
ViuEEMIbkNUKIYQd7FitTTDQu3fvWk92Sg9rr1y5wv/Ww4rdrxnBxGSPHj2a
Wf14dEpKiqW6DqdoX79+PbPHPVEnVZmnKLsuvHr1Kt2YJsL7Th4pZo8gq5XV
CiGE8AZktUIIYQcPWq3wOLJaWa0QQghvQFYrhBB2kNU+y8hqZbVCCCG8AVmt
EELYQVb7LCOrldUKIYTwBmS1QghhB1nts4ysVlYrhBDCG5DVCiGEHWS1zzKy
WlmtEEIIb0BWK4QQdpDVPsvIamW1QgghvAF3rNYjE0UhhHgqMFZ769YtT7+d
Cw+wd+/en+TtcVrtxMdptROfZqudKKsVQgjxAGO1cXFxaeZpslohhHAHWe2z
jKxWViuEEMIbkNUKIYQdZLXPMrJaWa0QQghvwB2r1X21QgiRGbqv9lnmf++r
HT/+pxtUM/k38cG/LMpk/G/MmJ8qh5yqME09pvacq/BnERqrzcEK00c4YYKs
VgghhEFPixJCCDvIap9ljNUKDyKrFUII4ZDVCiGEPWS1zzL37t3zdAI+66Sm
pno6C4QQQngeWa0QQthBViuEEEII4VlktUIIYQdZrRBCCCGEZ5HVCiGEHWS1
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
396zZ0/skn3xP+Gl/1WpLKw2JCSEUQgLC8McyWSUEKX94IMPzKih5ESIRbIX
02rSg5znTwoYq6WwOXXreGC1dAsJY/oQAfTx8fnwww+tnSLFZpQdj261xjQ5
gs6dO0dzduzYsXjxYiIcPXr0becZ6qytNj4+fsSIEUir1cMcJsaLzcAZq3X9
Nony9M+pU6fYLwJbvXp18oHU3b9//4ULF8zPDbszUkROKwh19+7d5n5wBBaN
pWbTdlmtEELIaoUQwg527qut6sQ6ZWlhzmmaywuN1ZqrcB1Oq/34449drZa5
7pIlS1w3N1b73XffWRcoYn9IU968eX19fQu5UK1atVWrVhmrxUOtm0BZwkye
Kbo1P8/Mas1JZzBN4MX58+fRjQoVKhDk3r17mboPGTKEqgoWLFjo52AWZlaf
PaulBnO1raFmzZpUYh4/5e/vj2KbZ2c5nJI4Z84cKjRWS53Hjx9v27atn58f
UZUsWbJr167mZtVskNkVyHFxcRhceHi4w3lvMj2QL18+HMe1B7AeDMtYbXBw
MFZl9WpMTIx57rQjS6t1fQbyO++8Qz3uWC314z6uNw5jZPRGrVq1rHuTLbK2
WpKqopPKlSsjVnPnzrWeoowt0gOEnabVjAKJZKwWY7WuVTBWa+UhYVy/fp0a
xowZY+2UVLEubzBWS+TWM5ewWnogM6s1SotHkx7mQCAwxsVNqz179mzHjh0b
NGhgrTX3w3KszZs3z/HAamfOnGl9F8Rr9nLy5EnGiIWzZ8/meEfb2S/Hoxn9
hw6Ww3lTNpZK5QTT2gmDxZ/R0dFmEGW1QgghqxVCCDvYsVpkCtPB5lz9Aldl
bs902jxSmKkprrFy5Uozdb927dqkSZMe1Wp5M2/UqBFT4n379l1wgnvyzs//
vNW7Y7XlypXDJtJbLTEcPXr02LFj1lOaTZCRkZHM3hcsWJCUlEQ8yOP27dsv
PoBdnzlzBimwztUSW3qrRV2tU6juWy1rK1WqhOIRlblDOT4+nuZYVyCzhF1T
jM3XrVvXoUMHzKt+/fquj0F2fxDTWy31JCcnL1q0iGrNJcR0SO7cuXGi06dP
W/2PJSFZNNBYbd26dbdu3Wo9lXrPnj1ly5YdNGiQw8VqzQWrhodabRaPcabt
+/fvZwLgWmDAgAE+Pj6up/gN7j8tKg3mTOjatWsRfNNqM+5kkXUFsh2rnTp1
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

    "], {{0, 629.}, {633., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{949.625, Automatic},
  ImageSizeRaw->{633., 629.},
  PlotRange->{{0, 633.}, {0, 629.}}]], "Output",
 CellChangeTimes->{3.958974328561433*^9, 3.959042724511065*^9, 
  3.959042785276285*^9, 3.959050376281021*^9, 3.959051240019788*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"a3b26e49-c200-4e98-a6af-411bddf9d81f"]
}, Open  ]],

Cell["\<\
The image displays an interactive \[OpenCurlyDoubleQuote]Spekkens Model \
Evolution\[CloseCurlyDoubleQuote] tool, showcasing a graph that visualizes \
the transitions between states. The main graph features several nodes, each \
representing a $4 \\times 4$ binary pattern (a composite state), connected by \
directed gray arrows. The title indicates the current \
\[OpenCurlyDoubleQuote]Evolution Depth\[CloseCurlyDoubleQuote] (2 steps) and \
the number of permutations being used (4). On the left, a control panel \
allows users to select an \[OpenCurlyDoubleQuote]Initial State\
\[CloseCurlyDoubleQuote] from a dropdown menu, adjust the \
\[OpenCurlyDoubleQuote]Evolution Depth\[CloseCurlyDoubleQuote] via a slider, \
choose the \[OpenCurlyDoubleQuote]Permutation Set\[CloseCurlyDoubleQuote] \
(either \[OpenCurlyDoubleQuote]Minimal (4)\[CloseCurlyDoubleQuote] for \
Spekkens permutations or \[OpenCurlyDoubleQuote]Full (24)\
\[CloseCurlyDoubleQuote] for all permutations), and select a \
\[OpenCurlyDoubleQuote]Graph Layout\[CloseCurlyDoubleQuote] (Force-Directed, \
Layered, or Circular).

The Mathematica code defines the fundamental `SpekkensStates` and \
`basePerms`. These `basePerms` are then converted into `SpekkensPermutations` \
suitable for acting on individual elements, and `AllPermutations` are \
generated similarly. All possible `compositeStates` (by Kronecker product of \
`SpekkensStates` pairs) are pre-calculated and stored in `allStates`. The \
`permuteState` function applies a given permutation to a composite state, and \
`nextStates` determines all unique states reachable from a given state by \
applying a set of permutations. The `statePlot` function renders the $4 \
\\times 4$ binary patterns for visual representation.

The `Manipulate` block orchestrates the entire interactive experience. Users \
can select an `initial` state from a `PopupMenu`. The `permset` is \
dynamically chosen based on the `permType` radio button. The core of the \
visualization is the `NestGraph` function, which builds the state evolution \
graph. It starts from the `init` state and iteratively applies the \
`nextStates` function (with the chosen `permset`) up to the specified \
`depth`. Each node in this graph is an `Inset` of the `statePlot` of the \
corresponding composite state. The `GraphLayout` can be dynamically changed \
using the radio buttons, allowing users to explore different visual \
arrangements. The `PlotLabel` dynamically updates to reflect the current \
settings, including the evolution depth and the number of permutations. This \
comprehensive tool provides an excellent platform for interactively exploring \
the dynamics and connectivity of states within the Spekkens toy model under \
various conditions.\
\>", "Text",
 CellChangeTimes->{{3.959050133546049*^9, 3.959050153204269*^9}, {
  3.95905018468279*^9, 3.9590501917338057`*^9}, {3.9590502261453867`*^9, 
  3.9590502305900993`*^9}, {3.959050275392338*^9, 3.9590502803162327`*^9}, {
  3.959050317387114*^9, 
  3.959050390992628*^9}},ExpressionUUID->"da308a4d-48fe-46a7-8cea-\
bd64755a1958"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"initialStates", "=", 
   RowBox[{"KroneckerProduct", "@@@", 
    RowBox[{"Tuples", "[", 
     RowBox[{"SpekkensStates", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getNeighbors", "[", "matrix_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Permute", "[", 
      RowBox[{"matrix", ",", "#"}], "]"}], "&"}], "/@", 
    "SpekkensPermutations"}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"vertices", "=", "initialStates"}], ",", 
     RowBox[{"edges", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"expanded", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"layout", "=", "Automatic"}]}], "}"}], ",", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Button", "[", 
        RowBox[{"\"\<Reset\>\"", ",", 
         RowBox[{
          RowBox[{"vertices", "=", "initialStates"}], ";", "\n", 
          RowBox[{"edges", "=", 
           RowBox[{"{", "}"}]}], ";", "\n", 
          RowBox[{"expanded", "=", 
           RowBox[{"{", "}"}]}], ";", "\n", 
          RowBox[{"layout", "=", "Automatic"}]}], ",", 
         RowBox[{"ImageSize", "->", "Automatic"}]}], "]"}], ",", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"Graph", "[", 
         RowBox[{"vertices", ",", "edges", ",", 
          RowBox[{"VertexShapeFunction", "->", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"st", "=", "#2"}], "}"}], ",", 
               RowBox[{"EventHandler", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"ArrayPlot", "[", 
                    RowBox[{"st", ",", 
                    RowBox[{"Mesh", "->", "True"}], ",", 
                    RowBox[{"ImageSize", "->", "35"}], ",", 
                    RowBox[{"Frame", "->", "False"}], ",", 
                    RowBox[{"PlotRangePadding", "->", "0"}], ",", 
                    RowBox[{"ImagePadding", "->", "1"}]}], "]"}], ",", "#1", 
                    ",", "Center", ",", 
                    RowBox[{"Scaled", "[", "0.05", "]"}]}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<MouseClicked\>\"", ":>", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"expanded", ",", "st"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"neighbors", "=", 
                    RowBox[{"getNeighbors", "[", "st", "]"}]}], ";", "\n", 
                    RowBox[{"newVertices", "=", 
                    RowBox[{"Complement", "[", 
                    RowBox[{"neighbors", ",", "vertices"}], "]"}]}], ";", 
                    "\n", 
                    RowBox[{"vertices", "=", 
                    RowBox[{"Union", "[", 
                    RowBox[{"vertices", ",", "neighbors"}], "]"}]}], ";", 
                    "\n", 
                    RowBox[{"newEdges", "=", 
                    RowBox[{"Thread", "[", 
                    RowBox[{"DirectedEdge", "[", 
                    RowBox[{"st", ",", "neighbors"}], "]"}], "]"}]}], ";", 
                    "\n", 
                    RowBox[{"edges", "=", 
                    RowBox[{"Union", "[", 
                    RowBox[{"edges", ",", "newEdges"}], "]"}]}], ";", "\n", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"expanded", ",", "st"}], "]"}], ";"}]}], "]"}]}], 
                  "}"}]}], "]"}]}], "]"}], "&"}], ")"}]}], ",", 
          RowBox[{"EdgeStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"Arrowheads", "[", "0.02", "]"}]}], "]"}]}], ",", 
          RowBox[{"GraphLayout", "->", "layout"}], ",", 
          RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
          RowBox[{"ImageSize", "->", "700"}], ",", 
          RowBox[{"PlotRangePadding", "->", 
           RowBox[{"Scaled", "[", "0.1", "]"}]}]}], "]"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"Alignment", "->", "Center"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9589743967037477`*^9, 3.958974396705572*^9}, {
  3.9590503998471212`*^9, 
  3.9590504017933187`*^9}},ExpressionUUID->"04914ff7-6bb9-47c6-a1ca-\
c2813ed45805"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`vertices$$ = CompressedData["
1:eJxTTMoPSmJmYGBQAWIWKGZkhGAEQBVhhEIGXAJoBkB5KCZiUUY1e2BCSCah
iMCMgBuFLoBmAMztyH6gtR20jANkcxmxiKAYA3ERqgCaASjhAkQA5QkCZg==

  "], $CellContext`edges$$ = {}, $CellContext`expanded$$ = {}, \
$CellContext`layout$$ = Automatic}, 
  TagBox[GridBox[{
     {
      ButtonBox["\<\"Reset\"\>",
       Appearance->Automatic,
       BaseStyle->{FontFamily -> "Arial"},
       ButtonFunction:>($CellContext`vertices$$ = $CellContext`initialStates; \
$CellContext`edges$$ = {}; $CellContext`expanded$$ = {}; \
$CellContext`layout$$ = Automatic),
       Evaluator->Automatic,
       FrameMargins->5,
       ImageSize->Automatic,
       Method->"Preemptive"]},
     {
      DynamicBox[ToBoxes[
        Graph[$CellContext`vertices$$, $CellContext`edges$$, 
         VertexShapeFunction -> (With[{$CellContext`st$ = #2}, 
           EventHandler[{
             Inset[
              
              ArrayPlot[$CellContext`st$, Mesh -> True, ImageSize -> 35, 
               Frame -> False, PlotRangePadding -> 0, ImagePadding -> 1], #, 
              Center, 
              Scaled[0.05]]}, {"MouseClicked" :> If[
               Not[
                
                MemberQ[$CellContext`expanded$$, $CellContext`st$]], \
$CellContext`neighbors = $CellContext`getNeighbors[$CellContext`st$]; \
$CellContext`newVertices = 
                Complement[$CellContext`neighbors, $CellContext`vertices$$]; \
$CellContext`vertices$$ = 
                Union[$CellContext`vertices$$, $CellContext`neighbors]; \
$CellContext`newEdges = Thread[
                  
                  DirectedEdge[$CellContext`st$, $CellContext`neighbors]]; \
$CellContext`edges$$ = Union[$CellContext`edges$$, $CellContext`newEdges]; 
               AppendTo[$CellContext`expanded$$, $CellContext`st$]; 
               Null]}]]& ), EdgeStyle -> Directive[Black, 
           Arrowheads[0.02]], GraphLayout -> $CellContext`layout$$, 
         PerformanceGoal -> "Quality", ImageSize -> 700, PlotRangePadding -> 
         Scaled[0.1]], StandardForm],
       ImageSizeCache->{438., {217., 221.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.9589743969830637`*^9, 3.95904273326055*^9, 
  3.959042785375614*^9},
 CellLabel->
  "Out[1325]=",ExpressionUUID->"be014b7c-49e4-4147-87e3-ab4f3c2466b4"]
}, Open  ]],

Cell["\<\
The image displays a grid of 36 distinct $4 \\times 4$ binary patterns (black \
and white squares), each representing a composite state within the Spekkens \
Toy Model. A \[OpenCurlyDoubleQuote]Reset\[CloseCurlyDoubleQuote] button is \
visible at the top. The overall appearance suggests an interactive \
\[OpenCurlyDoubleQuote]explorer\[CloseCurlyDoubleQuote] where clicking on a \
state will trigger some form of visualization or expansion of connections.

The accompanying Mathematica code defines the fundamental `SpekkensStates` \
and `SpekkensPermutations`. The `initialStates` are generated by taking the \
Kronecker product of all possible pairs of `SpekkensStates`, resulting in the \
36 unique $4 \\times 4$ patterns seen in the image. The `getNeighbors` \
function determines all states reachable from a given state by applying the \
`SpekkensPermutations`.

The `DynamicModule` orchestrates the interactive display. Initially, \
`vertices` is set to `initialStates`, and `edges` are empty. The `Graph` is \
rendered, with each vertex (state) displayed as an `ArrayPlot` of its \
pattern. Crucially, each vertex is wrapped in an `EventHandler`. When a user \
clicks on a state (`st`), the code checks if this state has already been \
\[OpenCurlyDoubleQuote]expanded\[CloseCurlyDoubleQuote] (i.e., its neighbors \
have been added to the graph). If not, it calls `getNeighbors` to find all \
states reachable from `st`. It then adds any `newVertices` (neighbors not \
already in the graph) to the `vertices` list and creates `newEdges` (directed \
edges from `st` to its neighbors), which are added to the `edges` list. The \
`expanded` list is updated to mark `st` as expanded. This dynamic process \
allows users to progressively \[OpenCurlyDoubleQuote]grow\
\[CloseCurlyDoubleQuote] the graph by clicking on states, revealing their \
connections one neighborhood at a time, providing a visual way to explore the \
state space of the Spekkens Toy Model.\
\>", "Text",
 CellChangeTimes->{{3.959050133546049*^9, 3.959050153204269*^9}, {
  3.95905018468279*^9, 3.9590501917338057`*^9}, {3.9590502261453867`*^9, 
  3.9590502305900993`*^9}, {3.959050275392338*^9, 3.9590502803162327`*^9}, {
  3.959050317387114*^9, 
  3.959050411346401*^9}},ExpressionUUID->"41c9e215-ee5d-48e4-abd4-\
48a7426f5481"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"clickedVertex", "=", "0"}], ",", 
     RowBox[{"states", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"perms", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cycles", "[", 
         RowBox[{"{", "}"}], "]"}], ",", 
        RowBox[{"Cycles", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"Cycles", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"Cycles", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], ",", 
     "nbrsForHighlighting", ",", "nbrsForEdges", ",", "edges", ",", 
     RowBox[{"n", "=", "6"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"nbrsForHighlighting", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Union", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"states", ",", 
             RowBox[{"Permute", "[", 
              RowBox[{
               RowBox[{"states", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "#"}], "]"}]}], "]"}], 
           "&"}], "/@", "perms"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"nbrsForEdges", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"nbrsForHighlighting", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"edges", "=", 
     RowBox[{"Union", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"i", "->", "j"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"nbrsForEdges", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
       "]"}], "]"}]}], ";", "\n", 
    RowBox[{"Graph", "[", 
     RowBox[{
      RowBox[{"Range", "[", "n", "]"}], ",", "edges", ",", 
      RowBox[{"GraphLayout", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<CircularEmbedding\>\"", ",", 
         RowBox[{"\"\<OptimalOrder\>\"", "->", "True"}]}], "}"}]}], ",", 
      RowBox[{"VertexSize", "->", "0.4"}], ",", 
      RowBox[{"VertexStyle", "->", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"clickedVertex", "==", "0"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"i", "->", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "LightBlue"}], 
              "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{"i", "==", "clickedVertex"}], ",", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "Red"}], "]"}], 
              ",", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"nbrsForHighlighting", "[", 
                 RowBox[{"[", "clickedVertex", "]"}], "]"}], ",", "i"}], 
               "]"}], ",", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "Yellow"}], 
               "]"}], ",", "True", ",", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "LightBlue"}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"VertexShapeFunction", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"EventHandler", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", "0", "]"}], ",", 
             RowBox[{"Disk", "[", 
              RowBox[{"#1", ",", "0.2"}], "]"}]}], "}"}], ",", 
           RowBox[{"\"\<MouseClicked\>\"", ":>", 
            RowBox[{"(", 
             RowBox[{"clickedVertex", "=", "#2"}], ")"}]}]}], "]"}], "&"}], 
        ")"}]}], ",", 
      RowBox[{"VertexLabels", "->", 
       RowBox[{"Placed", "[", 
        RowBox[{"\"\<Name\>\"", ",", "Center"}], "]"}]}], ",", 
      RowBox[{"EdgeStyle", "->", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
      RowBox[{"VertexLabels", "->", 
       RowBox[{"(", 
        RowBox[{"v_", ":>", 
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"ArrayPlot", "[", 
            RowBox[{
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"states", "[", 
                RowBox[{"[", "v", "]"}], "]"}], ",", "2"}], "]"}], ",", 
             RowBox[{"Mesh", "->", "All"}], ",", 
             RowBox[{"MeshStyle", "->", "Black"}], ",", 
             RowBox[{"ImageSize", "->", "45"}], ",", 
             RowBox[{"Frame", "->", "False"}], ",", 
             RowBox[{"PlotRangePadding", "->", "0"}], ",", 
             RowBox[{"Background", "->", "None"}]}], "]"}], ",", "v"}], 
          "]"}]}], ")"}]}], ",", 
      RowBox[{"ImageSize", "->", "600"}], ",", 
      RowBox[{"PlotLabel", "->", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Spekkens Toy Model: Click a state to see reachable states\>\"", 
         ",", "16", ",", "Bold"}], "]"}]}], ",", 
      RowBox[{"Epilog", "->", 
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Column", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Legend:\>\"", ",", "14", ",", "Bold"}], "]"}], ",", 
             RowBox[{"SwatchLegend", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Red", ",", "Yellow", ",", "LightBlue"}], "}"}], ",", 
               
               RowBox[{"{", 
                RowBox[{
                "\"\<Selected\>\"", ",", "\"\<Reachable\>\"", ",", 
                 "\"\<Other states\>\""}], "}"}], ",", 
               RowBox[{"LegendMarkerSize", "->", "20"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"Alignment", "->", "Left"}]}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.9"}], "}"}], "]"}]}], "]"}]}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.958974446834735*^9, 3.958974446836256*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"06c5d289-cbde-424e-81cc-44a419f7c642"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3b2uJEl6HuCG5MjULcigRzpjyTstU0YbpCCDJglxCAENCiAFCBqnb2Av
YE1Z40gChDYFCu1se7LamnF0BYSgOziq7dgORudfZVX+xBeRz4PBovecqqzI
yKz83hMRWfUv/vI//NmP/+TNmzd/989u//Nnf/Gf/tXf/u1f/Od/889v/+ff
/s3f/fu//pu/+nf/+m/+41/99V/97b/8y396++Hv/+f/3h7/+3+/AgAAAEBI
Hwu//vrrQa/y6zdPP6CiX+85swHrf7XlhQ59yuDpy6ffePsntxB2OX/WnIfO
VXjUrXb8OOX2891fK235N7/5zdwDbr9Kj9n9pTea66VsYaeOaED5q9sVr/zV
9gvgo3uUG/DEOTNo/NxeDLafe2P9zp5zmNZLse2JZ20/vof+tdKrJ065sZXv
lDMvgxXPQ9jLoI7kd9BBYUaS2asB5WVkcNQaSjJzMWa8tcFPmk4yz3VXftYu
lVQZelR/SabieQj7ym+Z8mTO71lJZtKWIYinDZJM+dLtJpnJ3Sn3dPDI/LAn
ht9bTzK7VNJdNnJNkkziFCKgubdMuuaXl/2ycOT1DJMn88KCh3E1GZSkcXsm
a9byqp6VTX16adCaK8DCxif36G5pLuNl2Ye5MbnrFvZ0bvuDB8wV/YU9GnfI
3T0qWz65s7ef56fPbX+uheNG3j335jx3niw8qzyUK0/s27/LPzrmnrXcvOWN
rN/Omn1cv82HXrQ8ZONnlZtavjQ90Z6P31fwhe38Wiz6Gh/H8kye28jcZbnp
83ChW2CjfDKXVWOsfAP++L3J9+ncAwbVZDwiNHgLf5waHRq3YfK3C02dbOeP
q//KWE4ykxsvC+j4J3nHF0YMxvs1eLnJJDPuhPGB/jga7Rm3cLnPJztkcjfH
uzzZ7XMZ+OPi7NLkzs61Z3I0cqGRpbuBYfyU/Lpzp+Xys8bNWHitueaNN1IG
/vFLr7kgTLZ2bpuDrl4+Xgu7kP7IGjxl5Sk62Y1zW5jsouVr4ORGPhZjibnZ
C60dJ5kn+irUebjcLbDd+KQdX8QGJ+rtDCxP6fywsjpMPqB8X0ymlPItvFxS
U7Af16PyLTP3mPInc01dsJxkBj250MLxBtckmcGr52v7uLiXXVG2ZO4xg64Y
D/sMHjO+Pj+UZB7q87k+zDsyd0zzU8r2TJ57Y3e3udDUdEQGf8Omlx50ctqF
5dcqf1IOlt59x5XGG8nDC3fPk4f28fWRc2buActHZNDCu0fq7gPm2vPj6K+q
8UYmB0gnN7J8IZ37g+65vlo+Rmeeh+X1Ye6EgY3K86r0m+/H4cc/HJSDcTkb
/6R8c02eyeUZPn7F16n6OHjXTD5x8JjxAEga+dw+JrMcz/LVYPCYhdGJ8ZZf
vy/rc0mmvPotNG/hMYPL1OShX+iQu3M345deMNj+3M6OD3r+yd1zbyy9NR6K
Z3NdUZ5dk49JJWA8gLkQ3ta84wYWNrJ8njy6jwujCoMHjEP1ZMsHz7p7dRr3
3vKhXGjPIO8tXFhSJ0y+Ux56Vw56727bxkKdh5OtTalmsvHwtHTRHkSa8Zm5
kCvG167XmWpSGjRjnKkGjZx865WPnHzXDNo2+CN0fYZZaMbkCw1ebpzoymct
1MfBbn4slpHknZ27Zg52rWzhmsO6HGIHr/XQpWnuHFh48NzldPKgD3Z8dOo9
tpwyXXgnu2tuv/IxmhvhXMgb49ca7+Oad9x4y4ONrDlPHt3HNefM+AFrzqLJ
zD9XKOfaP9m9d4/smgtLKaea8llr3nHjzT7XV3HOw8H19jeLE5ewi7Imjt+A
g3O+PF0nB3YmLxeluTGZyQeUDRtbKGoLo7VlI7ePyQz2d+7n5WV2rpQMjJPM
j8VM0zjJzP3VVl5a1xzWyb4aHJ2YSWbu5QaNXzZ5yq3MnIOnLP8tfPe1FirI
+haON7LmPHl0H9ecM3cfMGk5yUxa071zAWO5615nhp4mj8uaC+mPo0GYwW8f
6qtQ5+HkNo3JsIs8DjM+o1b+0V2eroMJ1oHy8T9+v+Ct3OBg6nbwgPIPhPFL
rE8y5e4P3lwr+23unTi5nfF1stzCmqml15nwU252rrjPZcWFHSk3WzZ+rs+f
SzJzLXydGqQaPHJLkpk798YGp3Q+YZaTzOvMCOePoyBd7nh+TH6/LO/yuHmT
77iBhSSzcJ48uo9rzpm7D1g+IpM7tdAP40OZG1D2/8Yk87Go17kB5bO2JJlH
+2r5GM015rjzcHnYH7YYnNvZ3KDo4Mws3/4fi1JbPmb8coPHl9tcHjGYa8bd
oebxBbB81q8PrkBbKNxzkWmuSfmtfbc4Drq3vBo8lGQGR7zcwqC1g4v8YDuT
swkPXZc+Frl0sOXcyPwqg+2v2dnffDPe07nOmWxG2bz1SWZhdxZO7PKJy7v8
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
AAAAAAAAAAAAAAAAAAAc4v8DWu2HKA==
    "], {{0, 433.}, {375., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{890.7624999999998, Automatic},
  ImageSizeRaw->{375., 433.},
  PlotRange->{{0, 375.}, {0, 433.}}]], "Output",
 CellChangeTimes->{3.958974448081337*^9, 3.959042734887498*^9, 
  3.959042785559899*^9, 3.959050413358843*^9, 3.9590512751380253`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"803534a4-48b3-43d2-ad10-38b76a39bc9e"]
}, Open  ]],

Cell["\<\
The image displays an interactive graph titled \
\[OpenCurlyDoubleQuote]Spekkens Toy Model: Click a state to see reachable \
states.\[CloseCurlyDoubleQuote] The graph features six circular nodes, \
labeled 1 through 6, arranged in a roughly circular layout. Some nodes are \
connected by thick gray arrows, indicating directed transitions. A legend in \
the top right corner explains the color coding for node highlighting: Red for \
\[OpenCurlyDoubleQuote]Selected,\[CloseCurlyDoubleQuote] Yellow for \
\[OpenCurlyDoubleQuote]Reachable,\[CloseCurlyDoubleQuote] and Light Blue for \
\[OpenCurlyDoubleQuote]Other states.\[CloseCurlyDoubleQuote] This suggests \
that clicking on a node will dynamically change its color and the colors of \
its reachable neighbors.

The accompanying Mathematica code defines the `states` (the six fundamental \
binary patterns in the Spekkens model) and `perms` (the four allowed \
permutations, including identity). The `nbrsForHighlighting` table is \
pre-calculated to determine all states reachable from each state by applying \
any permutation, including the state itself if the identity permutation is \
allowed. `nbrsForEdges` is derived from this to specifically find neighbors \
for drawing edges, excluding self-loops. The `edges` for the graph are then \
constructed based on these neighbor relationships.

The `DynamicModule` creates the interactive graph. The `GraphLayout` is set \
to \[OpenCurlyDoubleQuote]CircularEmbedding\[CloseCurlyDoubleQuote] for the \
visual arrangement of nodes. The `VertexStyle` is dynamic: if no vertex is \
clicked (`clickedVertex == 0`), all nodes are `LightBlue`. Once a node is \
clicked, the `clickedVertex` turns `Red`, its direct `Reachable` neighbors \
(as determined by `nbrsForHighlighting`) turn `Yellow`, and all other states \
remain `LightBlue`. Each node is an `EventHandler` which updates \
`clickedVertex` when clicked. The `VertexLabels` display the numerical index \
of the state, and `Inset` is used to embed the `ArrayPlot` of the binary \
pattern directly within each node, making the state visually explicit. This \
setup provides an intuitive way to explore the direct and reachable \
transformations between states in the Spekkens Toy Model.\
\>", "Text",
 CellChangeTimes->{{3.959050133546049*^9, 3.959050153204269*^9}, {
  3.95905018468279*^9, 3.9590501917338057`*^9}, {3.9590502261453867`*^9, 
  3.9590502305900993`*^9}, {3.959050275392338*^9, 3.9590502803162327`*^9}, {
  3.959050317387114*^9, 
  3.959050428121188*^9}},ExpressionUUID->"a22c2443-e8e0-4023-93ad-\
d25436e505f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"baseStates", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"perms", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cycles", "[", 
         RowBox[{"{", "}"}], "]"}], ",", 
        RowBox[{"Cycles", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"Cycles", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"Cycles", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"currentState", "=", "None"}], ",", 
     RowBox[{"graph", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ",", 
     RowBox[{"vertexCoords", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"bipartiteMode", "=", "False"}], ",", 
     RowBox[{"steps", "=", "2"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"StatePlot", "[", "state_", "]"}], ":=", 
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{"state", ",", "2"}], "]"}], ",", 
       RowBox[{"Mesh", "->", "True"}], ",", 
       RowBox[{"ImageSize", "->", "50"}], ",", 
       RowBox[{"PlotLabel", "->", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "state", "]"}], "==", "4"}], ",", 
          "\"\<Single\>\"", ",", "\"\<Bipartite\>\""}], "]"}]}], ",", 
       RowBox[{"Frame", "->", "False"}], ",", 
       RowBox[{"ColorRules", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "->", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0.8", ",", "0.9", ",", "1"}], "]"}]}], ",", 
          RowBox[{"0", "->", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0.9", ",", "0.8"}], "]"}]}]}], "}"}]}]}], 
      "]"}]}], ";", "\n", 
    RowBox[{"bipartiteStates", "=", 
     RowBox[{"Flatten", "/@", 
      RowBox[{"Outer", "[", 
       RowBox[{
       "KroneckerProduct", ",", "baseStates", ",", "baseStates", ",", "1"}], 
       "]"}]}]}], ";", "\n", 
    RowBox[{
     RowBox[{"BuildGraph", "[", "start_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "g", "}"}], ",", 
       RowBox[{
        RowBox[{"g", "=", 
         RowBox[{"NestGraph", "[", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{"state", ",", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Permute", "[", 
                 RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", "perms"}], 
              "]"}]}], "]"}], ",", 
           RowBox[{"{", "start", "}"}], ",", "steps", ",", 
           RowBox[{"VertexLabels", "->", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<Name\>\"", ",", "Tooltip"}], "]"}]}], ",", 
           RowBox[{"VertexShapeFunction", "->", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Inset", "[", 
               RowBox[{
                RowBox[{"StatePlot", "[", "#2", "]"}], ",", "#1", ",", 
                "Center", ",", 
                RowBox[{"Scaled", "[", "0.1", "]"}]}], "]"}], "&"}], ")"}]}], 
           ",", 
           RowBox[{"GraphLayout", "->", "\"\<SpringElectricalEmbedding\>\""}],
            ",", 
           RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
           RowBox[{"EdgeStyle", "->", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0.4", ",", "0.4", ",", "0.8"}], "]"}]}], "]"}]}], ",", 
           RowBox[{"VertexSize", "->", "0.2"}]}], "]"}]}], ";", "\n", 
        RowBox[{"Graph", "[", 
         RowBox[{"g", ",", 
          RowBox[{"VertexCoordinates", "->", 
           RowBox[{"GraphEmbedding", "[", "g", "]"}]}]}], "]"}]}]}], "]"}]}], 
    ";", "\n", 
    RowBox[{"Panel", "[", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<SPEKKENS TOY MODEL EXPLORER\>\"", ",", "Bold", ",", "18", 
                ",", 
                RowBox[{"FontFamily", "->", "\"\<Arial\>\""}]}], "]"}], ",", 
              RowBox[{"Spacer", "[", "20", "]"}], ",", 
              RowBox[{"Button", "[", 
               RowBox[{"\"\<Reset\>\"", ",", 
                RowBox[{
                 RowBox[{"currentState", "=", "None"}], ";", 
                 RowBox[{"graph", "=", 
                  RowBox[{"Graph", "[", 
                   RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}]}], ",", 
                RowBox[{"ImageSize", "->", "80"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
          RowBox[{"Grid", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Panel", "[", 
               RowBox[{
                RowBox[{"Column", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<CONFIGURATION\>\"", ",", "Bold"}], "]"}], 
                   ",", 
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Checkbox", "[", 
                    RowBox[{"Dynamic", "[", "bipartiteMode", "]"}], "]"}], 
                    ",", 
                    RowBox[{"Spacer", "[", "5", "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Bipartite System\>\"", ",", "10"}], "]"}]}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Steps: \>\"", ",", "10"}], "]"}], ",", 
                    RowBox[{"SetterBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "steps", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "->", "\"\<1\>\""}], ",", 
                    RowBox[{"2", "->", "\"\<2\>\""}], ",", 
                    RowBox[{"3", "->", "\"\<3\>\""}]}], "}"}]}], "]"}]}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Button", "[", 
                    RowBox[{"\"\<Show All Transformations\>\"", ",", 
                    RowBox[{"graph", "=", 
                    RowBox[{"BuildGraph", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{"bipartiteMode", ",", 
                    RowBox[{"bipartiteStates", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"baseStates", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}], ",", 
                    RowBox[{"ImageSize", "->", "150"}]}], "]"}]}], "}"}], 
                 "]"}], ",", 
                RowBox[{"ImageSize", "->", "200"}]}], "]"}], ",", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"currentState", "=!=", "None"}], ",", 
                 RowBox[{"Panel", "[", 
                  RowBox[{
                   RowBox[{"Column", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<CURRENT STATE\>\"", ",", "Bold"}], "]"}], 
                    ",", 
                    RowBox[{"StatePlot", "[", "currentState", "]"}], ",", 
                    RowBox[{"Button", "[", 
                    RowBox[{"\"\<Explore Transformations\>\"", ",", 
                    RowBox[{"graph", "=", 
                    RowBox[{"BuildGraph", "[", "currentState", "]"}]}], ",", 
                    RowBox[{"ImageSize", "->", "150"}]}], "]"}]}], "}"}], 
                    "]"}], ",", 
                   RowBox[{"ImageSize", "->", "200"}]}], "]"}], ",", 
                 RowBox[{"Panel", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Select a state to begin\>\"", ",", "Italic"}], "]"}],
                    ",", 
                   RowBox[{"ImageSize", "->", "200"}]}], "]"}]}], "]"}]}]}], 
             "}"}], "}"}], "]"}], ",", 
          RowBox[{"Spacer", "[", "10", "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"MapIndexed", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Button", "[", 
                   RowBox[{
                    RowBox[{"StatePlot", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"currentState", "=", "#1"}], ";", "\n", 
                    RowBox[{"graph", "=", 
                    RowBox[{"BuildGraph", "[", "#1", "]"}]}]}], ",", 
                    RowBox[{"Appearance", "->", "\"\<Palette\>\""}], ",", 
                    RowBox[{"Background", "->", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"currentState", "===", "#1"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9", ",", "1", ",", "0.9"}], "]"}], ",", 
                    "Automatic"}], "]"}]}]}], "]"}], "&"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                  "bipartiteMode", ",", "bipartiteStates", ",", 
                   "baseStates"}], "]"}]}], "]"}], ",", 
               RowBox[{"UpTo", "[", "3", "]"}]}], "]"}], ",", 
             RowBox[{"Alignment", "->", "Center"}], ",", 
             RowBox[{"Frame", "->", "All"}], ",", 
             RowBox[{"FrameStyle", "->", "LightGray"}]}], "]"}], "]"}], ",", 
          RowBox[{"Spacer", "[", "20", "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"VertexCount", "[", "graph", "]"}], ">", "0"}], ",", 
             RowBox[{"Panel", "[", 
              RowBox[{"Column", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    "bipartiteMode", ",", 
                    "\"\<BIPARTITE SYSTEM TRANSFORMATIONS\>\"", ",", 
                    "\"\<SINGLE SYSTEM TRANSFORMATIONS\>\""}], "]"}], ",", 
                   "Bold"}], "]"}], ",", 
                 RowBox[{"Graph", "[", 
                  RowBox[{"graph", ",", 
                   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]}], "}"}], 
               "]"}], "]"}], ",", 
             RowBox[{"Panel", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<No transformation graph available\>\"", ",", "Italic"}], 
                "]"}], ",", 
               RowBox[{"ImageSize", "->", 
                RowBox[{"{", 
                 RowBox[{"500", ",", "300"}], "}"}]}]}], "]"}]}], "]"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
      RowBox[{"ImageMargins", "->", "20"}], ",", 
      RowBox[{"Background", "->", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.95", ",", "0.95", ",", "1"}], "]"}]}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.958974476443431*^9, 3.958974476444593*^9}},
 CellLabel->
  "In[3254]:=",ExpressionUUID->"9e69b5a9-b7e9-458f-a110-10ee49bf2a83"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`baseStates$$ = {{1, 1, 0, 0}, {0, 0, 1, 1}, {
  1, 0, 1, 0}, {0, 1, 0, 1}, {0, 1, 1, 0}, {1, 0, 0, 
  1}}, $CellContext`perms$$ = {
   Cycles[{}], 
   Cycles[{{1, 2}, {3, 4}}], 
   Cycles[{{1, 3}, {2, 4}}], 
   Cycles[{{1, 4}, {2, 3}}]}, $CellContext`currentState$$ = 
  None, $CellContext`graph$$ = 
  Graph[{}, {}], $CellContext`vertexCoords$$ = {}, \
$CellContext`bipartiteMode$$ = False, $CellContext`steps$$ = 2}, 
  PanelBox[
   TagBox[GridBox[{
      {
       TemplateBox[{
         StyleBox[
         "\"SPEKKENS TOY MODEL EXPLORER\"", Bold, 18, FontFamily -> "Arial", 
          StripOnInput -> False], 
         TemplateBox[{20}, "Spacer1"], 
         ButtonBox[
         "\"Reset\"", 
          ButtonFunction :> ($CellContext`currentState$$ = 
            None; $CellContext`graph$$ = Graph[{}, {}]), ImageSize -> 80, 
          Appearance -> Automatic, BaseStyle -> {FontFamily -> "Arial"}, 
          Evaluator -> Automatic, FrameMargins -> 5, Method -> "Preemptive"]},
        
        "Row",
        DisplayFunction->(PaneBox[
          RowBox[{
            TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
          Center]& ),
        InterpretationFunction->(RowBox[{"Row", "[", 
           RowBox[{
             RowBox[{"{", 
               TemplateSlotSequence[1, ","], "}"}], ",", 
             RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]& )]},
      {
       TagBox[GridBox[{
          {
           PanelBox[
            TagBox[GridBox[{
               {
                StyleBox["\<\"CONFIGURATION\"\>",
                 StripOnInput->False,
                 FontWeight->Bold]},
               {
                TemplateBox[{
                  CheckboxBox[
                   Dynamic[$CellContext`bipartiteMode$$]], 
                  TemplateBox[{5}, "Spacer1"], 
                  StyleBox["\"Bipartite System\"", 10, StripOnInput -> False]},
                 "RowDefault"]},
               {
                TemplateBox[{
                  StyleBox["\"Steps: \"", 10, StripOnInput -> False], 
                  InterpretationBox[
                   StyleBox[
                    GridBox[{{
                    SetterBox[
                    Dynamic[$CellContext`steps$$], {1}, "\"1\""], 
                    SetterBox[
                    Dynamic[$CellContext`steps$$], {2}, "\"2\""], 
                    SetterBox[
                    Dynamic[$CellContext`steps$$], {3}, "\"3\""]}}, 
                    ColumnSpacings -> 0, BaselinePosition -> {1, 1}], 
                    Deployed -> True], 
                   SetterBar[
                    Dynamic[$CellContext`steps$$], {
                    1 -> "1", 2 -> "2", 3 -> "3"}]]},
                 "RowDefault"]},
               {
                ButtonBox["\<\"Show All Transformations\"\>",
                 Appearance->Automatic,
                 BaseStyle->{FontFamily -> "Arial"},
                 
                 ButtonFunction:>($CellContext`graph$$ = \
$CellContext`BuildGraph[
                    If[$CellContext`bipartiteMode$$, 
                    Part[$CellContext`bipartiteStates, 1], 
                    Part[$CellContext`baseStates$$, 1]]]),
                 Evaluator->Automatic,
                 FrameMargins->5,
                 ImageSize->150,
                 Method->"Preemptive"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Column"],
            ImageSize->200], 
           DynamicBox[ToBoxes[
             If[$CellContext`currentState$$ =!= None, 
              Panel[
               Column[{
                 Style["CURRENT STATE", Bold], 
                 $CellContext`StatePlot[$CellContext`currentState$$], 
                 Button[
                 "Explore Transformations", $CellContext`graph$$ = \
$CellContext`BuildGraph[$CellContext`currentState$$], ImageSize -> 150]}], 
               ImageSize -> 200], 
              Panel[
               Style["Select a state to begin", Italic], ImageSize -> 200]], 
             StandardForm],
            ImageSizeCache->{125., {9., 12.}}]}
         },
         AutoDelete->False,
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]},
      {
       TemplateBox[{10},
        "Spacer1"]},
      {
       DynamicBox[ToBoxes[
         Grid[
          Partition[
           MapIndexed[Button[
             $CellContext`StatePlot[#], $CellContext`currentState$$ = #; \
$CellContext`graph$$ = $CellContext`BuildGraph[#], Appearance -> "Palette", 
             Background -> If[$CellContext`currentState$$ === #, 
               RGBColor[0.9, 1, 0.9], Automatic]]& , 
            
            If[$CellContext`bipartiteMode$$, $CellContext`bipartiteStates, \
$CellContext`baseStates$$]], 
           UpTo[3]], Alignment -> Center, Frame -> All, FrameStyle -> 
          LightGray], StandardForm],
        ImageSizeCache->{117., {45.232574462890625`, 48.767425537109375`}}]},
      {
       TemplateBox[{20},
        "Spacer1"]},
      {
       DynamicBox[ToBoxes[
         If[VertexCount[$CellContext`graph$$] > 0, 
          Panel[
           Column[{
             Style[
              
              If[$CellContext`bipartiteMode$$, 
               "BIPARTITE SYSTEM TRANSFORMATIONS", 
               "SINGLE SYSTEM TRANSFORMATIONS"], Bold], 
             Graph[$CellContext`graph$$, ImageSize -> Full]}]], 
          Panel[
           Style["No transformation graph available", Italic], 
           ImageSize -> {500, 300}]], StandardForm],
        ImageSizeCache->{312.5, {91.5, 96.}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   Background->RGBColor[0.95, 0.95, 1],
   ImageMargins->20],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.958974476698107*^9, 3.959042736319131*^9, 
  3.9590427855764227`*^9, 3.959050430072085*^9},
 CellLabel->
  "Out[3254]=",ExpressionUUID->"a646d52a-d31f-4333-9600-66916c8ba3e4"]
}, Open  ]],

Cell["\<\
The image displays the user interface of a \[OpenCurlyDoubleQuote]SPEKKENS \
TOY MODEL EXPLORER.\[CloseCurlyDoubleQuote] The top left section provides \
\[OpenCurlyDoubleQuote]CONFIGURATION\[CloseCurlyDoubleQuote] options, \
including a \[OpenCurlyDoubleQuote]Bipartite System\[CloseCurlyDoubleQuote] \
checkbox and a \[OpenCurlyDoubleQuote]Steps\[CloseCurlyDoubleQuote] setter \
bar (1, 2, or 3). A \[OpenCurlyDoubleQuote]Show All Transformations\
\[CloseCurlyDoubleQuote] button is also present. The top right section \
initially prompts the user to \[OpenCurlyDoubleQuote]Select a state to begin.\
\[CloseCurlyDoubleQuote] Below these controls, there\[CloseCurlyQuote]s a \
grid of six $2 \\times 2$ binary patterns, each labeled \
\[OpenCurlyDoubleQuote]Single.\[CloseCurlyDoubleQuote] The bottom part of the \
interface is a large panel that initially states \[OpenCurlyDoubleQuote]No \
transformation graph available,\[CloseCurlyDoubleQuote] which will presumably \
display a graph once a state is selected and transformations are explored.

The provided Mathematica code implements this interactive explorer. It \
defines `baseStates` (the six fundamental Spekkens states) and `perms` (the \
four allowed permutations). `bipartiteStates` are also pre-calculated as \
Kronecker products of `baseStates`. The `StatePlot` function is a utility to \
visually render these binary patterns. The core of the graph generation is \
the `BuildGraph` function. It uses `NestGraph` to construct a state evolution \
graph, starting from a `start` state and iteratively applying permutations up \
to a specified `steps` depth. The graph\[CloseCurlyQuote]s nodes are visually \
represented by `StatePlot`s of the corresponding states.

The main `DynamicModule` orchestrates the entire user experience. Users can \
toggle `bipartiteMode` with a checkbox and set the `steps` for graph \
generation. The grid of `baseStates` (or `bipartiteStates` if `bipartiteMode` \
is active) allows users to `currentState` by clicking on them. Clicking a \
state or the \[OpenCurlyDoubleQuote]Show All Transformations\
\[CloseCurlyDoubleQuote] button triggers the `BuildGraph` function, which \
then updates the `graph` variable. This `graph` is then dynamically displayed \
in the large panel at the bottom. This interactive tool allows users to \
explore both single-system and bipartite-system state transformations within \
the Spekkens model, observing how states evolve over multiple steps under the \
defined permutation rules.\
\>", "Text",
 CellChangeTimes->{{3.959050133546049*^9, 3.959050153204269*^9}, {
  3.95905018468279*^9, 3.9590501917338057`*^9}, {3.9590502261453867`*^9, 
  3.9590502305900993`*^9}, {3.959050275392338*^9, 3.9590502803162327`*^9}, {
  3.959050317387114*^9, 
  3.959050445165514*^9}},ExpressionUUID->"ccbe5692-0ac6-400e-940b-\
df872308fda6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"neighbors", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Union", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"SpekkensStates", ",", 
           RowBox[{"Permute", "[", 
            RowBox[{
             RowBox[{"SpekkensStates", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "perm"}], "]"}]}], "]"}], 
         "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"perm", ",", "SpekkensPermutations"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "SpekkensStates", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"selected", "=", "None"}], "}"}], ",", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", "=", "i"}], "}"}], ",", 
           RowBox[{"EventHandler", "[", 
            RowBox[{
             RowBox[{"Column", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"ArrayPlot", "[", 
                  RowBox[{
                   RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{"SpekkensStates", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "2"}], "]"}], ",", 
                   RowBox[{"Mesh", "->", "True"}], ",", 
                   RowBox[{"ImageSize", "->", "70"}], ",", 
                   RowBox[{"PlotLabel", "->", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"StringJoin", "@@", 
                    RowBox[{"ToString", "/@", 
                    RowBox[{"SpekkensStates", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ",", "8"}], "]"}]}]}],
                   "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"TextString", "[", "i", "]"}], ",", "10", ",", 
                   "Gray"}], "]"}]}], "}"}], ",", 
               RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<MouseClicked\>\"", ":>", 
               RowBox[{"(", 
                RowBox[{"selected", "=", "i"}], ")"}]}], "}"}], ",", 
             RowBox[{"ImageSize", "->", 
              RowBox[{"{", 
               RowBox[{"80", ",", "80"}], "}"}]}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "SpekkensStates", "]"}]}], "}"}]}], "]"}], 
       ",", "3", ",", "3", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "]"}], ",", 
     RowBox[{"Frame", "->", "All"}], ",", 
     RowBox[{"Background", "->", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", "=", "i"}], "}"}], ",", 
          RowBox[{"i", "->", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"selected", "===", "i"}], ",", "LightYellow", ",", 
             RowBox[{
              RowBox[{"selected", "=!=", "None"}], "&&", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"neighbors", "[", 
                 RowBox[{"[", "selected", "]"}], "]"}], ",", "i"}], "]"}]}], 
             ",", "LightBlue", ",", "True", ",", "White"}], "]"}]}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "SpekkensStates", "]"}]}], "}"}]}], "]"}]}], 
     ",", 
     RowBox[{"BaseStyle", "->", 
      RowBox[{"{", 
       RowBox[{"FontFamily", "->", "\"\<Arial\>\""}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", "LightGray"}], ",", 
     RowBox[{"Spacings", "->", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958974488354292*^9, 3.958974488355383*^9}, {
  3.9590504590431967`*^9, 
  3.9590504603577957`*^9}},ExpressionUUID->"a850cbc3-354e-4b8c-a733-\
8f0cdd3c48fc"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`selected$$ = None}, 
  TagBox[GridBox[{
     {
      TagBox[
       TagBox[GridBox[{
          {
           
           GraphicsBox[{
             RasterBox[{{1, 1}, {0, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                 2}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->70,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox[
              StyleBox["\"1100\"", 8, StripOnInput -> False], 
              TraditionalForm]]},
          {
           StyleBox["\<\"1\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0.5],
            FrontFaceColor->GrayLevel[0.5],
            BackFaceColor->GrayLevel[0.5],
            GraphicsColor->GrayLevel[0.5],
            FontSize->10,
            FontColor->GrayLevel[0.5]]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Center}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"],
       EventHandlerTag[{
        "MouseClicked" :> ($CellContext`selected$$ = 1), 
         ImageSize -> {80, 80}, Method -> "Preemptive", PassEventsDown -> 
         Automatic, PassEventsUp -> True}]], 
      TagBox[
       TagBox[GridBox[{
          {
           
           GraphicsBox[{
             RasterBox[{{0, 0}, {1, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                 2}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->70,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox[
              StyleBox["\"0011\"", 8, StripOnInput -> False], 
              TraditionalForm]]},
          {
           StyleBox["\<\"2\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0.5],
            FrontFaceColor->GrayLevel[0.5],
            BackFaceColor->GrayLevel[0.5],
            GraphicsColor->GrayLevel[0.5],
            FontSize->10,
            FontColor->GrayLevel[0.5]]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Center}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"],
       EventHandlerTag[{
        "MouseClicked" :> ($CellContext`selected$$ = 2), 
         ImageSize -> {80, 80}, Method -> "Preemptive", PassEventsDown -> 
         Automatic, PassEventsUp -> True}]], 
      TagBox[
       TagBox[GridBox[{
          {
           
           GraphicsBox[{
             RasterBox[{{0, 1}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                 2}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->70,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox[
              StyleBox["\"1010\"", 8, StripOnInput -> False], 
              TraditionalForm]]},
          {
           StyleBox["\<\"3\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0.5],
            FrontFaceColor->GrayLevel[0.5],
            BackFaceColor->GrayLevel[0.5],
            GraphicsColor->GrayLevel[0.5],
            FontSize->10,
            FontColor->GrayLevel[0.5]]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Center}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"],
       EventHandlerTag[{
        "MouseClicked" :> ($CellContext`selected$$ = 3), 
         ImageSize -> {80, 80}, Method -> "Preemptive", PassEventsDown -> 
         Automatic, PassEventsUp -> True}]]},
     {
      TagBox[
       TagBox[GridBox[{
          {
           
           GraphicsBox[{
             RasterBox[{{1, 0}, {1, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                 2}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->70,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox[
              StyleBox["\"0101\"", 8, StripOnInput -> False], 
              TraditionalForm]]},
          {
           StyleBox["\<\"4\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0.5],
            FrontFaceColor->GrayLevel[0.5],
            BackFaceColor->GrayLevel[0.5],
            GraphicsColor->GrayLevel[0.5],
            FontSize->10,
            FontColor->GrayLevel[0.5]]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Center}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"],
       EventHandlerTag[{
        "MouseClicked" :> ($CellContext`selected$$ = 4), 
         ImageSize -> {80, 80}, Method -> "Preemptive", PassEventsDown -> 
         Automatic, PassEventsUp -> True}]], 
      TagBox[
       TagBox[GridBox[{
          {
           
           GraphicsBox[{
             RasterBox[{{0, 1}, {1, 0}}, {{0, 0}, {2, 2}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                 2}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->70,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox[
              StyleBox["\"0110\"", 8, StripOnInput -> False], 
              TraditionalForm]]},
          {
           StyleBox["\<\"5\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0.5],
            FrontFaceColor->GrayLevel[0.5],
            BackFaceColor->GrayLevel[0.5],
            GraphicsColor->GrayLevel[0.5],
            FontSize->10,
            FontColor->GrayLevel[0.5]]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Center}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"],
       EventHandlerTag[{
        "MouseClicked" :> ($CellContext`selected$$ = 5), 
         ImageSize -> {80, 80}, Method -> "Preemptive", PassEventsDown -> 
         Automatic, PassEventsUp -> True}]], 
      TagBox[
       TagBox[GridBox[{
          {
           
           GraphicsBox[{
             RasterBox[{{1, 0}, {0, 1}}, {{0, 0}, {2, 2}}, {0, 1}], {
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 2}, {2, 2}}, {{0, 1}, {2, 1}}, {{0, 0}, {2, 
                 0}}}],
                Antialiasing->False]}, 
              {GrayLevel[0.5], 
               
               StyleBox[
                LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                 2}}}],
                Antialiasing->False]}}},
            Frame->True,
            FrameLabel->{None, None},
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.5]],
            FrameTicks->{{None, None}, {None, None}},
            GridLinesStyle->Directive[
              GrayLevel[0.5, 0.4]],
            ImageSize->70,
            
            Method->{
             "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
              "DefaultGraphicsInteraction" -> {
               "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2}, 
                  "HighlightPoint" -> {"ratio" -> 2}, 
                  "Droplines" -> {
                   "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
              "DefaultPlotStyle" -> Automatic},
            PlotLabel->FormBox[
              StyleBox["\"1001\"", 8, StripOnInput -> False], 
              TraditionalForm]]},
          {
           StyleBox["\<\"6\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0.5],
            FrontFaceColor->GrayLevel[0.5],
            BackFaceColor->GrayLevel[0.5],
            GraphicsColor->GrayLevel[0.5],
            FontSize->10,
            FontColor->GrayLevel[0.5]]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Center}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"],
       EventHandlerTag[{
        "MouseClicked" :> ($CellContext`selected$$ = 6), 
         ImageSize -> {80, 80}, Method -> "Preemptive", PassEventsDown -> 
         Automatic, PassEventsUp -> True}]]}
    },
    AutoDelete->False,
    BaseStyle->{FontFamily -> "Arial"},
    FrameStyle->GrayLevel[0.85],
    GridBoxBackground->{
     "ColumnsIndexed" -> {1 -> GrayLevel[1]}, 
      "RowsIndexed" -> {2 -> GrayLevel[1]}},
    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
   "Grid"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.958974489023624*^9, 3.959042737705888*^9, 
  3.959042785642295*^9},
 CellLabel->
  "Out[1331]=",ExpressionUUID->"be2ded43-d939-4f9f-974c-736db49426d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AllPermutations", "=", 
   RowBox[{"PermutationCycles", "/@", 
    RowBox[{"Permutations", "[", 
     RowBox[{"Range", "[", "4", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "states", ",", "perms", ",", "productStates", ",", "neighborFunction", 
       ",", "graph", ",", "vertexLabels", ",", "vertexCoordinates", ",", 
       "vertexSize"}], "}"}], ",", 
     RowBox[{
      RowBox[{"states", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"systemType", "==", "\"\<Single System\>\""}], ",", 
         "SpekkensStates", ",", 
         RowBox[{"KroneckerProduct", "@@@", 
          RowBox[{"Tuples", "[", 
           RowBox[{"SpekkensStates", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"perms", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"permSet", "==", "\"\<Spekkens\>\""}], ",", 
         "SpekkensPermutations", ",", "AllPermutations"}], "]"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"neighborFunction", "[", "state_", "]"}], ":=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Permute", "[", 
           RowBox[{"state", ",", "#"}], "]"}], "&"}], "/@", "perms"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"graph", "=", 
       RowBox[{"NestGraph", "[", 
        RowBox[{"neighborFunction", ",", 
         RowBox[{"{", 
          RowBox[{"states", "[", 
           RowBox[{"[", "startState", "]"}], "]"}], "}"}], ",", "steps", ",", 
         
         RowBox[{"VertexLabels", "->", "None"}], ",", 
         RowBox[{"GraphLayout", "->", "layout"}]}], "]"}]}], ";", "\n", 
      RowBox[{"vertexLabels", "=", 
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"VertexList", "[", "graph", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"systemType", "==", "\"\<Single System\>\""}], ",", 
             RowBox[{"ArrayPlot", "[", 
              RowBox[{
               RowBox[{"Partition", "[", 
                RowBox[{"#", ",", "2"}], "]"}], ",", 
               RowBox[{"Mesh", "->", "True"}], ",", 
               RowBox[{"ImageSize", "->", "40"}], ",", 
               RowBox[{"Frame", "->", "False"}]}], "]"}], ",", 
             RowBox[{"ArrayPlot", "[", 
              RowBox[{
               RowBox[{"Partition", "[", 
                RowBox[{"#", ",", "4"}], "]"}], ",", 
               RowBox[{"Mesh", "->", "True"}], ",", 
               RowBox[{"ImageSize", "->", "40"}], ",", 
               RowBox[{"Frame", "->", "False"}]}], "]"}]}], "]"}], "&"}], "/@", 
          RowBox[{"VertexList", "[", "graph", "]"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"VertexList", "[", "graph", "]"}], ",", 
        RowBox[{"EdgeList", "[", "graph", "]"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{"v_", ":>", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"vertexLabels", "[", "v", "]"}], ",", "Center"}], 
            "]"}]}], "}"}]}], ",", 
        RowBox[{"VertexSize", "->", "0.8"}], ",", 
        RowBox[{"VertexStyle", "->", 
         RowBox[{"If", "[", 
          RowBox[{"highlightPath", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Alternatives", "@@", 
               RowBox[{"VertexOutComponent", "[", 
                RowBox[{"graph", ",", 
                 RowBox[{"states", "[", 
                  RowBox[{"[", "startState", "]"}], "]"}], ",", "steps"}], 
                "]"}]}], "->", "LightBlue"}], ",", 
             RowBox[{"_", "->", "LightYellow"}]}], "}"}], ",", 
           "LightYellow"}], "]"}]}], ",", 
        RowBox[{"EdgeStyle", "->", 
         RowBox[{"If", "[", 
          RowBox[{"highlightPath", ",", "LightGray", ",", "Black"}], "]"}]}], 
        ",", 
        RowBox[{"GraphHighlightStyle", "->", "\"\<Thick\>\""}], ",", 
        RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
        RowBox[{"ImageSize", "->", 
         RowBox[{"{", 
          RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<System Configuration\>\"", ",", "Bold", ",", "12"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "systemType", ",", "\"\<Single System\>\"", ",", 
       "\"\<System Type\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Single System\>\"", "->", "\"\<1 System (4x4)\>\""}], ",", 
       RowBox[{"\"\<Bipartite\>\"", "->", "\"\<2 Systems (16x16)\>\""}]}], 
      "}"}], ",", 
     RowBox[{"ControlType", "->", "RadioButtonBar"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "permSet", ",", "\"\<Spekkens\>\"", ",", "\"\<Permutation Set\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Spekkens\>\"", "->", "\"\<Restricted (4)\>\""}], ",", 
       RowBox[{"\"\<All\>\"", "->", "\"\<Full (24)\>\""}]}], "}"}], ",", 
     RowBox[{"ControlType", "->", "RadioButtonBar"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"startState", ",", "1", ",", "\"\<Initial State\>\""}], "}"}], 
     ",", 
     RowBox[{"Dynamic", "@", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"systemType", "==", "\"\<Single System\>\""}], ",", 
            "SpekkensStates", ",", 
            RowBox[{"KroneckerProduct", "@@@", 
             RowBox[{"Tuples", "[", 
              RowBox[{"SpekkensStates", ",", 
               RowBox[{"{", "2", "}"}]}], "]"}]}]}], "]"}], "]"}], "]"}], "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"ArrayPlot", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"systemType", "==", "\"\<Single System\>\""}], ",", 
               RowBox[{"Partition", "[", 
                RowBox[{"#", ",", "2"}], "]"}], ",", 
               RowBox[{"Partition", "[", 
                RowBox[{"#", ",", "4"}], "]"}]}], "]"}], ",", 
             RowBox[{"Mesh", "->", "True"}], ",", 
             RowBox[{"ImageSize", "->", "30"}]}], "]"}], "&"}], "/@", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"systemType", "==", "\"\<Single System\>\""}], ",", 
            "SpekkensStates", ",", 
            RowBox[{"KroneckerProduct", "@@@", 
             RowBox[{"Tuples", "[", 
              RowBox[{"SpekkensStates", ",", 
               RowBox[{"{", "2", "}"}]}], "]"}]}]}], "]"}]}], ")"}]}], 
       "]"}]}], ",", 
     RowBox[{"ControlType", "->", "SetterBar"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"steps", ",", "1", ",", "\"\<Steps\>\""}], "}"}], ",", "0", ",",
      "4", ",", "1", ",", 
     RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "layout", ",", "\"\<SpringEmbedding\>\"", ",", "\"\<Layout\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<SpringEmbedding\>\"", "->", "\"\<Spring\>\""}], ",", 
       RowBox[{"\"\<LayeredDigraphEmbedding\>\"", "->", "\"\<Layered\>\""}], 
       ",", 
       RowBox[{"\"\<CircularEmbedding\>\"", "->", "\"\<Circular\>\""}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"highlightPath", ",", "True", ",", "\"\<Highlight Path\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   RowBox[{"ControlPlacement", "->", "Left"}], ",", 
   RowBox[{"TrackedSymbols", ":>", 
    RowBox[{"{", 
     RowBox[{
     "systemType", ",", "permSet", ",", "startState", ",", "steps", ",", 
      "layout", ",", "highlightPath"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958974517407845*^9, 3.958974517409591*^9}, {
  3.959050462709325*^9, 
  3.959050462851313*^9}},ExpressionUUID->"0160dd00-630c-46c5-b4f3-\
df32dbecc489"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`highlightPath$$ = 
    True, $CellContext`layout$$ = "SpringEmbedding", $CellContext`permSet$$ = 
    "Spekkens", $CellContext`startState$$ = 1, $CellContext`steps$$ = 
    1, $CellContext`systemType$$ = "Single System", Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Style["System Configuration", Bold, 12]], 
      Manipulate`Dump`ThisIsNotAControl, ControlType -> None}, {{
       Hold[$CellContext`systemType$$], "Single System", "System Type"}, {
      "Single System" -> "1 System (4x4)", "Bipartite" -> 
       "2 Systems (16x16)"}, ControlType -> RadioButtonBar}, {{
       Hold[$CellContext`permSet$$], "Spekkens", "Permutation Set"}, {
      "Spekkens" -> "Restricted (4)", "All" -> "Full (24)"}, ControlType -> 
      RadioButtonBar}, {{
       Hold[$CellContext`startState$$], 1, "Initial State"}, 
      Dynamic[
       Thread[Range[
          Length[
           
           If[$CellContext`systemType$$ == 
            "Single System", $CellContext`SpekkensStates, 
            MapApply[KroneckerProduct, 
             Tuples[$CellContext`SpekkensStates, {2}]]]]] -> Map[ArrayPlot[
           If[$CellContext`systemType$$ == "Single System", 
            Partition[#, 2], 
            Partition[#, 4]], Mesh -> True, ImageSize -> 30]& , 
          
          If[$CellContext`systemType$$ == 
           "Single System", $CellContext`SpekkensStates, 
           MapApply[KroneckerProduct, 
            Tuples[$CellContext`SpekkensStates, {2}]]]]]], ControlType -> 
      Automatic}, {{
       Hold[$CellContext`steps$$], 1, "Steps"}, 0, 4, 1, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`layout$$], "SpringEmbedding", "Layout"}, {
      "SpringEmbedding" -> "Spring", "LayeredDigraphEmbedding" -> "Layered", 
       "CircularEmbedding" -> "Circular"}, ControlType -> SetterBar}, {{
       Hold[$CellContext`highlightPath$$], True, "Highlight Path"}, {
      True, False}, ControlType -> Checkbox}}, Typeset`size$$ = {
    375., {186., 189.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`highlightPath$$ = 
        True, $CellContext`layout$$ = 
        "SpringEmbedding", $CellContext`permSet$$ = 
        "Spekkens", $CellContext`startState$$ = 1, $CellContext`steps$$ = 
        1, $CellContext`systemType$$ = "Single System"}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`states$, $CellContext`perms$, \
$CellContext`productStates$, $CellContext`neighborFunction$, \
$CellContext`graph$, $CellContext`vertexLabels$, \
$CellContext`vertexCoordinates$, $CellContext`vertexSize$}, \
$CellContext`states$ = 
         If[$CellContext`systemType$$ == 
           "Single System", $CellContext`SpekkensStates, 
           MapApply[KroneckerProduct, 
            Tuples[$CellContext`SpekkensStates, {2}]]]; $CellContext`perms$ = 
         If[$CellContext`permSet$$ == 
           "Spekkens", $CellContext`SpekkensPermutations, \
$CellContext`AllPermutations]; $CellContext`neighborFunction$[
           Pattern[$CellContext`state$, 
            Blank[]]] := DeleteDuplicates[
           Map[
           Permute[$CellContext`state$, #]& , $CellContext`perms$]]; \
$CellContext`graph$ = NestGraph[$CellContext`neighborFunction$, {
            
            Part[$CellContext`states$, $CellContext`startState$$]}, \
$CellContext`steps$$, VertexLabels -> None, 
           GraphLayout -> $CellContext`layout$$]; $CellContext`vertexLabels$ = 
         AssociationThread[
           VertexList[$CellContext`graph$], 
           Map[If[$CellContext`systemType$$ == "Single System", 
             ArrayPlot[
              Partition[#, 2], Mesh -> True, ImageSize -> 40, Frame -> False], 
             ArrayPlot[
              Partition[#, 4], Mesh -> True, ImageSize -> 40, Frame -> 
              False]]& , 
            VertexList[$CellContext`graph$]]]; Graph[
          VertexList[$CellContext`graph$], 
          EdgeList[$CellContext`graph$], 
          VertexLabels -> {Pattern[$CellContext`v$, 
              Blank[]] :> Placed[
              $CellContext`vertexLabels$[$CellContext`v$], Center]}, 
          VertexSize -> 0.8, VertexStyle -> 
          If[$CellContext`highlightPath$$, {Apply[Alternatives, 
               VertexOutComponent[$CellContext`graph$, 
                
                Part[$CellContext`states$, $CellContext`startState$$], \
$CellContext`steps$$]] -> LightBlue, Blank[] -> LightYellow}, LightYellow], 
          EdgeStyle -> If[$CellContext`highlightPath$$, LightGray, Black], 
          GraphHighlightStyle -> "Thick", PerformanceGoal -> "Quality", 
          ImageSize -> {600, 600}]], "Specifications" :> {
        Style[
        "System Configuration", Bold, 
         12], {{$CellContext`systemType$$, "Single System", "System Type"}, {
         "Single System" -> "1 System (4x4)", "Bipartite" -> 
          "2 Systems (16x16)"}, ControlType -> 
         RadioButtonBar}, {{$CellContext`permSet$$, "Spekkens", 
          "Permutation Set"}, {
         "Spekkens" -> "Restricted (4)", "All" -> "Full (24)"}, ControlType -> 
         RadioButtonBar}, {{$CellContext`startState$$, 1, "Initial State"}, 
         Dynamic[
          Thread[Range[
             Length[
              
              If[$CellContext`systemType$$ == 
               "Single System", $CellContext`SpekkensStates, 
               MapApply[KroneckerProduct, 
                Tuples[$CellContext`SpekkensStates, {2}]]]]] -> 
           Map[ArrayPlot[
              If[$CellContext`systemType$$ == "Single System", 
               Partition[#, 2], 
               Partition[#, 4]], Mesh -> True, ImageSize -> 30]& , 
             
             If[$CellContext`systemType$$ == 
              "Single System", $CellContext`SpekkensStates, 
              MapApply[KroneckerProduct, 
               Tuples[$CellContext`SpekkensStates, {2}]]]]]], ControlType -> 
         SetterBar}, {{$CellContext`steps$$, 1, "Steps"}, 0, 4, 1, Appearance -> 
         "Labeled"}, {{$CellContext`layout$$, "SpringEmbedding", "Layout"}, {
         "SpringEmbedding" -> "Spring", "LayeredDigraphEmbedding" -> 
          "Layered", "CircularEmbedding" -> 
          "Circular"}}, {{$CellContext`highlightPath$$, True, 
          "Highlight Path"}, {True, False}}}, 
      "Options" :> {
       ControlPlacement -> Left, 
        TrackedSymbols :> {$CellContext`systemType$$, $CellContext`permSet$$, \
$CellContext`startState$$, $CellContext`steps$$, $CellContext`layout$$, \
$CellContext`highlightPath$$}}, "DefaultOptions" :> {}],
     ImageSizeCache->{620., {204., 209.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.958974517673242*^9, 3.959042741370394*^9, 
  3.959042785666721*^9},
 CellLabel->
  "Out[1335]=",ExpressionUUID->"10833b74-bc16-4141-8b84-776b6d3ee683"]
}, Open  ]],

Cell["\<\
The provided image (`image_849109.jpg`) contains two distinct sections that \
appear to be snapshots of different interactive Mathematica applications for \
exploring the Spekkens Toy Model.

The top section of the image displays a grid of six $2 \\times 2$ binary \
patterns, each representing a fundamental Spekkens state and labeled with its \
corresponding binary vector. A \[OpenCurlyDoubleQuote]Reset\
\[CloseCurlyDoubleQuote] button is visible at the very top. This part of the \
interface is designed for exploring the direct neighborhood of individual \
Spekkens states. When a state is clicked, it becomes `selected` and is \
highlighted in yellow, while its direct neighbors (states reachable by a \
single permutation) are highlighted in light blue. The background of the grid \
dynamically changes color to reflect the selection and neighborhood, \
providing an intuitive way to visualize immediate transformations.

The lower section of the image showcases a more complex \
\[OpenCurlyDoubleQuote]Spekkens Model Evolution\[CloseCurlyDoubleQuote] tool. \
This interface allows for detailed configuration of a state evolution graph. \
Controls on the left enable users to select the \[OpenCurlyDoubleQuote]System \
Type\[CloseCurlyDoubleQuote] (either \[OpenCurlyDoubleQuote]Single System\
\[CloseCurlyDoubleQuote] with $2 \\times 2$ states or \
\[OpenCurlyDoubleQuote]Bipartite\[CloseCurlyDoubleQuote] with $4 \\times 4$ \
composite states), the \[OpenCurlyDoubleQuote]Permutation Set\
\[CloseCurlyDoubleQuote] (restricted \[OpenCurlyDoubleQuote]Spekkens\
\[CloseCurlyDoubleQuote] or \[OpenCurlyDoubleQuote]Full\
\[CloseCurlyDoubleQuote] permutations), the \[OpenCurlyDoubleQuote]Initial \
State\[CloseCurlyDoubleQuote] from a setter bar, the \
\[OpenCurlyDoubleQuote]Steps\[CloseCurlyDoubleQuote] for evolution, and the \
\[OpenCurlyDoubleQuote]Graph Layout\[CloseCurlyDoubleQuote] (Spring, Layered, \
or Circular). The main display area shows a graph where nodes are state \
representations and edges depict transitions. The code indicates that \
clicking on a state in the initial grid (from the top section) can set it as \
the `startState` for this lower graph. This dynamic interaction allows for \
comprehensive exploration of how different initial states and permutation \
rules influence the structure and evolution of the state space within the \
Spekkens model.\
\>", "Text",
 CellChangeTimes->{{3.959050133546049*^9, 3.959050153204269*^9}, {
  3.95905018468279*^9, 3.9590501917338057`*^9}, {3.9590502261453867`*^9, 
  3.9590502305900993`*^9}, {3.959050275392338*^9, 3.9590502803162327`*^9}, {
  3.959050317387114*^9, 
  3.959050472696611*^9}},ExpressionUUID->"f86c23cc-1c65-4980-92cd-\
5046f8db2c65"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpekkensStates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SpekkensPermutations", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cycles", "[", 
      RowBox[{"{", "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Cycles", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"AllPermutations", "=", 
   RowBox[{"PermutationCycles", "/@", 
    RowBox[{"Permutations", "[", 
     RowBox[{"Range", "[", "4", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"permuteMatrix", "[", 
    RowBox[{"mat_", ",", "perm_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", "=", 
       RowBox[{"PermutationList", "[", 
        RowBox[{"perm", ",", "4"}], "]"}]}], "}"}], ",", 
     RowBox[{"mat", "[", 
      RowBox[{"[", 
       RowBox[{"p", ",", "p"}], "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"buildGraph", "[", "perms_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "states2", ",", "matrices", ",", "indexLookup", ",", "edges", ",", 
       "vertexCount", ",", "i", ",", "j", ",", "mat", ",", "newmat", ",", 
       "k"}], "}"}], ",", 
     RowBox[{
      RowBox[{"states2", "=", 
       RowBox[{"Tuples", "[", 
        RowBox[{"SpekkensStates", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"matrices", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "@@@", "states2"}]}], ";", 
      "\n", 
      RowBox[{"vertexCount", "=", 
       RowBox[{"Length", "[", "matrices", "]"}]}], ";", "\n", 
      RowBox[{"indexLookup", "=", 
       RowBox[{"AssociationThread", "[", 
        RowBox[{"matrices", "->", 
         RowBox[{"Range", "[", "vertexCount", "]"}]}], "]"}]}], ";", "\n", 
      RowBox[{"edges", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<=", "vertexCount"}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{
         RowBox[{"mat", "=", 
          RowBox[{"matrices", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "<=", 
            RowBox[{"Length", "[", "perms", "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", 
           RowBox[{
            RowBox[{"newmat", "=", 
             RowBox[{"permuteMatrix", "[", 
              RowBox[{"mat", ",", 
               RowBox[{"perms", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ";", "\n", 
            RowBox[{"k", "=", 
             RowBox[{"indexLookup", "[", "newmat", "]"}]}], ";", "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "!=", "k"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"edges", ",", 
                RowBox[{"UndirectedEdge", "[", 
                 RowBox[{"i", ",", "k"}], "]"}]}], "]"}]}], "]"}]}]}], 
          "]"}]}]}], "]"}], ";", "\n", 
      RowBox[{"SimpleGraph", "[", 
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{"Range", "[", "vertexCount", "]"}], ",", "edges"}], "]"}], 
       "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"vertexPlots", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ArrayPlot", "[", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{"#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Mesh", "->", "True"}], ",", 
       RowBox[{"ImageSize", "->", "30"}], ",", 
       RowBox[{"PlotRangePadding", "->", "0"}], ",", 
       RowBox[{"Frame", "->", "False"}]}], "]"}], "&"}], "@@@", 
    RowBox[{"Tuples", "[", 
     RowBox[{"SpekkensStates", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"graph", "=", 
      RowBox[{"buildGraph", "[", "SpekkensPermutations", "]"}]}], ",", 
     RowBox[{"comps", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"selectedComp", "=", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"currentPermSet", "=", "\"\<Spekkens\>\""}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"comps", "=", 
     RowBox[{"ConnectedComponents", "[", "graph", "]"}]}], ";", "\n", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "comps", "]"}], ">", "0"}], ",", 
      RowBox[{"selectedComp", "=", 
       RowBox[{"comps", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", "\n", 
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Permutation Set: \>\"", ",", "12", ",", "Bold"}], 
             "]"}], ",", 
            RowBox[{"RadioButtonBar", "[", 
             RowBox[{
              RowBox[{"Dynamic", "[", 
               RowBox[{"currentPermSet", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"currentPermSet", "=", "#"}], ";", "\n", 
                   RowBox[{"graph", "=", 
                    RowBox[{"buildGraph", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"#", "===", "\"\<Spekkens\>\""}], ",", 
                    "SpekkensPermutations", ",", "AllPermutations"}], "]"}], 
                    "]"}]}], ";", "\n", 
                   RowBox[{"comps", "=", 
                    RowBox[{"ConnectedComponents", "[", "graph", "]"}]}], ";",
                    "\n", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "comps", "]"}], ">", "0"}], ",", 
                    RowBox[{"selectedComp", "=", 
                    RowBox[{"comps", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"selectedComp", "=", 
                    RowBox[{"{", "}"}]}]}], "]"}]}], ")"}], "&"}]}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<Spekkens\>\"", "->", "\"\<Restricted (4)\>\""}], 
                ",", 
                RowBox[{"\"\<All\>\"", "->", "\"\<Full (24)\>\""}]}], "}"}]}],
              "]"}], ",", 
            RowBox[{"Spacer", "[", "20", "]"}], ",", 
            RowBox[{"Button", "[", 
             RowBox[{"\"\<Reset Selection\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "comps", "]"}], ">", "0"}], ",", 
                RowBox[{"selectedComp", "=", 
                 RowBox[{"comps", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", 
              RowBox[{"ImageSize", "->", "Medium"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"Alignment", "->", "Center"}]}], "]"}], ",", 
        RowBox[{"Dynamic", "@", 
         RowBox[{"Graph", "[", 
          RowBox[{"graph", ",", 
           RowBox[{"VertexSize", "->", "0.15"}], ",", 
           RowBox[{"VertexLabels", "->", 
            RowBox[{"Placed", "[", 
             RowBox[{"\"\<Name\>\"", ",", "Center"}], "]"}]}], ",", 
           RowBox[{"VertexShape", "->", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"i", "->", 
               RowBox[{"vertexPlots", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"VertexCount", "[", "graph", "]"}]}], "}"}]}], 
             "]"}]}], ",", 
           RowBox[{"GraphHighlight", "->", "selectedComp"}], ",", 
           RowBox[{"GraphHighlightStyle", "->", 
            RowBox[{"Directive", "[", 
             RowBox[{"Thick", ",", "Yellow"}], "]"}]}], ",", 
           RowBox[{"EdgeStyle", "->", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"Thickness", "[", "0.003", "]"}]}], "]"}]}], ",", 
           RowBox[{"PerformanceGoal", "->", "\"\<Quality\>\""}], ",", 
           RowBox[{"ImageSize", "->", "700"}], ",", 
           RowBox[{"GraphLayout", "->", "\"\<SpringElectricalEmbedding\>\""}],
            ",", 
           RowBox[{"PlotLabel", "->", 
            RowBox[{"Dynamic", "@", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"\"\<Connected Component: \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Length", "[", "selectedComp", "]"}], "]"}], "<>", 
                "\"\< states\>\""}], ",", "14", ",", "Bold"}], "]"}]}]}], ",", 
           RowBox[{"Epilog", "->", 
            RowBox[{"{", 
             RowBox[{"MapIndexed", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Inset", "[", 
                 RowBox[{"#1", ",", 
                  RowBox[{
                   RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                   RowBox[{"{", 
                    RowBox[{"0.5", ",", "0.5"}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "0.06"}], "]"}], 
                "&"}], ",", "vertexPlots"}], "]"}], "}"}]}]}], "]"}]}], ",", 
        RowBox[{"Dynamic", "@", 
         RowBox[{"EventHandler", "[", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"i", "=", "i"}], "}"}], ",", 
                   RowBox[{"EventHandler", "[", 
                    RowBox[{
                    RowBox[{"Inset", "[", 
                    RowBox[{
                    RowBox[{"vertexPlots", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "6"}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "/", "6"}], "]"}]}]}], 
                    "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<MouseClicked\>\"", ":>", 
                    RowBox[{"(", 
                    RowBox[{"selectedComp", "=", 
                    RowBox[{"First", "@", 
                    RowBox[{"Select", "[", 
                    RowBox[{"comps", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"#", ",", "i"}], "]"}], "&"}]}], "]"}]}]}], 
                    ")"}]}], "}"}]}], "]"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "36"}], "}"}]}], "]"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"selectedComp", "=!=", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Yellow", ",", 
                   RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"#", "-", "1"}], ",", "6"}], "]"}], "-", "0.5"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", "1"}], ")"}], "/", "6"}], "]"}]}], "-", 
                    "0.5"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"#", "-", "1"}], ",", "6"}], "]"}], "+", "0.5"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "-", "1"}], ")"}], "/", "6"}], "]"}]}], "+", 
                    "0.5"}]}], "}"}]}], "]"}], "&"}], ",", "selectedComp"}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"PlotRange", "->", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "6"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "6"}], ",", "0.5"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "->", 
              RowBox[{"{", 
               RowBox[{"500", ",", "450"}], "}"}]}], ",", 
             RowBox[{"Frame", "->", "True"}], ",", 
             RowBox[{"FrameTicks", "->", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "i"}], ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<State \>\"", ",", "i"}], "}"}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
                  "None"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"i", "+", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
                  "None"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"FrameLabel", "->", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Column", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<Second System\>\"", ",", "\"\<State Index\>\""}], 
                   "}"}], ",", "Center"}], "]"}], ",", 
                RowBox[{"Column", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<First System\>\"", ",", "\"\<State Index\>\""}], 
                   "}"}], ",", "Center"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"GridLines", "->", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"0", ",", "6"}], "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Range", "[", 
                  RowBox[{"0", ",", "6"}], "]"}]}]}], "}"}]}], ",", 
             RowBox[{"PlotLabel", "->", 
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<Click any state to select component\>\"", ",", "14", ",", 
                "Bold"}], "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<MouseClicked\>\"", ":>", 
             RowBox[{"(", 
              RowBox[{"selectedComp", "=", 
               RowBox[{"{", "}"}]}], ")"}]}], "}"}]}], "]"}]}]}], "}"}], ",", 
      
      RowBox[{"Alignment", "->", "Center"}]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.95897455635224*^9, 3.958974556353544*^9}, {
  3.959050474554586*^9, 3.959050477208435*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"019093fa-fab9-47cf-90ba-f3e2db796f02"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd4VMe597GJ4xLXOI6duMR2in1J4pvEJYlzb5ziOI4jQALRmxAghADR
i0Agiyo6oojemymi2SAsQCBAFAGSkEBIAgmEGuq9l/3+7Psx92R3tdrVltmj
fX+PHj27Z+fMec87Z2b+M2fKW56jung92q5du3FP4F+XgZP+OnbsQL+uz+NL
N99xw4b6Dhn8L9/xQ4YOGfsHz/Y4eP6xdu1G4MODzxqGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRjGWWlqMvbHMAzDMAzDMEqEUGxs5o+VJMMwDMMwDCNQSseG
Rk1dw4O/WsUfHcFPSjHJMAzDMAzDOCdK9Ui6saZeU1mnqajVlNdqSmse/OED
vuIgfiI9yUqSYRiGYRjGaRECsr7xgTisqnugGCNSNYERGvddmo/Xan61/MEf
PuDrlxEPfkIABEPg+kaWkSqmsLAwOTn50qVLp06dOqEFH/AVB/GTbOsYhmEY
hnFchICs06rHkmrN5hjNXzdq3llq7A8BEAyBcQp1SLKMVBFNTU2ZmZnnzp07
e/ZsbGxsUlJSamrqXS34gK84iJ8QAMGaOF0ZhmEYhvlPSPg1aLsfK+s013M1
nbZrfrHU1D8EximV2g5JRMIyUhVUVVVd1JKcnAyJmJ2dff/+/by8vHwt+ICv
OIifEIBC4hTZVjsFTXo0Mg6JfkrJfnYYhmHsiuiBJAEZflvzwSrNz5eY94dT
Ttz+/zKSeyMdn8LCwtOnT8fFxWVlZeXm5uJraWlpeXl5pQJ8xUH8hAAIhsA4
paioSLbtbRylFKmvr6+urq6oqCh7CFKkhJEKkkAkB5IGCYRk0k87hmEYZ0C8
woYCPJKseTdY87MlrfnDid8kP4hEvNRmHJOCgoKIiIikpCSIw+LiYqoH6+rq
GhoalH0s+IqDpGEQDIFxCk7Mz8+XfQdtE9HfiA8k6QElTT3jkFAGoZSCpFT2
T8p+mhiGYWyOmERTVaeJyX4wZeani1v/96tlDyJBVGKKDeNoQBCeOnUqOTkZ
ShIVX01NDarC5mo9UjUIgGAIjFNwIk5HJPa3vA0jXljD1SUlJXA1xIlsoxjz
QJIh4ZB8IkOxkmQYRqMt4WWbYCtoGGRNvaawSvOvLZq3Fln6h0gQFSKkgZEO
CPTPhQsX7JOmhYWFqampRgLs2bNnx44dxiPZvXv3V199ZRV7cNeXL19OTEyE
YVVVVaj1TOkzIXmDwDgFJ+J0RGI7B6Iivn37dv3D94M5OTkZGRlGwpviQ1Ow
op/NhTxcW1sL9zqzPtdJeitit1yPCyERkZTcG8kwDLh69epLL730ySef2KJA
aGhoQI187do1lDlWj7xFxFvsilrNuiuaNxda52/t5QcRGnmjvWbNmr4K/P39
w8LC7HbXQ4YMadeu3eHDh+1wLT8/P1yrOVUwY8aM119/Xf/VMGyDW/r3709f
i4qK3nzzzenTp1tuT1ZWVkxMDAlI1NSmd5VQSJxCMhKRICrjp+ikMrF///4W
r7V27Vo4LSEhgb7+4x//+K//+q/mAuv4MCUlxdvb+7333vvtb3/r6+tbUFBg
8CwdDxNW9LNZCN+WlJSYNdxUbj4yQlpamo+Pz+9///uf/vSn7u7uu3btMvFE
naS3IvbM9UhE6o3krkiGMZH333+/nZZHHnmkffv2KMPHjBnjCA3q+Pj4FStW
bNq0qdXhv/rqK9zXM888Y93bqa6uHj58+JNPPkl++853vtO1a1cT1+Iz96aa
Q3RCFlVp/rBG88aCZv/mRmri7z+8+v0HX40ERlRFRrsi+/Xrh1t+T8vPf/5z
8sDgwYPRcrfwjiAn+vTpYzzMoUOHvvjii/T0dGtFaAQjGvLAgQPf/e53z58/
r3P8/v373//+98kn4uClS5cQeO/eva22hLh48WJmZmZlZaWJPZBKRG8kTkck
iMp4eErlDv/JypUrW7yQ6RpSx4c45Yc//OELL7yAJHNxcXn00UffffddfVVm
0MOEtfxsFnAs2pI1NTUwzKxX2LbLR0Y4derU9773vX379jUXIDo6Gu597LHH
Pv30UwjIV199FVaNGzfOlMitpSH1jTQr11sIEhFJiQRFsrKGZBhTQKufSjAU
3b/61a+gJPH5v//7v23xVsIsli1bBktefvnlVodHIXDhwoU7d+5Y1zAq/599
9llPT09vb+9XXnkFXz/++OPWGdkKaOp0feODWTBHkzWvzzf896tl/6celeAg
fmrurKPayTX1zazzg3uHZhZfb9++/de//hV3FBERYckdgeeff97Nzc3CSKwY
YXMaMjU1Fa2SOXPm6J+Cavepp5765z//qaNwFixYgGoxOTm51cYUFxfHxMSU
lZXV1ta2rnYjtYPTEQmiQoRGAuuksumYqCH1fejl5fXEE08kJibS10WLFiGe
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
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzjmDQ28rLjhmHPMAzDMAzDKIE6+vbbbxcsWDB69Ghvb+/p06dv3bq1tLRU
tl2mcufOnbS0tNadO3fu3MDAwJ07dxr8Ve2esTqtdnVWVtbUqVP9/PwuXrzY
itNra2vPnj1renhLHgmGYRiGYUyhpKQkKCjIS49Ro0ZlZmbKtq4FKioqNm/e
DGsjIiJaF4OPjw9OX7p0qf5PqvaM1bHE1Q0NDbNmzSLvteL0uLi4yZMnjxkz
xtZ2MgzDMAxjOmvWrKHKfdy4cV999RXqX1TWdMSgsnIorl+/3mplQhjRkKr2
jNWxxNWHDh0SCrwVp8+dOxcnmqghLX8kGIZhGIZpkZSUFKpwJ02aVFJSQgeL
iopGjhxJx2/fvi0C379//+zZs3v37j1z5gw+i+N5eXkXtNTV1SUlJX399dff
fPNNcnKy6QFAZWUlAuzbty88PBxW6diJy0VGRuLS58+fLy4upoP5+fl79uwh
O9evX4/TGxoa6KfU1NRjx46FhobiYFlZmTIqfKW7wP+KiormNKRVPJOeng4D
rly5UltbGx0djbtDAHoVjtPhhLCwMOUr18uXLyM8zsKtnT59ev/+/ThX3JTl
CWHcz1evXsVPsAf3e+7cOeEi466GhfiamJioaYY7d+54e3u3qCFxIVzuwIED
uO7x48dxRToeGxvr5+eHE4cPH07OoeM5OTm4BQSGlxAnPRWteyTgIvy0e/fu
w4cP43bgvebuhWEYhmEYAlU2VbgnT55UHkfFDbUm6vHGxkbUyMr3ucOGDYNE
oV+hdujgkiVLlGEgYEwMAJkxefJk5U8bNmwQVTkUBS6n/HXLli04Dp3j9Z9A
IDU1Ne3YsUN5cNy4cRBU4kITJkwQP4mL6mtIq3jmq6++ooPiTS6YOnXqrl27
lKdA1VD4ESNG4Ov06dPpAzF//vyqqiqrJIRxP8NROBIQEEAfiIkTJ0KeGXQ1
nTV69Ggy0uADhshxO8oTDWpIqN9Ro0bpXCIuLg4/6RgMl+JgfHy8TuCxY8dC
Xrbikdi5c6fOKXPnzuX5UwzDMAxjHPG6FurCSLCtW7eKGpY6hQioKY1Cunhp
xdLixYvp8/Dhw+vr61sM0NDQ4O/vL34VmoHE2+3bt8W5c+bMgVSgzwkJCZBz
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
s3X2c4Eqg6n6m7xotD1s+Mn07Ujs5hnSkPRiGoIzOzu7uTeqllzOuJ+NY9DV
VgSphlSmXlklEHW4X539ZXJycsRS56bYaeSRgJ8RPj8/33a3xjAMwzAMYyOU
GpJhGIZhGIZhTIE1JMMwDMMwDGMuERER4eHhV69elW0IwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM84AvTUC2jQzTNuHcxx5g2ir8bDPO
AD/nDCMLzn3sAaatws824wzQkzxp0iQ/Pz/lU608KNdChmmrUC6bPn26fs2S
mZkZEBDQ5nMf3W9RUVFjYyPXs0xborncXVxcXF9fz8820zbAYzx+/Pjnnnuu
Y8eOyqdaeVCuhQzTJomPj//JT37yyCOPPP74459//rmyljl48CCOowJq87lv
2LBhcEL79u1R2ggneHh4tFewfPly2WYyjHkYzN0TJ05866238Eg/9dRTn376
qdVztwkdn228PGHsD4rr73//++3atRMakspw5UHZNtoDzneMnfn73//eoUOH
yZMnu7m5Ia+NGDECT9r06dP/8Y9/fOc738ERZ9CQqFL1nYA696WXXhr0kPv3
78s2k2HMw2Dufu+999544w1fX99OnTpBXg4ePNi6F6XaauzYsfQKQwAzRHeo
da/IODmVlZWPPvroRx99pOyHnDJlis5B2WbaA2ok6kjHadOm8dt8xhbU1tYu
XrwYtQmertGjR6OW6dOnDz67uro+9dRT//u//+sMGhJO+Oc//6nvhN/85je/
/e1vUeshA7ZtDzBtEoO5G7oObcPevXtT5YLW0x/+8AfrXhfR9uzZUxQdYOjQ
oT/96U/bt2//9NNP//73v0eesu4VGbXQ2NhYV1dXXV0N1VdWVlZSUlJYWJif
n5+bm5udnZ2RkZGenp6Wlnbr1q3k5OTExMTr169fu3YtNjb2ypUr0dHRFy5c
iIqKOnPmzOnTp0+ePBkeHn7s2LEjR44cPHiQnvMXX3xRaEg8ZjoHZd+9zVm3
bt3zzz+PrIdbRqbDLfv7+6MWe/LJJ5Hr3333XbhUto2MHJqamurr61EpIPdV
VFSUlpYWFxcXFBTk5eXl5ORkZmbeu3fvzp07qampKSkpSUlJeFQSEhLi4uJi
YmIuX7588eLF8+fPnz17NjIyMiIi4sSJE8h9YWFh33zzDXIfnjQXF5dXX331
5ZdfRtsNX8eNG4cP3t7ezqAhNQ97TnScgA/IidDSqPvee+89lG8bGEZt6DzY
yNrI1FS3gg8++KBDhw5WzEoNDQ06rzAABCSuMmHChMGDB3/3u9/t3r27Fa/Y
VhFlflVVVXl5Ocr8oqIilPkkt/TL/Bs3bsTHx6PMv3r1KuQWynzILWWZ/+23
3x49ehRl/qFDhw4cOLBv377du3fv2rVr+/btW7du3bx5M54WiJDVq1evXLly
+fLlS5cuXbRo0YIFC4KCgubMmTNz5szAwEC0QSBL/Pz8kLjjx48fO3bsqFGj
RowY4ePjA9EyZMgQT09PDw+P/v37o8GCpgTSumvXrq6urlBxLraEnjSlhhQ4
iYbEIwGt2Llz58mTJ//qV79Cfsctd+rU6ZlnnkHSIOO//fbbPXr0kG2mOkA5
Ro0dyC1lY+f+/fvU2Ll7966ysQO5ZbCxc+rUKWrsQG6hsXP48GEorv379+/d
uxe5b+fOndu2bduyZcvGjRvXr1+/Zs2akJCQFStWBAcHL1myBLlv/vz5yH2z
Z8+eMWMG9SejDEf6oixFgo4ZMwYlOXLfsGHDvLy8ULoOHDhwwIABffv27dWr
F9La3d29S5cuyH02zXoA7bVf/OIXEEuvv/46CgSR9ZxKQ+o4AUUl8uCHH344
cuRI5ErUiUgmWycEw1gdnQcbtQkyNYogyuN/+tOf3nrrLStmJZSHOq8woDcg
IFGYCD2JFpkVr6jRyi2U+aKJLcp8NLFR5mdlZUFuocyH3EKZL5rYKPPRxEaZ
f+nSJZT5586dg9xCmS+a2KLMDw0NRZn/1Vdf7dixA2U+5BbKfMgtnTJ/4cKF
KPPnzp07a9YslPkkt5Rl/ujRo1HmDx8+HN5AmT9o0CCU+SS3lGU+ChzZT436
YA2JBxtPIN3yZ5999vjjj+PD3/72ty+++IIOQk9CZCKzWPe61NipqalRNnZE
37JOY+fmzZvU2IHcMtjYOX78uLKxA7llsLGzdu1aauwsW7bMYGMH5Z6ysQO5
RY0d1OPKxk6/fv2osdOtWzf7NHbaJPSAweEvvPDCRx995JwasjknEL/SIjuh
GMZsdB5sFKTI1KKp+MEHH/z617+2YlZCraHzCkPJ2LFj27dv//nnn4smNpX5
1IibOnUqyvyJEyfqNLFFmY8mNsr83r17Q26hzKcmNpf5tgOqw83NDXVr9+7d
Uc+itoXiRc2LtECKIF18fHyQRnickLKoqZHiSH08bNDPqMeRskhfpDLq98WL
F6OuX758Oep91P5Q4FAC0ANQBdAGUAjQCVALBw4cgHKAfoCGh5I/efIkdAXU
BTQGlAb0xuXLl6E94uLioEOgRiCcoEygT1hDEsg7n3zyCbXjlE5AiqC1iDYj
XA2pOW/ePGrsiL5lncbOyJEjqbGDhEZjR/Qtc2PHPuCJReEGJ8PVcDjc3rdv
XyQBWp2DBw9GCxQFIxIIhSSKSiQZEg7Jh0ScNm0aEhRt2NmzZyOJUcyisEUL
F+1ctHbR5kXLF7kPrWC099Ei3rlzJ1rHaCNDrqO9jFYz2s7IfWhKI+uhTX3m
zBm0r9HKhuBHixviH61vtMHREkfuw0GUDHhg6DHr0KHDm2++6WwasqCg4P33
39dxAiqyP/7xj6KqhYBEWVrGMOoBbX+U/DoPNiqLRx55BEqMDqJaQV1j3Qyl
U3QI2mn58Y9/jFJOdgltfXTKfAhdlPkQvZBbKPMht1DmQ26JMh8lDMp8yGYa
bg25hTIfckunzF+1ahXK/PXr12/atAllPuQWynzILVHmf/311yjzjx07Rorr
9OnTKPNJbinL/OvXr6PMT05Ovn37dlpaWnp6ekZGBgR/bm5ufn5+YWFhSUkJ
npnKysrq6uq6ujqr91bZGtaQBB65t99++9FHH0X9JaawQVT8/ve/f+yxx/Aw
QGzIzivWR9nYgdwy2NiBKqbGDjxgsLEDXa1s7EBuGWzs7Nmzhxo7kFvU2Pn2
229JcVFj5/z588rGDuSWsrGDYvnevXuZmZk5OTnIfZAfxcXFpaWlFRUVVVVV
tbW19fX1sh8i8/jwww/fe+89NP/x7H3nO9/561//6mwaEqBe03fCK6+8AumI
g6hwkfug1WWbyTDmYTB3//KXv3zjjTdQnELwtG/fHmWsdS9qUEOiACcNCeGE
r507d0aZL5rYoswfNGgQ7MHpaGLjFAhgZRNblPmzZs1CExtl/sKFC1Hm6zSx
RZm/Y8cOZFuU+aGhocomNuSWKPPRxEaZf+nSJZT5MTExyia2sszPyspCmZ+X
lwe5hTIfcgtlPuSWGsv8NglrSIJuGfkIeW3gwIFfagfRoSJ74okncBABUBpQ
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
2eeijEGEgOzWrZu1NioyEX9/fxft5B17XtTRmDNnDg0Sts/lSktLaSoTGD16
dFlZmX2uy+hTUlJCy1u5aHf8tOd0p4yMDLouimK7XZRhmDZJYmIilSfh4eF2
u+ihQ4foop07d+Y1ymSxf/9+MULVirsUmQjtg9O3b187X9ehmDdvHpzQtWtX
u12xvLycZjO5aNc2h5Kx26UZAdT7yJEjxQhVO090ys7OpkvbYhMchmGcCjFH
LywszJ7XxeU6duyI6+K/3bpAGcHhw4fF2NRr167Z34AZM2bY7TWuw0Krcbq6
utrzopWVlbQupYt2eXPbLSPPGKSiomL06NFibKr9pzjl5ubS1Xft2mXnSzMM
08a4desWlSfffPONnS8N6ShkpJ0VrJMDb4tRqVevXpViw+zZs2kQppSrOwiL
Fy+m59/O162urvbz86NnwMvLKz8/384GOC3wPG1OBMaPHy9lchOSmwyw3VY4
DMM4CWlpaVSeHDp0yP5Xj4yM7Ny5s0QDnBAh3V1dXS9duiTLjKCgIHqNLssA
R0Asv2//S9fW1k6bNo2u7unpef/+ffvb4GzU1NTQcgQu2h2aKisrpZhRVFRE
NmzZskWKAQzDtBnS09OpPNm/f78UA6KioiBmyIaDBw9KscF5OH36NAlISHe5
E5rmz59PHaESbZCOWNddyg4ydXV1tLiQi3ad86ysLPvb4DxAtNNaBC7a7ZnK
y8tlWVJaWkpmbNy4UZYNDMO0DTIzM6XP0YuOjoaW4CE6tubcuXOdOnWil6fS
pzItWrQIlsAeuWbIRezfJGv7GGhXmhvuol3q3D7Lyzsh8DNNInPR7s0EFSfR
mIqKCrJk3bp1Es1gGKYN4CBz9GJiYrp06cJvWGzHxYsXqb/XQSYxLV26VNZr
XMdBbA8kcdHvhoYG6hN20a52brdF5p0HCEhaCBQMHTq0uLhYrj142MgYPH5y
LWEYRu04zhy9+Ph4d3d3biDbgitXrggB6SCb5IrXuHZbWtkBWb9+PTlB7orf
TU1NS5YsIUt69eplz6Xm2zyNjY2ip3fIkCGOMAu+rq6O7AkJCZFtC8Mw6sah
5uglJiZ2795dlG922DrWGYiLixN9vF9//bVsc/4/0l/jOgKbNm0iJ8h9uanR
ykih6nv06HHz5k259rQN4FXRx+vp6ZmXlyfbogdA1pJJy5cvl20LwzDqxtHm
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
kpubK/ZImjp1qrrWBzCR1NTUnj170j1u375dtjmWQuta9OvXT7YhDMOoHlrn
YeTIkbINsZSNGzdSId+lSxdV7DhmOk1NTfPnz6e78/T0zM/Pl22RpYguOHUt
rGddbty4QU4IDw+XbYtFFBQUiJ2SJk2aVFVVJdsia5Kent67d2+6u3Xr1sk2
xwrQ6wzclGxDGIZRPW1pnYddu3ZRUe/m5tZmBtpBQC5ZsoTuy8PD4/79+7It
sgKiCy4iIkK2LdJISkoiJ4SFhcm2xVKKi4t9fHzodsaNG1dRUSHbIuuQmZkp
pg6FhITINsc6zJ49G7fTo0cP2YYwDKN62tg6D/v27aMC39XVVY3TXXWAgFyx
YgXdUf/+/bOysmRbZB3aTBecJaSkpJATjhw5ItsWK1BaWkovNcCoUaPUO+FL
kJ2dLSYNBQcHt5mVMGlVNHd3d9mGMAyjetreOg+HDx+mYr9Tp07qna1ArF69
mu6lT58+9+7dk22O1WhLXXCtJjU1lZyAJ1a2LdahvLyc3muAESNGlJSUyLao
9eTm5orpQosWLWozAhLQwBg3NzfZhjAMo3r8/Pxc2tw6D1AmHTt2dNFuJHH8
+HHZ5rSSDRs2UBXWq1evO3fuyDbHmrSxLrjWcffuXXLCwYMHZdtiNSorKydM
mED3NWzYMJVO/srPz6eFc120q1+2sUXUaVldNLFlG8IwjOppq+s8nDhxQsjI
o0ePyjbHbLZu3UpVWI8ePW7fvi3bHCvT9rrgWsG9e/fICaGhobJtsSbV1dXU
MqUXHKqbAlZUVESr5oJZs2a1veXTly5dSncn2xCGYVRPG17nITIysnPnzlRa
Hjp0SLY5ZrBt2zYyu1u3bsnJybLNsT6iC069m31YTlZWFjlB1QtWG6S2tnba
tGl0d56eniqaCFZSUkJL5oLAwMA2uXD68uXL6QbbnjxmGMbOoJx0abvrPERF
Rbm6ulKBuX//ftnmmISYFuTu7t5Wl0zPyMige8TNyrZFGlBW5IRdu3bJtsX6
1NXViSXxPTw8VDEdrKysjNbLBf7+/rgF2RbZBLEpQxteE55hGPswa9Yslza9
zkN0dLSbmxuVmTt37pRtTgscOnSITO3SpUubXCydyM7OptvcvXu3bFukkZ+f
T05oA8tWG6S+vl4sjN+vXz8HnxRWUVExatQostbPz68N66s1a9bQbVZXV8u2
hWEYdTN37lx6ZyrbEBsSGxsLSUbF5ubNm2Wb0yxHjx4lIyF629gy6Trk5ua2
4S44EyksLCQnbN26VbYttqKxsXHBggV0m3369ElLS5NtkWGqqqrGjRtHdk6Y
MKFti6t169bRnbaZZTwZhpEFrfMAiSXbENuSkJDg7u5OJadjbjYRHh5Ok4Bc
XV2jo6Nlm2Nb2nwXnCmUlJQ4frvGcpqamsQkjl69eqWkpMi2SBcoxokTJ5KF
Y8eOrayslG2Rbdm0aRPdbGlpqWxbGIZRN7TOA3SLbENsTmJiYvfu3anwXLly
pUMt+Hbq1CkSkJ07dz5//rxsc2xOcXExJcSWLVtk2yKN8vJycsKGDRtk22Jb
kNeQ4+hme/TocfPmTdkW/R+1tbVTpkwh23x9fZ2ha06s+VBUVCTbFoZh1A3t
o+cka4WlpKT07NmTys+lS5c6iIw8e/Ys/E+pcObMGdnm2IOysjJKhY0bN8q2
RRpVVVXkhLVr18q2xR6IV6ju7u4JCQmyzXlAXV3d9OnTyarhw4e3gb11TGH7
9u10y6pbdolhGEcjODiYyhMHEVS2Ji0trU+fPnTLCxYskL568MWLF2kBoo4d
OzrP5tEVFRWOPK7APtTU1JATVq1aJdsWOyGWze/atWtsbKxcY+rr62lVChft
Zq+q3lXHLHbt2kV3nZubK9sWhmHUjdiOuU2uhGaQe/fu9evXj+56zpw5Em/8
8uXLtPQQBOS3334rywz7U11dTf5fs2aNbFukgQePnIA8KNsW+7Fjxw66azc3
N4njfhsaGsSc8SFDhqh0P53WsWfPHrrx7Oxs2bYwDKNuVq1aReVJTU2NbFvs
R2ZmpoeHB934jBkzpCwEp5wt7mxb/sHhdOMhISGybZFGU1MTOSE4OFi2LXZl
7969dONoQEkZ/QvP01xCF+0S6M72Sjc0NJTuPSMjQ7YtDMOom7Vr11J50uZn
I+pw//59VB9079OnT7fzcnAJCQldu3alq7el7ZJNpLGxke59+fLlsm2RCTlh
yZIlsg2xN3jm6d47d+4cGRlpz0tDQC5evJiujoakE77PFc6/e/eubFsYhlE3
YoRSeXm5bFvsTX5+/pAhQ+j2p0yZYrdF4RITE8VCQ3v37rXPRR0Nuv2lS5fK
NkQmNJJh4cKFsg2RwNGjR8WO9idOnLDPRSEgxU5//fv3d86XuYcPHyYPpKam
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
0JCvvfbapk2bZFukMmbPnu2iXbldtiEyoVEQ3bt3l22IykhPT3/vvfde1vKH
P/whOztbtkVqIj8/n9/+MwxjFRITE6k84SV5zYIWHv/Tn/70+uuvf/rpp/gc
Ghoq2yg1QduRu7u7yzZEJuSErl27yjZETeTm5np4ePz73/9+5513OnToQKNq
MzMzZdulGoqKiqjM37Jli2xbGIZRN2K92bCwMNm2qAax5HivXr0OHTokVjbe
sWOHbNNUw/z58120qyTJNkQmCxYsoDn+sg1RDfn5+YMGDaLsBgUuprP169cv
PT1dtnXqoLS0lJy2ceNG2bYwDKNubt26ReXJN998I9sWdYDGO3msZ8+eqamp
Gu0GGWJs/+bNm2UbqA4WLVpEc9tlGyKTxYsXu2g35pNtiDooLCz08vKijAb1
2NDQ0NjYuHDhQjrSu3fvtLQ02TaqgIqKCvLYunXrZNvCMIy6QalL5QmvN2sK
27ZtI3d17949JSVFHE9ISBCrHK9du1aihWph6dKl5C7ZhsgkODiYnWAiJSUl
w4YNI3cFBgbW19fT8aamJuFGNOuUuZIxSHV1NblrzZo1sm1hGEbdpKenU3nC
6822yN69e8lXkIuJiYk6v968ebNHjx4UYOXKlajapBipFpYvX06+amhokG2L
NFasWMFOMIWysrIRI0aQr6ZNm1ZXV6f8FXktJCRENO708yajBN4jX8Fpsm1h
GEbdZGZmUnnC680a5+DBg+SoLl26JCQkGAyTkpLSq1cvCrZkyRKWkUYQlX5t
ba1sW6TBTjCFiooKsUPNlClTmvPVunXrRBMvPj7ezkaqiMbGRnIU2nGybWEY
Rt3werOmcOTIEfKSm5tbbGyskZBpaWl9+vShwPPnz+f+peZYs2YNeam6ulq2
LdJgJ7RIZWWl2Jtm4sSJxh21efNm0dAznk+dHPLS0qVLZRvCMIy64fVmWyQ8
PJx2pXF1db18+XKL4e/du9evXz/y6pw5c8TALUaJmNteUVEh2xZpiK4zZ3aC
EaAYxa4048aNq6qqavGU7du3i+ZedHS0HYxUI507d4aLFi1aJNsQhmHUDa83
a5yIiAgSkCh1L1y4YOJZWVlZHh4e5NjAwECd4VsM2LRpE/mntLRUti3S2Lhx
IzuhOWpra/38/Mg/o0aNMl1mi3HLaPRFRUXZ1EiV0qVLF3pRItsQhmHUDa83
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
sWMDAgL61z3RMcprIEdfYmKiiYlJ/9GQAIbm448//vzzz7l2UT751FNP0TFo
Z2f3zDPP0A98GIqOEQC0of85a+7cub6+vn3O4/X19Y+ecRUMTVdXV3t7e0tL
S2NjI1UP6mhUVVVVVFSUlZWVlJQUFRUVFhbm5+fn5eVdv3792rVrGRkZ6enp
aWlpKSkpFy9ePHfuHNeuKVOmjBgx4tVXX33yySefe+45OqkZWg45a9as/oeh
j4+PVAJUmKIjBRXp7u7u6Ohoa2vjo4+69tXV1ZWVleXl5aWlpcXFxXfu3Cko
KLh582Zubm5OTk5WVtbVq1cvX7586dKl5ORkqY5Rxvjmm2++9tpr9DMllpRD
/vu//zsdjK+88kpmZqborQQADehz5qKW5Omnn37iiSdef/31yZMnG8J5XHl9
si9KzvtnX7du3bpx40b/7OvChQuUfSUmJsbHx8fFxZ08efLEiRPHjh07cuTI
oUOH9u/fv3fv3q+//nrHjh1bt27dtGnThg0bvvrqqzVr1kRERKxcuTIsLCw0
NDQkJGTRokULFiygnTtnzhx/f38/Pz9KWmbMmDFt2jS+5uzm5ubi4uLs7Ozo
6Dh27FhbW1sbGxtLS0tzc3Npxplh4trl5OT00ksv0WI9PT1/+9vfUt1zdXU1
kBxy9OjR3/ve9+is/YMf/MDCwoI3mcr8xRdfpA/pX1NTU9Ex6hUp+2pubm5o
aOiffd2+fZs6Pv2zr9TUVMq+kpKS6OhLSEg4ffr0qVOnoqOjo6KiIiMj6eg7
ePDgvn37du/evXPnzu3bt2/ZsmXjxo3r169fu3btqlWrwsPDV6xYsWzZsi++
+GLx4sULFy6cP38+pXCBgYGzZ8+mPru3t7eXl9fUqVPp6HN3d6dDYMKECXRo
jBs3zt7eno4+a2trqiFUH3iA0OEfd7T2jz76iFp7OtLpv3/4wx/+4z/+g9ZL
K6Xa+JOf/ATT1wLAY3F7MqIHtVd0Bqcmi9KJ//zP/+TnZFR1Hu+ffd2/f5/a
//7ZF7f/g8q+9uzZ0z/7Wr169Zdfftk/++L2v3/2Re3/w7IvMzMzXWVf+qH/
xbeAgIBRo0Z98sknhpBDUr196qmnKCWgLII2+Tvf+Q5lNVSpnn/++Q8//JCq
1t/+9rdnn322trZWdKT/0Cf74svO/bOvvLy8h2VfZ8+e7Z99HT58+MCBA/2z
r3Xr1lHHp3/2FRwc/LDsi/og/bOvMWPGWFlZ6Sr70g/cc/z5z39OtYvKqv9h
SPkqnQ4KCgpEVzoAULveOeRPf/rT999/nz+hZpkaYf6ZcjYp+4qNjY2Jiemf
fe3atYva//7ZF7X/D8u+Zs2a1T/7mjhx4vjx4/tnXzy6MgwTJbFUmFSkVLBU
vFTIVNSU7lLSS4VPu4B2BO0O2im0ayg9pt1EO4t2Ge04OoPTTqRdSTuUkmra
ubSLaUfT7qadTrue0m9KwqkyUJWgikHVgyoJVRVK1ylpp8pDVYgqEiXzlNJT
Ys+1iwL405/+1DuHlK7I6XcOSdnUL3/5S95MKmo6AKm4aNc899xz/FbR3Llz
aR9RJ4iyrzNnzlAZ9s++9u7dO6jsi5ZJhUyr65N9TZo0iepA/+zL3Nwc2ZdO
UBlSSVJ5UqlS2VIJUzlTafPRR+VPe4H2Be0R2i989NGeov1Fe4323ZIlS2g/
Ll26dPny5bRnaf/SXqZ9TXuc9vu2bduoDlBNoPpAtYLqBtUQqidUW6jOUM2h
+kO1iDJ5yudpsW+//Tb1Weh4lw60zz77TBpui3JIqoR4fRIAHqt39/OVV175
7W9/++abb377299+7733qCnjz8vLy0U3wOJR9kXt/8OyLw8Pj/7ZF2cClH1R
8tw7+4qIiKD2v3/2Re3/ALMvyisyMjKuXbt2/fr1Gzdu3Lp1q7CwsKioqKSk
pKysrKKioqqqqqampr6+vrGxkboA7e3tXV1doutaX1y7qNyeeOIJymxnz579
xz/+8amnnqKiM4Qc8pteR9/f//73J598cvr06R9//PEPfvCD3/zmNy+88AL9
QGkGVRLRdV+wh2VflPH2z74oN6aK1Dv7ovyZsi/KpSmj7p99Ue498OwrNTX1
8uXLV69ezczMzM7Ozs3NzcvLy8/Pv337dnFxcWlp6b179yorK+noq62tpRys
ubm5ra2to6NDVfeF/+u//mvkyJHUjrn+07yep5ioyk3t8frrr1M/TnSYAKAB
vXNISh1HjBjx5z//mRqQl19++YMPPuDPqVUczimgd/ZlZ2fXP/uaMmUKnT37
Z1/c/vfPvqj9f1j2dfTo0f7Z1/nz5y9evNg/++L2v3/2Re2/yrMv/SBVvL/+
9a8vvvgiZZLPPfectbV17zopOkZ58TY6ODhQ5kwncfr5ww8/pGPw3XffpWSJ
+nHPP/88pTrDzL7ocO6ffVHm4O7u3j/74svOg8q+9u3b1z/7On36dEJCQv/s
KysrKycnp3/2RR1V9Wdf+uHpp58e8a/40vQvfvGLUaNG0WH46quvUqsoOkwA
0IDe5+uXXnrpJz/5Cf9Mpx46odMJhX6mPGpQ2VdTU1NrayuyLxgUqkiGljDQ
wWVmZvbkk09Sx42Puz/84Q+UT9IJfV7P+9ojR46kXlKf7OvmzZv9s6/q6uq6
ujpkXzAcVHnu378vOgoA0IzeOeQbb7zxm9/8hn+2sbGhUxvfVRQdI4B++vzz
z+ko+/vf/977pvazzz7LP1MPbtSoUTt37hQdJgAAwAP0ziFNTEyeeeYZV1fX
mTNnvvXWWz/60Y8M4X4igBApKSkjRoz4/e9/Lz2W5uvrS4fe008//cknnwQE
BPzlL38ZOXJkcXGx6EgBAAAeoHcOOWfOnA8//PDJJ5984oknXnnlFS8vL+SQ
ADJxdHTs81iamZkZ3wJ47rnn6Bj81re+ZWVlJTpMAACAgWppaSkvLxcdBYDh
6u7uLi4uxgONAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAwHPMGQHSMAPoJRx9KAPQV6jYYAqrGc+bMmT17dp+6
HRAQ4O/vj3oOIB86uGbNmjV37tw+R1/vD0XHKC/eRj8/v/6FIH0oOkaAoeBq
PGPGjKCgIGVySGStoLDW1tb333//ueeee+qpp959911PT09OKX/1q1+NGjXq
ySeffO+99yiTFB2mEnDcgcIyMzN/9KMfPfHEE88888xnn33GNc3d3b3Ph6LD
lJebm9uPf/zjkSNHPv/88x999BEnjX0+7OzsFB0mwKBRTR4zZsyIESOoS8hH
t5OT08he/vd//1fna0QOCUratGnTCy+8QC22t7f3W2+99bOf/YzqmJGR0be/
/e0pU6ZMmzaN2vA///nPosNUAo47UNhf/vKXn/70p35+fmZmZnSimTx5MtW0
N998s8+HosOUF+WKtL0+Pj4TJ06kfqu1tTUVQp8PDx48KDpMgMGhjs+nn376
1FNP9c4hqVf4ve99b8I/zZw5U7crnfeQS/r0q4aGBr7bqNs1goFbuHDh559/
ztXM2NiYKnxQUJCtrS31nvjDV1999f333xcdphJoY319fftnj3PmzKHPRUcH
+qatrW358uVTp06lOjZ9+nQ60djb2wcGBv7tb3/r86HoSGVE5zXKFSdNmsTH
GqWOv/zlL+lM1+dDBwcH0ZECDM62bdu+9a1v/fGPf+ydQ/7617+m8ynleHRa
0fnViStXrvS/pM/q6+vfeuut//qv/0IOCaS7u7ujo4POQc3NzY2NjXV1dTU1
Nffv3y8vLy8rKyspKSkqKiosLMzPz8/Ly8vNzc3Ozs7Kyrp69erly5cvXbqU
nJx84cKFc+fOJSYmxsfHcx2j1PHNN9987bXXpFrn7OxMFX7UqFHjx48XvcWy
27Bhw4svvkgH+8svv+zm5tY7h/zggw/+7d/+TXSAoBZdXV3t7e0tLS1NTU3U
MtfW1lZVVVVWVtLRV1paWlxcfOfOnYKCglu3bt24cSMnJ+fatWsZGRnp6elp
aWmpqal09CUlJZ09ezYhISEuLo4v+1NP7fvf/770+HGfD0VvsbykTZ4xYwad
/qR7+r0/XLJkyR4ATVm7di0dvNQV6p1D0hFNpxjKLalWU3cpICBAh4cSdT/7
X9KXclcKAznk0HR2dlK6RW0+pVu92/x79+7dvXuX2vzbt29Tm3/z5k1Kt6jN
p3Srd5t/8eLF8+fPU5t/5swZavNPnToVHR0dFRUVGRl55MiRQ4cO7d+/nyrM
119/vWPHDup6bN68mRKSdevWrVmzZtWqVeHh4StWrAgLCwsNDaWWcNGiRQsW
LKCEjbohVMH8/Pxoj3t7e3t5eU2dOtXT09Pd3d3V1ZXqAGVu48aNGzt2rK2t
rY2NjaWlpbm5ubGxsZGucQJJ3Zann36a0ycut48//pgqPNX2MWPGiN2DcqOs
+7nnnjMxMaHd8fOf/5y2Wjr07Ozs6NBDDjk0/Ts71dXV3NmhdOuBnZ3MzMze
nR1Kt6TODh19J0+epKPv+PHjR48ePXz48IEDB/bu3bt79+6dO3du375969at
mzZtoqPvq6++Wr16dURExMqVK5cvX7506dKQkJDFixcHBwfPnz+fantgYCAd
fdSwz5w5k7KUadOmTZ482cPDg+q/i4sL9Z6cnJzo6LO3t6fKT02xhYWFmZnZ
6NGjdX70zZ079yc/+QkdZdR9ozC41tGH9Kvvfve7/KHo3Sgv3mSqEr/61a9+
+MMfStdnCO0dOhjpw+vXr+u85AHkRnW4dw5JLQ/V5w8++ICSjS1btjz11FN/
/OMfdXUcNTQ0WFlZ9bmkzz9TC/bCCy9QY6JADkldbGrzW1tbqc2nkCjdojZf
6mJLbT51sanNp+OautjU5lO6RW2+1MWmNp+62NTmx8bGUpt/4sSJY8eOUZvP
6VbvNp+Kkdr89evXU8ZObf6XX35JbT6nW73bfGpRqc2fPXu2r68vtSqcblGb
T+lW7zbfwcGBzvjU5lNJUptvamoqR5uvf6jRpsTp2WefnTBhQu+r6/zz7373
u+eff56SAVkrnliUvSxbtoy3969//eszzzzDP1N6T9tOPTsFckgq4Qd2dioq
Knp3dijdemBnJyUlhTs7lG49sLNz8ODB3p0dSrce2NmhcuDOzsKFCx/Y2Zk+
fXrvzg7VGe7sULrVu7NDCbnoeq0NXNOofXvppZc+/PBDKX36pudmN38od90T
izZ2ypQpb731Fp1PqZpJJUAf0ua//vrr9CGdcUTvKIBB65ND9j66CZ12f/CD
H+j8aOpzSZ9+pi7q2LFjqa/KOWTvNp+62NTmf/HFF5RuUZvfu4vNbT79ObX5
dDBSm0/bQukWtflSF1tq86mLjTZfPpTKUkJLJ1YqaipwKnbaoY6OjnTynThx
IqXBdDqmlJhOzZQe02madhztvoCAAO6S06l80aJFlFTTyZ0SbDrR066nCkDV
gCrDxo0bKRnYtm0bpeWUHlCKTqnC4cOHI3tQChETE0PpxOnTpym1OHv2LCX5
lGxQwk+JB6Uf9MPbb7/9ne98h2KQavgnn3xCofLPlJA/+eST1JXQbVVXISr5
P/3pT/wEC2/7O++88/7779PRwTkkZWJSZ0e6ttyns0N7jTs70rXlPp0d2u+9
OztUK9DZkZWxsTGVMHUqqTNOZU7tHrV+1AbSvqA9QvvFw8OD9tG0adOotaQu
KrX2tAepFaW2lPYp7Vnav7SXly5dSnucOrkRERFUB7766ivKwKkLTNk4dYfp
6KOuMR19Bw4coHpCh97x48ep+0ydaMrnqUNNuT11runoo442HXTU6aaONh1l
1D5zZaOuyhtvvEE15ze/+U2fD0UfGfKio4N6anSs0bEjNUF9Puzo6CgD0Jo+
OSQd3b///e+l2w2UQ7733nu6PZp6X72n/IEaMeqdffDBB/S5lEOKbpJlR9ks
nbWpdaU2n9Itqc2n7JfafNoj1OZTVkzNLLX5nG5Rziy1+ZRLU5tPeTVl15Rj
U7pFbT6nW73b/F27dlGbv2/fvoMHD3LGRelWdHQ0pVu92/wLFy6kpKRcunTp
ypUrV69ezcrKysnJyc3NzcvLy8/PLywsLCoqKikpodpSUVFx//79mpqa+vr6
xsbGlpaWtrY2avp0W0N0jgqQOiyU2br+E9WxTz/9lLJKqupUyK+//jpVddFh
KoGyOzrcKGGmw5yyQcrrXnrpJUonpBySykr0wSGvPp0dSnQH1dmhdOuBnR1K
vB/W2Tl06BBnXL07O5Rc9e/sZGRkXLt2jY6+Gzdu3Lx5s6Cg4M6dO8XFxaWl
peXl5ZWVlVVVVbW1tXT0NTU10dHX3t6u/ovn1LbzKyRUyE899dSf//xnKkZq
/Pt8KDpMGVEj+fLLL7/yyitUwbj9odpFjXmfD2/duiU6UoBB638dkmo1nU/p
6HZwcHj66aeppdXtGntfved0kdoQKysrasxfffVVSlkpj3pgm0/foS42fY0C
693F7t3mU3ZKaTAFT20+nSJ7d7GlNv/LL7+kLja1+evXr6d0a8uWLb272Nzm
Hz169NixY9TFpjY/NjaW0i1q83t3sbnNz8zMpDb/+vXrlG5RC0DpFrX5lG5J
bX51dTW1+Q0NDdTmt7a2Urql/jZf/3z7298e8a/4ShqdxUaNGkX/pTpP1VJ0
mErgY5wOMdpqypro0PvDH/5Ax9Tvfve7b33rW8ePH++TQ0qdHb623L+z4+np
OajOjnRtuU9nZ8+ePYPq7FC69cDOzt27d7Xb2dFLlCT/6Ec/om4LVblf//rX
nIpT/enzoegwZUSVuU/788477/BDyL0ZGxuLjhRg0KQcUnpIg3IzProJdSF1
e3RTs9/nkv7//M///H//RGe0Z5555he/+AW3+Z2dnci4QCfmPQQlPNTv6P38
hr46ffq0NKoPHX10rNE5Szr0KM2m4/3tt9+mHIw7O11dXaJDBn1AOTzfe+r9
Rjbr/aHoMOX1sPanN9ExAgzFw+qzj49PYGCgbus2pYWUPfa5pN97pdK9bF2t
EeCbnmf8jIyMvvzyS6lLcvnyZX4nIikpSWxsirl58+bIkSMtLCzorP3f//3f
zz77bO+ZH6V72QA61NTU5OXlZWVlde3aNenD4OBgqm9OTk4CAwMAzXngJf3e
OST9Fzkk6BbVOn6bw9TUND8/nz9MT0/ne7WJiYliw1NSeHj4iy+++MQTT1AC
Sclk70MPOSToXEtLi7e3Nx9ovUeAnD9/Pn2i3+OKA4BAly5dysnJER0FaN7J
kyc5gTQxMUlOTpY+z8zM5FNbfHy8wPCU193dXVxc/IiZeelX+/fvb2trUzIq
0D9UhWbNmsVH2fTp0xsbG6VfLVq0iD60sbERGB4A6IfAwEBTU1M3Nzfpk/T0
dH6MPysrS2BgoHWJiYmcQBobG587d673r7Kzs/nsFhsbKyo84QoKCviG/rFj
x/iTrq6uL774goqFjsrW1lax4YF2tbe3UxXiQ2zy5Mn19fW9fxsSEkKf6/xt
TQAwQNzUODo6Sp/s2rWLGx86wVE+KS400LCkpCQeDpTSyDNnzvT5bW5uLtex
mJgYEdGpQnFxMRfCgQMH+JPa2lrqzfGHs2bNamlpERshaFFHR8e8f47P5u7u
TpWqzxdCQ0O5eRcSHgDoE342xs7OrveHX3/9NTdBZmZmqampomIDjaI6Y2pq
ygnkA6805uXlcQWLiopSPjyVuHfvHhfC7t27pQ+rq6vpvM+fe3t7974FCfBY
nZ2dCxcu5PpD/ZEHjtsfFhbGdweUDw8A9Aw3OP2fjdm/fz83RJQMXLhwQUhs
oEVXrlyhrgdXnhMnTjzwO/n5+fyFyMhIhcNTj8rKSi6EnTt39v68trZ2ypQp
/CsvL68+NyIBHqarq4vvU5OJEyfev3//gV9buXIl9+8UDg8A9M+SJUuoPbGy
sur/Kx6ShV+IMKj3Z2HIMjIyzM3NH5sf3r59m79z+PBhJcNTlaqqKi6E7du3
9/lVQ0MDZY/S82z9b0cC9NHd3c0XGMn48ePLy8sf9s2IiAj+2iPe7QIAGIhH
Pxtz4sQJfi2C/o2Li1M4NtCW7OxsS0tLPj0dPHjwEd/s/yigAaLMkAth69at
/X/b1NQ0c+ZM6ak2Q5hMHIaMEsjw8HCuLY6OjqWlpY/48po1a/ibeP0fAIaJ
u66mpqYP+0JsbKyURkZHRysZG2hIbm6ulZVV/wf8HojOcfzNvXv3KhOeCjU0
NHAhbNq06YFfaGlp8fPz4++4urpWVlYqHCFohZQWjh07tqSk5NFfXrduHX8Z
L20BwDCtWLGC71Y/4jsJCQnGxsZ4gA0e5tatWzY2NlxD9uzZ89jvl5eXDzDb
1GPNzc1cCOvXr3/Yd9ra2qRBWiZMmPCIG5RgsDZs2MA1xM7O7s6dOwP/Pt7Y
AoBhku6APHpq7KSkJH7Tlhw9elSx8ED9CgsLbW1tH31JrY+HvU5iUFpbW7kQ
1q5d+4ivtbe38+AJxMnJ6dG3KcHQbN26levGmDFjCgoKBvInmzdv5j+pq6uT
OzwA0G+rVq3i9qSjo+PR30xJSZHetzXky0fQW1FRkb29PdeKdevWDfCvqqur
+U+2bdsma3hqRkccFwIdg4/9Js8tQsaNG0dlrkyEoHLUBeNaYWNjk5eXN8C/
ooOO/woP2QLAMK1du5bbk4HMi3HlyhXprdv+L5OCobl79y6lNANMhHqrq6vj
v9q8ebN84alcd3c3F0J4ePhjv9zZ2cmvvxn1zHRcWFgof4CgalICaWlpef36
9SH8IZ6wBYBhWr9+PbcnTU1NA/l+Zmam9O7txo0b5Q4PVOvevXtOTk5cE1as
WPHoZyH6aGxs5D/csGGDfBGqn1R6A/kylTA/vUxsbW1v3rwpd3igWocOHeKa
YGFhMdhJaXfv3s1/i8drAWCYNm3axO1JQ0PDAP8kJyfH2tqa/2rNmjWDSh5A
P1RWVjo7O3MdCA0NHWwdaGlpGeztb73EzxgvW7ZsgN+ncpYePrGxscnNzZU1
PFCnY8eOcR0wNze/evXqYP983759/Od4thYAhkl6JHtQ4xjn5eWNGTNGuhOH
NNKgVFVVubi48N5fvHhxV1fXYJfQ3t4u9UHkiFAr+MkQSsIH9VfS2CxWVlbX
rl2TKTZQp5iYGB5sjTogaWlpQ1jCwYMHuf4UFxfrPDwAMCjbt2/n9oQSg0H9
YX5+vp2dHf9tWFjYEBIJ0KKamho3Nzfe7wsWLHjsq1gPRLWFlxAREaHzCDWE
R9RcsmTJYP9QegTFwsJiCFeiQKPi4uKkBDI5OXloC5EmILt9+7ZuwwMAQzOc
56vv3LkzduxY/vOQkBDMnKX36urqPD09eY8HBQUNLYFkvJCVK1fqMDzN4Yv5
CxcuHMLfSkeuubn50K5HgbYkJiZyAmlsbHz+/PkhLycyMpJrTn5+vg7DAwAD
JD1ffe/evSH8eUlJiaOjIy8hODh4OEkFqFxDQ8PUqVN5X/v7+w9zojQTExO+
gq2r8LSIr+TPnz9/aH8uPdhmamp68eJF3cYGqpKUlMSHDKWRCQkJw1lUVFQU
V5uBDwcEAPBA0mno7t27Q1tCWVmZ9HpFUFAQ5mDVS01NTV5eXryXZ82aNZCR
oB5taI8C6hkHBwc+aoa8hMOHD/NOoQTj3LlzugsNVCQ1NZVfv6IEMi4ubphL
i4mJ4TqDd7IAYJik56uHM3BxRUWF9JKFv7//8BMMUJWWlhYfHx/ev97e3s3N
zcNfJo8QFRISMvxFaRcPjhQYGDichURFRUm3OOPj43UVG6jE5cuXpckdoqOj
h7/A2NhYXhpeyAKAYZKerx7mqMVVVVXSqxa+vr46STNADahH4Ofnx3t2+vTp
uppjl+fXHtqjgHqDL+DPnj17mMs5deoUp5H078mTJ3USG6hBRkaGNK1DZGSk
TpZJHQ1eIC1cJwsEAIOlw+era2pqpBcuvL29dZVsgEBtbW2BgYG8T6dMmVJf
X6+rJQ/zUUD9wFfvqc81/EVRYmBsbMxp5LFjx4a/QBAuOztbmtDh4MGDulps
YmIiLzM9PV1XywQAw6Tb56spx5Beu5g2bZoOUw5QXkdHR1BQEO9Nd3f3QY0g
+ljDfxRQD0yaNIkKYebMmTpZ2rlz5/i1C3Lo0CGdLBNEyc3N5aGfyJ49e3S4
ZKonvFi8zg8Aw6Tz56sbGxtnzJjBy5w8ebJuEw9QTGdnZ3BwMO9HNze36upq
3S5fJ48Cah1ft/fy8tLVApOTk/nlC91euQKF3bp1ix/2IDt27NDtwi9cuMBL
TklJ0e2SAcDQnDp1ituT7OxsXS2zubnZ19eXFztp0qTBjl4OwnV1dYWEhPAe
nDhx4v3793W+Cl09CqhpfNGe/tXhMtPS0qQn6HSefoACCgsLbW1t5duDlDry
wimZ1PnCAcCgnD59mtuTzMxMHS62paXF39+fl+zi4lJRUaHDhYOsuru7ly1b
xvtu/Pjx5eXlcqxFh48Catf06dP5cr1uF5uRkSE9R7dp0ybdLhxkVVRUZG9v
z/tOptnkqZfBy8dgUAAwTAkJCTI9X93W1jZ37lxeuLOzc1lZmW6XD3KgBDI8
PJz3mqOjo3x7jR8F9Pb2lmn5mkCbz8+a6nzJ2dnZ0tN0X331FWa014S7d+/y
c8Jk1apVMq2FmnpeRWJiokyrAAADIevz1e3t7QsWLJASkpKSEp2vAnRr9erV
vL/oXCbr/tL5o4BaxKNuurq6yrHw3Nxc6Zm6iIgIpJEqR/01fkiYrFixQr79
lZGRwWvBaKIAMExJSUncnqSmpsqx/I6OjiVLlkhpyZ07d+RYC+jE+vXreU/Z
2dkNZ8z5gZDjUUDN4YE3J0yYINPyb926JT1Zt3z58q6uLplWBMNUUVEhzfa1
dOlSWRP+7OxsXlFsbKx8awEAQ5CcnMztCf0g0yrozCU9X0fJSUFBgUwrguHY
smUL7yPKOhTYRzxzoqenp9wrUrOAgAAqBCcnJ/lWUVhYKD1f98UXX3R2dsq3
LhiaqqoqaZ4v6nHLnern5ubyumJiYmRdEQDovUuXLnF7kpSUJN9aej9lN2bM
GJ2MRQk6tHPnTt47NjY2N2/eVGCNM2fONOp5bV+BdakWPzA8btw4WddSXFxM
q+D9u3Dhwo6ODllXB4NSU1MjzfAVHByswN6h5pdXFxUVJfe6AEC/XblyhduT
s2fPyroiSiPXrFnD67K2ts7JyZF1dTBwUgJpaWmpq2FCH2vWrFlGPe/sK7M6
dZo/fz4Vgr29vdwrKi0tHT9+PO/lefPmtbW1yb1GGIi6ujoPDw/eL0FBQcqk
9/n5+bxGXU2eCAAG6+rVq9yenDlzRoHVbdiwQUpXdDuaEAzNoUOHeI9YWFhc
u3ZNsfXy0E/Ozs6KrVGFeBR3W1tbBdZVXl4+ceJE3teBgYGtra0KrBQeoaGh
QZrVKyAgQLHE/vbt27zSI0eOKLNGANBXWVlZ3J7ExcUps8aNGzfyGs3Nza9c
uaLMSuGBjh07Ju2LjIwMJVfN03DL+iig+i1evJgvyyuzuvv370u3Tf38/Fpa
WpRZL/TX2NjIjwTzvlAypS8uLub1YiYjABimnJwcbk9OnTql2Ep3797NKzUz
M5PpfXB4rOjoaN4Lpqamys+cyzNxOzg4KLxeVeHJgCwsLBRbY3V1tXTz1Nvb
mzIZxVYNEsre+Xlgo57Z0hVO5ktLS3nV+/btU3K9AKB/pHf0KKNQcr0HDhyQ
EhhZX+eBB4qLixs9ejSXv3yv5D8CDxxqZ2en/KrVY+nSpbwLlFxpXV2ddAt1
+vTp9fX1Sq4dWltbeUwno57xUZVP48vLy3nt1JdXeNUAoGdu3rzJ7cnx48cV
XvXRo0d51SYmJpgxQUlU2pxAGhsbi0rgFy1aZNTzGriQtavE8uXLqRBoXyi8
3oaGBulG6uTJk2traxUOwGC1tbXxgE5kypQptCOUj6GyspID2Llzp/JrBwB9
UlBQwO2JkHf0oqOjOZmhfxV7INPAUdJIqSOXeUJCgqgw+DaupaWlqADUQBrw
SvlVNzU18Sw5Rj2TLVZVVSkfg6Hp6OjgRziIh4dHXV2dkDCqq6s5hm3btgkJ
AAD0xp07d7g9OXz4sJAApJuq9K/C99MNUEpKiqmpqRqS9tDQUH4gVmAMwq1a
tYqPPiFDf7e0tMyePZsDcHV1raysVD4Gw0EJJL+GT9zc3GpqakRFQrkrh7F5
82ZRMQCAfigpKeH25MCBA6JiSExMNDExEXg51EBcvnyZcjYhj7/2FxYWxjfT
xYYhljRiqqgBG2m9c+bM4RicnZ3v3bsnJAy919XVJU356uLicv/+fYHBNDY2
ciQbNmwQGAYA6AHpHb29e/cKDCMpKYmvjxlh1DJ5ZGRkmJubqydRX7lypajb
uOqxbt06LgSBw+y0t7fzUOdGPUMt3b17V1Qk+qq7u1ua7JUS9YqKCrHxUGXj
YKj6iY0EALROPe/opaamSlfJhAejZ65du2ZhYcFle+jQIdHh/ENERITA27gq
IQ25L3aMnY6ODh6p0qhn4sWioiKBwegZSiCl7pKjo2NZWZnoiP5x8ZnjWbNm
jehYAEDbVPWO3pUrV6RrZXjeW1dyc3OtrKzUcLW5N+G3cdVg8+bNXAiiXq+Q
UCbPT6ga9cy9WFhYKDYevSE98urg4FBSUiI6nH+gfc0hUT9OdCwAoG1qe0cv
MzPT0tISj+voys2bN21sbLg89+zZIzqc/6OG27jC0UHHhUCHoehY/nHFbMWK
FRyPra0t1RzREWmeVMkpLVfP1V3a0RzVypUrRccCANqmwnf0cnJyrK2tpbst
1OKJjkirCgsLKRngktyxY4focP6FSm7jirVz504uBJW8E03HmnTdjLoe169f
Fx2RhkkXmekYVNt1XX6HMSwsTHQgAKBt0jt6GzduFB3L/8nLyxszZgwHFh4e
jjRyCIqKiuzt7bkMVfjw/JYtW1RyG1cgadLP8vJy0bH8n/Xr13NUlpaWWVlZ
osPRJOqySam4Cq/o8iNDoaGhogMBAG1T7Tt6+fn5dnZ2HNuyZcu6urpER6Ql
JSUlDg4OXHqrVq0SHc4DbN++XT23cUXZu3cvF0JpaanoWP6FdJXYwsIiPT1d
dDgaI11etrKyys3NFR3OA/DzQiEhIaIDAQBtU/M7enfu3JESoSVLlnR0dIiO
SBvKysocHR2lR57UeRVXbbdxhZBmjVfJ2xa9STvI3Nz80qVLosPRjEOHDknp
97Vr10SH82D8jPSiRYtEBwIA2kaJmZqvVtG5VUqHgoODkUY+VkVFhbOzs3T9
Vp0J5DdqvY2rsMOHD3MhUHdJdCwPsG/fPg7P1NT04sWLosPRgMjISCnxzsjI
EB3OQ/EtngULFogOBAC0raurS3rsUHQsD1ZWViYlRUFBQYY8FMxj3b9/38XF
Rbpyq+YHAKT8RG23cZV09OhRLoSCggLRsTzYkSNHOEITE5OzZ8+KDkfVoqOj
uazMzMwuX74sOpxH4fs71JyKDgQANI+nq16+fLnoQB6qoqJCSo38/f0NeTSY
R6ipqXFzc9PKNduDBw9yqMXFxaJjEeb48eNcCCp87UISFRXFTYSxsfHp06dF
h6NScXFxXEqmpqYpKSmiw3kMJycnCjUwMFB0IACgeTzJ4NKlS0UH8ihVVVWT
Jk3iE66vr29zc7PoiNSlrq7Ow8NDulqr8gTym14XuG7fvi06FmGkK1fqfPNC
curUKU6Q6N+YmBjR4ahOQkICl4+JiUlSUpLocB6P7+zMnj1bdCAAoHk8C576
39Grra319PTkc+6MGTMMeVzBPhoaGqZMmcIlExAQoInb/dKTY/n5+aJjEYZy
My6EnJwc0bE8xpkzZ4yNjTmNPHbsmOhwVOT8+fNSySQmJooOZ0D4tg51xkUH
AgCaxwN6L168WHQgj1dfXz916lQ+7dIP9F/REYlHubSXlxeXiZ+fX2trq+iI
BiQqKopjzsvLEx2LMHFxcVwImhiGkZIlvmdhpJpZ14VLTk7mMqEEkvam6HAG
iu/peHt7iw4EADSPpzIJDg4WHciAUMpETR+fyDw9PWtqakRHJFJLS8vMmTO5
NOgHDT0pGhMTw2Eb8mQoZ86c4UJQ8zu8vUkpE9m/f7/ocARLS0uTEsjo6GjR
4QwC39ChvqfoQABA83g2k/nz54sOZKCam5t9fX35RObm5lZVVSU6IjFaW1v9
/Py4HOh0oK2b+7GxsRy5asfQU8DZs2e5EK5cuSI6loG6fPkyz3JCtm/fLjoc
Ya5evSqVg+Zu7vPdHPpXdCAAoHnjxo2j9mTu3LmiAxmElpYWf39/bsBdXFwq
KipER6S0tra2gIAA6bZ+Q0OD6IgGJz4+XluX4OSQlJTEhaCtQbxpl/FEJ2TT
pk2iwxGAOj78GLlGb+vz0y+enp6iAwEAzeNxHighER3I4FASFRQUxM24s7Nz
WVmZ6IiU09HRIW27h4eHFqecTkxM5PgNeSq9ixcvciEkJyeLjmVwsrOzrays
OPi1a9eqdih7OeTm5kop9N69e0WHMxT8ONCkSZNEBwIAmjdhwgR+HUN0IING
qVRwcDA35o6OjiqcME4Ovbfazc1No0+Enjt3jjchLS1NdCzCpKamciFoYkCY
Pm7cuMFT5pEvv/zSQNLIvLw8aat37twpOpwh4meBXFxcRAcCAJrn6upK7YmP
j4/oQIaCEqqQkBBu0seOHavOOeN0qKura8mSJdJNfO0+C3rhwgXeCvUPyCwf
yp+5ECijFh3LUOTn5/MbeSQsLEzN8yLpREFBgbS9O3bsEB3O0M2ePZtv34gO
BAA0z93d3UjL4zzQmWvZsmXcsNvZ2enxeIPd3d1Lly6Vbt9r+ilQSh15QyiZ
FB2LMOnp6VwICQkJomMZotu3b1PfjbeCenOdnZ2iI5IL9U95mmmyfv160eEM
S2BgIG2Fk5OT6EAAQPMmT55spPFxHii5Cg8P5+Z9zJgxejnkIG3jihUreBup
8df6859avwSnE5mZmVwImp5DsKSkhN/LM9LCJJtDQ9vIc0yT1atXiw5nuPhp
atoi0YEAgObpxzgPlGKtWbOGG3lra2v1T/wxWKtWreKto5b/7t27osMZLukS
nFam9pBDdnY2F0JsbKzoWIaltLR0/PjxvC2Un2hipqSBo/6ao6Mjbx31VfXg
yc8FCxbwXRvRgQCA5unTOA8bNmzgpt7S0jIzM1N0ODqzbt063i57e/uioiLR
4eiAdAkuPj5edCzC5ObmciHowSTU5eXlEydO5M0JCAjQynxJj0XbJaXHy5Yt
04MEkixatIg2x8bGRnQgAKB5ejbOw6ZNm7jBNzc319DQzY8gbZGtrW1hYaHo
cHRDby7BDUdeXh4XQlRUlOhYdOD+/ftubm68RbNmzWpubhYd0XDRFkmJcUhI
iN68NMTvIVJHW3QgAKB5+jfOw+7du7nZNzMzS01NFR3OsOzYsYO3xcbG5tat
W6LD0Rl9ugQ3ZPn5+VwIkZGRomPRjZqaGg8PD94o6pxqa+6kPqqrq6WUODg4
WJ9eFwoNDeVetuhAAEDz9HKchwMHDnDjb2pqqsXB99jOnTt5K6ysrCjpEh2O
LunZJbihKSws5EI4cuSI6Fh0pq6ujh+xJtOmTauvrxcd0VDU1tbygBVk3rx5
evaiUFhYGG2XiYmJ6EAAQPP0dZyHyMhIPgUYGxtrceyUgwcPSs92Zmdniw5H
x/TvEtwQFBUVcSHQvhYdiy41NDTwU9Zk8uTJlI+JjmhwKO+dMmUKx0/No569
IkRWrlzJWyc6EADQPD0e5yE6Onr06NG0dfSvtp67kxJgc3NzvZxR+vbt27yB
hw8fFh2LMHfv3uVC2Ldvn+hYdKypqcnHx4e3zt3dXUOD4Tc2Nk6fPp0j9/Pz
05uXg3qLiIjgDdSnG/QAIMT8+fONel74FR2ILOLi4qQ08sSJE6LDGRBKfaXn
OS9fviw6HFkUFxfzNh44cEB0LMLcu3ePC2H37t2iY9G9lpYWfk6GH7eurKwU
HdHjNTc38zuGRj1Td9EmiI5IFtIwaPp3iRUAFLZw4UKjnqG5RQcil8TERBMT
E24zjx49Kjqcx4iNjeWk19TUVOsvBD1CaWkp75G9e/eKjkUYSqu4EHbt2iU6
FllQijJnzhzeRmdnZ8qZRUf0KK2trbNmzeJovby8mpqaREckF2msMH1NkgFA
MTz/spWVlehAZJSUlEQpGTebhw4dEh3OQyUkJHACSUmvdl8FGojy8nI9vgQ3
QFVVVVwI27dvFx2LXNrb23lEa37oWrXD41O66+/vz3FOnTq1oaFBdEQyksbR
1fSL8wCgBl988YWRAYzzkJqaamZmxi3n119/LTqcBzh//ryxsTHfdtf72Vuk
S3A7d+4UHYswtbW1XAhbt24VHYuMOjo6Fi9ezFvq4OCgwkHyKUJ+LNyoZ7aF
uro60RHJa/Pmzbyxer+lACC3ZcuW8Z1T0YHILj09nVJldZ61k5OT+UopJZBx
cXGiw5FddXU174ht27aJjkWY+vp6LoRNmzaJjkVeXV1dS5cu5Y21t7cvKCgQ
HdH/oQRSulLq5uZWU1MjOiLZ0UHH20uHoehYAEDbVqxYYWQwY4VlZWVZWlpy
+7lhwwbR4fw/aWlpUgJpIGNu19XV8V7YvHmz6FiEaWpq4kJYv3696Fhk193d
LQ0pY2trm5eXJzqif6DkVrpG6uLioqH3x4dDGnhWEy86AYCahYeHc3uiH1PB
PlZOTo61tTVv8po1a4Rv9dWrV6Wro8eOHRMbjGIaGxvVlskrr7W1lQth7dq1
omNRAh1rq1ev5k22sbG5fv268Hh4xhajnld+DCehkmbyKi8vFx0LAGjbqlWr
uD3Rs7kYHiEvL2/MmDG81StXrhSYRmZlZVlYWHAkan7ZR+daWlp4q9etWyc6
FmHoiONCoGNQdCzKWb9+PW+1paUl1X9RYdBRz7dgjHpe9lH5O+O6tW/fPt7w
0tJS0bEAgLatXbuW2xODGiusoKDA3t6eN3zp0qVdXV3Kx3D9+nXpxrqhDXHT
3t4uXQoWHYswlMZwIYSHh4uORVGbNm3iDacOVHp6upAYpL7zuHHjVPu2uEyk
ObCKi4tFxwIA2iZdFmhubhYdi6KKioocHBx425csWaLwZdi8vDwbGxteuwG+
m0xJO297RESE6FhE4kJYsWKF6ECUtmvXLt52MzMz5cdBlQZIpI6kCt8Tl9uR
I0d482/fvi06FgDQNumagH4PifZAJSUlTk5OvPkLFixob29XZr0FBQXSzfQd
O3Yos1K1kZ4lEB2ISPwuVVhYmOhABNi/fz/XASqECxcuKLZeqcWztbUtLCxU
bL3qIU2lmp+fLzoWANC2LVu2cHtSW1srOhYB7t275+zszCUwd+5cBW7o37lz
x87OjtdoyG+U8ORBhpk+Sfh1qtDQUNGBiCFdEKPKoMyYqNu3b+c12tjY3Lp1
S4E1qlBUVBQXgkrejgcA7ZIaVQMZ16K/yspKFxcXLgR/f39Z5/8qKSkZO3Ys
HgX8xuDTJ8YPxC5ZskR0IMKcOHFCmtFe7pFRpTFtrKyscnNzZV2XmsXExHA5
GHIhAIBOYKywb3pmnZs0aRKXg4+Pj0xT5ZaWljo6OvJawsPDhQ8rJBanTyEh
IaIDEYmfiV24cKHoQESS5oinf6Ojo2Vay4EDB/jQo4qXnZ0t01o0gQqci8LA
ywEAhk8aK8ygRrfor7a2dvLkyVwUM2bM0PlMsuXl5ePHj+flh4WFGXgC+c0/
06dFixaJDkQkfqph/vz5ogMRLCEhQZroMzIyUufLP3r0KB965ubmGRkZOl++
tsTHx3NpoCgAYJikscIMbYCL/urr66dNm8alMXXqVB1OJnv//v2JEyfykkNC
QoQMJaQ2SJ8IjwwQFBQkOhDxkpKS+A0jcvDgQR0u+cSJE7xYMzOzK1eu6HDJ
GpWYmMgFImpgJQDQGxgrrLfGxkZvb28uEE9PT51MnltdXe3m5sbLXLhwYWdn
5/CXqQeQPhEeFiAwMFB0IKqQkpJCaR4fKdS31ckypRvllKAqP4iQOp07d44L
OS0tTXQsAKBtGCusj+bm5lmzZnGZUO53//794SyttrbW3d2dlzZv3jzDmQzo
sZA+ER4TwN/fX3QganH58mVp6s/t27cPc2lnzpzhBNLExCQpKUknEeqBCxcu
cAlT0i46FgDQNowV1l9ra2tAQAAXi4uLS0VFxdCWU19fLz1jScmSQc0E9Fic
Ps2ePVt0ICLxgADUZxEdiIpkZGRI8zdt3LhxyMs5d+4cP2NJ/yozcJBWUOrI
xavksJwAoJcwVtgDUb4XFBTEJTN+/PghTCzb2Ng4ffp0XoKfnx8SyD44ffL1
9RUdiEg8GsDMmTNFB6IuOTk51tbWfOysXbt2CC+gJScn8wCko0ePPn36tBxB
aldaWhqXLaXZomMBAG2Ljo7m9gRjhfXR0dERHBzMhePo6FhSUjLwv21ubpae
q/Tx8ZF1zEmN4vSJSkl0ICJ5eHhQIXh5eYkORHVu3LghzeU02IGwKEfi13Mo
gTx58qR8QWpUeno6FywuzwLAMJ06dYrbE4wV1l9nZ2dISAiXz9ixYwf4yChl
jNITlZQeyDTapNZ5enoifZoyZYpRzyAAogNRo/z8fGlGp7CwsAGOZkAJkvRE
5fHjx+UOUosyMjK4fOLj40XHAgDadvr0aW5PMjMzRceiRnTmovMXFxGd0R77
1GhbW5u/vz9/n3IDA5yFfICocJA+8dMOkydPFh2ISlGvTZrXiXpzjx3TICsr
y8LCgr9/+PBhZYLUnGvXrnERxcbGio4FALQtISGB2xOMFfYw3d3d4eHhXEo2
NjY3btx42Dfb29vnzp3L3/T09Kyvr1cyTm3x8vLiUhIdiEj8wIO7u7voQNSr
pKREmt0pODj4ESMbXL9+XXoZR1dDA+ml3NxcLqWYmBjRsQCAtkljhV2+fFl0
LOpFaeTatWu5oKytrXNycvp/h85uCxYs4O9MmjSptrZW+Tg1ZObMmVxQogMR
ycfHhwrB1dVVdCCqVlpaym/xG/UMKPrA19Py8vKk13B27dqlfJAaQmXFBRUV
FSU6FgDQtqSkJG5PMADvY23cuJHLytLSss80YZ2dnYsXL+bfuri4VFVViQpS
K/iRUSor0YGI5OfnR4UwceJE0YGoXUVFBb/Ib9QznGZra2vv3+bn50sv4OzY
sUNUkFpBxcVlJce0kgBgUJKTk7k9oR9Ex6IBW7Zs4eIyNzeXrtx2d3eHhoby
587OzpWVlWKD1AR+apSKS3QgIvEwpOPHjxcdiAbcv39fmu+JOiDNzc38+Z07
d6RXbzZs2CA2SE24ffs2F9eRI0dExwIA2paamsrtCeZxGKDdu3dziZmZmaWk
pFACuWLFCv7Eycnp3r17ogPUhsDAQC4x0YGIxE/Pjhs3TnQg2lBTU8Ov8xv1
jArV2NhYUlIivXSzZs0a0QFqQ3FxMZeYbuclBwADdPnyZW5Pzp49KzoWzZAm
GTc1NeV3QzgTuHv3rujQNIOHcHdwcBAdiEjz5s2jQrC3txcdiGbU1dXxG/38
DICtrS3/PNgxJA1ZaWkpFxrePAKAYbp69Sq3J2fOnBEdi5ZERkaOHj36F7/4
xfe///3f//73lAYUFRWJDkpL+P0jOzs70YGIxIPYUyIkOhAtaWxsnDFjxqef
fvraa6+98cYbn332WVhYGBLIgSsvL+c2f/fu3aJjAQBty8rK4vYkLi5OdCwa
4+Xl9f0er7766s6dO0WHozGLFi0y6hkrSXQgIvF7WNbW1qID0Rjqr3H3jfzu
d7/DE8iDQsXFbT5aLQAYppycHG5PTp06JToWLdm+fTsVGp2/KIH8+OOPR48e
jYEyBoUnALK0tBQdiEhcCBYWFqID0ZKqqipXV9fPP//87bfffvfdd//+97+7
uLggjRy46upqbvO3bdsmOhYA0DZpvNno6GjRsWgG9d+50KytrelnExMTvOc4
WPwmu5mZmehARFq6dCk/VSs6EM2ora11d3fnw23u3Ln8Zha/4I/X2Qaorq6O
C23z5s2iYwEAbbt58ya3J7iMNkAHDhzgErO0tOTBxi9cuEBpAH+4f/9+0QFq
A88gaWxsLDoQkZYvX45CGLj6+vrJkyfzgUbZY3sPaWB/JyenkpIS0TFqQGNj
I5cYhkICgGEqKCjg9gTjzQ7E0aNHubjMzc17zzCemppqZmaGJ9UHbuXKlVxc
ogMRSZpDU3QgGkCZz7Rp07i4Zs+eLc1W09HRsWTJEv7cwcEBr7Y9VktLCxfX
unXrRMcCANomjTd7+PBh0bGoXVRUFJcVpYtXrlzp89v09HQLCwv+wtatW4VE
qCERERFcVp2dnaJjEWbVqlUohIFobm7mucWJj48PZUG9f9vV1cVPBRj1vOlP
/WJRcWoCpd9cVhhREwCGSRpv9sCBA6JjUbVTp06NHj2an1572LyQWVlZlpaW
XJ7r169XOEJtofMXF9QDpz82ECiEgaCM0dfXlwtqxowZTU1N/b/T3d0tXdke
M2ZMXl6e8nFqBXVYuKCoHyc6FgDQNmm82b1794qORb3i4+M5gTQx+f/Zu/O4
LK57f+BZTJO0ucmr2domadq0sUmb29zcJk1vb1+9vy7pq2mC7LsIuLGIG6KI
uCAiqCiiorjvJu77AgFFEVFAFBFBRFlERBaRfV/y+16+955LAZXleebMPM/n
/QcvxOeZ+c6ZmTPfM3PmHLPz588/4pPXr1+3s7PjIl21ahWGrXuYtWvXcil1
u6dkVFAIj0XZNU+LSSZOnFhXV/ewT9K5JnJyW1tb7qsMveJSoqxbdiAAoG0Y
b/axEhISTE1NTTrffejLbD45OTli+gyqpZFG9mr9+vVcRI/ICgweCuHRWlpa
eDpIMn78+Jqamsd+RRSptbV1RkaGAkFqEVdoYWFhsgMBAG3DeLOPduHCBR66
Z9iwYXFxcX38Vl5e3vDhw7lgFy9e3N7ertcgtWjTpk1cPtXV1bJjkQaF8Ait
ra2BgYFcPh4eHlVVVX384pYtW/hblpaWaWlpeg1So6hkqHxCQ0NlBwIA2ibG
m922bZvsWFTn4sWLPGgPJZDffPNNv75bWFg4YsQILtuQkBC6IOopSI3iQdoJ
HYGyY5Fm69atKIRetbW18SQ+ZOzYsRUVFf36uhjB1cLC4mG9l40Zd9teuHCh
7EAAQNvEeLObN2+WHYu6pKWlcWvdZKCDZ969e9fV1ZWXEBgY2NLSovMgtUtc
5Y15hhFRCPfv35cdi4q0t7fzEPQmnYOHD+wI2bt3Ly+BmoGJiYk6D1LTuM92
cHCw7EAAQNvEeLMbNmyQHYuKZGRkiIF6BjP7TElJCV0EeTmzZ8/G67fCzp07
uVhKS0tlxyINCqGnjo4OHnrdpHPY8MGUjBjN1czMLD4+XodBap2joyMVy7x5
82QHAgDa1tDQwNUsxpsVsrKyxBA9g593pry8fOzYsby0GTNm4A1ctmfPHi6T
4uJi2bFIs3v3bhRCV5RAioFDnZ2dB18sJ06c4BEV6OfJkyd1EqQB4G42AQEB
sgMBAG3DeLPd5OTk2Nracpl8/fXXOllmRUWFmOR32rRpvQ5wZ2z279/PBXLn
zh3ZsUgjnrdikj62evVqLpDhw4fr6sCg1FGkkVFRUTpZptZxH5tZs2bJDgQA
tK21tZUr7ZUrV8qORb7c3Fx7e3sukO3bt+twyVVVVWKqX29v79raWh0uXIsO
HTrEpVFQUCA7FmkOHDjAhXD79m3Zsci3YcMGLg0HBwfdHhXx8fE8uoIJJnXt
xB1s/P39ZQcCANrW0dHBVevy5ctlxyIZXba4mxBZv369zpdfU1MzefJkXv7E
iRONfDgXupRzUVDeLjsWaUSHPUzPJ15Rt7Oz08chkZiYyGMsmGBOrm+/5d41
vr6+sgMBAM3jBz1Lly6VHYhMd+7ccXJy0vdj/bq6OjHt77hx4yorK/W0IvUT
k48b87R0x44d40K4efOm7FhkEu+n29ra3rhxQ09rSUlJsbCw4BUZ+bRcHh4e
VAhUF8kOBAA0j5vnS5YskR2INMXFxc7OznxxWbFihV5nlmloaJg+fTqvy93d
3WgHdYmOjuZCuH79uuxYpImKiuJCyM7Olh2LNKJTqLW1tb4nKLx8+bIYsGvr
1q16XZeaeXl5caca2YEAgObxIDaLFi2SHYgcpaWlYhTHsLAwBaYmbGpqmjlz
Jq9xzJgxxjmuS2xsLJfAtWvXZMciTUxMDBeC0U7uLLrFUmp39epVBdZIaxGj
Luijy4omTJw4kXvUyA4EADSPX0MOCQmRHYgE5eXlo0eP5gsKZdGKTUrY3Nwc
EBDA6x05cqQRDu0SFxfHm5+eni47FmlOnjzJhWCcMzuL/gwWFhZKTkpIGbsY
eyEyMtIIZ7T39vambffy8pIdCABoHr+JHBQUJDsQpVVUVLi5ufGlJDg4uK2t
Tcm1t7a2zp8/n9fu7OxsbEPcxMfH87Yb84zGp0+fNtpEOiYmhntim5ubKz8d
YU5OjhiBYfny5caWRnKvbA8PD9mBAIDmDR8+3KRzMj7ZgSiqqqpKjNlI2y5l
PmvKWhcuXMgxODk5GdUoNwkJCbzhqampsmORRiTSly9flh2LouLi4jiBNDMz
u3DhgpQYcnNzxTgMS5YsUewZhBr4+vqadE5ELjsQANA8fp1kzpw5sgNRTk1N
jRitcfbs2RJnsqYrV1hYGEfi4OBgPAPdnD9/nrc6OTlZdizSnDt3jgvh4sWL
smNRDjUfTE1NaavpJ/0uMZLbt2+L0RioNSelISnFjBkzTDrnIpcdCABoHr9R
MnPmTNmBKKSurm7SpEl84aC6VPoc1h0dHStWrOB47Ozs9De2iapQ6sibTMmk
7FikuXDhAhdCUlKS7FgUQpvMw30PGzYsLi5OdjjfFhUVubi48F4ICgoykjRy
1qxZJp3TkcsOBAA0j18q8fPzkx2IEhoaGsQIjdOmTVPJ7NWURq5Zs4ajsrGx
yczMlB2R3qWmpvL2yr0TJVdKSgoXQmJiouxYlHDx4kUeSYwSyJiYGNnh/I97
9+7xvC0mnVNIS29UKoBf6BsxYoTsQABA8/i9EmOYs4AyRsob+WIxZcoUtc1b
vXHjRo7N2tra4F+ySEtL442Nj4+XHYs0RpVI0x4XQ3wfP35cdjj/pKysjKdu
MemcAVAlTUv9mTdvHm2po6Oj7EAAQPP41RKDn7OgubmZrg58mZg0aVJdXZ3s
iHqxZcsWjtDS0tKwXza5evUqb6kaHmjKYjyJNO1uMbj3oUOHZIfTi4qKCp69
hRvUDQ0NsiPSo+DgYO45IzsQANA8frvEsOcsaGlpmT17Nl8gaHtrampkR/RQ
u3bt4jjNzc0NuJtcZmYmb2ZsbKzsWKQxkkQ6KytLDOu9d+9e2eE8VGVlJU/g
wm1qdTYzdYKHg6CdIjsQANA8g5+zoLW1NTAwkC8Nnp6eVVVVsiN6jAMHDog0
8ty5c7LD0Yvs7GzexujoaNmxSGMMifSNGzfEgN5ff/217HAeg1qXXB9ylajm
xuZghIaG8sMO2YEAgOYZ9pwFbW1t/OCGuLm5VVRUyI6oT44ePcoD6Jmamp4+
fVp2OLqXk5Ojzq5xSrp+/bphJ9K5ubl2dna8jdu3b5cdTp/U1dVNmTKFY6Za
Uf1NzgHg8cTMzMxkBwIAmmfAcxa0t7cvWrSILwejR48uLy+XHVE/UF7BaaSq
XmLVFcoueL8cOXJEdizSGHYiXVBQ4ODgwBu4YcMG2eH0Q0NDA4/CzRWjVhqe
fbds2TLeOtmBAIDmGeqcBR0dHUuXLuWq0tXVtbS0VHZE/Xbq1CkejZnSSANL
MyjBUPMbFsow4ET6zp07PAEWWb16texw+q2xsVG8gkd1Y1lZmeyIdCkiIoI3
TeEJXgHA8BjknAVdB+52dnYuLi6WHdEAnT17lsdkNrB0i3IM3qh9+/bJjkWa
/Px8w9uzhE43nv2KULqi0dmom5ubeRxFrh7v3bsnOyKdiYyM5O0yhsEwAUCv
DHLOgtWrV3Ml6eTkROmK7HAG5cKFCzwyM9mzZ4/scHSD0gzeot27d8uORZrC
wkIuhP3798uORWdKS0t56iuydOlSjSaQrLW1NSgoiLfFxcWlqKhIdkS6sXbt
Wt4ogx8JEwD0jdvazs7OsgPRmfXr13MN6eDgUFBQIDscHbh48aIYXk/9L7f2
BWUavDk7d+6UHYs0d+/e5UJQ84g3/VJeXs7zXpHQ0ND29nbZEQ0WpZELFizg
LRoxYsTt27dlR6QDooY04PGLhLl9IDtGgIFQybHN494MHz5cgXUpYOvWrVw9
2tvb5+bmyg5HZ9LS0qysrHjTNm/eLDucwaJkg7dlx44dsmORpqSkhAth165d
smPRgYqKCjHbS0hIiMH0taNMeMmSJbxdjo6OBlCrbNq0iTenurpadix6p5Lr
LIDOqeTY5oc1lHEpsC59o4SE60ZbW9ucnBzZ4ehYRkaGGKt57dq1ssMZlAcP
HvCGUM4vOxZpRCL91VdfyY5lsKqqqsQ8L9QsbW1tlR2RLnV0dCxfvlw0TrVe
t4iGNp2GsmPRO76S+vn5zZkzp+cVdsqUKQEBAbJjBBiIrsdw16N6xowZM2fO
VCyHDAkJocrExsZGgXXp1d69e7lipEQrKytLdjh6kZ2dLQbcW7lypXY7m1VX
V/NWbNq0SXYs0lRUVHAhbNu2TXYsg1JTU8PTXZHZs2e3tLTIjkj36FwTr6JQ
E1XTNYxoa2truLOBcXd3//nPf/7000+/8MILv/vd77pmktQceOKJJ6ZPny47
RoCB6HoM8yHt6+s7dOjQJ5988jvf+c5HH32kTPuIR1DU+pwFhw4d4lrRysoq
IyNDdjh6dPPmTTHsXnh4uEbTyLq6Ot6E9evXy45FmqqqKi6ELVu2yI5l4GhX
irld/P39DftVX9GTkBqqV69elR3OAO3cuZO3QosjnvUXJZC/+tWvnuhEF1bK
/+lSS5nk3/72tyFDhiCHBI1qa2vregxzDvnxxx+/+uqrxcXFaWlpzz33nDL3
Brmrj7m5uQLr0pPjx49zlUiZMBWd7HD0Lj8/Xwy+FxoaqsWOZ42NjYbxUH4w
ampquBA2btwoO5YBqq+vF7O6UBPYGN7zFQ+Cqba5fPmy7HAGYvfu3bwJ2h30
rI9qa2spgfTw8OAckvLJDz/8kC61dL377ne/+8c//hE5JGgUVURdj2E6qmfO
nPn000+Ld1vGjBmjzPyD4eHhJp1z6imwLn2IiYnh+VyoWrh48aLscBRSWFgo
huALCQnRXPez5uZmDj4yMlJ2LNJQAsaFsG7dOtmxDARljNOmTeNN8PHxaWho
kB2RQr766iveagsLi5SUFNnh9Nv+/fs5fq2Pe9YXXbs+0hX2888/p9/pcPX3
9+fckq6/eXl51gCa8uWXX3Y9humonjBhAv3+17/+9bXXXnvppZf+9Kc/KfMs
W/QV1+JT0bi4OE4gzczMLly4IDscRd29e1cMxBcYGKitTmjt7e0ceUREhOxY
pGlqauJC0OJMLtQK4OkJyKRJk4xhlJiu9u3bx9tOTdfExETZ4fSP6PljGEOf
PRonkFOnTv3BD37wxhtvzJ49W2SV4vp769YtEwCt6XoM0++UD9DvL7/8sqWl
JWWSTz31lDLjfq9cuZLj0dy9rLNnz/JUgPQzISFBdjgSlJSUiOH4qG7UVlc0
DnvZsmWyA5GGzjguhFWrVsmOpX+owcJzE5Dx48fX1NTIjkiCI0eOcAlQAzY+
Pl52OP0gIjeAcYoei+/PfP/733/77bf9/Py6vr4qrr9UkS4E0JpuOaS7uzv9
bmFhwYf30KFDP/roIwVOMTGli7YykPPnz/MkgMOGDYuLi5MdjjTl5eVubm68
B2fMmKGhDmm8+8LCwmQHIk1HRwfvuBUrVsiOpR8o9eVBZYmnp2dVVZXsiKSJ
iori5yD08+TJk7LD6SvRgVzrgxT1BR2iL7zwwnvvvSdGO+mZQ8qOEWAguuWQ
06ZNo99HjBjBh/evf/1rOuwVCEPMe6Wh7kwpKSk8/R9V3TExMbLDkayiooLq
Sd6JdBTV19fLjqhPeOad0NBQ2YHIxHstPDxcdiB91dbWFhwczGFT44WOPdkR
SUapo0gjKaWUHU6fREdH8x7Mzs6WHYt+NTc3v/LKKz/84Q/HjBnj1mnixInI
IcEwdMshybvvvvvTn/7Uz8+PDvhnn332iy++UCCMDRs2cH1SW1urwOoGLy0t
zcLCgmOmBrXscFShqqpKDNDn7e2tiV1p3Tle+sKFC2UHIpO2bsa2t7fzUGBk
9OjRxjC6YF/Ex8fzfiSHDx+WHc7jxcbGcrSZmZmyY9EvukA88c/ee++9bjkk
XXBlhwkwEF2PYT6kJ0+e/Oabbz755JNPP/30b37zG2Xeqdm8eTPXJ5p4JnX1
6lUxc/ShQ4dkh6MiNTU1dPxwyVBbW/2zmPFg6cHBwbIDkUlDN2M7Ojoo1+UD
bOTIkcYwtGDfJSYm8pMREy3Mfh4XF8ehaneISwB4mLKyMiUfR27bto3rE/U/
lsrKyrL+38n+1F9RK6+urs7Hx4fLZ9y4cSqfyMzR0ZHinDdvnuxAZOLjecGC
BbIDeYyuk/05Ozsb/LiCA5CSkiKej+zcuVN2OI8SHx/PcRrDaLoAoFdamffq
xo0btra2mqiiJWpsbPTz8+NScnd3v3//vuyIHmrEiBEUpJFPVss3Y+fPny87
kMcQ0/w5OTkVFRXJDkelKCUTT0nUPPdQQkICB5mamio7FgDQNk3Me5Wbmyvm
id6+fbvscFStqalJjLsyZswY1e5WHtySQpUdiEx8MzYwMFB2II8iJvijaI1h
RMHBuHr1qnhWotp5PM+fP88RJicny44FALRtz549XJ+o9vlUfn6+mCFau7PC
Kam5uXnu3Lmi65o69+yoUaNMOscjkh2ITOq/GbtlyxY+kOzt7Y1hOMHBy8rK
Ek9MIiMjVTh3A6WOHB4lk7JjAQBtU/m8V4WFhWJu6DVr1sgORzNaW1vnz58v
OrCpcOeOHTvWpHOSZdmByKTym7GiowslRcYwlqCuUFlRys1Ft3z5crWlkamp
qRybcU7NAAA6dPDgQa5PVPiU6u7du2JW6IiICLVVxSrX1tYmRmKhPDw/P192
RP/Ew8PDpHOeZdmByMQ3Y/39/WUH0gvxhMLa2jorK0t2OBqTl5fHHRXIkiVL
2tvbZUf0f9LS0jgwbU2vAwAqpNp5r0pKSsR80OHh4UggB4CuXEuXLuUydHBw
uHXrluyI/o+Xl5dJ52iWsgORiW/GqnCUY9G0tLKyysjIkB2OJt2+fZv7Kph0
vnqvnslk09PTOSpjnuELAHRCnfNelZeX8y0ak87R85BADhgVXUREBJeknZ2d
emammDhxoknnUJayA5HJ3d2dCmHq1KmyA/knx44d4wPG0tISw78MRlFRkYuL
CxfmvHnzWlpaZEf0365du8YhxcbGyo4FALQtKiqK6xP1ZBcVFRV8f4aEhIS0
tbXJjkjbKI1cs2YNl6eNjY1KJqfw9vameLy8vGQHItO4cePUdjP2m2++4cn7
zM3NMfbL4N27d080h+fMmdPc3Cw7om+vX7/O8URHR8uOBQC0LSYmhusTlaQW
VVVV3FOOW+7qeQCkdRs3bhTd29LT02WH8y0Ph077WnYgMk2YMEFVN2NPnTrF
CaSZmVlSUpLscAxEWVmZaBT7+/s3NjbKjScnJ4eDwVyxADBIdNXg+kQNvZ5q
amq4mxy32VXy6MdgiDmJLC0tpd9imj59OkVC11a5YcjF01OOHz9ediD/7ezZ
s6amphQP/cQbu7pVUVEhmsa+vr5KzkTWU25uLkdy5MgRiWEAgAE4c+YM1ydX
rlyRG0ltbS33kePWuhoe+hie3bt3cwmbm5vLvdFEu5jCGDVqlMQYpOObsZ6e
nrID+e9xp83MzCiYYcOGnT59WnY4BqiqqooaC3z2TZkypa6uTlYkBQUFHMah
Q4dkxQAAhkHMe3Xp0iWJYVDDnDvIcTtd+uMeA3bgwAGRRkq83cST6bi6usoK
QA2mTZtm0jkrpdwwUlJS6GDgBBLvWehPTU3NpEmT+Oyj9jL9U0oYd+7c4Rj2
798vJQAAMBiJiYlcn9B1RFYMlDHyxdSkc8DAhoYGWZEYiaNHj3K3N1NTU1nj
ewQEBFAAI0aMkLJ2leDJzceMGSMxhsuXL1tYWPDZd+LECYmRGIO6ujq++cwv
lFVWViofQ3FxMQewZ88e5dcOAIYkKSmJ6xNZTzabm5v5SkomT54s8RGPURGv
39LPmJgY5QOYN2+eSecUzMqvWj34gf7IkSNlBZCenm5pacln3+HDh2WFYVSo
jcydgfkWdEVFhcIBlJaW8tp37typ8KoBwMCkpKRwfZKYmKj82ltaWviZJr9Z
IOvhjnGKi4vjdygojVT+Dc3g4GCTziErFV6vqsyePdukczJKKWvPzMy0trbm
s2/fvn1SYjBOjY2N3Hzg18rKysqUXHt5eTmveseOHUquFwAMz6VLl7g+OXv2
rMKrbm1tnTt3Lq/d09OzqqpK4QAgISGB36QgBw8eVHLVCxcuNOkcaEjJlaoN
H//Dhw9XftXZ2dk2Nja4HyVLc3Mzd+fgN8vu3bun2KofPHjA6926datiKwUA
g3TlyhWuTxR+GbOtrW3+/PnigQ5Va0quHYQLFy7w+xRk9+7diq03NDSU1mhh
YaHYGlUoKCjIpHMaSoXXe+vWLTs7O97p27dvV3jtwKgRzQcAcXFxKSoqUma9
1dXVvNJNmzYps0YAMFQZGRlcn5w6dUqxlba3t/NtKH6hoLy8XLFVQ0+pqami
U5xij7fCwsL4pR5lVqdOISEhVAi2trZKrjQ/P5+yVt7dGzduVHLV0A2lkaIm
dHJyun37tgIrraur4zWuX79egdUBgAHLysri+kSxFys6Ojo4f+C3CUpLS5VZ
LzzClStXrKyslLw7sWzZMl6dAutSLeUf6BcWFg4fPpxLfu3atYqtFx6GGtSi
PnR0dMzNzdX3GhsbG3EAAIBOZGdnc30SFRWlwOoogVy+fDmv0dnZubi4WIGV
Ql9cu3ZNdJBT4OISERHB6zLm+dAXL16s5AP9u3fv0knHxb5y5Uo6GZVZLzxa
11rR3t7+xo0bel1dc3MzrysyMlKvKwIAg6fw3KlUa4kHN4r1/4E+ogaF6Can
7xxDHAnGPCHR0qVLFXugX1JS4urqymUeHh6OBFJVaHeIM8LW1jYrK0t/66JW
G6+I2nH6WwsAGAMl505dv369eGSjTM8f6K+bN2+KznJ6zTTWrl3LazHmOYkU
e6BfXl4+atQoXldoaCgSSHXasGED7yNra+v09HT9rYjXQoef/lYBAMZAzJ2q
76FdtmzZIh7WKNDnBwYsPz9fdJmjfENPz5pFg8KYR5VX5oF+RUXF2LFjeUUh
ISHG3HlA/bZt28Z7ytLSUn/zz/LAsGFhYXpaPgAYCTF3ql4HGd6xYwevxc7O
LicnR38rAp0oLCwUHeeCg4NbW1t1vopNmzbx8qurq3W+cK1Q4IF+ZWWlh4cH
r2XevHn62JWgWzt37uT9ZWFhkZycrI9V8OyW1ELUx8IBwHiIuVP1Nzbgnj17
xAOa69ev62ktoFt0YIjuc4GBgS0tLbpd/tatW3nhxjw0qL4f6FN+7uXlxasI
CAjQ+U4EPdm/fz/vNXNzc33MIMbzEy1cuFDnSwYAo6LvuVMPHjzIy7eyssrI
yNDHKkBP6NgYPXo0775Zs2bp9l6ZuDVtzKOD6vWBfm1t7cSJE3n5/v7+xvzu
khYdOXKEZ7Q3NTU9c+aMbhfOr84FBwfrdrEAYGz0OnfqsWPHRN+eK1eu6Hz5
oG90eLi5ufFO9PPz0+HtMvHAzpgHCBUP9HU+U3x9fb23tzcvfPr06U1NTbpd
PiggKiqK00j6GRsbq8MlOzo6ct8GHS4TAIyQmDt127Ztul1ydHQ0V4Dm5uap
qam6XTgoho4QT09PPkimTp2qqztmooeDMY8RKh7oV1ZW6nCxlOpPmzaNl+zj
49PQ0KDDhYOSTp48KdLIEydO6GqxI0aM4O4NulogABinqqoqvtZs3rxZh4s9
deqUSCCTkpJ0uGRQHh0kEyZM4OPE29tbJzfNRI+vO3fuDH5pGiUe6N+/f19X
y2xqavLz8+PFTp482ZhfezcM8fHxZmZmvEMPHTqkk2VyV+dZs2bpZGkAYLRq
a2u5dtqwYYOulkmVHo8dQT/PnTunq8WCRJQ3imejlE9SVjnIBdLVkJdWUFCg
kwi16Ouvv9btA/3m5mZKDMRu0vkjcpDi/Pnz1Bjn3bp3797BL5AHC/X39x/8
ogDAmDU0NHDVpKvp7RITE7nVPGzYsNOnT+tkmaAGdXV1U6dO5aPF09NzkO9T
HzlyhBdlzIOF7t69W4cP9FtbW+fOnSt20ODzfFCPlJQUHpCHUNNjkEvj8UKn
T5+uk9gAwGjpdu5Uqui4vazzTuCgBo2NjeI5qbu7+2BeqT5+/Dgvx5jHC927
dy8XwuDn/WxrawsKChK7xphHTDJUaWlpVlZWvIu3bNkymEXxkKE+Pj66ig0A
jFNraytXSitXrhzkoi5duiRaylFRUToJD9SmqalJPC0dPXr0gB/CRkdH80KM
ecjQAwcOcCEMcurP9vb2hQsX8qLGjBmjw96VoCoZGRk8tCNZv379gJfDo4Z6
e3vrMDYAMEIdHR1cIy1fvnwwy0lPT7e0tORFKTD1NkjU0tISGBjI+9rV1XVg
z2FjY2N5CdeuXdN5hFpx+PBhLoS8vLwBL4RO4bCwMF7OyJEjjXmsJGNAbS4e
3ZGsWrVqYFOf88Ch9FPn4QGAseEXqMPDwwe8hMzMTNE63r9/vw5jA3VqbW0N
Dg7mPe7s7FxYWNjfJcTFxfHXqfWhjwg1QQygeuvWrYEtgVIIav3xQlxcXIx5
oCTjkZOT4+DgwDt92bJlA0gj+f04Ly8vfYQHAEaFezAuWbJkYF/Pzs62sbHh
Cm3Xrl26jQ1Uq62tLTQ0lPf78OHD8/Pz+/X1+Ph4/m5aWpp+AtSAqKgoLoQb
N24MbAmrVq3iJYwYMWLwnSpBK/Ly8uik412/ePHi9vb2fn3dx8eHvujh4aGn
8ADAePAz6EWLFg3gu7du3RIPVrZv367z2EDN6MoVHh7Oe9/BwaFfN9MSEhL4
i8Y8/nxMTAwXQlZW1gC+vm7dOv66o6PjIHtUguYUFhbyUOEkJCSktbW179/1
9fWlb40dO1Z/4QGAkeC7iFQL9feL+fn54pHKxo0b9REbqFxHR8fKlSv5GKDW
RHZ2dh+/eP78ef5WcnKyXiNUs5MnT3IhDGAq+c2bN4vsfTDdKUG77t69y6OF
m3ROXNjS0tLHL86YMYO+MmrUKL2GBwDGwN7enuqToKCgfn2LWsHiYYquxpYE
LaI0kg4APhKoPdLHd2QodeSvUDKp7whVa8CdQsUEN5S3G/PgSFBSUsIDhpM5
c+Y0Nzf35Vs8tALln/oODwAMHqeCgYGBff8KtX/FY5TBDwoEBmDTpk18PFhZ
WV25cuWxn09NTeXPJyQkKBCeOolOoZcvX+77t8TI5NbW1n2/8QuGqry8nMcM
N+mceqaxsfGxXwkICOA+tAqEBwCGzdnZmduwffw8tXzFA5Tw8PCBDS4Bhmf7
9u18VFhaWj62l2NaWhp/mPIoZcJToXPnznEhXLx4sY9fEUNKUq5uzMMiQVcV
FRWenp58YEybNq2+vv7Rn583bx53o1UmPAAwYJwQzpo1qy8fLisrE49OFi9e
jAQSuhK3yMzNzZOSkh7xyatXr/In4+LiFAtPbS5cuMCF8OiyEo4ePSqy9L7c
7AXjUVVVNX78eD48vL29a2trH/FhHpjLzs5OsfAAwFCNHj2a6pMZM2Y89pPU
2hUPTRYsWNDfASXAGBw8eJCPEDMzs0c8p87MzOSPGfOcmCkpKX3vFBoVFcVD
uVJ+bswvs8PD1NTUTJo0iY+oiRMnVldXP+yTPKuRtbW1kuEBgEFyc3Oj+sTX
1/fRH6usrHR3d+cKKigoqF9DSYBROXbsGGc7pqamD7vNmJ2dzcdSdHS0wuGp
R987hZ48eVIkkH28aQlGqK6ujsd+JOPGjaNKu9eP8ciulpaWCocHAIbHw8OD
6hOqeR7xGWrSUo3EVVNAQAASSHi0mJgYznno5zfffNPzAzk5OXw4HT9+XPnw
VKKPnULpf0VOfu7cOcXCAy1qaGiYPn06H1fU6u918nSeHNPMzEz58ADAwHh5
eXEXmod9oLa2ludXJTNnzuzj8BFg5OLi4ijn4TTy2LFj3f43NzeXjyhjnl09
PT39sZ1CExMT6VrPxXjmzBklwwONampqooqaD60xY8b0nEJ92bJl/L9SwgMA
Q8L5If3s9X/r6+t5clVCzVuqnRQOD7QrISGB8x9y4MCBrv9VUFDAfz906JCs
8KS7du3aozuFJicn81SklECePHlS4fBAu6ilzwP4kJEjR3abSD0iIoL/C33a
AWCQOEX08vLq+V+NjY1Tp07l2sbHx6ehoUH58EDTkpKSOAsiu3fvFn+/c+cO
/3H//v0Sw5Pr+vXrj+gUeunSJQsLC/5AVFSU8uGBprW2tgYFBfHx4+zs3HU6
9cjISP47HioBwCBxH2wPD49uf29qavLz8+OqhvLMuro6KeGB1qWmpvKc7HP7
QHawinpEp9D09HQuNCN/3A+D0dbWtnDhQpx3AKA/vr6+dJ1yc3Pr+kdqn/J8
WGTChAk1NTWywgMDcOXKFSsrK7pUzZ49e+rUqbiWsYd1Cr127Zq1tXWvfQAA
+qW9vZ3PLDr1ZsyYgfMOAHSLKha6VI0ePVr8pbW1VfSlGTduXFVVlcTwwDBQ
vkSXqg8//PBnP/sZX7Y+++yzp/7Z3//+d9lhKio/P79np9Ds7GwbG5ueT/8B
BmbWrFn//u///vzzzw8ZMuT999/38vKis++NN97oeuo988wzhYWFsiMFAO3h
+42urq7iL6tXrxZDQzx48EBibGAwSkpKfvnLXz7xxBMih5wyZcro//XJJ5/Q
Ba7XTrkGjK7a3W421tTU2NnZ8R+3b98uNzwwDKampv/yL/9ClbmPjw+dfR98
8AGdfR4eHuLse+WVV37/+9+3tbXJjhQA1K4vfWPKy8vd3NzGjh3b69hiAANA
SdFbb71F1y+RQwre3t7PPvvsF198YfDP1Ppy9vF8NJs2bZIdLBiIv/zlL3xy
EconqbEWEBAgjjf6y3e+851bt27JDhMANEBUHdOnT+/WPcbPz4/rlm87pzUs
KyuTHSyoVEdHR2tra1NTU319fU1NTVVVFR0w1PQoKSm5e/duYWFhfn5+bm5u
Tk5OdnZ2Zmbm1atXDx06RIfWf/3Xf/XMId9///23336bf5e9ZfolTr2eqaP4
47edj7NlRwrq1dbW1tzc3NjYWFdXR2dfZWUlNfZLS0uLi4uLiopu376dl5dH
OeGNGzeysrIyMjLEMUbV+zvvvPPjH/9Y/MXX15eab59//rnsbQIAbeCqY+rU
qS+99NKwYcP4nxMnThw6dOjTTz/94osvfvbZZ7JjNGS9Zl+UrvfMvq5fv37t
2jXKvtLS0lJTU1NSUi5cuHDu3Ln4+Pi4uLiTJ0/GxMRERUUdO3bs8OHDBw4c
2Lt37+7du3fu3Lljx46tW7du2rRp/fr1a9eujYyMjIiIWL58+dKlSxcvXrxw
4cKQkJCgoKC5nd3sZ86cSW2HadOm+fj4TJ48ecKECePGjXN3dx87duyoUaNc
XV1HjBjh6OhoZ2dnbW1taWkpBuoZgF5zSG9v76eeeoriN4Ycks6411577Ykn
nvjRj37ELxkRGxub119/nf5IF/euXUpAt+jU65p9VVdXP3jwoGf2dfPmTcrh
OftKT0+/fPnyxYsXk5KSEhMTExIS+OyLjY2Njo4+fvz4kSNHqHG0f/9+Ovt2
7dr11Vdfbdu2bcuWLRs3bly3bt3q1atXrVq1YsWK8PDwsLCw0NDQBQsWzJ8/
PzAwkNK5WbNm+fv7U9uBamM6C6gSHj9+vKenJ519Y8aMGTlypLOz8/Dhwx0c
HGxtbenss7Cw4OmKBnDekSc6PfPMM7R8cfZR9kg5JIUhe+cAgDZQvUHXqZdf
fpnqE5FD/uY3v6HrFyUSlC08+eSTVIvKDrMX7e3tLS0tPbOve/fuUf3fM/ui
+v9h2dc333zTM/v6+uuvt2/f3jP7WrZsGdX/PbMvqnj7lX2J0baNVq855J/+
9Ke33nqLLu4Gn0NSrjJkyBA66WbMmEEtNbp20y+Uw3/ve9+jQqDfP/74Y8ot
ZYfZi16zr/Ly8n5lX2fOnDl16lTP7GvPnj3U8OmZfa1cuZIaPv3Kvtzc3Hpm
X5SrU8OHp0wyTlxfcQ45evTormcftWh+97vfGfZ5BwA6RHXvU0899emnn3a9
D0lXLq5J6IpGDVWqxjn7Sk5O7pl9nThx4ujRoz2zL67/e2ZfVP9T9hUcHNwz
+5oyZUrP7MvFxcXJyQnZl87RZdTCwoKKlC6sdHmliyxdaumCS5ddKny6BNOF
mC7HdFGmSzNdoGk30c6iSzZduOnyTRdx2pW0Q+myvmLFilWrVtGFni73tNNp
11MCQGnArl276JCgxIDSA0oSKFWghIHSBjp46BDqNYd89dVX6Y/in7LPDz2i
DOrDDz/kzaTjny7otBeowOkXOuzpj7RfqAV348aNS5cu9cy++LZzz+xrx44d
D8u+lixZsmjRom7ZFyWrvr6+PbMvyi6o4dMz+xrYvS/oisqQKjGqyujso2qN
KjdqYFJp036nSo/OPqoAqRqkypAapFQx0uFBVfGcOXPoqKBqk5quVIVSM3bp
0qVUqVLVShUsVbNU2VKDl5q9dAxQJUxVMZ19VC1T5UwNZDpa6JihSpsW9e67
77744ou0o7ueerRSOvb4j7JPDgDQBqqX6MJBlcYrr7wicki6Ujz//POUWP70
pz+l3DIjI0N2pasuIvui+v9h2dekSZO6Zl90saZL9rx58yh57pl9rVmzhur/
ntkX1f+9Zl+USJw/f56SCkotLl++nJ6eTvsoKyuL8o1bt27l5eXdvn27qKio
uLi4tLT0/v37lZWVNTU1dXV1jY2Nzc3NKnnjsmcOSaVELRoqUmPIIb/t0hv5
yy+/pA2nnIF+/+Uvf0kn43/+53/Sqfdv//ZvdGDIPt5VhOooqp0eln15eHj0
PfuivJqy657ZF+XhD8u+Tp8+TWcfNaKpKZ2SkkLNampcX716NTMz8/r16zk5
Obm5ufn5+YWFhXfv3i0pKSkvL6+oqKiqqqKzr76+vqmpqbW1taOjQ+5RR4fW
008/TaXn9r/4IKQifeaZZ7is5EYIAFohrmJdc8jPP/98yJAhb7755ne/+92f
/OQnOswhu2VfTk5OLi4uPbOvKVOmUP3fM/ui+r9f2dfRo0dPnDjRM/tKTk6m
+r9n9sX1v/qzL8PQM4fkOyF0ABhVDklZEJ1uf/nLX/jO//vvv0+XeDrvKKv8
f//v/+kqhxTZl42Njb29fc/sy8vLi5qTPbOvwMDAfmVf+/btO3jwYM/s6+zZ
s4mJiT2zr+zsbK1kX4aBEsUn/hntaO5G8qMf/cgYzjsA0JWeOSTVJ3RF+8c/
/sH3hV599VW6uHTLvqj+f1j2de/evZ7ZV0tLS3t7u+xtBXWZ2weyY9Qv2kBq
UlGu+Oc//5m3lxI8+qe3tzf97ubmRtd3yso4+0pKSnpY9lVQUNAz+6qtrW1o
aED2Bd3gvAMAXRE1xnvvvcc5pLu7O125JkyYwP/18ccf0wVOdpgABuiLL76g
jPHLL78UV+0//vGPP/jBD/jUCwgIeP755yMjI+UGCQAA0KueOeTMmTPpyvXJ
J5/MmjXLzc3te9/7HsY3BtC55ORkaqz9/ve/5z5pqampFRUVjo6OlFXSTzr7
KMMcMmRIeXm57EgBAAB60fNZNhk5cuTQoUPp+vXCCy/QNa6pqUl2mACGxsXF
pVu3NAsLCzr7/vGPf7z22muUSf7oRz+ytLSUHSYAAEDvHtElxtfXF+/oAejP
I86+adOmoWcaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAChpbqfp06fPmDFjbhf0z5kzZ/LvsmMEMExz
/9nUqVMDAgK6/VF2jPol6p85c+Z023BRBcmOEWAg6ND18/PreWB3Pc1lxwgw
WHxIv/TSS8OGDeOjmg77995774knnhgyZMgHH3wwa9Ys2TECGCZxWRkzZsz3
v/99OuleeOGFL774wnhySE9Pz5/85CdPPvnks88++/nnn/Mm+/r6Dh06lP74
ne9856OPPuro6JAdJkD/XL58+ec///nTTz9NZ/Tvfvc7ziR7nua6XencPtDt
GgFcXV1ffvllOqpFDvkf//Efzz//vIuLy8SJE994443f/va3smNUAs47UB4f
XbNnz6ZG3M9+9rPJkycPHz6crjvOzs5Gcuy98847v/rVr6jdamFhQbXQ+PHj
aZM//vjjV1991cfHx93d/bnnntu7d6/sMAH65+9//zsd2NOmTaO8kZpCtra2
vZ7mul3pw+58Tp8+ndZuDPUJKKy+vv6pp5769NNPu96HfP311z/55BP+nf74
4osvyg5TCXwpnzp1atdTj/5CpyTOO9ATPswocaL0iVpt/E+6ylA7zhhyyObm
ZrrUUluVNpMurFQIdG2dOXMmXV7pF958ugRfv35ddqQA/VBbW2tjY+Ph4cHH
8M9//vMPP/yw19Nchyvt9c6nr68vNdOefPLJZ5555rPPPjPs+gQGpq2traWl
pbGxkRLCmpqaqqqqioqK8vLykpKS4uLiO3fu3L59Oy8v7+bNmzdu3MjKysrI
yEhPT09LS0tNTU1KSuIK/JVXXhE5JB2HH3/8Mf9ONTwd9rRk2Vupd7SxdJrT
eS2u3X/4wx+ee+452vx3332XClZ2gKA6HR0dra2tlAjR2VdXV1ddXV1ZWXn/
/v3S0tJ79+4VFRUVFhbm5+fn5ubm5ORkZ2dnZmbS2XflyhWq7S9evHjhwgU+
0qiep6bciBEj+J9vvfXW0KFDjSGH/PZ/s2gTE5M333zzBz/4gb+//4QJE+ik
++tf//raa69R2/ZPf/oT1WnHALSGj+0pU6ZQXvf555/3eprr8FTqeeeTL2pv
v/02XeVNTU0pk6T/0uEajZCo8xsaGqilQHX+gwcPKN2iOp/SrW51PjV+qc6/
evUq1fmXLl1KSUmhjCsxMTEhISE+Pj4uLu7kyZPffPPNiRMn6Gg5fPjwgQMH
9u3bt3v37p07d+7YsWPbtm1btmzZuHHjunXr1qxZs2rVqoiIiGXLloWFhS1e
vHjhwoUhISFBQUGBgYEBAQGzZs2aMWPG9OnTp06d6u3tPWnSJGqzjBs3zt3d
fezYsaNGjXJ1daVjj9rm9vb2dGxYWVmZm5ub6AIfz11zSEtLSzoC6ZinX158
8UWqzykRlb3r9Ivy7V/+8pe0pSKHpHKmQnBycqLyp8Kh/SI7Rs0TjR1Kt3pt
7BQUFHBjh9Ktbo0dOvso4zp37tzZs2dPnz596tSpmJiYqKio48ePHzly5NCh
Q3T27d27l86+r7/+evv27Vu3bt20adP69evXrl0bGRm5cuXK5cuXh4eH09kX
Ghq6YMGC4ODgefPm8a1mylv8/Pyo7vXx8aGzj+pbOvs8PT3d3Nyoyh05cqSz
szMdCQ4ODnZ2dtbW1nReUIWsw7OPvPfeez/84Q9p+ZQy0XFI1xfjySHnzJnz
i1/84rvf/e6Pf/xjqvqorqMSePnll6mcKZOky+5XX32lk9IGUNLczncNqGX0
xhtv8KPknqe5rs6jXu98UmoxZMgQR0dH/uM777yj2zufj0bpFtX5oolNdT41
sanOLysrozr/7t27lG5RnS+a2KLOpyY21fnJycnnz5+nOp/SLarzKd3qVufv
37+f6vxdu3ZR/UB1PqdbPev8JUuWLFq0iOr8+fPnU53P6VbXOn/y5MlU53t5
eVHpUZ0/evRoqoKozqd0q2udb2ZmJvuAUqmeOSSV8G9/+9vvfe97dLT/+c9/
pjZUe3u7YgeeFFQOdDp/8MEHIoekE/Cjjz7i37/88ss333xTyXi4sdPU1MSN
HUq3em3s3Lp1q2tjh9KtXhs7sbGx3Ng5evRor42dzZs3d23srFixghs7lG51
bezQtZ4bO9Sg7trYoXSr18YO1Wnc2KFDS/ZhrlIiUaRi/OlPf/r8888PHTqU
Drx//dd/NZ4cUlQ73//+9z/99FM6lujyamFhwX+nAqGjSPaOAui3CRMm0CH9
9ttvc4eoXk9zfZxN4s4nJUh0KvGjRvLJJ5/86le/ojqfmthU52/YsIHq/NWr
V1O6RXW+aGKLOp+b2DNnzqT4qc7v1sSm85Sa2FTnu7i4UJ1PmSqlW1TnU7qF
Ol+vTE1NqXqkWtHW1payXLraUsZLV17aF3QVpv0ybtw4Ovbo6kxHAuXJ06dP
p5yZKljKn+k6TnuW9i/l1YsXL166dCld6yMiIijrpqs/ZeCUCVA2TgfJ119/
TRnCnj17KFs4ePAg5e3Hjh2jHJ5yCcrnKa+g7IJyDMrze+aQdHhQDPw75d70
X7o9zlWIMjHa2P/6r/8SOeSPf/zjv/71r/w7nSNPPfUU5WDi3nK3xg7tiK6N
HXFvuVtjh3YrN3ZoR/fa2KEDA40d/aEjnCo3quKoqKnAqdidnJxoF4wcOZIq
Q2qB0pFP1SNVklRV0i6jHUe7j3Yi30OgNmxwcDDtYqpmqbKlKpd2PR0AdBjQ
wUCHxKZNm6hyprOPTj1K0amNTOk6tZfp7KO2M5191I4+deoUtanPnj1L7Wvx
LJuOFgqDznT+57vvvkuHojHkkPfv3//444/p1OAtpQscXWGp2OnCJx75/frX
v6YddwtAU+h68cILL7z33ntiiLxeT3PdnlDd7nxyc4xOKP7fP/zhD++8847s
alhRos6n5JbqfEp0qWKhCzqlW1TnU/l0q/MpVaY6n3YZ9ybldIuSalHnU7JN
dT4l3pR+UxJOqXivdf7Ro0epzo+Ojo6NjaU6/8yZM5RuJSYmJiUlpaSkpKam
pqWlpaenX7t27fr16zdu3KADJi8v7/bt20VFRcXFxaWlpeXl5RUVFVVVVTU1
NfX19U1NTS0tLeocoaJnDvn3v//95ZdfpsKkUqW/f/bZZ7JjVEK3HJLaj2KI
FUr5+I1R2SeEorixQ+lWr40dyoT71dihdKtnY4dy8q+++qrXxg6lW90aO3T2
Xbx48fLly1euXMnIyMjMzMzOzqbkPzc3Nz8/v7CwkM6+e/fu0dlHmUllZWV1
dXVdXV1jY2Nzc3Nra6vs46t3IlF86623Pv30U6r2uROFaMQZdg5J6GL34Ycf
zpgxgyr2IUOG/PnPf+bLKyWTVJlTPf/ss89SpS07TIB+oDqHH1tz45TwzcCe
p7lu19vtzidVznTlop/8v5988gm1yB5W4VMCYGZm1rWJLer80aNH0yZQne/l
5UUbQo2+rk1srvOpiT1//nxqYlOdv2TJkp5NbK7zt2/fTnX+rl27KN3av39/
tyY21fnUxKY6n5rYVOcnJydTukV1PqVbVOdnZWWJOr+goIDq/Lt375aUlJSV
lVG6RXU+pVuizm9ra9Nt2cLD9Mwh6agYOnQo1edUe//mN7+hhFx2jErolkPS
pY3fYuP7kFQUlFQ/4ux7WGOH7y33bOzw+Ml9b+xQutVrY4dau/1q7FC61Wtj
p7a2VuWNHYMkEsWRI0e+/vrrTz311EsvvUQH0twuZMeoX3R5+slPfkIbThe7
jz76iG/50kXqzTfffPLJJ59++mmqgnBAgrZQUvTEP6OUstfTXIcrpSyr251P
yu7oJBK39N95550//vGPVOc/ePCAmthU5zc0NHATG6cYDBhl9b3+nbJ6yigU
Dkaibjnk+++/Txcv/p2yxF/84hf8DgjfW+7a2MHZBwNDh1C3t9WoTS0rGLmo
OdNz8IeysjJjGBECjI0+TvOH3fn84IMP3n777UmTJlHKSi2ysWPH6nzVYMxi
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
1T5VklofwvrAgQO8LVZWVpR3yQ5HZygZNphbcAOWm5vLhaChqZYfrbS0dMyY
MbxRM2fObGpqkh3RwNXW1k6YMEFsiwGkxEJoaChtlKWlpexAAEDzDHKch40b
N3LlT/WkhiaS64ZSC7EVWplSuY8M7BbcwOTn53MhHDp0SHYsOnP//n3x8Hf6
9OkNDQ2yIxqIuro67uRj0jl2rqaT4Z7CwsJou8zMzGQHAgCaZ6jjPOzcuZMv
ARYWFikpKbLD6beoqCiO39zc3PAG4ja8W3ADUFhYyIWwf/9+2bHoUmVlpXgE
7OPjQ/mY7Ij6p7GxcerUqRw//UL/lB2RjvEYs8OGDZMdCABoHo/z4OzsLDsQ
3du3b59Iw7Q1FcjJkyephufIDXIU7oKCAsO7Bddfd+/e5UIwvFmnq6urecAH
Mnny5JqaGtkR9VVTU5Ofnx9H7u3trbkEuC8iIiJ4Aw3gHXMAkIvHeRg+fLjs
QPRCPA42MzPTyjAyFCcnkKamptpKffvuzp07BnkLrl9KSkq4EHbt2iU7Ft2r
ra0Vj4PHjx9fVVUlO6LHa25unjlzJsc8YcIE2gTZEemFePGwpaVFdiwAoG08
yYu9vb3sQPQlKiqKUzL6efLkSdnhPAYljZQ6crRaSXoHoLi4mK9ie/bskR2L
NOXl5VwIX331lexY9KK+vn7atGm8jZ6enhUVFbIjepTW1lYxceq4ceOqq6tl
R6Qva9eu5c00vMf0AKCwkJAQk85xY2QHokfi0TD9PHHihOxwHio5Odnc3Fwr
6e5glJaW8lVs586dsmORhnIqLoRt27bJjkVfKEvht/ZMOgd/oLRZdkS96zpl
qru7e2VlpeyI9EiMXGGQT+oBQEmLFi0yMYJxHuLj483MzLjmPHz4sOxwepGa
msoJJImKipIdjn6JW3A7duyQHYs0VVVVXAhbtmyRHYseNTc3z549m7d01KhR
JSUlsiPqrr29fcGCBSLRvX//vuyI9GvTpk28sQZ8rxUAlMFTBFL2IjsQvUtM
TBRJmtreYkhPT6c0nmMzhleVHzx4wBu7detW2bFIU1NTw4WwceNG2bHoV0tL
C/e7NukcAuLu3buyI/o/HR0dixcvFiluWVmZ7Ij0jk463l46DWXHAgDaFh4e
bmI0Y4WlpKRYWFhw/bl7927Z4fyPa9euWVlZcVQHDhyQHY4SqqureXs3bdok
OxZp6uvruRDWrVsnOxa9a21t5W4zZMSIEYWFhbIj+m+UQPJAN8TFxeXevXuy
I1KCmPpKtV0LAEArxBzTVJ3KjkUJaWlp4o6fGp4hZmdn29jYqC2t1be6ujre
5PXr18uORZqmpiYuhNWrV8uORQnt7e3ijt/w4cPz8vJkR/TtypUrRVpbVFQk
OxyFiLFzS0tLZccCANomalGDmQ32sTIyMqytrdWQw9y8edPOzo4jMaq3Sxob
G3mr165dKzsWaeiM40JYtWqV7FgU0vW+n4ODQ05OjsRgxOvJlNCq5L6oMqit
yhteXFwsOxYA0LbVq1dzfWJIE8I+VlZWlq2tLW94ZGSklHuweXl5dBnlGDZv
3qx8ABLRwSYKX3Ys0tBRx4WwYsUK2bEoh7aacmbecGpAXb9+XUoY4r0SOgfz
8/OlxCCLmHzhzp07smMBAG0TjXGNzmw7YDk5Ofb29rzty5YtUziNLCwsHD58
uPF0h+umra2Ntz0iIkJ2LDJxIYSHh8sORGl0zPO2W1tbZ2RkKLz27du3iyT2
5s2bCq9duoMHD/LmFxQUyI4FALRtw4YNXJ8Y6qQMj5CXl+fo6Mibv3jxYsVm
/ioqKhoxYoSxPcfsRmTvsgORicebCgsLkx2IBFu2bOFjwMrKKi0tTbH1ijdK
bGxssrOzFVuveojZu3Jzc2XHAgDatnnzZq5PNDEZmc4VFhaKdG7BggUKdAq9
d++ei4uLrPuf6sHT8Rhn+iTw612hoaGyA5Fj27ZtfCJYWFikpKQosMYDBw6I
+5+ZmZkKrFGFjh8/zoUgtz8qABgAUY2rfCYy/SkqKnJ1deVCmDdvnl7nkC0r
Kxs1ahSva8mSJUabQH5r9OkT43e7qPEiOxBp9u7dy6eDubn5+fPn9boucf+N
jr309HS9rkvNoqOjuRyM8zYsAOgQxgr7tvPeoEjt5syZo6fXi+7fvz9mzBhe
y8KFCxV7dK5OnD5ROcgORCZ+K3/+/PmyA5Hp0KFDfFKYmZnpb474qKgocc/z
0qVLelqLJsTGxnJRGO2dWADQFYwVxiiFHjt2LBeFv79/Y2Ojbpf/4MEDd3d3
Xn5QUFBbW5tul685nD4FBwfLDkQm7o4bGBgoOxDJjh8/zjPam5qa6mOmeFom
L9/c3Dw5OVnny9eWuLg4roiuXr0qOxYA0LY9e/ZwfYKxwioqKjw8PLg0pk2b
Vl9fr6slV1VVjRs3jpccEBBgPENxPgKnT/PmzZMdiEzcF5cOCdmByBcbG8tp
Hv3U7XzxZ86c4SWbmZklJibqcMkaFR8fz3WRkq8yAYBB2r9/P9cnGCvs285k
b/z48VwgU6ZMqaurG/wya2pqJkyYwMucNWuWUY3D+QhInwh3xKWjQnYgqkDJ
Hr9pRSmfrmaNP3funFim/h6Ua0tCQgJXR6mpqbJjAQBtw1hh3VDKN2nSJC6T
iRMnVldXD2ZplIV6e3vz0vz8/JqamnQVp9YhfSLcC9ff3192IGpBKZ+5uTmf
L9S8HeTSkpKSeGmUQOrjEblGnT9/nktYmXfhAcCAYaywnijx8/Hx4WLx8vKq
rKwc2HIaGxvFcqZOnarzPpaahvSJcBfc6dOnyw5ERZKTky0sLPis2bNnz4CX
k5qaKhLI6OhoHUaodVTCXLwXLlyQHQsAaBvGCutVQ0MDXdm5ZNzd3Qcw8FFT
U5NYgre3tw57VxoGpE+EX7Oi9oXsQNTl0qVLPPQT2bZt2wCWcOXKFbGEo0eP
6jxCTaPsmksmISFBdiwAoG1iyAuMFdYNJYH+/v5cOJTwlJWV9f27zc3NM2fO
FA/EjXAOoMfi15d8fHxkByITv2lFTQzZgahOeno6j/5ENmzY0K/vZmRkWFlZ
8XcPHDigpwi1Ky0tjQsHHUQBYJBiYmK4PsFYYT1RKhgQEMDlM2rUqD6+ut7a
2iq+RUnCIHtUGiovLy+kT/yyFbUyZAeiRllZWba2tnwerV69uo8D8l+/fl0k
n7t379Z3kFpE+TmXT1xcnOxYAEDbTp06xfUJNd5lx6JGlBAGBQVxEbm4uBQV
FfX98+7u7gPuS2nwKHFC+jR58mQqhPHjx8sORKVu3LjB44iS5cuXPzaNzMnJ
EZ/fuXOnMkFqzrVr17iIYmNjZccC8P/ZexOoKLMz/7+T6UkmnUyWf+acJKez
Tc5k5mQmk8ksmUlmJpOZOUkmmWO7tbutrW0rICgqgqKIK7jvNu6KuLS4a7sB
iiuouIuCooggIovsZbHD/xmeX79WKCmKt+6tW/et7+fU4RTv+jz3feu9n3e7
F+jN2bNn+Xhy69Yt1bH4KM3NzQsWLOBSeu+991y8wN7S0jJ//nzj9rffdh/p
Dvy6enBwsOpAVMKvXAUFBakOxHfJzc3lpkR7tPeu7qJ3p8ePHw8aNIin3Lp1
qxdj1Izs7GwuJbxqBADwEKOtMD/v/8s1VHNR/cUFRTXaa99hb21tXbx4sXHj
u1vPT/ohrE+BgYGqA1FJeHg4X69WHYhPQ2dtdO7Gvyw6m3ttH0/5+fmGam7Y
sMH7QWpETk4OF9SxY8dUxwIA0Ju0tDQ+nqCtMNeQIq5cuZLLatCgQQ8ePOgw
dvny5Tx2xIgRxcXFquLUhYiICL5aqzoQlUydOpUK4cMPP1QdiK9TWFj4/vvv
8+9r7ty5HXp6orGGZMbFxakKUhfoFJjLSlRD7gAAv+Xy5ct8PKEvqmPxdUgU
165dy8U1YMCArKwsY9SaNWt4+LBhw549e6YwSF2IjIzkC7aqA1EJv/g/cuRI
1YFoQFFRERUU/8pmzpxp9PdEww29dOeZSZCXl8fFdejQIdWxAAD0JiMjg48n
6EnWTTZt2sQl1q9fv9u3b9OQ9evX85ChQ4cWFBSoDlAPoqKi+Jqt6kBUMmPG
DCqE4cOHqw5ED0pLS7lZUWL69On19fUlJSWGWC5duhQC6Q5Pnz7lEvO8JyAA
gJ9z/fp1Pp6cP39edSzasHXrVi60vn37RkdH8/fBgwfTCb7q0LSBmz8aNmyY
6kBUMmvWLD71UB2INrx48YIbZu/R/lI/95jJz0m6eN0GOFJUVMSF5kk3QAAA
0NbeoQMfT86cOaM6Fp34+OOPqdB++tOffvOb3/z3f//3gQMHPnr0SHVQOjFn
zhx+QUl1ICrhZqDo7EN1IDpRWVkZHBz8P//zP9/73vd+8IMf/P73v583b95r
X7QBr6WkpISP+Wj+CADgIZmZmXw8OX36tOpYNCM0NPQb7bz99ts4GneXmJgY
2uvIvVUHopLY2Fh+tlZ1IJrx9OnTv/3bv+Vf389//vOKigrVEelEWVkZH/N3
7NihOhYAgN5kZWXx8SQ5OVl1LDqxf/9+KrSf/exn3/rWt371q1/17Nnz7Nmz
qoPSCW5ys1+/fqoDUQkKwQQ1NTUhISG/+93vfvCDH/zwhz/83//9X/q3qqpK
dVzaQMrNx3xzfZEDAIDB/fv3+Xhy4sQJ1bFow5EjR4znIePi4t555x36Tn/R
74P7LFq0iAtQdSAq4QZF+/TpozoQbbDZbNy5T4/2ztYnTZrE3wMDA9Gkv5tU
V1dzoaEldgCAh6C92e5Css0lRlU/N8x+6tQpQyOPHz+uOkA94Dbbe/XqpToQ
lSxbtowKoWfPnqoD0QO73c5N0xPh4eF17XD7SD3a2xotKytTHaMGkIdziW3a
tEl1LAAAvUF7s90iJSWFdbF3796OrbKfO3eOdIhLEq2uucOKFSu4uFQHohIU
gvvU19dPmTKFi2vixIkvX77k4Q0NDUbbCB988AGa9+8SEm8urvXr16uOBQCg
N0+ePOHjycGDB1XH4uucOXOGBZJ00bk5zfT0dBJLLsy9e/cqiVAjVq9ezWXl
z02yGIWA14pdQ6JoXG8cP358bW2t49jGxkZ+zb9He4ujhYWFquLUAipMLiv0
6QMA8BCjvdl9+/apjsWnuXjxYs+ePfmG9blz5147TUZGRp8+fbg8d+/e7eUI
9YLqLy4oo8MRPwSF4A6kiMaVxuDg4Orqaudpmpqa5s+fz9MMGzYMTf27gE5Y
uKDoFEZ1LAAAvTHam01MTFQdi+9y+fJlvsZIAum6EaSbN2++++67XKTx8fFe
i1A7jM596urqVMeiDBRCl5AcGtcYAwMDKysrO5uypaWF31Hq0d5s++PHj70Z
p0a0trZyKa1YsUJ1LAAAvUF7s11y7do1QyBPnjzZ5fSZmZn9+vXjUt2wYYMX
ItSRjRs3chHZbDbVsSgDheCa5uZmbkKzR/srM12+eU12ZDxiOmjQoJycHO/E
qR18S2Xp0qWqAwEA6A3am3XNrVu3+vbty0V09OhRN+fKzs4eOHAgz/XRRx+h
G19ntmzZwuXz2luTfoJRCDU1Napj8TnoV8MNQPVof1nGzXeuaS7jCYEBAwZk
ZWXJjlNH+JEbKl7VgQAA9AbtzbogMzPTuDHd3XeOcnJyBg8ebNwzgkZ2YNu2
bVw4/tzJiFEILm7R+if0e1m+fDkXzogRI7r7trVxgbdfv370K5YUpL7wjZIF
CxaoDgQAoDdVVVV8sEV7sx3Izs42bknv2bPHxBIeP348dOhQXsLixYv9+QVk
Z3bs2MEl489t+hmF8OLFC9Wx+BAkkGvWrOGSGT58+LNnz0wsJD4+npfQt2/f
mzdvCg9Sa/guSUxMjOpAAAB6U1tby0datDfrSE5OjnEz2pMnRQsKCoYNG8bL
iY2NbWpqEhik1lCpcrGUlJSojkUZu3btQiE4s27dOi4WOgXz5A1rQ9H79Onj
2Jor4Fskc+bMUR0IAEBv7HY7H2bR3qxBbm7uoEGDuFg8f7f62bNnI0aM4KXR
QbuxsVFIkLqTmJjIZVJUVKQ6FmWgEJzZvHkzlwl5Tl5enodL27t3Ly+td+/e
zm26+i18Yjtz5kzVgQAA9AbtzXYgPz9/yJAhXCYbN24Usszi4uIPPviAlzlj
xgw0Bkjs37+fC+Tp06eqY1GGYThoFptJSEjgAhk4cOCjR4+ELPPw4cO8zF69
enXWsqu/wWe1UVFRqgMBAOhNU1MTH2DXrFmjOhb1UFX+3nvvyZDqsrKy0aNH
85IjIyPRHuChQ4e4NJ48eaI6FmUcOHCAC4HOXFTHoh7j1nP//v0fPHggcMnH
jx83erQ/deqUwCVrCp/STps2TXUgAAC9aWlp4eP2ypUrVceimKKiouHDhxul
IfxN6vLy8qCgIF5+eHi40eGvf3LkyBEuitzcXNWxKMO4RIYGsfft28dF0a9f
PxkN8hg93dPfEydOCF++XvD57JQpU1QHAgDQHj60Ll++XHUgKikpKRk5ciTX
YkuXLpXUFE9VVVVISAivZeLEiR26/fUrjh07xuXgzw1BHz16lAtB1H1bTTFc
um/fvrdv35a0lrNnz3Lb2gSdwkhaixYEBgZSIUyePFl1IAAA7eFOWJYsWaI6
EGWUlZV9+OGHXLksWLBAaiM8NTU1oaGhvK7x48f7bQvbJ0+e5EK4f/++6liU
ceLECS4Esbdu9eL48eNcCH369Llx44bUdaWlpfHhjti3b5/UdfkywcHBfBqr
OhAAgPZwPywLFy5UHYgaKioqAgICuFqZN29ec3Oz7DXabLawsDBe49ixY/2z
femUlBQugXv37qmORRnJyclcCH7bnQqVAN8HIbXzTvM7tBbupYVITEz0whp9
EDp75XNY1YEAALSnf//+PdpbL1QdiAKqqqqMZxRnzZrltfYb7Xb7lClTeL1k
sH7YxHRqaiqnf+fOHdWxKOPUqVNcCP7Zl8qZM2dYIHv16pWenu619d64ccPo
wHTbtm1eW6/vMHHiRMo9JCREdSAAAO3hthDnzp2rOhBvU1NTYzydGBUV5eWW
G+vr66dPn85r//DDD/2tlelz585x7v7ch4gh0vIeAvRZLly4wE8n0t/z5897
ee105mL0QiWqCS+N4PsggYGBqgMBAGgP98c3e/Zs1YF4FZvNNmHCBK5EIiMj
lbTZSCudOXMmxzBy5Ei/amiaFIITv3btmupYlGGItOznAH2Ny5cv9+rVq0f7
W9KnT59WEkNWVtaAAQO4/OPi4vyqR/uIiAjKevTo0aoDAQBoDzdoEx0drToQ
72G3240nEsPDwxW21tjU1DR37lyOhDaE/7Q1nZ6ezllfuXJFdSzKuHjxIhfC
1atXVcfiPShZfrGFBDIpKUlhJDk5OUaPVDKa8/JZ6KyZUv7ggw9UBwIA0B5/
67OAjJFPw4lJkyYpb6exubl5wYIFHM97773nJ21ukzpyyt58EM7XuHTpEhfC
5cuXVcfiJW7evGk8i3j06FHV4fxfx6ZGv1RLly6V2iaD70BHe8qXjvyqAwEA
aM+oUaP4fq7qQLxBQ0PDtGnTuMoYP368j7TQSDUX1V8c1eDBg/2h2e1r165x
vhcuXFAdizIyMjL8SqQzMzPfffddTvnQoUOqw/l/5OfnG71T0dmc116sUwg/
QjNs2DDVgQAAtGfMmDF0PImIiFAdiHQaGxujo6O5sggODq6pqVEd0StaW1tX
rVrFsQ0cONDyDQbevHmTk/XnLoz9SqSzsrKM11j27NmjOpw/oLCw8P333+fY
5s6da3mNnD17NmU6ZMgQ1YEAALSH+ywICwtTHYhcqF7gI2eP9hcSq6qqVEfU
EdLItWvXcoT9+/e3dsOJt2/f5kxTU1NVx6IM/xHpnJwc4wWWjz/+WHU4r+H5
8+fcizQxc+ZMJS/ZeY158+bxuarqQAAA2uMPfRY0NzfHxsZyBTF69Ojy8nLV
EXXK5s2bOc5+/fpZuMmXu3fvcpopKSmqY1GGn4h0bm6u8epKfHy86nA6pbS0
lDuSJqZNm6bwVTvZzJ8/n48wqgMBAGiP5fssaG1tXbRoEVcNH3zwQVlZmeqI
uoDqWY62b9++169fVx2OFLKzsznHkydPqo5FGf4g0k+ePDFeWvH9lhjp7NLo
tSoiIsJut6uOSAp8PKTDi+pAAADaw30WBAcHqw5ECiSQy5cv50phxIgRxcXF
qiNyi927d3PMffr0seRLuzk5OZzgsWPHVMeiDMuLdGFhofG6SlxcnOpw3KKy
spJvzfATPjabTXVE4uE3+Hr16qU6EACA9li4zwISyNWrV3N1MHz4cL0a8T5w
4ABH3rt374sXL6oORzC5ubmc3ZEjR1THogxrizT93Ljt2R66tb5YU1PDd2eI
0NBQn3r5TggrVqzg7FQHAgDQHm4sccyYMaoDEc+6dev4UDl06NCCggLV4XQb
8ivuULhnz55nzpxRHY5Injx5wpvGd9p48T4WFumSkpKRI0dydkuXLtVIIBmb
zTZp0iSOPyQkxAdfwfME48zaT9rDBADIg/ssGDVqlOpABGO8nDJ48OC8vDzV
4Zjk5MmTrJH0Nzk5WXU4wnj69Clvnf3796uORRm0W1pSpMvKyrjVWWLhwoWa
iordbjc6IwgMDPTlF/G6S1xcHOfV2NioOhYAgN5Yss+ChIQEPkgOHDhQ9ya7
T58+3bNnT9ZIy9z0LCoq4g3ka00FepOCggIuhAMHDqiORRjkWtzkLBETE9Pc
3Kw6IvPU1dUZXRKMHj26tLRUdURiWL9+PSdl4XfPAQDegZvdHj58uOpAhLFj
xw4+Qg4YMMAajXWfP3++V69eVrpmVVJSwun4ZmuB3uHZs2dcCHv37lUdixiq
qqqCgoI4qdmzZ1ugse6Ghgbu1aVHe6sOz58/Vx2RADZu3MgZWfKNIQCAN+GW
t4cOHao6EDFQdcyHx379+mVlZakORxiXLl3q3bu3Za7dlZWVcS4k/KpjUQYJ
CRfC7t27VccigJqampCQEM4oKirKMvdJyYTnzp3Leb3//vuFhYWqI/KULVu2
cDrWe13ImVluoDpGAMzgI/s2Hx4HDRrkhXXJ5tChQ3xs7Nu37507d1SHI5ir
V69SXta4fFdRUcGJJCQkqI5FGaWlpVwIO3fuVB2Lp9hsttDQUE4nMjLSYv28
kEZyu9w92ruZzs/PVx2RR2zbto1zoZ+h6lik41yrTp06debMmXBIoDvO+/ak
SZO8v29zBy79+/f3wrqkcuzYMT4w9unT5+bNm6rDkQLl9e6773KaW7duVR2O
eaqrqzmLLVu2qI5FGeXl5dYQabvdzk2EEeHh4ZZ8yq6lpWXJkiWc45AhQ7R+
ytp42sf3O1zwHMf6dPz48T/84Q//6I/+6Mtf/vKvf/1rOCTQmg4COWjQoDfe
eGPKlCledsiFCxf20L/PguTkZH5/uXfv3hkZGarDkUhmZma/fv24CtiwYYPq
cExis9k4Bd/vu0QeVVVVXAi+3ANgl5AxGu8v01nwy5cvVUcki9bW1pUrV3Km
dLjOyclRHZFJPv74Y86ipKREdSzScaxP/+Ef/uE73/kOnebQWcBnPvOZcePG
wSGBvhg7dnR09G9+85s333xTiUPyyTWplxfWJYnU1FQWyF69eqWnp6sORzrZ
2dkDBw7kWmDNmjXaNb7X1i4eHP/69etVx6KMmpoaLoTNmzerjsUkDQ0NxpvL
48ePt/w7GvRbMxrGGTBggKZPXCcmJnIKenW7YA7H+vRb3/rWv/zLv9CX6dOn
//Ef/zHVenBIoC/Gjk178ltvvfXLX/5SiUNyV4DkYF5YlwwuXLjATd/Q3/Pn
z6sOx0s8fPhw8ODBXBHQFtROI8k9OHhdusCTwcuXL7W+GNvY2DhjxgxOISQk
xB9e0GCM95r79eun43PX+/bt4/ifPn2qOhbpONanVNV+4Qtf+Od//ufvf//7
X/nKVyZPnszDnzx5MgIA3TB27LCwMDqXDwwMVOKQxt0ZL6xLOJcuXeJGb8iB
U1NTVYfjVfLy8oYOHcrbbtGiRXo1xEfRcuSrV69WHYsy6uvruRDWrVunOpZu
09TUxE06EEFBQRbryaVLjNdS+vbte+PGDdXhdI+DBw9y8OROqmORjmN9+rvf
/e7NN998++2333rrre9973tU8/LwR48e9QBAN2b9Iaoccs2aNRyPdo25Xb16
lZu7sVgfLu5TUFBgdEkcGxur1xbksFesWKE6EGXQ9uJC+Oijj1TH0j3oFIDf
xevR3k2qlfpwcZ+dO3dyCfTp00evZ7CPHDnCkWv9ZpCbGJXp9OnTSSB///vf
0/eoqKg/+7M/4/vaRFFRURQAuuEjDmk83qNXcxw3b940GrqxTO8tJnj27NmI
ESO4HGbPnq1Ro3z8BMLSpUtVB6KMlpYW3nCrVq1SHUs3oLAXLVrEkY8aNcof
3u3tDOOmMJ3MpqWlqQ7HXYwmLPR9Lch9jJqUqgyqYY33aP7xH//x+9//vtfq
WQCE05lDOo71QhhGv1d2u90LqxNCZmam0cSNNfpt8YTi4uIPPviAS2PGjBm6
nAv06dOnR/tdeNWBqIS32vLly1UH4i6tra3Lli3jsOnkxR9e7HXN4cOHuTR6
9ep17tw51eG4xcmTJznm+/fvq45FOkZNShXcF77whX/6p3+KiooaM2bMF7/4
RdpkcEigLz7ikJs2beLjSW1trRdW5zlZWVlG4zaW6STOQ8rKyoxOiiMjI7Vo
oI834oIFC1QHohJ+mleXi7EkkKtWreLdbPjw4f7wVq87nDhxgtuFoL+nTp1S
HU7XpKSk8Ea8d++e6lik41jJjhw58oc//OGbb775pS996Re/+IVxN1B1jACY
4bUOOXXqVC/fy966dSsfT7R4Kj4nJ2fAgAEcsO59tYilvLzc6Ko4PDzc95vp
4+aJYmJiVAeiEn4eQ5eLsWvXruUdbOjQof7wSq/7kDoaGklKqTqcLkhNTeXt
qONL5d1llhMRERHR0dFermcBEI7zvu2MF8JISEjg44nv93uVm5s7aNAgjnbb
tm2qw/E56CzA6LB44sSJPn5heciQIRTnnDlzVAeiEr4YO3/+fNWBdI1xw2Lw
4MH+8D5vdzl37hxfVSYOHz6sOhxXUKgcp1X78wIAeA1d+r2iastoEZGqM9Xh
+Cg1NTUTJkzgUho/fnx1dbXqiDpl2LBhFOTMmTNVB6ISXS7GGk3Z0EmcP7zM
a460tDRuKcLHH7O5cOECB3nt2jXVsQAA9EaLfq+ePn1qtIW4du1a1eH4NDab
zei8eOzYsT57eZlfJ4+KilIdiEq0uBhrnGYOGDDAH97k9YSMjAx+WcyXH7ZJ
T0/nCPVqkggA4IP4fr9XFJjRCuKqVau065PF+9TV1U2dOpVLLCAg4MWLF6oj
eg38Lvm0adNUB6IS378Yu3fvXt6R+vXrp2nXfl7mxo0bRrNjvtkT+pUrVzi8
S5cuqY4FAKA3Pt7vVUlJidH+4bJlyyCQblJfXx8VFcXl9uGHH/rgRebRo0dT
bEZDBP7J+++/78sXYw8dOsS7EElRZmam6nC04c6dO0bbET7YkeW1a9c4tosX
L6qOBQCgN77c71VZWdmoUaM4vIULF7a0tKiOSCcaGhpmzZrFpTdy5Ehfu84c
GBhIgU2ePFl1ICrx5YuxRkvUffr0wcsX3SUrK8toQSIuLs6nTn5pa3JgujRo
CQDwWXy236vy8nKjzcOYmBi9+oP2EZqamubNm8dlOHz4cJ+61BwcHNyj/f1x
1YGoxGcvxiYnJ3NjNb1797569arqcLQkJyfHaEdi5cqVvqORt2/f5qhSU1NV
xwIA0Bvf7PeqqqrKaO1w9uzZevUE7VOQey9cuJBLcujQoXl5eaoj+n+MHz++
R/vL46oDUUlAQIAPXowltWCB7NWrFx6Z8wQ6MefXpoglS5b4yJ2Uu3fvckgp
KSmqYwEA6M2JEyf4eOI7/V7V1NQY7RzOmDFDoz6gfROquYz+6QYPHvzo0SPV
Ef0fEydOpHiCg4NVB6KSsWPH+trF2AsXLnBX5vSXvqsOR3vy8/P5zake7Q2B
+sLpcHZ2Nsdz8uRJ1bEAAPQmOTmZjyc+8tKlzWYLDQ3lkKZNm6ZL788+Tmtr
6+rVq7lUBw4c6AvnC9wAUWBgoOpAVDJu3DgqBNrhVQfy/0hPT+eGst955x3c
6BRFYWEhvzxFzJ07V/lJcU5ODgdz7NgxtZEAAHTn9OnTfDzxhfcuX758OWnS
JI4nPDxci36fdYE0ct26dVy2/fv3V95VbkREBEUyevRotWGohRuEDwkJUR3I
/5GRkcFNZJNA0qml6nAsxfPnz/n9KSI6OlrtqXFubi5HcuTIEYVhAAAswJkz
Z/h4cuvWLbWRkDGSN3IwYWFhdrtdbTyWZPPmzVzC/fr1u337tsJIIiMjKQyq
WBXGoBy+GBsUFKQ6kP97V9doHBuXp2RQWlrKr1DxHRaFJ8h5eXkcxqFDh1TF
AACwBufPn+fjyfXr1xWGQSfmLBV8a89msykMxtoYPaT37dtXYWdn3HzliBEj
VAXgC/BJU0BAgNow7ty5YzSLDa+QR3l5OTdpRURERKg6TS4oKOAY9u/fryQA
AIBlSEtL4+OJwn6vGhsbZ8yYwWGEhITU1NSoisRPMDon6t279+XLl5XEMHPm
TApg2LBhStbuI3B3Qh9++KHCGLKysowGsX25l2drUFVVZbwwOGnSJCUny0VF
RRzAnj17vL92AICVIIXg44kql2hqapo9ezbHEBQURMdYJWH4GwcOHDA0Usnr
t3PmzKG1DxkyxPur9h2mTZvWo70FeFUBPHjwwGgK22f7d7YYdI5svDY4fvx4
758yl5SUYIsDAISQkZHBx5O0tDTvr725uTkmJoYDGDNmTHl5ufdj8Fs++eQT
bgawZ8+e3n8Jl7f7wIEDvbxen4Ivvw8fPlzJ2nNzc6n8+de3bds2JTH4Jzab
jR+F7dHevFVlZaU3115WVsar3rFjhzfXCwCwHtevX+fjifcvRrW0tBjNX48a
NYqObF4OACQlJbFGev9V3AULFvCrPd5cqa/BnVEOHTrU+6vOy8sbPHgw//o2
bdrk/QD8HLvdzk0T8AOx3jx9rqio4PUmJCR4baUAAEty69YtPp6cPXvWm+tt
bW1dunQpr3rEiBElJSXeXDswSE1N5TalSSO9+ULuokWL+L0er63RB5k7d26P
9obfvbzep0+fkrjyr2/t2rVeXjtg6urq+GGGHu2NXJWWlnpnvdXV1bzSrVu3
emeNAACrkpmZyceT06dPe22lJJCrVq3i9Q4fPryoqMhrqwbOXLhwgVuWJg4e
POidlfIZBK3XO6vzTWJjY71/Q59+bvSj4829evVq3+nH2Q9paGjgl8t6tLdz
9fz5cy+s1Gaz4fozAEAI9+7d4+OJN29lxsXF8Urfe++9p0+fem29oDMuXbrE
7Uv38NbbmitWrODVeWFdPov3b+iXlJSMGDGCS37ZsmUQSOU0NTXx5Wji/fff
LywslL3Guro6Xt369etlrwsAYG3u37/Px5MTJ054Z40bN27kNQ4ZMuTJkyfe
WSnokmvXrhmNBO7cuVP26oy+F1taWmSvy2fhG/p9+vTxzurKysqM3lJo1f5c
8j4FaSSfTfBpdX5+vtTVNTQ08LroXF7qigAAlsfLfafGx8fz6gYNGpSbm+uF
NQL3uXXr1rvvvuudZ6WMa9HKuw9WCN/Q79mzpxfWVV5ebvSTEhsb29zc7IWV
AjchnzeeD6eTa6nHRtr0xpMM8tYCAPAHvNl36o4dO3hdAwYMIHeVvTpggszM
zP79+3vhVhctnNfiz72ie+2GflVVldFDyuzZs5uammSvEXSX1tbWlStXGqfY
Uo+QvBba/eStAgDgDzx58oSPJ7Jfpti7dy+vqF+/fllZWVLXBTzh/v37RrOB
a9askfTInPFIgz/3a2nc0Jd6VbCmpsboGyU6OtqfL/z6OPRbM67P04m2vOMk
N8WwdOlSScsHAPgJT58+5UOW1L5TDx06xGt59913MzMz5a0ICOHhw4dG44HL
ly+XoZFbtmzh5VdXVwtfuC4YwtDQ0CBpFaTo48eP57VMmzZN3oqAKDZt2mSc
bt++fVvGKvr06cPPxMpYOADAf/BC36nHjh3jVfTt2/fmzZuS1gLEkpeXZzQh
SHWN8Atl27Zt44VXVFSIXbJGyL6h//Lly0mTJvEqIiIi/PmxAb1ISEgwjpk3
btwQvnzuIX3BggXClwwA8Ctk951q9ITSu3fvq1evylgFkERBQYHRkGBsbKzY
h+iMh2P9uX8iqTf0yRjDw8N5+WFhYXa7XfgqgDzogMzbrk+fPleuXBG7cH5Y
JSYmRuxiAQD+htS+U1NTU1kge/XqdenSJeHLB7IpKioymhOcPXu2wEfpjCrS
n7soMm7o19TUiF1yQ0NDZGQkLzw0NNSfHzrVl/379/MWpBPwtLQ0gUvmJ1Xm
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
TBuaNjdtdNr027dv37VrFx2KaZegHYN2D8e97te//jWtl7/TEZXqAtoB4JAA
ADchbSM3oIPG17/+dcMh6fz9rbfeokPZX/7lX5JDFhcXqz7K+i7u2xdVzc72
RZU4Hf+d7YuP/6+1L1IFcnUy9tOnT589e5ZEIi0tjaSC1OL69eu3bt0i2SDl
IOd/+PDh48eP8/Pznz59WlRUVFJSQkJSUVFRXV1ts9nq6uoaGhqamppU7Xsd
HJLOFz7zmc9QSVIVScP/5E/+hJ/FtTCOtTkp2Ze//GXaSTo4pNEqAugA/fRc
29fYsWP5jWM6oDnaF5UqnbQ62xed3tJJrgv7+uSTT+jcJykpiU6ZSd1J4Okk
mmT+ypUrdFpNJ9ck+Xfv3s3OzqaT7kePHuXl5RUUFBQWFj5//ry0tLS8vLyq
qqqmpoZ/fXRuruQxV8e97je/+Q3tdVRE5Kjf/e53f/zjH+ty9RsA4AsYBxPD
IUlvqFr/2c9+Rt/ZIUk8ZFQBPXv2dLavkSNHUgXqbF90dkzHf2f7ouN/Z/a1
c+dOZ/s6efJkSkqKs33duHGDjv/O9kXH/87sq7m5WfXW05tZTveyf/e73331
q18lkySBpB3D8nWZkTjV4JQy+c/06dM7OCTtz8J/eh3sa8iQIcOGDXO2L+dr
X2xfsbGxndnXli1bnO3r8OHDR48edbavS5cuZWRkONtXbm5uZ/b18uVLti/0
7GwaR4ek07Sf/OQnn/vc52iv++Y3v0kbHQ4JAHAfZ4ekKubNN9/s378/1Sxv
v/32j370I9Itw774+N8t+3rx4gXsC7hJa2vr06dP/WQPMX59f/7nf/6d73yH
H9Kg2vy3v/0t+RuPIq3iy87dsq9nz54521d9fX1TUxPsC3SA9o3i4mLVUQAA
9MPZIf/zP//z//sUksnPf/7zQ4cOVR0mABbE+PV9+9vf5l/c1772NXLIL3/5
y3379sUVIQAAAL6Ms0M6wveyVccIgDWZ5YTzvWzVMQIAAACvx7VD/tVf/RUc
EgBJODtkVFQUOeTo0aPhkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAADcp6WlRXUIAAAAAABAA8gbk5KSFi9ePGHChMDAwOjo
6ISEhOrqamOCW7duzW7n4cOH9O/KlSvp+6ZNm9xZeGxsLE28a9cuWdGLJi8v
7/Hjx25O3NDQcOHCBdlrEUK3tlqXeD9+HTG9ewAAAAC+T1VV1YIFC8Y4ERoa
WlhYyNNQPcgDSSbp34iICPo+b948d5YfFBREE5PASMxBEDabLT4+nqJNTU11
Z3oqjalTp06cOFHqWkTRra3mAlXxa4e53QMAAADQhfXr17MfhoWF7d69m/SA
aj0esmLFCp6mg0MmJCSsWbNm79697ixfI4e8e/cup+mmHc2fP58m7q4kdHct
ohDlkKri1w5zuwcAAACgBTk5OewDU6ZMqaqq4oEVFRXjxo3j4Y8ePWpzcsib
N29eunQpMzPTWE5zczONOnr06JEjR2iZ9K8xytEhW1tbr127dqmd58+fdwim
sbExIyODlpCYmPjJJ584Lr+0tJTnomnu379PY2ldDx484LFXrlyhUdevXzem
r66u5unz8/M7rMVms1E6Bw8eJAdOSUkpKyvj4fRlz549nOamTZtoXs6C4kxO
TqaJDxw4QNZUWVnJ01MhREZG0sTBwcGOK3r58iX9u2/fPpqLiqLD2jtbC1Ff
X3/v3r3Dhw9TalSYjmXoTvwGubm5J0+e3L9/Py28pqbGGO7skK5DLS4uPnfu
HK0lPT3dyNpF/F3Oa9BZpvSFtxrNXlhYSFnQNLS5Oeu0tDQKlbY1fefpadPw
9A0NDbS3UJlQgTjvVy4KlvYZmv3x48e081+8eJECprI1lu+6PF3vk53tHgAA
AIA1oGqXfeD06dOOw6kGpNrf8BPX97JfvHgRExPjeB98/Pjxz54947GODkka
xhNERUU5Pm/Z1v5MJl+3cSQhIYHHnj17locsX77ccQKqtWns3Llz+d/y8nKe
/sSJEzyExMBxLVTvh4aGdlgLJ0VTdhhOinXnzp0OAydNmsQ+MHXqVMfhu3fv
bmt/SrDD8M2bN5NjGAG8di00nDSGCs1x+Jw5c4qKijpsLxfxt7Ur+s6dOx1H
hYWFsYM5bzXXoZKM8YYz2LZtm4v4HelsXsZFpiRvPGTmzJmBgYGOZTt9+nTH
6evq6mh6UjsesmjRImPs2LFjyTPdWR1B5cOr4y8MFRR7r+vydL1Pvnb3AAAA
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
VpafTdfxm4vTd35lpoFDAgBEAYd0c6wMRNVf5kpDHp7U2qK2pjzExt/dUpKH
ubzMbWX52XQdv7k4fedXZho4JABAFHBIN8fKQFT9Za405OFJrS1qa8pDbPzd
LSV5mMvL3FaWn03X8ZuL03d+ZaaBQwIARAGHdHOsDETVX+ZKQx6e1NqitqY8
xMbf3VKSh7m8zG1l+dl0Hb+5OH3nV2YaOCQAQBRwSDfHykBU/WWuNOThSa0t
amvKQ2z83S0leZjLy9xWlp9N1/Gbi9N3fmWmgUMCAEQBh3RzrAxE1V/mSkMe
ntTaoramPMTG391Skoe5vMxtZfnZdB2/uTh951dmGjgkAEAUcEg3x8pAVP1l
rjTk4UmtLWprykNs/N0tJXmYy8vcVpafTdfxm4vTd35lpoFDAgBEAYd0c6wM
RNVf5kpDHp7U2qK2pjzExt/dUpKHubzMbWX52XQdv7k4fedXZho4JABAFBo5
pHdAXsjLP7NDXnrlZRo4JABAFHBIhbUA8tIrL2tnh7z0yss0cEgAgCg0ckj3
76Z1djx3fZxXVbt1d7jru3K+cJfNnTjdn8vc1pSH2Pi7W0ryMJeXua0sP5uu
4zcXp+/8ykwDhwQAiAIO6eZYGYiqv8yVhjw8qbVFbU15iI2/u6UkD3N5mdvK
8rPpOn5zcfrOr8w0cEgArERVVdW9e/cKCgqamprkrcVut5eXlzsPh0O6OVYG
ouovc6UhD09qbVFbUx5i4+9uKcnDXF7mtrL8bLqO31ycvvMrMw0cEgBr0NjY
uGHDhjGfMnHixOzsbBpOMrlp06YnT550NuOFCxdOnDjh/ori4+ODgoJoFTEx
MdXV1Y6j4JBujpWBqPrLXGnIw5NaW9TWlIfY+LtbSvIwl5e5rSw/m67jNxen
7/zKTAOHBMAaXLt2jbwuPT3dbrcXFhYuWrQoLCyspaWltraWhufm5nY249Kl
SxMTE91cCy0/JCTkzp07tMDp06cnJCQ4joVDujlWBqLqL3OlIQ9Pam1RW1Me
YuPvbinJw1xe5ray/Gy6jt9cnL7zKzMNHBIAa3D8+PGxY8fabDb+Ny8vj4yu
urp68+bN5JCklGR9FRUVZH2xsbHz5s07ePBgU1MTOeGkSZMiIyNTUlJoLpLP
9evXz507d+PGjcXFxc5rWbt27YYNG/g7zRIaGuo4Fg7p5lgZiKq/zJWGPDyp
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
NTIyYm7fuEVDarrQkGu88+m/trDV2XarvULfX+UwjIze9e/0VTJHbS61d9n8
NNuvX22dO32X4xANCShraGhISkryvo8x6W/p6eknTpxYXl42t2/coiE1XWjI
NTRkJPPGqkloyHDWSUMCaGpq6ujoiP6+HzU1NdXd3T04OLi0tKTxYTeYmZmR
J9q8nYbUdKEh19CQkcwbqyahIcNZJw0JIELj4+MvXrx4/vz5s2fPnjx5cuvW
Lb/fr/A4gUCgrKxs9ee7MzMze3p6givfY1leXr7+uy43aG1tvX37dpjPsri4
WFJSkpiYKE9x7NixDd+6SUNqutCQa2jISOaNVZPQkOGsk4YEIB9E169ff/ny
5du3b/Pz83Nzc7u6usLcV7px1z+lp6er/UyNPKns3t7eLgk6NDQkgZeVlbW8
vCyPJttfv3691Y7Hjx+/du1amM8itbl79+6RkZGxsTHJVO8XpK+iITVdaMg1
NGQk88aqSWjIcNZJQwJoampKTU2VGjx79qwEZGVlZXJy8uLiYjj7SnQVFRX1
9fUlJiZKlV29evXo0aNqv2O8oaFBnnd2dtb7Y39/vzz49PR0RUWF9zlDycjJ
yclLly4dOXKksLCwtrZ2aWlJmnPPnj15eXnNzc2yl8TnuXPnDh06dP78+dHR
0c3P4v3sj1yRRR44cEDutmEchZWroiFtvNCQYT0vDRmf7xoNuQENCURI0lF6
LBAISEk2NjbKx1RKSkqYv+mxpKSkvr5eruzevVtKcnl5OS0tbXx8XGEZIyMj
GRkZEoQSsZ2dnaufzHz48KE0pKxwYmIiPz9f6rGtre3atWuyUW6Sde7fv//k
yZO9vb0+n0+evbi4uKWlRe6WlZW11VfVnz59+u2338qY3pfLV9GQmi405Jov
o8jEYfppTsdcds2ljIYEIlRaWvr9998/efJEqkzyb3R0NCEhIcyvR1+9elWa
bW5uTv4rmTc7O5ucnDw0NKS2EsnIy5cv5+bmykoSExO973Jc/Vr2wsLCnTt3
5D7yUT84OJiZmVlXVxdc97VsqVnZS0aQZch/ZS+pzY8+kewof8VJM2+4g4Tl
/U1aW1snDJic/H+xziFTl0Dg/8R8DYYu09M1O32jo3nWNnGgfprTMZddcymT
M0VJSYnaCQuAePz4sff7eaQD5QNKyuro0aNh7js2NpaWllZVVfXzzz/Lg6Sk
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
W7u0tCTNuWfPnry8vObmZtlL4vPcuXOHDh06f/786OjoR5/ozz//TE9PP3Hi
hNUNGR3MxVyf5nTMZddcymhIwA0jIyMZGRkShJWVlZ2dnTMzM972hw8fSkNK
MU5MTOTn50s9trW1Xbt2TTbKTZKa+/fvP3nyZG9vr8/nS0tLKy4ubmlpkbtJ
Ivr9/g3Psry8LDlaXl7+n//8h4aMq7MAc9k1l9vTMZddcymjIQFnSEZevnw5
NzdX+jAxMdH7LsfVr2UvLCzcuXNH7iMf9YODg5mZmXV1dcF1X8uur6+XvcbH
x2dnZ+W/spfU5oanaGho+Oyzz+bm5j7akF9//XXJJqWlpf3xxPv7Ofyvpm31
93nov+e9W6M/V/jr3GrecF6N6M+l9tXDnd4/mnOtn07X+kO/SvE/l9q7HP25
1Na501cjmnMpkzPL6dOnN48GwC4+n+/9+/fe9bGxsYsXL0oE9vX1rf9+yPb2
9oKCgqSkpNTUVMnFmzdvBtc1ZGVl5a5/unHjxvqnkP5MSEiQuz169OjChQtp
aWlyJRAIrN7Bos9Dhn8W2+l5IZxbTdB1/lJ7NcyJ5Kyt6900R+/6d/oqmaM2
l9q7bH6a7devts74+ShTxuchATcUFxefOXNm9Y+SdtJ7Dx48WG3I4eFhuXL1
6tU3b94sLS1lZ2fX1tYG1zVkdXV1RkaG3+9fXPH8+fOJiYn1T/Hq1at9f9uz
Z488vlyZmppavQMNGeatJug6f6m9GuZEctbW9W6ao3f9O32VzFGbS+1dNj/N
9utXW2f8fJQpoyEBN9y7d08Ssaqqqq+vT4pRck4ab2xsTGpQtre0tPT398uV
x48fy5Y7d+7IdYlG2dH7ivPk5GRPT49srKmpkSxsamqS3UP8NLft3w8Z/llM
7fwVb2ftrbaHPhvGw9ktkrO2rnfTHL3r3+mrZI7aXGrvsvlptl+/2jrj56NM
GQ0JOKOxsXHv3r3el6Hz8vKePn3qbT969KhsuXv3bkVFRXJyslw/fPiwbDxx
4oTc2tzcLFuKioq8R0hJSZE/5uTkSGeGeC4aMvTf8/F21t5qe+izYTyc3SI5
a+t6N83Ru/6dvkrmqM2l9i6bn2b79autM34+ypTRkIBjZlZs2Dg7O7u8vCxX
5ufnN98qG1e/rVHuNjk5qfbUNGSYt5qg6/yl9mqYE8lZW9e7aY7e9e/0VTJH
bS61d9n8NNuvX22d8fNRpoyGBKALDRnmrSboOn+pvRrmRHLW1vVumqN3/Tt9
lcxRm0vtXTY/zfbrV1tn/HyUKaMhAehCQ4Z5qwm6zl9qr4Y5kZy1db2b5uhd
/05fJXPU5lJ7l81Ps/361dYZPx9lymhIALpY1JDRwVzM9WlOx1x2zaWMhgSg
Cw0Zw7MAc9k1l9vTMZddcymjIQHoYlFDmtsezq0mRGf98TNX6Fv1vhrmcDSG
3h7JXia4fTQqoCEB6EJDhnmrCZy1TWw3jaMx9PZI9jLB7aNRAQ0JQBcaMsxb
TeCsbWK7aRyNobdHspcJbh+NCmhIALrQkGHeagJnbRPbTeNoDL09kr1McPto
VEBDAtCFhgzzVhM4a5vYbhpHY+jtkexlgttHowIaEoAuNGSYt5rAWdvEdtM4
GkNvj2QvE9w+GhXQkAB0sagho4O5mOvTnI657JpLGQ0JQBcaMoZnAeayay63
p2Muu+ZSRkMC0MWKhlTT398f6yUYMTw8vLCwEOtVGOHqWxZ0d7TR0VG/3x/r
VRjh6ltGQwLQhYa0Dg1pI1dHoyGtQ0MC0IWGtA4NaSNXR6MhrUNDAtCFhrQO
DWkjV0ejIa1DQwLQhYa0Dg1pI1dHoyGtQ0MC0IWGtA4NaSNXR6MhrUNDAtCF
hrQODWkjV0ejIa1DQwLQhYa0Dg1pI1dHoyGtQ0MC0IWGtA4NaSNXR6MhrUND
AtCFhrQODWkjV0ejIa1DQwLQhYa0Dg1pI1dHoyGtQ0MC0IWGtA4NaSNXR6Mh
rUNDAtCFhrQODWkjV0ejIa1DQwLQhYa0Dg1pI1dHoyGtQ0MC0IWGtA4NaSNX
R6MhrUNDAtCFhrQODWkjV0ejIa1DQwLQhYa0Dg1pI1dHoyGtQ0MC0IWGtA4N
aSNXR6MhrUNDAtCFhrQODWkjV0ejIa1DQwLQhYa0Dg1pI1dHoyGtQ0MC0IWG
tA4NaSNXR6MhrUNDAtCFhrQODWkjV0ejIa1DQwLQhYa0Dg1pI1dHoyGtQ0MC
0IWGtA4NaSNXR6MhrUNDAtCFhrQODWkjV0ejIa1DQwLQhYa0Dg1pI1dHoyGt
Q0MC0IWGtA4NaSNXR6MhrUNDAtCFhrQODWkjV0ejIa1DQwLQhYa0Dg1pI1dH
oyGtQ0MC0IWGtA4NaSNXR6MhrUNDAtCFhrQODWkjV0ejIa1DQwLQhYa0Dg1p
I1dHoyGtQ0MC0IWGtA4NaSNXR6MhrUNDAtCFhrQODWkjV0ejIa1DQwLQhYa0
Dg1pI1dHoyGtQ0MC0IWGtA4NaSNXR6MhrUNDAtDFiob8MoqYi7k+zemYy665
lNGQAHShIWN4FmAuu+ZyezrmsmsuZTQkAF0sash/bRJ6+1aPE/pZTM4R7jOG
3r55XrVXw5xw1hn+Xmrvpjl617/TV8kctbnU3mXz02y/frV1xs9HmTIaEoAu
NGSYt5qg6/yl9mqYE8lZW9e7aY7e9e/0VTJHbS61d9n8NNuvX22d8fNRpoyG
BKALDRnmrSboOn+pvRrmRHLW1vVumqN3/Tt9lcxRm0vtXTY/zfbrV1tn/HyU
KaMhAehCQ4Z5qwm6zl9qr4Y5kZy1db2b5uhd/05fJXPU5lJ7l81Ps/361dYZ
Px9lymhIALrQkGHeaoKu85faq2FOJGdtXe+mOXrXv9NXyRy1udTeZfPTbL9+
tXXGz0eZMhoSgC40ZJi3mqDr/KX2apgTyVlb17tpjt717/RVMkdtLrV32fw0
269fbZ3x81GmjIYEoItFDRkdzMVcn+Z0zGXXXMpoSAC60JAxPAswl11zuT0d
c9k1lzIaEoAuFjWkue3h3GpCdNYfP3OFvlXvq2EOR2Po7ZHsZYLbR6MCGhKA
LjRkmLeawFnbxHbTOBpDb49kLxPcPhoV0JAAdKEhw7zVBM7aJrabxtEYensk
e5ng9tGogIYEoAsNGeatJnDWNrHdNI7G0Nsj2csEt49GBTQk4JKpqanu7u7B
wcGlpSVDTxFYZ8Oz0JBh3moCZ20T203jaAy9PZK9THD7aFRAQwJukKIrKyvb
9bfMzMyenh7ZLplXXl4+MDCw1Y6tra23b98O81k+fPiQlpa2+iyHDx9efysN
GeatJnDWNrHdNI7G0Nsj2csEt49GBTQk4Iauri6Juvb2dr/fPzQ0dOzYsays
rOXl5ZmZGdn++vXrrXY8fvz4tWvXwnyW0dFRebTOzs5XK/7444/1t9KQYd5q
AmdtE9tN42gMvT2SvUxw+2hUQEMCbmhoaEhOTp6dnfX+2N/fL0U3PT1dUVEh
1SdJKRk5OTl56dKlI0eOFBYW1tbWLi0tSXPu2bMnLy+vublZ9pL4PHfu3KFD
h86fPy+5uPlZpFRTU1Pl7w2fz7f5VhoyzFtN4KxtYrtpHI2ht0eylwluH40K
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
ABA+VxtSzmjl5eUpKSm///57rNeiUyAQOH369O7du6UhnfnMz9DQUHJy8rNn
z+bm5hxryGvXrsn/yMhB2NPTU1BQIMXlRms9f/7cq+L29vZbt25JJ7v6r4ED
ALbiZEPOz89/88036enpLtXIelKSOTk5Fy5ciPVC9CgsLMzPz3/06NGDBw+k
TGpra71PkjtGBpTpJJhjvRANXr16JbPI++X98fjx46WlpbFdEgAgytxrSL/f
/9VXX+3du/fNmzexXotOPp/v3Llzq597PHXqlIwZ2yXpcujQoX0r8vLypEyy
s7Pb2tpivSg96urqVmd5+PBhUlLS3NxcbJekxeTk5PrvyC0pKTl58mRslwQA
iDL3GvLSpUtydmttbX3xtw8fPsR6URrIFAcPHpSTtZy+u7q6EhMT3fv1Pu59
LfvmzZu7d+/u7+8fGBgoKCiQty/WK9Lm66+/lokmJiaePn2anJzc1NQU6xUB
AKLq+vXrxcXFsV6FNsvLyxJXu/7Jjc/8iL6+Pgl+b6iKigrHfhd3cOVzyDKa
Mz94ImZnZ8vKylJTU2WuwsJCl36f//j4uEzk/bbS7777Tj70Yr0iAAAQytTU
1MLCQqxXgR1YXFx8//59rFdhxPT0NEcjAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgKmpqe7u7sHBwaWlpeg8
47t372ZmZuJhJQAAANipQCBQVla262+ZmZk9PT1ReN6CgoJbt25pXMnQ0NDp
06d1LxMAAAAf0dXVJcHW3t7u9/slw44dO5aVlbW8vGz6eTc3ZIQruX//fk5O
joGVAgAAYKOGhobk5OTZ2Vnvj/39/RcuXJieng6ufGbv3Llzhw4dOn/+/Ojo
qHeHwcFBucPhw4evX78+MTEhW2Tfn3/+ubi4+Jtvvvnll1+8u5WVlbW2tpaU
lBw5cqSuru6vv/6SjfKwVVVVsu+VK1f27du3oSG3WsnVq1fv3bvnbXz37t2/
//1ved7//ve/J06cKCwsrKiokI2yvAMHDsjuZ86c+ejKvWU3NTV99dVXZ8+e
HR4erqmpkbX98MMPH/2SOgAAAEIYGRnJyMjYs2dPZWVlZ2fnalD5fL60tDQp
w5aWFkm1rKwsv98v8SZXjh49KlFXUFAg0Sj3/O6777Kzs+vr672vRD969Eg2
yr5yXTqzurparkhbLi8vHzt2LC8v7/bt2xJysnFDQ261Eom9vXv3ep+QlByV
R5CbkpKSLl269PDhw4MHD8qjSXnKMmT3jo6Oj678+fPn8oxyZ8nI3NzcxMRE
uUNzc7PsIv+N6isOAADgBIm3y5cvS1lJZUlcSePJRmlCuT4+Pi55Jv+Vm9ra
2u7fv5+QkODV3dDQUG1t7dTUlOTc6qcfJeekMIMrDXn+/Hlv4/79+2/evDk6
OioP8uuvv8qW9+/fb27IrVYiG+WP3d3dcn3fvn2SkX/++adsuXr16tu3b2Vt
vb29wXVfy/7oyr2GHBgYkDvIYuT65OSkXK+oqPj222+j8CIDAAC4xOfzSdF5
18fGxi5evCh91dfXV1lZueufbty4UVVV9eWXX67f3fsmRu9r38GVzxlmZ2cH
VxqytbXV2yhhKdufPHki95Tm9Dbm5+dvaMitViJ/lC6V2JPrskWyULb89NNP
qamp8se8vDzviVYb8qMr9xpyfn5e7tDS0vLZZ595T3TlyhV+EgcAAGCniouL
ve8h9AQCgYSEhAcPHlRXV2dkZPj9/sUV0mATExMSYxKH3jc3SvJJGfb29kqb
vXz50tv922+/LSoqCq40ZEdHh7fRa8g3b97IPb0ftZZHSE9P39CQW61Erksl
ygP+z//8j9xH/iirevHihdzh2bNnUoBemq425EdX7jWk9/uCpCFzc3O9Z6Eh
AQAAFNy7d0/iqqqqqq+v7/Xr1xcuXJByGxsbk9iT7dJ+kmdNTU2yUW71ilHa
b3JyUu75xRdfzM/PZ2VlnTx5cnh4+PHjx6mpqbJL8GMNKd2YnZ196tSp0dHR
+vr6zV/L3molwZVo9D7r2NbWJn+U55KbJAXn5ubkoeT69PR0e3u73GdwcPCj
K6chAQAA9GpsbNy7d6/3Zd+8vLynT5+ubk9JSZGNOTk5d+7c8Tbevn07OTlZ
Nh46dMj7pOLLly8/++wz2SJ3lvDzPkvp/XiLt0tRUVFtbW1w5Uet9+3bJ/eU
7JSebGhoCHMlory8XBLR+2K0kP6Up5C7yUYJxeBKWKanp8sWn8+3eeXd3d2r
DSmxKg/uPY40ZElJiYlXFQAA4FMws2LDxuXlZe9nT9aTSlz9tsZVUm6BQCCc
J5J7hv6tjx9dycmTJysrKzcs4927d+sfShLR7/eHWDkAAAA+EU+fPv3666+T
kpL++OOPWK8FAAAAdhgcHLx8+fLz589jvRAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAIAYm5qa6u7uHhwc9P7FQO0CgcDIyIj3TyVu6927d5v/LRsA
AADED6m7srKyXX/LzMz0/qVsicny8vKBgYGtdhwaGjp9+nSYz+L9k9YTExPh
3LmgoODWrVthPjIAAACir6urS+quvb3d7/dLFh47diwrK2t5eXlmZka2v379
eqsd79+/n5OTE+az0JAAAAAuaWhoSE5Onp2d9f7Y399/4cKF6enpiooKqT5J
SsnIxcVFibrjx48fPHiwrKxsfHx8dHT0wIEDsuOZM2eCK5+TPHfu3KFDh86f
Py83bX6W9Q0pj9Da2lpSUnLkyJG6ujrvC9zyjFVVVYcPH75y5cq+ffu8htz8
sPX19bKwQCAg12/fvl1eXi65G62XCgAAAP9rZGQkIyNjz549lZWVnZ2dq9+I
+PDhQ6m+2tpaCb+bN2+mpqY2r8jOzj516pQ053fffSc7dnR0+Hy+tLS04uLi
lpaWwsLCrKwsv9+/4VnWN6TcWa5fv369urparvzyyy/SgRKreXl5koVfffWV
bJSG/OjDSlVKuNbU1Dx79sz79Gm0Xy8AAACskIy8fPlybm6uVFliYqKEnGxc
/7Xsrq6u3377Ta78+eefZ8+ePXDgQHDd17Lr6+tlr/HxcQlL+a/s1dbWtuEp
NjTk+fPnve379++XQB0dHZVbf/31V9ny/v17ryG3eljpWNm+e/fuioqKaL1C
AAAA+AefzyfZ5l0fGxu7ePGi1FpfX9/6hhwaGjp16lRGRoZskQL84osvgusa
srKyctc/3bhxY8OzbGjI1tZWb/tXX31VU1Pz5MkTuXVqasrbmJ+fLw251cN+
+PBBnjf8764EAACAdsXFxd73NHoCgUBCQsKDBw/WN+SXX3555MiRFy9ezM7O
Xr16df/+/cF1DVldXS156ff7F1c8f/58c91taMiOjg5vu9eQb968kVu9nwf/
66+/0tPTpSG3elhZm6xw9+7dq5/MBAAAQJTdu3dP+q2qqqqvr0+K8cKFC1Jo
Y2Njkm2yvaWlZX5+Pjc3t7y8XPLy1atXmZmZ8kfZsb29PTU1dXBwUNpP7ikp
ODU11dTUJLtv/mnu0A0p3eh9m+Xo6Gh9fb33teyPPqzcQZ509fshf/nllyi/
XAAAAPA0Njbu3bvX+3pxXl7e06dPve1Hjx6VLXfv3pVc9O6we/duiUnJuZmZ
meHh4fT0dNno8/nkEVJSUuR6Tk7OnTt3Nj+F15CTk5Ny3ftJHG97UVFRbW1t
cOXnwfft2yf3ycrKkp5saGjwFrbhYaU5Dxw44P1ctuSuPNT09HRUXiQAAAB8
xMyKDRtnZ2e9X54j/5UC/PDhw/pbl5aWVn8E27tDhGuQHN3wu3q0PCwAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABr9
f74/3kw=
    "], {{0, 739.}, {438., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{995.6499999999996, Automatic},
  ImageSizeRaw->{438., 739.},
  PlotRange->{{0, 438.}, {0, 739.}}]], "Output",
 CellChangeTimes->{3.958974556671848*^9, 3.959042742996311*^9, 
  3.9590427858496323`*^9, 3.95905047876329*^9, 3.959051290975751*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"557bfbc1-c42a-4838-b643-a1022d422ece"]
}, Open  ]],

Cell["\<\
The image displays an interactive \[OpenCurlyDoubleQuote]Spekkens Toy Model \
State Explorer\[CloseCurlyDoubleQuote] with two main sections. The top \
section presents a graph where nodes are small $4 \\times 4$ binary patterns \
(composite states). These nodes are interconnected, forming clusters or \
components. The title indicates \[OpenCurlyDoubleQuote]Connected Component: X \
states,\[CloseCurlyDoubleQuote] suggesting that part of a connected component \
is being highlighted. Below this graph, a grid of the same $4 \\times 4$ \
binary patterns is shown, arranged like a chessboard. This grid serves as a \
clickable map to select specific states. A yellow square in the grid \
highlights the currently selected component. Controls at the top allow \
selecting the \[OpenCurlyDoubleQuote]Permutation Set\[CloseCurlyDoubleQuote] \
(Restricted or Full) and a \[OpenCurlyDoubleQuote]Reset Selection\
\[CloseCurlyDoubleQuote] button.

The accompanying Mathematica code sets up this sophisticated interactive \
environment. It defines the fundamental `SpekkensStates` and both \
`SpekkensPermutations` (restricted) and `AllPermutations` (full). The \
`permuteMatrix` function applies a given permutation to a $4 \\times 4$ \
matrix representing a composite state. The `buildGraph` function is crucial; \
it takes a set of permutations and constructs a graph where nodes are all \
possible composite states (Kronecker product of `SpekkensStates` pairs), and \
edges connect states that can be transformed into one another by the given \
permutations.

The `DynamicModule` then orchestrates the interactive display. Users can \
choose the `currentPermSet` via a `RadioButtonBar`, which dynamically \
rebuilds the `graph` using `buildGraph`. The top graph visually represents \
this `graph`, with `VertexShape` showing the $4 \\times 4$ state patterns. \
`GraphHighlight` is used to highlight the `selectedComp` (a connected \
component) in yellow within this graph. The bottom grid displays all 36 \
composite states, each acting as an `EventHandler`. Clicking on a state in \
this grid updates `selectedComp` to the entire connected component containing \
the clicked state, thereby highlighting it in both the grid and the top \
graph. This dual view allows for exploration of both the overall structure of \
the state space and the details of individual connected components under \
different permutation rules.\
\>", "Text",
 CellChangeTimes->{{3.959050133546049*^9, 3.959050153204269*^9}, {
  3.95905018468279*^9, 3.9590501917338047`*^9}, {3.9590502261453867`*^9, 
  3.959050230590099*^9}, {3.959050275392338*^9, 3.9590502803162327`*^9}, {
  3.959050317387114*^9, 
  3.959050497465487*^9}},ExpressionUUID->"80f69acb-6455-4388-a109-\
7ab18d63ad1c"]
}, Open  ]]
},
WindowSize->{1072, 863},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrintingStartingPageNumber->1,
PageHeaders->{{
   Cell[
    TextData[{
      StyleBox[
       CounterBox["Page"], "PageNumber"], "   ", "|", " ", 
      ValueBox["FileName"]}], "Header", 
    CellMargins -> {{0, Inherited}, {Inherited, Inherited}}], None, None}, {
  None, None, 
   Cell[
    TextData[{
      ValueBox["FileName"], " ", "|", "   ", 
      StyleBox[
       CounterBox["Page"], "PageNumber"]}], "Header", 
    CellMargins -> {{Inherited, 0}, {Inherited, Inherited}}]}},
PageFooters->{{None, None, None}, {None, None, None}},
PageHeaderLines->{False, False},
PageFooterLines->{False, False},
PrintingOptions->{"FacingPages"->True,
"FirstPageFace"->Right,
"FirstPageFooter"->True,
"FirstPageHeader"->False},
PrivateNotebookOptions->{"CloudPublishPath"->"/Published/wolfram cloud for \
sahas4.nb"},
Magnification:>0.5 Inherited,
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9beda9cc-05ad-4568-92a6-ad2e7233b201"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 372, 5, 61, "Title",ExpressionUUID->"bc593cea-61af-482c-9ea4-5153e19163cd"],
Cell[955, 29, 1162, 18, 52, "Text",ExpressionUUID->"ceb3649d-ee0d-4ab7-bf28-b20085e91f33"],
Cell[2120, 49, 1911, 29, 52, "Text",ExpressionUUID->"35eb7c81-6d54-472b-a72f-16660ebe4ce7"],
Cell[CellGroupData[{
Cell[4056, 82, 10522, 279, 281, "Input",ExpressionUUID->"17b64f77-f8b3-4d97-9344-3bf912b2dca5"],
Cell[14581, 363, 66517, 1289, 552, "Output",ExpressionUUID->"550c6a26-9100-4049-ac29-ac3b27a9fbb3"]
}, Open  ]],
Cell[81113, 1655, 1817, 27, 52, "Text",ExpressionUUID->"6689337d-d8a8-4dfc-8990-c74a7b1ec610"],
Cell[82933, 1684, 1776, 26, 52, "Text",ExpressionUUID->"c9ca19f0-75d0-47b0-a879-469f1dfbbb2f"],
Cell[CellGroupData[{
Cell[84734, 1714, 10170, 265, 281, "Input",ExpressionUUID->"0709220e-040c-4adc-b972-bd0868aa10d9"],
Cell[94907, 1981, 39701, 656, 544, "Output",ExpressionUUID->"eeea33e8-ee9a-42be-b16c-93eec8a076d5"]
}, Open  ]],
Cell[134623, 2640, 1318, 20, 49, "Item",ExpressionUUID->"8928fcb1-77cc-447f-806f-17e15898cfe4"],
Cell[135944, 2662, 2984, 46, 141, "Text",ExpressionUUID->"fa0654cd-3819-4723-a226-8c4b155d6db4"],
Cell[CellGroupData[{
Cell[138953, 2712, 13220, 347, 401, "Input",ExpressionUUID->"a0c27a70-a5e8-4514-8fdb-c4e9cea43773"],
Cell[152176, 3061, 34238, 567, 382, "Output",ExpressionUUID->"27e48f64-65f3-48cd-aff5-af953b9fe67d"]
}, Open  ]],
Cell[186429, 3631, 2166, 32, 52, "Text",ExpressionUUID->"487c6717-1694-4baf-8dfa-720a003d2f2a"],
Cell[188598, 3665, 2087, 32, 74, "Text",ExpressionUUID->"d844b26a-a6f6-4892-b965-623708a1de1f"],
Cell[CellGroupData[{
Cell[190710, 3701, 8724, 237, 233, "Input",ExpressionUUID->"78ecf03d-c3d3-40df-9aa6-e634f7b792b8"],
Cell[199437, 3940, 159474, 3229, 565, "Output",ExpressionUUID->"9c894745-92ed-485e-a233-b2ac98b4e2cb"]
}, Open  ]],
Cell[358926, 7172, 1335, 21, 49, "Item",ExpressionUUID->"dac99133-b46f-416a-85d0-2e2aaf366310"],
Cell[360264, 7195, 1353, 20, 49, "Item",ExpressionUUID->"e6647d1c-183a-418d-ba75-018835d7a9f9"],
Cell[361620, 7217, 1984, 30, 59, "Text",ExpressionUUID->"213111fa-e374-4d87-bd5b-97dfbf08bd95"],
Cell[CellGroupData[{
Cell[363629, 7251, 8181, 209, 221, "Input",ExpressionUUID->"10d0409c-06e8-4d2d-baf8-0b46b5b2e85b"],
Cell[371813, 7462, 31185, 589, 698, "Output",ExpressionUUID->"df76421a-ddfc-4bf2-838f-814b7755d2d0"]
}, Open  ]],
Cell[403013, 8054, 2039, 30, 52, "Text",ExpressionUUID->"010c1199-ea49-4e2c-abf2-a6444c67c2b0"],
Cell[405055, 8086, 1310, 20, 49, "Item",ExpressionUUID->"0572b33d-1d89-45da-982a-31ce9a824b73"],
Cell[CellGroupData[{
Cell[406390, 8110, 1586, 23, 62, "Item",ExpressionUUID->"f11abd4a-7f9e-4051-9093-576930db967c"],
Cell[CellGroupData[{
Cell[408001, 8137, 5897, 167, 173, "Input",ExpressionUUID->"86d3f621-dca0-495c-a5e6-9fdb885d8286"],
Cell[413901, 8306, 150794, 3421, 461, "Output",ExpressionUUID->"3079c260-a027-4652-b102-415e01332b63"]
}, Open  ]]
}, Open  ]],
Cell[564722, 11731, 1915, 30, 59, "Text",ExpressionUUID->"3c2f3f5d-d66b-4309-bf4a-d852671fa582"],
Cell[566640, 11763, 2415, 35, 82, "Text",ExpressionUUID->"f5c9c3b6-52ab-4952-8860-76fccf952f12"],
Cell[CellGroupData[{
Cell[569080, 11802, 7396, 190, 197, "Input",ExpressionUUID->"1cd94c48-d82e-4961-a6f9-9ee2e774798b"],
Cell[576479, 11994, 35667, 590, 526, "Output",ExpressionUUID->"cde8b8dc-4f37-43cf-a121-45e3aac56ebc"]
}, Open  ]],
Cell[612161, 12587, 1803, 27, 52, "Text",ExpressionUUID->"f5e5975f-7a7e-4451-9580-1fc89aea8299"],
Cell[613967, 12616, 2213, 34, 74, "Text",ExpressionUUID->"99d1c900-d6a0-4745-9caa-c9452e73b4e7"],
Cell[CellGroupData[{
Cell[616205, 12654, 8523, 211, 209, "Input",ExpressionUUID->"4bebaf74-18fd-48d4-aa2c-16127e06210a"],
Cell[624731, 12867, 27201, 584, 1086, "Output",ExpressionUUID->"1fa206f1-8f8e-426e-8f01-49b6d0a01e23"]
}, Open  ]],
Cell[651947, 13454, 1758, 26, 37, "Text",ExpressionUUID->"1c6acb8c-f8cf-433b-ad3a-a4ba60e12fa1"],
Cell[653708, 13482, 1071, 17, 35, "Item",ExpressionUUID->"dd7e2d33-2e73-49c1-8fc9-5eb2a95a1219"],
Cell[654782, 13501, 1568, 23, 37, "Text",ExpressionUUID->"cb422e14-2da7-4ce9-bba9-bae44b327893"],
Cell[656353, 13526, 1821, 28, 59, "Text",ExpressionUUID->"c859e325-5c63-4e3a-959a-870001e89bb7"],
Cell[658177, 13556, 1943, 30, 59, "Text",ExpressionUUID->"36d05318-7291-4750-b61d-da81372fb6ca"],
Cell[660123, 13588, 1919, 29, 59, "Text",ExpressionUUID->"d283ec4b-d9f5-4127-adc2-2b56a0c87138"],
Cell[662045, 13619, 1748, 26, 52, "Text",ExpressionUUID->"b9508157-46ff-4db7-9e4a-68f5f05a93ef"],
Cell[663796, 13647, 1764, 27, 52, "Text",ExpressionUUID->"f89629e8-cb19-40f2-8f1b-f352e5c59f7e"],
Cell[CellGroupData[{
Cell[665585, 13678, 10033, 248, 257, "Input",ExpressionUUID->"7be3b2b9-d33a-496b-abc6-499ccdf0e4b9"],
Cell[675621, 13928, 5293, 119, 198, "Output",ExpressionUUID->"251e125e-7a11-48f3-8558-9fa5fa3914b1"]
}, Open  ]],
Cell[680929, 14050, 2084, 32, 59, "Text",ExpressionUUID->"f9befbea-e249-4caa-9032-68fd1553aac6"],
Cell[683016, 14084, 2845, 43, 134, "Text",ExpressionUUID->"b19a4c81-4dfc-4728-aeb9-fba37b22bcab"],
Cell[CellGroupData[{
Cell[685886, 14131, 10088, 261, 257, "Input",ExpressionUUID->"719851e8-cc8d-4d24-8b03-7c84c610dc3e"],
Cell[695977, 14394, 59480, 981, 1029, "Output",ExpressionUUID->"b978071c-9f06-49d7-897f-4c7b7a168df3"]
}, Open  ]],
Cell[755472, 15378, 2153, 32, 52, "Text",ExpressionUUID->"f1675630-6b3e-4074-a752-22749db5c7e1"],
Cell[757628, 15412, 1654, 26, 44, "Text",ExpressionUUID->"fcc00817-cef8-471b-b362-6f96a6aa93ed"],
Cell[759285, 15440, 1771, 28, 59, "Text",ExpressionUUID->"8e5adee2-e11a-45fa-a964-bff6475c5219"],
Cell[761059, 15470, 1940, 30, 59, "Text",ExpressionUUID->"96f941a8-2415-49b2-a7ac-cb3cc91dd59e"],
Cell[CellGroupData[{
Cell[763024, 15504, 12309, 333, 281, "Input",ExpressionUUID->"479e60b3-9dbc-4540-b398-0f1b518d5d9d"],
Cell[775336, 15839, 485638, 7967, 1304, "Output",ExpressionUUID->"dfa6f5d4-e0ce-4092-8218-a88ead5b0b68"]
}, Open  ]],
Cell[1260989, 23809, 2129, 31, 52, "Text",ExpressionUUID->"a89ff442-bdc1-4d8b-947d-9c29832a3ce6"],
Cell[1263121, 23842, 2076, 31, 74, "Text",ExpressionUUID->"c4cf9688-5e0b-429c-bf0c-5c77674c4a8a"],
Cell[1265200, 23875, 1902, 28, 67, "Text",ExpressionUUID->"83300d3e-cd9e-46ed-8f96-0758a702b63e"],
Cell[CellGroupData[{
Cell[1267127, 23907, 8694, 240, 221, "Input",ExpressionUUID->"cc01a001-fd44-49c0-8665-ec619bd5e2a0"],
Cell[1275824, 24149, 12112, 300, 110, "Output",ExpressionUUID->"5e0aec67-9f3e-45a9-bce8-2e4da343b85a"]
}, Open  ]],
Cell[1287951, 24452, 1204, 19, 35, "Item",ExpressionUUID->"5595afa6-f971-444e-b921-7fae8cc56307"],
Cell[CellGroupData[{
Cell[1289180, 24475, 2205, 34, 103, "Item",ExpressionUUID->"a2c45367-9313-438e-a779-e59796c5f795"],
Cell[CellGroupData[{
Cell[1291410, 24513, 9673, 240, 221, "Input",ExpressionUUID->"ff2b6b94-bcc3-4eee-bfda-900e3b0d1cfa"],
Cell[1301086, 24755, 5000, 126, 532, "Output",ExpressionUUID->"524b874e-2f07-4010-adbe-b7a723373957"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1306135, 24887, 2989, 44, 130, "Item",ExpressionUUID->"1919d043-88a0-40a6-bbd5-0447f8749562"],
Cell[CellGroupData[{
Cell[1309149, 24935, 9611, 250, 257, "Input",ExpressionUUID->"c10d2c10-aac5-4f64-a26e-393e41ab1efc"],
Cell[1318763, 25187, 78711, 1295, 2206, "Output",ExpressionUUID->"3e70249b-0d2e-4a32-93ff-6e2dde3bb26d"]
}, Open  ]]
}, Open  ]],
Cell[1397501, 26486, 2019, 30, 52, "Text",ExpressionUUID->"43f9b7cd-b06c-4abb-9daf-1084821c73f9"],
Cell[1399523, 26518, 1804, 27, 52, "Text",ExpressionUUID->"1a9b3080-b307-4965-976d-e00dea4ec404"],
Cell[1401330, 26547, 2065, 30, 67, "Text",ExpressionUUID->"aa198cac-891d-48d3-88fc-5cb11a9f4988"],
Cell[CellGroupData[{
Cell[1403420, 26581, 7038, 189, 185, "Input",ExpressionUUID->"ad961355-19cc-4784-89d0-ca7871f171d0"],
Cell[1410461, 26772, 92940, 2053, 304, "Output",ExpressionUUID->"d5801bf0-c79f-4fe4-ab39-ce8d2f5b444e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1503438, 28830, 2205, 34, 103, "Item",ExpressionUUID->"6595a69a-dc77-4b83-a030-0a141a72c34f"],
Cell[CellGroupData[{
Cell[1505668, 28868, 8233, 201, 233, "Input",ExpressionUUID->"9099dd31-32a7-4e00-a7bd-ed60eb3ff199"],
Cell[1513904, 29071, 14082, 286, 312, "Output",ExpressionUUID->"e2b483db-2cd6-4941-aa81-e07bd1fbd9b6"]
}, Open  ]]
}, Open  ]],
Cell[1528013, 29361, 1525, 23, 49, "Item",ExpressionUUID->"782d3234-0a3c-4095-ad07-d6ff9fccbead"],
Cell[1529541, 29386, 2359, 34, 82, "Text",ExpressionUUID->"c5b459d1-eb92-4819-b533-07a7a8d2673e"],
Cell[CellGroupData[{
Cell[1531925, 29424, 11940, 327, 257, "Input",ExpressionUUID->"1bda8cca-f887-4926-a944-76b03d4df527"],
Cell[1543868, 29753, 14756, 360, 213, "Output",ExpressionUUID->"d8773bd5-c1de-4a1d-9b76-2130afd3de75"]
}, Open  ]],
Cell[1558639, 30116, 2317, 35, 97, "Text",ExpressionUUID->"1724c93a-59d2-410b-978f-d2cc442c6680"],
Cell[1560959, 30153, 1860, 28, 52, "Text",ExpressionUUID->"51dcc412-da8f-4953-b47e-7d97780f2615"],
Cell[CellGroupData[{
Cell[1562844, 30185, 8377, 212, 257, "Input",ExpressionUUID->"d5fd14c0-9fbb-4a22-96dd-e6baaf33f95c"],
Cell[1571224, 30399, 18519, 464, 228, "Output",ExpressionUUID->"87fb9ab9-945b-4694-9804-dcba25a54f4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1589780, 30868, 2570, 39, 117, "Item",ExpressionUUID->"cd27639c-6567-44cb-b9db-888803a32e23"],
Cell[CellGroupData[{
Cell[1592375, 30911, 8535, 227, 245, "Input",ExpressionUUID->"23d501e2-49a8-46d2-ba12-c98dc406a936"],
Cell[1600913, 31140, 109631, 1802, 670, "Output",ExpressionUUID->"8f99909c-60ba-4fcb-bce6-98fe1ef7ea41"]
}, Open  ]]
}, Open  ]],
Cell[1710571, 32946, 2353, 35, 117, "Item",ExpressionUUID->"719554a2-1c7b-4f15-a66d-c741db0376c7"],
Cell[1712927, 32983, 2022, 30, 52, "Text",ExpressionUUID->"9f0df7ca-d036-487e-8e5e-56ce76d61d13"],
Cell[CellGroupData[{
Cell[1714974, 33017, 9008, 238, 233, "Input",ExpressionUUID->"2af20ffb-a4cc-418e-aceb-80370abf65ba"],
Cell[1723985, 33257, 24912, 510, 177, "Output",ExpressionUUID->"65929fc7-9a0e-4b06-bf20-8d52d60a8162"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1748934, 33772, 6191, 161, 185, "Input",ExpressionUUID->"10890e8f-ebc2-4b00-b4e7-a64611090590"],
Cell[1755128, 33935, 34419, 569, 486, "Output",ExpressionUUID->"aecc9cbe-8c04-4a99-ae14-5d0ebb8c1ad9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1789584, 34509, 9173, 226, 341, "Input",ExpressionUUID->"f1b48bac-4125-44a0-b41d-9c0ddfa98cf7"],
Cell[1798760, 34737, 5676, 124, 432, "Output",ExpressionUUID->"67a9934e-4045-4f86-8432-42f7fcfa3e47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1804473, 34866, 9831, 257, 329, "Input",ExpressionUUID->"3fbb3ba1-7302-4409-9560-66213c6c9688"],
Cell[1814307, 35125, 17796, 307, 736, "Output",ExpressionUUID->"6eec4f5a-348b-4959-8bc0-ec2214e8b851"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1832140, 35437, 8621, 227, 293, "Input",ExpressionUUID->"617b121d-dc83-49ef-b838-eeaecdf92428"],
Cell[1840764, 35666, 16440, 402, 183, "Output",ExpressionUUID->"c4f1ea56-b98d-4416-b75b-cda077f12c65"]
}, Open  ]],
Cell[1857219, 36071, 2572, 42, 201, "Text",ExpressionUUID->"077cfc3f-785e-41ab-94a9-e4251dce0fab"],
Cell[CellGroupData[{
Cell[1859816, 36117, 7932, 208, 209, "Input",ExpressionUUID->"efbc7148-2189-44a7-b520-90b63c86283f"],
Cell[1867751, 36327, 102486, 2003, 415, "Output",ExpressionUUID->"3080404c-89f8-4e29-81aa-340ccb949f74"]
}, Open  ]],
Cell[1970252, 38333, 2720, 44, 216, "Text",ExpressionUUID->"ebedf707-0d21-4f4b-983b-9a6f12c90a63"],
Cell[CellGroupData[{
Cell[1972997, 38381, 7132, 189, 197, "Input",ExpressionUUID->"00634352-6e57-44a6-9ac2-ad8d341cc8a1"],
Cell[1980132, 38572, 150649, 3012, 632, "Output",ExpressionUUID->"075ccdfb-9181-40fd-81ee-bb67fdb4be10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2130818, 41589, 10181, 250, 257, "Input",ExpressionUUID->"7463d364-e795-48b6-bf75-75870c6b7bc2"],
Cell[2141002, 41841, 6476, 160, 1030, "Output",ExpressionUUID->"a63d633c-b933-4a27-85c3-7be5178fed60"]
}, Open  ]],
Cell[2147493, 42004, 2927, 43, 201, "Text",ExpressionUUID->"826225b4-97ed-4b60-8218-e291ae22e8a5"],
Cell[CellGroupData[{
Cell[2150445, 42051, 7763, 215, 257, "Input",ExpressionUUID->"3b768f2f-7a46-49b1-aca5-cd7f53844afb"],
Cell[2158211, 42268, 122528, 2628, 534, "Output",ExpressionUUID->"c0e2911a-041f-4427-b59f-7d72df49419d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2280776, 44901, 15512, 367, 365, "Input",ExpressionUUID->"939ff016-d338-4019-966b-9c04d6f81eb7"],
Cell[2296291, 45270, 29738, 601, 523, "Output",ExpressionUUID->"7f62f488-66d1-49f1-8910-71432c079299"]
}, Open  ]],
Cell[2326044, 45874, 3061, 46, 186, "Text",ExpressionUUID->"ced9bf4c-21d8-4f1a-8a48-1ee0de4d5311"],
Cell[CellGroupData[{
Cell[2329130, 45924, 9669, 250, 185, "Input",ExpressionUUID->"1ca093bb-5b21-47c9-8051-e62579e75303"],
Cell[2338802, 46176, 2935, 65, 367, "Output",ExpressionUUID->"c1b7d9af-2221-4f0c-9a07-40fe4aea2bd2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2341774, 46246, 16556, 396, 365, "Input",ExpressionUUID->"7a52d74a-8b37-47e8-bc0b-b9baa2530a11"],
Cell[2358333, 46644, 42391, 858, 332, "Output",ExpressionUUID->"55539118-6e79-415d-9cd3-a3500110e7f6"]
}, Open  ]],
Cell[2400739, 47505, 3377, 50, 216, "Text",ExpressionUUID->"49179350-1712-4945-8302-8261f9af297c"],
Cell[CellGroupData[{
Cell[2404141, 47559, 7716, 191, 161, "Input",ExpressionUUID->"a0a2d88d-fb1b-42f1-8cb6-f964317a6252"],
Cell[2411860, 47752, 51281, 845, 506, "Output",ExpressionUUID->"4e70a378-0199-4aa8-b6f4-e074a18c9f6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2463178, 48602, 9386, 246, 197, "Input",ExpressionUUID->"8b710cb3-b0f6-43d4-9e5d-7910755b4de2"],
Cell[2472567, 48850, 3019, 64, 122, "Output",ExpressionUUID->"d800e646-f079-40ce-82a6-72718be3c398"]
}, Open  ]],
Cell[2475601, 48917, 3105, 48, 186, "Text",ExpressionUUID->"3da49c64-2541-40d5-aeea-ef907ca45cb1"],
Cell[CellGroupData[{
Cell[2478731, 48969, 8414, 213, 233, "Input",ExpressionUUID->"00893c44-7dbb-4a2d-bbd2-bc0783c06030"],
Cell[2487148, 49184, 31582, 687, 412, "Output",ExpressionUUID->"9fc0022c-ed49-43f4-9348-3cb73590c31d"]
}, Open  ]],
Cell[2518745, 49874, 2612, 40, 186, "Text",ExpressionUUID->"d4f63024-ec55-4233-a4a4-9a88fd5018c6"],
Cell[CellGroupData[{
Cell[2521382, 49918, 8788, 248, 233, "Input",ExpressionUUID->"8a802a9d-187d-40e4-857b-25a8702cf39e"],
Cell[2530173, 50168, 180126, 2958, 601, "Output",ExpressionUUID->"a3b26e49-c200-4e98-a6af-411bddf9d81f"]
}, Open  ]],
Cell[2710314, 53129, 3101, 48, 186, "Text",ExpressionUUID->"da308a4d-48fe-46a7-8cea-bd64755a1958"],
Cell[CellGroupData[{
Cell[2713440, 53181, 5938, 151, 245, "Input",ExpressionUUID->"04914ff7-6bb9-47c6-a1ca-c2813ed45805"],
Cell[2719381, 53334, 2513, 57, 478, "Output",ExpressionUUID->"be014b7c-49e4-4147-87e3-ab4f3c2466b4"]
}, Open  ]],
Cell[2721909, 53394, 2314, 36, 156, "Text",ExpressionUUID->"41c9e215-ee5d-48e4-abd4-48a7426f5481"],
Cell[CellGroupData[{
Cell[2724248, 53434, 7908, 206, 161, "Input",ExpressionUUID->"06c5d289-cbde-424e-81cc-44a419f7c642"],
Cell[2732159, 53642, 21143, 351, 654, "Output",ExpressionUUID->"803534a4-48b3-43d2-ad10-38b76a39bc9e"]
}, Open  ]],
Cell[2753317, 53996, 2590, 40, 186, "Text",ExpressionUUID->"a22c2443-e8e0-4023-93ad-d25436e505f4"],
Cell[CellGroupData[{
Cell[2755932, 54040, 12881, 309, 257, "Input",ExpressionUUID->"9e69b5a9-b7e9-458f-a110-10ee49bf2a83"],
Cell[2768816, 54351, 6253, 158, 469, "Output",ExpressionUUID->"a646d52a-d31f-4333-9600-66916c8ba3e4"]
}, Open  ]],
Cell[2775084, 54512, 2860, 43, 171, "Text",ExpressionUUID->"ccbe5692-0ac6-400e-940b-df872308fda6"],
Cell[CellGroupData[{
Cell[2777969, 54559, 5738, 158, 137, "Input",ExpressionUUID->"a850cbc3-354e-4b8c-a733-8f0cdd3c48fc"],
Cell[2783710, 54719, 14740, 386, 156, "Output",ExpressionUUID->"be2ded43-d939-4f9f-974c-736db49426d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2798487, 55110, 9729, 254, 281, "Input",ExpressionUUID->"0160dd00-630c-46c5-b4f3-df32dbecc489"],
Cell[2808219, 55366, 7723, 154, 426, "Output",ExpressionUUID->"10833b74-bc16-4141-8b84-776b6d3ee683"]
}, Open  ]],
Cell[2815957, 55523, 2735, 43, 156, "Text",ExpressionUUID->"f86c23cc-1c65-4980-92cd-5046f8db2c65"],
Cell[CellGroupData[{
Cell[2818717, 55570, 17290, 436, 389, "Input",ExpressionUUID->"019093fa-fab9-47cf-90ba-f3e2db796f02"],
Cell[2836010, 56008, 149828, 2461, 1061, "Output",ExpressionUUID->"557bfbc1-c42a-4838-b643-a1022d422ece"]
}, Open  ]],
Cell[2985853, 58472, 2765, 43, 186, "Text",ExpressionUUID->"80f69acb-6455-4388-a109-7ab18d63ad1c"]
}, Open  ]]
}
]
*)

