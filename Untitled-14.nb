(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     46091,        987]
NotebookOptionsPosition[     45317,        967]
NotebookOutlinePosition[     45712,        983]
CellTagsIndexPosition[     45669,        980]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "your", " ", "raw", " ", "timing", " ", "data"}], 
   "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"timings", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<x^3 Erf[x]^2\>\"", ",", "0.000016"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(x^7 - 24 x^4 - 4 x^2 + 8 x - 8)/(x^8 + 6 x^6 + 12 x^4 + 8 \
x^2)\>\"", ",", "0.000017"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(-4 x^2 - 4 x^3 - x^4)/((-1 + x^2)(1 + x + x^2)^2)\>\"", ",", 
         "0.000009"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<x^3/(1 + x)\>\"", ",", "0.000003"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(x^4 - 3 x^2 + 6)/(x^6 - 5 x^4 + 5 x^2 + 4)\>\"", ",", 
         "0.000006"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(-1 - E^x + E^x x Log[x])/((1 + E^x)^2 x)\>\"", ",", 
         "0.000012"}], "}"}]}], "}"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"1", ")"}], " ", "Interactive", " ", "Dataset"}], "*)"}], "\n", 
   RowBox[{"Dataset", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Expression\>\"", ",", "\"\<Time (s)\>\""}], "}"}], ",",
          "#"}], "]"}], "&"}], "/@", "timings"}], ",", 
     RowBox[{"AppearanceRules", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<HeaderBackground\>\"", "->", "LightGray"}], ",", 
        RowBox[{"\"\<RowAlternation\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"White", ",", "LightYellow"}], "}"}]}]}], "|>"}]}]}], "]"}],
    "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"2", ")"}], " ", "Static", " ", "styled", " ", "Grid"}], "*)"}], 
   "\n", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Prepend", "[", 
      RowBox[{"timings", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Expression\>\"", ",", "\"\<Time (s)\>\""}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"Frame", "->", "All"}], ",", 
     RowBox[{"Background", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{"LightGray", ",", 
          RowBox[{"{", "White", "}"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Alignment", "->", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Center"}], "}"}]}], ",", 
     RowBox[{"ItemStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "->", "\"\<Courier\>\""}], ",", 
        RowBox[{"FontSize", "->", "12"}]}], "}"}]}]}], "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"3", ")"}], " ", "Bar", " ", "chart", " ", "with", " ", 
     "rotated", " ", "labels"}], "*)"}], "\n", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"timings", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "place", " ", "the", " ", "labels", "*", "below", "*", "the", " ", 
        "bars"}], ",", 
       RowBox[{"rotated", " ", "45", "\[Degree]"}]}], "*)"}], 
     RowBox[{"ChartLabels", "->", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Rotate", "[", 
           RowBox[{"#", ",", 
            RowBox[{"45", " ", "Degree"}]}], "]"}], "&"}], "/@", 
         RowBox[{"timings", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", "Below"}], "]"}]}],
      ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"pick", " ", "a", " ", "single", " ", "nice", " ", "color"}], 
       ",", 
       RowBox[{"or", " ", "a", " ", "list", " ", "of", " ", "colors"}]}], 
      "*)"}], 
     RowBox[{"ChartStyle", "->", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", "0.6", ",", "0.8"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "->", "Large"}], ",", 
     RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", "\"\<Time (s)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Poor Man\[CloseCurlyQuote]s Integrator: Example Timings\>\"", ",",
         "14", ",", "Bold"}], "]"}]}], ",", 
     RowBox[{"LabelStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"FontFamily", "->", "\"\<Arial\>\""}], ",", 
        RowBox[{"FontSize", "->", "12"}]}], "]"}]}], ",", 
     RowBox[{"(*", 
      RowBox[{
      "add", " ", "light", " ", "horizontal", " ", "grid", " ", "lines", " ", 
       "for", " ", "readability"}], "*)"}], 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"GridLinesStyle", "->", "Dashed"}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.960256421476026*^9, 3.960256421478325*^9}},
 CellLabel->
  "In[1516]:=",ExpressionUUID->"b9ce2c30-413b-434a-9b72-6a4c5454de1f"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue", "nodef", 
   "\"Unknown option \
\\!\\(\\*RowBox[{\\\"\\\\\\\"AppearanceRules\\\\\\\"\\\"}]\\) for \
\\!\\(\\*RowBox[{\\\"Dataset\\\"}]\\).\"", 2, 1517, 204, 19031481402321134295,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.960256421688057*^9},
 CellLabel->
  "During evaluation of \
In[1516]:=",ExpressionUUID->"e1cd6381-c61c-4d0e-aeda-d93b297a8f45"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Expression" -> "x^3 Erf[x]^2", "Time (s)" -> 0.000016|>, <|
       "Expression" -> 
        "(x^7 - 24 x^4 - 4 x^2 + 8 x - 8)/(x^8 + 6 x^6 + 12 x^4 + 8 x^2)", 
        "Time (s)" -> 0.000017|>, <|
       "Expression" -> "(-4 x^2 - 4 x^3 - x^4)/((-1 + x^2)(1 + x + x^2)^2)", 
        "Time (s)" -> 9.*^-6|>, <|
       "Expression" -> "x^3/(1 + x)", "Time (s)" -> 3.*^-6|>, <|
       "Expression" -> "(x^4 - 3 x^2 + 6)/(x^6 - 5 x^4 + 5 x^2 + 4)", 
        "Time (s)" -> 6.*^-6|>, <|
       "Expression" -> "(-1 - E^x + E^x x Log[x])/((1 + E^x)^2 x)", 
        "Time (s)" -> 0.000012|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Expression"} -> 
        1, {All, "Time (s)"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Expression" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Time (s)" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 2, {All}]], 6, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Expression", "Time (s)"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 6], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Expression"} -> 
        1, {All, "Time (s)"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Expression" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Time (s)" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 2, {All}]], 6, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Expression", "Time (s)"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real]}], 6], "Path" -> {}, "DisplayedRowCount" -> 6, 
     "DisplayedColumnCount" -> 2, "DataRowCount" -> 6, "DataColumnCount" -> 2,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Expression", 
                  Style[
                  "Expression", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Expression"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Expression"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Time (s)", 
                  Style[
                  "Time (s)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Time (s)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Time (s)"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["x^3 Erf[x]^2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Expression"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000016"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Time (s)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "(x^7 - 24 x^4 - 4 x^2 + 8 x - 8)/(x^8 + 6 x^6 + 12 x^4 + 8 \
x^2)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Expression"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000017"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Time (s)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["(-4 x^2 - 4 x^3 - x^4)/((-1 + x^2)(1 + x + x^2)^2)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Expression"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000009"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Time (s)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["x^3/(1 + x)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Expression"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000003"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Time (s)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["(x^4 - 3 x^2 + 6)/(x^6 - 5 x^4 + 5 x^2 + 4)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Expression"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000006"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Time (s)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["(-1 - E^x + E^x x Log[x])/((1 + E^x)^2 x)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Expression"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Time (s)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{647., {125.67974853515625`, 135.32025146484375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{647., {125.67974853515625`, 135.32025146484375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.960256421695969*^9},
 CellLabel->
  "Out[1517]=",ExpressionUUID->"a1456c76-85d4-46d1-8aa2-cbf87e18e04d"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Expression\"\>", "\<\"Time (s)\"\>"},
    {"\<\"x^3 Erf[x]^2\"\>", "0.000016`"},
    {"\<\"(x^7 - 24 x^4 - 4 x^2 + 8 x - 8)/(x^8 + 6 x^6 + 12 x^4 + 8 \
x^2)\"\>", "0.000017`"},
    {"\<\"(-4 x^2 - 4 x^3 - x^4)/((-1 + x^2)(1 + x + x^2)^2)\"\>", 
     "9.`*^-6"},
    {"\<\"x^3/(1 + x)\"\>", "3.`*^-6"},
    {"\<\"(x^4 - 3 x^2 + 6)/(x^6 - 5 x^4 + 5 x^2 + 4)\"\>", "6.`*^-6"},
    {"\<\"(-1 - E^x + E^x x Log[x])/((1 + E^x)^2 x)\"\>", "0.000012`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       GrayLevel[0.85], {
        GrayLevel[1]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{
    "Columns" -> {{FontFamily -> "Courier"}}, "Rows" -> {{FontSize -> 12}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.960256422258357*^9},
 CellLabel->
  "Out[1518]=",ExpressionUUID->"6702903b-6eb8-4f53-a08f-b97cd2a8be39"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6579999999999999], Thickness[Small]}], 
     {RGBColor[0.2, 0.6, 0.8], EdgeForm[{Opacity[0.6579999999999999], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 0.000016},
          
          RoundingRadius->0],
         StatusArea[#, 0.000016]& ,
         TagBoxNote->"0.000016"],
        StyleBox["0.000016`", {
          Directive[FontFamily -> "Arial", FontSize -> 12]}, StripOnInput -> 
         False]],
       Annotation[#, 
        Style[0.000016, {
          Directive[FontFamily -> "Arial", FontSize -> 12]}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.6, 0.8], EdgeForm[{Opacity[0.6579999999999999], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 0.000017},
          
          RoundingRadius->0],
         StatusArea[#, 0.000017]& ,
         TagBoxNote->"0.000017"],
        StyleBox["0.000017`", {
          Directive[FontFamily -> "Arial", FontSize -> 12]}, StripOnInput -> 
         False]],
       Annotation[#, 
        Style[0.000017, {
          Directive[FontFamily -> "Arial", FontSize -> 12]}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.6, 0.8], EdgeForm[{Opacity[0.6579999999999999], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{2.5487982520029133, 0.}, {3.4512017479970867, 9.*^-6},
          RoundingRadius->0],
         StatusArea[#, 9.*^-6]& ,
         TagBoxNote->"9.*^-6"],
        StyleBox["9.`*^-6", {
          Directive[FontFamily -> "Arial", FontSize -> 12]}, StripOnInput -> 
         False]],
       Annotation[#, 
        Style[9.*^-6, {
          Directive[FontFamily -> "Arial", FontSize -> 12]}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.6, 0.8], EdgeForm[{Opacity[0.6579999999999999], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{3.5487982520029133, 0.}, {4.451201747997087, 3.*^-6},
          RoundingRadius->0],
         StatusArea[#, 3.*^-6]& ,
         TagBoxNote->"3.*^-6"],
        StyleBox["3.`*^-6", {
          Directive[FontFamily -> "Arial", FontSize -> 12]}, StripOnInput -> 
         False]],
       Annotation[#, 
        Style[3.*^-6, {
          Directive[FontFamily -> "Arial", FontSize -> 12]}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.6, 0.8], EdgeForm[{Opacity[0.6579999999999999], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 6.*^-6},
          RoundingRadius->0],
         StatusArea[#, 6.*^-6]& ,
         TagBoxNote->"6.*^-6"],
        StyleBox["6.`*^-6", {
          Directive[FontFamily -> "Arial", FontSize -> 12]}, StripOnInput -> 
         False]],
       Annotation[#, 
        Style[6.*^-6, {
          Directive[FontFamily -> "Arial", FontSize -> 12]}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.6, 0.8], EdgeForm[{Opacity[0.6579999999999999], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 0.000012},
          RoundingRadius->0],
         StatusArea[#, 0.000012]& ,
         TagBoxNote->"0.000012"],
        StyleBox["0.000012`", {
          Directive[FontFamily -> "Arial", FontSize -> 12]}, StripOnInput -> 
         False]],
       Annotation[#, 
        Style[0.000012, {
          Directive[FontFamily -> "Arial", FontSize -> 12]}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {InsetBox[
     StyleBox[
      RotationBox["\<\"x^3 Erf[x]^2\"\>",
       BoxRotation->0.7853981633974483],
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->12], Offset[{0, -4}, {1., 0.}], ImageScaled[{0.5, 1}]], 
    InsetBox[
     StyleBox[
      RotationBox["\<\"(x^7 - 24 x^4 - 4 x^2 + 8 x - 8)/(x^8 + 6 x^6 + 12 x^4 \
+ 8 x^2)\"\>",
       BoxRotation->0.7853981633974483],
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->12], Offset[{0, -4}, {2., 0.}], ImageScaled[{0.5, 1}]], 
    InsetBox[
     StyleBox[
      RotationBox["\<\"(-4 x^2 - 4 x^3 - x^4)/((-1 + x^2)(1 + x + x^2)^2)\"\>",
       BoxRotation->0.7853981633974483],
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->12], Offset[{0, -4}, {3., 0.}], ImageScaled[{0.5, 1}]], 
    InsetBox[
     StyleBox[
      RotationBox["\<\"x^3/(1 + x)\"\>",
       BoxRotation->0.7853981633974483],
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->12], Offset[{0, -4}, {4., 0.}], ImageScaled[{0.5, 1}]], 
    InsetBox[
     StyleBox[
      RotationBox["\<\"(x^4 - 3 x^2 + 6)/(x^6 - 5 x^4 + 5 x^2 + 4)\"\>",
       BoxRotation->0.7853981633974483],
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->12], Offset[{0, -4}, {5., 0.}], ImageScaled[{0.5, 1}]], 
    InsetBox[
     StyleBox[
      RotationBox["\<\"(-1 - E^x + E^x x Log[x])/((1 + E^x)^2 x)\"\>",
       BoxRotation->0.7853981633974483],
      StripOnInput->False,
      FontFamily->"Arial",
      FontSize->12], Offset[{0, -4}, {6., 0.}], 
     ImageScaled[{0.5, 1}]]}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, 
    FormBox[
     TagBox["\"Time (s)\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0.43075018208302984`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, Automatic},
  GridLinesStyle->Dashing[{Small, Small}],
  ImageSize->Large,
  LabelStyle->Directive[FontFamily -> "Arial", FontSize -> 12],
  PlotLabel->FormBox[
    StyleBox[
    "\"Poor Man\[CloseCurlyQuote]s Integrator: Example Timings\"", 14, Bold, 
     StripOnInput -> False], TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.960256422298365*^9},
 CellLabel->
  "Out[1519]=",ExpressionUUID->"143a2de9-2c4b-4d6d-afeb-bf6d72c01ec4"]
}, Open  ]]
},
WindowSize->{738, 863},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c0689076-ba01-4b79-a48f-9a88c9618c2f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 5001, 137, 801, "Input",ExpressionUUID->"b9ce2c30-413b-434a-9b72-6a4c5454de1f"],
Cell[5584, 161, 429, 11, 35, "Message",ExpressionUUID->"e1cd6381-c61c-4d0e-aeda-d93b297a8f45"],
Cell[6016, 174, 30513, 555, 303, "Output",ExpressionUUID->"a1456c76-85d4-46d1-8aa2-cbf87e18e04d"],
Cell[36532, 731, 1077, 24, 221, "Output",ExpressionUUID->"6702903b-6eb8-4f53-a08f-b97cd2a8be39"],
Cell[37612, 757, 7689, 207, 766, "Output",ExpressionUUID->"143a2de9-2c4b-4d6d-afeb-bf6d72c01ec4"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

