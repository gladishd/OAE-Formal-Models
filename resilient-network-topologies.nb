(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    845588,      17895]
NotebookOptionsPosition[    831085,      17668]
NotebookOutlinePosition[    831534,      17686]
CellTagsIndexPosition[    831491,      17683]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Resilient Network Topologies: N2N Lattice vs. Clos and Mesh Networks\
\>", "Section",
 CellChangeTimes->{{3.9629599412040358`*^9, 3.9629599418125887`*^9}, {
  3.962960029036481*^9, 
  3.9629600299441223`*^9}},ExpressionUUID->"e41579c9-b28b-4b03-adb5-\
1b582ee3d08a"],

Cell["Introduction", "Affiliation",
 CellChangeTimes->{{3.962959958952446*^9, 3.962959960700286*^9}, {
  3.9629600386900682`*^9, 
  3.962960043603222*^9}},ExpressionUUID->"6860b1ba-7704-473c-8586-\
d1432b12b2c7"],

Cell[CellGroupData[{

Cell["\<\
Modern networks can be designed in vastly different topologies, each with \
implications for latency and resilience. A new approach called the \
Neighbor-to-Neighbor (N2N) Lattice (developed in the D\[CapitalAE]D\
\[CapitalAE]LUS project) emphasizes a highly connected, distributed mesh of \
nodes, in contrast to traditional hierarchical designs like the Clos \
(fat-tree) network. This report explores how an N2N lattice topology compares \
to a Clos (spine-leaf) data center network and a simple mesh, particularly in \
terms of self-healing capability and fault tolerance. Classic research by \
Paul Baran in the 1960s already indicated that fully distributed (mesh) \
networks provide far superior survivability against node or link failures \
than centralized or hierarchical networks \
(https://www.rand.org/pubs/research_memoranda/RM3420.html#:~:text=Figure%201,\
Distributed%20Networks & \
https://www.rand.org/pubs/research_memoranda/RM3420.html#:~:text=II,Network). \
Here, we present a quantitative comparison: building spanning trees on each \
topology, measuring communication latency, and evaluating resilience through \
metrics like spanning tree counts and connectivity under failures. The \
results illustrate the superior resilience of a distributed N2N lattice \
(Baran\[CloseCurlyQuote]s distributed model) over more centralized topologies \
(https://mulliganstew-gang.vercel.app/#:~:text=Alternating%20Bit%20Protocol%\
2C%20demonstrating%20the,%C2%BB). \
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
   3.962960052125422*^9, 3.9629600568039713`*^9}, {3.962960102491466*^9, 
   3.962960161905933*^9}, {3.962978114192162*^9, 3.962978114294139*^9}, 
   3.9629781536724987`*^9},ExpressionUUID->"edafcdbd-7845-4d0e-b135-\
fc4b4547839f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<DaedaelusNew`AethernetGraph`\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ComponentInteractions", "::", "usage"}], "MessageName"], "=", 
   "\"\<Finds components directly interacting with a given architectural \
component.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"AethernetGraph", "::", "usage"}], "MessageName"], "=", 
   "\"\<AethernetGraph[components:{_String..}, opts___] generates an \
interaction graph.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$DaedaelusArchitecture", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"\"\<CELL\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LINK\>\"", ",", "\"\<Graph Virtual Machine\>\"", ",", 
        "\"\<N2N Lattice\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<LINK\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<CELL\>\"", ",", "\"\<SAW Protocol Link\>\"", ",", 
        "\"\<Token Dynamics\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<Alice\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LINK\>\"", ",", "\"\<Reversible Subtransaction\>\"", ",", 
        "\"\<Token Dynamics\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<Bob\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LINK\>\"", ",", "\"\<Reversible Subtransaction\>\"", ",", 
        "\"\<Token Dynamics\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<FPGA Substructure\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Graph Virtual Machine\>\"", ",", "\"\<SAW Protocol Link\>\"", 
        ",", "\"\<SerDes\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<Graph Virtual Machine\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<FPGA Substructure\>\"", ",", "\"\<TRAPH\>\"", ",", 
        "\"\<Reversible Subtransaction\>\"", ",", "\"\<CELL\>\""}], "}"}]}], 
     ",", 
     RowBox[{"\"\<N2N Lattice\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<CELL\>\"", ",", "\"\<LINK\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<SAW Protocol Link\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<FPGA Substructure\>\"", ",", "\"\<Alice\>\"", ",", "\"\<Bob\>\"", 
        ",", "\"\<Truncated Tail Latency\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<Token Dynamics\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LINK\>\"", ",", "\"\<Alice\>\"", ",", "\"\<Bob\>\"", ",", 
        "\"\<Reversible Subtransaction\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<Reversible Subtransaction\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Token Dynamics\>\"", ",", "\"\<Graph Virtual Machine\>\""}], 
       "}"}]}], ",", 
     RowBox[{"\"\<TRAPH\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<Graph Virtual Machine\>\"", "}"}]}], ",", 
     RowBox[{"\"\<SerDes\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<FPGA Substructure\>\"", ",", "\"\<LINK\>\""}], "}"}]}], 
     ",", 
     RowBox[{"\"\<Truncated Tail Latency\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<SAW Protocol Link\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"$DaedaelusPrinciples", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{
     "\"\<CELL\>\"", "\[Rule]", 
      "\"\<A CELL is an autonomous unit of compute, storage, and packet \
processing.\>\""}], ",", 
     RowBox[{
     "\"\<LINK\>\"", "\[Rule]", 
      "\"\<A LINK is an autonomous communication entity between two \
cells.\>\""}], ",", 
     RowBox[{
     "\"\<Graph Virtual Machine\>\"", "\[Rule]", 
      "\"\<The GVM enables protected routing and provisioning.\>\""}], ",", 
     RowBox[{
     "\"\<FPGA Substructure\>\"", "\[Rule]", 
      "\"\<FPGA Substructure delivers lower latency through atomic \
protocol.\>\""}], ",", 
     RowBox[{
     "\"\<N2N Lattice\>\"", "\[Rule]", 
      "\"\<Manage on a Tree, Compute on a Graph for Relative Address-Free \
Routing.\>\""}], ",", 
     RowBox[{
     "\"\<SAW Protocol Link\>\"", "\[Rule]", 
      "\"\<The Stop-and-Wait protocol eliminates bandwidth \
degradation.\>\""}], ",", 
     RowBox[{
     "\"\<Token Dynamics\>\"", "\[Rule]", 
      "\"\<Concerned with flow and integrity of information.\>\""}], ",", 
     RowBox[{
     "\"\<Reversible Subtransaction\>\"", "\[Rule]", 
      "\"\<Allows partial transactions to be aborted cleanly.\>\""}], ",", 
     RowBox[{
     "\"\<Truncated Tail Latency\>\"", "\[Rule]", 
      "\"\<Knows transaction status without heartbeats/timeouts.\>\""}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ComponentInteractions", "[", "component_String", "]"}], ":=", 
   RowBox[{"Lookup", "[", 
    RowBox[{"$DaedaelusArchitecture", ",", "component", ",", 
     RowBox[{"{", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AethernetGraph", "[", 
    RowBox[{
     RowBox[{"components", ":", 
      RowBox[{"{", 
       RowBox[{"_String", ".."}], "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nodes", ",", "edges", ",", "interactions", ",", "graphEdges"}],
       "}"}], ",", 
     RowBox[{
      RowBox[{"nodes", "=", 
       RowBox[{"components", "\[Intersection]", 
        RowBox[{"Keys", "[", "$DaedaelusArchitecture", "]"}]}]}], ";", 
      RowBox[{"interactions", "=", 
       RowBox[{"KeyTake", "[", 
        RowBox[{"$DaedaelusArchitecture", ",", "nodes"}], "]"}]}], ";", 
      RowBox[{"graphEdges", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"node", "\[DirectedEdge]", "target"}], ",", 
          RowBox[{"{", 
           RowBox[{"node", ",", "nodes"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"target", ",", 
            RowBox[{"interactions", "[", "node", "]"}]}], "}"}]}], "]"}], 
        "]"}]}], ";", 
      RowBox[{"edges", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"graphEdges", ",", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"nodes", ",", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "]"}], "&"}]}], "]"}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{"nodes", ",", "edges", ",", 
        RowBox[{"VertexLabels", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{"\"\<Name\>\"", ",", "Center"}], "]"}]}], ",", "opts"}], 
       "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<DaedaelusNew`AethernetGraph`\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"coreComponents", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<CELL\>\"", ",", "\"\<LINK\>\"", ",", "\"\<FPGA Substructure\>\"", 
     ",", "\"\<Graph Virtual Machine\>\"", ",", "\"\<N2N Lattice\>\"", ",", 
     "\"\<SAW Protocol Link\>\"", ",", "\"\<Token Dynamics\>\"", ",", 
     "\"\<Reversible Subtransaction\>\""}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g0", "=", 
   RowBox[{"AethernetGraph", "[", 
    RowBox[{"coreComponents", ",", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<SpringElectricalEmbedding\>\""}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<D\[CapitalAE]D\[CapitalAE]LUS Core Component Interactions\>\"", 
        ",", "18", ",", "\"\<Panel\>\""}], "]"}]}], ",", 
     RowBox[{"EdgeStyle", "\[Rule]", 
      RowBox[{"Arrowheads", "[", "0.02", "]"}]}], ",", 
     RowBox[{"VertexStyle", "\[Rule]", "LightBlue"}]}], "]"}]}], 
  ";"}], "\n", "g0"}], "Input",
 CellChangeTimes->{{3.962963976811448*^9, 3.96296398023971*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"77720440-0a50-48c6-86a7-c7a99a24dea2"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "CELL", "FPGA Substructure", "Graph Virtual Machine", "LINK", 
       "N2N Lattice", "Reversible Subtransaction", "SAW Protocol Link", 
       "Token Dynamics"}, {{{1, 4}, {1, 3}, {1, 5}, {2, 3}, {2, 7}, {3, 2}, {
       3, 6}, {3, 1}, {4, 1}, {4, 7}, {4, 8}, {5, 1}, {5, 4}, {6, 8}, {6, 
       3}, {7, 2}, {8, 4}, {8, 6}}, Null}, {EdgeStyle -> {
         Arrowheads[0.02]}, GraphLayout -> "SpringElectricalEmbedding", 
       ImageSize -> Large, PlotLabel -> 
       Style["D\[CapitalAE]D\[CapitalAE]LUS Core Component Interactions", 18, 
         "Panel"], VertexLabels -> {
         Placed["Name", Center]}, VertexStyle -> {
         RGBColor[0.87, 0.94, 1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.02], 
        ArrowBox[
         BezierCurveBox[{{0.9177784067463738, 1.6282645121437658`}, {
          1.5580451580372492`, 1.5338830885234882`}, {2.017303345088455, 
          1.0778882600883224`}}], 0.026976044466768462`], 
        ArrowBox[
         BezierCurveBox[{{0.9177784067463738, 1.6282645121437658`}, {
          0.92628527314439, 1.3376356743577291`}, {0.7606253937957687, 
          1.0986915543150533`}}], 0.026976044466768462`], 
        ArrowBox[
         BezierCurveBox[{{0.9177784067463738, 1.6282645121437658`}, {
          0.45884339631878074`, 1.4774836265273084`}, {0., 
          1.6285430748186491`}}], 0.026976044466768462`], 
        ArrowBox[
         BezierCurveBox[{{2.5569963819750168`, 1.9067015300219214`}, {
          2.423440536914928, 1.4035473688199942`}, {2.017303345088455, 
          1.0778882600883224`}}], 0.026976044466768462`], 
        ArrowBox[
         BezierCurveBox[{{2.5569963819750168`, 1.9067015300219214`}, {
          2.0870759690354523`, 1.8103475341196864`}, {1.6516973561102426`, 
          2.011729634692152}}], 0.026976044466768462`], 
        ArrowBox[
         BezierCurveBox[{{2.017303345088455, 1.0778882600883224`}, {
          1.3770365937975682`, 1.172269683708599}, {0.9177784067463738, 
          1.6282645121437658`}}], 0.026976044466768462`], 
        ArrowBox[
         BezierCurveBox[{{2.017303345088455, 1.0778882600883224`}, {
          2.150859190148565, 1.5810424212902543`}, {2.5569963819750168`, 
          1.9067015300219214`}}], 0.026976044466768462`], 
        ArrowBox[
         BezierCurveBox[{{2.017303345088455, 1.0778882600883224`}, {
          2.15658423222262, 0.5264572022812014}, {1.9413676176191252`, 0.}}], 
         0.026976044466768462`], 
        ArrowBox[
         BezierCurveBox[{{0.7606253937957687, 1.0986915543150533`}, {
          0.7521185273977478, 1.3893203921010764`}, {0.9177784067463738, 
          1.6282645121437658`}}], 0.026976044466768462`], 
        ArrowBox[{{0.7606253937957687, 1.0986915543150533`}, {
         1.6516973561102426`, 2.011729634692152}}, 0.026976044466768462`], 
        ArrowBox[
         BezierCurveBox[{{0.7606253937957687, 1.0986915543150533`}, {
          1.071090092272296, 0.5925046953425622}, {1.0204954725076063`, 
          0.0008513765422415442}}], 0.026976044466768462`], 
        ArrowBox[
         BezierCurveBox[{{0., 1.6285430748186491`}, {0.4589350104275819, 
          1.7793239604351119`}, {0.9177784067463738, 1.6282645121437658`}}], 
         0.026976044466768462`], 
        ArrowBox[{{0., 1.6285430748186491`}, {0.7606253937957687, 
         1.0986915543150533`}}, 0.026976044466768462`], 
        ArrowBox[
         BezierCurveBox[{{1.9413676176191252`, 0.}, {1.802086730484956, 
          0.5514310578070973}, {2.017303345088455, 1.0778882600883224`}}], 
         0.026976044466768462`], 
        ArrowBox[
         BezierCurveBox[{{1.9413676176191252`, 0.}, {
          1.4807915440686235`, -0.1510032153311369}, {1.0204954725076063`, 
          0.0008513765422415442}}], 0.026976044466768462`], 
        ArrowBox[
         BezierCurveBox[{{1.6516973561102426`, 2.011729634692152}, {
          2.1216177690498, 2.108083630594371}, {2.5569963819750168`, 
          1.9067015300219214`}}], 0.026976044466768462`], 
        ArrowBox[
         BezierCurveBox[{{1.0204954725076063`, 0.0008513765422415442}, {
          0.710030774031079, 0.5070382355147403}, {0.7606253937957687, 
          1.0986915543150533`}}], 0.026976044466768462`], 
        ArrowBox[
         BezierCurveBox[{{1.0204954725076063`, 0.0008513765422415442}, {
          1.4810715460581088`, 0.1518545918733784}, {1.9413676176191252`, 
          0.}}], 0.026976044466768462`]}, 
       {RGBColor[0.87, 0.94, 1], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{0.9177784067463738, 1.6282645121437658`}, 
          0.026976044466768462], 
         InsetBox["\<\"CELL\"\>", {0.9177784067463738, 1.6282645121437658},
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.5569963819750168`, 1.9067015300219214`}, 
          0.026976044466768462], 
         InsetBox["\<\"FPGA Substructure\"\>", {2.5569963819750168, 1.9067015300219214},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.017303345088455, 1.0778882600883224`}, 
          0.026976044466768462], 
         InsetBox["\<\"Graph Virtual Machine\"\>", {2.017303345088455, 1.0778882600883224},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7606253937957687, 1.0986915543150533`}, 
          0.026976044466768462], 
         InsetBox["\<\"LINK\"\>", {0.7606253937957687, 1.0986915543150533},
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.6285430748186491`}, 0.026976044466768462], 
         InsetBox["\<\"N2N Lattice\"\>", {0., 1.6285430748186491},
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.9413676176191252`, 0.}, 0.026976044466768462], 
         InsetBox["\<\"Reversible Subtransaction\"\>", {1.9413676176191252, 0.},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.6516973561102426`, 2.011729634692152}, 
          0.026976044466768462], 
         InsetBox["\<\"SAW Protocol Link\"\>", {1.6516973561102426, 2.011729634692152},
          
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0204954725076063`, 0.0008513765422415442}, 
          0.026976044466768462], 
         InsetBox["\<\"Token Dynamics\"\>", {1.0204954725076063, 0.0008513765422415442},
          
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox[
    StyleBox[
    "\"D\[CapitalAE]D\[CapitalAE]LUS Core Component Interactions\"", 18, 
     "Panel", StripOnInput -> False], TraditionalForm]]], "Output",
 CellChangeTimes->{{3.962963977154917*^9, 3.9629639805482492`*^9}, {
  3.962974691363121*^9, 3.962974708151927*^9}, {3.962978189229463*^9, 
  3.962978191960052*^9}, {3.962978330847725*^9, 3.962978333257226*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"bdab6114-a389-4e67-a0de-c31df8c73a24"]
}, Open  ]]
}, Open  ]],

Cell["Neighbor-to-Neighbor (N2N) Lattice Topology", "Affiliation",
 CellChangeTimes->{{3.962959958952446*^9, 3.962959960700286*^9}, {
  3.9629600386900682`*^9, 3.962960043603222*^9}, {3.962960186227029*^9, 
  3.962960187889864*^9}},ExpressionUUID->"687f328a-8652-411e-a2be-\
4fa1c5344bb4"],

Cell[CellGroupData[{

Cell["\<\
The N2N lattice is a highly distributed network topology where each node \
connects directly to several nearest neighbors, forming a dense mesh. In the \
code, a hexagonal lattice graph is generated \[Dash] each node has up to six \
neighbors in a hexagonal tiling pattern. This hex lattice is an example of a \
locally connected mesh that approximates the N2N lattice structure. Such a \
topology is richly interconnected: multiple redundant paths exist between any \
two nodes. Historically, Baran referred to this as a distributed network and \
showed it can maintain communication among survivors even after heavy damage, \
unlike centralized or tree networks \
(https://www.rand.org/pubs/research_memoranda/RM3420.html#:~:text=Figure%201,\
Distributed%20Networks). The high degree of connectivity means the network \
can reroute around failures; if one link or node goes down, traffic finds \
alternate neighbor-to-neighbor paths. This robustness allows use of many \
low-cost links without compromising overall connectivity \
(https://www.rand.org/pubs/research_memoranda/RM3420.html#:~:text=A%\
20comparison%20is%20made%20between,unusable%20in%20present%20type%20networks).\
 In the D\[CapitalAE]D\[CapitalAE]LUS architecture, the N2N lattice combined \
with novel protocols (like transaction multiplexing and the Reversible Snake) \
can even eliminate contention and make the network immune to packet loss, \
providing deterministic performance with bounded low latency \
(https://mulliganstew-gang.vercel.app/#:~:text=with%20the%20D%C3%A6d%C3%A6lus%\
20architecture%2C%20simulating,%C2%BB).\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
   3.962960201304687*^9, 3.962960223406221*^9}, 
   3.962978145914315*^9},ExpressionUUID->"7a2b3b41-2911-4ec4-b2aa-\
5eab84f5e1b1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<DaedaelusNew`AethernetGraph`\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ComponentInteractions", "::", "usage"}], "MessageName"], "=", 
   "\"\<ComponentInteractions[component_String] returns the directly \
interacting architectural components for the given component.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"AethernetGraph", "::", "usage"}], "MessageName"], "=", 
   "\"\<AethernetGraph[components:{_String..}, opts___] makes an interaction \
graph for the specified D\[CapitalAE]D\[CapitalAE]LUS architectural \
components.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"AethernetGraphAddPrincipleTooltips", "::", "usage"}], 
    "MessageName"], "=", 
   "\"\<AethernetGraphAddPrincipleTooltips[gr_Graph, opts___] adds or \
refreshes tooltips on graph vertices quoting foundational D\[CapitalAE]D\
\[CapitalAE]LUS principles.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"AethernetGraphAddSpecButtons", "::", "usage"}], "MessageName"], 
   "=", "\"\<AethernetGraphAddSpecButtons[gr_Graph, opts___] replaces \
vertices with spec-link buttons.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"AethernetGraphCausalLoopLayout", "::", "usage"}], "MessageName"],
    "=", "\"\<AethernetGraphCausalLoopLayout[gr_Graph, opts___] renders the \
graph with a circular embedding and curved directional edges.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$DaedaelusArchitecture", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"\"\<CELL\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LINK\>\"", ",", "\"\<Graph Virtual Machine\>\"", ",", 
        "\"\<N2N Lattice\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<LINK\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<CELL\>\"", ",", "\"\<SAW Protocol Link\>\"", ",", 
        "\"\<Token Dynamics\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<Alice\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LINK\>\"", ",", "\"\<Reversible Subtransaction\>\"", ",", 
        "\"\<Token Dynamics\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<Bob\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LINK\>\"", ",", "\"\<Reversible Subtransaction\>\"", ",", 
        "\"\<Token Dynamics\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<FPGA Substructure\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Graph Virtual Machine\>\"", ",", "\"\<SAW Protocol Link\>\"", 
        ",", "\"\<SerDes\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<Graph Virtual Machine\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<FPGA Substructure\>\"", ",", "\"\<TRAPH\>\"", ",", 
        "\"\<Reversible Subtransaction\>\"", ",", "\"\<CELL\>\""}], "}"}]}], 
     ",", 
     RowBox[{"\"\<N2N Lattice\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<CELL\>\"", ",", "\"\<LINK\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<SAW Protocol Link\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<FPGA Substructure\>\"", ",", "\"\<Alice\>\"", ",", "\"\<Bob\>\"", 
        ",", "\"\<Truncated Tail Latency\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<Token Dynamics\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LINK\>\"", ",", "\"\<Alice\>\"", ",", "\"\<Bob\>\"", ",", 
        "\"\<Reversible Subtransaction\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<Reversible Subtransaction\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Token Dynamics\>\"", ",", "\"\<Graph Virtual Machine\>\""}], 
       "}"}]}], ",", 
     RowBox[{"\"\<TRAPH\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<Graph Virtual Machine\>\"", "}"}]}], ",", 
     RowBox[{"\"\<SerDes\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<FPGA Substructure\>\"", ",", "\"\<LINK\>\""}], "}"}]}], 
     ",", 
     RowBox[{"\"\<Truncated Tail Latency\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<SAW Protocol Link\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"$DaedaelusPrinciples", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{
     "\"\<CELL\>\"", "\[Rule]", 
      "\"\<A CELL is an autonomous unit of compute, storage, and packet \
processing.\>\""}], ",", 
     RowBox[{
     "\"\<LINK\>\"", "\[Rule]", 
      "\"\<A LINK is a bidirectional communication entity between two \
cells.\>\""}], ",", 
     RowBox[{
     "\"\<Graph Virtual Machine\>\"", "\[Rule]", 
      "\"\<The GVM routes and controls within the FPGA Substructure with \
protected semantics.\>\""}], ",", 
     RowBox[{
     "\"\<FPGA Substructure\>\"", "\[Rule]", 
      "\"\<Provides atomic low-latency protocol support without heartbeats.\>\
\""}], ",", 
     RowBox[{
     "\"\<N2N Lattice\>\"", "\[Rule]", 
      "\"\<Manage on a Tree, Compute on a Graph: relative address-free \
routing.\>\""}], ",", 
     RowBox[{
     "\"\<SAW Protocol Link\>\"", "\[Rule]", 
      "\"\<Stop-and-Wait link with transfer-time longer than cable, avoiding \
bandwidth degradation.\>\""}], ",", 
     RowBox[{
     "\"\<Token Dynamics\>\"", "\[Rule]", 
      "\"\<Flow and conservation of epistemic state across reversible \
operations.\>\""}], ",", 
     RowBox[{
     "\"\<Reversible Subtransaction\>\"", "\[Rule]", 
      "\"\<Inverse operations exist to cleanly abort partial \
transactions.\>\""}], ",", 
     RowBox[{
     "\"\<Truncated Tail Latency\>\"", "\[Rule]", 
      "\"\<Detects success/failure without timeouts via inherent protocol \
semantics.\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "ComponentInteractions", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ComponentInteractions", "[", "component_String", "]"}], ":=", 
   RowBox[{"Lookup", "[", 
    RowBox[{"$DaedaelusArchitecture", ",", "component", ",", 
     RowBox[{"{", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "AethernetGraph", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "AethernetGraph", "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SelfReferencing", "\[Rule]", "False"}], ",", 
       RowBox[{"Exclusions", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"PrincipleTooltips", "\[Rule]", "True"}], ",", 
       RowBox[{"TooltipStyle", "\[Rule]", "\"\<Subsubsection\>\""}]}], "}"}], 
     ",", 
     RowBox[{"Options", "[", "Graph", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AethernetGraph", "[", 
    RowBox[{
     RowBox[{"components", ":", 
      RowBox[{"{", 
       RowBox[{"_String", ".."}], "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"excl", "=", 
        RowBox[{"OptionValue", "[", 
         RowBox[{"AethernetGraph", ",", 
          RowBox[{"{", "opts", "}"}], ",", "Exclusions"}], "]"}]}], ",", 
       "relevant", ",", "deps", ",", "edges", ",", "base", ",", 
       "tooltipStyle", ",", "styledVertices", ",", "graphOpts"}], "}"}], ",", 
     
     RowBox[{
      RowBox[{"relevant", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{"components", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", "excl", "}"}], "]"}]}], "]"}]}], ";", 
      RowBox[{"deps", "=", 
       RowBox[{"Association", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"c", "\[Rule]", 
           RowBox[{"relevant", "\[Intersection]", 
            RowBox[{"ComponentInteractions", "[", "c", "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "relevant"}], "}"}]}], "]"}], "]"}]}], ";", 
      RowBox[{"edges", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"c", "\[DirectedEdge]", "d"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", 
             RowBox[{"Keys", "[", "deps", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"d", ",", 
             RowBox[{"deps", "[", "c", "]"}]}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"TrueQ", "[", 
          RowBox[{"OptionValue", "[", 
           RowBox[{"AethernetGraph", ",", 
            RowBox[{"{", "opts", "}"}], ",", "SelfReferencing"}], "]"}], 
          "]"}]}], ",", 
        RowBox[{"edges", "=", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"edges", ",", 
           RowBox[{"x_", "\[DirectedEdge]", "x_"}]}], "]"}]}]}], "]"}], ";", 
      RowBox[{"graphOpts", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "opts", "}"}], ",", 
         RowBox[{"Options", "[", "Graph", "]"}]}], "]"}]}], ";", 
      RowBox[{"base", "=", 
       RowBox[{"Graph", "[", 
        RowBox[{"edges", ",", "graphOpts"}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"OptionValue", "[", 
          RowBox[{"AethernetGraph", ",", 
           RowBox[{"{", "opts", "}"}], ",", "PrincipleTooltips"}], "]"}], 
         "]"}], ",", 
        RowBox[{
         RowBox[{"tooltipStyle", "=", 
          RowBox[{"OptionValue", "[", 
           RowBox[{"AethernetGraph", ",", 
            RowBox[{"{", "opts", "}"}], ",", "TooltipStyle"}], "]"}]}], ";", 
         RowBox[{"styledVertices", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Tooltip", "[", 
              RowBox[{"#1", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"tooltipStyle", "===", "None"}], ",", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Italic", ",", "Bold"}], "]"}], ",", 
                    "\"\<: \>\"", ",", 
                    RowBox[{"Lookup", "[", 
                    RowBox[{
                    "$DaedaelusPrinciples", ",", "#1", ",", 
                    "\"\<No principle defined.\>\""}], "]"}]}], "}"}], "]"}], 
                 ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Italic", ",", "Bold"}], "]"}], ",", 
                    "\"\<: \>\"", ",", 
                    RowBox[{"Lookup", "[", 
                    RowBox[{
                    "$DaedaelusPrinciples", ",", "#1", ",", 
                    "\"\<No principle defined.\>\""}], "]"}]}], "}"}], "]"}], 
                   ",", "tooltipStyle"}], "]"}]}], "]"}]}], "]"}], "&"}], 
            ")"}], "/@", 
           RowBox[{"VertexList", "[", "base", "]"}]}]}], ";", 
         RowBox[{"Graph", "[", 
          RowBox[{"styledVertices", ",", 
           RowBox[{"EdgeList", "[", "base", "]"}], ",", 
           RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
           "graphOpts"}], "]"}]}], ",", "base"}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"AethernetGraph", "::", "args"}], "MessageName"], "=", 
   "\"\<First argument must be a list of component names.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "AethernetGraphAddPrincipleTooltips", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "AethernetGraphAddPrincipleTooltips", "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"TooltipStyle", "\[Rule]", "\"\<Subsubsection\>\""}], "}"}], 
     ",", 
     RowBox[{"Options", "[", "Graph", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AethernetGraphAddPrincipleTooltips", "[", 
    RowBox[{"gr_Graph", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"style", ",", "styledVertices", ",", "grOpts"}], "}"}], ",", 
     RowBox[{
      RowBox[{"grOpts", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "opts", "}"}], ",", 
         RowBox[{"Options", "[", "Graph", "]"}]}], "]"}]}], ";", 
      RowBox[{"style", "=", 
       RowBox[{"OptionValue", "[", 
        RowBox[{"AethernetGraphAddPrincipleTooltips", ",", 
         RowBox[{"{", "opts", "}"}], ",", "TooltipStyle"}], "]"}]}], ";", 
      RowBox[{"styledVertices", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Tooltip", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"style", "===", "None"}], ",", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"#1", ",", "Italic", ",", "Bold"}], "]"}], ",", 
                 "\"\<: \>\"", ",", 
                 RowBox[{"Lookup", "[", 
                  RowBox[{
                  "$DaedaelusPrinciples", ",", "#1", ",", 
                   "\"\<No principle defined.\>\""}], "]"}]}], "}"}], "]"}], 
              ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Italic", ",", "Bold"}], "]"}], ",", 
                   "\"\<: \>\"", ",", 
                   RowBox[{"Lookup", "[", 
                    RowBox[{
                    "$DaedaelusPrinciples", ",", "#1", ",", 
                    "\"\<No principle defined.\>\""}], "]"}]}], "}"}], "]"}], 
                ",", "style"}], "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "/@", 
        RowBox[{"VertexList", "[", "gr", "]"}]}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{"styledVertices", ",", 
        RowBox[{"EdgeList", "[", "gr", "]"}], ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", "grOpts"}], 
       "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "AethernetGraphAddSpecButtons", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AethernetGraphAddSpecButtons", "[", 
    RowBox[{"gr_Graph", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"buttons", ",", "graphOpts"}], "}"}], ",", 
     RowBox[{
      RowBox[{"graphOpts", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "opts", "}"}], ",", 
         RowBox[{"Options", "[", "Graph", "]"}]}], "]"}]}], ";", 
      RowBox[{"buttons", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Button", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"Hyperlink", "[", 
             RowBox[{"\"\<spec\>\"", ",", 
              RowBox[{
              "URI", "[", 
               "\"\<https://github.com/opencomputeproject/ocp-oae\>\"", 
               "]"}]}], "]"}], ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Frameless\>\""}], ",", 
            RowBox[{"BaseStyle", "\[Rule]", 
             RowBox[{"{", "\"\<Hyperlink\>\"", "}"}]}]}], "]"}], "&"}], ")"}],
         "/@", 
        RowBox[{"VertexList", "[", "gr", "]"}]}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{"buttons", ",", 
        RowBox[{"EdgeList", "[", "gr", "]"}], ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
        "graphOpts"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"eSf", ",", "vSf"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eSf", "[", 
    RowBox[{"g_", ",", "cols_", ",", 
     RowBox[{"thickness_", ":", "0.005"}]}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"edge", ",", "pts"}], "}"}], ",", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p1", "=", 
          RowBox[{
          "pts", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{"p2", "=", 
          RowBox[{
          "pts", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", "ctrl", ",", "curve"}], "}"}], ",", 
       RowBox[{
        RowBox[{"ctrl", "=", 
         RowBox[{
          FractionBox[
           RowBox[{"p1", "+", "p2"}], "2"], "+", 
          RowBox[{"0.2", " ", 
           RowBox[{"Normalize", "[", 
            RowBox[{"RotateLeft", "[", 
             RowBox[{"p2", "-", "p1"}], "]"}], "]"}]}]}]}], ";", 
        RowBox[{"curve", "=", 
         RowBox[{"BezierCurve", "[", 
          RowBox[{"{", 
           RowBox[{"p1", ",", "ctrl", ",", "p2"}], "}"}], "]"}]}], ";", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "thickness", "]"}], ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"curve", ",", "0.5"}], "]"}]}], "}"}]}]}], "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vSf", "[", 
    RowBox[{"g_", ",", "cols_"}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"coord", ",", "name"}], "}"}], ",", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "offset", "}"}], ",", 
       RowBox[{
        RowBox[{"offset", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[Pi]", "2"]}], "<", 
            RowBox[{"ArcTan", "@@", "coord"}], "<", 
            FractionBox["\[Pi]", "2"]}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "0.04"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.04"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
          RowBox[{"FaceForm", "[", 
           RowBox[{"cols", "\[LeftDoubleBracket]", 
            RowBox[{"VertexIndex", "[", 
             RowBox[{"g", ",", "name"}], "]"}], "\[RightDoubleBracket]"}], 
           "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{"coord", ",", 
            RowBox[{"Scaled", "[", "0.02", "]"}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"name", ",", 
              RowBox[{"FontSize", "\[Rule]", "12"}], ",", "Bold"}], "]"}], 
            ",", 
            RowBox[{"coord", "+", "offset"}]}], "]"}]}], "}"}]}]}], "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "AethernetGraphCausalLoopLayout", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "AethernetGraphCausalLoopLayout", "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"VertexColors", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"EdgeThickness", "\[Rule]", "Automatic"}]}], "}"}], ",", 
     RowBox[{"Options", "[", "Graph", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AethernetGraphCausalLoopLayout", "[", 
    RowBox[{"gr_Graph", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cols", ",", "grOpts", ",", "thickness"}], "}"}], ",", 
     RowBox[{
      RowBox[{"cols", "=", 
       RowBox[{"OptionValue", "[", 
        RowBox[{"AethernetGraphCausalLoopLayout", ",", 
         RowBox[{"{", "opts", "}"}], ",", "VertexColors"}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"cols", "===", "Automatic"}], "]"}], ",", 
        RowBox[{
         RowBox[{"cols", "=", 
          RowBox[{
           RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"VertexCount", "[", "gr", "]"}], "]"}]}]}], ";"}]}], 
       "]"}], ";", 
      RowBox[{"grOpts", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "opts", "}"}], ",", 
         RowBox[{"Options", "[", "Graph", "]"}]}], "]"}]}], ";", 
      RowBox[{"thickness", "=", 
       RowBox[{"OptionValue", "[", 
        RowBox[{"AethernetGraphCausalLoopLayout", ",", 
         RowBox[{"{", "opts", "}"}], ",", "EdgeThickness"}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"thickness", "===", "Automatic"}], "]"}], ",", 
        RowBox[{"thickness", "=", "0.005"}]}], "]"}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"EdgeList", "[", "gr", "]"}], ",", "grOpts", ",", 
        RowBox[{"VertexLabels", "\[Rule]", "None"}], ",", 
        RowBox[{"GraphLayout", "\[Rule]", "\"\<CircularEmbedding\>\""}], ",", 
        
        RowBox[{"VertexShapeFunction", "\[Rule]", 
         RowBox[{"vSf", "[", 
          RowBox[{"gr", ",", "cols"}], "]"}]}], ",", 
        RowBox[{"EdgeShapeFunction", "\[Rule]", 
         RowBox[{"eSf", "[", 
          RowBox[{"gr", ",", "cols", ",", "thickness"}], "]"}]}]}], "]"}]}]}],
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<DaedaelusNew`AethernetGraph`\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"coreComponents", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<CELL\>\"", ",", "\"\<LINK\>\"", ",", "\"\<FPGA Substructure\>\"", 
     ",", "\"\<Graph Virtual Machine\>\"", ",", "\"\<N2N Lattice\>\"", ",", 
     "\"\<SAW Protocol Link\>\"", ",", "\"\<Token Dynamics\>\"", ",", 
     "\"\<Reversible Subtransaction\>\""}], "}"}]}], ";"}], "\n", 
 RowBox[{"gBase", "=", 
  RowBox[{"AethernetGraph", "[", 
   RowBox[{"coreComponents", ",", 
    RowBox[{"PrincipleTooltips", "\[Rule]", "False"}], ",", 
    RowBox[{"GraphLayout", "\[Rule]", "\"\<SpringElectricalEmbedding\>\""}], 
    ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<D\[CapitalAE]D\[CapitalAE]LUS Core Component Interactions (base)\>\
\"", ",", "18", ",", "\"\<Panel\>\""}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{"gWithTooltips", "=", 
  RowBox[{"AethernetGraph", "[", 
   RowBox[{"coreComponents", ",", 
    RowBox[{"PrincipleTooltips", "\[Rule]", "True"}], ",", 
    RowBox[{"GraphLayout", "\[Rule]", "\"\<SpringElectricalEmbedding\>\""}], 
    ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<D\[CapitalAE]D\[CapitalAE]LUS Core Component Interactions\>\"", 
       ",", "18", ",", "\"\<Panel\>\""}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{"gSpec", "=", 
  RowBox[{"AethernetGraphAddSpecButtons", "[", 
   RowBox[{"gWithTooltips", ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Interaction Graph with Specification Links\>\"", ",", "18", ",", 
       "\"\<Panel\>\""}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.96296430856054*^9, 3.962964324934998*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"d08092aa-cb77-4384-8451-850d11cc9ea1"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "CELL", "Graph Virtual Machine", "LINK", "N2N Lattice", 
       "FPGA Substructure", "SAW Protocol Link", "Reversible Subtransaction", 
       "Token Dynamics"}, {{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 6}, {2, 1}, {
       2, 5}, {2, 7}, {3, 1}, {3, 6}, {3, 8}, {4, 1}, {4, 3}, {7, 2}, {7, 
       8}, {6, 5}, {8, 3}, {8, 7}}, Null}, {
      GraphLayout -> "SpringElectricalEmbedding", ImageSize -> Large, 
       PlotLabel -> 
       Style["D\[CapitalAE]D\[CapitalAE]LUS Core Component Interactions \
(base)", 18, "Panel"]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
m3k4GveU4b4yh7q5RJh1xouHnIXawRrmOdTDA3P+0B9wQAq0mezQyqHG/G76
10hH4gPvsfvCBdlUY6Uw3y8SX8T1qdOvls6m2jz5VdLkxEboM70IpTOZ1BUP
8nMSx1hobFI8cVYvg5qWu5PvFsnCYEtx3grHdKr+rYASFzUW/A8+7an+/Zzq
kk1zqy5hwrP0Ut+NmmTqR4PTcstKmdD6SfO8XZKCQGudMyWSfPmyR3nna9Pw
1yKlhiZJPa2bxl/sjV/BF5rVSuMs5Dy5tUBl3hskf7603s2ZjaNRghTd7Vm4
eKrR0qWcDSsfytINtGy8mOwdbpDsJ1nZ1DDxWA68nzu8iojlYDzpyyfXyBzs
DN4VJH2GB4I0CgWfHCy4euV9geS8SPbxHwN35MDd4vuQlhkfQeEyVZuis2FT
efGx0ks+SEVnFt9gZ+Latycv7ecLYDMgOb+iDPCz5h2+K+mX5/CE5fXOdPi0
dDyOk/Rz3K8tUN8jDZa5l6c1twsx2FQQxLJNQf1hr/Rnc6SJdqujR1QiBcg+
sHV1n4BCnK+/FRq4XICJwtqVkcMUoiXm22znLD40Zo51PfxJIWQWyIulzfkw
2+FmtLKcQngy9B0+tvPw76biAK10CvFgklb1IYAHlTOZblW3KcR/Hm9LoSCJ
p67VlvWjEK1tLOWIt9NIaw8jHyyWIswKG6o/+nIw1rh+j/1jKaJqiWo7V54D
2VPMGYuCpAjXFbVq7gVs9Gq8D3lrL0XsOttAGEr0xq8yZOt2XSnCftEmWuoc
NoY7g0St0lLE05Ajjq0fWHhkW1D4oI1EkEd6Z8r6s3DiwB/vG1kkgjTnQu0x
LRYqTsXUrLxAIRJ/2G/u6pa8y7dJ17p2Uogd3XGXfb4K8dF2ddImib7+9yfb
eKxECEpEYfqWDjKh7sSP93knhPkpR/+Z6WTC/D6nbjRTiH9817R+OUcmAmtv
LQ2UYIXgTbT7IBPLpwwrKblCbI2ZZxk1h0zEXq5XjvsgxImVp7sqDopwMpa+
XMtDBLvuAOddEn74NrbhYqHkn7KPeT89MVqIYBszE5NIEYLHTR+J1wjRuSfh
x2sJn5tXFdlnfZL0P4z8jVMigvRPL9OeowIEbl/0bdYfEZ6tLmj+JeZjPjkk
vUlGjFaLA3eqk/kQvGG6G28So+PVX1bTRtOgnVym/rpVCL9omwQ5Lhc0pt3p
w45CqPtvXdaXw4XfEst4xxYB8kIzR16d4CL0sd2lbhcBTjZ/r78pz4XAp7nS
spsPx9OGzPzCKcSev93Z6M2H//pC5nGXKWieciguF/CQZ7vvZfXEJPoHrHMP
3ePBrdmjsdaWiQI1c89/Kzl4UqWxWX1oHMXakQqrj0j0NcbCJPvSOOTkopW+
CdnwnB1U+Gb2OJp8N65pTWHjR9mCvWWaY/jh+PR5sDVbUq9OS3nTKA5lzC/q
47HQpr23VcaAATfliCV7clhIGTqQMld/BK4R4WO0MxJ/s6bPen8ZH4FFOoMF
KiRi9oNqWp2mxDflzv40pkMiNtuXPNe4I0BzbkhvlsQnpo3HRitPCvBuyrFg
zFDiW7WcRJfchFjt6qqUvY1E5C7LXyf8IoRs6bzAYQm+QX5q5L5BhKKXRU+f
G5GIbb/6bQLjReCf8GW165OI595fxSe0yYRmbumQeokYmbKWO9UOS/yg48Vb
cVliZIcbJV64SybkJ72q5RPFWEbpSbX4RCbe8OU3pIaLkRefZuE7QSaMKl8Y
OLuL8SOmvpGmSSEUZsQZmO8U4+qQ5gwXJwpxyVz3ULCSGKednbS6r1OIO48K
/13AFOF/AIU5YDs=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[
          BezierCurveBox[{1, {1.542643396178754, 1.5191298489183087`}, 2}], 
          0.026783532927795548`], 
         ArrowBox[
          BezierCurveBox[{1, {0.9173398918194782, 1.3248439897537705`}, 3}], 
          0.026783532927795548`], 
         ArrowBox[
          BezierCurveBox[{1, {0.4541152065436481, 1.461896192534783}, 4}], 
          0.026783532927795548`], 
         ArrowBox[
          BezierCurveBox[{2, {1.3637157169181429`, 1.160415255558253}, 1}], 
          0.026783532927795548`], 
         ArrowBox[
          BezierCurveBox[{2, {2.1372018329639006`, 0.5217335405607965}, 5}], 
          0.026783532927795548`], 
         ArrowBox[
          BezierCurveBox[{2, {2.1298945290522266`, 1.5664081187123473`}, 7}], 
          0.026783532927795548`], 
         ArrowBox[
          BezierCurveBox[{3, {0.7451579755314922, 1.3752123416788755`}, 1}], 
          0.026783532927795548`], ArrowBox[{3, 6}, 0.026783532927795548`], 
         ArrowBox[
          BezierCurveBox[{3, {1.046426585190792, 1.6859903779088379`}, 8}], 
          0.026783532927795548`], 
         ArrowBox[
          BezierCurveBox[{4, {0.45370895679343154`, 1.7604627599948612`}, 1}],
           0.026783532927795548`], ArrowBox[{4, 3}, 0.026783532927795548`], 
         ArrowBox[
          BezierCurveBox[{5, {1.786039273503205, 0.5460144643471443}, 2}], 
          0.026783532927795548`], 
         ArrowBox[
          BezierCurveBox[{5, {1.4684488423397, -0.14947791381359163`}, 6}], 
          0.026783532927795548`], 
         ArrowBox[
          BezierCurveBox[{6, {1.4687911335962738`, 0.1505186876559336}, 5}], 
          0.026783532927795548`], 
         ArrowBox[
          BezierCurveBox[{7, {2.4002371181523037`, 1.391093974544243}, 2}], 
          0.026783532927795548`], 
         ArrowBox[
          BezierCurveBox[{7, {2.0666864949699777`, 1.7945392614244586`}, 8}], 
          0.026783532927795548`], 
         ArrowBox[
          BezierCurveBox[{8, {1.3442633279814322`, 1.3961331377684278`}, 3}], 
          0.026783532927795548`], 
         ArrowBox[
          BezierCurveBox[{8, {2.1009264116331217`, 2.089079110737325}, 7}], 
          0.026783532927795548`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.026783532927795548], DiskBox[2, 0.026783532927795548], 
         DiskBox[3, 0.026783532927795548], DiskBox[4, 0.026783532927795548], 
         DiskBox[5, 0.026783532927795548], DiskBox[6, 0.026783532927795548], 
         DiskBox[7, 0.026783532927795548], 
         DiskBox[8, 0.026783532927795548]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox[
    StyleBox[
    "\"D\[CapitalAE]D\[CapitalAE]LUS Core Component Interactions (base)\"", 
     18, "Panel", StripOnInput -> False], TraditionalForm]]], "Output",
 CellChangeTimes->{{3.962964314434442*^9, 3.9629643251754932`*^9}, 
   3.962974711065551*^9, 3.96297819375626*^9, 3.962978334522572*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"be53d69a-ae3c-44bd-ad5a-956a3f4af422"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "CELL", "Graph Virtual Machine", "LINK", "N2N Lattice", 
       "FPGA Substructure", "SAW Protocol Link", "Reversible Subtransaction", 
       "Token Dynamics"}, {{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 6}, {2, 1}, {
       2, 5}, {2, 7}, {3, 1}, {3, 6}, {3, 8}, {4, 1}, {4, 3}, {7, 2}, {7, 
       8}, {6, 5}, {8, 3}, {8, 7}}, Null}, {
      AnnotationRules -> {"LINK" -> {Tooltip -> Style[
             Row[{
               Style["LINK", Italic, Bold], ": ", 
               "A LINK is a bidirectional communication entity between two \
cells."}], "Subsubsection"]}, "CELL" -> {Tooltip -> Style[
             Row[{
               Style["CELL", Italic, Bold], ": ", 
               "A CELL is an autonomous unit of compute, storage, and packet \
processing."}], "Subsubsection"]}, "SAW Protocol Link" -> {Tooltip -> Style[
             Row[{
               Style["SAW Protocol Link", Italic, Bold], ": ", 
               "Stop-and-Wait link with transfer-time longer than cable, \
avoiding bandwidth degradation."}], "Subsubsection"]}, 
         "Token Dynamics" -> {Tooltip -> Style[
             Row[{
               Style["Token Dynamics", Italic, Bold], ": ", 
               "Flow and conservation of epistemic state across reversible \
operations."}], "Subsubsection"]}, 
         "Reversible Subtransaction" -> {Tooltip -> Style[
             Row[{
               Style["Reversible Subtransaction", Italic, Bold], ": ", 
               "Inverse operations exist to cleanly abort partial \
transactions."}], "Subsubsection"]}, 
         "Graph Virtual Machine" -> {Tooltip -> Style[
             Row[{
               Style["Graph Virtual Machine", Italic, Bold], ": ", 
               "The GVM routes and controls within the FPGA Substructure with \
protected semantics."}], "Subsubsection"]}, "N2N Lattice" -> {Tooltip -> Style[
             Row[{
               Style["N2N Lattice", Italic, Bold], ": ", 
               "Manage on a Tree, Compute on a Graph: relative address-free \
routing."}], "Subsubsection"]}, "FPGA Substructure" -> {Tooltip -> Style[
             Row[{
               Style["FPGA Substructure", Italic, Bold], ": ", 
               "Provides atomic low-latency protocol support without \
heartbeats."}], "Subsubsection"]}}, GraphLayout -> 
       "SpringElectricalEmbedding", ImageSize -> Large, PlotLabel -> 
       Style["D\[CapitalAE]D\[CapitalAE]LUS Core Component Interactions", 18, 
         "Panel"], VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[
         BezierCurveBox[{{0.9078241633370958, 1.6117970995685993`}, {
          1.542643396178754, 1.5191298489183087`}, {1.9985349497597888`, 
          1.0677480049079675`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{0.9078241633370958, 1.6117970995685993`}, {
          0.9173398918194782, 1.3248439897537705`}, {0.7546737040138766, 
          1.0882592318640465`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{0.9078241633370958, 1.6117970995685993`}, {
          0.4541152065436481, 1.461896192534783}, {0., 1.6105618529610477`}}],
          0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.9985349497597888`, 1.0677480049079675`}, {
          1.3637157169181429`, 1.160415255558253}, {0.9078241633370958, 
          1.6117970995685993`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.9985349497597888`, 1.0677480049079675`}, {
          2.1372018329639006`, 0.5217335405607965}, {1.9247061567073223`, 
          0.}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.9985349497597888`, 1.0677480049079675`}, {
          2.1298945290522266`, 1.5664081187123473`}, {2.5315966974447215`, 
          1.8897540883485817`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{0.7546737040138766, 1.0882592318640465`}, {
          0.7451579755314922, 1.3752123416788755`}, {0.9078241633370958, 
          1.6117970995685993`}}], 0.026783532927795548`], 
        ArrowBox[{{0.7546737040138766, 1.0882592318640465`}, {
         1.012533819228651, 0.0010407738423419133`}}, 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{0.7546737040138766, 1.0882592318640465`}, {
          1.046426585190792, 1.6859903779088379`}, {1.636016209158356, 
          1.9938642838132257`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{0., 1.6105618529610477`}, {0.45370895679343154`, 
          1.7604627599948612`}, {0.9078241633370958, 1.6117970995685993`}}], 
         0.026783532927795548`], 
        ArrowBox[{{0., 1.6105618529610477`}, {0.7546737040138766, 
         1.0882592318640465`}}, 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.9247061567073223`, 0.}, {1.786039273503205, 
          0.5460144643471443}, {1.9985349497597888`, 1.0677480049079675`}}], 
         0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.9247061567073223`, 0.}, {
          1.4684488423397, -0.14947791381359163`}, {1.012533819228651, 
          0.0010407738423419133`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.012533819228651, 0.0010407738423419133`}, {
          1.4687911335962738`, 0.1505186876559336}, {1.9247061567073223`, 
          0.}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{2.5315966974447215`, 1.8897540883485817`}, {
          2.4002371181523037`, 1.391093974544243}, {1.9985349497597888`, 
          1.0677480049079675`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{2.5315966974447215`, 1.8897540883485817`}, {
          2.0666864949699777`, 1.7945392614244586`}, {1.636016209158356, 
          1.9938642838132257`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.636016209158356, 1.9938642838132257`}, {
          1.3442633279814322`, 1.3961331377684278`}, {0.7546737040138766, 
          1.0882592318640465`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.636016209158356, 1.9938642838132257`}, {
          2.1009264116331217`, 2.089079110737325}, {2.5315966974447215`, 
          1.8897540883485817`}}], 0.026783532927795548`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         TagBox[
          
          TooltipBox[
           DiskBox[{0.9078241633370958, 1.6117970995685993`}, 
            0.026783532927795548],
           StyleBox[
            TemplateBox[{
              StyleBox["\"CELL\"", Italic, Bold, StripOnInput -> False], 
              "\": \"", 
              "\"A CELL is an autonomous unit of compute, storage, and packet \
processing.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
           TooltipStyle->"TextStyling"],
          Annotation[#, 
           Style[
            Row[{
              Style["CELL", Italic, Bold], ": ", 
              "A CELL is an autonomous unit of compute, storage, and packet \
processing."}], "Subsubsection"], "Tooltip"]& ], 
         InsetBox["\<\"CELL\"\>", {0.9163968712014418, 1.6483009301431761}, 
          ImageScaled[{0.32853187880157264, -0.23013607184735185}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          
          TooltipBox[
           DiskBox[{1.9985349497597888`, 1.0677480049079675`}, 
            0.026783532927795548],
           StyleBox[
            TemplateBox[{
              StyleBox[
              "\"Graph Virtual Machine\"", Italic, Bold, StripOnInput -> 
               False], "\": \"", 
              "\"The GVM routes and controls within the FPGA Substructure \
with protected semantics.\""}, "RowDefault"], "Subsubsection", StripOnInput -> 
            False],
           TooltipStyle->"TextStyling"],
          Annotation[#, 
           Style[
            Row[{
              Style["Graph Virtual Machine", Italic, Bold], ": ", 
              "The GVM routes and controls within the FPGA Substructure with \
protected semantics."}], "Subsubsection"], "Tooltip"]& ], 
         InsetBox["\<\"Graph Virtual Machine\"\>", {2.0341026599745846, 1.055875391176309},
           ImageScaled[{-0.21141213982408802, 0.7374716136950102}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          
          TooltipBox[
           DiskBox[{0.7546737040138766, 1.0882592318640465`}, 
            0.026783532927795548],
           StyleBox[
            TemplateBox[{
              StyleBox["\"LINK\"", Italic, Bold, StripOnInput -> False], 
              "\": \"", 
              "\"A LINK is a bidirectional communication entity between two \
cells.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
           TooltipStyle->"TextStyling"],
          Annotation[#, 
           Style[
            Row[{
              Style["LINK", Italic, Bold], ": ", 
              
              "A LINK is a bidirectional communication entity between two \
cells."}], "Subsubsection"], "Tooltip"]& ], 
         InsetBox["\<\"LINK\"\>", {0.7237078334761904, 1.067113645360284}, 
          ImageScaled[{1.1193678504377567, 0.9229461736960305}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          
          TooltipBox[DiskBox[{0., 1.6105618529610477`}, 0.026783532927795548],
           
           StyleBox[
            TemplateBox[{
              StyleBox[
              "\"N2N Lattice\"", Italic, Bold, StripOnInput -> False], 
              "\": \"", 
              "\"Manage on a Tree, Compute on a Graph: relative address-free \
routing.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
           TooltipStyle->"TextStyling"],
          Annotation[#, 
           Style[
            Row[{
              Style["N2N Lattice", Italic, Bold], ": ", 
              "Manage on a Tree, Compute on a Graph: relative address-free \
routing."}], "Subsubsection"], "Tooltip"]& ], 
         InsetBox["\<\"N2N Lattice\"\>", {-0.03579975917427203, 1.6217152475030232},
           ImageScaled[{1.216053496993501, 0.2769139416203287}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          
          TooltipBox[DiskBox[{1.9247061567073223`, 0.}, 0.026783532927795548],
           
           StyleBox[
            TemplateBox[{
              StyleBox[
              "\"FPGA Substructure\"", Italic, Bold, StripOnInput -> False], 
              "\": \"", 
              "\"Provides atomic low-latency protocol support without \
heartbeats.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
           TooltipStyle->"TextStyling"],
          Annotation[#, 
           Style[
            Row[{
              Style["FPGA Substructure", Italic, Bold], ": ", 
              "Provides atomic low-latency protocol support without \
heartbeats."}], "Subsubsection"], "Tooltip"]& ], 
         InsetBox["\<\"FPGA Substructure\"\>", {1.950274043791112, -0.027428162840690357},
           ImageScaled[{-0.01139938869308943, 1.0486079339968886}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          
          TooltipBox[
           DiskBox[{1.012533819228651, 0.0010407738423419133`}, 
            0.026783532927795548],
           StyleBox[
            TemplateBox[{
              StyleBox[
              "\"SAW Protocol Link\"", Italic, Bold, StripOnInput -> False], 
              "\": \"", 
              "\"Stop-and-Wait link with transfer-time longer than cable, \
avoiding bandwidth degradation.\""}, "RowDefault"], "Subsubsection", 
            StripOnInput -> False],
           TooltipStyle->"TextStyling"],
          Annotation[#, 
           Style[
            Row[{
              Style["SAW Protocol Link", Italic, Bold], ": ", 
              "Stop-and-Wait link with transfer-time longer than cable, \
avoiding bandwidth degradation."}], "Subsubsection"], "Tooltip"]& ], 
         InsetBox["\<\"SAW Protocol Link\"\>", {0.9892624695058471, -0.028361016049156165},
           ImageScaled[{0.9654649006898335, 1.0880836898144715}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          
          TooltipBox[
           DiskBox[{2.5315966974447215`, 1.8897540883485817`}, 
            0.026783532927795548],
           StyleBox[
            TemplateBox[{
              StyleBox[
              "\"Reversible Subtransaction\"", Italic, Bold, StripOnInput -> 
               False], "\": \"", 
              "\"Inverse operations exist to cleanly abort partial \
transactions.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
           TooltipStyle->"TextStyling"],
          Annotation[#, 
           Style[
            Row[{
              Style["Reversible Subtransaction", Italic, Bold], ": ", 
              "Inverse operations exist to cleanly abort partial \
transactions."}], "Subsubsection"], "Tooltip"]& ], 
         InsetBox["\<\"Reversible Subtransaction\"\>", {2.565524079689926, 1.9057213580191492},
           ImageScaled[{-0.17860290853500949, 0.1806285978240606}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          
          TooltipBox[
           DiskBox[{1.636016209158356, 1.9938642838132257`}, 
            0.026783532927795548],
           StyleBox[
            TemplateBox[{
              StyleBox[
              "\"Token Dynamics\"", Italic, Bold, StripOnInput -> False], 
              "\": \"", 
              "\"Flow and conservation of epistemic state across reversible \
operations.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
           TooltipStyle->"TextStyling"],
          Annotation[#, 
           Style[
            Row[{
              Style["Token Dynamics", Italic, Bold], ": ", 
              "Flow and conservation of epistemic state across reversible \
operations."}], "Subsubsection"], "Tooltip"]& ], 
         InsetBox["\<\"Token Dynamics\"\>", {1.6234541117461236, 2.029194365547499},
           ImageScaled[{0.7512624103925993, -0.20665918314538367}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox[
    StyleBox[
    "\"D\[CapitalAE]D\[CapitalAE]LUS Core Component Interactions\"", 18, 
     "Panel", StripOnInput -> False], TraditionalForm]]], "Output",
 CellChangeTimes->{{3.962964314434442*^9, 3.9629643251754932`*^9}, 
   3.962974711065551*^9, 3.96297819375626*^9, 3.96297833457743*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"1871f7a7-0c21-419d-b55d-135afe12cf25"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "CELL", "Graph Virtual Machine", "LINK", "N2N Lattice", 
       "FPGA Substructure", "SAW Protocol Link", "Reversible Subtransaction", 
       "Token Dynamics"}, {{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 6}, {2, 1}, {
       2, 5}, {2, 7}, {3, 1}, {3, 6}, {3, 8}, {4, 1}, {4, 3}, {7, 2}, {7, 
       8}, {6, 5}, {8, 3}, {8, 7}}, Null}, {
      AnnotationRules -> {"LINK" -> {Button -> HoldComplete[
             Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Appearance -> 
             "Frameless", BaseStyle -> {"Hyperlink"}]}, 
         "CELL" -> {Button -> HoldComplete[
             Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Appearance -> 
             "Frameless", BaseStyle -> {"Hyperlink"}]}, 
         "SAW Protocol Link" -> {Button -> HoldComplete[
             Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Appearance -> 
             "Frameless", BaseStyle -> {"Hyperlink"}]}, 
         "Token Dynamics" -> {Button -> HoldComplete[
             Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Appearance -> 
             "Frameless", BaseStyle -> {"Hyperlink"}]}, 
         "Reversible Subtransaction" -> {Button -> HoldComplete[
             Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Appearance -> 
             "Frameless", BaseStyle -> {"Hyperlink"}]}, 
         "Graph Virtual Machine" -> {Button -> HoldComplete[
             Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Appearance -> 
             "Frameless", BaseStyle -> {"Hyperlink"}]}, 
         "N2N Lattice" -> {Button -> HoldComplete[
             Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Appearance -> 
             "Frameless", BaseStyle -> {"Hyperlink"}]}, 
         "FPGA Substructure" -> {Button -> HoldComplete[
             Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Appearance -> 
             "Frameless", BaseStyle -> {"Hyperlink"}]}}, ImageSize -> Large, 
       PlotLabel -> 
       Style["Interaction Graph with Specification Links", 18, "Panel"], 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[
         BezierCurveBox[{{0.9078241633370958, 1.6117970995685993`}, {
          1.542643396178754, 1.5191298489183087`}, {1.9985349497597888`, 
          1.0677480049079675`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{0.9078241633370958, 1.6117970995685993`}, {
          0.9173398918194782, 1.3248439897537705`}, {0.7546737040138766, 
          1.0882592318640465`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{0.9078241633370958, 1.6117970995685993`}, {
          0.4541152065436481, 1.461896192534783}, {0., 1.6105618529610477`}}],
          0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.9985349497597888`, 1.0677480049079675`}, {
          1.3637157169181429`, 1.160415255558253}, {0.9078241633370958, 
          1.6117970995685993`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.9985349497597888`, 1.0677480049079675`}, {
          2.1372018329639006`, 0.5217335405607965}, {1.9247061567073223`, 
          0.}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.9985349497597888`, 1.0677480049079675`}, {
          2.1298945290522266`, 1.5664081187123473`}, {2.5315966974447215`, 
          1.8897540883485817`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{0.7546737040138766, 1.0882592318640465`}, {
          0.7451579755314922, 1.3752123416788755`}, {0.9078241633370958, 
          1.6117970995685993`}}], 0.026783532927795548`], 
        ArrowBox[{{0.7546737040138766, 1.0882592318640465`}, {
         1.012533819228651, 0.0010407738423419133`}}, 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{0.7546737040138766, 1.0882592318640465`}, {
          1.046426585190792, 1.6859903779088379`}, {1.636016209158356, 
          1.9938642838132257`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{0., 1.6105618529610477`}, {0.45370895679343154`, 
          1.7604627599948612`}, {0.9078241633370958, 1.6117970995685993`}}], 
         0.026783532927795548`], 
        ArrowBox[{{0., 1.6105618529610477`}, {0.7546737040138766, 
         1.0882592318640465`}}, 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.9247061567073223`, 0.}, {1.786039273503205, 
          0.5460144643471443}, {1.9985349497597888`, 1.0677480049079675`}}], 
         0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.9247061567073223`, 0.}, {
          1.4684488423397, -0.14947791381359163`}, {1.012533819228651, 
          0.0010407738423419133`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.012533819228651, 0.0010407738423419133`}, {
          1.4687911335962738`, 0.1505186876559336}, {1.9247061567073223`, 
          0.}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{2.5315966974447215`, 1.8897540883485817`}, {
          2.4002371181523037`, 1.391093974544243}, {1.9985349497597888`, 
          1.0677480049079675`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{2.5315966974447215`, 1.8897540883485817`}, {
          2.0666864949699777`, 1.7945392614244586`}, {1.636016209158356, 
          1.9938642838132257`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.636016209158356, 1.9938642838132257`}, {
          1.3442633279814322`, 1.3961331377684278`}, {0.7546737040138766, 
          1.0882592318640465`}}], 0.026783532927795548`], 
        ArrowBox[
         BezierCurveBox[{{1.636016209158356, 1.9938642838132257`}, {
          2.1009264116331217`, 2.089079110737325}, {2.5315966974447215`, 
          1.8897540883485817`}}], 0.026783532927795548`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         TagBox[
          DiskBox[{0.9078241633370958, 1.6117970995685993`}, 
           0.026783532927795548],
          EventHandlerTag[{"MouseClicked" :> Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         InsetBox["\<\"CELL\"\>", 
          Offset[{2, 2}, {0.9346076962648914, 1.6385806324963947}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          DiskBox[{1.9985349497597888`, 1.0677480049079675`}, 
           0.026783532927795548],
          EventHandlerTag[{"MouseClicked" :> Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         InsetBox["\<\"Graph Virtual Machine\"\>", 
          Offset[{2, 2}, {2.0253184826875845, 1.094531537835763}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          DiskBox[{0.7546737040138766, 1.0882592318640465`}, 
           0.026783532927795548],
          EventHandlerTag[{"MouseClicked" :> Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         InsetBox["\<\"LINK\"\>", 
          Offset[{2, 2}, {0.7814572369416721, 1.115042764791842}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[DiskBox[{0., 1.6105618529610477`}, 0.026783532927795548],
          EventHandlerTag[{"MouseClicked" :> Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         InsetBox["\<\"N2N Lattice\"\>", 
          Offset[{2, 2}, {0.026783532927795548, 1.6373453858888432}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[DiskBox[{1.9247061567073223`, 0.}, 0.026783532927795548],
          EventHandlerTag[{"MouseClicked" :> Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         InsetBox["\<\"FPGA Substructure\"\>", 
          Offset[{2, 2}, {1.9514896896351177, 0.026783532927795548}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          DiskBox[{1.012533819228651, 0.0010407738423419133`}, 
           0.026783532927795548],
          EventHandlerTag[{"MouseClicked" :> Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         InsetBox["\<\"SAW Protocol Link\"\>", 
          Offset[{2, 2}, {1.0393173521564465, 0.02782430677013746}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          DiskBox[{2.5315966974447215`, 1.8897540883485817`}, 
           0.026783532927795548],
          EventHandlerTag[{"MouseClicked" :> Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         InsetBox["\<\"Reversible Subtransaction\"\>", 
          Offset[{2, 2}, {2.558380230372517, 1.9165376212763772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          DiskBox[{1.636016209158356, 1.9938642838132257`}, 
           0.026783532927795548],
          EventHandlerTag[{"MouseClicked" :> Hyperlink["spec", 
              DaedaelusNew`AethernetGraph`Private`URI[
              "https://github.com/opencomputeproject/ocp-oae"]], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         InsetBox["\<\"Token Dynamics\"\>", 
          Offset[{2, 2}, {1.6627997420861516, 2.0206478167410213}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox[
    StyleBox[
    "\"Interaction Graph with Specification Links\"", 18, "Panel", 
     StripOnInput -> False], TraditionalForm]]], "Output",
 CellChangeTimes->{{3.962964314434442*^9, 3.9629643251754932`*^9}, 
   3.962974711065551*^9, 3.96297819375626*^9, 3.9629783345974007`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"46cdf8ed-fff4-4ad6-acf5-2ea2dfde46f9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clos (Fat-Tree) Network Topology", "Section",
 CellChangeTimes->{{3.9629599412040358`*^9, 3.9629599418125887`*^9}, {
  3.962960029036481*^9, 3.9629600299441223`*^9}, {3.962960241116858*^9, 
  3.962960242381179*^9}},ExpressionUUID->"9d4402cc-e578-44d5-b43a-\
a22c8df5d4b7"],

Cell[CellGroupData[{

Cell["\<\
The Clos network (often implemented as a folded Clos or fat-tree in data \
centers) is a hierarchical, multi-stage topology. In the typical spine-leaf \
design, each rack has a Top-of-Rack switch (leaf), and these connect up to \
one or more spine switches. Servers connect only to their ToR switch, and all \
inter-rack traffic must ascend to a spine and then descend to the destination \
rack. This architecture is prized for its scalability and bandwidth: it can \
support many servers with nonblocking or high-bandwidth paths by using \
multiple uplinks and spine switches \
(https://synchronet.net/what-is-clos-architecture/#:~:text=Understanding%\
20the%20Basics%20of%20Clos,Network & \
https://packetpushers.net/blog/demystifying-dcn-topologies-clos-fat-trees-\
part2/#:~:text=Fat,Tree). Clos networks also introduce some path redundancy \
\[Dash] for example, there are often multiple spine switches, so a given leaf \
can reach another leaf via any of several spines. Indeed, Clos networks are \
considered fault-tolerant to a degree because data has multiple paths; even \
if one uplink or spine fails, traffic can often be rerouted through another \
path (https://synchronet.net/what-is-clos-architecture/#:~:text=How%20do%\
20Clos%20Networks%20Support,Scalability%20and%20Fault%20Tolerance). However, \
this redundancy is limited to certain layers. The topology still resembles an \
inverted tree, so certain failures can isolate part of the network. For \
instance, if a ToR switch fails, all servers under it lose connectivity (a \
single point of failure for that pod). If enough spine links or spines fail, \
large portions of the network may get partitioned. Thus, a Clos is more \
decentralized than a single central hub, but it is not as fully resilient as \
a mesh \[Dash] as Baran noted, even a \[OpenCurlyDoubleQuote]decentralized\
\[CloseCurlyDoubleQuote] hierarchical network can be brought down by \
destroying a small number of crucial nodes or links \
(https://www.rand.org/pubs/research_memoranda/RM3420.html#:~:text=Figure%201,\
Distributed%20Networks & \
https://www.rand.org/pubs/research_memoranda/RM3420.html#:~:text=II,Network). \
The Clos design favors ease of control and scaling, but it sacrifices some \
fault tolerance compared to a true distributed lattice. \
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.962960252852105*^9, 
  3.962960303871333*^9}},ExpressionUUID->"a184a953-5758-4501-a1b6-\
9b0c810ad03c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"eSf", ",", "vSf"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eSf", "[", 
    RowBox[{"g_Graph", ",", "cols_", ",", 
     RowBox[{"edgeThickness_", ":", "Thin"}], ",", 
     RowBox[{"firstHalfEdgeFunc_", ":", "Line"}], ",", 
     RowBox[{"secondHalfEdgeFunc_", ":", "Arrow"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "vertexColorAssociation", "}"}], ",", 
     RowBox[{
      RowBox[{"vertexColorAssociation", "=", 
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"VertexList", "[", "g", "]"}], "\[Rule]", "cols"}], "]"}]}], 
      ";", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"edge", ",", "pts"}], "}"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"pts", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x_", "?", "NumericQ"}], ",", 
                RowBox[{"y_", "?", "NumericQ"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x2_", "?", "NumericQ"}], ",", 
                RowBox[{"y2_", "?", "NumericQ"}]}], "}"}]}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "p0", ",", "p1", ",", "mid", ",", "dir", ",", "perp", ",", 
              "bulge", ",", "control", ",", "firstSegment", ",", 
              "secondSegment"}], "}"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p0", ",", "p1"}], "}"}], "=", "pts"}], ";", 
             RowBox[{"mid", "=", 
              FractionBox[
               RowBox[{"p0", "+", "p1"}], "2"]}], ";", 
             RowBox[{"dir", "=", 
              RowBox[{"p1", "-", "p0"}]}], ";", 
             RowBox[{"perp", "=", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Last", "[", "dir", "]"}]}], ",", 
                    RowBox[{"First", "[", "dir", "]"}]}], "}"}], "]"}], 
                 "\[Equal]", "0"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                FractionBox[
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Last", "[", "dir", "]"}]}], ",", 
                   RowBox[{"First", "[", "dir", "]"}]}], "}"}], 
                 RowBox[{"Norm", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Last", "[", "dir", "]"}]}], ",", 
                    RowBox[{"First", "[", "dir", "]"}]}], "}"}], "]"}]]}], 
               "]"}]}], ";", 
             RowBox[{"bulge", "=", 
              RowBox[{"0.15", " ", 
               RowBox[{"Norm", "[", "dir", "]"}]}]}], ";", 
             RowBox[{"control", "=", 
              RowBox[{"mid", "+", 
               RowBox[{"perp", " ", "bulge"}]}]}], ";", 
             RowBox[{"firstSegment", "=", 
              RowBox[{"BezierCurve", "[", 
               RowBox[{"{", 
                RowBox[{"p0", ",", "control", ",", "mid"}], "}"}], "]"}]}], 
             ";", 
             RowBox[{"secondSegment", "=", 
              RowBox[{"BezierCurve", "[", 
               RowBox[{"{", 
                RowBox[{"mid", ",", "control", ",", "p1"}], "}"}], "]"}]}], 
             ";", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"firstHalfEdgeFunc", "[", "firstSegment", "]"}], ",", 
               RowBox[{"secondHalfEdgeFunc", "[", "secondSegment", "]"}]}], 
              "}"}]}]}], "]"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vSf", "[", 
    RowBox[{"g_Graph", ",", "cols_", ",", 
     RowBox[{"pointSize_", ":", "Large"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "vertexColorAssociation", "}"}], ",", 
     RowBox[{
      RowBox[{"vertexColorAssociation", "=", 
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"VertexList", "[", "g", "]"}], "\[Rule]", "cols"}], "]"}]}], 
      ";", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"coords", ",", "v"}], "}"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"coords", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x_", "?", "NumericQ"}], ",", 
              RowBox[{"y_", "?", "NumericQ"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"col", ",", "offset"}], "}"}], ",", 
            RowBox[{
             RowBox[{"col", "=", 
              RowBox[{"Lookup", "[", 
               RowBox[{"vertexColorAssociation", ",", "v", ",", 
                RowBox[{"GrayLevel", "[", "0.5", "]"}]}], "]"}]}], ";", 
             RowBox[{"offset", "=", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["\[Pi]", "2"]}], "<", 
                 RowBox[{"ArcTan", "@@", "coords"}], "<", 
                 FractionBox["\[Pi]", "2"]}], ",", "Left", ",", "Right"}], 
               "]"}]}], ";", 
             RowBox[{"{", 
              RowBox[{"col", ",", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Framed", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"FrameStyle", "\[Rule]", "None"}]}], "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".035", "]"}]}]}], "]"}], ",", 
                 "coords", ",", 
                 RowBox[{"{", 
                  RowBox[{"offset", ",", "Center"}], "}"}]}], "]"}], ",", 
               RowBox[{"PointSize", "[", "pointSize", "]"}], ",", 
               RowBox[{"Point", "[", "coords", "]"}]}], "}"}]}]}], "]"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "AethernetGraphCausalLoopLayout", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "AethernetGraphCausalLoopLayout", "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<VertexColors\>\"", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"\"\<EdgeThickness\>\"", "\[Rule]", "Automatic"}]}], "}"}], 
     ",", 
     RowBox[{"Options", "[", "Graph", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AethernetGraphCausalLoopLayout", "[", 
    RowBox[{"gr_Graph", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cols", ",", "resolvedCols", ",", "grOpts", ",", "edgeThickness", ",", 
       "baseEdges"}], "}"}], ",", 
     RowBox[{
      RowBox[{"cols", "=", 
       RowBox[{"OptionValue", "[", "\"\<VertexColors\>\"", "]"}]}], ";", 
      RowBox[{"resolvedCols", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrueQ", "[", 
          RowBox[{"cols", "===", "Automatic"}], "]"}], ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "97", "]"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"VertexCount", "[", "gr", "]"}], "]"}]}], ",", "cols"}], 
        "]"}]}], ";", 
      RowBox[{"grOpts", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "opts", "}"}], ",", 
         RowBox[{"Options", "[", "Graph", "]"}]}], "]"}]}], ";", 
      RowBox[{"edgeThickness", "=", 
       RowBox[{"OptionValue", "[", "\"\<EdgeThickness\>\"", "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"edgeThickness", "===", "Automatic"}], "]"}], ",", 
        RowBox[{"edgeThickness", "=", "Medium"}]}], "]"}], ";", 
      RowBox[{"baseEdges", "=", 
       RowBox[{"EdgeList", "[", "gr", "]"}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{"baseEdges", ",", 
        RowBox[{"Sequence", "@@", "grOpts"}], ",", 
        RowBox[{"VertexLabels", "\[Rule]", "None"}], ",", 
        RowBox[{"GraphLayout", "\[Rule]", "\"\<CircularEmbedding\>\""}], ",", 
        
        RowBox[{"VertexShapeFunction", "\[Rule]", 
         RowBox[{"vSf", "[", 
          RowBox[{"gr", ",", "resolvedCols", ",", "Large"}], "]"}]}], ",", 
        RowBox[{"EdgeShapeFunction", "\[Rule]", 
         RowBox[{"eSf", "[", 
          RowBox[{
          "gr", ",", "resolvedCols", ",", "edgeThickness", ",", "Line", ",", 
           "Arrow"}], "]"}]}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"AethernetGraphCausalLoopLayout", "[", 
  RowBox[{"g0", ",", 
   RowBox[{"\"\<VertexColors\>\"", "\[Rule]", 
    RowBox[{
     RowBox[{"ColorData", "[", "\"\<Atoms\>\"", "]"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"VertexCount", "[", "g0", "]"}], "]"}]}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Causal Loop Visualization\>\"", ",", "18", ",", "\"\<Panel\>\""}], 
     "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.962964344525716*^9, 3.9629643552516813`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"c8354f97-86fb-439c-a0d2-c0264b5f6f15"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "CELL", "LINK", "Graph Virtual Machine", "N2N Lattice", 
       "FPGA Substructure", "SAW Protocol Link", "Reversible Subtransaction", 
       "Token Dynamics"}, {{{1, 2}, {1, 3}, {1, 4}, {5, 3}, {5, 6}, {3, 5}, {
       3, 7}, {3, 1}, {2, 1}, {2, 6}, {2, 8}, {4, 1}, {4, 2}, {7, 8}, {7, 
       3}, {6, 5}, {8, 2}, {8, 7}}, Null}, {EdgeShapeFunction -> {
         Function[{$CellContext`edge$, $CellContext`pts$}, 
          If[
           MatchQ[$CellContext`pts$, {{
              PatternTest[
               Pattern[$CellContext`x, 
                Blank[]], NumericQ], 
              PatternTest[
               Pattern[$CellContext`y, 
                Blank[]], NumericQ]}, {
              PatternTest[
               Pattern[$CellContext`x2, 
                Blank[]], NumericQ], 
              PatternTest[
               Pattern[$CellContext`y2, 
                Blank[]], NumericQ]}}], 
           
           Module[{$CellContext`p0$, $CellContext`p1$, $CellContext`mid$, \
$CellContext`dir$, $CellContext`perp$, $CellContext`bulge$, \
$CellContext`control$, $CellContext`firstSegment$, \
$CellContext`secondSegment$}, {$CellContext`p0$, $CellContext`p1$} = \
$CellContext`pts$; $CellContext`mid$ = ($CellContext`p0$ + $CellContext`p1$)/
              2; $CellContext`dir$ = $CellContext`p1$ - $CellContext`p0$; \
$CellContext`perp$ = If[Norm[{-Last[$CellContext`dir$], 
                  First[$CellContext`dir$]}] == 0, {0, 
               0}, {-Last[$CellContext`dir$], 
                 First[$CellContext`dir$]}/Norm[{-Last[$CellContext`dir$], 
                 First[$CellContext`dir$]}]]; $CellContext`bulge$ = 
             0.15 Norm[$CellContext`dir$]; $CellContext`control$ = \
$CellContext`mid$ + $CellContext`perp$ $CellContext`bulge$; \
$CellContext`firstSegment$ = 
             BezierCurve[{$CellContext`p0$, $CellContext`control$, \
$CellContext`mid$}]; $CellContext`secondSegment$ = 
             BezierCurve[{$CellContext`mid$, $CellContext`control$, \
$CellContext`p1$}]; {
              Line[$CellContext`firstSegment$], 
              Arrow[$CellContext`secondSegment$]}], {}]]}, GraphLayout -> 
       "CircularEmbedding", ImageSize -> 800, PlotLabel -> 
       Style["Causal Loop Visualization", 18, "Panel"], 
       VertexLabels -> {None}, VertexShapeFunction -> {
         Function[{$CellContext`coords$, $CellContext`v$}, 
          If[
           MatchQ[$CellContext`coords$, {
             PatternTest[
              Pattern[$CellContext`x, 
               Blank[]], NumericQ], 
             PatternTest[
              Pattern[$CellContext`y, 
               Blank[]], NumericQ]}], 
           
           Module[{$CellContext`col$, $CellContext`offset$}, \
$CellContext`col$ = 
             Lookup[$CellContext`vertexColorAssociation$5221, $CellContext`v$, 
               GrayLevel[0.5]]; $CellContext`offset$ = 
             If[-(Pi/2) < Apply[ArcTan, $CellContext`coords$] < Pi/2, Left, 
               Right]; {$CellContext`col$, 
              Text[
               Style[
                Framed[$CellContext`v$, FrameStyle -> None], FontSize -> 
                Scaled[0.035]], $CellContext`coords$, {$CellContext`offset$, 
                Center}], 
              PointSize[Large], 
              Point[$CellContext`coords$]}], {}]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[
        0.7], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        {RGBColor[0.65, 0.7, 0.7], InsetBox[
          StyleBox[
           FrameBox["\<\"CELL\"\>",
            FrameStyle->None,
            StripOnInput->False],
           StripOnInput->False,
           
           FontSize->Scaled[
            0.035]], {-0.707106781186548, 0.7071067811865482}, {
          Right, Center}], 
         {PointSize[Large], 
          PointBox[{-0.707106781186548, 0.7071067811865482}]}}, 
        {RGBColor[0.770565, 0.964309, 0.0442359], InsetBox[
          StyleBox[
           FrameBox["\<\"LINK\"\>",
            FrameStyle->None,
            StripOnInput->False],
           StripOnInput->False,
           FontSize->Scaled[0.035]], {-7.044813998280222*^-16, 1.}, {
          Right, Center}], 
         {PointSize[Large], PointBox[{-7.044813998280222*^-16, 1.}]}}, 
        {RGBColor[0.799435, 0.543572, 0.997559], InsetBox[
          StyleBox[
           FrameBox["\<\"Graph Virtual Machine\"\>",
            FrameStyle->None,
            StripOnInput->False],
           StripOnInput->False,
           
           FontSize->Scaled[
            0.035]], {-0.707106781186547, -0.7071067811865468}, {
          Right, Center}], 
         {PointSize[Large], 
          PointBox[{-0.707106781186547, -0.7071067811865468}]}}, 
        {RGBColor[1., 0.709804, 0.709804], InsetBox[
          StyleBox[
           FrameBox["\<\"N2N Lattice\"\>",
            FrameStyle->None,
            StripOnInput->False],
           StripOnInput->False,
           FontSize->Scaled[0.035]], {-1., 1.0106430996148606*^-15}, {
          Right, Center}], 
         {PointSize[Large], PointBox[{-1., 1.0106430996148606`*^-15}]}}, 
        {RGBColor[0.836713, 1., 1.], InsetBox[
          StyleBox[
           FrameBox["\<\"FPGA Substructure\"\>",
            FrameStyle->None,
            StripOnInput->False],
           StripOnInput->False,
           FontSize->Scaled[0.035]], {1., -1.133107779529596*^-15}, {
          Left, Center}], 
         {PointSize[Large], PointBox[{1., -1.133107779529596*^-15}]}}, 
        {RGBColor[0.291989, 0.437977, 0.888609], InsetBox[
          StyleBox[
           FrameBox["\<\"SAW Protocol Link\"\>",
            FrameStyle->None,
            StripOnInput->False],
           StripOnInput->False,
           
           FontSize->Scaled[
            0.035]], {0.707106781186547, 0.7071067811865467}, {Left, Center}], 
         {PointSize[Large], 
          PointBox[{0.707106781186547, 0.7071067811865467}]}}, 
        {RGBColor[0.4, 0.4, 0.4], InsetBox[
          StyleBox[
           FrameBox["\<\"Reversible Subtransaction\"\>",
            FrameStyle->None,
            StripOnInput->False],
           StripOnInput->False,
           FontSize->Scaled[0.035]], {6.049014748177263*^-16, -1.}, {
          Right, Center}], 
         {PointSize[Large], PointBox[{6.049014748177263*^-16, -1.}]}}, 
        {RGBColor[0.800498, 0.201504, 0.192061], InsetBox[
          StyleBox[
           FrameBox["\<\"Token Dynamics\"\>",
            FrameStyle->None,
            StripOnInput->False],
           StripOnInput->False,
           
           FontSize->Scaled[
            0.035]], {0.7071067811865481, -0.7071067811865483}, {
          Left, Center}], 
         {PointSize[Large], 
          PointBox[{0.7071067811865481, -0.7071067811865483}]}}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->800,
  PlotLabel->FormBox[
    StyleBox[
    "\"Causal Loop Visualization\"", 18, "Panel", StripOnInput -> False], 
    TraditionalForm]]], "Output",
 CellChangeTimes->{{3.962964352695063*^9, 3.96296435552094*^9}, 
   3.962974713694537*^9, 3.962978197765328*^9, 3.962978336895101*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"415fcb6f-0346-43e6-99b6-c45434005c11"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mesh Network (Grid) Topology", "Section",
 CellChangeTimes->{{3.9629599412040358`*^9, 3.9629599418125887`*^9}, {
  3.962960029036481*^9, 3.9629600299441223`*^9}, {3.962960241116858*^9, 
  3.962960242381179*^9}, {3.962960315057363*^9, 
  3.962960316170951*^9}},ExpressionUUID->"14611fa6-cd8f-4613-b204-\
1845a5e4688d"],

Cell[CellGroupData[{

Cell["\<\
For comparison, the code also considers a simple mesh network arranged in a \
grid. This is another form of distributed topology where each node connects \
to its adjacent neighbors in a 2D grid (each interior node having four \
neighbors). The mesh is conceptually similar to the N2N lattice in that it \
distributes connections across the network, albeit with slightly lower \
connectivity (four neighbors instead of six for the hex lattice). Mesh \
topologies have been used in various contexts (from wireless mesh networks to \
network-on-chip designs) for their simplicity and redundancy. Like the \
hexagonal lattice, a grid mesh provides multiple routes between nodes and \
does not rely on any single central switch. It therefore embodies many of the \
same resilience benefits: removal of one or a few links only detours paths \
rather than severing connectivity. In essence, the mesh is a straightforward \
case of a distributed network, useful as a baseline to demonstrate how added \
connectivity improves resilience relative to the more hierarchical Clos. (The \
N2N hex lattice can be seen as an even more richly connected mesh.) Baran\
\[CloseCurlyQuote]s study would classify both the grid and hex lattices as \
distributed (or \[OpenCurlyDoubleQuote]gridded\[CloseCurlyDoubleQuote]) \
networks, expected to maintain a high percentage of nodes connected after \
random failures \
(https://www.rand.org/pubs/research_memoranda/RM3420.html#:~:text=Although%\
20one%20can%20draw%20a,1 & \
https://www.rand.org/pubs/research_memoranda/RM3420.html#:~:text=II,Network). \
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.962960327264187*^9, 
  3.962960337447324*^9}},ExpressionUUID->"b12ca5e5-d04a-45c8-96bb-\
3b4c06866ace"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<DaedaelusNew`AethernetGraph`\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ComponentInteractions", "::", "usage"}], "MessageName"], "=", 
   "\"\<Finds the components directly interacting with a given architectural \
component.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"AethernetGraph", "::", "usage"}], "MessageName"], "=", 
   "\"\<AethernetGraph[components:{_String..}, opts___] generates an \
interaction graph without requiring GraphLayout or ImageSize options.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"AethernetGraphAddPrincipleTooltips", "::", "usage"}], 
    "MessageName"], "=", 
   "\"\<Adds D\[CapitalAE]D\[CapitalAE]LUS principles as tooltips to graph \
nodes.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"AethernetGraphAddSpecButtons", "::", "usage"}], "MessageName"], 
   "=", "\"\<Adds clickable specification links to graph nodes.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"AethernetGraphCausalLoopLayout", "::", "usage"}], "MessageName"],
    "=", "\"\<Applies circular causal loop visualization to a graph.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$DaedaelusArchitecture", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"\"\<CELL\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LINK\>\"", ",", "\"\<Graph Virtual Machine\>\"", ",", 
        "\"\<N2N Lattice\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<LINK\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<CELL\>\"", ",", "\"\<SAW Protocol Link\>\"", ",", 
        "\"\<Token Dynamics\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<Alice\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LINK\>\"", ",", "\"\<Reversible Subtransaction\>\"", ",", 
        "\"\<Token Dynamics\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<Bob\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LINK\>\"", ",", "\"\<Reversible Subtransaction\>\"", ",", 
        "\"\<Token Dynamics\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<FPGA Substructure\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Graph Virtual Machine\>\"", ",", "\"\<SAW Protocol Link\>\"", 
        ",", "\"\<SerDes\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<Graph Virtual Machine\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<FPGA Substructure\>\"", ",", "\"\<TRAPH\>\"", ",", 
        "\"\<Reversible Subtransaction\>\"", ",", "\"\<CELL\>\""}], "}"}]}], 
     ",", 
     RowBox[{"\"\<N2N Lattice\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<CELL\>\"", ",", "\"\<LINK\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<SAW Protocol Link\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<FPGA Substructure\>\"", ",", "\"\<Alice\>\"", ",", "\"\<Bob\>\"", 
        ",", "\"\<Truncated Tail Latency\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<Token Dynamics\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LINK\>\"", ",", "\"\<Alice\>\"", ",", "\"\<Bob\>\"", ",", 
        "\"\<Reversible Subtransaction\>\""}], "}"}]}], ",", 
     RowBox[{"\"\<Reversible Subtransaction\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Token Dynamics\>\"", ",", "\"\<Graph Virtual Machine\>\""}], 
       "}"}]}], ",", 
     RowBox[{"\"\<TRAPH\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<Graph Virtual Machine\>\"", "}"}]}], ",", 
     RowBox[{"\"\<SerDes\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<FPGA Substructure\>\"", ",", "\"\<LINK\>\""}], "}"}]}], 
     ",", 
     RowBox[{"\"\<Truncated Tail Latency\>\"", "\[Rule]", 
      RowBox[{"{", "\"\<SAW Protocol Link\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"$DaedaelusPrinciples", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{
     "\"\<CELL\>\"", "\[Rule]", 
      "\"\<Autonomous compute and storage unit.\>\""}], ",", 
     RowBox[{
     "\"\<LINK\>\"", "\[Rule]", 
      "\"\<Bidirectional computation entity between cells.\>\""}], ",", 
     RowBox[{
     "\"\<Graph Virtual Machine\>\"", "\[Rule]", 
      "\"\<Enables secure, efficient routing and provisioning.\>\""}], ",", 
     RowBox[{
     "\"\<FPGA Substructure\>\"", "\[Rule]", 
      "\"\<Eliminates heartbeats and retries for lower latency.\>\""}], ",", 
     RowBox[{
     "\"\<N2N Lattice\>\"", "\[Rule]", 
      "\"\<Manage on a Tree, Compute on a Graph.\>\""}], ",", 
     RowBox[{
     "\"\<SAW Protocol Link\>\"", "\[Rule]", 
      "\"\<Stop-and-Wait; no bandwidth degradation.\>\""}], ",", 
     RowBox[{
     "\"\<Token Dynamics\>\"", "\[Rule]", 
      "\"\<Flow integrity through reversible exchanges.\>\""}], ",", 
     RowBox[{
     "\"\<Reversible Subtransaction\>\"", "\[Rule]", 
      "\"\<Allows clean transaction reversals.\>\""}], ",", 
     RowBox[{
     "\"\<Truncated Tail Latency\>\"", "\[Rule]", 
      "\"\<Transaction success without heartbeats.\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "ComponentInteractions", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ComponentInteractions", "[", "comp_", "]"}], ":=", 
   RowBox[{"Lookup", "[", 
    RowBox[{"$DaedaelusArchitecture", ",", "comp", ",", 
     RowBox[{"{", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "AethernetGraph", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "AethernetGraph", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<SelfReferencing\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<PrincipleTooltips\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<TooltipStyle\>\"", "\[Rule]", "\"\<Subsubsection\>\""}]}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AethernetGraph", "[", 
    RowBox[{
     RowBox[{"comps", ":", 
      RowBox[{"{", 
       RowBox[{"_String", ".."}], "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"edges", ",", "edgeTooltips", ",", 
       RowBox[{"vertices", "=", "comps"}], ",", "selfRef", ",", "tooltips", 
       ",", "styleFun", ",", "wrapped"}], "}"}], ",", 
     RowBox[{
      RowBox[{"selfRef", "=", 
       RowBox[{"OptionValue", "[", "\"\<SelfReferencing\>\"", "]"}]}], ";", 
      RowBox[{"tooltips", "=", 
       RowBox[{"OptionValue", "[", "\"\<PrincipleTooltips\>\"", "]"}]}], ";", 
      
      RowBox[{"styleFun", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrueQ", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<TooltipStyle\>\"", "]"}], "===", 
           "None"}], "]"}], ",", "Identity", ",", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"OptionValue", "[", "\"\<TooltipStyle\>\"", "]"}]}], 
           "]"}], "&"}]}], "]"}]}], ";", 
      RowBox[{"edges", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c", "\[DirectedEdge]", "#1"}], "&"}], ")"}], "/@", 
           RowBox[{"ComponentInteractions", "[", "c", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "comps"}], "}"}]}], "]"}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"TrueQ", "[", "selfRef", "]"}]}], ",", 
        RowBox[{"edges", "=", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"edges", ",", 
           RowBox[{"a_", "\[DirectedEdge]", "a_"}]}], "]"}]}]}], "]"}], ";", 
      RowBox[{"edgeTooltips", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrueQ", "[", "tooltips", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"src", "=", 
                 RowBox[{"First", "[", "#1", "]"}]}], ",", 
                RowBox[{"dst", "=", 
                 RowBox[{"Last", "[", "#1", "]"}]}]}], "}"}], ",", 
              RowBox[{"Tooltip", "[", 
               RowBox[{
                RowBox[{"src", "\[DirectedEdge]", "dst"}], ",", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"src", ",", "Bold"}], "]"}], ",", 
                   "\"\< \[RightArrow] \>\"", ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{"dst", ",", "Italic"}], "]"}], ",", "\"\<: \>\"", 
                   ",", 
                   RowBox[{"styleFun", "[", 
                    RowBox[{"Lookup", "[", 
                    RowBox[{
                    "$DaedaelusPrinciples", ",", "dst", ",", 
                    "\"\<No principle defined.\>\""}], "]"}], "]"}]}], "}"}], 
                 "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "/@", "edges"}], ",", 
         "edges"}], "]"}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{"vertices", ",", "edgeTooltips", ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "AethernetGraphAddPrincipleTooltips", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AethernetGraphAddPrincipleTooltips", "[", "g_Graph", "]"}], ":=", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"verts", ",", "edges"}], "}"}], ",", 
     RowBox[{
      RowBox[{"verts", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Tooltip", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"Lookup", "[", 
             RowBox[{
             "$DaedaelusPrinciples", ",", "#1", ",", 
              "\"\<No principle defined.\>\""}], "]"}]}], "]"}], "&"}], ")"}],
         "/@", 
        RowBox[{"VertexList", "[", "g", "]"}]}]}], ";", 
      RowBox[{"edges", "=", 
       RowBox[{"EdgeList", "[", "g", "]"}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{"verts", ",", "edges", ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "AethernetGraphAddSpecButtons", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AethernetGraphAddSpecButtons", "[", "g_Graph", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"verts", ",", "edges"}], "}"}], ",", 
     RowBox[{
      RowBox[{"verts", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Button", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"Hyperlink", "[", 
             RowBox[{
             "\"\<Spec\>\"", ",", 
              "\"\<https://github.com/opencomputeproject/ocp-oae\>\""}], 
             "]"}], ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Frameless\>\""}]}], "]"}], 
          "&"}], ")"}], "/@", 
        RowBox[{"VertexList", "[", "g", "]"}]}]}], ";", 
      RowBox[{"edges", "=", 
       RowBox[{"EdgeList", "[", "g", "]"}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{"verts", ",", "edges", ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"vShape", ",", "eShape"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vShape", "[", 
    RowBox[{"g_", ",", "colors_"}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pt", ",", "vtx"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colors", "\[LeftDoubleBracket]", 
        RowBox[{"VertexIndex", "[", 
         RowBox[{"g", ",", "vtx"}], "]"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"Disk", "[", 
        RowBox[{"pt", ",", "0.05"}], "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"vtx", ",", "12", ",", "Bold", ",", "Black"}], "]"}], ",", 
         "pt", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1.2"}]}], "}"}]}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eShape", "[", 
    RowBox[{"g_", ",", "colors_", ",", 
     RowBox[{"thickness_", ":", 
      RowBox[{"AbsoluteThickness", "[", "2", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pts", ",", "edge"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Arrowheads", "[", "0.025", "]"}], ",", 
       RowBox[{"colors", "\[LeftDoubleBracket]", 
        RowBox[{"VertexIndex", "[", 
         RowBox[{"g", ",", 
          RowBox[{
          "edge", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         "]"}], "\[RightDoubleBracket]"}], ",", "thickness", ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"BezierCurve", "[", "pts", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "AethernetGraphCausalLoopLayout", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "AethernetGraphCausalLoopLayout", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<VertexColors\>\"", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"\"\<EdgeThickness\>\"", "\[Rule]", 
      RowBox[{"AbsoluteThickness", "[", "2", "]"}]}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AethernetGraphCausalLoopLayout", "[", 
    RowBox[{"g_Graph", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"colors", ",", "thickness"}], "}"}], ",", 
     RowBox[{
      RowBox[{"colors", "=", 
       RowBox[{"OptionValue", "[", "\"\<VertexColors\>\"", "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"colors", "===", "Automatic"}], ",", 
        RowBox[{"colors", "=", 
         RowBox[{
          RowBox[{"ColorData", "[", "97", "]"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"VertexCount", "[", "g", "]"}], "]"}]}]}]}], "]"}], ";", 
      RowBox[{"thickness", "=", 
       RowBox[{"OptionValue", "[", "\"\<EdgeThickness\>\"", "]"}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{"g", ",", 
        RowBox[{"VertexLabels", "\[Rule]", "None"}], ",", 
        RowBox[{"GraphLayout", "\[Rule]", "\"\<CircularEmbedding\>\""}], ",", 
        
        RowBox[{"VertexShapeFunction", "\[Rule]", 
         RowBox[{"vShape", "[", 
          RowBox[{"g", ",", "colors"}], "]"}]}], ",", 
        RowBox[{"EdgeShapeFunction", "\[Rule]", 
         RowBox[{"eShape", "[", 
          RowBox[{"g", ",", "colors", ",", "thickness"}], "]"}]}]}], 
       "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<DaedaelusNew`AethernetGraph`\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"coreComponents", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<CELL\>\"", ",", "\"\<LINK\>\"", ",", "\"\<FPGA Substructure\>\"", 
     ",", "\"\<Graph Virtual Machine\>\"", ",", "\"\<N2N Lattice\>\"", ",", 
     "\"\<SAW Protocol Link\>\"", ",", "\"\<Token Dynamics\>\"", ",", 
     "\"\<Reversible Subtransaction\>\""}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g0", "=", 
   RowBox[{"AethernetGraph", "[", "coreComponents", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"AethernetGraphAddSpecButtons", "[", "g0", "]"}]}], ";"}], "\n", 
 RowBox[{"AethernetGraphCausalLoopLayout", "[", "g0", "]"}]}], "Input",
 CellChangeTimes->{{3.962964664587142*^9, 3.9629646708736134`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"b1a4db64-1028-454b-903b-803a58a83e90"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "CELL", "LINK", "FPGA Substructure", "Graph Virtual Machine", 
       "N2N Lattice", "SAW Protocol Link", "Token Dynamics", 
       "Reversible Subtransaction", "SerDes", "TRAPH", "Alice", "Bob", 
       "Truncated Tail Latency"}, {{{1, 2}, {1, 4}, {1, 5}, {2, 1}, {2, 6}, {
       2, 7}, {3, 4}, {3, 6}, {3, 9}, {4, 3}, {4, 10}, {4, 8}, {4, 1}, {5, 
       1}, {5, 2}, {6, 3}, {6, 11}, {6, 12}, {6, 13}, {7, 2}, {7, 11}, {7, 
       12}, {7, 8}, {8, 7}, {8, 4}}, Null}, {
      AnnotationRules -> {
        DirectedEdge[
          "Reversible Subtransaction", "Graph Virtual Machine"] -> {
          Tooltip -> Row[{
              Style["Reversible Subtransaction", Bold], " \[RightArrow] ", 
              Style["Graph Virtual Machine", Italic], ": ", 
              Style[
              "Enables secure, efficient routing and provisioning.", 
               "Subsubsection"]}]}, 
         DirectedEdge[
          "Graph Virtual Machine", "Reversible Subtransaction"] -> {
          Tooltip -> Row[{
              Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
              Style["Reversible Subtransaction", Italic], ": ", 
              Style[
              "Allows clean transaction reversals.", "Subsubsection"]}]}, 
         DirectedEdge["Reversible Subtransaction", "Token Dynamics"] -> {
          Tooltip -> Row[{
              Style["Reversible Subtransaction", Bold], " \[RightArrow] ", 
              Style["Token Dynamics", Italic], ": ", 
              Style[
              "Flow integrity through reversible exchanges.", 
               "Subsubsection"]}]}, 
         DirectedEdge["Graph Virtual Machine", "CELL"] -> {Tooltip -> Row[{
              Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
              Style["CELL", Italic], ": ", 
              Style[
              "Autonomous compute and storage unit.", "Subsubsection"]}]}, 
         DirectedEdge["LINK", "SAW Protocol Link"] -> {Tooltip -> Row[{
              Style["LINK", Bold], " \[RightArrow] ", 
              Style["SAW Protocol Link", Italic], ": ", 
              Style[
              "Stop-and-Wait; no bandwidth degradation.", "Subsubsection"]}]},
          DirectedEdge["N2N Lattice", "CELL"] -> {Tooltip -> Row[{
              Style["N2N Lattice", Bold], " \[RightArrow] ", 
              Style["CELL", Italic], ": ", 
              Style[
              "Autonomous compute and storage unit.", "Subsubsection"]}]}, 
         DirectedEdge["CELL", "Graph Virtual Machine"] -> {Tooltip -> Row[{
              Style["CELL", Bold], " \[RightArrow] ", 
              Style["Graph Virtual Machine", Italic], ": ", 
              Style[
              "Enables secure, efficient routing and provisioning.", 
               "Subsubsection"]}]}, 
         DirectedEdge["Graph Virtual Machine", "TRAPH"] -> {Tooltip -> Row[{
              Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
              Style["TRAPH", Italic], ": ", 
              Style["No principle defined.", "Subsubsection"]}]}, 
         DirectedEdge["LINK", "Token Dynamics"] -> {Tooltip -> Row[{
              Style["LINK", Bold], " \[RightArrow] ", 
              Style["Token Dynamics", Italic], ": ", 
              Style[
              "Flow integrity through reversible exchanges.", 
               "Subsubsection"]}]}, 
         DirectedEdge["Token Dynamics", "LINK"] -> {Tooltip -> Row[{
              Style["Token Dynamics", Bold], " \[RightArrow] ", 
              Style["LINK", Italic], ": ", 
              Style[
              "Bidirectional computation entity between cells.", 
               "Subsubsection"]}]}, 
         DirectedEdge["FPGA Substructure", "SAW Protocol Link"] -> {
          Tooltip -> Row[{
              Style["FPGA Substructure", Bold], " \[RightArrow] ", 
              Style["SAW Protocol Link", Italic], ": ", 
              Style[
              "Stop-and-Wait; no bandwidth degradation.", "Subsubsection"]}]},
          DirectedEdge["SAW Protocol Link", "Truncated Tail Latency"] -> {
          Tooltip -> Row[{
              Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
              Style["Truncated Tail Latency", Italic], ": ", 
              Style[
              "Transaction success without heartbeats.", "Subsubsection"]}]}, 
         DirectedEdge["FPGA Substructure", "SerDes"] -> {Tooltip -> Row[{
              Style["FPGA Substructure", Bold], " \[RightArrow] ", 
              Style["SerDes", Italic], ": ", 
              Style["No principle defined.", "Subsubsection"]}]}, 
         DirectedEdge["FPGA Substructure", "Graph Virtual Machine"] -> {
          Tooltip -> Row[{
              Style["FPGA Substructure", Bold], " \[RightArrow] ", 
              Style["Graph Virtual Machine", Italic], ": ", 
              Style[
              "Enables secure, efficient routing and provisioning.", 
               "Subsubsection"]}]}, 
         DirectedEdge["LINK", "CELL"] -> {Tooltip -> Row[{
              Style["LINK", Bold], " \[RightArrow] ", 
              Style["CELL", Italic], ": ", 
              Style[
              "Autonomous compute and storage unit.", "Subsubsection"]}]}, 
         DirectedEdge["SAW Protocol Link", "FPGA Substructure"] -> {
          Tooltip -> Row[{
              Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
              Style["FPGA Substructure", Italic], ": ", 
              Style[
              "Eliminates heartbeats and retries for lower latency.", 
               "Subsubsection"]}]}, 
         DirectedEdge["N2N Lattice", "LINK"] -> {Tooltip -> Row[{
              Style["N2N Lattice", Bold], " \[RightArrow] ", 
              Style["LINK", Italic], ": ", 
              Style[
              "Bidirectional computation entity between cells.", 
               "Subsubsection"]}]}, 
         DirectedEdge["Token Dynamics", "Bob"] -> {Tooltip -> Row[{
              Style["Token Dynamics", Bold], " \[RightArrow] ", 
              Style["Bob", Italic], ": ", 
              Style["No principle defined.", "Subsubsection"]}]}, 
         DirectedEdge["Token Dynamics", "Alice"] -> {Tooltip -> Row[{
              Style["Token Dynamics", Bold], " \[RightArrow] ", 
              Style["Alice", Italic], ": ", 
              Style["No principle defined.", "Subsubsection"]}]}, 
         DirectedEdge["Token Dynamics", "Reversible Subtransaction"] -> {
          Tooltip -> Row[{
              Style["Token Dynamics", Bold], " \[RightArrow] ", 
              Style["Reversible Subtransaction", Italic], ": ", 
              Style[
              "Allows clean transaction reversals.", "Subsubsection"]}]}, 
         DirectedEdge["CELL", "LINK"] -> {Tooltip -> Row[{
              Style["CELL", Bold], " \[RightArrow] ", 
              Style["LINK", Italic], ": ", 
              Style[
              "Bidirectional computation entity between cells.", 
               "Subsubsection"]}]}, 
         DirectedEdge["CELL", "N2N Lattice"] -> {Tooltip -> Row[{
              Style["CELL", Bold], " \[RightArrow] ", 
              Style["N2N Lattice", Italic], ": ", 
              Style[
              "Manage on a Tree, Compute on a Graph.", "Subsubsection"]}]}, 
         DirectedEdge["SAW Protocol Link", "Alice"] -> {Tooltip -> Row[{
              Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
              Style["Alice", Italic], ": ", 
              Style["No principle defined.", "Subsubsection"]}]}, 
         DirectedEdge["Graph Virtual Machine", "FPGA Substructure"] -> {
          Tooltip -> Row[{
              Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
              Style["FPGA Substructure", Italic], ": ", 
              Style[
              "Eliminates heartbeats and retries for lower latency.", 
               "Subsubsection"]}]}, 
         DirectedEdge["SAW Protocol Link", "Bob"] -> {Tooltip -> Row[{
              Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
              Style["Bob", Italic], ": ", 
              Style["No principle defined.", "Subsubsection"]}]}}, 
       EdgeShapeFunction -> {
         Function[{
          DaedaelusNew`AethernetGraph`Private`pts$, 
           DaedaelusNew`AethernetGraph`Private`edge$}, {
           Arrowheads[0.025], 
           Part[{
             RGBColor[0.368417, 0.506779, 0.709798], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             RGBColor[1, 0.75, 0], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             RGBColor[0.571589, 0.586483, 0.], 
             RGBColor[0.915, 0.3325, 0.2125], 
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142]}, 
            VertexIndex[
             
             Graph[{"CELL", "LINK", "FPGA Substructure", 
               "Graph Virtual Machine", "N2N Lattice", "SAW Protocol Link", 
               "Token Dynamics", "Reversible Subtransaction", "SerDes", 
               "TRAPH", "Alice", "Bob", "Truncated Tail Latency"}, {{{1, 2}, {
               1, 4}, {1, 5}, {2, 1}, {2, 6}, {2, 7}, {3, 4}, {3, 6}, {3, 
               9}, {4, 3}, {4, 10}, {4, 8}, {4, 1}, {5, 1}, {5, 2}, {6, 3}, {
               6, 11}, {6, 12}, {6, 13}, {7, 2}, {7, 11}, {7, 12}, {7, 8}, {8,
                7}, {8, 4}}, Null}, {
              AnnotationRules -> {
                DirectedEdge[
                  "Reversible Subtransaction", "Graph Virtual Machine"] -> {
                  Tooltip -> Row[{
                    Style["Reversible Subtransaction", Bold], 
                    " \[RightArrow] ", 
                    Style["Graph Virtual Machine", Italic], ": ", 
                    Style[
                    "Enables secure, efficient routing and provisioning.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge[
                  "Graph Virtual Machine", "Reversible Subtransaction"] -> {
                  Tooltip -> Row[{
                    Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
                    Style["Reversible Subtransaction", Italic], ": ", 
                    Style[
                    "Allows clean transaction reversals.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge[
                  "Reversible Subtransaction", "Token Dynamics"] -> {
                  Tooltip -> Row[{
                    Style["Reversible Subtransaction", Bold], 
                    " \[RightArrow] ", 
                    Style["Token Dynamics", Italic], ": ", 
                    Style[
                    "Flow integrity through reversible exchanges.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["Graph Virtual Machine", "CELL"] -> {
                  Tooltip -> Row[{
                    Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
                    Style["CELL", Italic], ": ", 
                    Style[
                    "Autonomous compute and storage unit.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["LINK", "SAW Protocol Link"] -> {Tooltip -> Row[{
                    Style["LINK", Bold], " \[RightArrow] ", 
                    Style["SAW Protocol Link", Italic], ": ", 
                    Style[
                    "Stop-and-Wait; no bandwidth degradation.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["N2N Lattice", "CELL"] -> {Tooltip -> Row[{
                    Style["N2N Lattice", Bold], " \[RightArrow] ", 
                    Style["CELL", Italic], ": ", 
                    Style[
                    "Autonomous compute and storage unit.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["CELL", "Graph Virtual Machine"] -> {
                  Tooltip -> Row[{
                    Style["CELL", Bold], " \[RightArrow] ", 
                    Style["Graph Virtual Machine", Italic], ": ", 
                    Style[
                    "Enables secure, efficient routing and provisioning.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["Graph Virtual Machine", "TRAPH"] -> {
                  Tooltip -> Row[{
                    Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
                    Style["TRAPH", Italic], ": ", 
                    Style["No principle defined.", "Subsubsection"]}]}, 
                 DirectedEdge["LINK", "Token Dynamics"] -> {Tooltip -> Row[{
                    Style["LINK", Bold], " \[RightArrow] ", 
                    Style["Token Dynamics", Italic], ": ", 
                    Style[
                    "Flow integrity through reversible exchanges.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["Token Dynamics", "LINK"] -> {Tooltip -> Row[{
                    Style["Token Dynamics", Bold], " \[RightArrow] ", 
                    Style["LINK", Italic], ": ", 
                    Style[
                    "Bidirectional computation entity between cells.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["FPGA Substructure", "SAW Protocol Link"] -> {
                  Tooltip -> Row[{
                    Style["FPGA Substructure", Bold], " \[RightArrow] ", 
                    Style["SAW Protocol Link", Italic], ": ", 
                    Style[
                    "Stop-and-Wait; no bandwidth degradation.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge[
                  "SAW Protocol Link", "Truncated Tail Latency"] -> {
                  Tooltip -> Row[{
                    Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
                    Style["Truncated Tail Latency", Italic], ": ", 
                    Style[
                    "Transaction success without heartbeats.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["FPGA Substructure", "SerDes"] -> {
                  Tooltip -> Row[{
                    Style["FPGA Substructure", Bold], " \[RightArrow] ", 
                    Style["SerDes", Italic], ": ", 
                    Style["No principle defined.", "Subsubsection"]}]}, 
                 DirectedEdge[
                  "FPGA Substructure", "Graph Virtual Machine"] -> {
                  Tooltip -> Row[{
                    Style["FPGA Substructure", Bold], " \[RightArrow] ", 
                    Style["Graph Virtual Machine", Italic], ": ", 
                    Style[
                    "Enables secure, efficient routing and provisioning.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["LINK", "CELL"] -> {Tooltip -> Row[{
                    Style["LINK", Bold], " \[RightArrow] ", 
                    Style["CELL", Italic], ": ", 
                    Style[
                    "Autonomous compute and storage unit.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["SAW Protocol Link", "FPGA Substructure"] -> {
                  Tooltip -> Row[{
                    Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
                    Style["FPGA Substructure", Italic], ": ", 
                    Style[
                    "Eliminates heartbeats and retries for lower latency.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["N2N Lattice", "LINK"] -> {Tooltip -> Row[{
                    Style["N2N Lattice", Bold], " \[RightArrow] ", 
                    Style["LINK", Italic], ": ", 
                    Style[
                    "Bidirectional computation entity between cells.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["Token Dynamics", "Bob"] -> {Tooltip -> Row[{
                    Style["Token Dynamics", Bold], " \[RightArrow] ", 
                    Style["Bob", Italic], ": ", 
                    Style["No principle defined.", "Subsubsection"]}]}, 
                 DirectedEdge["Token Dynamics", "Alice"] -> {Tooltip -> Row[{
                    Style["Token Dynamics", Bold], " \[RightArrow] ", 
                    Style["Alice", Italic], ": ", 
                    Style["No principle defined.", "Subsubsection"]}]}, 
                 DirectedEdge[
                  "Token Dynamics", "Reversible Subtransaction"] -> {
                  Tooltip -> Row[{
                    Style["Token Dynamics", Bold], " \[RightArrow] ", 
                    Style["Reversible Subtransaction", Italic], ": ", 
                    Style[
                    "Allows clean transaction reversals.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["CELL", "LINK"] -> {Tooltip -> Row[{
                    Style["CELL", Bold], " \[RightArrow] ", 
                    Style["LINK", Italic], ": ", 
                    Style[
                    "Bidirectional computation entity between cells.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["CELL", "N2N Lattice"] -> {Tooltip -> Row[{
                    Style["CELL", Bold], " \[RightArrow] ", 
                    Style["N2N Lattice", Italic], ": ", 
                    Style[
                    "Manage on a Tree, Compute on a Graph.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["SAW Protocol Link", "Alice"] -> {
                  Tooltip -> Row[{
                    Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
                    Style["Alice", Italic], ": ", 
                    Style["No principle defined.", "Subsubsection"]}]}, 
                 DirectedEdge[
                  "Graph Virtual Machine", "FPGA Substructure"] -> {
                  Tooltip -> Row[{
                    Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
                    Style["FPGA Substructure", Italic], ": ", 
                    Style[
                    "Eliminates heartbeats and retries for lower latency.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["SAW Protocol Link", "Bob"] -> {
                  Tooltip -> Row[{
                    Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
                    Style["Bob", Italic], ": ", 
                    Style["No principle defined.", "Subsubsection"]}]}}, 
               VertexLabels -> {"Name"}}], 
             Part[DaedaelusNew`AethernetGraph`Private`edge$, 1]]], 
           AbsoluteThickness[2], 
           Arrow[
            BezierCurve[DaedaelusNew`AethernetGraph`Private`pts$]]}]}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, 
       VertexLabels -> {None}, VertexShapeFunction -> {
         Function[{
          DaedaelusNew`AethernetGraph`Private`pt$, 
           DaedaelusNew`AethernetGraph`Private`vtx$}, {
           Part[{
             RGBColor[0.368417, 0.506779, 0.709798], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             RGBColor[1, 0.75, 0], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             RGBColor[0.571589, 0.586483, 0.], 
             RGBColor[0.915, 0.3325, 0.2125], 
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142]}, 
            VertexIndex[
             
             Graph[{"CELL", "LINK", "FPGA Substructure", 
               "Graph Virtual Machine", "N2N Lattice", "SAW Protocol Link", 
               "Token Dynamics", "Reversible Subtransaction", "SerDes", 
               "TRAPH", "Alice", "Bob", "Truncated Tail Latency"}, {{{1, 2}, {
               1, 4}, {1, 5}, {2, 1}, {2, 6}, {2, 7}, {3, 4}, {3, 6}, {3, 
               9}, {4, 3}, {4, 10}, {4, 8}, {4, 1}, {5, 1}, {5, 2}, {6, 3}, {
               6, 11}, {6, 12}, {6, 13}, {7, 2}, {7, 11}, {7, 12}, {7, 8}, {8,
                7}, {8, 4}}, Null}, {
              AnnotationRules -> {
                DirectedEdge[
                  "Reversible Subtransaction", "Graph Virtual Machine"] -> {
                  Tooltip -> Row[{
                    Style["Reversible Subtransaction", Bold], 
                    " \[RightArrow] ", 
                    Style["Graph Virtual Machine", Italic], ": ", 
                    Style[
                    "Enables secure, efficient routing and provisioning.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge[
                  "Graph Virtual Machine", "Reversible Subtransaction"] -> {
                  Tooltip -> Row[{
                    Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
                    Style["Reversible Subtransaction", Italic], ": ", 
                    Style[
                    "Allows clean transaction reversals.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge[
                  "Reversible Subtransaction", "Token Dynamics"] -> {
                  Tooltip -> Row[{
                    Style["Reversible Subtransaction", Bold], 
                    " \[RightArrow] ", 
                    Style["Token Dynamics", Italic], ": ", 
                    Style[
                    "Flow integrity through reversible exchanges.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["Graph Virtual Machine", "CELL"] -> {
                  Tooltip -> Row[{
                    Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
                    Style["CELL", Italic], ": ", 
                    Style[
                    "Autonomous compute and storage unit.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["LINK", "SAW Protocol Link"] -> {Tooltip -> Row[{
                    Style["LINK", Bold], " \[RightArrow] ", 
                    Style["SAW Protocol Link", Italic], ": ", 
                    Style[
                    "Stop-and-Wait; no bandwidth degradation.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["N2N Lattice", "CELL"] -> {Tooltip -> Row[{
                    Style["N2N Lattice", Bold], " \[RightArrow] ", 
                    Style["CELL", Italic], ": ", 
                    Style[
                    "Autonomous compute and storage unit.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["CELL", "Graph Virtual Machine"] -> {
                  Tooltip -> Row[{
                    Style["CELL", Bold], " \[RightArrow] ", 
                    Style["Graph Virtual Machine", Italic], ": ", 
                    Style[
                    "Enables secure, efficient routing and provisioning.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["Graph Virtual Machine", "TRAPH"] -> {
                  Tooltip -> Row[{
                    Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
                    Style["TRAPH", Italic], ": ", 
                    Style["No principle defined.", "Subsubsection"]}]}, 
                 DirectedEdge["LINK", "Token Dynamics"] -> {Tooltip -> Row[{
                    Style["LINK", Bold], " \[RightArrow] ", 
                    Style["Token Dynamics", Italic], ": ", 
                    Style[
                    "Flow integrity through reversible exchanges.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["Token Dynamics", "LINK"] -> {Tooltip -> Row[{
                    Style["Token Dynamics", Bold], " \[RightArrow] ", 
                    Style["LINK", Italic], ": ", 
                    Style[
                    "Bidirectional computation entity between cells.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["FPGA Substructure", "SAW Protocol Link"] -> {
                  Tooltip -> Row[{
                    Style["FPGA Substructure", Bold], " \[RightArrow] ", 
                    Style["SAW Protocol Link", Italic], ": ", 
                    Style[
                    "Stop-and-Wait; no bandwidth degradation.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge[
                  "SAW Protocol Link", "Truncated Tail Latency"] -> {
                  Tooltip -> Row[{
                    Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
                    Style["Truncated Tail Latency", Italic], ": ", 
                    Style[
                    "Transaction success without heartbeats.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["FPGA Substructure", "SerDes"] -> {
                  Tooltip -> Row[{
                    Style["FPGA Substructure", Bold], " \[RightArrow] ", 
                    Style["SerDes", Italic], ": ", 
                    Style["No principle defined.", "Subsubsection"]}]}, 
                 DirectedEdge[
                  "FPGA Substructure", "Graph Virtual Machine"] -> {
                  Tooltip -> Row[{
                    Style["FPGA Substructure", Bold], " \[RightArrow] ", 
                    Style["Graph Virtual Machine", Italic], ": ", 
                    Style[
                    "Enables secure, efficient routing and provisioning.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["LINK", "CELL"] -> {Tooltip -> Row[{
                    Style["LINK", Bold], " \[RightArrow] ", 
                    Style["CELL", Italic], ": ", 
                    Style[
                    "Autonomous compute and storage unit.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["SAW Protocol Link", "FPGA Substructure"] -> {
                  Tooltip -> Row[{
                    Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
                    Style["FPGA Substructure", Italic], ": ", 
                    Style[
                    "Eliminates heartbeats and retries for lower latency.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["N2N Lattice", "LINK"] -> {Tooltip -> Row[{
                    Style["N2N Lattice", Bold], " \[RightArrow] ", 
                    Style["LINK", Italic], ": ", 
                    Style[
                    "Bidirectional computation entity between cells.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["Token Dynamics", "Bob"] -> {Tooltip -> Row[{
                    Style["Token Dynamics", Bold], " \[RightArrow] ", 
                    Style["Bob", Italic], ": ", 
                    Style["No principle defined.", "Subsubsection"]}]}, 
                 DirectedEdge["Token Dynamics", "Alice"] -> {Tooltip -> Row[{
                    Style["Token Dynamics", Bold], " \[RightArrow] ", 
                    Style["Alice", Italic], ": ", 
                    Style["No principle defined.", "Subsubsection"]}]}, 
                 DirectedEdge[
                  "Token Dynamics", "Reversible Subtransaction"] -> {
                  Tooltip -> Row[{
                    Style["Token Dynamics", Bold], " \[RightArrow] ", 
                    Style["Reversible Subtransaction", Italic], ": ", 
                    Style[
                    "Allows clean transaction reversals.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["CELL", "LINK"] -> {Tooltip -> Row[{
                    Style["CELL", Bold], " \[RightArrow] ", 
                    Style["LINK", Italic], ": ", 
                    Style[
                    "Bidirectional computation entity between cells.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["CELL", "N2N Lattice"] -> {Tooltip -> Row[{
                    Style["CELL", Bold], " \[RightArrow] ", 
                    Style["N2N Lattice", Italic], ": ", 
                    Style[
                    "Manage on a Tree, Compute on a Graph.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["SAW Protocol Link", "Alice"] -> {
                  Tooltip -> Row[{
                    Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
                    Style["Alice", Italic], ": ", 
                    Style["No principle defined.", "Subsubsection"]}]}, 
                 DirectedEdge[
                  "Graph Virtual Machine", "FPGA Substructure"] -> {
                  Tooltip -> Row[{
                    Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
                    Style["FPGA Substructure", Italic], ": ", 
                    Style[
                    "Eliminates heartbeats and retries for lower latency.", 
                    "Subsubsection"]}]}, 
                 DirectedEdge["SAW Protocol Link", "Bob"] -> {
                  Tooltip -> Row[{
                    Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
                    Style["Bob", Italic], ": ", 
                    Style["No principle defined.", "Subsubsection"]}]}}, 
               VertexLabels -> {"Name"}}], 
             DaedaelusNew`AethernetGraph`Private`vtx$]], 
           Disk[DaedaelusNew`AethernetGraph`Private`pt$, 0.05], 
           Text[
            Style[DaedaelusNew`AethernetGraph`Private`vtx$, 12, Bold, Black], 
            DaedaelusNew`AethernetGraph`Private`pt$, {0, -1.2}]}]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        TagBox[
         TooltipBox[
          {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{-0.46472317204376923`, 
             0.8854560256532104}, {-0.4198759357147834, 
             0.9147319641032078}, {-0.40835941397615877`, 
             0.9218609223872507}, {-0.39651346497729206`, 
             0.9284279469408887}, {-0.3843654862429804, 
             0.9344178494311257}, {-0.3719435738378482, 
             0.9398167763032974}, {-0.359276457385261, 
             0.9446122408218223}, {-0.34639343362093433`, 
             0.94879315194975}, {-0.33332429863491364`, 
             0.9523498400003112}, {-0.14743502981740592`, 
             0.9981674297390271}, {-0.13421001014113168`, 
             1.0010916687398606`}, {-0.12085969283897147`, 
             1.0033766954581895`}, {-0.107414954765905, 
             1.0050172250429497`}, {-0.09390689115497633, 
             1.006009463247687}, {-0.08036674369967721, 
             1.006351115205961}, {-0.06682582829759409, 
             1.0060413907389516`}, {-0.05331546262243468, 1.005081006183}, {
             1.8369701987210297`*^-16, 1.}}]]},
          TemplateBox[{
            StyleBox["\"CELL\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"LINK\"", Italic, StripOnInput -> False], "\": \"", 
            StyleBox[
            "\"Bidirectional computation entity between cells.\"", 
             "Subsubsection", StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["CELL", Bold], " \[RightArrow] ", 
            Style["LINK", Italic], ": ", 
            Style[
            "Bidirectional computation entity between cells.", 
             "Subsubsection"]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{-0.46472317204376923`, 
             0.8854560256532104}, {-0.4922107296476965, 
             0.785152739132215}, {-0.4997702234648792, 
             0.7599607440855111}, {-0.50853215266731, 
             0.7351613255871516}, {-0.5184762525068782, 
             0.7108118401801478}, {-0.5295795240898721, 
             0.6869686037941313}, {-0.5418162875692355, 
             0.6636867614968536}, {-0.5551582415373824, 
             0.6410201599536793}, {-0.569574528482203, 
             0.6190212228900442}, {-0.7807688093039166, 
             0.31305348473088995`}, {-0.7962260869765887, 
             0.2917730916857628}, {-0.8126886055061336, 
             0.2712604603365288}, {-0.8301182900823626, 
             0.25156303266745605`}, {-0.8484748290159858, 
             0.23272636524501755`}, {-0.8677157669722159, 
             0.2147940238538415}, {-0.8877966031622326, 
             0.19780748273697768`}, {-0.9086708942654105, 
             0.18180602867351925`}, {-0.9927088740980541, 
             0.12053668025532395`}}]]},
          TemplateBox[{
            StyleBox["\"CELL\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox[
            "\"Graph Virtual Machine\"", Italic, StripOnInput -> False], 
            "\": \"", 
            StyleBox[
            "\"Enables secure, efficient routing and provisioning.\"", 
             "Subsubsection", StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["CELL", Bold], " \[RightArrow] ", 
            Style["Graph Virtual Machine", Italic], ": ", 
            Style[
            "Enables secure, efficient routing and provisioning.", 
             "Subsubsection"]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{-0.46472317204376923`, 
             0.8854560256532104}, {-0.49082822070412235`, 
             0.838691919621805}, {-0.49771260216502566`, 
             0.8270275460392843}, {-0.5051498206041967, 
             0.8157076475830308}, {-0.5131226750885041, 
             0.8047584051186456}, {-0.5216127258560969, 
             0.7942051422518575}, {-0.5306003369642188, 
             0.7840722667596293}, {-0.5400647217035718, 
             0.774383214139412}, {-0.5499839906741919, 
             0.7651603934071021}, {-0.6932882682141469, 
             0.6382038818382806}, {-0.7036394799516048, 
             0.6294686237002431}, {-0.7143986939864382, 
             0.6212411312192694}, {-0.7255410262141027, 
             0.6135404330885682}, {-0.7370407064473776, 
             0.6063843396218602}, {-0.7488711380181212, 
             0.5997894015613634}, {-0.7610049592905241, 
             0.5937708717989367}, {-0.773414106943596, 
             0.588342670098917}, {-0.8229838658936568, 0.5680647467311566}}]]},
          TemplateBox[{
            StyleBox["\"CELL\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"N2N Lattice\"", Italic, StripOnInput -> False], 
            "\": \"", 
            StyleBox[
            "\"Manage on a Tree, Compute on a Graph.\"", "Subsubsection", 
             StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["CELL", Bold], " \[RightArrow] ", 
            Style["N2N Lattice", Italic], ": ", 
            Style["Manage on a Tree, Compute on a Graph.", "Subsubsection"]}],
           "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{1.8369701987210297`*^-16, 
             1.}, {-0.044847236328985726`, 
             0.9707240615500027}, {-0.056363758067610334`, 
             0.9635951032659598}, {-0.06820970706647703, 
             0.9570280787123218}, {-0.08035768580078864, 
             0.9510381762220848}, {-0.09277959820592092, 
             0.9456392493499133}, {-0.10544671465850809`, 
             0.9408437848313882}, {-0.11832973842283478`, 
             0.9366628737034606}, {-0.13139887340885548`, 
             0.9331061856528994}, {-0.31728814222636315`, 
             0.8872885959141835}, {-0.33051316190263746`, 
             0.8843643569133501}, {-0.34386347920479765`, 
             0.8820793301950209}, {-0.3573082172778641, 
             0.880438800610261}, {-0.37081628088879276`, 
             0.8794465624055237}, {-0.3843564283440919, 
             0.8791049104472495}, {-0.39789734374617497`, 
             0.879414634914259}, {-0.4114077094213344, 
             0.8803750194702107}, {-0.46472317204376923`, 
             0.8854560256532104}}]]},
          TemplateBox[{
            StyleBox["\"LINK\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"CELL\"", Italic, StripOnInput -> False], "\": \"", 
            StyleBox[
            "\"Autonomous compute and storage unit.\"", "Subsubsection", 
             StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["LINK", Bold], " \[RightArrow] ", 
            Style["CELL", Italic], ": ", 
            Style["Autonomous compute and storage unit.", "Subsubsection"]}], 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{1.8369701987210297`*^-16, 1.}, {
             0.8229838658936565, 0.5680647467311548}}]]},
          TemplateBox[{
            StyleBox["\"LINK\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"SAW Protocol Link\"", Italic, StripOnInput -> False], 
            "\": \"", 
            StyleBox[
            "\"Stop-and-Wait; no bandwidth degradation.\"", "Subsubsection", 
             StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["LINK", Bold], " \[RightArrow] ", 
            Style["SAW Protocol Link", Italic], ": ", 
            Style[
            "Stop-and-Wait; no bandwidth degradation.", "Subsubsection"]}], 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{1.8369701987210297`*^-16, 1.}, {
             0.04758065666691391, 0.7829943335776894}, {0.05829057871425203, 
             0.7278405899050846}, {0.06633644165407371, 0.6722357163694217}, {
             0.07169963686925263, 0.6163083169265071}, {0.07436776026502945, 
             0.5601877414758905}, {0.07433464095742526, 0.5040037866980813}, {
             0.07160035554537258, 0.4478863958584414}, {0.0661712279335569, 
             0.39196535827205486`}, {-0.029555037781466176`, \
-0.39641136869836535`}, {-0.03766645100864752, -0.45200671784576585`}, \
{-0.04844138962818034, -0.507147796626551}, {-0.06185493316741675, \
-0.5617070737578003}, {-0.07787605854059376, -0.6155583635579562}, \
{-0.09646771179958713, -0.6685771177913481}, {-0.11758689383295118`, \
-0.7206407137256005}, {-0.1411847598150402, -0.7716287377357032}, \
{-0.2393156642875574, -0.9709418174260518}}]]},
          TemplateBox[{
            StyleBox["\"LINK\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"Token Dynamics\"", Italic, StripOnInput -> False], 
            "\": \"", 
            StyleBox[
            "\"Flow integrity through reversible exchanges.\"", 
             "Subsubsection", StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["LINK", Bold], " \[RightArrow] ", 
            Style["Token Dynamics", Italic], ": ", 
            Style[
            "Flow integrity through reversible exchanges.", 
             "Subsubsection"]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{0.935016242685415, -0.3546048870425368}, {
             0.7138575774994271, -0.37568148452405525`}, {
             0.6578150282665236, -0.3796652700153974}, {
             0.6016457552560155, -0.3809500426935287}, {
             0.5454796677770086, -0.37953283111299485`}, {
             0.48944666777105356`, -0.3754169130263355}, {
             0.4336763493725894, -0.36861180780324043`}, {
             0.3782976991812896, -0.3591332544139779}, {
             0.3234387979395235, -0.34700317502802147`}, \
{-0.4476512487738637, -0.1569465481088772}, {-0.5018635224084842, \
-0.1421929973929147}, {-0.5553037853103562, -0.12485009762550958`}, \
{-0.6078484398742425, -0.104957959778478}, {-0.6593759598740465, \
-0.08256259074750916}, {-0.7097671715308613, -0.057715786946586745`}, \
{-0.7589055291402393, -0.03047501451230472}, {-0.8066773846212019, \
-0.0009032763951517531}, {-0.9927088740980541, 0.12053668025532395`}}]]},
          TemplateBox[{
            StyleBox["\"FPGA Substructure\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox[
            "\"Graph Virtual Machine\"", Italic, StripOnInput -> False], 
            "\": \"", 
            StyleBox[
            "\"Enables secure, efficient routing and provisioning.\"", 
             "Subsubsection", StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["FPGA Substructure", Bold], " \[RightArrow] ", 
            Style["Graph Virtual Machine", Italic], ": ", 
            Style[
            "Enables secure, efficient routing and provisioning.", 
             "Subsubsection"]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{0.935016242685415, -0.3546048870425368}, {
             0.8890775930048364, -0.2612991767378231}, {
             0.8780305726559711, -0.2374298260424869}, {
             0.8681439145212467, -0.21305696096403803`}, {
             0.8594404846421624, -0.18823695150503406`}, {
             0.8519404124685369, -0.16302720183163194`}, {
             0.8456610443027546, -0.13748601750819575`}, {
             0.8406169031809219, -0.11167247064713416`}, {
             0.8368196552837291, -0.08564626328585213}, {0.7920067045670257, 
             0.2834215902236243}, {0.7894651322379924, 
             0.30960026420267595`}, {0.788185113671505, 
             0.33587085828949925`}, {0.788169609317623, 0.3621726133796105}, {
             0.7894186550350962, 0.38844469829879513`}, {0.7919293620084298, 
             0.4146263504945455}, {0.7956959234291889, 0.4406570165687902}, {
             0.8007096279260917, 0.46647649232688654`}, {0.8229838658936565, 
             0.5680647467311548}}]]},
          TemplateBox[{
            StyleBox["\"FPGA Substructure\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"SAW Protocol Link\"", Italic, StripOnInput -> False], 
            "\": \"", 
            StyleBox[
            "\"Stop-and-Wait; no bandwidth degradation.\"", "Subsubsection", 
             StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["FPGA Substructure", Bold], " \[RightArrow] ", 
            Style["SAW Protocol Link", Italic], ": ", 
            Style[
            "Stop-and-Wait; no bandwidth degradation.", "Subsubsection"]}], 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{0.935016242685415, -0.3546048870425368}, {
             0.992708874098054, 0.12053668025532226`}}]]},
          TemplateBox[{
            StyleBox["\"FPGA Substructure\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"SerDes\"", Italic, StripOnInput -> False], "\": \"", 
            StyleBox[
            "\"No principle defined.\"", "Subsubsection", StripOnInput -> 
             False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["FPGA Substructure", Bold], " \[RightArrow] ", 
            Style["SerDes", Italic], ": ", 
            Style["No principle defined.", "Subsubsection"]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{-0.9927088740980541, 
             0.12053668025532395`}, {-0.965221316494127, 
             0.22083996677631929`}, {-0.9576618226769443, 
             0.24603196182302328`}, {-0.9488998934745135, 
             0.2708313803213828}, {-0.9389557936349453, 
             0.29518086572838653`}, {-0.9278525220519515, 
             0.3190241021144031}, {-0.915615758572588, 
             0.3423059444116806}, {-0.9022738046044412, 
             0.3649725459548549}, {-0.8878575176596206, 
             0.3869714830184901}, {-0.6766632368379069, 
             0.6929392211776444}, {-0.6612059591652346, 
             0.7142196142227715}, {-0.6447434406356898, 
             0.7347322455720056}, {-0.6273137560594608, 
             0.7544296732410782}, {-0.6089572171258376, 
             0.7732663406635167}, {-0.5897162791696074, 
             0.7911986820546929}, {-0.5696354429795909, 
             0.8081852231715567}, {-0.548761151876413, 
             0.824186677235015}, {-0.46472317204376923`, 
             0.8854560256532104}}]]},
          TemplateBox[{
            StyleBox[
            "\"Graph Virtual Machine\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"CELL\"", Italic, StripOnInput -> False], "\": \"", 
            StyleBox[
            "\"Autonomous compute and storage unit.\"", "Subsubsection", 
             StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
            Style["CELL", Italic], ": ", 
            Style["Autonomous compute and storage unit.", "Subsubsection"]}], 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{-0.9927088740980541, 
             0.12053668025532395`}, {-0.771550208912066, 
             0.1416132777368424}, {-0.7155076596791625, 
             0.14559706322818455`}, {-0.6593383866686545, 
             0.14688183590631587`}, {-0.6031722991896475, 
             0.145464624325782}, {-0.5471392991836925, 
             0.14134870623912266`}, {-0.49136898078522845`, 
             0.13454360101602758`}, {-0.4359903305939286, 
             0.12506504762676518`}, {-0.38113142935216254`, 
             0.11293496824080851`}, {
             0.3899586173612247, -0.07712165867833565}, {
             0.4441708909958453, -0.09187520939429805}, {
             0.49761115389771726`, -0.10921810916170327`}, {
             0.5501558084616036, -0.12911024700873486`}, {
             0.6016833284614074, -0.1515056160397037}, {
             0.6520745401182222, -0.1763524198406261}, {
             0.7012128977276004, -0.20359319227490813`}, {
             0.748984753208563, -0.2331649303920611}, {
             0.935016242685415, -0.3546048870425368}}]]},
          TemplateBox[{
            StyleBox[
            "\"Graph Virtual Machine\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"FPGA Substructure\"", Italic, StripOnInput -> False], 
            "\": \"", 
            StyleBox[
            "\"Eliminates heartbeats and retries for lower latency.\"", 
             "Subsubsection", StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
            Style["FPGA Substructure", Italic], ": ", 
            Style[
            "Eliminates heartbeats and retries for lower latency.", 
             "Subsubsection"]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{-0.9927088740980541, 
             0.12053668025532395`}, {-0.9257756000436994, 
             0.04093610278061763}, {-0.9093372765112626, 
             0.020404077048894992`}, {-0.8939050982968231, \
-0.0008945247071586171}, {-0.8795147572208797, -0.022910442696722433`}, \
{-0.8661995355241802, -0.04559275810703553}, {-0.8539902288919539, \
-0.06888901086934604}, {-0.8429150752290951, -0.09274532098950619}, \
{-0.8329996893510268, -0.11710651316259543`}, {-0.701165203008123, \
-0.46472548453316487`}, {-0.6924325173983873, -0.489535215753932}, \
{-0.6849027291699863, -0.5147361056279149}, {-0.6785932533531315, \
-0.5402698690818539}, {-0.6735186826174494, -0.5660774511664612}, \
{-0.66969075352179, -0.5920991636397746}, {-0.6671183193697036, \
-0.6182748230152013}, {-0.665807329733358, -0.6445438897549731}, \
{-0.6631226582407947, -0.7485107481711002}}]]},
          TemplateBox[{
            StyleBox[
            "\"Graph Virtual Machine\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox[
            "\"Reversible Subtransaction\"", Italic, StripOnInput -> False], 
            "\": \"", 
            StyleBox[
            "\"Allows clean transaction reversals.\"", "Subsubsection", 
             StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
            Style["Reversible Subtransaction", Italic], ": ", 
            Style["Allows clean transaction reversals.", "Subsubsection"]}], 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{-0.9927088740980541, 
             0.12053668025532395`}, {-0.9350162426854146, \
-0.3546048870425348}}]]},
          TemplateBox[{
            StyleBox[
            "\"Graph Virtual Machine\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"TRAPH\"", Italic, StripOnInput -> False], "\": \"", 
            StyleBox[
            "\"No principle defined.\"", "Subsubsection", StripOnInput -> 
             False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["Graph Virtual Machine", Bold], " \[RightArrow] ", 
            Style["TRAPH", Italic], ": ", 
            Style["No principle defined.", "Subsubsection"]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{-0.8229838658936568, 
             0.5680647467311566}, {-0.7968788172333039, 
             0.614828852762562}, {-0.7899944357724006, 
             0.6264932263450828}, {-0.7825572173332296, 
             0.6378131248013362}, {-0.7745843628489222, 
             0.6487623672657213}, {-0.7660943120813294, 
             0.6593156301325096}, {-0.7571067009732074, 
             0.6694485056247377}, {-0.7476423162338545, 
             0.679137558244955}, {-0.7377230472632343, 
             0.688360378977265}, {-0.5944187697232793, 
             0.8153168905460865}, {-0.5840675579858214, 
             0.8240521486841239}, {-0.5733083439509881, 
             0.8322796411650977}, {-0.5621660117233236, 
             0.8399803392957989}, {-0.5506663314900486, 
             0.8471364327625068}, {-0.538835899919305, 
             0.8537313708230037}, {-0.5267020786469021, 
             0.8597499005854303}, {-0.5142929309938302, 
             0.86517810228545}, {-0.46472317204376923`, 
             0.8854560256532104}}]]},
          TemplateBox[{
            StyleBox["\"N2N Lattice\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"CELL\"", Italic, StripOnInput -> False], "\": \"", 
            StyleBox[
            "\"Autonomous compute and storage unit.\"", "Subsubsection", 
             StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["N2N Lattice", Bold], " \[RightArrow] ", 
            Style["CELL", Italic], ": ", 
            Style["Autonomous compute and storage unit.", "Subsubsection"]}], 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{-0.8229838658936568, 0.5680647467311566}, {
             1.8369701987210297`*^-16, 1.}}]]},
          TemplateBox[{
            StyleBox["\"N2N Lattice\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"LINK\"", Italic, StripOnInput -> False], "\": \"", 
            StyleBox[
            "\"Bidirectional computation entity between cells.\"", 
             "Subsubsection", StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["N2N Lattice", Bold], " \[RightArrow] ", 
            Style["LINK", Italic], ": ", 
            Style[
            "Bidirectional computation entity between cells.", 
             "Subsubsection"]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{0.8229838658936565, 0.5680647467311548}, {
             0.8689225155742355, 0.47475903642644113`}, {0.8799695359231008, 
             0.450889685731105}, {0.8898561940578251, 0.42651682065265606`}, {
             0.8985596239369096, 0.4016968111936521}, {0.9060596961105348, 
             0.37648706152025}, {0.9123390642763174, 0.3509458771968138}, {
             0.91738320539815, 0.3251323303357522}, {0.9211804532953427, 
             0.2991061229744702}, {0.965993404012046, -0.06996173053500622}, {
             0.9685349763410793, -0.09614040451405792}, {
             0.9698149949075667, -0.12241099860088117`}, {
             0.9698304992614486, -0.1487127536909925}, {
             0.9685814535439754, -0.1749848386101771}, {
             0.966070746570642, -0.20116649080592747`}, {
             0.9623041851498827, -0.22719715688017214`}, {
             0.9572904806529801, -0.2530166326382685}, {
             0.935016242685415, -0.3546048870425368}}]]},
          TemplateBox[{
            StyleBox["\"SAW Protocol Link\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"FPGA Substructure\"", Italic, StripOnInput -> False], 
            "\": \"", 
            StyleBox[
            "\"Eliminates heartbeats and retries for lower latency.\"", 
             "Subsubsection", StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
            Style["FPGA Substructure", Italic], ": ", 
            Style[
            "Eliminates heartbeats and retries for lower latency.", 
             "Subsubsection"]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{0.8229838658936565, 0.5680647467311548}, {
             0.6631226582407954, -0.7485107481711022}}]]},
          TemplateBox[{
            StyleBox["\"SAW Protocol Link\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"Alice\"", Italic, StripOnInput -> False], "\": \"", 
            StyleBox[
            "\"No principle defined.\"", "Subsubsection", StripOnInput -> 
             False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
            Style["Alice", Italic], ": ", 
            Style["No principle defined.", "Subsubsection"]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{0.8229838658936565, 0.5680647467311548}, {
             0.23931566428755816`, -0.9709418174260523}}]]},
          TemplateBox[{
            StyleBox["\"SAW Protocol Link\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"Bob\"", Italic, StripOnInput -> False], "\": \"", 
            StyleBox[
            "\"No principle defined.\"", "Subsubsection", StripOnInput -> 
             False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
            Style["Bob", Italic], ": ", 
            Style["No principle defined.", "Subsubsection"]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{0.8229838658936565, 0.5680647467311548}, {
             0.46472317204376834`, 0.8854560256532091}}]]},
          TemplateBox[{
            StyleBox["\"SAW Protocol Link\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox[
            "\"Truncated Tail Latency\"", Italic, StripOnInput -> False], 
            "\": \"", 
            StyleBox[
            "\"Transaction success without heartbeats.\"", "Subsubsection", 
             StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["SAW Protocol Link", Bold], " \[RightArrow] ", 
            Style["Truncated Tail Latency", Italic], ": ", 
            Style[
            "Transaction success without heartbeats.", "Subsubsection"]}], 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{-0.2393156642875574, -0.9709418174260518}, \
{-0.28689632095447104`, -0.7539361510037412}, {-0.29760624300180927`, \
-0.6987824073311364}, {-0.3056521059416307, -0.6431775337954735}, \
{-0.31101530115680986`, -0.5872501343525589}, {-0.3136834245525867, \
-0.5311295589019422}, {-0.3136503052449825, -0.4749456041241331}, \
{-0.3109160198329296, -0.4188282132844932}, {-0.3054868922211139, \
-0.36290717569810665`}, {-0.20976062650609106`, 
             0.42546955127231356`}, {-0.20164921327890972`, 
             0.48106490041971406`}, {-0.190874274659377, 
             0.5362059792004992}, {-0.1774607311201406, 
             0.5907652563317485}, {-0.16143960574696348`, 
             0.6446165461319044}, {-0.1428479524879701, 
             0.6976353003652963}, {-0.12172877045460606`, 
             0.7496988962995487}, {-0.09813090447251716, 
             0.8006869203096514}, {1.8369701987210297`*^-16, 1.}}]]},
          TemplateBox[{
            StyleBox["\"Token Dynamics\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"LINK\"", Italic, StripOnInput -> False], "\": \"", 
            StyleBox[
            "\"Bidirectional computation entity between cells.\"", 
             "Subsubsection", StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["Token Dynamics", Bold], " \[RightArrow] ", 
            Style["LINK", Italic], ": ", 
            Style[
            "Bidirectional computation entity between cells.", 
             "Subsubsection"]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{-0.2393156642875574, -0.9709418174260518}, \
{-0.292297840833029, -0.9631159534494402}, {-0.30564545490373785`, \
-0.9608151888393051}, {-0.3188670178304173, -0.9578753601116933}, \
{-0.33193195054353275`, -0.9543032665555833}, {-0.34481003623073625`, \
-0.9501071697734678}, {-0.35747149022285635`, -0.9452967745737716}, \
{-0.36988702888041847`, -0.9398832065253939}, {-0.3820279373213754, \
-0.9338789862262928}, {-0.5515507349026703, -0.8449065585243125}, \
{-0.5633889334146999, -0.8383255726436396}, {-0.574897042398471, \
-0.8311830418044005}, {-0.5860484456916752, -0.823495485380923}, \
{-0.5968173521273679, -0.8152806832925502}, {-0.6071788551842445, \
-0.8065576348819217}, {-0.6171089905908939, -0.7973465149729504}, \
{-0.6265847917507966, -0.7876686272101263}, {-0.6631226582407947, \
-0.7485107481711002}}]]},
          TemplateBox[{
            StyleBox["\"Token Dynamics\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox[
            "\"Reversible Subtransaction\"", Italic, StripOnInput -> False], 
            "\": \"", 
            StyleBox[
            "\"Allows clean transaction reversals.\"", "Subsubsection", 
             StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["Token Dynamics", Bold], " \[RightArrow] ", 
            Style["Reversible Subtransaction", Italic], ": ", 
            Style["Allows clean transaction reversals.", "Subsubsection"]}], 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{-0.2393156642875574, -0.9709418174260518}, {
             0.6631226582407954, -0.7485107481711022}}]]},
          TemplateBox[{
            StyleBox["\"Token Dynamics\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"Alice\"", Italic, StripOnInput -> False], "\": \"", 
            StyleBox[
            "\"No principle defined.\"", "Subsubsection", StripOnInput -> 
             False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["Token Dynamics", Bold], " \[RightArrow] ", 
            Style["Alice", Italic], ": ", 
            Style["No principle defined.", "Subsubsection"]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[2], 
           Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{-0.2393156642875574, -0.9709418174260518}, {
             0.23931566428755816`, -0.9709418174260523}}]]},
          TemplateBox[{
            StyleBox["\"Token Dynamics\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"Bob\"", Italic, StripOnInput -> False], "\": \"", 
            StyleBox[
            "\"No principle defined.\"", "Subsubsection", StripOnInput -> 
             False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["Token Dynamics", Bold], " \[RightArrow] ", 
            Style["Bob", Italic], ": ", 
            Style["No principle defined.", "Subsubsection"]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[1, 0.75, 0], AbsoluteThickness[2], Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{-0.6631226582407947, -0.7485107481711002}, \
{-0.7300559322951499, -0.668910170696394}, {-0.7464942558275867, \
-0.6483781449646714}, {-0.761926434042026, -0.6270795432086178}, \
{-0.7763167751179694, -0.6050636252190539}, {-0.789631996814669, \
-0.5823813098087408}, {-0.8018413034468953, -0.5590850570464303}, \
{-0.812916457109754, -0.5352287469262702}, {-0.8228318429878225, \
-0.5108675547531809}, {-0.954666329330726, -0.16324858338261147`}, \
{-0.9633990149404617, -0.1384388521618444}, {-0.9709288031688629, \
-0.11323796228786144`}, {-0.9772382789857175, -0.08770419883392244}, \
{-0.9823128497213998, -0.06189661674931518}, {-0.9861407788170591, \
-0.03587490427600182}, {-0.9887132129691456, -0.009699244900575082}, \
{-0.9900242026054911, 0.01656982183919664}, {-0.9927088740980541, 
             0.12053668025532395`}}]]},
          TemplateBox[{
            StyleBox[
            "\"Reversible Subtransaction\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox[
            "\"Graph Virtual Machine\"", Italic, StripOnInput -> False], 
            "\": \"", 
            StyleBox[
            "\"Enables secure, efficient routing and provisioning.\"", 
             "Subsubsection", StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["Reversible Subtransaction", Bold], " \[RightArrow] ", 
            Style["Graph Virtual Machine", Italic], ": ", 
            Style[
            "Enables secure, efficient routing and provisioning.", 
             "Subsubsection"]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[1, 0.75, 0], AbsoluteThickness[2], Arrowheads[0.025], 
           ArrowBox[
            BezierCurveBox[{{-0.6631226582407947, -0.7485107481711002}, \
{-0.6101404816953233, -0.756336612147712}, {-0.5967928676246144, \
-0.7586373767578471}, {-0.5835713046979351, -0.7615772054854588}, \
{-0.5705063719848196, -0.7651492990415689}, {-0.5576282862976161, \
-0.7693453958236842}, {-0.5449668323054959, -0.7741557910233805}, \
{-0.5325512936479337, -0.7795693590717582}, {-0.5204103852069769, \
-0.7855735793708591}, {-0.35088758762568206`, -0.8745460070728397}, \
{-0.33904938911365246`, -0.8811269929535125}, {-0.3275412801298813, \
-0.8882695237927516}, {-0.31638987683667713`, -0.8959570802162291}, \
{-0.3056209704009845, -0.904171882304602}, {-0.2952594673441078, \
-0.9128949307152303}, {-0.28532933193745846`, -0.9221060506242017}, \
{-0.2758535307775557, -0.9317839383870258}, {-0.2393156642875574, \
-0.9709418174260518}}]]},
          TemplateBox[{
            StyleBox[
            "\"Reversible Subtransaction\"", Bold, StripOnInput -> False], 
            "\" \[RightArrow] \"", 
            StyleBox["\"Token Dynamics\"", Italic, StripOnInput -> False], 
            "\": \"", 
            StyleBox[
            "\"Flow integrity through reversible exchanges.\"", 
             "Subsubsection", StripOnInput -> False]}, "RowDefault"],
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          Row[{
            Style["Reversible Subtransaction", Bold], " \[RightArrow] ", 
            Style["Token Dynamics", Italic], ": ", 
            Style[
            "Flow integrity through reversible exchanges.", 
             "Subsubsection"]}], "Tooltip"]& ]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         DiskBox[{-0.46472317204376923`, 0.8854560256532104}, 0.05], 
         InsetBox[
          StyleBox["\<\"CELL\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->12,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-0.46472317204376923, 0.8854560256532104},
           NCache[ImageScaled[{Rational[1, 2], -0.09999999999999998}], 
           ImageScaled[{0.5, -0.09999999999999998}]]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], 
         DiskBox[{1.8369701987210297`*^-16, 1.}, 0.05], InsetBox[
          StyleBox["\<\"LINK\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->12,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {1.8369701987210297*^-16, 1.}, NCache[
          ImageScaled[{Rational[1, 2], -0.09999999999999998}], 
           ImageScaled[{0.5, -0.09999999999999998}]]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], 
         DiskBox[{0.935016242685415, -0.3546048870425368}, 0.05], InsetBox[
          StyleBox["\<\"FPGA Substructure\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->12,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {0.935016242685415, -0.3546048870425368},
           NCache[ImageScaled[{Rational[1, 2], -0.09999999999999998}], 
           ImageScaled[{0.5, -0.09999999999999998}]]]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], 
         DiskBox[{-0.9927088740980541, 0.12053668025532395`}, 0.05], 
         InsetBox[
          StyleBox["\<\"Graph Virtual Machine\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->12,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-0.9927088740980541, 0.12053668025532395},
           NCache[ImageScaled[{Rational[1, 2], -0.09999999999999998}], 
           ImageScaled[{0.5, -0.09999999999999998}]]]}, 
        {RGBColor[0.528488, 0.470624, 0.701351], 
         DiskBox[{-0.8229838658936568, 0.5680647467311566}, 0.05], InsetBox[
          StyleBox["\<\"N2N Lattice\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->12,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-0.8229838658936568, 0.5680647467311566},
           NCache[ImageScaled[{Rational[1, 2], -0.09999999999999998}], 
           ImageScaled[{0.5, -0.09999999999999998}]]]}, 
        {RGBColor[0.772079, 0.431554, 0.102387], 
         DiskBox[{0.8229838658936565, 0.5680647467311548}, 0.05], InsetBox[
          StyleBox["\<\"SAW Protocol Link\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->12,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {0.8229838658936565, 0.5680647467311548},
           NCache[ImageScaled[{Rational[1, 2], -0.09999999999999998}], 
           ImageScaled[{0.5, -0.09999999999999998}]]]}, 
        {RGBColor[0.363898, 0.618501, 0.782349], 
         DiskBox[{-0.2393156642875574, -0.9709418174260518}, 0.05], InsetBox[
          StyleBox["\<\"Token Dynamics\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->12,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-0.2393156642875574, -0.9709418174260518},
           NCache[ImageScaled[{Rational[1, 2], -0.09999999999999998}], 
           ImageScaled[{0.5, -0.09999999999999998}]]]}, 
        {RGBColor[1, 0.75, 0], 
         DiskBox[{-0.6631226582407947, -0.7485107481711002}, 0.05], InsetBox[
          StyleBox["\<\"Reversible Subtransaction\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->12,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-0.6631226582407947, -0.7485107481711002},
           NCache[ImageScaled[{Rational[1, 2], -0.09999999999999998}], 
           ImageScaled[{0.5, -0.09999999999999998}]]]}, 
        {RGBColor[0.647624, 0.37816, 0.614037], 
         DiskBox[{0.992708874098054, 0.12053668025532226`}, 0.05], InsetBox[
          StyleBox["\<\"SerDes\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->12,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {0.992708874098054, 0.12053668025532226},
           NCache[ImageScaled[{Rational[1, 2], -0.09999999999999998}], 
           ImageScaled[{0.5, -0.09999999999999998}]]]}, 
        {RGBColor[0.571589, 0.586483, 0.], 
         DiskBox[{-0.9350162426854146, -0.3546048870425348}, 0.05], InsetBox[
          StyleBox["\<\"TRAPH\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->12,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-0.9350162426854146, -0.3546048870425348},
           NCache[ImageScaled[{Rational[1, 2], -0.09999999999999998}], 
           ImageScaled[{0.5, -0.09999999999999998}]]]}, 
        {RGBColor[0.915, 0.3325, 0.2125], 
         DiskBox[{0.6631226582407954, -0.7485107481711022}, 0.05], InsetBox[
          StyleBox["\<\"Alice\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->12,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {0.6631226582407954, -0.7485107481711022},
           NCache[ImageScaled[{Rational[1, 2], -0.09999999999999998}], 
           ImageScaled[{0.5, -0.09999999999999998}]]]}, 
        {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         DiskBox[{0.23931566428755816`, -0.9709418174260523}, 0.05], 
         InsetBox[
          StyleBox["\<\"Bob\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->12,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {0.23931566428755816, -0.9709418174260523},
           NCache[ImageScaled[{Rational[1, 2], -0.09999999999999998}], 
           ImageScaled[{0.5, -0.09999999999999998}]]]}, 
        {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142],
          DiskBox[{0.46472317204376834`, 0.8854560256532091}, 0.05], 
         InsetBox[
          StyleBox["\<\"Truncated Tail Latency\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->12,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {0.46472317204376834, 0.8854560256532091},
           NCache[ImageScaled[{Rational[1, 2], -0.09999999999999998}], 
           ImageScaled[{0.5, -0.09999999999999998}]]]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.962964667828394*^9, 3.962964671157988*^9}, {
   3.9629747156604023`*^9, 3.962974730918356*^9}, 3.962978200359725*^9, 
   3.962978338512697*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"221c058e-ac55-466f-adf3-e98cf9d38bd7"]
}, Open  ]]
}, Open  ]],

Cell["Spanning Tree Construction and Self-Healing", "Affiliation",
 CellChangeTimes->{{3.962959958952446*^9, 3.962959960700286*^9}, {
  3.9629600386900682`*^9, 3.962960043603222*^9}, {3.962960186227029*^9, 
  3.962960187889864*^9}, {3.962960351648953*^9, 
  3.962960352735743*^9}},ExpressionUUID->"65b5b73f-f2b2-4155-96de-\
d1fd58f184b3"],

Cell["\<\
One challenge in any richly connected network is managing loops and routing. \
The code addresses this by building a spanning tree on top of the physical \
topology. A spanning tree is a subset of the network that connects all nodes \
without any cycles. In practice, traditional Ethernet networks use protocols \
like STP (Spanning Tree Protocol) to prevent loops by selecting a tree of \
links. Here, the Graph Virtual Machine (GVM) concept is mentioned \[Dash] it \
refers to a control-plane mechanism that manages the network graph by \
operating on spanning trees (for deterministic routing and consensus). The \
code\[CloseCurlyQuote]s function buildSpanningTree takes a graph and a chosen \
root node, and performs a breadth-first search to construct a spanning tree \
(https://mulliganstew-gang.vercel.app/#:~:text=Alternating%20Bit%20Protocol%\
2C%20demonstrating%20the,%C2%BB). This tree would represent active \
communication routes used by the network at a given time (ensuring no loops \
and a well-defined parent-child structure for routing).\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.962960362295182*^9, 
  3.962960371438897*^9}},ExpressionUUID->"b14bee8e-05f0-467b-b883-\
a5e5e3b10ee7"],

Cell["\<\
Crucially, the N2N lattice is designed to be self-healing when failures \
occur. The function healTree demonstrates a local healing algorithm on the \
spanning tree. If a node or link fails (is removed), some nodes may become \
disconnected (orphans) from the main tree. The healing process lets each \
orphaned node seek a new neighbor that is still connected to the root \
component and reattach by creating a new tree edge. This is done by looking \
at the physical neighbors of the orphan that are not failed, and linking to \
the first such neighbor that lies in the still-connected portion of the tree. \
In essence, the network reforms a spanning tree on-the-fly after failures, \
using only local information (each orphan finds any live neighbor toward the \
core). This behavior reflects a highly resilient control strategy: the \
network doesn\[CloseCurlyQuote]t rely on a single routing center to recover; \
instead, nodes autonomously re-route and maintain overall connectivity. The \
result is a new spanning tree that might have a different structure but still \
connects all the surviving nodes. This models the idea of self-stabilizing \
routing in a lattice: after damage, the network rapidly finds new loop-free \
routes. By contrast, in a traditional network, a failure of a central switch \
or a cut link can take down entire subtrees, and recovery may require \
higher-layer intervention or slow reconvergence. The D\[CapitalAE]D\
\[CapitalAE]LUS N2N lattice aims to keep the network running by continuously \
adapting its spanning tree of connectivity even as nodes fail.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
   3.962960362295182*^9, 3.962960418614182*^9}, 
   3.962978127592881*^9},ExpressionUUID->"7f78c849-5f48-4b2d-bd37-\
54581f34879a"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["(In the interactive simulation, one can click to \
choose a new root or Ctrl-click to \[OpenCurlyDoubleQuote]fail\
\[CloseCurlyDoubleQuote] a node. The visualization would show the physical \
hex lattice in gray and the current spanning tree in highlighted red. As \
failures are introduced, the spanning tree edges reconfigure to heal around \
the failed nodes, maintaining a single connected component whenever \
possible.)",
 FontSlant->"Italic"]], "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.962960362295182*^9, 
  3.962960417103862*^9}},ExpressionUUID->"932f7d05-bce6-4559-8beb-\
d11fb2b0bddc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Daedaelus`TopologyGraph`\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TopologyGraph", "::", "usage"}], "MessageName"], "=", 
   "\"\<TopologyGraph[spec, type_String, opts:OptionsPattern[]] generates a \
network topology graph. 'spec' can be an integer (cell count) or {rows, \
cols}. 'type' is \\\"Centralized\\\", \\\"Decentralized\\\", \
\\\"Distributed\\\", or \\\"N2N_Lattice\\\".\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateCentralizedEdges", "[", 
    RowBox[{"cellCount_Integer", "?", "Positive"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"hub", "=", "1"}], ",", 
       RowBox[{"leaves", "=", 
        RowBox[{"Range", "[", 
         RowBox[{"2", ",", "cellCount"}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"hub", "\[UndirectedEdge]", "#1"}], "&"}], ")"}], "/@", 
      "leaves"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateDecentralizedEdges", "[", 
    RowBox[{"cellCount_Integer", "?", "Positive"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "hubCount", ",", "hubs", ",", "leaves", ",", "hubComplete", ",", 
       "leafAttachments", ",", "edges"}], "}"}], ",", 
     RowBox[{
      RowBox[{"hubCount", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"Floor", "[", 
          FractionBox["cellCount", "10"], "]"}], ",", "2"}], "]"}]}], ";", 
      RowBox[{"hubs", "=", 
       RowBox[{"Range", "[", "hubCount", "]"}]}], ";", 
      RowBox[{"leaves", "=", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"hubCount", "+", "1"}], ",", "cellCount"}], "]"}]}], ";", 
      RowBox[{"hubComplete", "=", 
       RowBox[{"UndirectedEdge", "@@@", 
        RowBox[{"Subsets", "[", 
         RowBox[{"hubs", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";", 
      RowBox[{"leafAttachments", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#1", "\[UndirectedEdge]", 
           RowBox[{"RandomChoice", "[", "hubs", "]"}]}], "&"}], ")"}], "/@", 
        "leaves"}]}], ";", 
      RowBox[{"edges", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"hubComplete", ",", "leafAttachments"}], "]"}]}], ";", 
      RowBox[{"DeleteDuplicates", "[", "edges", "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateDistributedEdges", "[", 
    RowBox[{"cellCount_Integer", "?", "Positive"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "rg", "}"}], ",", 
     RowBox[{
      RowBox[{"rg", "=", 
       RowBox[{"RandomGraph", "[", 
        RowBox[{"{", 
         RowBox[{"cellCount", ",", 
          RowBox[{"Floor", "[", 
           RowBox[{"cellCount", " ", "2.5"}], "]"}]}], "}"}], "]"}]}], ";", 
      RowBox[{"EdgeList", "[", "rg", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateN2NLatticeEdges", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rows_Integer", "?", "Positive"}], ",", 
      RowBox[{"cols_Integer", "?", "Positive"}]}], "}"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "grid", "}"}], ",", 
     RowBox[{
      RowBox[{"grid", "=", 
       RowBox[{"GridGraph", "[", 
        RowBox[{"{", 
         RowBox[{"rows", ",", "cols"}], "}"}], "]"}]}], ";", 
      RowBox[{"EdgeList", "[", "grid", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TopologyGraph", "[", 
    RowBox[{"spec_", ",", "type_String", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"edges", ",", "graphOpts", ",", "baseGraph", ",", "annotated"}],
       "}"}], ",", 
     RowBox[{
      RowBox[{"edges", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"type", ",", "\"\<Centralized\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"IntegerQ", "[", "spec", "]"}], ",", 
           RowBox[{"GenerateCentralizedEdges", "[", "spec", "]"}], ",", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{
              StyleBox[
               RowBox[{"TopologyGraph", "::", "badspec"}], "MessageName"], 
              ",", "spec"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ",", 
         "\"\<Decentralized\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"IntegerQ", "[", "spec", "]"}], ",", 
           RowBox[{"GenerateDecentralizedEdges", "[", "spec", "]"}], ",", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{
              StyleBox[
               RowBox[{"TopologyGraph", "::", "badspec"}], "MessageName"], 
              ",", "spec"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ",", 
         "\"\<Distributed\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"IntegerQ", "[", "spec", "]"}], ",", 
           RowBox[{"GenerateDistributedEdges", "[", "spec", "]"}], ",", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{
              StyleBox[
               RowBox[{"TopologyGraph", "::", "badspec"}], "MessageName"], 
              ",", "spec"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ",", 
         "\"\<N2N_Lattice\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ListQ", "[", "spec", "]"}], "&&", 
            RowBox[{
             RowBox[{"Length", "[", "spec", "]"}], "\[Equal]", "2"}]}], ",", 
           RowBox[{"GenerateN2NLatticeEdges", "[", "spec", "]"}], ",", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{
              StyleBox[
               RowBox[{"TopologyGraph", "::", "badspec"}], "MessageName"], 
              ",", "spec"}], "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ",", "_", ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            StyleBox[
             RowBox[{"TopologyGraph", "::", "badtype"}], "MessageName"], ",", 
            "type"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}]}], ";", 
      RowBox[{"graphOpts", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "opts", "}"}], ",", 
         RowBox[{"Options", "[", "Graph", "]"}]}], "]"}]}], ";", 
      RowBox[{"baseGraph", "=", 
       RowBox[{"Graph", "[", 
        RowBox[{"edges", ",", 
         RowBox[{"Sequence", "@@", "graphOpts"}]}], "]"}]}], ";", 
      RowBox[{"annotated", "=", 
       RowBox[{"Annotation", "[", 
        RowBox[{"baseGraph", ",", 
         RowBox[{"\"\<NetworkTopologyType\>\"", "\[Rule]", "type"}], ",", 
         RowBox[{
         "\"\<DaedaelusPrinciple\>\"", "\[Rule]", 
          "\"\<Manage on a Tree, Compute on a Graph\>\""}]}], "]"}]}], ";", 
      "annotated"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TopologyGraph", "::", "badspec"}], "MessageName"], "=", 
   "\"\<Specification `1` is malformed for the given topology type.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TopologyGraph", "::", "badtype"}], "MessageName"], "=", 
   "\"\<Topology type `1` is not recognized.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<Daedaelus`TopologyGraph`\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Style", "[", 
    RowBox[{
    "\"\<D\[CapitalAE]D\[CapitalAE]LUS TopologyGraph Examples\>\"", ",", 
     "\"\<Title\>\"", ",", "Bold"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<Base topology graphs only (no resilience analysis or \
augmentations).\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Style", "[", 
    RowBox[{
    "\"\<1. Paul Baran Topologies\>\"", ",", "\"\<Section\>\"", ",", "Bold"}],
     "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cellCount", "=", "47"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"centralizedGraph", "=", 
   RowBox[{"TopologyGraph", "[", 
    RowBox[{"cellCount", ",", "\"\<Centralized\>\"", ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Centralized (SPOF)\>\""}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"decentralizedGraph", "=", 
   RowBox[{"TopologyGraph", "[", 
    RowBox[{"cellCount", ",", "\"\<Decentralized\>\"", ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Decentralized (Fragile Partitions)\>\""}], 
     ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"distributedGraph", "=", 
   RowBox[{"TopologyGraph", "[", 
    RowBox[{"cellCount", ",", "\"\<Distributed\>\"", ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Distributed (Resilient)\>\""}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Labeled", "[", 
      RowBox[{"centralizedGraph", ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Centralized\>\"", ",", "Bold"}], "]"}]}], "]"}], ",", 
     RowBox[{"Spacer", "[", "15", "]"}], ",", 
     RowBox[{"Labeled", "[", 
      RowBox[{"decentralizedGraph", ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Decentralized\>\"", ",", "Bold"}], "]"}]}], "]"}], ",", 
     RowBox[{"Spacer", "[", "15", "]"}], ",", 
     RowBox[{"Labeled", "[", 
      RowBox[{"distributedGraph", ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Distributed\>\"", ",", "Bold"}], "]"}]}], "]"}]}], "}"}],
    ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Style", "[", 
    RowBox[{
    "\"\<2. D\[CapitalAE]D\[CapitalAE]LUS N2N Lattice\>\"", ",", 
     "\"\<Section\>\"", ",", "Bold"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n2nLattice", "=", 
   RowBox[{"TopologyGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "20"}], "}"}], ",", "\"\<N2N_Lattice\>\"", ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<D\[CapitalAE]D\[CapitalAE]LUS N2N Lattice (GVM Groundplane)\>\"", 
        ",", "14", ",", "Bold"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"VertexStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"EdgeStyle", "\[Rule]", 
      RowBox[{"GrayLevel", "[", "0.4", "]"}]}]}], "]"}]}], 
  ";"}], "\n", "n2nLattice"}], "Input",
 CellChangeTimes->{{3.9629658061275*^9, 3.962965811623625*^9}, {
  3.9629781275997343`*^9, 3.962978127602137*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"554a0b5a-fdc2-46ca-b14c-d21cdbbf6192"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"D\[CapitalAE]D\[CapitalAE]LUS TopologyGraph Examples\"\>", 
  "Title",
  StripOnInput->False,
  FontWeight->Bold]], "Print",
 CellChangeTimes->{{3.962978248282151*^9, 3.962978249871773*^9}, 
   3.962978340366138*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"e5e4776a-baf0-4a39-97b6-fba63bf020a4"],

Cell[BoxData["\<\"Base topology graphs only (no resilience analysis or \
augmentations).\"\>"], "Print",
 CellChangeTimes->{{3.962978248282151*^9, 3.962978249871773*^9}, 
   3.9629783403670588`*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"c0d310d7-1122-43f6-ada8-a45904dc26db"],

Cell[BoxData[
 StyleBox["\<\"1. Paul Baran Topologies\"\>", "Section",
  StripOnInput->False,
  FontWeight->Bold]], "Print",
 CellChangeTimes->{{3.962978248282151*^9, 3.962978249871773*^9}, 
   3.962978340367856*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"99435814-57c6-4d00-b63f-6703a4c837c2"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     TagBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics", 
        DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
             34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47}, {
             Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {
              1, 9}, {1, 10}, {1, 11}, {1, 12}, {1, 13}, {1, 14}, {1, 15}, {1,
               16}, {1, 17}, {1, 18}, {1, 19}, {1, 20}, {1, 21}, {1, 22}, {1, 
              23}, {1, 24}, {1, 25}, {1, 26}, {1, 27}, {1, 28}, {1, 29}, {1, 
              30}, {1, 31}, {1, 32}, {1, 33}, {1, 34}, {1, 35}, {1, 36}, {1, 
              37}, {1, 38}, {1, 39}, {1, 40}, {1, 41}, {1, 42}, {1, 43}, {1, 
              44}, {1, 45}, {1, 46}, {1, 47}}}, {
             PlotLabel -> "Centralized (SPOF)", VertexLabels -> {"Name"}}]]}, 
         
         TagBox[
          GraphicsGroupBox[{{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], 
             Arrowheads[0.], {
              ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGDQA2ImKP5ZbJbjwfXbvoVDUbXZarM9AxpAl0dXh13+ME75
Yz0btx+5foaA/ss45Zd6Zb5T5rxBwPw7OOWLn9ccMLr8gID9j3HKT9E82nl5
4VMC7nuBU35rNm9wScErAu5/g1P+2tpQGVH79wT89wGn/O/v5z7dYvtEwP+f
ccrzSBaHa+d9IRA+X3HKy1iJ76m++o1A+P3AKa8bvVvhjM1PAuH7C6e8bU18
q8yS3wTC/w9Oeb+5zK9yuP8RiJ//OOX17wcvj7NkcMAff7jlt79fepMtlxGn
PCR+mXDKOzD84F6/ALc8hGbGKX9CwMsu/ApueUj6YMEpH6A4p+A/OytOeUj6
wS1/w/DdouXWbDjlIekLt3yCk8NV/3x2nPKQ9MeBU/5l0CT2H4twy0PSJydO
+cLkJ5YLruGWh6RfLpzyED43XB4ADpK7JQ==
               "], 0.03290412487744246]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], {
              
              DiskBox[{1.6900104739245292`, 0.07511157661886797}, 
               0.03290412487744246], 
              InsetBox[
               FormBox["1", TraditionalForm], 
               Offset[{2, 2}, {1.7229145988019716`, 0.10801570149631043`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["2", TraditionalForm], 
               Offset[{2, 2}, {0.03290412487744246, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0.07511157661886797, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["3", TraditionalForm], 
               Offset[{2, 2}, {0.10801570149631043`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0.15022315323773594`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["4", TraditionalForm], 
               Offset[{2, 2}, {0.1831272781151784, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0.2253347298566039, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["5", TraditionalForm], 
               Offset[{2, 2}, {0.2582388547340464, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0.3004463064754719, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["6", TraditionalForm], 
               Offset[{2, 2}, {0.3333504313529143, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0.37555788309433985`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["7", TraditionalForm], 
               Offset[{2, 2}, {0.40846200797178234`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0.4506694597132078, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["8", TraditionalForm], 
               Offset[{2, 2}, {0.48357358459065025`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0.5257810363320757, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["9", TraditionalForm], 
               Offset[{2, 2}, {0.5586851612095182, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0.6008926129509438, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["10", TraditionalForm], 
               Offset[{2, 2}, {0.6337967378283862, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0.6760041895698117, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["11", TraditionalForm], 
               Offset[{2, 2}, {0.7089083144472541, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0.7511157661886797, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["12", TraditionalForm], 
               Offset[{2, 2}, {0.7840198910661221, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0.8262273428075476, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["13", TraditionalForm], 
               Offset[{2, 2}, {0.85913146768499, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0.9013389194264156, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["14", TraditionalForm], 
               Offset[{2, 2}, {0.9342430443038581, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0.9764504960452836, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["15", TraditionalForm], 
               Offset[{2, 2}, {1.009354620922726, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1.0515620726641515`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["16", TraditionalForm], 
               Offset[{2, 2}, {1.084466197541594, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1.1266736492830194`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["17", TraditionalForm], 
               Offset[{2, 2}, {1.1595777741604618`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1.2017852259018875`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["18", TraditionalForm], 
               Offset[{2, 2}, {1.23468935077933, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1.2768968025207554`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["19", TraditionalForm], 
               Offset[{2, 2}, {1.3098009273981979`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1.3520083791396234`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["20", TraditionalForm], 
               Offset[{2, 2}, {1.3849125040170658`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1.4271199557584913`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["21", TraditionalForm], 
               Offset[{2, 2}, {1.4600240806359337`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1.5022315323773594`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["22", TraditionalForm], 
               Offset[{2, 2}, {1.5351356572548018`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1.5773431089962273`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["23", TraditionalForm], 
               Offset[{2, 2}, {1.6102472338736697`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1.6524546856150952`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["24", TraditionalForm], 
               Offset[{2, 2}, {1.6853588104925377`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1.7275662622339631`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["25", TraditionalForm], 
               Offset[{2, 2}, {1.7604703871114056`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1.8026778388528313`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["26", TraditionalForm], 
               Offset[{2, 2}, {1.8355819637302737`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1.8777894154716992`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["27", TraditionalForm], 
               Offset[{2, 2}, {1.9106935403491416`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1.9529009920905671`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["28", TraditionalForm], 
               Offset[{2, 2}, {1.9858051169680095`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{2.028012568709435, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["29", TraditionalForm], 
               Offset[{2, 2}, {2.0609166935868775`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{2.103124145328303, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["30", TraditionalForm], 
               Offset[{2, 2}, {2.1360282702057454`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{2.178235721947171, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["31", TraditionalForm], 
               Offset[{2, 2}, {2.2111398468246133`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{2.2533472985660388`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["32", TraditionalForm], 
               Offset[{2, 2}, {2.286251423443481, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{2.328458875184907, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["33", TraditionalForm], 
               Offset[{2, 2}, {2.3613630000623496`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{2.403570451803775, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["34", TraditionalForm], 
               Offset[{2, 2}, {2.4364745766812175`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{2.478682028422643, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["35", TraditionalForm], 
               Offset[{2, 2}, {2.5115861533000854`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{2.553793605041511, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["36", TraditionalForm], 
               Offset[{2, 2}, {2.5866977299189533`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{2.628905181660379, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["37", TraditionalForm], 
               Offset[{2, 2}, {2.661809306537821, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{2.7040167582792467`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["38", TraditionalForm], 
               Offset[{2, 2}, {2.736920883156689, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{2.7791283348981146`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["39", TraditionalForm], 
               Offset[{2, 2}, {2.812032459775557, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{2.8542399115169825`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["40", TraditionalForm], 
               Offset[{2, 2}, {2.887144036394425, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{2.9293514881358504`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["41", TraditionalForm], 
               Offset[{2, 2}, {2.962255613013293, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{3.004463064754719, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["42", TraditionalForm], 
               Offset[{2, 2}, {3.0373671896321612`, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{3.0795746413735867`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["43", TraditionalForm], 
               Offset[{2, 2}, {3.112478766251029, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{3.1546862179924546`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["44", TraditionalForm], 
               Offset[{2, 2}, {3.187590342869897, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{3.2297977946113225`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["45", TraditionalForm], 
               Offset[{2, 2}, {3.262701919488765, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{3.3049093712301905`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["46", TraditionalForm], 
               Offset[{2, 2}, {3.337813496107633, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{3.3800209478490584`, 0.}, 0.03290412487744246], 
              InsetBox[
               FormBox["47", TraditionalForm], 
               Offset[{2, 2}, {3.412925072726501, 0.03290412487744246}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
          MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
         False]], {
       FormatType -> TraditionalForm, FrameTicks -> None, PlotLabel -> 
        FormBox["\"Centralized (SPOF)\"", TraditionalForm], DefaultBaseStyle -> 
        "NetworkGraphics"}], 
      Annotation[#, "NetworkTopologyType" -> "Centralized", 
       "DaedaelusPrinciple" -> "Manage on a Tree, Compute on a Graph"]& ], 
     StyleBox["\"Centralized\"", Bold, StripOnInput -> False]}, "Labeled", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], 
   TemplateBox[{15}, "Spacer1"], 
   TemplateBox[{
     TagBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics", 
        DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
             34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47}, {
             Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}, {5, 2}, {
              6, 1}, {7, 1}, {8, 4}, {9, 4}, {10, 3}, {11, 4}, {12, 2}, {13, 
              3}, {14, 2}, {15, 3}, {16, 2}, {17, 1}, {18, 3}, {19, 3}, {20, 
              1}, {21, 4}, {22, 3}, {23, 2}, {24, 3}, {25, 4}, {26, 4}, {27, 
              1}, {28, 3}, {29, 4}, {30, 2}, {31, 3}, {32, 1}, {33, 3}, {34, 
              4}, {35, 4}, {36, 1}, {37, 3}, {38, 4}, {39, 2}, {40, 1}, {41, 
              1}, {42, 3}, {43, 3}, {44, 2}, {45, 2}, {46, 4}, {47, 4}}}, {
             PlotLabel -> "Decentralized (Fragile Partitions)", 
              VertexLabels -> {"Name"}}]]}, 
         TagBox[
          GraphicsGroupBox[{{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], 
             Arrowheads[0.], {
              ArrowBox[CompressedData["
1:eJxl030w03EcB/DfNjPMZpcePFV09GSnkiji+71UKOSIknLMmp40XZIKJU/V
ZVwnyTntSrrLuZaUh2V5KFnnUqYJldY8zGOOhDKrP+qf3+d79/3rde/P9+59
n68NTxh4mEYQxIa/l/rvfuzruTzqQWB1f8mQ0oGBqV2O1+tnCZzjt+aGXes4
Irup5pREc8QQz1R+8VNzCUz2WmvzzvCBcSSLy5ZnsXUgH7/C85kgmYYN7rqF
iZPZIP+qPjo+pHgKlbg0ae4fMwbeki45ZeVGwWNCz2UKUxPgzWXdKTENWuQ4
z+PObIDufyftzMWl06ir3Hn1oMoQOO31bm7EFjruCLXKXGwL31e4WXi2PaHi
hLy+xOokJnDm+I+OWNN5JDZg2UmZMF8gFO5kbppF8qwYuXYjG/RN7pfs5H7J
7iI6abotkYK3hnHci217gJcfDX7UZalF1r27V451tgJXjDH6nVR0fKls1UPJ
ciXwEy1rdbzpaSQul30aELUBf3+2rKYnV4eIf4fsB6LQ5c5vFBxwWpGwgF8L
8mwnkc/oSj1cZ1/D27xQBj33raVaNot8S+9tFDHVwCtS8iU29XQ8dCEgn+nc
B/ok90d2PWk1NcjZCH9xDy3Yn0MH+y7ds9A+yoqFa9O4oWY5NOBN3QrdLmcO
Pn82T18QPQ3mH4zrdXpyhoWFYd6nUxkzwFcIlgTPX+Vg95bah10P4PwdQUNp
d3UcnJmq4Zk9JoC/eVDDrzzGxvx1NhMDeVowv+2EcuycwhgXrzdvS1Lqg3z8
IpeQkikWztw74MmynQR5cf4CSqKUgxteqGS/7OeAV2V4Na4NN8GhkuFgeSwF
zK84PFk0GGSC1YXRn+cksN+XWo9H9WFG+OCHvQLHmJ9g382i+EXelLeozjW2
2dd1Crh/oFhU5TOCngc26EZe/ABeGD4Za7T9K9plPddu0TMDvC59pNQyoxKV
tbYTibcpYF+u3COEk8c/Iw+LPFfDFDpwjTK7oZ2iQpEcmldkCRX4JYfhbo8c
FdITjx5JujYB3vd+h332NA4jE/WhW6UReiD/KcvgN+74iPY9ZXw3D9KB/P9/
J+APFRTcnoc+1bRFGlCJuuX0m4YGv4An9E+k+ic3IavB9RG+vTT8B5B9/Vw=

               "], 0.03857717362196342]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], {
              
              DiskBox[{2.0307264542177386`, 2.897870858400766}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["1", TraditionalForm], 
               Offset[{2, 2}, {2.069303627839702, 2.9364480320227297`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.1219511940973925`, 1.050572939818128}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["2", TraditionalForm], 
               Offset[{2, 2}, {2.160528367719356, 1.0891501134400914`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.176225069500114, 2.0219179233163196`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["3", TraditionalForm], 
               Offset[{2, 2}, {3.2148022431220777`, 2.060495096938283}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.0564869385143958`, 1.9410531876995232`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["4", TraditionalForm], 
               Offset[{2, 2}, {1.0950641121363591`, 1.9796303613214865`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.1856729047883863`, 0.4866114231421539}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["5", TraditionalForm], 
               Offset[{2, 2}, {2.22425007841035, 0.5251885967641173}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.43671934502009, 3.811829293019631}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["6", TraditionalForm], 
               Offset[{2, 2}, {2.4752965186420535`, 3.8504064666415947`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.352621519585328, 3.5520742593279975`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["7", TraditionalForm], 
               Offset[{2, 2}, {1.3911986932072913`, 3.590651432949961}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.2344141744040591, 1.3267333821892606`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["8", TraditionalForm], 
               Offset[{2, 2}, {0.27299134802602254`, 1.365310555811224}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.883999136511713, 1.2968568792904724`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["9", TraditionalForm], 
               Offset[{2, 2}, {0.9225763101336765, 1.3354340529124358`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.2765255177431545`, 2.695481496666374}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["10", TraditionalForm], 
               Offset[{2, 2}, {3.315102691365118, 2.7340586702883374`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.5083057600085854, 1.554468948337688}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["11", TraditionalForm], 
               Offset[{2, 2}, {0.5468829336305489, 1.5930461219596512`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.8193003510446997`, 0.24883820409721213`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["12", TraditionalForm], 
               Offset[{2, 2}, {1.857877524666663, 0.2874153777191756}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.638861023480755, 2.4453589407645198`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["13", TraditionalForm], 
               Offset[{2, 2}, {3.6774381971027186`, 2.4839361143864833`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.7349641772433215`, 0.3456842099828563}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["14", TraditionalForm], 
               Offset[{2, 2}, {2.773541350865285, 0.38426138360481976`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{4.053020474725548, 1.462743783696594}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["15", TraditionalForm], 
               Offset[{2, 2}, {4.091597648347511, 1.5013209573185573`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.4978971450298344`, 0.28997227246399326`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["16", TraditionalForm], 
               Offset[{2, 2}, {1.5364743186517977`, 0.3285494460859567}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.1538628465648113`, 3.884680019791623}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["17", TraditionalForm], 
               Offset[{2, 2}, {2.192440020186775, 3.9232571934135865`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.6824707157343664`, 1.5018343451717688`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["18", TraditionalForm], 
               Offset[{2, 2}, {3.72104788935633, 1.5404115187937322`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{4.134759263566169, 2.4569600428744978`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["19", TraditionalForm], 
               Offset[{2, 2}, {4.173336437188132, 2.4955372164964613`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.8599677155096845`, 3.899399134417558}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["20", TraditionalForm], 
               Offset[{2, 2}, {1.8985448891316479`, 3.9379763080395214`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.09189007708893993, 2.199943548674091}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["21", TraditionalForm], 
               Offset[{2, 2}, {0.13046725071090334`, 2.2385207222960544`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{4.249643399049835, 2.0864722945411276`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["22", TraditionalForm], 
               Offset[{2, 2}, {4.288220572671798, 2.125049468163091}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1.9738461773008462`, 0.}, 0.03857717362196342], 
              InsetBox[
               FormBox["23", TraditionalForm], 
               Offset[{2, 2}, {2.0124233509228096`, 0.03857717362196342}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.8021076077902523`, 1.8493422945202491`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["24", TraditionalForm], 
               Offset[{2, 2}, {3.840684781412216, 1.8879194681422125`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.4597138008126014, 2.688005883889928}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["25", TraditionalForm], 
               Offset[{2, 2}, {0.4982909744345648, 2.7265830575118915`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.531473522189768, 2.3312402293977788`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["26", TraditionalForm], 
               Offset[{2, 2}, {0.5700506958117314, 2.3698174030197423`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.4447016325520567`, 3.235307993096609}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["27", TraditionalForm], 
               Offset[{2, 2}, {1.48327880617402, 3.2738851667185727`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.6032599124133435`, 2.8547321714341525`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["28", TraditionalForm], 
               Offset[{2, 2}, {3.641837086035307, 2.893309345056116}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.5488580985342679, 1.1588110064276416`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["29", TraditionalForm], 
               Offset[{2, 2}, {0.5874352721562314, 1.197388180049605}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.235766427573634, 0.11480822992184625`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["30", TraditionalForm], 
               Offset[{2, 2}, {2.2743436011955978`, 0.15338540354380967`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.7449461684761287`, 1.1963017132268605`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["31", TraditionalForm], 
               Offset[{2, 2}, {3.7835233420980923`, 1.2348788868488239`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.6530154667497086`, 3.5176210933234233`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["32", TraditionalForm], 
               Offset[{2, 2}, {2.691592640371672, 3.556198266945387}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{4.1830902259445395`, 1.7607371765443394`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["33", TraditionalForm], 
               Offset[{2, 2}, {4.221667399566503, 1.7993143501663027`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.8675915175176749, 2.547202284386351}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["34", TraditionalForm], 
               Offset[{2, 2}, {0.9061686911396384, 2.5857794580083144`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.3881380511758985, 1.9577884041894629`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["35", TraditionalForm], 
               Offset[{2, 2}, {0.42671522479786195`, 1.9963655778114262`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.3378033869152914`, 3.436388946300948}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["36", TraditionalForm], 
               Offset[{2, 2}, {2.376380560537255, 3.4749661199229114`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.9209800010874822`, 2.1800715172339946`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["37", TraditionalForm], 
               Offset[{2, 2}, {3.959557174709446, 2.218648690855958}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 1.9125009585752877`}, 0.03857717362196342], 
              InsetBox[
               FormBox["38", TraditionalForm], 
               Offset[{2, 2}, {0.03857717362196342, 1.951078132197251}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.519007277157022, 0.11749603662808195`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["39", TraditionalForm], 
               Offset[{2, 2}, {2.5575844507789856`, 0.15607321025004536`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.8797462879001638`, 3.5057280439951484`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["40", TraditionalForm], 
               Offset[{2, 2}, {1.9183234615221272`, 3.544305217617112}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.5754502059344078`, 3.775386403709238}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["41", TraditionalForm], 
               Offset[{2, 2}, {1.614027379556371, 3.8139635773312017`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.9159729402569727`, 2.711419801449311}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["42", TraditionalForm], 
               Offset[{2, 2}, {3.9545501138789363`, 2.7499969750712747`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.2948030177210246`, 1.4016593930549197`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["43", TraditionalForm], 
               Offset[{2, 2}, {3.333380191342988, 1.440236566676883}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.6091033064087727`, 0.5951605804997171}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["44", TraditionalForm], 
               Offset[{2, 2}, {1.647680480030736, 0.6337377541216805}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.7193025394955956`, 0.6628473257914014}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["45", TraditionalForm], 
               Offset[{2, 2}, {2.757879713117559, 0.7014244994133648}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.09107561264587005, 1.6269622632213359`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["46", TraditionalForm], 
               Offset[{2, 2}, {0.12965278626783347`, 1.6655394368432992`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.1757295746117966, 2.4864738001753164`}, 
               0.03857717362196342], 
              InsetBox[
               FormBox["47", TraditionalForm], 
               Offset[{2, 2}, {0.21430674823376003`, 2.52505097379728}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
          MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
         False]], {
       FormatType -> TraditionalForm, FrameTicks -> None, PlotLabel -> 
        FormBox["\"Decentralized (Fragile Partitions)\"", TraditionalForm], 
        DefaultBaseStyle -> "NetworkGraphics"}], 
      Annotation[#, "NetworkTopologyType" -> "Decentralized", 
       "DaedaelusPrinciple" -> "Manage on a Tree, Compute on a Graph"]& ], 
     StyleBox["\"Decentralized\"", Bold, StripOnInput -> False]}, "Labeled", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], 
   TemplateBox[{15}, "Spacer1"], 
   TemplateBox[{
     TagBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics", 
        DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 23, 27, 2, 14, 16, 17, 26, 29, 3, 7, 11, 31, 34, 35, 42,
              46, 4, 6, 25, 39, 5, 15, 24, 37, 10, 8, 9, 12, 21, 45, 28, 30, 
             13, 18, 43, 41, 32, 38, 22, 47, 20, 40, 33, 36, 44}, {
             Null, {{1, 2}, {1, 3}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {4, 9}, {
              10, 11}, {10, 12}, {10, 13}, {10, 14}, {10, 15}, {10, 16}, {10, 
              17}, {18, 19}, {18, 11}, {18, 20}, {18, 21}, {22, 5}, {22, 
              20}, {22, 13}, {22, 14}, {22, 15}, {19, 23}, {19, 24}, {19, 
              25}, {11, 26}, {11, 12}, {27, 12}, {27, 8}, {27, 15}, {27, 
              21}, {28, 29}, {28, 9}, {28, 15}, {28, 21}, {28, 16}, {26, 
              30}, {26, 24}, {26, 31}, {12, 23}, {12, 16}, {29, 32}, {29, 
              33}, {29, 25}, {34, 35}, {34, 13}, {34, 25}, {34, 21}, {34, 
              36}, {5, 24}, {5, 15}, {5, 37}, {23, 38}, {23, 15}, {6, 30}, {6,
               24}, {6, 20}, {6, 38}, {6, 14}, {7, 30}, {7, 14}, {7, 39}, {35,
               40}, {35, 20}, {35, 16}, {35, 41}, {42, 24}, {42, 16}, {30, 
              9}, {40, 13}, {40, 14}, {40, 16}, {2, 24}, {2, 3}, {2, 21}, {2, 
              43}, {24, 44}, {24, 14}, {24, 45}, {24, 31}, {20, 32}, {20, 
              9}, {20, 33}, {20, 36}, {8, 37}, {3, 39}, {3, 16}, {3, 36}, {3, 
              46}, {32, 43}, {32, 17}, {9, 45}, {9, 25}, {9, 16}, {33, 13}, {
              13, 45}, {13, 16}, {13, 36}, {13, 41}, {38, 45}, {38, 16}, {38, 
              17}, {44, 43}, {14, 15}, {14, 46}, {15, 17}, {45, 25}, {25, 
              16}, {25, 41}, {21, 16}, {21, 46}, {21, 41}, {43, 16}, {43, 
              31}, {37, 31}, {36, 46}}}, {
             PlotLabel -> "Distributed (Resilient)", 
              VertexLabels -> {"Name"}}]]}, 
         TagBox[
          GraphicsGroupBox[{{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], 
             Arrowheads[0.], {
              ArrowBox[CompressedData["
1:eJyF1mtMU2cYB/DS01OgdBQGA8Gic7PKIKbLsphdrO8L0VVX0dBA5rwMwiRc
FLSymUnCTS7rYFazEDM1imOKSnTJNjOwIHOb2KIIMQoKDFYHBrRsYgG52XZ+
cF/+zweb9EPz63nPe57nf55zFqXtNKYLEonk82df6fNv44wiTfx1kkmef44N
rb+okrnZ1bwmj7DDxdAXt2iNGtsEkxU8GDRfGmH4/xd5TJntjmPDONtn/TRZ
r5dy9LajNp2lXOQpWZa42i0+xP+60uu6UShw+csxiuJBDzlfR1S5rWThNDM2
OfffCZNy9KDWXa4F0QPs5+YBe3HNNDn+nYyIht5UHy6pXf5n0z8W4nKTMrJi
yRiLv7H/jdZT4yw1tqJw6Vl/3tVnt6XdkvAcR01/frCCP5EJJa4QOUeXpr+b
uG+ewG+frLxUpBeID0X6O3RL5Tw7PDl0w/Ajsn5HbdLWxfODeOnfm5X3LXR9
b+y32qJ7HrZi7UZnVY+U7MdwzOHIWSflU1XdgUNf+xPXurt12XYvUyUcvj+5
SiSO/UGf03xQv2wwmNe15lVcPCEj1/uVT5a30dfL2Hlj5a5lXoY+PHvBbX71
Mfv9t/D43cP0eDw/uvrmdN6VUD9euej0Ud3QU7L+w7Yvznff87Jox4mGnj4F
qTfuDx3XR8f8YL/aV5XOHl8r52demVct1vuSfmL9sJ+Yb3SsH/pPuV1Fmz5x
so+31+VkfOlL3DDW2dK/bZzpLyhlfYl+xPH60VPCnnyWsHeGZVadYqpSka8M
dpVFvulmhQmBxpAaP35txc2pt7Lk/MODZw4o2pTEa9fEy2+9L3DRWr1zuTeA
+MFoU4xf4wh7GrA3s/xHgTj2Dx3zj471RR/3WDuyz80x89SMISA6iFwP7h9d
fHx1j7l9muVmpDWoI5XE/1B973xUpuTHSwZmV6tFsh7uD92w6bqyb53AR/69
vCSwMYg45g/rieuj43xA//85MfHDgK4+3J+4o9ORp1ZfZmG5tqjWwz7EcT6j
1zXlux+sGWWJ1+x7Mm/PER/TaI/kV1tZwcb513MOycj6mE/MC+YDHa8fHecT
Ou4fHZ8vuB/MHzruDx3zgY75IMfDfMC84PMdHecP+ovWT7KsvKtJvcuqYp0p
EUkS4jjf0bH+6GxrwnerX38257TNcQXfTBLH9w/sx+6Q7aFbRibYe/1Rm5OL
FaRfuD+cBy5FZ1yL1cviZo60dzXTeYHzHR3rj+th/9Exv+jYP9wP5g8d64OO
8wMd+4+O8wPrgflGx/yh4/xCx/mDTu5v6AfmA/uBzwf0t4tGTWdVgTx12+le
T6WEOOYbfVRvEiPsCq45Z3pNNEwQx/mJedixQPPL1MMeZg4tS/9I8RJxrB86
1g8dz4/1wPcTdKwP9hv3j78xv+iYXzwfvt+h43zB86FjPfH+QMf7A/+P8xEd
+4PrYb4xz9g/vB7M338/YKbJ
               "], 0.03993968295532538]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], {
              DiskBox[{1.3591359929847453`, 0.}, 0.03993968295532538], 
              InsetBox[
               FormBox["1", TraditionalForm], 
               Offset[{2, 2}, {1.3990756759400707`, 0.03993968295532538}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.8134915579414959`, 1.1513709974744741`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["23", TraditionalForm], 
               Offset[{2, 2}, {1.8534312408968212`, 1.1913106804297995`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.2986195764932598`, 0.7731365634353158}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["27", TraditionalForm], 
               Offset[{2, 2}, {1.3385592594485851`, 0.8130762463906411}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.2075948605246793`, 2.1032157524273125`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["2", TraditionalForm], 
               Offset[{2, 2}, {3.247534543480005, 2.143155435382638}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.2585351290145383`, 2.759739883331913}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["14", TraditionalForm], 
               Offset[{2, 2}, {3.298474811969864, 2.7996795662872387`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.3869673104896956`, 2.4099116142211674`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["16", TraditionalForm], 
               Offset[{2, 2}, {2.426906993445021, 2.449851297176493}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.769160986211647, 0.9969859501950229}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["17", TraditionalForm], 
               Offset[{2, 2}, {2.8091006691669724`, 1.0369256331503482`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{4.0265059073360145`, 2.819772812418081}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["26", TraditionalForm], 
               Offset[{2, 2}, {4.06644559029134, 2.8597124953734068`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.9300529345662196`, 2.356223906165864}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["29", TraditionalForm], 
               Offset[{2, 2}, {1.969992617521545, 2.3961635891211897`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.8242440407930895`, 3.077673569737896}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["3", TraditionalForm], 
               Offset[{2, 2}, {1.864183723748415, 3.1176132526932214`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.8013667450646595`, 3.5981646750752008`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["7", TraditionalForm], 
               Offset[{2, 2}, {2.841306428019985, 3.6381043580305263`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.4042110909441172`, 3.499615546919133}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["11", TraditionalForm], 
               Offset[{2, 2}, {2.444150773899443, 3.5395552298744586`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.772464831251698, 2.461680237001472}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["31", TraditionalForm], 
               Offset[{2, 2}, {0.8124045142070233, 2.5016199199567977`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.9393854119262832`, 1.9485936549416036`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["34", TraditionalForm], 
               Offset[{2, 2}, {1.9793250948816086`, 1.988533337896929}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.2873189514681704`, 3.1937943610405415`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["35", TraditionalForm], 
               Offset[{2, 2}, {2.327258634423496, 3.233734043995867}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.5076921266316847`, 2.261153324848615}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["42", TraditionalForm], 
               Offset[{2, 2}, {1.54763180958701, 2.3010930078039404`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.729594047108489, 4.039105593807001}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["46", TraditionalForm], 
               Offset[{2, 2}, {1.7695337300638143`, 4.079045276762327}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.549934829686266, 3.512750084581902}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["4", TraditionalForm], 
               Offset[{2, 2}, {1.5898745126415914`, 3.5526897675372275`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.9830915995268552`, 3.5922046646875576`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["6", TraditionalForm], 
               Offset[{2, 2}, {2.023031282482181, 3.632144347642883}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.0704431448390836`, 2.613010898923876}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["25", TraditionalForm], 
               Offset[{2, 2}, {1.110382827794409, 2.6529505818792014`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.207001536262633, 2.284804026704763}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["39", TraditionalForm], 
               Offset[{2, 2}, {1.2469412192179583`, 2.3247437096600887`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.986429444848749, 2.6586721360596424`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["5", TraditionalForm], 
               Offset[{2, 2}, {2.0263691278040743`, 2.698611819014968}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.412527179675896, 4.179741483236036}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["15", TraditionalForm], 
               Offset[{2, 2}, {2.4524668626312214`, 4.219681166191362}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.6902127100506488`, 2.1702313539109777`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["24", TraditionalForm], 
               Offset[{2, 2}, {2.7301523930059743`, 2.2101710368663032`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.8552677628280974, 2.9411152426159046`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["37", TraditionalForm], 
               Offset[{2, 2}, {0.8952074457834227, 2.98105492557123}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.5649107369553987`, 2.6388053511765994`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["10", TraditionalForm], 
               Offset[{2, 2}, {3.6048504199107243`, 2.678745034131925}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.7859477587995567`, 2.9580184526300464`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["8", TraditionalForm], 
               Offset[{2, 2}, {2.8258874417548823`, 2.997958135585372}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.212125535354988, 3.0399685207726495`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["9", TraditionalForm], 
               Offset[{2, 2}, {1.2520652183103134`, 3.079908203727975}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.4049662855872842, 3.6300495081837347`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["12", TraditionalForm], 
               Offset[{2, 2}, {0.44490596854260955`, 3.6699891911390603`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.010140329390323, 1.8057228164853734`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["21", TraditionalForm], 
               Offset[{2, 2}, {3.0500800123456484`, 1.8456624994406987`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.757647409467518, 2.0678689081510555`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["45", TraditionalForm], 
               Offset[{2, 2}, {3.7975870924228436`, 2.107808591106381}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.3067284391010756`, 3.312662803505785}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["28", TraditionalForm], 
               Offset[{2, 2}, {1.346668122056401, 3.3526024864611106`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 3.1365551789839348`}, 0.03993968295532538], 
              InsetBox[
               FormBox["30", TraditionalForm], 
               Offset[{2, 2}, {0.03993968295532538, 3.1764948619392603`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.12585788400758613`, 2.200083000801679}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["13", TraditionalForm], 
               Offset[{2, 2}, {0.1657975669629115, 2.2400226837570045`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.38086839788068017`, 2.0410640233653274`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["18", TraditionalForm], 
               Offset[{2, 2}, {0.4208080808360055, 2.081003706320653}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.47119878459769016`, 1.5389411779868112`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["43", TraditionalForm], 
               Offset[{2, 2}, {0.5111384675530155, 1.5788808609421365`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{4.471853886157528, 2.578478861244281}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["41", TraditionalForm], 
               Offset[{2, 2}, {4.511793569112854, 2.6184185441996064`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.9926363731616399`, 3.357348856541666}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["32", TraditionalForm], 
               Offset[{2, 2}, {2.0325760561169655`, 3.3972885394969916`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.1722921661975327`, 0.01510187879360192}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["38", TraditionalForm], 
               Offset[{2, 2}, {2.2122318491528583`, 0.0550415617489273}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.8839006377000842, 1.7393574371350449`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["22", TraditionalForm], 
               Offset[{2, 2}, {0.9238403206554096, 1.7792971200903702`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.10382810844671275`, 2.573451601764701}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["47", TraditionalForm], 
               Offset[{2, 2}, {0.14376779140203813`, 2.6133912847200267`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.267222652600736, 1.348263985421858}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["20", TraditionalForm], 
               Offset[{2, 2}, {2.3071623355560615`, 1.3882036683771835`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{2.4369162533772477`, 1.930542030052608}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["40", TraditionalForm], 
               Offset[{2, 2}, {2.4768559363325733`, 1.9704817130079333`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{3.3477039742656327`, 1.2683154435606039`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["33", TraditionalForm], 
               Offset[{2, 2}, {3.3876436572209583`, 1.3082551265159292`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.5921148842620807`, 2.6889939281840505`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["36", TraditionalForm], 
               Offset[{2, 2}, {1.632054567217406, 2.728933611139376}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{1.0094052331469938`, 1.2279712317657219`}, 
               0.03993968295532538], 
              InsetBox[
               FormBox["44", TraditionalForm], 
               Offset[{2, 2}, {1.0493449161023192`, 1.2679109147210472`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
          MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
         False]], {
       FormatType -> TraditionalForm, FrameTicks -> None, PlotLabel -> 
        FormBox["\"Distributed (Resilient)\"", TraditionalForm], 
        DefaultBaseStyle -> "NetworkGraphics"}], 
      Annotation[#, "NetworkTopologyType" -> "Distributed", 
       "DaedaelusPrinciple" -> "Manage on a Tree, Compute on a Graph"]& ], 
     StyleBox["\"Distributed\"", Bold, StripOnInput -> False]}, "Labeled", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )]},
  "Row",
  DisplayFunction->(PaneBox[
    RowBox[{
      TemplateSlotSequence[1, "\[InvisibleSpace]"]}], ImageSize -> Full]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{
       RowBox[{"{", 
         TemplateSlotSequence[1, ","], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.962978248350975*^9, 3.962978249942679*^9}, 
   3.962978340425212*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"0a792803-5ee0-4d98-8d4f-8acddf611dbb"],

Cell[BoxData[
 StyleBox["\<\"2. D\[CapitalAE]D\[CapitalAE]LUS N2N Lattice\"\>", "Section",
  StripOnInput->False,
  FontWeight->Bold]], "Print",
 CellChangeTimes->{{3.962978248282151*^9, 3.962978249871773*^9}, 
   3.9629783404779243`*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"d05603ca-8e5e-456c-802b-db94bf3dac91"],

Cell[BoxData[
 TagBox[
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 11, 3, 12, 4, 13, 5, 14, 6, 15, 7, 16, 8, 17, 9, 18, 10, 
       19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
        37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 
       54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 
       89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 
       105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 
       119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 
       133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 
       147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 
       161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 
       175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 
       189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200}, {
       Null, CompressedData["
1:eJwB9QIK/SFib1JiAgAAAHIBAAACAAAAAQIBAwIEAgUEBgQHBggGCQgKCAsK
DAoNDA4MDw4QDhEQEhATEhQDBQMVBQcFFgcJBxcJCwkYCw0LGQ0PDRoPEQ8b
ERMRHBMUEx0UHhUWFR8WFxYgFxgXIRgZGCIZGhkjGhsaJBscGyUcHRwmHR4d
Jx4oHyAfKSAhICohIiErIiMiLCMkIy0kJSQuJSYlLyYnJjAnKCcxKDIpKikz
KisqNCssKzUsLSw2LS4tNy4vLjgvMC85MDEwOjEyMTsyPDM0Mz00NTQ+NTY1
PzY3NkA3ODdBODk4Qjk6OUM6OzpEOzw7RTxGPT49Rz4/Pkg/QD9JQEFASkFC
QUtCQ0JMQ0RDTURFRE5FRkVPRlBHSEdRSElIUklKSVNKS0pUS0xLVUxNTFZN
Tk1XTk9OWE9QT1lQWlFSUVtSU1JcU1RTXVRVVF5VVlVfVldWYFdYV2FYWVhi
WVpZY1pkW1xbZVxdXGZdXl1nXl9eaF9gX2lgYWBqYWJha2JjYmxjZGNtZG5l
ZmVvZmdmcGdoZ3FoaWhyaWppc2pranRrbGt1bG1sdm1ubXdueG9wb3lwcXB6
cXJxe3JzcnxzdHN9dHV0fnV2dX92d3aAd3h3gXiCeXp5g3p7eoR7fHuFfH18
hn1+fYd+f36If4B/iYCBgIqBgoGLgoyDhIONhIWEjoWGhY+Gh4aQh4iHkYiJ
iJKJiomTiouKlIuMi5WMlo2OjZeOj46Yj5CPmZCRkJqRkpGbkpOSnJOUk52U
lZSelZaVn5agl5iXoZiZmKKZmpmjmpuapJucm6WcnZymnZ6dp56fnqifoJ+p
oKqhoqGroqOirKOko62kpaSupaalr6anprCnqKexqKmosqmqqbOqtKusq7Ws
ray2ra6tt66vrrivsK+5sLGwurGysbuys7K8s7SzvbS+tba1v7a3tsC3uLfB
uLm4wrm6ucO6u7rEu7y7xby9vMa9vr3Hvsi/wMDBwcLCw8PExMXFxsbHx8i6
uSSL
        "]}, {EdgeStyle -> {
          GrayLevel[0.4]}, ImageSize -> Large, PlotLabel -> 
        Style["D\[CapitalAE]D\[CapitalAE]LUS N2N Lattice (GVM Groundplane)", 
          14, Bold], VertexStyle -> {
          RGBColor[1, 0, 0]}}]]}, 
     TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
bJs2A4a37q7L22ACS0Y7XK4Q7+f/ANTJdns=
        "], {
         {GrayLevel[0.4], Opacity[0.7], Arrowheads[0.], 
          ArrowBox[CompressedData["
1:eJwB9QIK/SFib1JiAgAAAHIBAAACAAAAAQIBAwIEAgUDBQMVBAYEBwUHBRYG
CAYJBwkHFwgKCAsJCwkYCgwKDQsNCxkMDgwPDQ8NGg4QDhEPEQ8bEBIQExET
ERwSFBMUEx0UHhUWFR8WFxYgFxgXIRgZGCIZGhkjGhsaJBscGyUcHRwmHR4d
Jx4oHyAfKSAhICohIiErIiMiLCMkIy0kJSQuJSYlLyYnJjAnKCcxKDIpKikz
KisqNCssKzUsLSw2LS4tNy4vLjgvMC85MDEwOjEyMTsyPDM0Mz00NTQ+NTY1
PzY3NkA3ODdBODk4Qjk6OUM6OzpEOzw7RTxGPT49Rz4/Pkg/QD9JQEFASkFC
QUtCQ0JMQ0RDTURFRE5FRkVPRlBHSEdRSElIUklKSVNKS0pUS0xLVUxNTFZN
Tk1XTk9OWE9QT1lQWlFSUVtSU1JcU1RTXVRVVF5VVlVfVldWYFdYV2FYWVhi
WVpZY1pkW1xbZVxdXGZdXl1nXl9eaF9gX2lgYWBqYWJha2JjYmxjZGNtZG5l
ZmVvZmdmcGdoZ3FoaWhyaWppc2pranRrbGt1bG1sdm1ubXdueG9wb3lwcXB6
cXJxe3JzcnxzdHN9dHV0fnV2dX92d3aAd3h3gXiCeXp5g3p7eoR7fHuFfH18
hn1+fYd+f36If4B/iYCBgIqBgoGLgoyDhIONhIWEjoWGhY+Gh4aQh4iHkYiJ
iJKJiomTiouKlIuMi5WMlo2OjZeOj46Yj5CPmZCRkJqRkpGbkpOSnJOUk52U
lZSelZaVn5agl5iXoZiZmKKZmpmjmpuapJucm6WcnZymnZ6dp56fnqifoJ+p
oKqhoqGroqOirKOko62kpaSupaalr6anprCnqKexqKmosqmqqbOqtKusq7Ws
ray2ra6tt66vrrivsK+5sLGwurGysbuys7K8s7SzvbS+tba1v7a3tsC3uLfB
uLm4wrm6ucO6u7rEu7y7xby9vMa9vr3Hvsi/wMDBwcLCw8PExMXFxsbHx8i2
cSSL
           "], 0.09294246119973287]}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
          DiskBox[1, 0.09294246119973287], DiskBox[2, 0.09294246119973287], 
          DiskBox[3, 0.09294246119973287], DiskBox[4, 0.09294246119973287], 
          DiskBox[5, 0.09294246119973287], DiskBox[6, 0.09294246119973287], 
          DiskBox[7, 0.09294246119973287], DiskBox[8, 0.09294246119973287], 
          DiskBox[9, 0.09294246119973287], DiskBox[10, 0.09294246119973287], 
          DiskBox[11, 0.09294246119973287], DiskBox[12, 0.09294246119973287], 
          DiskBox[13, 0.09294246119973287], DiskBox[14, 0.09294246119973287], 
          DiskBox[15, 0.09294246119973287], DiskBox[16, 0.09294246119973287], 
          DiskBox[17, 0.09294246119973287], DiskBox[18, 0.09294246119973287], 
          DiskBox[19, 0.09294246119973287], DiskBox[20, 0.09294246119973287], 
          DiskBox[21, 0.09294246119973287], DiskBox[22, 0.09294246119973287], 
          DiskBox[23, 0.09294246119973287], DiskBox[24, 0.09294246119973287], 
          DiskBox[25, 0.09294246119973287], DiskBox[26, 0.09294246119973287], 
          DiskBox[27, 0.09294246119973287], DiskBox[28, 0.09294246119973287], 
          DiskBox[29, 0.09294246119973287], DiskBox[30, 0.09294246119973287], 
          DiskBox[31, 0.09294246119973287], DiskBox[32, 0.09294246119973287], 
          DiskBox[33, 0.09294246119973287], DiskBox[34, 0.09294246119973287], 
          DiskBox[35, 0.09294246119973287], DiskBox[36, 0.09294246119973287], 
          DiskBox[37, 0.09294246119973287], DiskBox[38, 0.09294246119973287], 
          DiskBox[39, 0.09294246119973287], DiskBox[40, 0.09294246119973287], 
          DiskBox[41, 0.09294246119973287], DiskBox[42, 0.09294246119973287], 
          DiskBox[43, 0.09294246119973287], DiskBox[44, 0.09294246119973287], 
          DiskBox[45, 0.09294246119973287], DiskBox[46, 0.09294246119973287], 
          DiskBox[47, 0.09294246119973287], DiskBox[48, 0.09294246119973287], 
          DiskBox[49, 0.09294246119973287], DiskBox[50, 0.09294246119973287], 
          DiskBox[51, 0.09294246119973287], DiskBox[52, 0.09294246119973287], 
          DiskBox[53, 0.09294246119973287], DiskBox[54, 0.09294246119973287], 
          DiskBox[55, 0.09294246119973287], DiskBox[56, 0.09294246119973287], 
          DiskBox[57, 0.09294246119973287], DiskBox[58, 0.09294246119973287], 
          DiskBox[59, 0.09294246119973287], DiskBox[60, 0.09294246119973287], 
          DiskBox[61, 0.09294246119973287], DiskBox[62, 0.09294246119973287], 
          DiskBox[63, 0.09294246119973287], DiskBox[64, 0.09294246119973287], 
          DiskBox[65, 0.09294246119973287], DiskBox[66, 0.09294246119973287], 
          DiskBox[67, 0.09294246119973287], DiskBox[68, 0.09294246119973287], 
          DiskBox[69, 0.09294246119973287], DiskBox[70, 0.09294246119973287], 
          DiskBox[71, 0.09294246119973287], DiskBox[72, 0.09294246119973287], 
          DiskBox[73, 0.09294246119973287], DiskBox[74, 0.09294246119973287], 
          DiskBox[75, 0.09294246119973287], DiskBox[76, 0.09294246119973287], 
          DiskBox[77, 0.09294246119973287], DiskBox[78, 0.09294246119973287], 
          DiskBox[79, 0.09294246119973287], DiskBox[80, 0.09294246119973287], 
          DiskBox[81, 0.09294246119973287], DiskBox[82, 0.09294246119973287], 
          DiskBox[83, 0.09294246119973287], DiskBox[84, 0.09294246119973287], 
          DiskBox[85, 0.09294246119973287], DiskBox[86, 0.09294246119973287], 
          DiskBox[87, 0.09294246119973287], DiskBox[88, 0.09294246119973287], 
          DiskBox[89, 0.09294246119973287], DiskBox[90, 0.09294246119973287], 
          DiskBox[91, 0.09294246119973287], DiskBox[92, 0.09294246119973287], 
          DiskBox[93, 0.09294246119973287], DiskBox[94, 0.09294246119973287], 
          DiskBox[95, 0.09294246119973287], DiskBox[96, 0.09294246119973287], 
          DiskBox[97, 0.09294246119973287], DiskBox[98, 0.09294246119973287], 
          DiskBox[99, 0.09294246119973287], DiskBox[100, 0.09294246119973287],
           DiskBox[101, 0.09294246119973287], 
          DiskBox[102, 0.09294246119973287], 
          DiskBox[103, 0.09294246119973287], 
          DiskBox[104, 0.09294246119973287], 
          DiskBox[105, 0.09294246119973287], 
          DiskBox[106, 0.09294246119973287], 
          DiskBox[107, 0.09294246119973287], 
          DiskBox[108, 0.09294246119973287], 
          DiskBox[109, 0.09294246119973287], 
          DiskBox[110, 0.09294246119973287], 
          DiskBox[111, 0.09294246119973287], 
          DiskBox[112, 0.09294246119973287], 
          DiskBox[113, 0.09294246119973287], 
          DiskBox[114, 0.09294246119973287], 
          DiskBox[115, 0.09294246119973287], 
          DiskBox[116, 0.09294246119973287], 
          DiskBox[117, 0.09294246119973287], 
          DiskBox[118, 0.09294246119973287], 
          DiskBox[119, 0.09294246119973287], 
          DiskBox[120, 0.09294246119973287], 
          DiskBox[121, 0.09294246119973287], 
          DiskBox[122, 0.09294246119973287], 
          DiskBox[123, 0.09294246119973287], 
          DiskBox[124, 0.09294246119973287], 
          DiskBox[125, 0.09294246119973287], 
          DiskBox[126, 0.09294246119973287], 
          DiskBox[127, 0.09294246119973287], 
          DiskBox[128, 0.09294246119973287], 
          DiskBox[129, 0.09294246119973287], 
          DiskBox[130, 0.09294246119973287], 
          DiskBox[131, 0.09294246119973287], 
          DiskBox[132, 0.09294246119973287], 
          DiskBox[133, 0.09294246119973287], 
          DiskBox[134, 0.09294246119973287], 
          DiskBox[135, 0.09294246119973287], 
          DiskBox[136, 0.09294246119973287], 
          DiskBox[137, 0.09294246119973287], 
          DiskBox[138, 0.09294246119973287], 
          DiskBox[139, 0.09294246119973287], 
          DiskBox[140, 0.09294246119973287], 
          DiskBox[141, 0.09294246119973287], 
          DiskBox[142, 0.09294246119973287], 
          DiskBox[143, 0.09294246119973287], 
          DiskBox[144, 0.09294246119973287], 
          DiskBox[145, 0.09294246119973287], 
          DiskBox[146, 0.09294246119973287], 
          DiskBox[147, 0.09294246119973287], 
          DiskBox[148, 0.09294246119973287], 
          DiskBox[149, 0.09294246119973287], 
          DiskBox[150, 0.09294246119973287], 
          DiskBox[151, 0.09294246119973287], 
          DiskBox[152, 0.09294246119973287], 
          DiskBox[153, 0.09294246119973287], 
          DiskBox[154, 0.09294246119973287], 
          DiskBox[155, 0.09294246119973287], 
          DiskBox[156, 0.09294246119973287], 
          DiskBox[157, 0.09294246119973287], 
          DiskBox[158, 0.09294246119973287], 
          DiskBox[159, 0.09294246119973287], 
          DiskBox[160, 0.09294246119973287], 
          DiskBox[161, 0.09294246119973287], 
          DiskBox[162, 0.09294246119973287], 
          DiskBox[163, 0.09294246119973287], 
          DiskBox[164, 0.09294246119973287], 
          DiskBox[165, 0.09294246119973287], 
          DiskBox[166, 0.09294246119973287], 
          DiskBox[167, 0.09294246119973287], 
          DiskBox[168, 0.09294246119973287], 
          DiskBox[169, 0.09294246119973287], 
          DiskBox[170, 0.09294246119973287], 
          DiskBox[171, 0.09294246119973287], 
          DiskBox[172, 0.09294246119973287], 
          DiskBox[173, 0.09294246119973287], 
          DiskBox[174, 0.09294246119973287], 
          DiskBox[175, 0.09294246119973287], 
          DiskBox[176, 0.09294246119973287], 
          DiskBox[177, 0.09294246119973287], 
          DiskBox[178, 0.09294246119973287], 
          DiskBox[179, 0.09294246119973287], 
          DiskBox[180, 0.09294246119973287], 
          DiskBox[181, 0.09294246119973287], 
          DiskBox[182, 0.09294246119973287], 
          DiskBox[183, 0.09294246119973287], 
          DiskBox[184, 0.09294246119973287], 
          DiskBox[185, 0.09294246119973287], 
          DiskBox[186, 0.09294246119973287], 
          DiskBox[187, 0.09294246119973287], 
          DiskBox[188, 0.09294246119973287], 
          DiskBox[189, 0.09294246119973287], 
          DiskBox[190, 0.09294246119973287], 
          DiskBox[191, 0.09294246119973287], 
          DiskBox[192, 0.09294246119973287], 
          DiskBox[193, 0.09294246119973287], 
          DiskBox[194, 0.09294246119973287], 
          DiskBox[195, 0.09294246119973287], 
          DiskBox[196, 0.09294246119973287], 
          DiskBox[197, 0.09294246119973287], 
          DiskBox[198, 0.09294246119973287], 
          DiskBox[199, 0.09294246119973287], 
          DiskBox[200, 0.09294246119973287]}}]],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->"NetworkGraphics",
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->Large,
   PlotLabel->FormBox[
     StyleBox[
     "\"D\[CapitalAE]D\[CapitalAE]LUS N2N Lattice (GVM Groundplane)\"", 14, 
      Bold, StripOnInput -> False], TraditionalForm]],
  Annotation[#, "NetworkTopologyType" -> "N2N_Lattice", "DaedaelusPrinciple" -> 
   "Manage on a Tree, Compute on a Graph"]& ]], "Output",
 CellChangeTimes->{{3.962978248350975*^9, 3.962978249942679*^9}, 
   3.9629783405837603`*^9},
 CellLabel->"Out[123]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
1ab84+CuZ4E0l7RfEVvJOa3NVoqKFqNpsYtIwOtGE3mFy7sDc5FCryXu5Ni3
Rz/Z4lydne82/EiLNhqfPBKfhMSQ1pl5ZDc7qa0Z8ojk5qRKci3LL1vOva17
4Jrsqek7O3lUwnW/wH2OzGQ+qabCocoBCaw0TKFiKUQbnG/i3e1GvkHeqc7Y
WYjA2paxc12hfgzNjhFg6NXd9dTfmjSF8U7mKh8nS746YQ5XOMCWTl+x+CvP
2RVn2nSmfrRJpo5GWfQP+hT6RxlYDB9lXjXk11qXvootfYRyetcfb2U9tr9D
nSaYCK/rdm/zBSYi6UGy0VamnblzXaGbSyE14iXTcuZOKm4is2EmNghQ33bU
oU857e/iCSmmeQKmNvIcqjPTGr6mZkUkoDNdgFt8oHKXxdyYtptjEfrQ4MOA
BcGZBt2YTaqPWgWR99WMlei5MfKCko4TTTYOM8mUmI0rejfRZTN1XQe6XakF
8Y7lXLpnX5O7U4kZXw6d6GPfUjpLe7ARu8kZyJxbviq+/5K3z5wxXOPj6WY1
Cnc7gWnPtOXGt9YNEKiZ/CqTK1F0/5DkyG1070t8aOXGQj6cBzpMjvk+jm0u
1U+It16f1FChrgj8RVLL0XRQc7xsUFxAchqoj2PjzTB3MQHce9DTd6HPe9No
WnEXcTSFMgylE91DA1CK7JfBgZ1JLNYJELrVcqLYJXcXvJNdHBqZzS7u9lrb
vY7rRXmgXkc4Az0oeBMksVGWxQ/jMMEAzCUWp7ksRYzYX32g5H1AfZHzeSHB
ppCKTafIbZMhGqKsToYgzpCSGHTT2fCCpoBhxBRHmHgPddIhIXcPBrrcWfGm
SxOYEDf8J5eO5tH6+nrLcWMqTppk+sD6RRPzOW++lU1HzmhpJMsKV4cYsmw0
FtQEh8suDOrIfdDh92CQjjQxv2AiJQIzDUm70lT2h0D9gVPyxWQ7H0IHvMNW
zB96N9FpwdlgWJHuGtBhwhCSp1E4bPAMic9gC7i2KQhsWahoioTrQD3DLXYA
VUmECLF0kI8xd8VnXB0rEyGqjl2Eyk6eGECAzhouTChjinlyYQ7mggxoy4+q
efqE96uwnkLC6WbdKYyT/Ba0e59DP2aPNQUIOv9Zk3JfrpKGQI0ZMDVjRj55
7LyeEPV/P1CfjlrY8bAlRc+iZ1iwxVHBiJWC0pyrOJMhKwBRKueUeolPrElv
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
pUL7oYtecP0xVJyn+D0QKIvYTmuTCntH8pzHMdYyc4zxF5ScUibXJX8NS5Yj
oBY5FI+m2rPWUvjzBQ+9ModiR7ZJZFSapbSQYbVsaYTpomsPYYxVAfMT8yBg
LGuqgPFefZdZ0zZ4l8M3iv0TYaJHj0Q1+MkMamfOOStF7ALU5wcsenx2gRM3
V+fTNNsyrm55ExgOM66dVtY4bendDdQpyzdWN5camM1PcIwjkguQqm0rGafL
nZlWY+zSEJHn/dcDPmcUuT+C4sSmCtmeaZLts1y2/ZzoRYPCDFkz2ATq7JSj
nEmxmxtxSxOhMqNjBcIt1fdN6lVHjIz830RYK+zbOqc2eEBJQElj8irUPw7q
M6HiyspCpZTuA9Y5AEyk7URw5qNLw59GV9GeWkZDO5ukqDa7gptWztFhr1Lf
3ECrBz61KJJ+a4jpV644YguhCVCln7zTvqjbPOM4v/ikKN4hG2ZMf4y5ZxGj
vdD+XaJOgWpcYiKsklXoYplDyYBK3XclGXrGqCghzzNlCzegIDiZbAjMjVxP
dDGt4xzXikgn05087tLhuC7Br/ei0h6UM9eiFXwXUFxq2nr5qslmDoF6VzQF
6Djvt3mAjZHbEqiymSwUvlvej1YxHKoBgQ9lA1T+nFdWIJXlwM95610c6ZT7
QWwzlT0DzK8sEi4uNM33bxTxC7kJY6rZd6Gqd3AHTmEwTXBXebdN0ER6EbPb
E6QXCbpPFZS7qR/WOjz2Yy/8+srZILaALjZkXBxyoPsSxmp/mufRxQolyzaQ
oPm5xkEspGksg0jFah9Qo3HcH11RO4lR7LxIP6hoVeqUuMlgVWqIU1yIMBj1
iymok2D7GtAZ64U7rBWN7FOfFyusj2CdV3hnCrt45OjTs+CJ/qzbRZRDtG9n
m0BZ5tRhuVjIYaA+ANRfOj8lFm45Q2uVSh3pZkwPK7rH8A6o1l25ufU3LPd8
nR9Gl/hJIkVMfedHw8hLv1K11B6ol6tEK/graIPQ0r0D3V2oFBayIpQ15WLX
ttpMOc8uminodsj9Rs1U8E6FfZpYtC74bvmkwuhyXuNdsNJwdDYWr+eHKCp7
bIzzExPDaYMfMgsOdgNcl4oCRcXvTpE9qRuzwqkLWYonzk9awczlsicXK8xC
T2yX1hwv5wBJtF3oH7xHFjiohs3lKy3a83CAcGA639SwkL14uk42k1aK6Zbf
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
5hbMCbSuzCpVa2w/VujcmZHsnpDGLmw4XHo4qIqcEZxsydk0KBO4ITVQN/Qt
s/0FL/garsb2KTyuwKB2Q3GS+UgoAP+ruVgao4hvn6ZnReMT65q1mbfbATIC
cRztVErzmvEJjUGoKvupCYRfjpJVpOWoiY2QJhe2Rq46Y7uZQHxmjhBfPytg
sH0tUtfCkuV2VVFWLgY0HkUyjxFlap2aRcLEmdjgdFTJXu/trFMPsvRYvesj
unipTcE2D7RUwG6LgKUCjg30yYlVV88+2DXZdqe5Xm/6aeaCjrkwmiEu4rmZ
vg3jEM90RzuCNYrjvhiHPflu4/jXMKFCEcMe7ImDOJOqq7VFkYGGCp+YOsB5
6LHKhVjUMMNZuzPvFiNUnYTfjbHAWWPNlKL0lO/UZhfm6dR6FuLLbTtBr2tu
7zCr5ptOaY3jF6YWz3i1U9PiJypH13QEV9xr+gJ+NL9LY5la1qo92ZYJSsT6
jeWZi+WzNh9OrUf/yG4pq/eIRXcHX3QMWnIbK5UNlByt8kixyJk7CbnWS98l
1kEz51gMKhsUpuNJMDL31hjSr34fM5M5reihaXTaNmXjDLhStmbZSHpM4Vnm
QEtXhdnn/1+RznJXKRS/4BL+7ogUXZpgrUtLq+QtZ1O66anpiWJvcVi1e9sZ
x19j59aG/wcmVzTpp5Gc1qI6+ifuW1M14Yk703PFpWkMw6iBop3WMzNtpKLq
Dc6WKgttAc+d0YNHuJyiRXfKLNzVyr/CIFDlbOTiCrMw7WXPE5Vd2PTJ+cuu
GFrA099lYxVrclc3CUwRBbuL8Jls3qwPmqBnVsSLjf33rQFsknbNWk2c63uX
UtXbltBrRxg0D+Ht7SfqrH3aCQmtXhnho6YiVoC90aa6uEwqM+vSE0n5Sfyt
L4C6wexYkVq5voJkStsywba6Y6LZb3uyO2KdG+hCPSYvWMM07a417B+b9VdK
7G19ZFFG/6n71pTXPQqKmp9hyispILYW9deRbSSgm7kZl5ka1lozVl7GMGjy
WpySbkZeT/PysC4RExr/r9YBueJ6E+Z4T32Z2nDtrtSjmshr6jLdepsnGpWN
qLZcu18pSmvapp3o2/G5+KJqho9Kfkb5ep9S31uWrJZKYVW+ZcsvxXeglTdt
+dX4XtsN3a/QFfaqKtd8tF5mliG0XrZIrRxdVt7ZRBefkZPj8VntssEKRzWN
rtZp8/qjeexWO0qkjbP27cGWpv25jUedjKL4/Y0j+mP8dTANI7QDhw5n3Lgv
cFkB43/IfvEPs29TvddkQ8Svv94e7wf/4P8HT8kQ6A==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"a616a781-6778-40f2-a446-bd8c6614a455"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Latency Comparison", "Section",
 CellChangeTimes->{{3.9629599412040358`*^9, 3.9629599418125887`*^9}, {
  3.962960029036481*^9, 3.9629600299441223`*^9}, {3.962960241116858*^9, 
  3.962960242381179*^9}, {3.962960315057363*^9, 3.962960316170951*^9}, {
  3.96296043005512*^9, 
  3.962960431230219*^9}},ExpressionUUID->"2fa9764a-1e11-46a9-a823-\
a6205c83cec6"],

Cell["\<\
Beyond resilience, topology affects communication latency \[Dash] the time it \
takes for data to travel between two points. The code provides a simplified \
latency model: each type of link is assigned a fixed delay (in nanoseconds). \
In the Clos network, a server-to-ToR (leaf) connection is assumed to be about \
100\[NonBreakingSpace]ns, and a ToR-to-spine link about \
200\[NonBreakingSpace]ns (representing the higher switching and propagation \
delay for traversing up a level). In the N2N lattice or mesh, a direct \
neighbor-to-neighbor link is set at 50\[NonBreakingSpace]ns, which might \
represent a short local hop. These numbers are not absolute, but serve to \
illustrate typical differences: hierarchical networks often incur larger \
per-hop latency (especially when ascending multiple layers), whereas short \
local links in a lattice can be very fast.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.962960444434641*^9, 
  3.962960451840558*^9}},ExpressionUUID->"dae59d84-304b-4665-a187-\
e922670d9fb0"],

Cell[CellGroupData[{

Cell["\<\
The code then finds a shortest path between two representative nodes in each \
topology \[Dash] for example, from one edge of the network to the opposite \
edge. In the Clos scenario (with 4 racks and 2 spines in the example), a path \
from a server in rack 1 to a server in rack 4 must go: Server \[RightArrow] \
TOR1 \[RightArrow] Spine \[RightArrow] TOR4 \[RightArrow] Server. That path \
involves four hops (two \[OpenCurlyDoubleQuote]horizontal\
\[CloseCurlyDoubleQuote] hops from server to TOR and TOR to server, and two \
\[OpenCurlyDoubleQuote]vertical\[CloseCurlyDoubleQuote] hops via spine), \
totaling roughly 600\[NonBreakingSpace]ns with the given assumptions. In the \
mesh scenario (4\[Times]4 grid from corner N1,1 to opposite corner N4,4), the \
shortest path might be a Manhattan route through the grid (e.g. 3 hops down \
and 3 hops across = 6 hops). Six hops at 50\[NonBreakingSpace]ns each gives \
~300\[NonBreakingSpace]ns total. Even though the mesh requires more hops, the \
overall latency can be lower due to the cheap cost per hop and the fact that \
traffic isn\[CloseCurlyQuote]t funneled through higher-latency aggregation \
switches. This simple comparison highlights a key advantage of the N2N \
lattice approach: end-to-end latency can be consistent and low, because every \
hop is a direct neighbor link and there is no oversubscribed hierarchy \
introducing queuing delays. Moreover, in a loss-prone environment, a Clos/TCP \
network might suffer increasing delays (retransmissions, queue buildup), \
whereas the D\[CapitalAE]D\[CapitalAE]LUS N2N model with its transactional \
protocol claims to deliver deterministic latency that \
\[OpenCurlyDoubleQuote]walks over\[CloseCurlyDoubleQuote] packet loss \
(https://mulliganstew-gang.vercel.app/#:~:text=with%20the%20D%C3%A6d%C3%A6lus%\
20architecture%2C%20simulating,%C2%BB). In summary, distributed \
neighbor-to-neighbor topologies can offer not only resilience but also \
uniform low latency, since communication progresses in small equal steps \
rather than jumping through bottleneck tiers.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
   3.962960444434641*^9, 3.962960460627866*^9}, 
   3.962978127636386*^9},ExpressionUUID->"983b173b-a3cd-4c39-b91f-\
6c0e0008bea7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Daedaelus`EthernetModel`\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"MetcalfeContentionModel", "::", "usage"}], "MessageName"], "=", 
   "\"\<MetcalfeContentionModel[Q, packetBits, opts] gives the classical \
Ethernet efficiency with Q contending stations.  Options: \\\"ChannelCapacity\
\\\" (bit/s) and \\\"SlotTime\\\" (s).\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"DaedaelusProtocolUtilization", "::", "usage"}], "MessageName"], 
   "=", "\"\<DaedaelusProtocolUtilization[packetBits, linkLength, opts] \
returns the utilisation of a point-to-point Daedaelus link. Option: \
\\\"LinkSpeed\\\" (bit/s).\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "MetcalfeContentionModel", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "MetcalfeContentionModel", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<ChannelCapacity\>\"", "\[Rule]", "3000000"}], ",", 
     RowBox[{"\"\<SlotTime\>\"", "\[Rule]", 
      FractionBox["1", "62500"]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MetcalfeContentionModel", "[", 
    RowBox[{
     RowBox[{"Q_", "?", "Positive"}], ",", 
     RowBox[{"packetBits_Integer", "?", "Positive"}], ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"C", "=", 
        RowBox[{"OptionValue", "[", "\"\<ChannelCapacity\>\"", "]"}]}], ",", 
       RowBox[{"T", "=", 
        RowBox[{"OptionValue", "[", "\"\<SlotTime\>\"", "]"}]}], ",", "acq", 
       ",", "waitSlots", ",", "base"}], "}"}], ",", 
     RowBox[{
      RowBox[{"acq", "=", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox["1", "Q"]}], ")"}], 
        RowBox[{"Q", "-", "1"}]]}], ";", 
      RowBox[{"waitSlots", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"acq", "\[Equal]", "0"}], ",", "\[Infinity]", ",", 
         FractionBox[
          RowBox[{"1", "-", "acq"}], "acq"]}], "]"}]}], ";", 
      RowBox[{"base", "=", 
       FractionBox["packetBits", 
        RowBox[{"C", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["packetBits", "C"], "+", 
           RowBox[{"waitSlots", " ", "T"}]}], ")"}]}]]}], ";", 
      RowBox[{"N", "[", 
       RowBox[{"0.02", "+", 
        RowBox[{"0.98", " ", "base"}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "DaedaelusProtocolUtilization", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SpeedOfLightInCoax", "=", "2.3*^8"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "DaedaelusProtocolUtilization", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<LinkSpeed\>\"", "\[Rule]", 
     SuperscriptBox["10", "11"]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DaedaelusProtocolUtilization", "[", 
    RowBox[{
     RowBox[{"packetBits_Integer", "?", "Positive"}], ",", 
     RowBox[{"linkLength_", "?", "Positive"}], ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"C", "=", 
        RowBox[{"OptionValue", "[", "\"\<LinkSpeed\>\"", "]"}]}], ",", "tx", 
       ",", "rtt"}], "}"}], ",", 
     RowBox[{
      RowBox[{"tx", "=", 
       FractionBox["packetBits", "C"]}], ";", 
      RowBox[{"rtt", "=", 
       FractionBox[
        RowBox[{"2", " ", "linkLength"}], "SpeedOfLightInCoax"]}], ";", 
      RowBox[{"N", "[", 
       FractionBox["tx", 
        RowBox[{"tx", "+", "rtt"}]], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"MetcalfeContentionModel", "[", 
           RowBox[{"q", ",", 
            RowBox[{"packetBytes", " ", "8"}], ",", 
            RowBox[{"\"\<ChannelCapacity\>\"", "\[Rule]", 
             SuperscriptBox["10", "8"]}], ",", 
            RowBox[{"\"\<SlotTime\>\"", "\[Rule]", "51.2*^-6"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"q", ",", "2", ",", "256"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Contending Stations  Q\>\"", ",", 
            "\"\<Efficiency  \[Eta]\>\""}], "}"}]}], ",", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Classical Ethernet contention collapse\>\"", ",", "Bold", ",",
             "14"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"DaedaelusProtocolUtilization", "[", 
           RowBox[{
            RowBox[{"packetBytes", " ", "8"}], ",", "len", ",", 
            RowBox[{"\"\<LinkSpeed\>\"", "\[Rule]", "linkSpeedBps"}]}], "]"}],
           "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"len", ",", "0.1", ",", "10"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Link length  (m)\>\"", ",", "\"\<Utilisation  U\>\""}], 
           "}"}]}], ",", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Green", ",", "Thick"}], "}"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Daedaelus \[OpenCurlyDoubleQuote]longer-than-the-wire\
\[CloseCurlyDoubleQuote] proof\>\"", ",", "Bold", ",", "14"}], "]"}]}]}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"packetBytes", ",", "512", ",", "\"\<Packet Size (B)\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "64", ",", "512", ",", "1024", ",", "1518", ",", "4096", ",", "9000"}], 
      "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"linkSpeedBps", ",", 
       SuperscriptBox["10", "11"], ",", "\"\<Link Speed\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox["10", "10"], "\[Rule]", "\"\<10 Gb/s\>\""}], ",", 
       RowBox[{
        RowBox[{"2.5", " ", 
         SuperscriptBox["10", "10"]}], "\[Rule]", "\"\<25 Gb/s\>\""}], ",", 
       RowBox[{
        SuperscriptBox["10", "11"], "\[Rule]", "\"\<100 Gb/s\>\""}], ",", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["10", "11"]}], "\[Rule]", "\"\<400 Gb/s\>\""}]}], 
      "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Top"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.962977974145344*^9, 3.962978016464684*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b7e618dc-4ca0-4e3f-893d-9783ed950f76"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`linkSpeedBps$$ = 
    100000000000, $CellContext`packetBytes$$ = 512, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`packetBytes$$], 512, "Packet Size (B)"}, {64, 512, 
      1024, 1518, 4096, 9000}, ControlType -> SetterBar}, {{
       Hold[$CellContext`linkSpeedBps$$], 100000000000, "Link Speed"}, {
      10000000000 -> "10 Gb/s", 2.5*^10 -> "25 Gb/s", 100000000000 -> 
       "100 Gb/s", 400000000000 -> "400 Gb/s"}, ControlType -> PopupMenu}}, 
    Typeset`size$$ = {875., {581.6797485351562, 591.3202514648438}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`linkSpeedBps$$ = 
        100000000000, $CellContext`packetBytes$$ = 512}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Column[{
         Plot[
          Evaluate[
           
           Daedaelus`EthernetModel`MetcalfeContentionModel[$CellContext`q, \
$CellContext`packetBytes$$ 8, "ChannelCapacity" -> 10^8, "SlotTime" -> 
            0.0000512]], {$CellContext`q, 2, 256}, PlotRange -> {0, 1}, Frame -> 
          True, FrameLabel -> {
           "Contending Stations  Q", "Efficiency  \[Eta]"}, GridLines -> 
          Automatic, PlotStyle -> {Red, Thick}, PlotLabel -> 
          Style["Classical Ethernet contention collapse", Bold, 14]], 
         Plot[
          Evaluate[
           
           Daedaelus`EthernetModel`DaedaelusProtocolUtilization[$CellContext`\
packetBytes$$ 8, $CellContext`len, 
            "LinkSpeed" -> $CellContext`linkSpeedBps$$]], {$CellContext`len, 
           0.1, 10}, PlotRange -> {0, 1}, Frame -> True, 
          FrameLabel -> {"Link length  (m)", "Utilisation  U"}, GridLines -> 
          Automatic, PlotStyle -> {Green, Thick}, PlotLabel -> 
          Style["Daedaelus \[OpenCurlyDoubleQuote]longer-than-the-wire\
\[CloseCurlyDoubleQuote] proof", Bold, 14]]}, Alignment -> Center], 
      "Specifications" :> {{{$CellContext`packetBytes$$, 512, 
          "Packet Size (B)"}, {64, 512, 1024, 1518, 4096, 9000}, ControlType -> 
         SetterBar}, {{$CellContext`linkSpeedBps$$, 100000000000, 
          "Link Speed"}, {
         10000000000 -> "10 Gb/s", 2.5*^10 -> "25 Gb/s", 100000000000 -> 
          "100 Gb/s", 400000000000 -> "400 Gb/s"}, ControlType -> PopupMenu}},
       "Options" :> {ControlPlacement -> Top}, "DefaultOptions" :> {}],
     ImageSizeCache->{929., {652., 661.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.962966120946607*^9, 3.962966179386441*^9, {3.962966211247948*^9, 
   3.962966219127369*^9}, {3.96296628134613*^9, 3.962966334122003*^9}, {
   3.9629664097950907`*^9, 3.962966435377709*^9}, {3.962966486939349*^9, 
   3.962966495453889*^9}, 3.96297480085504*^9, {3.962977848126094*^9, 
   3.962977866290621*^9}, {3.9629779744958677`*^9, 3.962978016879547*^9}, 
   3.96297826318489*^9, 3.9629783430966043`*^9, 3.962981592142325*^9, 
   3.962981787596888*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"5ff2071d-9d83-4e91-9297-7aa9469d9acf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resilience Metric: Spanning Tree Count", "Section",
 CellChangeTimes->{{3.9629599412040358`*^9, 3.9629599418125887`*^9}, {
  3.962960029036481*^9, 3.9629600299441223`*^9}, {3.962960241116858*^9, 
  3.962960242381179*^9}, {3.962960315057363*^9, 3.962960316170951*^9}, {
  3.96296043005512*^9, 3.962960431230219*^9}, {3.962960479145268*^9, 
  3.962960479860569*^9}},ExpressionUUID->"7bc53154-2f66-4bdd-b74d-\
81565d3f9878"],

Cell["\<\
One way to quantify a network\[CloseCurlyQuote]s inherent resilience or \
redundancy is to count how many different spanning trees it contains. A \
higher number of spanning trees means there are many distinct ways to connect \
all nodes \[Dash] essentially, many alternate routing structures exist if \
some links are removed. Mathematically, the Matrix Tree Theorem (Kirchhoff\
\[CloseCurlyQuote]s theorem) tells us the number of spanning trees in a graph \
can be computed from the graph\[CloseCurlyQuote]s Laplacian matrix \
(https://mathworld.wolfram.com/MatrixTreeTheorem.html#:~:text=The%20matrix%\
20tree%20theorem%2C%20also,235). The code uses this to compare the Clos vs. \
mesh. The result (plotted on a log scale bar chart) is dramatic: the mesh \
network has orders of magnitude more spanning trees than the Clos network. \
This is expected \[Dash] the Clos (with a tree-like structure augmented by a \
few extra links) has relatively few cycles or alternative paths. In fact, a \
pure tree has exactly one spanning tree (itself), and adding a small number \
of extra links yields only modestly more spanning trees. The mesh, by \
contrast, is rich in cycles; even a 4\[Times]4 grid already has a huge number \
of possible spanning trees connecting all 16 nodes. Each additional redundant \
link multiplies the count of spanning trees combinatorially. While spanning \
tree count is a theoretical metric, it correlates with network reliability: a \
network with more possible spanning trees can lose more links while still \
remaining connected in at least one way. In other words, there are many ways \
to re-route connectivity. The D\[CapitalAE]D\[CapitalAE]LUS team explicitly \
uses such graph metrics to prove the superior resilience of the N2N lattice \
over centralized topologies \
(https://mulliganstew-gang.vercel.app/#:~:text=Alternating%20Bit%20Protocol%\
2C%20demonstrating%20the,%C2%BB). . A high spanning-tree count indicates the \
network has ample resilience built-in, whereas a low count suggests fragile \
spots where a single cut could isolate part of the network. \
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
   3.962960491099985*^9, 3.962960515176626*^9}, 
   3.962978127650614*^9},ExpressionUUID->"a63a3da0-8f2a-44e8-a4d3-\
e13d8b4b145c"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["(In the example, the number of spanning trees for the \
Clos topology vs. the mesh was computed and plotted. Because the mesh\
\[CloseCurlyQuote]s count was astronomically higher, a logarithmic scale was \
used to display both bars on the same chart. This vividly demonstrates how \
much more redundancy the distributed mesh has, compared to the relatively \
sparse Clos.)",
 FontSlant->"Italic"]], "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.962960491099985*^9, 
  3.9629605205743427`*^9}},ExpressionUUID->"43e6585b-0bdd-4897-98d2-\
31a24efe495e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Daedaelus`EthernetTopology`\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CellAgentDependencies", "::", "usage"}], "MessageName"], "=", 
   "\"\<Finds other Cell Agents that are invoked or affected by the target \
Cell Agent, based on its DownValues and SubValues. This reveals the flow of \
conserved quantities and transactional state.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"GenerateTransactionFabricGraph", "::", "usage"}], "MessageName"],
    "=", "\"\<GenerateTransactionFabricGraph[modules:{_String..}, opts___] \
generates a Transaction Fabric graph, visualizing the causal dependencies and \
message pathways between Cell Agents within specified system modules.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"FabricGraphAddAgentInfo", "::", "usage"}], "MessageName"], "=", 
   "\"\<FabricGraphAddAgentInfo[gr_Graph, opts___] enriches the Transaction \
Fabric graph with tooltips describing the role and philosophy of each Cell \
Agent.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"FabricGraphAddStatePrintButtons", "::", "usage"}], "MessageName"],
    "=", "\"\<FabricGraphAddStatePrintButtons[gr_Graph, opts___] adds \
interactive buttons to the graph nodes, allowing for the inspection of a Cell \
Agent's live state or token definitions.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VisualizeN2NLattice", "::", "usage"}], "MessageName"], "=", 
   "\"\<VisualizeN2NLattice[gr_Graph, opts___] applies a circular embedding \
to the fabric graph, ideal for visualizing the resilient topology of an N2N \
Lattice or Hypercell. Edges are rendered as Bezier curves to show the flow of \
causality.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TraceTokenSourcePath", "::", "usage"}], "MessageName"], "=", 
   "\"\<TraceTokenSourcePath[gr_Graph, agent_?AtomQ, k_Integer:3] finds the \
causal history of a token or message arriving at a Cell Agent, tracing its \
path back up to k hops.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TraceTokenDestinationPath", "::", "usage"}], "MessageName"], 
   "=", "\"\<TraceTokenDestinationPath[gr_Graph, agent_?AtomQ, k_Integer:3] \
shows the potential future pathways a token or message can take from a given \
Cell Agent, up to k hops forward.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VisualizeLocalCausality", "::", "usage"}], "MessageName"], "=", 
   "\"\<VisualizeLocalCausality[gr_Graph, agent_?AtomQ, k_Integer:3] \
generates a subgraph showing the local interaction sphere of a Cell Agent, \
representing its Local Observer View (LOV) within the fabric.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "SymbolQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SymbolQ", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Head", "[", "x", "]"}], "===", "Symbol"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "FunctionQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"FunctionQ", ",", "HoldAll"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FunctionQ", "[", "sym_Symbol", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"DownValues", "[", "sym", "]"}], "=!=", 
       RowBox[{"{", "}"}]}], "||", 
      RowBox[{
       RowBox[{"SubValues", "[", "sym", "]"}], "=!=", 
       RowBox[{"{", "}"}]}]}], ")"}], "&&", 
    RowBox[{
     RowBox[{"OwnValues", "[", "sym", "]"}], "===", 
     RowBox[{"{", "}"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "CellAgentDependencies", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "CellAgentDependencies", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<AtomicSymbols\>\"", "\[Rule]", "True"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"CellAgentDependencies", ",", "HoldFirst"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CellAgentDependencies", "[", 
    RowBox[{"sym_Symbol", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "atomicSymbolsQ", "}"}], ",", 
     RowBox[{
      RowBox[{"atomicSymbolsQ", "=", 
       RowBox[{"TrueQ", "[", 
        RowBox[{"OptionValue", "[", 
         RowBox[{"CellAgentDependencies", ",", "\"\<AtomicSymbols\>\""}], 
         "]"}], "]"}]}], ";", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"functionQ", "=", 
          RowBox[{"If", "[", 
           RowBox[{"atomicSymbolsQ", ",", "SymbolQ", ",", "FunctionQ"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"Union", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"List", "@@", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"Union", "[", 
               RowBox[{"Level", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Hold", "@@", 
                    RowBox[{"DownValues", "[", "sym", "]"}]}], ")"}], 
                  "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"-", "1"}], "}"}], ",", "Hold", ",", 
                 RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}], "]"}], ",", 
              "functionQ"}], "]"}]}], ",", 
           RowBox[{"List", "@@", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"Union", "[", 
               RowBox[{"Level", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Hold", "@@", 
                    RowBox[{"SubValues", "[", "sym", "]"}]}], ")"}], 
                  "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"-", "1"}], "}"}], ",", "Hold", ",", 
                 RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}], "]"}], ",", 
              "functionQ"}], "]"}]}]}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "GenerateTransactionFabricGraph", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "GenerateTransactionFabricGraph", "]"}], 
   "=", 
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"_", ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "GenerateTransactionFabricGraph", "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<PrivateContexts\>\"", "\[Rule]", "False"}], ",", 
       RowBox[{"\"\<SelfReferencing\>\"", "\[Rule]", "False"}], ",", 
       RowBox[{"\"\<AtomicSymbols\>\"", "\[Rule]", "True"}], ",", 
       RowBox[{"Exclusions", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\"\<UsageTooltips\>\"", "\[Rule]", "True"}], ",", 
       RowBox[{
       "\"\<UsageTooltipsStyle\>\"", "\[Rule]", "\"\<Subsubsection\>\""}]}], 
      "}"}], ",", 
     RowBox[{"Options", "[", "Graph", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateTransactionFabricGraph", "[", 
    RowBox[{"context_String", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"GenerateTransactionFabricGraph", "[", 
    RowBox[{
     RowBox[{"{", "context", "}"}], ",", "opts"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateTransactionFabricGraph", "[", 
    RowBox[{
     RowBox[{"contexts", ":", 
      RowBox[{"{", 
       RowBox[{"_String", ".."}], "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "pSymbs", ",", "pPrivateSymbs", ",", "exclSymbs", ",", "atomicSymbolsQ",
        ",", "dRes", ",", "aDependencyRules", ",", "gRules", ",", "grOpts", 
       ",", "utStyle", ",", "styleFunc"}], "}"}], ",", 
     RowBox[{
      RowBox[{"pSymbs", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", "c", "}"}], ",", 
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"p", "=", 
               RowBox[{"Names", "[", 
                RowBox[{"c", "<>", "\"\<*\>\""}], "]"}]}], "}"}], ",", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"c", "<>", "#1"}], "]"}], "&"}], ")"}], "/@", 
                "p"}], ",", "SymbolQ"}], "]"}]}], "]"}]}], "]"}], "/@", 
         "contexts"}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"OptionValue", "[", 
          RowBox[{
          "GenerateTransactionFabricGraph", ",", "\"\<PrivateContexts\>\""}], 
          "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"pPrivateSymbs", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ToExpression", "[", 
               RowBox[{"Names", "[", 
                RowBox[{"#1", "<>", "\"\<Private`*\>\""}], "]"}], "]"}], 
              "&"}], ")"}], "/@", "contexts"}], "]"}]}], ";", 
         RowBox[{"pSymbs", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"pSymbs", ",", "pPrivateSymbs"}], "]"}]}], ";"}]}], "]"}], 
      ";", 
      RowBox[{"atomicSymbolsQ", "=", 
       RowBox[{"TrueQ", "[", 
        RowBox[{"OptionValue", "[", 
         RowBox[{
         "GenerateTransactionFabricGraph", ",", "\"\<AtomicSymbols\>\""}], 
         "]"}], "]"}]}], ";", 
      RowBox[{"pSymbs", "=", 
       RowBox[{"If", "[", 
        RowBox[{"atomicSymbolsQ", ",", 
         RowBox[{"Select", "[", 
          RowBox[{"pSymbs", ",", "SymbolQ"}], "]"}], ",", 
         RowBox[{"Select", "[", 
          RowBox[{"pSymbs", ",", "FunctionQ"}], "]"}]}], "]"}]}], ";", 
      RowBox[{"exclSymbs", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"OptionValue", "[", 
          RowBox[{"GenerateTransactionFabricGraph", ",", "Exclusions"}], 
          "]"}], "}"}], "]"}]}], ";", 
      RowBox[{"pSymbs", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{"pSymbs", ",", "exclSymbs"}], "]"}]}], ";", 
      RowBox[{"dRes", "=", 
       RowBox[{"Association", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#1", "\[Rule]", 
            RowBox[{"CellAgentDependencies", "[", 
             RowBox[{"#1", ",", 
              RowBox[{
              "\"\<AtomicSymbols\>\"", "\[Rule]", "atomicSymbolsQ"}]}], 
             "]"}]}], "&"}], ")"}], "/@", "pSymbs"}], "]"}]}], ";", 
      RowBox[{"aDependencyRules", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pSymbs", "\[Intersection]", "#1"}], "&"}], ")"}], "/@", 
        "dRes"}]}], ";", 
      RowBox[{"gRules", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Thread", "/@", 
         RowBox[{"Normal", "[", "aDependencyRules", "]"}]}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"TrueQ", "[", 
          RowBox[{"OptionValue", "[", 
           RowBox[{
           "GenerateTransactionFabricGraph", ",", "\"\<SelfReferencing\>\""}],
            "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"gRules", "=", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{"gRules", ",", 
            RowBox[{"x_", "\[Rule]", "x_"}]}], "]"}]}], ";"}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"OptionValue", "[", 
          RowBox[{
          "GenerateTransactionFabricGraph", ",", "\"\<UsageTooltips\>\""}], 
          "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"utStyle", "=", 
          RowBox[{"OptionValue", "[", 
           RowBox[{
           "GenerateTransactionFabricGraph", ",", 
            "\"\<UsageTooltipsStyle\>\""}], "]"}]}], ";", 
         RowBox[{"styleFunc", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"TrueQ", "[", 
             RowBox[{"utStyle", "===", "None"}], "]"}], ",", "Identity", ",", 
            
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"#1", ",", "utStyle"}], "]"}], "&"}]}], "]"}]}], ";", 
         RowBox[{"gRules", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Tooltip", "[", 
              RowBox[{"#1", ",", 
               RowBox[{"styleFunc", "[", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"SymbolName", "[", "#1", "]"}], ",", "Italic", 
                    ",", "Bold"}], "]"}], ",", "\"\<: \>\"", ",", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"MessageName", "[", 
                    RowBox[{"#1", ",", "\"\<usage\>\""}], "]"}], "]"}]}], 
                  "}"}], "]"}], "]"}]}], "]"}], "&"}], ",", "gRules", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}]}]}], "]"}], ";", 
      RowBox[{"grOpts", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{"KeyTake", "[", 
         RowBox[{
          RowBox[{"{", "opts", "}"}], ",", 
          RowBox[{"First", "/@", 
           RowBox[{"Options", "[", "Graph", "]"}]}]}], "]"}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"OptionValue", "[", 
          RowBox[{
          "GenerateTransactionFabricGraph", ",", "\"\<UsageTooltips\>\""}], 
          "]"}], "]"}], ",", 
        RowBox[{"Graph", "[", 
         RowBox[{"gRules", ",", 
          RowBox[{"Sequence", "@@", "grOpts"}], ",", 
          RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], ",", 
        RowBox[{"Graph", "[", 
         RowBox[{"gRules", ",", 
          RowBox[{"Sequence", "@@", "grOpts"}]}], "]"}]}], "]"}]}]}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateTransactionFabricGraph", "[", "___", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{
      RowBox[{"Message", "[", 
       StyleBox[
        RowBox[{"GenerateTransactionFabricGraph", "::", "args"}], 
        "MessageName"], "]"}], ";", "$Failed"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"GenerateTransactionFabricGraph", "::", "args"}], "MessageName"], 
   "=", "\"\<The first argument is expected to be a string or a list of \
strings, each representing a system module or agent context.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "FabricGraphAddAgentInfo", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "FabricGraphAddAgentInfo", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"_", ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FabricGraphAddAgentInfo", "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<UsageTooltipsStyle\>\"", "\[Rule]", "\"\<Subsubsection\>\""}], 
      "}"}], ",", 
     RowBox[{"Options", "[", "Graph", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FabricGraphAddAgentInfo", "[", 
    RowBox[{"gr_Graph", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"grOpts", ",", "utStyle", ",", "styleFunc", ",", "gRules"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"grOpts", "=", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "opts", "}"}], ",", 
         RowBox[{"Options", "[", "Graph", "]"}]}], "]"}]}], ";", 
      RowBox[{"utStyle", "=", 
       RowBox[{"OptionValue", "[", 
        RowBox[{
        "FabricGraphAddAgentInfo", ",", "\"\<UsageTooltipsStyle\>\""}], 
        "]"}]}], ";", 
      RowBox[{"styleFunc", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrueQ", "[", 
          RowBox[{"utStyle", "===", "None"}], "]"}], ",", "Identity", ",", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#1", ",", "utStyle"}], "]"}], "&"}]}], "]"}]}], ";", 
      RowBox[{"gRules", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Tooltip", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"styleFunc", "[", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"SymbolName", "[", "#1", "]"}], ",", "Italic", ",", 
                  "Bold"}], "]"}], ",", "\"\<: \>\"", ",", 
                RowBox[{"ToString", "[", 
                 RowBox[{"MessageName", "[", 
                  RowBox[{"#1", ",", "\"\<usage\>\""}], "]"}], "]"}]}], "}"}],
               "]"}], "]"}]}], "]"}], "&"}], ",", 
         RowBox[{"EdgeList", "[", "gr", "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{"gRules", ",", 
        RowBox[{"Sequence", "@@", "grOpts"}], ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"FabricGraphAddAgentInfo", "::", "args"}], "MessageName"], "=", 
   "\"\<The first argument must be a valid Transaction Fabric graph object.\>\
\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "FabricGraphAddStatePrintButtons", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "FabricGraphAddStatePrintButtons", "]"}],
    "=", 
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"_", ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FabricGraphAddStatePrintButtons", "]"}], "=", 
   RowBox[{"Options", "[", "Graph", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FabricGraphAddStatePrintButtons", "[", 
    RowBox[{"gr_Graph", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "grDefRules", "}"}], ",", 
     RowBox[{
      RowBox[{"grDefRules", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Button", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"GeneralUtilities`PrintDefinitions", "[", "#1", "]"}], 
            ",", 
            RowBox[{"Appearance", "\[Rule]", "Frameless"}]}], "]"}], "&"}], 
         ",", 
         RowBox[{"EdgeList", "[", "gr", "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{"grDefRules", ",", "opts", ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"FabricGraphAddStatePrintButtons", "::", "args"}], "MessageName"],
    "=", "\"\<The first argument must be a valid Transaction Fabric graph \
object.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"eSf", ",", "vSf"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eSf", "[", 
    RowBox[{"g_", ",", "cols_", ",", 
     RowBox[{"edgeThickness_", ":", "Thin"}], ",", 
     RowBox[{"firstHalfEdgeFunc_", ":", "Line"}], ",", 
     RowBox[{"secodHalfEdgeFunc_", ":", "Arrow"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bsf", "=", 
         RowBox[{"BSplineFunction", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"RegionNearest", "[", 
             RowBox[{
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"Mean", "[", 
                 RowBox[{"#1", "\[LeftDoubleBracket]", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], "\[RightDoubleBracket]"}], 
                 "]"}], ",", 
                RowBox[{"Norm", "[", 
                 RowBox[{
                  RowBox[{
                  "#1", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "-", 
                  RowBox[{"#1", "\[LeftDoubleBracket]", 
                   RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
            RowBox[{"#1", "\[LeftDoubleBracket]", 
             RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], 
        ",", 
        RowBox[{"p1", "=", 
         RowBox[{"Subdivide", "[", 
          RowBox[{"0", ",", 
           FractionBox["1", "2"], ",", "50"}], "]"}]}], ",", 
        RowBox[{"p2", "=", 
         RowBox[{"Subdivide", "[", 
          RowBox[{
           FractionBox["1", "2"], ",", "1", ",", "50"}], "]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"edgeThickness", ",", 
        RowBox[{"cols", "\[LeftDoubleBracket]", 
         RowBox[{"VertexIndex", "[", 
          RowBox[{"g", ",", 
           RowBox[{
           "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "]"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"firstHalfEdgeFunc", "[", 
         RowBox[{"bsf", "/@", "p1"}], "]"}], ",", 
        RowBox[{"cols", "\[LeftDoubleBracket]", 
         RowBox[{"VertexIndex", "[", 
          RowBox[{"g", ",", 
           RowBox[{
           "#2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"secodHalfEdgeFunc", "[", 
         RowBox[{"bsf", "/@", "p2"}], "]"}]}], "}"}]}], "]"}], "&"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vSf", "[", 
    RowBox[{"g_", ",", "cols_", ",", 
     RowBox[{"pointSize_", ":", "Large"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"off", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[Pi]", "2"]}], "<", 
           RowBox[{"ArcTan", "@@", "#1"}], "<", 
           FractionBox["\[Pi]", "2"]}], ",", "Left", ",", "Right"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cols", "\[LeftDoubleBracket]", 
         RowBox[{"VertexIndex", "[", 
          RowBox[{"g", ",", "#2"}], "]"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Framed", "[", 
             RowBox[{"#2", ",", 
              RowBox[{"FrameStyle", "\[Rule]", "None"}]}], "]"}], ",", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", ".03", "]"}]}]}], "]"}], ",", "#1", ",", 
          RowBox[{"{", 
           RowBox[{"off", ",", "Center"}], "}"}], ",", 
          RowBox[{
           RowBox[{"ArcTan", "[", "#1", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"off", "/.", "\[VeryThinSpace]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Left", "\[Rule]", "1"}], ",", 
               RowBox[{"Right", "\[Rule]", 
                RowBox[{"-", "1"}]}]}], "}"}]}], ")"}]}]}], "]"}], ",", 
        RowBox[{"PointSize", "[", "pointSize", "]"}], ",", 
        RowBox[{"Point", "[", "#1", "]"}]}], "}"}]}], "]"}], "&"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "VisualizeN2NLattice", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "VisualizeN2NLattice", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"_", ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "VisualizeN2NLattice", "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<VertexColors\>\"", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"\"\<EdgeThickness\>\"", "\[Rule]", "Automatic"}]}], "}"}], 
     ",", 
     RowBox[{"Options", "[", "Graph", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VisualizeN2NLattice", "[", 
    RowBox[{"gr_Graph", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cc", ",", "cols", ",", "grOpts", ",", "edgeThickness"}], "}"}],
      ",", 
     RowBox[{
      RowBox[{"cols", "=", 
       RowBox[{"OptionValue", "[", "\"\<VertexColors\>\"", "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"cols", "===", "Automatic"}], "]"}], ",", 
        RowBox[{
         RowBox[{"cc", "=", 
          RowBox[{"PageRankCentrality", "[", "gr", "]"}]}], ";", 
         RowBox[{"cols", "=", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Rainbow\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"VertexCount", "[", "gr", "]"}]}], "}"}]}], "}"}], 
            "]"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"VertexCount", "[", "gr", "]"}], "]"}]}]}], ";", 
         RowBox[{"cols", "=", 
          RowBox[{"cols", "\[LeftDoubleBracket]", 
           RowBox[{"Ordering", "[", "cc", "]"}], "\[RightDoubleBracket]"}]}], 
         ";"}]}], "]"}], ";", 
      RowBox[{"grOpts", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{"KeyTake", "[", 
         RowBox[{
          RowBox[{"{", "opts", "}"}], ",", 
          RowBox[{"First", "/@", 
           RowBox[{"Options", "[", "Graph", "]"}]}]}], "]"}], "]"}]}], ";", 
      RowBox[{"edgeThickness", "=", 
       RowBox[{"OptionValue", "[", "\"\<EdgeThickness\>\"", "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"edgeThickness", "===", "Automatic"}], "]"}], ",", 
        RowBox[{"edgeThickness", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"EdgeCount", "[", "gr", "]"}], 
              RowBox[{
               RowBox[{"VertexCount", "[", "gr", "]"}], "+", "1"}]], ">", 
             "1.5"}], "||", 
            RowBox[{
             RowBox[{"EdgeCount", "[", "gr", "]"}], ">", "400"}]}], ",", 
           "Thin", ",", "Thick", ",", "Thin"}], "]"}]}]}], "]"}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"EdgeList", "[", "gr", "]"}], ",", 
        RowBox[{"Sequence", "@@", "grOpts"}], ",", 
        RowBox[{"VertexLabels", "\[Rule]", "None"}], ",", 
        RowBox[{"GraphLayout", "\[Rule]", "\"\<CircularEmbedding\>\""}], ",", 
        
        RowBox[{"VertexShapeFunction", "\[Rule]", 
         RowBox[{"vSf", "[", 
          RowBox[{"gr", ",", "cols"}], "]"}]}], ",", 
        RowBox[{"EdgeShapeFunction", "\[Rule]", 
         RowBox[{"eSf", "[", 
          RowBox[{"gr", ",", "cols", ",", "edgeThickness"}], "]"}]}]}], 
       "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VisualizeN2NLattice", "::", "args"}], "MessageName"], "=", 
   "\"\<The first argument must be a valid Transaction Fabric graph object.\>\
\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "TraceTokenSourcePath", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "TraceTokenSourcePath", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_", ",", "_."}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TraceTokenSourcePath", "[", 
    RowBox[{"gr_Graph", ",", 
     RowBox[{"node_", "?", "AtomQ"}], ",", 
     RowBox[{"n_Integer", ":", "3"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Union", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Rest", "[", 
       RowBox[{"NestList", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{"EdgeList", "[", "gr", "]"}], ",", 
                RowBox[{"_", "\[DirectedEdge]", "#1"}]}], "]"}], "&"}], ")"}],
             "/@", 
            RowBox[{"#1", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"node", "\[DirectedEdge]", "node"}], "}"}], ",", "n"}], 
        "]"}], "]"}], "]"}], "]"}], "/;", 
    RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TraceTokenSourcePath", "::", "args"}], "MessageName"], "=", 
   "\"\<Arguments are: a graph object, a graph vertex (Cell Agent), and an \
optional non-negative integer for path length.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "TraceTokenDestinationPath", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "TraceTokenDestinationPath", "]"}], "=", 
   
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_", ",", "_."}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TraceTokenDestinationPath", "[", 
    RowBox[{"gr_Graph", ",", "node_Symbol", ",", 
     RowBox[{"n_Integer", ":", "3"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Union", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Rest", "[", 
       RowBox[{"NestList", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{"EdgeList", "[", "gr", "]"}], ",", 
                RowBox[{"#1", "\[DirectedEdge]", "_"}]}], "]"}], "&"}], ")"}],
             "/@", 
            RowBox[{"#1", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"node", "\[DirectedEdge]", "node"}], "}"}], ",", "n"}], 
        "]"}], "]"}], "]"}], "]"}], "/;", 
    RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TraceTokenDestinationPath", "::", "args"}], "MessageName"], "=", 
   "\"\<Arguments are: a graph object, a graph vertex (Cell Agent), and an \
optional non-negative integer for path length.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "VisualizeLocalCausality", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "VisualizeLocalCausality", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_", ",", "_."}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VisualizeLocalCausality", "[", 
    RowBox[{"gr_Graph", ",", "node_Symbol", ",", 
     RowBox[{"n_Integer", ":", "3"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Union", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Rest", "[", 
       RowBox[{"NestList", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{"EdgeList", "[", "gr", "]"}], ",", 
                RowBox[{
                 RowBox[{"#1", "\[DirectedEdge]", "_"}], "|", 
                 RowBox[{"_", "\[DirectedEdge]", "#1"}]}]}], "]"}], "&"}], 
             ")"}], "/@", 
            RowBox[{"Union", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{"List", "@@@", "#1"}], "]"}], "]"}]}], "]"}], "&"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"node", "\[DirectedEdge]", "node"}], "}"}], ",", "n"}], 
        "]"}], "]"}], "]"}], "]"}], "/;", 
    RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VisualizeLocalCausality", "::", "args"}], "MessageName"], "=", 
   "\"\<Arguments are: a graph object, a graph vertex (Cell Agent), and an \
optional non-negative integer for path length.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{"EndPackage", "[", "]"}], "\n", 
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Daedaelus`Emulator`\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Alice", "::", "usage"}], "MessageName"], "=", 
   "\"\<Alice: Initiates a reversible transaction by emitting a French Token.\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Bob", "::", "usage"}], "MessageName"], "=", 
   "\"\<Bob: Responds to Alice and manages the corresponding German \
Token.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Charlie", "::", "usage"}], "MessageName"], "=", 
   "\"\<Charlie (Captain, Coordinator): Observes the Alice-Bob interaction \
and ensures token conservation across the link, enabling the TIKTYKTIK \
property ('I Know That You Know That I Know').\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"SAWProtocolLink", "::", "usage"}], "MessageName"], "=", 
   "\"\<SAWProtocolLink: Manages the stateful, bidirectional communication \
object between two cells, ensuring atomicity.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ReversibleTransaction", "::", "usage"}], "MessageName"], "=", 
   "\"\<ReversibleTransaction: A higher-level construct that uses Reversible \
Subtransactions to guarantee atomicity without resorting to the 'irreversible \
smash and restart of Shannon information.'\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Alice", "[", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"SAWProtocolLink", "[", "\"\<French Token\>\"", "]"}], ";", 
     RowBox[{"Bob", "[", "\"\<French Token\>\"", "]"}], ";", 
     RowBox[{"Charlie", "[", 
      RowBox[{"\"\<Observe\>\"", ",", "\"\<Alice\>\"", ",", "\"\<Bob\>\""}], 
      "]"}], ";"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Bob", "[", "token_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"SAWProtocolLink", "[", "\"\<German Token\>\"", "]"}], ";"}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Charlie", "[", 
    RowBox[{"action_", ",", "from_", ",", "to_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ReversibleTransaction", "[", 
      RowBox[{"{", 
       RowBox[{"from", ",", "to"}], "}"}], "]"}], ";"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReversibleTransaction", "[", "agents_List", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"Alice", ";", "Bob", ";"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}], "\n", 
 RowBox[{"fabricGraph", "=", 
  RowBox[{"GenerateTransactionFabricGraph", "[", 
   RowBox[{"\"\<Daedaelus`Emulator`\>\"", ",", 
    RowBox[{"GraphLayout", "\[Rule]", "\"\<SpringElectricalEmbedding\>\""}], 
    ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<D\[CapitalAE]D\[CapitalAE]LUS Transaction Fabric for Emulator \
Module\>\"", ",", "Bold", ",", "16"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{"VisualizeN2NLattice", "[", 
  RowBox[{"fabricGraph", ",", 
   RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<N2N Lattice View of Token Dynamics\>\"", ",", "Bold", ",", "16"}], 
     "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.962966542758383*^9, 3.962966546623878*^9}, 
   3.962978127659565*^9},
 CellLabel->
  "In[138]:=",ExpressionUUID->"0ffb6c4b-b549-4a36-a451-6e44edf65dde"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Tooltip[Daedaelus`Emulator`Alice, 
        Style[
         Row[{
           Style["Alice", Italic, Bold], ": ", 
           "Alice: Initiates a reversible transaction by emitting a French \
Token."}], "Subsubsection"]], 
       Tooltip[Daedaelus`Emulator`Bob, 
        Style[
         Row[{
           Style["Bob", Italic, Bold], ": ", 
           "Bob: Responds to Alice and manages the corresponding German \
Token."}], "Subsubsection"]], 
       Tooltip[Daedaelus`Emulator`Charlie, 
        Style[
         Row[{
           Style["Charlie", Italic, Bold], ": ", 
           "Charlie (Captain, Coordinator): Observes the Alice-Bob \
interaction and ensures token conservation across the link, enabling the \
TIKTYKTIK property ('I Know That You Know That I Know')."}], 
         "Subsubsection"]], 
       Tooltip[Daedaelus`Emulator`SAWProtocolLink, 
        Style[
         Row[{
           Style["SAWProtocolLink", Italic, Bold], ": ", 
           "SAWProtocolLink: Manages the stateful, bidirectional \
communication object between two cells, ensuring atomicity."}], 
         "Subsubsection"]], 
       Tooltip[Daedaelus`Emulator`ReversibleTransaction, 
        Style[
         Row[{
           Style["ReversibleTransaction", Italic, Bold], ": ", 
           "ReversibleTransaction: A higher-level construct that uses \
Reversible Subtransactions to guarantee atomicity without resorting to the \
'irreversible smash and restart of Shannon information.'"}], 
         "Subsubsection"]]}, {{{1, 2}, {1, 3}, {1, 4}, {2, 4}, {3, 5}, {5, 
       1}, {5, 2}}, Null}, {
      GraphLayout -> "SpringElectricalEmbedding", ImageSize -> Large, 
       PlotLabel -> 
       Style["D\[CapitalAE]D\[CapitalAE]LUS Transaction Fabric for Emulator \
Module", Bold, 16], VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{{1.09902235597314, 0.7302710666664705}, {
         1.6265286377028536`, 0.}}, {{1.09902235597314, 0.7302710666664705}, {
         0., 0.7710436430225218}}, {{1.09902235597314, 0.7302710666664705}, {
         2.1993859828901923`, 0.7709250261965512}}, {{1.6265286377028536`, 
         0.}, {2.1993859828901923`, 0.7709250261965512}}, {{0., 
         0.7710436430225218}, {0.5713511220400824, 0.0006991411524190361}}, {{
         0.5713511220400824, 0.0006991411524190361}, {1.09902235597314, 
         0.7302710666664705}}, {{0.5713511220400824, 0.0006991411524190361}, {
         1.6265286377028536`, 0.}}}, 0.02420897875224487]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{1.09902235597314, 0.7302710666664705}, 0.02420897875224487],
          InsetBox[
          TagBox[
           TooltipBox["Alice",
            StyleBox[
             TemplateBox[{
               StyleBox["\"Alice\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Alice: Initiates a reversible transaction by emitting a \
French Token.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["Alice", Italic, Bold], ": ", 
               "Alice: Initiates a reversible transaction by emitting a \
French Token."}], "Subsubsection"], "Tooltip"]& ], {1.0990249455277803, 0.764163636820686},
           ImageScaled[{0.49994269640910594, -0.24999999781086557}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.6265286377028536`, 0.}, 0.02420897875224487], InsetBox[
          TagBox[
           TooltipBox["Bob",
            StyleBox[
             TemplateBox[{
               StyleBox["\"Bob\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Bob: Responds to Alice and manages the corresponding German \
Token.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["Bob", Italic, Bold], ": ", 
               "Bob: Responds to Alice and manages the corresponding German \
Token."}], "Subsubsection"], "Tooltip"]& ], {1.6417431579990684, -0.030285717599559805},
           ImageScaled[{0.1633217800558207, 1.1701848821147929}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.7710436430225218}, 0.02420897875224487], InsetBox[
          TagBox[
           TooltipBox["Charlie",
            StyleBox[
             TemplateBox[{
               StyleBox["\"Charlie\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"Charlie (Captain, Coordinator): Observes the Alice-Bob \
interaction and ensures token conservation across the link, enabling the \
TIKTYKTIK property ('I Know That You Know That I Know').\""}, "RowDefault"], 
             "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["Charlie", Italic, Bold], ": ", 
               "Charlie (Captain, Coordinator): Observes the Alice-Bob \
interaction and ensures token conservation across the link, enabling the \
TIKTYKTIK property ('I Know That You Know That I Know')."}], "Subsubsection"],
             "Tooltip"]& ], {-0.029986107251621708, 0.7868404683446699}, 
          ImageScaled[{1.1635548815195227, 0.1504361013897284}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.1993859828901923`, 0.7709250261965512}, 
          0.02420897875224487], InsetBox[
          TagBox[
           TooltipBox["SAWProtocolLink",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"SAWProtocolLink\"", Italic, Bold, StripOnInput -> False], 
               "\": \"", 
               "\"SAWProtocolLink: Manages the stateful, bidirectional \
communication object between two cells, ensuring atomicity.\""}, 
              "RowDefault"], "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["SAWProtocolLink", Italic, Bold], ": ", 
               "SAWProtocolLink: Manages the stateful, bidirectional \
communication object between two cells, ensuring atomicity."}], 
             "Subsubsection"], "Tooltip"]& ], {2.2293803977833893, 0.7867060715858456},
           ImageScaled[{-0.1637387191905847, 0.15078529147923603}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5713511220400824, 0.0006991411524190361}, 
          0.02420897875224487], InsetBox[
          TagBox[
           TooltipBox["ReversibleTransaction",
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"ReversibleTransaction\"", Italic, Bold, StripOnInput -> 
                False], "\": \"", 
               "\"ReversibleTransaction: A higher-level construct that uses \
Reversible Subtransactions to guarantee atomicity without resorting to the \
'irreversible smash and restart of Shannon information.'\""}, "RowDefault"], 
             "Subsubsection", StripOnInput -> False],
            TooltipStyle->"TextStyling"],
           Annotation[#, 
            Style[
             Row[{
               Style["ReversibleTransaction", Italic, Bold], ": ", 
               "ReversibleTransaction: A higher-level construct that uses \
Reversible Subtransactions to guarantee atomicity without resorting to the \
'irreversible smash and restart of Shannon information.'"}], "Subsubsection"],
             "Tooltip"]& ], {0.5561029229900403, -0.029569633915206596}, 
          ImageScaled[{0.8374234884552951, 1.1698099651682252}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox[
    StyleBox[
    "\"D\[CapitalAE]D\[CapitalAE]LUS Transaction Fabric for Emulator \
Module\"", Bold, 16, StripOnInput -> False], TraditionalForm]]], "Output",
 CellChangeTimes->{{3.962966543162438*^9, 3.962966547020443*^9}, 
   3.962966770197075*^9, 3.962974802946138*^9, 3.96297826538267*^9, 
   3.962978345654833*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"8c479944-156d-426a-aaba-eb2f4b09db01"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Tooltip[Daedaelus`Emulator`Alice, 
        Style[
         Row[{
           Style["Alice", Italic, Bold], ": ", 
           "Alice: Initiates a reversible transaction by emitting a French \
Token."}], "Subsubsection"]], 
       Tooltip[Daedaelus`Emulator`Bob, 
        Style[
         Row[{
           Style["Bob", Italic, Bold], ": ", 
           "Bob: Responds to Alice and manages the corresponding German \
Token."}], "Subsubsection"]], 
       Tooltip[Daedaelus`Emulator`Charlie, 
        Style[
         Row[{
           Style["Charlie", Italic, Bold], ": ", 
           "Charlie (Captain, Coordinator): Observes the Alice-Bob \
interaction and ensures token conservation across the link, enabling the \
TIKTYKTIK property ('I Know That You Know That I Know')."}], 
         "Subsubsection"]], 
       Tooltip[Daedaelus`Emulator`SAWProtocolLink, 
        Style[
         Row[{
           Style["SAWProtocolLink", Italic, Bold], ": ", 
           "SAWProtocolLink: Manages the stateful, bidirectional \
communication object between two cells, ensuring atomicity."}], 
         "Subsubsection"]], 
       Tooltip[Daedaelus`Emulator`ReversibleTransaction, 
        Style[
         Row[{
           Style["ReversibleTransaction", Italic, Bold], ": ", 
           "ReversibleTransaction: A higher-level construct that uses \
Reversible Subtransactions to guarantee atomicity without resorting to the \
'irreversible smash and restart of Shannon information.'"}], 
         "Subsubsection"]]}, {{{1, 2}, {1, 3}, {1, 4}, {2, 4}, {3, 5}, {5, 
       1}, {5, 2}}, Null}, {
      EdgeShapeFunction -> {
        Module[{Daedaelus`EthernetTopology`Private`bsf$ = BSplineFunction[{
              Part[#, 1], 
              RegionNearest[
               Disk[
                Mean[
                 Part[#, {1, -1}]], 
                Norm[Part[#, 1] - Part[#, -1]]], {0, 0}], 
              Part[#, -1]}], Daedaelus`EthernetTopology`Private`p1$ = 
           Subdivide[0, 1/2, 50], Daedaelus`EthernetTopology`Private`p2$ = 
           Subdivide[1/2, 1, 50]}, {
           Thickness[Large], 
           Part[{
             RGBColor[0.513417, 0.72992, 0.440682], 
             RGBColor[0.471412, 0.108766, 0.527016], 
             RGBColor[0.857359, 0.131106, 0.132128], 
             RGBColor[0.266122, 0.486664, 0.802529], 
             RGBColor[0.863512, 0.670771, 0.236564]}, 
            VertexIndex[
             Graph[{
               Tooltip[Daedaelus`Emulator`Alice, 
                Style[
                 Row[{
                   Style["Alice", Italic, Bold], ": ", 
                   "Alice: Initiates a reversible transaction by emitting a \
French Token."}], "Subsubsection"]], 
               Tooltip[Daedaelus`Emulator`Bob, 
                Style[
                 Row[{
                   Style["Bob", Italic, Bold], ": ", 
                   "Bob: Responds to Alice and manages the corresponding \
German Token."}], "Subsubsection"]], 
               Tooltip[Daedaelus`Emulator`Charlie, 
                Style[
                 Row[{
                   Style["Charlie", Italic, Bold], ": ", 
                   "Charlie (Captain, Coordinator): Observes the Alice-Bob \
interaction and ensures token conservation across the link, enabling the \
TIKTYKTIK property ('I Know That You Know That I Know')."}], 
                 "Subsubsection"]], 
               Tooltip[Daedaelus`Emulator`SAWProtocolLink, 
                Style[
                 Row[{
                   Style["SAWProtocolLink", Italic, Bold], ": ", 
                   "SAWProtocolLink: Manages the stateful, bidirectional \
communication object between two cells, ensuring atomicity."}], 
                 "Subsubsection"]], 
               Tooltip[Daedaelus`Emulator`ReversibleTransaction, 
                Style[
                 Row[{
                   Style["ReversibleTransaction", Italic, Bold], ": ", 
                   "ReversibleTransaction: A higher-level construct that uses \
Reversible Subtransactions to guarantee atomicity without resorting to the \
'irreversible smash and restart of Shannon information.'"}], 
                 "Subsubsection"]]}, {{{1, 2}, {1, 3}, {1, 4}, {2, 4}, {3, 
               5}, {5, 1}, {5, 2}}, Null}, {
              GraphLayout -> "SpringElectricalEmbedding", ImageSize -> Large, 
               PlotLabel -> 
               Style["D\[CapitalAE]D\[CapitalAE]LUS Transaction Fabric for \
Emulator Module", Bold, 16], VertexLabels -> {"Name"}}], 
             Part[#2, 1]]], 
           Line[
            Map[
            Daedaelus`EthernetTopology`Private`bsf$, 
             Daedaelus`EthernetTopology`Private`p1$]], 
           Part[{
             RGBColor[0.513417, 0.72992, 0.440682], 
             RGBColor[0.471412, 0.108766, 0.527016], 
             RGBColor[0.857359, 0.131106, 0.132128], 
             RGBColor[0.266122, 0.486664, 0.802529], 
             RGBColor[0.863512, 0.670771, 0.236564]}, 
            VertexIndex[
             Graph[{
               Tooltip[Daedaelus`Emulator`Alice, 
                Style[
                 Row[{
                   Style["Alice", Italic, Bold], ": ", 
                   "Alice: Initiates a reversible transaction by emitting a \
French Token."}], "Subsubsection"]], 
               Tooltip[Daedaelus`Emulator`Bob, 
                Style[
                 Row[{
                   Style["Bob", Italic, Bold], ": ", 
                   "Bob: Responds to Alice and manages the corresponding \
German Token."}], "Subsubsection"]], 
               Tooltip[Daedaelus`Emulator`Charlie, 
                Style[
                 Row[{
                   Style["Charlie", Italic, Bold], ": ", 
                   "Charlie (Captain, Coordinator): Observes the Alice-Bob \
interaction and ensures token conservation across the link, enabling the \
TIKTYKTIK property ('I Know That You Know That I Know')."}], 
                 "Subsubsection"]], 
               Tooltip[Daedaelus`Emulator`SAWProtocolLink, 
                Style[
                 Row[{
                   Style["SAWProtocolLink", Italic, Bold], ": ", 
                   "SAWProtocolLink: Manages the stateful, bidirectional \
communication object between two cells, ensuring atomicity."}], 
                 "Subsubsection"]], 
               Tooltip[Daedaelus`Emulator`ReversibleTransaction, 
                Style[
                 Row[{
                   Style["ReversibleTransaction", Italic, Bold], ": ", 
                   "ReversibleTransaction: A higher-level construct that uses \
Reversible Subtransactions to guarantee atomicity without resorting to the \
'irreversible smash and restart of Shannon information.'"}], 
                 "Subsubsection"]]}, {{{1, 2}, {1, 3}, {1, 4}, {2, 4}, {3, 
               5}, {5, 1}, {5, 2}}, Null}, {
              GraphLayout -> "SpringElectricalEmbedding", ImageSize -> Large, 
               PlotLabel -> 
               Style["D\[CapitalAE]D\[CapitalAE]LUS Transaction Fabric for \
Emulator Module", Bold, 16], VertexLabels -> {"Name"}}], 
             Part[#2, 2]]], 
           Arrow[
            Map[
            Daedaelus`EthernetTopology`Private`bsf$, 
             Daedaelus`EthernetTopology`Private`p2$]]}]& }, GraphLayout -> 
       "CircularEmbedding", ImageSize -> 700, PlotLabel -> 
       Style["N2N Lattice View of Token Dynamics", Bold, 16], 
       VertexLabels -> {None}, 
       VertexShapeFunction -> {
        Module[{Daedaelus`EthernetTopology`Private`off$ = 
           If[-(Pi/2) < Apply[ArcTan, #] < Pi/2, Left, Right]}, {
           Part[{
             RGBColor[0.513417, 0.72992, 0.440682], 
             RGBColor[0.471412, 0.108766, 0.527016], 
             RGBColor[0.857359, 0.131106, 0.132128], 
             RGBColor[0.266122, 0.486664, 0.802529], 
             RGBColor[0.863512, 0.670771, 0.236564]}, 
            VertexIndex[
             Graph[{
               Tooltip[Daedaelus`Emulator`Alice, 
                Style[
                 Row[{
                   Style["Alice", Italic, Bold], ": ", 
                   "Alice: Initiates a reversible transaction by emitting a \
French Token."}], "Subsubsection"]], 
               Tooltip[Daedaelus`Emulator`Bob, 
                Style[
                 Row[{
                   Style["Bob", Italic, Bold], ": ", 
                   "Bob: Responds to Alice and manages the corresponding \
German Token."}], "Subsubsection"]], 
               Tooltip[Daedaelus`Emulator`Charlie, 
                Style[
                 Row[{
                   Style["Charlie", Italic, Bold], ": ", 
                   "Charlie (Captain, Coordinator): Observes the Alice-Bob \
interaction and ensures token conservation across the link, enabling the \
TIKTYKTIK property ('I Know That You Know That I Know')."}], 
                 "Subsubsection"]], 
               Tooltip[Daedaelus`Emulator`SAWProtocolLink, 
                Style[
                 Row[{
                   Style["SAWProtocolLink", Italic, Bold], ": ", 
                   "SAWProtocolLink: Manages the stateful, bidirectional \
communication object between two cells, ensuring atomicity."}], 
                 "Subsubsection"]], 
               Tooltip[Daedaelus`Emulator`ReversibleTransaction, 
                Style[
                 Row[{
                   Style["ReversibleTransaction", Italic, Bold], ": ", 
                   "ReversibleTransaction: A higher-level construct that uses \
Reversible Subtransactions to guarantee atomicity without resorting to the \
'irreversible smash and restart of Shannon information.'"}], 
                 "Subsubsection"]]}, {{{1, 2}, {1, 3}, {1, 4}, {2, 4}, {3, 
               5}, {5, 1}, {5, 2}}, Null}, {
              GraphLayout -> "SpringElectricalEmbedding", ImageSize -> Large, 
               PlotLabel -> 
               Style["D\[CapitalAE]D\[CapitalAE]LUS Transaction Fabric for \
Emulator Module", Bold, 16], VertexLabels -> {"Name"}}], #2]], 
           Text[
            Style[
             Framed[#2, FrameStyle -> None], FontSize -> Scaled[0.03]], #, {
            Daedaelus`EthernetTopology`Private`off$, Center}, ArcTan[#] 
            ReplaceAll[
             Daedaelus`EthernetTopology`Private`off$, {
              Left -> 1, Right -> -1}]], 
           PointSize[Large], 
           Point[#]}]& }}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {RGBColor[0.513417, 0.72992, 0.440682], Thickness[Large], 
         LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAAVVEEw5v7r9h6S8378bTP/K2I1MD
1O2/F5dkCNJj0z9Cju15hzrtvxSV2+7+BNM/8Nqhh5qi7L9Y45TqdarSP/uc
QHw8DOy/4oGQ+zZU0j9l1MlXbXfrv7RwziFCAtI/LYE9Gi3k6r/Nr05dl7TR
P1Kjm8N7Uuq/LD8RrjZr0T/XOuRTWcLpv9QeFhQgJtE/ukcXy8Uz6b/BTl2P
U+XQP/rJNCnBpui/9c7mH9Go0D+XwTxuSxvov3CfssWYcNA/ky4vmmSR578z
wMCAqjzQP+4QDK0MCee/PDERUQYN0D+laNOmQ4LmvxflR21Yw88/vDWFhwn9
5b9FCPJiOHXPPzB4IU9eeeW/Acwgg6wvzz8DMKj9Qffkv0sw1M208s4/NF0Z
k7R25L8kNQxDUb7OP8P/dA+29+O/itrI4oGSzj+wF7tyRnrjv34gCq1Gb84/
+qTrvGX+4r//BtChn1TOP6OnBu4ThOK/DY4awYxCzj+pHwwGUQviv6m16QoO
Oc4/Dg38BB2U4b/UfT1/IzjOP9Fv1up3HuG/jeYVHs0/zj/xR5u3Yargv9Tv
cucKUM4/cJVKa9o34L+omVTb3GjOP5ywyAvEjd+/CuS6+UKKzj8SIdEO8a7e
v/rOpUI9tM4/Q3yu3zvT3b94WhW2y+bOPzHCYH6k+ty/hIYJVO4hzz/c8ufq
KiXcvx5TghylZc8/Qw5EJc9S279GwH8P8LHPP2UUdS2Rg9q//eaAlmcD0D9H
BXsDcbfZvx8+hDohMtA/4uBVp27u2L+I5cnzJGXQPzmnBRmKKNi/ON1RwnKc
0D9MWIpYw2XXvy4lHKYK2NA/G/TjZRqm1r9svSif7BfRP6Z6EkGP6dW/8KV3
rRhc0T/v6xXqITDVv7veCNGOpNE/80fuYNJ51L/NZ9wJT/HRP7OOm6WgxtO/
JkHyV1lC0j8uwB24jBbTv8ZqSrutl9I/Z9x0mJZp0r+u5OQzTPHSP1vjoEa+
v9G/3K7BwTRP0z8L1aHCAxnRv1DJ4GRnsdM/d7F3DGd10L8MNEId5BfUPz7x
REjQqc+/Du/l6qqC1D8HVUQTDm/Ov1j6y8278dQ/QG+0ow==
          "]], 
         {RGBColor[0.471412, 0.108766, 0.527016], ArrowBox[CompressedData["
1:eJwdkQssFHAcx49ZWh7hJBVtJhsVVi5v+xVGRSx1OdVVQmoZdjfPOww1MW/a
zONI4xZOHtdK5OdNRROdEDl353GcKz20lZL//bb/fvvv///9ft/v52d2Myog
TJ1CodhtH5I16Z5U3ah3yPj9dqR9/QOcyV1LyHAeQTn9R79RmAjUK05yXbWH
sVvt+nj7jAhoqW77rWVvUPxXa6OOMQGzzrILQT2v0fPsH2vZ5ARQ3tCsumuH
cH3xKCec+RFKbWxLQwsGUTZeNUtb/AhPb4/XeqQN4EH9QLovexJc4s38ryX0
YyXPXyLQmAI35r4iYWwf3uJm3QsqnYK2ve0sr8RejK3TdPWnTUMDf4eSeq8H
hy0Hd+aNTYOxzqaGaXE33vk1tGIc8wn+eJc9D67rwnNGOhLFgRloahrS6stB
jLtfpNw1OAOB3MY5l/FXKPe8qseOnYX1b0srhy06sPpiuLfF4c/AMYyxLkh/
idVCYZGZ5DP8ENP5kcoXuBzq+TOcNwehjCxGb9hzfHlcy55rKwZMNDiVJ3+G
h67s4coLxKB1WnljLEGILfVdw5wNMXh1mb7INmrFkEM6lnbMeWBLq7w6sRkd
+n/n7B6Yh/zmOO3wmCa0zc38p3dMAs6qfTSiT0pbggNPAvYq/g2YVZK1laYj
BQMXwvsJKqY2874nS2FUxZePbA+9I5nfpBCp4lmDJqK+UY/bMlhT8XuM8tz9
qeZiGfipeD3C6Wh9V8vLC2DVTPhU4mriE7WAiQWI+E54lKO5QPK+6uIisOaJ
/xJM0nzVYChaBCcO8fsQNzMdCwWBS9Cj8leEFTR62t2ZJdBtIX7yMUSTmuQX
sgwneER/Nvqos9IuKZbhgy3Rm4EMC1ZhepwcfhoTfemYEU0ViDRWwL6V6EnB
aSl9zLd4BTKkZH48nk9xUpdbrMJ8D5nHxlX3Tte6tlWoqSb9I5BvI0vN91cA
y5T0C8EH7vXvy5YUwFOQegZmJ1OPDqeugUJI/vuiUGJSYHZQCQL9S9vvjrgV
OUgp71DCFz65G2OkOZXjwvwCSczJhubg1x0UVXyF/4/7pfE=
           "]]}}, 
        {RGBColor[0.513417, 0.72992, 0.440682], Thickness[Large], 
         LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAAVVEEw5v7r9h6S8378bTP3K4qA6I
0+2/EhasRttg0z9DlAFomjjtv/6Q+ecj+dI/c+hOH0We7L8mWhgbyY/SPwG1
kDSIBOy/iXEI4Mok0j/u+canY2vrvynXyTYpuNE/OrfxeNfS6r8Fi1wf5EnR
P+PsEKjjOuq/G43AmfvZ0D/tmiQ1iKPpv3Dd9aVvaNA/VsEsIMUM6b/99/iH
gOrPPx1gKWmadui/kdGo59oAzz9BdxoQCOHnv55H+2ruE84/xQYAFQ5M578j
WvARuyPNP6kO2nest+a/HwmI3EAwzD/pjqg44yPmv5JUwsp/Ocs/iodrV7KQ
5b99PJ/cdz/KP4n4ItQZ/uS/4MAeEilCyT/o4c6uGWzkv7rhQGuTQcg/pUNv
57Ha478PnwXotj3HP8EdBH7iSeO/2fhsiJM2xj87cI1yq7nivxrvdkwpLMU/
FDsLxQwq4r/UgSM0eB7EP0x+fXUGm+G/A7FyP4ANwz/hOeSDmAzhv6p8ZG5B
+cE/120/8MJ+4L/K5PjAu+HAP1Y0HnUL49+/w9Jfbt6Nvz+5fabFwcnev+AU
E6K3Ub0/3LcX0qix3b/sjwsdAw+7P73icZrAmty/6kNJ38DFuD9b/rQeCYXb
v9cwzOjwdbY/tQrhXoJw2r+xVpQ5kx+0P84H9losXdm/ebWh0afCsT+k9fMS
B0vYv2aa6GFdvq4/OdTahhI617+2OxivT+qpP4mjqrZOKta/4E7SiiYJpT+b
Y2OiuxvVv/zTFvXhGqA/ZxQFSlkO1L/MlcvbAz+WP/G1j60nAtO/wM781Blc
iD84SAPNJvfRv4DlMLL4FmA/PctfqFbt0L+IlLpBC4WAv/19Sn9uyc+/fM3r
OiGikr8BR6clkbrNv+Bs5bfzG52/ffHVQxWuy79KFOWL/tejv3N91tn6o8m/
TABNrR4vqb/i6qjnQZzHv3B6KkBak66/zjlNbeqWxb9bwT6iWAKyvzRqw2r0
k8O/jAwj3ZHBtL8XfAvgX5PBv84ewtBYh7e/5t5Kmlkqv78g+Bt9rVO6v5SI
ImS2Mru/hZgw4o8mvb869Z0d1j+3v/v//////7+/1PDAdg==
          "]], 
         {RGBColor[0.857359, 0.131106, 0.132128], ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAOvWdHdY/t7/7//////+/v9Ykvca4
UbO/QBdF6/5vwb/MLgC/vNCuvwyS57JE48K/3JnNz40Hp79gcOdW0VnEv6gV
xX/Jj56/PLJE16TTxb/wBvw8BkeOv6JX/zO/UMe/AHQBHcLbKj+OYBdtINHI
v4D6xdDM944/Ac2MgshUyr/o6/yNCa+eP/+cX3S328u/YOeDepDnpj+F0I9C
7WXNv9zSwU4Wbq4/kmcd7Wnzzr82HNwhi/WyPxUxBLoWQtC/CoyzLEivtj8l
YKjrGwzRv+g450dCZLo/+UB7i8TX0b/NIndzeRS+P5HTfJkQpdK/4KSx1/bf
wD/uF60VAHTTv9zW1X1Ps8I/Dg4MAJNE1L9gJyisRoTEP/O1mVjJFtW/aJao
YtxSxj+cD1Yfo+rVv+4jV6EQH8g/BhtBVCDA1r//zzNo4+jJPzfYWvdAl9e/
lpo+t1Swyz8uR6MIBXDYv7CDd45kdc0/52caiGxK2b9Qi97tEjjPP2Q6wHV3
Jtq/u9i56i980D+nvpTRJQTbvxB7m6IlW9E/rvSXm3fj27+oLJSe6jjSP3jc
ydNsxNy/ge2j3n4V0z8Hdip6Bafdv5+9ymLi8NM/WsG5jkGL3r/+nAgrFcvU
P3G+dxEhcd+/oItdNxek1T+nNjIBUizgv4WJyYfoe9Y/9ua/MOWg4L+olkwc
iVLXPyfwZBdKFuG/EbPm9Pgn2D87UiG1gIzhv7zelxE4/Ng/MA31CYkD4r+r
GWByRs/ZPwgh4BVje+K/22M/FySh2j/DjeLYDvTiv0+9NQDRcds/YFP8Uoxt
478EJkMtTUHcP95xLYTb5+O//J1nnpgP3T8+6XVs/GLkvzclo1Oz3N0/grnV
C+/e5L+0u/VMnajeP6biTGKzW+W/dGFfilZz3z+sZNtvSdnlvzsL8IVvHuA/
lj+BNLFX5r9c7btom4LgP2BzPrDq1ua/IFeT7S7m4D8NABPj9Vbnv4VIdhQq
SeE/nOX+zNLX57+LwWTdjKvhPw0kAm6BWei/MsJeSFcN4j9guxzGAdzov3pK
ZFWJbuI/lqtO1VNf6b9kWnUEI8/iP670l5t34+m/fSi+WQ==
           "]]}}, 
        {RGBColor[0.513417, 0.72992, 0.440682], Thickness[Large], 
         LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAAVVEEw5v7r9h6S8378bTP3K1npd+
1O2/EhasRttg0z9BiNmLdDztv/6Q+ecj+dI/bc307++m7L8mWhgbyY/SP/WE
8MPwE+y/iXEI4Mok0j/crswHd4PrvynXyTYpuNE/IEuJu4L16r8Fi1wf5EnR
P8FZJt8Tauq/G43AmfvZ0D/B2qNyKuHpv3Dd9aVvaNA/Hs4BdsZa6b/99/iH
gOrPP9czQOnn1ui/kdGo59oAzz/tC1/MjlXov59H+2ruE84/YVZeH7vW578j
WvARuyPNPzMTPuJsWue/IAmI3EAwzD9hQv4UpODmv5JUwsp/Ocs/7eOet2Bp
5r9+PJ/cdz/KP9f3H8qi9OW/4cAeEilCyT8efoFMaoLlv7zhQGuTQcg/w3bD
PrcS5b8QnwXotj3HP8Xh5aCJpeS/2vhsiJM2xj8kv+hy4TrkvxzvdkwpLMU/
4A7MtL7S47/WgSM0eB7EP/rQj2YhbeO/BbFyP4ANwz9wBTSICQrjv6x8ZG5B
+cE/Ray4GXep4r/N5PjAu+HAP3fFHRtqS+K/ydJfbt6Nvz8FUWOM4u/hv+YU
E6K3Ub0/8U6JbeCW4b/0jwsdAw+7Pzy/j75jQOG/8UNJ38DFuD/joXZ/bOzg
v98wzOjwdbY/5vY9sPqa4L+5VpQ5kx+0P0i+5VAOTOC/grWh0afCsT8P8NvC
Tv/fv3ia6GFdvq4/SUitw4tr37/MOxivT+qpPzyFP6TT3N6/9k7SiiYJpT/s
ppJkJlPevxLUFvXhGqA/Vq2mBITO3b8AlsvbAz+WP3qYe4TsTt2/KM/81Blc
iD9ZaBHkX9Tcv0DnMLL4FmA/8hxoI95e3L8YlLpBC4WAv0a2f0Jn7tu/PM3r
OiGikr9WNFhB+4Lbv6Bs5bfzG52/IJfxH5oc278qFOWL/tejv6TeS95Du9q/
KABNrR4vqb/jCmd8+F7av0x6KkBak66/3RtD+rcH2r9HwT6iWAKyv5ER4FeC
tdm/eAwj3ZHBtL8A7D2VV2jZv7gewtBYh7e/Kqtcsjcg2b8K+Bt9rVO6vw5P
PK8i3di/bZgw4o8mvb+t19yLGJ/Yv+P//////7+/vZDHig==
          "]], 
         {RGBColor[0.266122, 0.486664, 0.802529], ArrowBox[CompressedData["
1:eJwdkWtMk2cAhUuBWCcoihSGEMHb1DA3gZltOBEpDgkh2nZAwSipOMUUAaGD
wFiwmqVIvYELgigIoiQKEVGREjmIeOlmu9ZS3q8XoDdoC7iyzE6ZzA53kpPn
x/n3nHB+HvsgnUajRc33A9uJoSqokYLF/SHAgoRtiR9/TyE6MGHqfd4jhNRm
WddEUqBV2+6wLAOYlsdnxXhS4OTbUlW8QQgdtt69WoJNd1jkmvoJpI7kN+K7
BDVp7ijsfgap4tiy/gsEFVmBuWGq5yi6yPOllxL8+UIies79FZM7Pewp2QTO
hv1F3frfEKTLab7OIShUnt3x6qAcXuyarQsTCUSHQl/l/KVAW0f5/R/iCHw2
e0mZO5RgzKz3c8YShGS1Ta3wUWEV85ddx+IJZraXVQ0SFd6GDfBpyQRi9Y91
fq0vIfa7nVnHI7AGtgfQitRQW/dFfyMg8FzsQ6thDYG6rJieOkFgv1eXLmNq
cDHGfbK1iaB6SerKlkkNlvXNzOUMELwLjuOG9Q8jcW0L9ysHQQSV8WZ7LcGX
BUyJfwCFVd+2MLzz571eTWp5m0BBdyhYLEjSIrE7tt5eRiH9635h8Todcjpd
+Zb7FOr7LqjWeunBOif4xPE3habXtZeKLXroONcezsZoccQgUwsGDdg41xAV
8LMWs8KNpd43RrClMrUyRqNF8qOeM3FVo/j3H2WfYIMOB/qKl4YXjOGnPT5D
bSIdGrdEerAjjHggYcicRh3+mMDn401GtN96cjmOpcfKmezAJKYJ+zrj2Vdu
6RHFDr9XITFBVi+a8A42YL2va2GlpxnOw6KMEokB7jBjwIEyM5Qr4jtcniOQ
njZTi1+bIegaNJVXjCCNM8eW5Frw+LMFLj/6KDQFn57U2ywYOveRvUM8ii8c
QsEc34qmYYU0bfkYSno0i5yjVqzz4OYuah1DgzmZ35U5jmiG3J0dakRztj5v
l3YckSLlA9kRIySxx6M70yZw+uhdU5fUiO8Kt92eHJ7ATnlJ6WpfE+g0f4sr
1YbMK6EngvgmnB9//+IlsUFhan5X3TO/r6EfPc6zo7GWYa32N4PbG/LUw2CH
HClbg/LNOHUzRcPZ7wAvQ+i1+nczmv//w4H/AMJS1tE=
           "]]}}, 
        {RGBColor[0.471412, 0.108766, 0.527016], Thickness[Large], 
         LineBox[CompressedData["
1:eJwdkQkwFGAUx9c5jpRqNolRJhXVqqxCyavJrrI5y7gia8bUjMlt0MTQWHLU
oKnWliT35Fhkx/2sjqEoV60s0S5h1617GPn2zXzz5pvve+/9/79nHBjqHqRM
oVDoG4fkeL+hihp2VwtFEYtQFlOARn2bMY9CVXG7sgAmrGcbd3NslX7Ys9ww
D07a71gFHmeRXU7zllLnQV2JvDtjqtuxCpPIOVj9+1ItYLsXHh35oi/onQX1
v10b/9noe+HA80fms+AfJUg34F5DrVx9RlemHJQW8jfqQ9D2PV+ZJZdBnOW5
aI/ESFwamx02dJTBriXSLxZNRT09duUz4E/bt7XaOB4l/EtivsYMFP8g/ZPQ
6EaCSuT1aQjNSbyo45WMX7WdmZzOKdAJI/NScffdjsIp0ym4dTdYvZuagZOL
YgNe2ncQysj8e3jYilf1RDYJc6/MxJpB2fjn6prvAmsS2BZEz310CFYzyamc
gPYzhuYRTQ9wp3etOmfLBGgtEH1cDDZTVe0Ml8LJ0zqrRhk8PDvyz8B3UAKe
h4jePOSFP3S2s5LAlcZVe11RPkbPfH4czvsGJStEfwEOnmtR+bk2Djk+0ap7
Pz5HQSIzpZM9DlHZxE8RWp6RM4cyxsCRK98bsFiMyvb3BXj5K+wIJf5KUbSJ
4+tgNAqD1G+J4FKONbz246HTYkjLJH5fYNYcg2FVNwwWAx4GQnkFRqlR0/MT
vkDfDPFfhQESmmqZ4xDQp4vilgP56JqcVeeqJ4IYBY8aZMhtubkTn6AuxT/5
U0gtMvTotbdrB2HuGOFTh0yNSKVNSQOw542oMi33JTq1rXKOu/aDi4JXPfrY
9ML67j6IKdT9tVkqwKHlYb/+8Y/Amyf8GlBjrazk++0eqDfW9AtiNeL5bC2f
U/vfQ7ct4dmEWdXrMb3vOmEUhJLM/maUeN6hlIS9BflBwrcV7dKLVpr1XsPy
mnUqJ7YNS5mX3ba1C2GlgfBGPLHrCN19oA1+06yLS5+2o3XzCJdi1gQRCv5C
dA6rGTiSVA+yCvqOaN0OvGlTKR0T8+GqYh8dGEt7lm0cUQb/ARTpniY=
          "]], 
         {RGBColor[0.266122, 0.486664, 0.802529], ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAX1p1BCPPwr94LaCRIXKoP9L7jhar
kcO/WCBoDApjnj9CkYBMDVjEvzBsWJSo14c/sBpKpkkixb9Aj82NeAV6vxmY
6yNg8MW/WK12PI3kmL+BCWXFUMLGv0TTboDcnqW/5m62ihuYx7+sJ1S4cMau
v0bI33PAcci/6qn1ooH0s7+lFeGAP0/Jv/IrmhRKg7i/AVe6sZgwyr/gmRex
kQ+9v1uMawbMFcu/3vk2PKzMwL+ytfR+2f7Lv8CcTjVPEMO/BtNVG8HrzL+X
tdLDsVLFv1fkjtuC3M2/Y0TD59OTx7+l6Z+/HtHOvyJJIKG108m/8eKIx5TJ
z7/Ww+nvVhLMvx3opHnyYtC/frQf1LdPzr/AWHGhB+PQv44N4SbsRdC/YsMp
2wll0b/Ye2guXGPRvwAozib56NG/GCWmACyA0r+fhl6E1W7Sv1YJmp1bnNO/
Pd/a85720r+PKEQF67fUv9kxQ3VVgNO/wIKkN9rS1b9zfpcI+QvUv+0XuzQp
7da/DcXXrYmZ1L8V6If81wbYv6UFBGUHKdW/NvMKj+Yf2b88QBwucrrVv1I5
ROxUONq/0HQgCcpN1r9oujMUI1Dbv2WjEPYO49a/eXbZBlFn3L/4y+z0QHrX
v4VtNcTefd2/ie60BWAT2L+Jn0dMzJPevxcLaShsrti/iQwQnxmp37+jIQld
ZUvZv0BaR17jXuC/MDKVo0vq2b+6y2HS6ejgv7s8Dfwei9q/sFrXK6By4b9F
QXFm3y3bvyUHqGoG/OG/zT/B4ozS278X0dOOHIXiv1U4/XAnedy/hrhamOIN
47/bKiURryHdv3K9PIdYluO/Xxc5wyPM3b/b33lbfh7kv+P9OIeFeN6/wR8S
FVSm5L9k3iRd1CbfvyR9BbTZLeW/5Lj8RBDX378F+FM4D7Xlv7JGYJ+cROC/
Y5D9ofQ75r/wLTilp57gvzxGAvGJwua/LhIGNKn54L+UGWIlz0jnv2vzyUuh
VeG/aQodP8TO57+n0YPsj7Lhv7wYMz5pVOi/46wzFnUQ4r+LRKQivtnovx6F
2chQb+K/2I1w7MJe6b9ZWnUEI8/iv6L0l5t34+m/dF3K0w==
           "]]}}, 
        {RGBColor[0.857359, 0.131106, 0.132128], Thickness[Large], 
         LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAZFp1BCPP4j+u9Jebd+Ppv9i/TjwY
cOI/lqtO1VNf6b+qlwjkkhPiP2C7HMYB3Oi/2eGi+5K54T8NJAJugVnov2We
HYMYYuE/nOX+zNLX579QzXh6Iw3hPw0AE+P1Vue/lm604bO64D9gcz6w6tbm
vzqC0LjJauA/lD+BNLFX5r89CM3/ZB3gP61k229J2eW/OAFUbQul3z+m4kxi
s1vlv7HWzrpXFN8/grnVC+/e5L/mkArorojePz/pdWz8YuS/1C8H9RAC3j/e
cS2E2+fjv32zxOF9gN0/YFP8Uoxt47/hG0Ou9QPdP8ON4tgO9OK//2iCWniM
3D8JIeAVY3viv9iaguYFGtw/MA31CYkD4r9tsUNSnqzbPztSIbWAjOG/vazF
nUFE2z8o8GQXShbhv8eMCMnv4No/9+a/MOWg4L+MUQzUqILaP6c2MgFSLOC/
CvvQvmwp2j9zvncRIXHfv0OJVok71dk/W8G5jkGL3r82/JwzFYbZPwl2KnoF
p92/5lOkvfk72T963MnTbMTcv1CQbCfp9tg/sPSXm3fj2790sfVw47bYP6q+
lNElBNu/U7c/muh72D9nOsB1dybav+2hSqP4Rdg/6mcaiGxK2b9CcRaMExXY
PzFHowgFcNi/USWjVDnp1z872Fr3QJfXvxy+8Pxpwtc/ChtBVCDA1r+gO/+E
paDXP50PVh+j6tW/4J3O7OuD1z/1tZlYyRbVv9rkXjQ9bNc/Dw4MAJNE1L+Q
ELBbmVnXP/IXrRUAdNO/ACHCYgBM1z+V03yZEKXSvyoWlUlyQ9c//kB7i8TX
0b8P8CgQ7z/XPypgqOsbDNG/r659tnZB1z8bMQS6FkLQvwpSkzwJSNc/nmcd
7Wnzzr8f2mmiplPXP5TQj0LtZc2/8EYB6E5k1z8QnV90t9vLv3qYWQ0Cetc/
Es2MgshUyr/AznISwJTXP5xgF20g0ci/wOlM94i01z+wV/8zv1DHv3rp57tc
2dc/TLJE16TTxb/wzUNgOwPYP3Bw51bRWcS/IJdg5CQy2D8ekueyROPCvwpF
PkgZZtg/UhdF6/5vwb+w19yLGJ/YPxAAAAAAAMC/0cq1rA==
          "]], 
         {RGBColor[0.863512, 0.670771, 0.236564], ArrowBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAsNfcixif2D8QAAAAAADAvxFPPK8i
3dg/rJgw4o8mvb8sq1yyNyDZP0j4G32tU7q/Auw9lVdo2T/3HsLQWIe3v5IR
4FeCtdk/tQwj3ZHBtL/eG0P6twfaP4PBPqJYArK/5ApnfPhe2j/IeipAWpOu
v6TeS95Du9o/ugBNrR4vqb8gl/EfmhzbP7wU5Yv+16O/VjRYQfuC2z/AbeW3
8xudv0a2f0Jn7ts/UM7rOiGikr/yHGgj3l7cP0CWukELhYC/WWgR5F/U3D+A
3jCy+BZgP3qYe4TsTt0/8Mz81BlciD9WraYEhM7dP9yUy9sDP5Y/7KaSZCZT
3j+A0xb14RqgPz2FP6TT3N4/bk7SiiYJpT9KSK3Di2vfPzw7GK9P6qk/EPDb
wk7/3z/qmehhXb6uP0i+5VAOTOA/MbWh0afCsT/m9j2w+prgP2dWlDmTH7Q/
4qF2f2zs4D+LMMzo8HW2Pzq/j75jQOE/nkNJ38DFuD/wTolt4JbhP56PCx0D
D7s/BFFjjOLv4T+QFBOit1G9P3TFHRtqS+I/cdJfbt6Nvz9CrLgZd6niP6Dk
+MC74cA/bgU0iAkK4z9/fGRuQfnBP/fQj2YhbeM/1rByP4ANwz/eDsy0vtLj
P6SBIzR4HsQ/Ir/ocuE65D/r7nZMKSzFP8Ph5aCJpeQ/qPhsiJM2xj+/dsM+
txLlP9qeBei2Pcc/G36BTGqC5T+H4UBrk0HIP9T3H8qi9OU/q8AeEilCyT/r
4563YGnmP0c8n9x3P8o/XkL+FKTg5j9aVMLKfznLPzATPuJsWuc/5wiI3EAw
zD9eVl4fu9bnP+lZ8BG7I80/6gtfzI5V6D9kR/tq7hPOP9MzQOnn1ug/VdGo
59oAzz8azgF2xlrpP7/3+IeA6s8/vtqjcirh6T9Q3fWlb2jQP8BZJt8Tauo/
/YzAmfvZ0D8cS4m7gvXqP+SKXB/kSdE/2a7MB3eD6z8I18k2KbjRP/KE8MPw
E+w/Z3EI4Mok0j9pzfTv76bsPwNaGBvJj9I/PYjZi3Q87T/akPnnI/nSP261
npd+1O0/7RWsRttg0z/9VEQTDm/uPzzpLzfvxtM/662u6g==
           "]]}}, 
        {RGBColor[0.863512, 0.670771, 0.236564], Thickness[Large], 
         LineBox[CompressedData["
1:eJwtk30sFGAcx495L++bl0qplS1sGstV4qsbhZZezoWVTKKx6lREulmpthDn
JanuD+elc3mbl0JKW92Lc5zDJWF3Xs/LpRKyrpLqmWd79ttvz/P8ft/v57dn
61nmiRhdCoXi8W//jyshftZmzC/YP+tG/SpWAKzaES/FZ2Sf4nvWnVUgvcyu
Oo76GacrNBXJFAVE0vSUIs4c+F3Lmf7cPhgtzPmJVj/hcmfXiD2tD0H2oZaL
0Z/QUnaBt6TuxX3ft0pHiQY3GB9U/Vm9kJ93qQx21aB11DijzaMXVuzCa6zc
WaT4Gz6tUvaA0bRKq1yaQePtbnduRg+KlHHmH8NmEM+JdOdQezCk935Yv20a
3vZJh/bK5djk6sP32DqN4to3poEeckTS+YlRd6ewssxpjuF0oyTV6gB7Vg36
wnp/tmE3JktYpm1H1CjnWjaJkmVw6pga1NRPYl6n0sR4rgtx88d4djaT8LT5
QAs/14Ua21dXDqZOIFlZeKZptBPzPjuQqBpHfehshGNUJ9xj2etKaeNQ3+nx
LVJLkZStHZDzxmAdc9hw4yUpmp9Hl6+YjMHrR3h91c8OaIdlCS7MUUT4/PYJ
zOpAskFCagNvBNep7nWLWzrwm8xDhdyJX3pVLRLcIvyV4NLCvZkMCQwI72FU
hQSF+y63I4vwHUKdvTxsM6cdloTnIOrypr2M/drxkPD7CP7rAl2db2JsILwG
wHmiqNYvFaOY8OnHPZeKfbahYmwnPN4jgWlWvdtCDD7xr8DxWGOdKJlozW8f
3Cwe7X2cI0IT8dcL/YutDBVdtOZHjn5WAmOXgwg3iX4ZitG6h60RIoPolSL6
RdHqz1dC5BN9EmxTGVVezROijOgRYeil6R5tvBDVpL8A2QG8Z1kBwjWeb7Ev
s++Ps7MQaaR+G8bS8qkD5kI8IPVakO40Rc/VCsAj7xvhcEtGPzktAIvcr0FD
TgB156AA5eS8DLSjoX+M5ALkkrwA0nda/neJABSyuK+Dyf8Q4C9H75oZ
          "]], 
         {RGBColor[0.513417, 0.72992, 0.440682], ArrowBox[CompressedData["
1:eJwtk3lMElAcx5VZHqWpLZW1ytpq89hympG5+BlhWS1rGRFr1TybzsJ12Zzd
WalLPNa08A9SQlIzLbMy7VdxCAgCYikZaF4IaofZYZfVi7e9vb29936/7/fz
3VuawN2ZTHFwcAj7O/+t/4egJda6kvZeLgGd75MjG7NKUP1iWvxZIYFnZF+J
zO3s3y5aCZRX+tWm0u5gU0EMLcAogRZyfh+XndPE7bZIQGxKndez5xFeWTES
VzgtgWJyvxWtp4tp3fOk0NyYKPzl9hyZeZ2/AwOlcJe8l2BZjOh2fowUhFne
63lWGVoeu6+ZTpMCn9RTYIjZpfpokRSKo56b/BUqPPqgdOb7EynkkvoarIfm
NTybFM7Mzsi6J9LiaHYGK2SRzN5Pj9RDzSxznAzCU3hzKhidGO1ZFnG9QAYN
pL8B01JcHeM1MghWjhhtDV2Yz/WoDfeUg5joeYnCoKq1vmw5LA6mi8OWduPD
G4baWRVyuE709aC8pYTi+FEOPrxrJ7ILjagtskS6MtugiOh9jTqqds9ifhvM
mRxnymZ6Ub1rCyfqSxtcIvpNKGVw1nFZCqCwmPM9uGZsHPzhVPNIAaeInz4U
0ELrPy1Rws9eTUYQtx8v0n/SN+cr7f7eYtI3TkPNdyVkXp3u1oreIj15q/PC
wyq73wH0ztFFlQ6rYJK+HI6ZB7CPbd3nH98OdcT/IApN1/Y39bdD+ocdIj+f
IUzxecXgJKkhgPAYwmWUajfXcTVYbma7t24bRqPAq0mWqbHnNYxXJudG85w7
ICFOfCw+ZwRXfeU/TOZ3wBLCy4I9dU/dN4dpweTU1Tur1YKZ1OObIrRae76j
eJl/IJRP0wGnaYZRPTWK+gsdoYJcHSwgPK1YFu18q8akg66DQdWxwTZ80++a
2xqmh0LC14blrFfml/l62EZle31KHENjZbpoalhv5z2GJe3qPiqjE5Sq8ydL
+ePYrv6SFy3otPOfwLNVtqpMBwNsyK7rizRM4L294tX1CQZwJHm8w3jyPwzw
B7M3tYU=
           "]]}}, 
        {RGBColor[0.863512, 0.670771, 0.236564], Thickness[Large], 
         LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA/VREEw5v7j886S8378bTP+62I1MD
1O0/8pZkCNJj0z8+ju15hzrtP/CU2+7+BNM/7Nqhh5qi7D8145TqdarSP/ic
QHw8DOw/wIGQ+zZU0j9i1MlXbXfrP5NwziFCAtI/KYE9Gi3k6j+sr05dl7TR
P0+jm8N7Uuo/DD8RrjZr0T/UOuRTWcLpP7QeFhQgJtE/tkcXy8Uz6T+iTl2P
U+XQP/bJNCnBpug/187mH9Go0D+UwTxuSxvoP1OfssWYcNA/kC4vmmSR5z8W
wMCAqjzQP+sQDK0MCec/IDERUQYN0D+iaNOmQ4LmP+DkR21Yw88/uTWFhwn9
5T8PCPJiOHXPPy14IU9eeeU/zcsgg6wvzz8AMKj9QffkPxgw1M208s4/Ml0Z
k7R25D/yNAxDUb7OP8H/dA+29+M/WdrI4oGSzj+tF7tyRnrjP04gCq1Gb84/
+KTrvGX+4j/QBtChn1TOP6CnBu4ThOI/4I0awYxCzj+mHwwGUQviP3616QoO
Oc4/Cw38BB2U4T+qfT1/IzjOP85v1up3HuE/ZOYVHs0/zj/vR5u3YargP6zv
cucKUM4/bpVKa9o34D+AmVTb3GjOP5WwyAvEjd8/5OO6+UKKzj8MIdEO8a7e
P9bOpUI9tM4/Pnyu3zvT3T9UWhW2y+bOPyzCYH6k+tw/YIYJVO4hzz/W8ufq
KiXcP/xSghylZc8/PQ5EJc9S2z8kwH8P8LHPP18UdS2Rg9o/7eaAlmcD0D9A
BXsDcbfZPxA+hDohMtA/2+BVp27u2D955cnzJGXQPzKnBRmKKNg/Kd1RwnKc
0D9FWIpYw2XXPyAlHKYK2NA/FPTjZRqm1j9evSif7BfRP596EkGP6dU/46V3
rRhc0T/p6xXqITDVP67eCNGOpNE/7EfuYNJ51D/BZ9wJT/HRP6yOm6WgxtM/
GkHyV1lC0j8nwB24jBbTP7tqSrutl9I/X9x0mJZp0j+j5OQzTPHSP1LjoEa+
v9E/0a7BwTRP0z8D1aHCAxnRP0bJ4GRnsdM/b7F3DGd10D8CNEId5BfUPy7x
REjQqc8/BO/l6qqC1D/3VEQTDm/OP0/6y8278dQ/AqqeEg==
          "]], 
         {RGBColor[0.471412, 0.108766, 0.527016], ArrowBox[CompressedData["
1:eJwdkQ0s1HEYx49ZWig6kUqbpElepgxx7VtYelFXcujlijC2mox5P+yoiXmJ
68WiS6uYl7OzriHveY9a0XnLy3VvuheXXm3S2+//bL89++33e57n+/08Npev
BUbp02i0ff8PyctBfvT1196AuTL8uvXLe3gULabmer2GhPW9zyJKjC8VBzkM
4xE0610aa50RYwf3wBYn+StM/Db6WRs6jmEv+ZmzL4fAOPbLST45Du2Q2+7u
qkGolY7p0ewJ5Dq73I8sGcDsWOWsm3ICFTFjVb7Z/bA0C2EFJExiV4oN82Jq
H8r4TKnAYAq72VY8UVIvwjj518/en8ITy9b4w2k9iKs1ZDDdpnGveo2Ofv0l
+u0H1haPTkPPZNXA+nY3IpcH1ZsTP0DhX94UXtuFIxYmUu3WGXCFg0a9hZ1I
uMHTrRuYgQOnYd57rB0KvwumCUmz6P66oHawawM/KNrfzmEOR80TnUpyXoAv
EvFspHPokbCqY3XNUET6/Yjmz8M1ND+0J6oJzXuN3DkuEuSnbTxUrHqOHec3
cVQlErz314WNpoogrOsaSf8pwYYu6+YCi2cI32liv4/9EV6yysMdnY1w71sp
3ND/EcGNycbRiUI4F+X9MXWVopfaRwOOZbWkevClaKf41yOvLP9vtokMdyne
NdBMrRZ/y5ThNMW3GvG+pnvyvsqwmEx4PsU2ce9b3xg5Yih+j6Eq2sK1lcjR
b0x4PcJUnBnD/pwCdIrPQ2jSavQCxxU4RfGogK1A+q4ySInTlP8yZBi215uL
lTCl/N7BrzzPUkHIAnidxB8PD9xY2VdmFjApJH5uIcKQnnEy4hM6yon+AhzX
j88O1n7CCSeiNxchdvGlOckqhFkQfTnIjaMLxAZqLAmInixMy1ijAbfV2DVH
5qfgVNZ+fZWdBhHtZF4CND4djNoWDa7cI/2votpZzr3F1GLVjPSLwE2funfl
C1p4iEl9KAoy6Y4j3EXsvEH+B0Ak3VZis10HeyF598Tf2AFaRZsOSity34xY
W3q6N/szMtiT9Y3hQ200KpbwD5AfjCw=
           "]]}}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        {RGBColor[0.513417, 0.72992, 0.440682], InsetBox[
          StyleBox[
           FrameBox[
            TagBox[
             TooltipBox["Alice",
              StyleBox[
               TemplateBox[{
                 StyleBox["\"Alice\"", Italic, Bold, StripOnInput -> False], 
                 "\": \"", 
                 "\"Alice: Initiates a reversible transaction by emitting a \
French Token.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
              TooltipStyle->"TextStyling"],
             Annotation[#, 
              Style[
               Row[{
                 Style["Alice", Italic, Bold], ": ", 
                 "Alice: Initiates a reversible transaction by emitting a \
French Token."}], "Subsubsection"], "Tooltip"]& ],
            FrameStyle->None,
            StripOnInput->False],
           StripOnInput->False,
           
           FontSize->Scaled[
            0.03]], {-0.9510565162951538, 0.3090169943749484}, {
          Right, Center}, Automatic, {
          0.7603177925108145, -0.2997085997685572}], 
         {PointSize[Large], 
          PointBox[{-0.9510565162951538, 0.3090169943749484}]}}, 
        {RGBColor[0.471412, 0.108766, 0.527016], InsetBox[
          StyleBox[
           FrameBox[
            TagBox[
             TooltipBox["Bob",
              StyleBox[
               TemplateBox[{
                 StyleBox["\"Bob\"", Italic, Bold, StripOnInput -> False], 
                 "\": \"", 
                 "\"Bob: Responds to Alice and manages the corresponding \
German Token.\""}, "RowDefault"], "Subsubsection", StripOnInput -> False],
              TooltipStyle->"TextStyling"],
             Annotation[#, 
              Style[
               Row[{
                 Style["Bob", Italic, Bold], ": ", 
                 "Bob: Responds to Alice and manages the corresponding German \
Token."}], "Subsubsection"], "Tooltip"]& ],
            FrameStyle->None,
            StripOnInput->False],
           StripOnInput->False,
           FontSize->Scaled[0.03]], {-7.044813998280222*^-16, 1.}, {
          Right, Center}, Automatic, {
          7.044813998280222*^-16, -0.7853981633974483}], 
         {PointSize[Large], PointBox[{-7.044813998280222*^-16, 1.}]}}, 
        {RGBColor[0.857359, 0.131106, 0.132128], InsetBox[
          StyleBox[
           FrameBox[
            TagBox[
             TooltipBox["Charlie",
              StyleBox[
               TemplateBox[{
                 StyleBox["\"Charlie\"", Italic, Bold, StripOnInput -> False],
                  "\": \"", 
                 "\"Charlie (Captain, Coordinator): Observes the Alice-Bob \
interaction and ensures token conservation across the link, enabling the \
TIKTYKTIK property ('I Know That You Know That I Know').\""}, "RowDefault"], 
               "Subsubsection", StripOnInput -> False],
              TooltipStyle->"TextStyling"],
             Annotation[#, 
              Style[
               Row[{
                 Style["Charlie", Italic, Bold], ": ", 
                 "Charlie (Captain, Coordinator): Observes the Alice-Bob \
interaction and ensures token conservation across the link, enabling the \
TIKTYKTIK property ('I Know That You Know That I Know')."}], "Subsubsection"],
               "Tooltip"]& ],
            FrameStyle->None,
            StripOnInput->False],
           StripOnInput->False,
           
           FontSize->Scaled[
            0.03]], {0.5877852522924738, -0.8090169943749481}, {Left, Center},
           Automatic, {0.5313896516603539, -0.6802149768809216}], 
         {PointSize[Large], 
          PointBox[{0.5877852522924738, -0.8090169943749481}]}}, 
        {RGBColor[0.266122, 0.486664, 0.802529], InsetBox[
          StyleBox[
           FrameBox[
            TagBox[
             TooltipBox["SAWProtocolLink",
              StyleBox[
               TemplateBox[{
                 StyleBox[
                 "\"SAWProtocolLink\"", Italic, Bold, StripOnInput -> False], 
                 "\": \"", 
                 "\"SAWProtocolLink: Manages the stateful, bidirectional \
communication object between two cells, ensuring atomicity.\""}, 
                "RowDefault"], "Subsubsection", StripOnInput -> False],
              TooltipStyle->"TextStyling"],
             Annotation[#, 
              Style[
               Row[{
                 Style["SAWProtocolLink", Italic, Bold], ": ", 
                 "SAWProtocolLink: Manages the stateful, bidirectional \
communication object between two cells, ensuring atomicity."}], 
               "Subsubsection"], "Tooltip"]& ],
            FrameStyle->None,
            StripOnInput->False],
           StripOnInput->False,
           
           FontSize->Scaled[
            0.03]], {-0.5877852522924726, -0.8090169943749468}, {
          Right, Center}, Automatic, {0.531389651660353, 0.6802149768809208}], 
         {PointSize[Large], 
          PointBox[{-0.5877852522924726, -0.8090169943749468}]}}, 
        {RGBColor[0.863512, 0.670771, 0.236564], InsetBox[
          StyleBox[
           FrameBox[
            TagBox[
             TooltipBox["ReversibleTransaction",
              StyleBox[
               TemplateBox[{
                 StyleBox[
                 "\"ReversibleTransaction\"", Italic, Bold, StripOnInput -> 
                  False], "\": \"", 
                 "\"ReversibleTransaction: A higher-level construct that uses \
Reversible Subtransactions to guarantee atomicity without resorting to the \
'irreversible smash and restart of Shannon information.'\""}, "RowDefault"], 
               "Subsubsection", StripOnInput -> False],
              TooltipStyle->"TextStyling"],
             Annotation[#, 
              Style[
               Row[{
                 Style["ReversibleTransaction", Italic, Bold], ": ", 
                 "ReversibleTransaction: A higher-level construct that uses \
Reversible Subtransactions to guarantee atomicity without resorting to the \
'irreversible smash and restart of Shannon information.'"}], "Subsubsection"],
               "Tooltip"]& ],
            FrameStyle->None,
            StripOnInput->False],
           StripOnInput->False,
           
           FontSize->Scaled[
            0.03]], {0.9510565162951533, 0.30901699437494634}, {Left, Center},
           Automatic, {0.7603177925108143, 0.29970859976855535`}], 
         {PointSize[Large], 
          PointBox[{0.9510565162951533, 0.30901699437494634`}]}}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->700,
  PlotLabel->FormBox[
    StyleBox[
    "\"N2N Lattice View of Token Dynamics\"", Bold, 16, StripOnInput -> 
     False], TraditionalForm]]], "Output",
 CellChangeTimes->{{3.962966543162438*^9, 3.962966547020443*^9}, 
   3.962966770197075*^9, 3.962974802946138*^9, 3.96297826538267*^9, 
   3.96297834570402*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"82bc4454-2ed8-4a17-9dfe-874ebda81d1a"]
}, Open  ]]
}, Open  ]],

Cell["Resilience to Random Failures", "Affiliation",
 CellChangeTimes->{{3.962959958952446*^9, 3.962959960700286*^9}, {
  3.9629600386900682`*^9, 3.962960043603222*^9}, {3.962960186227029*^9, 
  3.962960187889864*^9}, {3.962960351648953*^9, 3.962960352735743*^9}, {
  3.962960530757161*^9, 
  3.962960533212352*^9}},ExpressionUUID->"45b74d3a-71f7-4d60-9c21-\
f61043eeaa82"],

Cell["\<\
Lastly, the code simulates random edge failures to directly test network \
survivability. It incrementally removes a certain number of random links from \
each network and checks how many connected components remain. In a perfectly \
resilient network, even with several link failures, most nodes would still be \
in one giant component (i.e. the network stays mostly connected). In a \
fragile network, removing just a couple of key links could break it into \
multiple isolated groups. The simulation results show a clear difference: the \
Clos network quickly fragments as edges are removed, whereas the mesh network \
remains largely connected until many more failures occur. For instance, \
removing 1\[Dash]2 links in the Clos might disconnect some servers entirely \
(e.g. cut the only path from a rack to the rest), raising the number of \
components. In contrast, the mesh typically still has alternate routes after \
a few random cuts, so all nodes remain in one component. Only after several \
links are removed does the mesh start to split into multiple components. This \
aligns with Baran\[CloseCurlyQuote]s survivability criterion: in a \
distributed network, a high fraction of nodes will remain connected as one \
group even under heavy attack, whereas in a hierarchical network a smaller \
amount of damage can isolate nodes into small, ineffective islands \
(https://www.rand.org/pubs/research_memoranda/RM3420.html#:~:text=enemy%\
20attack,are%20considered%20to%20be%20ineffective & \
https://www.rand.org/pubs/research_memoranda/RM3420.html#:~:text=enemy%\
20attack,of%20the%20surviving%20stations%20to). The redundancy level of the \
lattice is much higher, meaning many links would have to fail before \
communication is truly disrupted \
(https://www.rand.org/pubs/research_memoranda/RM3420.html#:~:text=,paramount%\
20interest). By contrast, the Clos has critical cut points. (Think of a \
hub-and-spoke: cut one spoke and that node is lost; the Clos is not that \
extreme, but still has chokepoints like the single uplink from each server \
and limited uplinks from each rack.) \
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.96296054615504*^9, 
  3.962960577798952*^9}},ExpressionUUID->"2628f93b-0356-4133-a106-\
638695b42497"],

Cell[CellGroupData[{

Cell["\<\
This resilience experiment underscores a key trade-off in network design. \
Clos/fat-tree topologies are engineered for capacity and scalability, and \
they do have some fault tolerance (multiple spines, etc.), but they are \
optimized for expected patterns of failure and may not handle worst-case \
random failures as gracefully. Distributed meshes like the N2N lattice take \
the opposite approach: assume links can fail anywhere and ensure the network \
can heal and route around almost any such failure. The result is an extremely \
survivable network \[Dash] one that, as Baran put it, requires an adversary \
(or a disaster) to destroy nearly all nodes or links to completely break it \
(https://www.rand.org/pubs/research_memoranda/RM3420.html#:~:text=We%20will%\
20soon%20be%20living,shown%20that%20highly%20survivable%20system & \
https://www.rand.org/pubs/research_memoranda/RM3420.html#:~:text=destruction%\
20requires%20the%20enemy%20to,shown%20that%20highly%20survivable%20system). \
Such a network can degrade gracefully: performance may drop as links fail, \
but connectivity remains, which is crucial for mission-critical systems.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.96296054615504*^9, 
  3.96296060334645*^9}},ExpressionUUID->"b3b908dc-075f-4c18-a471-\
9cec394f7d69"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cellStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"plotStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"titleStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "24"}], ",", 
     RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}], ",", 
     RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"subtitleStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
     RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}], ",", 
     RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"headerStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
     RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"commentStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "12"}], ",", 
     RowBox[{"FontColor", "\[Rule]", "Gray"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infoPanel", "[", 
    RowBox[{"title_String", ",", "content_List"}], "]"}], ":=", 
   RowBox[{"Framed", "[", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{"content", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"title", ",", "Bold", ",", "14"}], "]"}], ",", 
           "\[SpanFromLeft]"}], "}"}]}], "]"}], ",", 
       RowBox[{"Alignment", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Left", ",", "Center"}], "}"}]}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1.5"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"RoundingRadius", "\[Rule]", "5"}], ",", 
     RowBox[{"Background", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.97", ",", "0.97", ",", "0.97"}], "]"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "LightGray"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Style", "[", 
    RowBox[{
    "\"\<Part 1: The Classical 1976 Ethernet Model\>\"", ",", 
     "subtitleStyle"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Style", "[", 
    RowBox[{
    "\"\<We begin by recreating the seminal model developed by Metcalfe and \
Boggs. This model describes a shared, passive Ether where control is \
distributed among contending stations. Coordination is achieved through \
statistical arbitration. When the Ether is busy, stations defer; when \
multiple stations transmit simultaneously, they collide, abort, and randomly \
reschedule. This model was foundational, but as we will demonstrate, its \
reliance on statistical contention leads to a collapse in efficiency under \
load.\>\"", ",", 
     RowBox[{"Sequence", "@@", "cellStyle"}]}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"acquisitionProbability", "[", "q_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"q", "\[LessEqual]", "1"}], ",", "1", ",", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["1", "q"]}], ")"}], 
      RowBox[{"q", "-", "1"}]]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"meanWaitSlots", "[", "a_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"a", "\[Equal]", "0"}], ",", "\[Infinity]", ",", 
     FractionBox[
      RowBox[{"1", "-", "a"}], "a"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ethernetEfficiency", "[", 
    RowBox[{
    "packetSizeBits_", ",", "channelCapacityBps_", ",", "slotTimeSec_", ",", 
     "qStations_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"acquisitionProbability", "[", "qStations", "]"}]}], ",", 
       RowBox[{"pOC", "=", 
        FractionBox["packetSizeBits", "channelCapacityBps"]}], ",", "w"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"w", "=", 
       RowBox[{"meanWaitSlots", "[", "a", "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"w", "===", "\[Infinity]"}], ",", "0", ",", 
        FractionBox["pOC", 
         RowBox[{"pOC", "+", 
          RowBox[{"w", " ", "slotTimeSec"}]}]]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"efficiency", "=", 
         RowBox[{"ethernetEfficiency", "[", 
          RowBox[{"p", ",", "cap", ",", "t", ",", "q"}], "]"}]}], ",", 
        RowBox[{"a", "=", 
         RowBox[{"acquisitionProbability", "[", "q", "]"}]}], ",", 
        RowBox[{"w", "=", 
         RowBox[{"meanWaitSlots", "[", "a", "]"}]}]}], "}"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Show", "[", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"ethernetEfficiency", "[", 
              RowBox[{"p", ",", "cap", ",", "t", ",", "x"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "1", ",", "256"}], "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "256"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<Q (Number of Contending Stations)\>\"", ",", "Bold"}], 
                 "]"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Efficiency (E)\>\"", ",", "Bold"}], "]"}]}], 
               "}"}]}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<Classical Ethernet Efficiency vs. Contention\>\"", ",", 
                "Bold"}], "]"}]}], ",", 
             RowBox[{"Epilog", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{"q", ",", "efficiency"}], "}"}], "]"}]}], "}"}]}], 
             ",", 
             RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
             RowBox[{"BaseStyle", "\[Rule]", "plotStyle"}]}], "]"}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", "20"}]}], "]"}], ",", 
         RowBox[{"Spacer", "[", "15", "]"}], ",", 
         RowBox[{"infoPanel", "[", 
          RowBox[{"\"\<Metcalfe Model Parameters\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<Packet Size (P)\>\"", ",", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"p", ",", "\"\< bits\>\""}], "}"}], "]"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Ethernet Capacity (C)\>\"", ",", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"NumberForm", "[", 
                   RowBox[{
                    FractionBox["cap", 
                    SuperscriptBox["10", "6"]], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", 
                  "\"\< Mbps\>\""}], "}"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Slot Time (T)\>\"", ",", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"NumberForm", "[", 
                   RowBox[{
                    RowBox[{"t", " ", 
                    SuperscriptBox["10", "6"]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", 
                  "\"\< \[Mu]s (round-trip contention slot)\>\""}], "}"}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Contending Stations (Q)\>\"", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"q", ",", "Bold"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Acquisition Probability (A)\>\"", ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"N", "[", "a", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}]}], "]"}], ",", "Bold", ",",
                  "Red"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Mean Wait Slots (W)\>\"", ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"w", "===", "\[Infinity]"}], ",", 
                   "\"\<\[Infinity]\>\"", ",", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"N", "[", "w", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], "]"}], ",", 
                 "Bold", ",", "Red"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Calculated Efficiency (E)\>\"", ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ToString", "[", 
                   RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"efficiency", " ", "100"}], ",", "0.1"}], "]"}], 
                   "]"}], "<>", "\"\<%\>\""}], ",", "Bold", ",", "Red"}], 
                "]"}]}], "}"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p", ",", "4096", ",", "\"\<Packet Size (P) [bits]\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"512", ",", "1024", ",", "4096"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cap", ",", 
        RowBox[{"3", " ", 
         SuperscriptBox["10", "6"]}], ",", 
        "\"\<Channel Capacity (C) [bps]\>\""}], "}"}], ",", 
      RowBox[{"1", " ", 
       SuperscriptBox["10", "6"]}], ",", 
      RowBox[{"10", " ", 
       SuperscriptBox["10", "6"]}], ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", 
        FractionBox["16", 
         SuperscriptBox["10", "6"]], ",", "\"\<Slot Time (T) [sec]\>\""}], 
       "}"}], ",", 
      FractionBox["1", 
       SuperscriptBox["10", "6"]], ",", 
      FractionBox["50", 
       SuperscriptBox["10", "6"]], ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q", ",", "32", ",", "\"\<Contending Stations (Q)\>\""}], 
       "}"}], ",", "1", ",", "256", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Style", "[", 
    RowBox[{
    "\"\<Part 2: The D\[CapitalAE]D\[CapitalAE]LUS Protocol Model\>\"", ",", 
     "subtitleStyle"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Style", "[", 
    RowBox[{
    "\"\<Now we model the D\[CapitalAE]D\[CapitalAE]LUS protocol on a \
point-to-point link. This architecture escapes the contention-based model \
entirely. The critical insight relates the packet's transmission time to the \
signal's propagation time. When a packet is 'longer than the wire' \
\[LongDash] that is, its transmission time exceeds the round-trip propagation \
delay \[LongDash] the link becomes fully utilized. The sender receives the \
acknowledgment for the head of the packet before the tail of the packet has \
even left its transceiver. This geometric relationship makes reliability \
effectively free under the right regime.\>\"", ",", 
     RowBox[{"Sequence", "@@", "cellStyle"}]}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"daedalusEfficiency", "[", 
    RowBox[{"txTime_", ",", "propTime_"}], "]"}], ":=", 
   RowBox[{"Min", "[", 
    RowBox[{"1", ",", 
     FractionBox["txTime", 
      RowBox[{"2", " ", "propTime"}]]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cLight", "=", 
         RowBox[{"299792458", " ", "0.66"}]}], ",", 
        RowBox[{"txTime", "=", 
         FractionBox["packetSize", "bandwidth"]}], ",", 
        RowBox[{"propTime", "=", 
         FractionBox["linkLength", "cLight"]}], ",", "efficiency"}], "}"}], 
      ",", 
      RowBox[{
       RowBox[{"efficiency", "=", 
        RowBox[{"daedalusEfficiency", "[", 
         RowBox[{"txTime", ",", "propTime"}], "]"}]}], ";", 
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"daedalusEfficiency", "[", 
             RowBox[{
              FractionBox["packetSize", "bandwidth"], ",", 
              FractionBox["x", "cLight"]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "1", ",", "2000"}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "2000"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1.1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Link Length (meters)\>\"", ",", "Bold"}], "]"}], 
               ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Efficiency\>\"", ",", "Bold"}], "]"}]}], "}"}]}],
             ",", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<D\[CapitalAE]D\[CapitalAE]LUS Protocol Efficiency vs. Link \
Length\>\"", ",", "Bold"}], "]"}]}], ",", 
            RowBox[{"Epilog", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Red", ",", 
               RowBox[{"PointSize", "[", "Large", "]"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"{", 
                 RowBox[{"linkLength", ",", "efficiency"}], "}"}], "]"}]}], 
              "}"}]}], ",", 
            RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
            RowBox[{"BaseStyle", "\[Rule]", "plotStyle"}]}], "]"}], ",", 
          RowBox[{"Spacer", "[", "15", "]"}], ",", 
          RowBox[{"infoPanel", "[", 
           RowBox[{
           "\"\<D\[CapitalAE]D\[CapitalAE]LUS Protocol Parameters\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<Packet Size (bits)\>\"", ",", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{"packetSize", ",", "\"\< bits\>\""}], "}"}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<Bandwidth\>\"", ",", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"NumberForm", "[", 
                    RowBox[{
                    FractionBox["bandwidth", 
                    SuperscriptBox["10", "9"]], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                   "\"\< Gbps\>\""}], "}"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<Link Length\>\"", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"linkLength", ",", "\"\< meters\>\""}], "}"}], 
                   "]"}], ",", "Bold"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<Transmission Time (t_tx)\>\"", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"txTime", " ", 
                    SuperscriptBox["10", "9"]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\"\< ns\>\""}], "}"}], "]"}], ",", "Bold", ",", "Red"}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Round-Trip Propagation Time (2 t_prop)\>\"", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"2", " ", "propTime", " ", 
                    SuperscriptBox["10", "9"]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\"\< ns\>\""}], "}"}], "]"}], ",", "Bold", ",", "Red"}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<Is packet longer than the wire?\>\"", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"txTime", ">", 
                    RowBox[{"2", " ", "propTime"}]}], ",", "\"\<Yes\>\"", 
                    ",", "\"\<No\>\""}], "]"}], ",", "Bold", ",", "Red"}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<Calculated Efficiency\>\"", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"efficiency", " ", "100"}], ",", "0.1"}], "]"}], 
                    "]"}], "<>", "\"\<%\>\""}], ",", "Bold", ",", "Red"}], 
                 "]"}]}], "}"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "packetSize", ",", "12000", ",", "\"\<Packet Size (bits)\>\""}], "}"}],
       ",", "1000", ",", "24000", ",", "100", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bandwidth", ",", "10000000000", ",", "\"\<Bandwidth\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1000000000", ",", "\"\<1 Gbps\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10000000000", ",", "\"\<10 Gbps\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"40000000000", ",", "\"\<40 Gbps\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"100000000000", ",", "\"\<100 Gbps\>\""}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"linkLength", ",", "3", ",", "\"\<Link Length (m)\>\""}], 
       "}"}], ",", "1", ",", "2000", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<Part 3: The Efficiency Showdown\>\"", ",", "subtitleStyle"}],
     "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Style", "[", 
    RowBox[{
    "\"\<Here we provide the definitive visual proof. We plot the efficiency \
of both models on the same axes. The classical Ethernet model, fundamentally \
limited by statistical contention, collapses under high competitor counts. In \
contrast, the D\[CapitalAE]D\[CapitalAE]LUS protocol on a point-to-point link \
maintains near-perfect efficiency when the packet is longer than the wire. \
This contrast foregrounds the core Daedaelus critique: probabilistic \
contention divides epistemic state and sacrifices efficiency, whereas \
geometry (longer-than-wire) yields certainty.\>\"", ",", 
     RowBox[{"Sequence", "@@", "cellStyle"}]}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cLight", "=", 
         RowBox[{"299792458", " ", "0.66"}]}], ",", "slotTime", ",", "ethEff",
         ",", "daedalusEff"}], "}"}], ",", 
      RowBox[{
       RowBox[{"slotTime", "=", 
        FractionBox[
         RowBox[{"2", " ", "linkLength"}], "cLight"]}], ";", 
       RowBox[{"ethEff", "=", 
        RowBox[{"ethernetEfficiency", "[", 
         RowBox[{"p", ",", "cap", ",", "slotTime", ",", "q"}], "]"}]}], ";", 
       RowBox[{"daedalusEff", "=", 
        RowBox[{"daedalusEfficiency", "[", 
         RowBox[{
          FractionBox["p", "cap"], ",", 
          FractionBox["linkLength", "cLight"]}], "]"}]}], ";", 
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ethEff", "/.", "\[VeryThinSpace]", 
               RowBox[{"q", "\[Rule]", "x"}]}], ",", "daedalusEff"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "1", ",", "256"}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "256"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1.1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<Q (Number of Contending Stations)\>\"", ",", "Bold"}], 
                "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Efficiency\>\"", ",", "Bold"}], "]"}]}], "}"}]}],
             ",", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Efficiency Showdown: D\[CapitalAE]D\[CapitalAE]LUS vs. \
Classical Ethernet\>\"", ",", "Bold"}], "]"}]}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"Placed", "[", 
              RowBox[{
               RowBox[{"LineLegend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<Classical Ethernet\>\"", ",", "Thick"}], 
                    "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<D\[CapitalAE]D\[CapitalAE]LUS Protocol\>\"", ",", 
                    "Thick", ",", "Dashed"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<Classical Ethernet\>\"", ",", 
                   "\"\<D\[CapitalAE]D\[CapitalAE]LUS Protocol\>\""}], "}"}], 
                 ",", 
                 RowBox[{"LegendLabel", "\[Rule]", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<Model\>\"", ",", "Bold"}], "]"}]}]}], "]"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}], ",", 
            RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
            RowBox[{"BaseStyle", "\[Rule]", "plotStyle"}], ",", 
            RowBox[{"Epilog", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Red", ",", 
                 RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                 RowBox[{"Point", "[", 
                  RowBox[{"{", 
                   RowBox[{"q", ",", "ethEff"}], "}"}], "]"}], ",", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<Classic E\>\"", ",", "Bold", ",", "12"}], 
                    "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"q", ",", "ethEff"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", 
                 RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                 RowBox[{"Point", "[", 
                  RowBox[{"{", 
                   RowBox[{"q", ",", "daedalusEff"}], "}"}], "]"}], ",", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<D\[CapitalAE]D\[CapitalAE]LUS\>\"", ",", "Bold", ",",
                     "12"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"q", ",", "daedalusEff"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}]}], 
              "}"}]}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Thick", ",", 
                 RowBox[{
                  RowBox[{"ColorData", "[", "97", "]"}], "[", "1", "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Dashed", ",", 
                 RowBox[{
                  RowBox[{"ColorData", "[", "97", "]"}], "[", "2", "]"}]}], 
                "}"}]}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Spacer", "[", "15", "]"}], ",", 
          RowBox[{"infoPanel", "[", 
           RowBox[{"\"\<Showdown Parameters\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<Packet Size (P)\>\"", ",", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{"p", ",", "\"\< bits\>\""}], "}"}], "]"}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"\"\<Effective Capacity (C)\>\"", ",", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"NumberForm", "[", 
                    RowBox[{
                    FractionBox["cap", 
                    SuperscriptBox["10", "9"]], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                   "\"\< Gbps\>\""}], "}"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<Link Length (meters)\>\"", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"linkLength", ",", "Bold"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<Classical Ethernet Efficiency at Q\>\"", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"ethEff", " ", "100"}], ",", "0.1"}], "]"}], 
                    "]"}], "<>", "\"\<%\>\""}], ",", "Red", ",", "Bold"}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<D\[CapitalAE]D\[CapitalAE]LUS Protocol Efficiency\>\"", 
                ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"daedalusEff", " ", "100"}], ",", "0.1"}], "]"}], 
                    "]"}], "<>", "\"\<%\>\""}], ",", "Blue", ",", "Bold"}], 
                 "]"}]}], "}"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p", ",", "12000", ",", "\"\<Packet Size (P) [bits]\>\""}], 
       "}"}], ",", "4096", ",", "24000", ",", "1024", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cap", ",", "10000000000", ",", "\"\<Capacity (C) [bps]\>\""}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1000000000", ",", "\"\<1 Gbps\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10000000000", ",", "\"\<10 Gbps\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"40000000000", ",", "\"\<40 Gbps\>\""}], "}"}]}], "}"}], ",", 
      RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"linkLength", ",", "10", ",", "\"\<Link Length (meters)\>\""}],
        "}"}], ",", "1", ",", "100", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q", ",", "32", ",", "\"\<Contending Stations (Q)\>\""}], 
       "}"}], ",", "1", ",", "256", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"ControlPlacement", "\[Rule]", "Top"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<Conclusion\>\"", ",", "subtitleStyle"}], "]"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Style", "[", 
    RowBox[{
    "\"\<The classical model is bound by the dynamics of collision and \
backoff, forcing a trade-off between utilization and fairness that breaks \
down under load. The D\[CapitalAE]D\[CapitalAE]LUS model is constrained only \
by physics \[LongDash] the speed of signal propagation and transmission \
duration. By moving from a shared, contended Ether to a lattice of reliable \
point-to-point links and invoking the 'longer than the wire' principle, we \
demonstrate that high efficiency and strong reliability need not be \
antagonistic. This provides a rigorous, geometric foundation for the \
Daedaelus argument and the design of Open Atomic Ethernet.\>\"", ",", 
     RowBox[{"Sequence", "@@", "cellStyle"}]}], "]"}], "]"}], ";"}]}], "Input",\

 CellChangeTimes->{{3.962966921385469*^9, 3.962966926080152*^9}, {
  3.962978127671421*^9, 3.962978127697809*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"832073c6-409b-4f8b-9b7c-f8b6e8ba4e62"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Part 1: The Classical 1976 Ethernet Model\"\>",
  StripOnInput->False,
  TextAlignment->Center,
  FontFamily->"Helvetica",
  FontSize->18,
  FontWeight->"Bold"]], "Print",
 CellChangeTimes->{3.962978309196711*^9, 3.962978347798703*^9},
 CellLabel->
  "During evaluation of \
In[211]:=",ExpressionUUID->"a266a779-cac7-4871-83b2-a3d98bc95684"],

Cell[BoxData[
 StyleBox["\<\"We begin by recreating the seminal model developed by Metcalfe \
and Boggs. This model describes a shared, passive Ether where control is \
distributed among contending stations. Coordination is achieved through \
statistical arbitration. When the Ether is busy, stations defer; when \
multiple stations transmit simultaneously, they collide, abort, and randomly \
reschedule. This model was foundational, but as we will demonstrate, its \
reliance on statistical contention leads to a collapse in efficiency under \
load.\"\>",
  StripOnInput->False,
  FontFamily->"Palatino",
  FontSize->14]], "Print",
 CellChangeTimes->{3.962978309196711*^9, 3.962978347810958*^9},
 CellLabel->
  "During evaluation of \
In[211]:=",ExpressionUUID->"6879eef1-3606-4239-ab39-f06e60b4b6be"],

Cell[BoxData[
 StyleBox["\<\"Part 2: The D\[CapitalAE]D\[CapitalAE]LUS Protocol Model\"\>",
  StripOnInput->False,
  TextAlignment->Center,
  FontFamily->"Helvetica",
  FontSize->18,
  FontWeight->"Bold"]], "Print",
 CellChangeTimes->{3.962978309196711*^9, 3.962978347812009*^9},
 CellLabel->
  "During evaluation of \
In[211]:=",ExpressionUUID->"b38cbcea-1286-453b-8bf9-3d5b87dbf793"],

Cell[BoxData[
 StyleBox["\<\"Now we model the D\[CapitalAE]D\[CapitalAE]LUS protocol on a \
point-to-point link. This architecture escapes the contention-based model \
entirely. The critical insight relates the packet's transmission time to the \
signal's propagation time. When a packet is 'longer than the wire' \
\[LongDash] that is, its transmission time exceeds the round-trip propagation \
delay \[LongDash] the link becomes fully utilized. The sender receives the \
acknowledgment for the head of the packet before the tail of the packet has \
even left its transceiver. This geometric relationship makes reliability \
effectively free under the right regime.\"\>",
  StripOnInput->False,
  FontFamily->"Palatino",
  FontSize->14]], "Print",
 CellChangeTimes->{3.962978309196711*^9, 3.962978347812552*^9},
 CellLabel->
  "During evaluation of \
In[211]:=",ExpressionUUID->"84573f6e-8031-4fe7-8002-f5a3cb8e23dd"],

Cell[BoxData[
 StyleBox["\<\"Part 3: The Efficiency Showdown\"\>",
  StripOnInput->False,
  TextAlignment->Center,
  FontFamily->"Helvetica",
  FontSize->18,
  FontWeight->"Bold"]], "Print",
 CellChangeTimes->{3.962978309196711*^9, 3.962978347813292*^9},
 CellLabel->
  "During evaluation of \
In[211]:=",ExpressionUUID->"97402ead-41ae-49de-a943-438246531284"],

Cell[BoxData[
 StyleBox["\<\"Here we provide the definitive visual proof. We plot the \
efficiency of both models on the same axes. The classical Ethernet model, \
fundamentally limited by statistical contention, collapses under high \
competitor counts. In contrast, the D\[CapitalAE]D\[CapitalAE]LUS protocol on \
a point-to-point link maintains near-perfect efficiency when the packet is \
longer than the wire. This contrast foregrounds the core Daedaelus critique: \
probabilistic contention divides epistemic state and sacrifices efficiency, \
whereas geometry (longer-than-wire) yields certainty.\"\>",
  StripOnInput->False,
  FontFamily->"Palatino",
  FontSize->14]], "Print",
 CellChangeTimes->{3.962978309196711*^9, 3.962978347813778*^9},
 CellLabel->
  "During evaluation of \
In[211]:=",ExpressionUUID->"8a1e8501-e33e-4804-abc6-24ef09c39960"],

Cell[BoxData[
 StyleBox["\<\"Conclusion\"\>",
  StripOnInput->False,
  TextAlignment->Center,
  FontFamily->"Helvetica",
  FontSize->18,
  FontWeight->"Bold"]], "Print",
 CellChangeTimes->{3.962978309196711*^9, 3.962978347814459*^9},
 CellLabel->
  "During evaluation of \
In[211]:=",ExpressionUUID->"32ae54b3-f227-4427-a200-245cbef3e722"],

Cell[BoxData[
 StyleBox["\<\"The classical model is bound by the dynamics of collision and \
backoff, forcing a trade-off between utilization and fairness that breaks \
down under load. The D\[CapitalAE]D\[CapitalAE]LUS model is constrained only \
by physics \[LongDash] the speed of signal propagation and transmission \
duration. By moving from a shared, contended Ether to a lattice of reliable \
point-to-point links and invoking the 'longer than the wire' principle, we \
demonstrate that high efficiency and strong reliability need not be \
antagonistic. This provides a rigorous, geometric foundation for the \
Daedaelus argument and the design of Open Atomic Ethernet.\"\>",
  StripOnInput->False,
  FontFamily->"Palatino",
  FontSize->14]], "Print",
 CellChangeTimes->{3.962978309196711*^9, 3.962978347814938*^9},
 CellLabel->
  "During evaluation of \
In[211]:=",ExpressionUUID->"c282728a-2f8a-4e71-baae-d078033baebc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusion", "Section",
 CellChangeTimes->{{3.9629599412040358`*^9, 3.9629599418125887`*^9}, {
  3.962960029036481*^9, 3.9629600299441223`*^9}, {3.962960241116858*^9, 
  3.962960242381179*^9}, {3.962960315057363*^9, 3.962960316170951*^9}, {
  3.96296043005512*^9, 3.962960431230219*^9}, {3.962960479145268*^9, 
  3.962960479860569*^9}, {3.962960616035988*^9, 
  3.962960617455996*^9}},ExpressionUUID->"27556936-f8d0-4b4f-9d19-\
0e7da7e40c9a"],

Cell[CellGroupData[{

Cell["\<\
The comparison between the N2N lattice and traditional topologies highlights \
the benefits of fully distributed networking. The N2N lattice (modeled here \
with a hexagonal neighbor-to-neighbor mesh) provides multiple independent \
paths and enables fast self-healing via spanning tree reconfiguration. This \
yields a network that is highly resilient: it can tolerate numerous failures \
while still keeping most nodes connected, reflecting the principles first \
identified by Paul Baran in the 1960s for survivable communications \
(https://www.rand.org/pubs/research_memoranda/RM3420.html#:~:text=Figure%201,\
Distributed%20Networks & \
https://www.rand.org/pubs/research_memoranda/RM3420.html#:~:text=II,Network). \
The lattice also offers the potential for consistent low-latency \
communication, since traffic doesn\[CloseCurlyQuote]t have to traverse \
vertical layers of hierarchy and can instead take short hops between \
neighbors \[Dash] a design goal of the D\[CapitalAE]D\[CapitalAE]LUS \
architecture for achieving deterministic performance \
(https://mulliganstew-gang.vercel.app/#:~:text=with%20the%20D%C3%A6d%C3%A6lus%\
20architecture%2C%20simulating,%C2%BB). 

By contrast, the Clos (fat-tree) topology, representative of modern data \
center networks, shows good performance under normal conditions and some \
built-in redundancy \
(https://synchronet.net/what-is-clos-architecture/#:~:text=How%20do%20Clos%\
20Networks%20Support,Scalability%20and%20Fault%20Tolerance), but its \
hierarchical nature makes it inherently less flexible against failures. A \
Clos network has significantly fewer alternate spanning trees and can be \
partitioned by targeted link or switch failures (for example, losing a \
top-of-rack switch or a critical spine link can cut off many devices). While \
Clos networks do support multiple paths and are considered fault-tolerant in \
practice, their resilience is limited compared to a richly-meshed lattice. \
The experiments above quantified this: the distributed mesh had orders of \
magnitude more spanning trees and withstood random link removals with minimal \
loss of connectivity, whereas the Clos began to fragment with just a few \
failures. \
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
   3.962960627820456*^9, 3.9629606627679577`*^9}, 
   3.9629781277056293`*^9},ExpressionUUID->"ceabcf53-f465-44fe-8ff2-\
2e2b605f1d38"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cellStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"plotStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"titleStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "24"}], ",", 
     RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}], ",", 
     RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"subtitleStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
     RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}], ",", 
     RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"headerStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
     RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"commentStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Palatino\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "12"}], ",", 
     RowBox[{"FontColor", "\[Rule]", "Gray"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"infoPanel", "[", 
    RowBox[{"title_String", ",", "content_List"}], "]"}], ":=", 
   RowBox[{"Framed", "[", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{"content", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"title", ",", "Bold", ",", "14"}], "]"}], ",", 
           "\[SpanFromLeft]"}], "}"}]}], "]"}], ",", 
       RowBox[{"Alignment", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Left", ",", "Center"}], "}"}]}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1.5"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"RoundingRadius", "\[Rule]", "5"}], ",", 
     RowBox[{"Background", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{".97", ",", ".97", ",", ".97"}], "]"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "LightGray"}], ",", 
     RowBox[{"FrameMargins", "\[Rule]", "8"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"acquisitionProbability", "[", 
    RowBox[{"q_", "?", "Positive"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"q", "\[LessEqual]", "1"}], ",", "1.", ",", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["1.", "q"]}], ")"}], 
      RowBox[{"q", "-", "1"}]]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"meanWaitSlots", "[", "a_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"a", "\[Equal]", "0"}], ",", "\[Infinity]", ",", 
     FractionBox[
      RowBox[{"1", "-", "a"}], "a"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ethernetEfficiency", "[", 
    RowBox[{
    "packetSizeBits_", ",", "channelCapacityBps_", ",", "slotTimeSec_", ",", 
     "qStations_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "pOC", ",", "w"}], "}"}], ",", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"acquisitionProbability", "[", "qStations", "]"}]}], ";", 
      RowBox[{"pOC", "=", 
       FractionBox["packetSizeBits", "channelCapacityBps"]}], ";", 
      RowBox[{"w", "=", 
       RowBox[{"meanWaitSlots", "[", "a", "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"w", "===", "\[Infinity]"}], ",", "0", ",", 
        FractionBox["pOC", 
         RowBox[{"pOC", "+", 
          RowBox[{"w", " ", "slotTimeSec"}]}]]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"daedalusEfficiency", "[", 
    RowBox[{"txTime_", ",", "propTime_"}], "]"}], ":=", 
   RowBox[{"Min", "[", 
    RowBox[{"1", ",", 
     FractionBox["txTime", 
      RowBox[{"2", " ", "propTime"}]]}], "]"}]}], ";"}], "\n", 
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"packetSizeClassic", "=", "4096"}], ",", 
     RowBox[{"capacityClassic", "=", 
      RowBox[{"3", " ", 
       SuperscriptBox["10", "6"]}]}], ",", 
     RowBox[{"slotTime", "=", 
      FractionBox["16.", 
       SuperscriptBox["10", "6"]]}], ",", 
     RowBox[{"qStations", "=", "32"}], ",", 
     RowBox[{"packetSizeDaedalus", "=", "12000"}], ",", 
     RowBox[{"bandwidthDaedalus", "=", 
      SuperscriptBox["10", "10"]}], ",", 
     RowBox[{"linkLength", "=", "3"}]}], "}"}], ",", 
   RowBox[{"Column", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Part 1: The Classical 1976 Ethernet Model\>\"", ",", 
        "subtitleStyle"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Recreation of the Metcalfe & Boggs shared Ether with statistical \
contention and back-off.  Efficiency collapses under load as the number of \
competing stations grows.\>\"", ",", 
        RowBox[{"Sequence", "@@", "cellStyle"}]}], "]"}], ",", 
      RowBox[{"Spacer", "[", "10", "]"}], ",", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Panel", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"effClassic", "=", 
                 RowBox[{"ethernetEfficiency", "[", 
                  RowBox[{
                  "packetSizeClassic", ",", "capacityClassic", ",", 
                   "slotTime", ",", "qStations"}], "]"}]}], ",", 
                RowBox[{"a", "=", 
                 RowBox[{"acquisitionProbability", "[", "qStations", "]"}]}], 
                ",", 
                RowBox[{"w", "=", 
                 RowBox[{"meanWaitSlots", "[", 
                  RowBox[{"acquisitionProbability", "[", "qStations", "]"}], 
                  "]"}]}]}], "}"}], ",", 
              RowBox[{"Column", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Show", "[", 
                  RowBox[{
                   RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"ethernetEfficiency", "[", 
                    RowBox[{
                    "packetSizeClassic", ",", "capacityClassic", ",", 
                    "slotTime", ",", "x"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "1", ",", "256"}], "}"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "256"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Q (Number of Contending Stations)\>\"", ",", 
                    "Bold"}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Efficiency (E)\>\"", ",", "Bold"}], "]"}]}], 
                    "}"}]}], ",", 
                    RowBox[{"PlotLabel", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Classical Ethernet Efficiency vs. Contention\>\"", 
                    ",", "Bold"}], "]"}]}], ",", 
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Red", ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    RowBox[{"Point", "[", 
                    RowBox[{"{", 
                    RowBox[{"qStations", ",", "effClassic"}], "}"}], "]"}]}], 
                    "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", "plotStyle"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}], ",", 
                 RowBox[{"Spacer", "[", "6", "]"}], ",", 
                 RowBox[{"infoPanel", "[", 
                  RowBox[{"\"\<Metcalfe Model Parameters\>\"", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<Packet Size (P)\>\"", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"packetSizeClassic", ",", "\"\< bits\>\""}], 
                    "}"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Ether Capacity (C)\>\"", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    FractionBox["capacityClassic", 
                    SuperscriptBox["10.", "6"]], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\"\< Mbps\>\""}], "}"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Slot Time (T)\>\"", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"slotTime", " ", 
                    SuperscriptBox["10.", "6"]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\"\< \[Mu]s (contention unit)\>\""}], "}"}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Contending Stations (Q)\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"qStations", ",", "Bold"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Acquisition Probability (A)\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"N", "[", "a", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "4"}], "}"}]}], "]"}], ",", "Bold", ",",
                     "Red"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Mean Wait Slots (W)\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"w", "===", "\[Infinity]"}], ",", 
                    "\"\<\[Infinity]\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"N", "[", "w", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], "]"}], ",", 
                    "Bold", ",", "Red"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Calculated Efficiency (E)\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"effClassic", " ", "100"}], ",", "0.1"}], "]"}], 
                    "]"}], "<>", "\"\<%\>\""}], ",", "Bold", ",", "Red"}], 
                    "]"}]}], "}"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], "]"}],
             "]"}], ",", "\"\<Classical Ethernet\>\""}], "]"}], ",", 
         RowBox[{"Spacer", "[", "20", "]"}], ",", 
         RowBox[{"Panel", "[", 
          RowBox[{
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<Classical Ethernet Controls\>\"", ",", "headerStyle"}], 
               "]"}], ",", 
              RowBox[{"Spacer", "[", "4", "]"}], ",", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Packet Size (bits): \>\"", ",", 
                 RowBox[{"Slider", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "packetSizeClassic", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"512", ",", "16384", ",", "512"}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                 RowBox[{"Dynamic", "[", "packetSizeClassic", "]"}]}], "}"}], 
               "]"}], ",", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Channel Capacity (Mbps): \>\"", ",", 
                 RowBox[{"Slider", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "capacityClassic", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", " ", 
                    SuperscriptBox["10", "6"]}], ",", 
                    RowBox[{"10", " ", 
                    SuperscriptBox["10", "6"]}], ",", 
                    RowBox[{"5", " ", 
                    SuperscriptBox["10", "5"]}]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"NumberForm", "[", 
                   RowBox[{
                    RowBox[{"N", "[", 
                    FractionBox["capacityClassic", 
                    SuperscriptBox["10.", "6"]], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}]}], "}"}], 
               "]"}], ",", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Slot Time (\[Mu]s): \>\"", ",", 
                 RowBox[{"Slider", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "slotTime", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    FractionBox["1.", 
                    SuperscriptBox["10", "6"]], ",", 
                    FractionBox["50.", 
                    SuperscriptBox["10", "6"]], ",", 
                    FractionBox["1.", 
                    SuperscriptBox["10", "6"]]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"NumberForm", "[", 
                   RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"slotTime", " ", 
                    SuperscriptBox["10.", "6"]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}]}], "}"}], 
               "]"}], ",", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Q Stations: \>\"", ",", 
                 RowBox[{"Slider", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "qStations", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "256", ",", "1"}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                 RowBox[{"Dynamic", "[", "qStations", "]"}]}], "}"}], "]"}]}],
              "}"}], "]"}], ",", "\"\<Parameters\>\""}], "]"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Part 2: The D\[CapitalAE]D\[CapitalAE]LUS Protocol Model\>\"", 
        ",", "subtitleStyle"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Point-to-point link: escaping contention via the \
\[OpenCurlyDoubleQuote]longer-than-the-wire\[CloseCurlyDoubleQuote] geometric \
principle.  Reliability approaches 100 % when transmission time exceeds \
round-trip propagation.\>\"", ",", 
        RowBox[{"Sequence", "@@", "cellStyle"}]}], "]"}], ",", 
      RowBox[{"Spacer", "[", "10", "]"}], ",", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Panel", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"cLight", "=", 
                 RowBox[{"299792458", " ", "0.66"}]}], ",", 
                RowBox[{"txTime", "=", 
                 FractionBox["packetSizeDaedalus", "bandwidthDaedalus"]}], 
                ",", 
                RowBox[{"propTime", "=", 
                 FractionBox["linkLength", 
                  RowBox[{"299792458", " ", "0.66"}]]}], ",", "effDae"}], 
               "}"}], ",", 
              RowBox[{
               RowBox[{"effDae", "=", 
                RowBox[{"daedalusEfficiency", "[", 
                 RowBox[{"txTime", ",", "propTime"}], "]"}]}], ";", 
               RowBox[{"Column", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Show", "[", 
                   RowBox[{
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{"daedalusEfficiency", "[", 
                    RowBox[{
                    FractionBox["packetSizeDaedalus", "bandwidthDaedalus"], 
                    ",", 
                    FractionBox["x", 
                    RowBox[{"299792458", " ", "0.66"}]]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "1", ",", "2000"}], "}"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2000"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.1"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Link Length (meters)\>\"", ",", "Bold"}], 
                    "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Efficiency\>\"", ",", "Bold"}], "]"}]}], 
                    "}"}]}], ",", 
                    RowBox[{"PlotLabel", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<D\[CapitalAE]D\[CapitalAE]LUS Protocol Efficiency \
vs. Link Length\>\"", ",", "Bold"}], "]"}]}], ",", 
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Red", ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    RowBox[{"Point", "[", 
                    RowBox[{"{", 
                    RowBox[{"linkLength", ",", "effDae"}], "}"}], "]"}]}], 
                    "}"}]}], ",", 
                    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", "plotStyle"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "450"}]}], "]"}], ",", 
                  RowBox[{"Spacer", "[", "6", "]"}], ",", 
                  RowBox[{"infoPanel", "[", 
                   RowBox[{
                   "\"\<D\[CapitalAE]D\[CapitalAE]LUS Protocol \
Parameters\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<Packet Size (bits)\>\"", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"packetSizeDaedalus", ",", "\"\< bits\>\""}], 
                    "}"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Bandwidth\>\"", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    FractionBox["bandwidthDaedalus", 
                    SuperscriptBox["10.", "9"]], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\"\< Gbps\>\""}], "}"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Link Length\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"linkLength", ",", "\"\< meters\>\""}], "}"}], 
                    "]"}], ",", "Bold"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Transmission Time (t_tx)\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"txTime", " ", 
                    SuperscriptBox["10.", "9"]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\"\< ns\>\""}], "}"}], "]"}], ",", "Bold", ",", "Red"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Round-Trip Propagation Time (2 t_prop)\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"2", " ", "propTime", " ", 
                    SuperscriptBox["10.", "9"]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\"\< ns\>\""}], "}"}], "]"}], ",", "Bold", ",", "Red"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Is packet \[OpenCurlyDoubleQuote]longer than the \
wire\[CloseCurlyDoubleQuote]?\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"txTime", ">", 
                    RowBox[{"2", " ", "propTime"}]}], ",", "\"\<Yes\>\"", 
                    ",", "\"\<No\>\""}], "]"}], ",", "Bold", ",", "Red"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Calculated Efficiency\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"effDae", " ", "100"}], ",", "0.1"}], "]"}], 
                    "]"}], "<>", "\"\<%\>\""}], ",", "Bold", ",", "Red"}], 
                    "]"}]}], "}"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], 
             "]"}], "]"}], ",", 
           "\"\<D\[CapitalAE]D\[CapitalAE]LUS Protocol\>\""}], "]"}], ",", 
         RowBox[{"Spacer", "[", "20", "]"}], ",", 
         RowBox[{"Panel", "[", 
          RowBox[{
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<D\[CapitalAE]D\[CapitalAE]LUS Protocol Controls\>\"", ",",
                 "headerStyle"}], "]"}], ",", 
              RowBox[{"Spacer", "[", "4", "]"}], ",", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Packet Size (bits): \>\"", ",", 
                 RowBox[{"Slider", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "packetSizeDaedalus", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1000", ",", "24000", ",", "100"}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                 RowBox[{"Dynamic", "[", "packetSizeDaedalus", "]"}]}], "}"}],
                "]"}], ",", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Bandwidth (Gbps): \>\"", ",", 
                 RowBox[{"PopupMenu", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "bandwidthDaedalus", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"1", " ", 
                    SuperscriptBox["10", "9"]}], "\[Rule]", 
                    "\"\<1 Gbps\>\""}], ",", 
                    RowBox[{
                    RowBox[{"10", " ", 
                    SuperscriptBox["10", "9"]}], "\[Rule]", 
                    "\"\<10 Gbps\>\""}], ",", 
                    RowBox[{
                    RowBox[{"40", " ", 
                    SuperscriptBox["10", "9"]}], "\[Rule]", 
                    "\"\<40 Gbps\>\""}], ",", 
                    RowBox[{
                    RowBox[{"100", " ", 
                    SuperscriptBox["10", "9"]}], "\[Rule]", 
                    "\"\<100 Gbps\>\""}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"NumberForm", "[", 
                   RowBox[{
                    RowBox[{"N", "[", 
                    FractionBox["bandwidthDaedalus", 
                    SuperscriptBox["10.", "9"]], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "0"}], "}"}]}], "]"}], "]"}]}], "}"}], 
               "]"}], ",", 
              RowBox[{"Row", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Link Length (m): \>\"", ",", 
                 RowBox[{"Slider", "[", 
                  RowBox[{
                   RowBox[{"Dynamic", "[", "linkLength", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2000", ",", "1"}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
                 RowBox[{"Dynamic", "[", "linkLength", "]"}]}], "}"}], 
               "]"}]}], "}"}], "]"}], ",", "\"\<Parameters\>\""}], "]"}]}], 
        "}"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Part 3: The Efficiency Showdown\>\"", ",", "subtitleStyle"}], 
       "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Overlay of Classical Ethernet vs. D\[CapitalAE]D\[CapitalAE]LUS \
protocol efficiency to make the fundamental contrast explicit.\>\"", ",", 
        RowBox[{"Sequence", "@@", "cellStyle"}]}], "]"}], ",", 
      RowBox[{"Spacer", "[", "10", "]"}], ",", 
      RowBox[{"Panel", "[", 
       RowBox[{
        RowBox[{"Dynamic", "[", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"cLight", "=", 
              RowBox[{"299792458", " ", "0.66"}]}], ",", 
             RowBox[{"txTimeClassic", "=", 
              FractionBox["packetSizeClassic", "capacityClassic"]}], ",", 
             RowBox[{"slotRoundTrip", "=", 
              FractionBox[
               RowBox[{"2", " ", "linkLength"}], 
               RowBox[{"299792458", " ", "0.66"}]]}], ",", 
             "effClassicShowdown", ",", "effDaeShowdown"}], "}"}], ",", 
           RowBox[{
            RowBox[{"effClassicShowdown", "=", 
             RowBox[{"ethernetEfficiency", "[", 
              RowBox[{
              "packetSizeClassic", ",", "capacityClassic", ",", 
               "slotRoundTrip", ",", "qStations"}], "]"}]}], ";", 
            RowBox[{"effDaeShowdown", "=", 
             RowBox[{"daedalusEfficiency", "[", 
              RowBox[{
               FractionBox["packetSizeClassic", "capacityClassic"], ",", 
               FractionBox["linkLength", 
                RowBox[{"299792458", " ", "0.66"}]]}], "]"}]}], ";", 
            RowBox[{"Column", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Show", "[", 
                RowBox[{
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ethernetEfficiency", "[", 
                    RowBox[{
                    "packetSizeClassic", ",", "capacityClassic", ",", 
                    "slotRoundTrip", ",", "x"}], "]"}], ",", 
                    RowBox[{"daedalusEfficiency", "[", 
                    RowBox[{
                    FractionBox["packetSizeClassic", "capacityClassic"], ",", 
                    
                    FractionBox["linkLength", 
                    RowBox[{"299792458", " ", "0.66"}]]}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "1", ",", "256"}], "}"}], ",", 
                   RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "256"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1.1"}], "}"}]}], "}"}]}], ",", 
                   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                   RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Q (Number of Contending Stations)\>\"", ",", 
                    "Bold"}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Efficiency\>\"", ",", "Bold"}], "]"}]}], 
                    "}"}]}], ",", 
                   RowBox[{"PlotLabel", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Efficiency Showdown: D\[CapitalAE]D\[CapitalAE]LUS \
vs. Classic Ethernet\>\"", ",", "Bold"}], "]"}]}], ",", 
                   RowBox[{"PlotLegends", "\[Rule]", 
                    RowBox[{"Placed", "[", 
                    RowBox[{
                    RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Classic Ethernet\>\"", ",", "Thick"}], "]"}],
                     ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<D\[CapitalAE]D\[CapitalAE]LUS Protocol\>\"", ",", 
                    "Thick", ",", "Dashed"}], "]"}]}], "}"}], ",", 
                    RowBox[{"LegendLabel", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Model\>\"", ",", "Bold"}], "]"}]}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}], ",", 
                   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "650"}], ",", 
                   RowBox[{"BaseStyle", "\[Rule]", "plotStyle"}], ",", 
                   RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", "Dashed"}], "}"}]}], "}"}]}]}], 
                  "]"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "650"}]}], "]"}], ",", 
               RowBox[{"Spacer", "[", "6", "]"}], ",", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{"infoPanel", "[", 
                  RowBox[{"\"\<Showdown Snapshot\>\"", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<Classical Efficiency at Q=\>\"", "<>", 
                    RowBox[{"ToString", "[", "qStations", "]"}]}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"effClassicShowdown", " ", "100"}], ",", "0.1"}], 
                    "]"}], "]"}], "<>", "\"\<%\>\""}], ",", "Bold", ",", 
                    "Red"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<D\[CapitalAE]D\[CapitalAE]LUS Efficiency (same \
parameters)\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"effDaeShowdown", " ", "100"}], ",", "0.1"}], 
                    "]"}], "]"}], "<>", "\"\<%\>\""}], ",", "Bold", ",", 
                    "Red"}], "]"}]}], "}"}]}], "}"}]}], "]"}], "}"}], "]"}]}],
               "}"}], "]"}]}]}], "]"}], "]"}], ",", 
        "\"\<Efficiency Showdown\>\""}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Conclusion\>\"", ",", "subtitleStyle"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<The classical model is limited by stochastic collisions and \
back-off, forcing an inherent trade-off between fairness and utilization; \
efficiency collapses under load.  The D\[CapitalAE]D\[CapitalAE]LUS model, \
grounded in deterministic geometry (transmission time vs. propagation delay), \
achieves near-100 % utilization without contention.  This demonstrates that \
shared-bandwidth statistical multiplexing inevitably loses epistemic state \
through re-arbitration, whereas transaction-aware point-to-point links (the D\
\[CapitalAE]D\[CapitalAE]LUS lens) avoid those losses entirely.\>\"", ",", 
        RowBox[{"Sequence", "@@", "cellStyle"}]}], "]"}]}], "}"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9629752397576923`*^9, 3.962975258261249*^9}, {
  3.9629781277159348`*^9, 3.962978127761709*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"f89a3856-3364-4702-afcf-3325617b20e4"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`packetSizeClassic$$ = 
  4096, $CellContext`capacityClassic$$ = 3000000, $CellContext`slotTime$$ = 
  0.000016, $CellContext`qStations$$ = 32, $CellContext`packetSizeDaedalus$$ =
   12000, $CellContext`bandwidthDaedalus$$ = 
  10000000000, $CellContext`linkLength$$ = 3}, 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Part 1: The Classical 1976 Ethernet Model\"\>",
       StripOnInput->False,
       TextAlignment->Center,
       FontFamily->"Helvetica",
       FontSize->18,
       FontWeight->"Bold"]},
     {
      StyleBox["\<\"Recreation of the Metcalfe & Boggs shared Ether with \
statistical contention and back-off.  Efficiency collapses under load as the \
number of competing stations grows.\"\>",
       StripOnInput->False,
       FontFamily->"Palatino",
       FontSize->14]},
     {
      TemplateBox[{10},
       "Spacer1"]},
     {
      TemplateBox[{
        TemplateBox[{
          PanelBox[
           DynamicBox[
            ToBoxes[
             
             Module[{$CellContext`effClassic$ = \
$CellContext`ethernetEfficiency[$CellContext`packetSizeClassic$$, \
$CellContext`capacityClassic$$, $CellContext`slotTime$$, \
$CellContext`qStations$$], $CellContext`a$ = \
$CellContext`acquisitionProbability[$CellContext`qStations$$], \
$CellContext`w$ = $CellContext`meanWaitSlots[
                 $CellContext`acquisitionProbability[$CellContext`qStations$$]\
]}, 
              Column[{
                Show[
                 Plot[
                  $CellContext`ethernetEfficiency[$CellContext`\
packetSizeClassic$$, $CellContext`capacityClassic$$, $CellContext`slotTime$$, \
$CellContext`x], {$CellContext`x, 1, 256}, PlotRange -> {{0, 256}, {0, 1}}, 
                  Frame -> True, FrameLabel -> {
                    Style["Q (Number of Contending Stations)", Bold], 
                    Style["Efficiency (E)", Bold]}, PlotLabel -> 
                  Style["Classical Ethernet Efficiency vs. Contention", Bold],
                   Epilog -> {Red, 
                    PointSize[Large], 
                    
                    Point[{$CellContext`qStations$$, \
$CellContext`effClassic$}]}, GridLines -> Automatic, ImageSize -> 450, 
                  BaseStyle -> $CellContext`plotStyle, PlotStyle -> Thick], 
                 ImageSize -> 450], 
                Spacer[6], 
                $CellContext`infoPanel[
                "Metcalfe Model Parameters", {{"Packet Size (P)", 
                   Row[{$CellContext`packetSizeClassic$$, " bits"}]}, {
                  "Ether Capacity (C)", 
                   Row[{
                    NumberForm[
                    N[$CellContext`capacityClassic$$/10.^6], {3, 2}], 
                    " Mbps"}]}, {"Slot Time (T)", 
                   Row[{
                    NumberForm[
                    N[$CellContext`slotTime$$ 10.^6], {3, 2}], 
                    " \[Mu]s (contention unit)"}]}, {
                  "Contending Stations (Q)", 
                   Style[$CellContext`qStations$$, Bold]}, {
                  "Acquisition Probability (A)", 
                   Style[
                    NumberForm[
                    N[$CellContext`a$], {3, 4}], Bold, Red]}, {
                  "Mean Wait Slots (W)", 
                   Style[
                    If[$CellContext`w$ === Infinity, "\[Infinity]", 
                    NumberForm[
                    N[$CellContext`w$], {3, 3}]], Bold, Red]}, {
                  "Calculated Efficiency (E)", 
                   Style[ToString[
                    Round[$CellContext`effClassic$ 100, 0.1]] <> "%", Bold, 
                    Red]}}]}]], StandardForm]]], "\"Classical Ethernet\""}, 
         "Labeled", DisplayFunction -> (GridBox[{{
             
             ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
              "PanelLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", 
              RowBox[{"{", #2, "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"Top", ",", "Left"}], "}"}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"DefaultLabelStyle", "\[Rule]", "\"PanelLabel\""}], 
                  ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
                  RowBox[{"Spacings", "\[Rule]", "Automatic"}]}], "}"}]}], 
            "]"}]& )], 
        TemplateBox[{20}, "Spacer1"], 
        TemplateBox[{
          PanelBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Classical Ethernet Controls\"", {
                FontFamily -> "Helvetica", FontSize -> 16, FontWeight -> 
                 "Bold"}, StripOnInput -> False]}, {
               TemplateBox[{4}, "Spacer1"]}, {
               TemplateBox[{"\"Packet Size (bits): \"", 
                 SliderBox[
                  Dynamic[$CellContext`packetSizeClassic$$], {512, 16384, 
                  512}, ImageSize -> Medium], 
                 DynamicBox[
                  ToBoxes[$CellContext`packetSizeClassic$$, StandardForm]]}, 
                "RowDefault"]}, {
               TemplateBox[{"\"Channel Capacity (Mbps): \"", 
                 SliderBox[
                  Dynamic[$CellContext`capacityClassic$$], {1000000, 10000000,
                   500000}, ImageSize -> Medium], 
                 DynamicBox[
                  ToBoxes[
                   NumberForm[
                    N[$CellContext`capacityClassic$$/10.^6], {3, 2}], 
                   StandardForm]]}, "RowDefault"]}, {
               TemplateBox[{"\"Slot Time (\[Mu]s): \"", 
                 SliderBox[
                  Dynamic[$CellContext`slotTime$$], {1.*^-6, 
                  0.000049999999999999996`, 1.*^-6}, ImageSize -> Medium], 
                 DynamicBox[
                  ToBoxes[
                   NumberForm[
                    N[$CellContext`slotTime$$ 10.^6], {3, 2}], 
                   StandardForm]]}, "RowDefault"]}, {
               TemplateBox[{"\"Q Stations: \"", 
                 SliderBox[
                  Dynamic[$CellContext`qStations$$], {1, 256, 1}, ImageSize -> 
                  Medium], 
                 DynamicBox[
                  ToBoxes[$CellContext`qStations$$, StandardForm]]}, 
                "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             DefaultBaseStyle -> "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]], "\"Parameters\""}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             
             ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
              "PanelLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", 
              RowBox[{"{", #2, "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"Top", ",", "Left"}], "}"}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"DefaultLabelStyle", "\[Rule]", "\"PanelLabel\""}], 
                  ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
                  RowBox[{"Spacings", "\[Rule]", "Automatic"}]}], "}"}]}], 
            "]"}]& )]},
       "RowDefault"]},
     {
      StyleBox["\<\"Part 2: The D\[CapitalAE]D\[CapitalAE]LUS Protocol \
Model\"\>",
       StripOnInput->False,
       TextAlignment->Center,
       FontFamily->"Helvetica",
       FontSize->18,
       FontWeight->"Bold"]},
     {
      StyleBox["\<\"Point-to-point link: escaping contention via the \
\[OpenCurlyDoubleQuote]longer-than-the-wire\[CloseCurlyDoubleQuote] geometric \
principle.  Reliability approaches 100 % when transmission time exceeds \
round-trip propagation.\"\>",
       StripOnInput->False,
       FontFamily->"Palatino",
       FontSize->14]},
     {
      TemplateBox[{10},
       "Spacer1"]},
     {
      TemplateBox[{
        TemplateBox[{
          PanelBox[
           DynamicBox[
            ToBoxes[
             
             Module[{$CellContext`cLight$ = 
               299792458 
                0.66, $CellContext`txTime$ = \
$CellContext`packetSizeDaedalus$$/$CellContext`bandwidthDaedalus$$, \
$CellContext`propTime$ = $CellContext`linkLength$$/(299792458 
                0.66), $CellContext`effDae$}, $CellContext`effDae$ = \
$CellContext`daedalusEfficiency[$CellContext`txTime$, $CellContext`propTime$]; 
              Column[{
                 Show[
                  Plot[
                   $CellContext`daedalusEfficiency[$CellContext`\
packetSizeDaedalus$$/$CellContext`bandwidthDaedalus$$, $CellContext`x/(
                    299792458 0.66)], {$CellContext`x, 1, 2000}, 
                   PlotRange -> {{0, 2000}, {0, 1.1}}, Frame -> True, 
                   FrameLabel -> {
                    Style["Link Length (meters)", Bold], 
                    Style["Efficiency", Bold]}, PlotLabel -> 
                   Style["D\[CapitalAE]D\[CapitalAE]LUS Protocol Efficiency \
vs. Link Length", Bold], Epilog -> {Red, 
                    PointSize[Large], 
                    Point[{$CellContext`linkLength$$, $CellContext`effDae$}]},
                    GridLines -> Automatic, ImageSize -> 450, 
                   BaseStyle -> $CellContext`plotStyle, PlotStyle -> Thick], 
                  ImageSize -> 450], 
                 Spacer[6], 
                 $CellContext`infoPanel[
                 "D\[CapitalAE]D\[CapitalAE]LUS Protocol Parameters", {{
                   "Packet Size (bits)", 
                    Row[{$CellContext`packetSizeDaedalus$$, " bits"}]}, {
                   "Bandwidth", 
                    Row[{
                    NumberForm[
                    N[$CellContext`bandwidthDaedalus$$/10.^9], {3, 2}], 
                    " Gbps"}]}, {"Link Length", 
                    Style[
                    Row[{$CellContext`linkLength$$, " meters"}], Bold]}, {
                   "Transmission Time (t_tx)", 
                    Style[
                    Row[{
                    NumberForm[
                    N[$CellContext`txTime$ 10.^9], {3, 2}], " ns"}], Bold, 
                    Red]}, {"Round-Trip Propagation Time (2 t_prop)", 
                    Style[
                    Row[{
                    NumberForm[
                    N[2 $CellContext`propTime$ 10.^9], {3, 2}], " ns"}], Bold,
                     Red]}, {
                   "Is packet \[OpenCurlyDoubleQuote]longer than the wire\
\[CloseCurlyDoubleQuote]?", 
                    Style[
                    
                    If[$CellContext`txTime$ > 2 $CellContext`propTime$, "Yes",
                     "No"], Bold, Red]}, {"Calculated Efficiency", 
                    Style[ToString[
                    Round[$CellContext`effDae$ 100, 0.1]] <> "%", Bold, 
                    Red]}}]}]], StandardForm]]], 
          "\"D\[CapitalAE]D\[CapitalAE]LUS Protocol\""}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             
             ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
              "PanelLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", 
              RowBox[{"{", #2, "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"Top", ",", "Left"}], "}"}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"DefaultLabelStyle", "\[Rule]", "\"PanelLabel\""}], 
                  ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
                  RowBox[{"Spacings", "\[Rule]", "Automatic"}]}], "}"}]}], 
            "]"}]& )], 
        TemplateBox[{20}, "Spacer1"], 
        TemplateBox[{
          PanelBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"D\[CapitalAE]D\[CapitalAE]LUS Protocol Controls\"", {
                FontFamily -> "Helvetica", FontSize -> 16, FontWeight -> 
                 "Bold"}, StripOnInput -> False]}, {
               TemplateBox[{4}, "Spacer1"]}, {
               TemplateBox[{"\"Packet Size (bits): \"", 
                 SliderBox[
                  Dynamic[$CellContext`packetSizeDaedalus$$], {1000, 24000, 
                  100}, ImageSize -> Medium], 
                 DynamicBox[
                  ToBoxes[$CellContext`packetSizeDaedalus$$, StandardForm]]}, 
                "RowDefault"]}, {
               TemplateBox[{"\"Bandwidth (Gbps): \"", 
                 PopupMenuBox[
                  Dynamic[$CellContext`bandwidthDaedalus$$], {
                  1000000000 -> "\"1 Gbps\"", 10000000000 -> "\"10 Gbps\"", 
                   40000000000 -> "\"40 Gbps\"", 100000000000 -> 
                   "\"100 Gbps\""}], 
                 DynamicBox[
                  ToBoxes[
                   NumberForm[
                    N[$CellContext`bandwidthDaedalus$$/10.^9], {3, 0}], 
                   StandardForm]]}, "RowDefault"]}, {
               TemplateBox[{"\"Link Length (m): \"", 
                 SliderBox[
                  Dynamic[$CellContext`linkLength$$], {1, 2000, 1}, ImageSize -> 
                  Medium], 
                 DynamicBox[
                  ToBoxes[$CellContext`linkLength$$, StandardForm]]}, 
                "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             DefaultBaseStyle -> "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]], "\"Parameters\""}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             
             ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
              "PanelLabel"]}, {
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {2, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", 
              RowBox[{"{", #2, "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"Top", ",", "Left"}], "}"}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"DefaultLabelStyle", "\[Rule]", "\"PanelLabel\""}], 
                  ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
                  RowBox[{"Spacings", "\[Rule]", "Automatic"}]}], "}"}]}], 
            "]"}]& )]},
       "RowDefault"]},
     {
      StyleBox["\<\"Part 3: The Efficiency Showdown\"\>",
       StripOnInput->False,
       TextAlignment->Center,
       FontFamily->"Helvetica",
       FontSize->18,
       FontWeight->"Bold"]},
     {
      StyleBox["\<\"Overlay of Classical Ethernet vs. D\[CapitalAE]D\
\[CapitalAE]LUS protocol efficiency to make the fundamental contrast \
explicit.\"\>",
       StripOnInput->False,
       FontFamily->"Palatino",
       FontSize->14]},
     {
      TemplateBox[{10},
       "Spacer1"]},
     {
      TemplateBox[{
        PanelBox[
         DynamicBox[
          ToBoxes[
           
           Module[{$CellContext`cLight$ = 
             299792458 
              0.66, $CellContext`txTimeClassic$ = \
$CellContext`packetSizeClassic$$/$CellContext`capacityClassic$$, \
$CellContext`slotRoundTrip$ = 
             2 $CellContext`linkLength$$/(299792458 
              0.66), $CellContext`effClassicShowdown$, \
$CellContext`effDaeShowdown$}, $CellContext`effClassicShowdown$ = \
$CellContext`ethernetEfficiency[$CellContext`packetSizeClassic$$, \
$CellContext`capacityClassic$$, $CellContext`slotRoundTrip$, \
$CellContext`qStations$$]; $CellContext`effDaeShowdown$ = \
$CellContext`daedalusEfficiency[$CellContext`packetSizeClassic$$/$CellContext`\
capacityClassic$$, $CellContext`linkLength$$/(299792458 0.66)]; Column[{
               Show[
                Plot[{
                  $CellContext`ethernetEfficiency[$CellContext`\
packetSizeClassic$$, $CellContext`capacityClassic$$, \
$CellContext`slotRoundTrip$, $CellContext`x], 
                  $CellContext`daedalusEfficiency[$CellContext`\
packetSizeClassic$$/$CellContext`capacityClassic$$, \
$CellContext`linkLength$$/(299792458 0.66)]}, {$CellContext`x, 1, 256}, 
                 PlotRange -> {{0, 256}, {0, 1.1}}, Frame -> True, FrameLabel -> {
                   Style["Q (Number of Contending Stations)", Bold], 
                   Style["Efficiency", Bold]}, PlotLabel -> 
                 Style["Efficiency Showdown: D\[CapitalAE]D\[CapitalAE]LUS \
vs. Classic Ethernet", Bold], PlotLegends -> Placed[
                   LineLegend[{
                    Style["Classic Ethernet", Thick], 
                    Style[
                    "D\[CapitalAE]D\[CapitalAE]LUS Protocol", Thick, Dashed]},
                     LegendLabel -> Style["Model", Bold]], {Right, Center}], 
                 GridLines -> Automatic, ImageSize -> 650, 
                 BaseStyle -> $CellContext`plotStyle, 
                 PlotStyle -> {Thick, {Thick, Dashed}}], ImageSize -> 650], 
               Spacer[6], 
               Row[{
                 $CellContext`infoPanel[
                 "Showdown Snapshot", {{
                   "Classical Efficiency at Q=" <> 
                    ToString[$CellContext`qStations$$], 
                    Style[ToString[
                    Round[$CellContext`effClassicShowdown$ 100, 0.1]] <> "%", 
                    Bold, Red]}, {
                   "D\[CapitalAE]D\[CapitalAE]LUS Efficiency (same \
parameters)", 
                    Style[ToString[
                    Round[$CellContext`effDaeShowdown$ 100, 0.1]] <> "%", 
                    Bold, Red]}}]}]}]], StandardForm]]], 
        "\"Efficiency Showdown\""},
       "Labeled",
       DisplayFunction->(GridBox[{{
           
           ItemBox[#2, Alignment -> {Left, Inherited}, DefaultBaseStyle -> 
            "PanelLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {2, 1}]& ),
       InterpretationFunction->(RowBox[{"Labeled", "[", 
          RowBox[{#, ",", 
            RowBox[{"{", #2, "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"{", 
                RowBox[{"Top", ",", "Left"}], "}"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"DefaultLabelStyle", "\[Rule]", "\"PanelLabel\""}], 
                ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
                RowBox[{"Spacings", "\[Rule]", "Automatic"}]}], "}"}]}], 
          "]"}]& )]},
     {
      StyleBox["\<\"Conclusion\"\>",
       StripOnInput->False,
       TextAlignment->Center,
       FontFamily->"Helvetica",
       FontSize->18,
       FontWeight->"Bold"]},
     {
      StyleBox["\<\"The classical model is limited by stochastic collisions \
and back-off, forcing an inherent trade-off between fairness and utilization; \
efficiency collapses under load.  The D\[CapitalAE]D\[CapitalAE]LUS model, \
grounded in deterministic geometry (transmission time vs. propagation delay), \
achieves near-100 % utilization without contention.  This demonstrates that \
shared-bandwidth statistical multiplexing inevitably loses epistemic state \
through re-arbitration, whereas transaction-aware point-to-point links (the D\
\[CapitalAE]D\[CapitalAE]LUS lens) avoid those losses entirely.\"\>",
       StripOnInput->False,
       FontFamily->"Palatino",
       FontSize->14]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.962978349420014*^9, 3.962978364520117*^9}, 
   3.962981580647151*^9, 3.962981795968409*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"4569efaf-2bd1-4e70-80fe-ebf7bd2d5705"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
In summary, a decentralized lattice topology can greatly enhance network \
robustness and reliability, aligning with the growing interest in distributed \
network architectures for modern needs \
(https://www.liveaction.com/resources/blog-post/centralized-vs-decentralized-\
vs-distributed-networks-the-history-future/#:~:text=decentralized%20network%\
20in%20a%20proposal,for%20the%20US%20AirForce & \
https://www.liveaction.com/resources/blog-post/centralized-vs-decentralized-\
vs-distributed-networks-the-history-future/#:~:text=Despite%20this%20early%\
20realization%20that,end%20of%20a%20Russian%20cyberattack). The \
D\[CapitalAE]D\[CapitalAE]LUS project\[CloseCurlyQuote]s approach of managing \
such a topology with a Graph Virtual Machine (using spanning trees and \
reversible protocols) is an example of leveraging this old-but-new idea: \
building networks that favor resilience and consistent performance over the \
simplicity of centralized control. As networks become ever more critical (and \
as downtime or data loss becomes less acceptable), these distributed designs \
are gaining renewed attention. This deep dive into the \
code\[CloseCurlyQuote]s simulation confirms that moving \
\[OpenCurlyDoubleQuote]beyond the tree\[CloseCurlyDoubleQuote] to an N2N \
lattice can indeed provide superior resilience by design \
(https://mulliganstew-gang.vercel.app/#:~:text=Alternating%20Bit%20Protocol%\
2C%20demonstrating%20the,%C2%BB), ensuring that no single failure can bring \
down the entire system. \
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
   3.962960627820456*^9, 3.9629607065958443`*^9}, 
   3.9629781280264807`*^9},ExpressionUUID->"28bbb2ac-e699-4326-812f-\
c944177056d7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"acquisitionProbability", "[", "Q_", "]"}], ":=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox["1", "Q"]}], ")"}], 
    RowBox[{"Q", "-", "1"}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"meanWaitingSlots", "[", "Q_", "]"}], ":=", 
   FractionBox[
    RowBox[{"1", "-", 
     RowBox[{"acquisitionProbability", "[", "Q", "]"}]}], 
    RowBox[{"acquisitionProbability", "[", "Q", "]"}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"classicalEthernetEfficiency", "[", 
    RowBox[{"P_", ",", "C_", ",", "T_", ",", "Q_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"W", "=", 
        RowBox[{"meanWaitingSlots", "[", "Q", "]"}]}], ",", "PoverC"}], "}"}],
      ",", 
     RowBox[{
      RowBox[{"PoverC", "=", 
       FractionBox["P", "C"]}], ";", 
      FractionBox["PoverC", 
       RowBox[{"PoverC", "+", 
        RowBox[{"W", " ", "T"}]}]]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"packetTransmissionTime", "[", 
    RowBox[{"packetSizeInBytes_", ",", "linkSpeedBps_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"packetSizeInBytes", " ", "8"}], "linkSpeedBps"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"roundTripPropagationDelay", "[", 
    RowBox[{"linkLengthM_", ",", "propagationSpeedMps_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"2", " ", "linkLengthM"}], "propagationSpeedMps"]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"aethernetLinkUtilization", "[", 
    RowBox[{
    "packetSizeInBytes_", ",", "linkSpeedBps_", ",", "linkLengthM_", ",", 
     "propagationSpeedMps_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"transmissionTime", "=", 
        RowBox[{"packetTransmissionTime", "[", 
         RowBox[{"packetSizeInBytes", ",", "linkSpeedBps"}], "]"}]}], ",", 
       RowBox[{"roundTripTime", "=", 
        RowBox[{"roundTripPropagationDelay", "[", 
         RowBox[{"linkLengthM", ",", "propagationSpeedMps"}], "]"}]}]}], 
      "}"}], ",", 
     FractionBox["transmissionTime", 
      RowBox[{"transmissionTime", "+", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{"roundTripTime", "-", "transmissionTime"}]}], "]"}]}]]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"bitsPerPacket", "=", 
        RowBox[{"packetSizeInBytes", " ", "8"}]}], ",", 
       RowBox[{"propSpeed", "=", 
        RowBox[{"2.0", " ", 
         SuperscriptBox["10", "8"]}]}]}], "}"}], ",", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"classicalEthernetEfficiency", "[", 
          RowBox[{"bitsPerPacket", ",", "linkSpeedBps", ",", 
           RowBox[{"roundTripPropagationDelay", "[", 
            RowBox[{"linkLengthM", ",", "propSpeed"}], "]"}], ",", 
           "contendingStationsQ"}], "]"}], ",", 
         RowBox[{"aethernetLinkUtilization", "[", 
          RowBox[{
          "packetSizeInBytes", ",", "linkSpeedBps", ",", "linkLengthM", ",", 
           "propSpeed"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"linkLengthM", ",", "0.01", ",", "1000"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.01", ",", "1000"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1.1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<N2N Link Length (meters)\>\"", ",", 
          "\"\<Link Utilization / Efficiency\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Efficiency Showdown:\\nClassical Contention vs. Deterministic \
Interaction\>\"", ",", "18"}], "]"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<Classical Ethernet (Metcalfe Model)\>\"", ",", 
              "\"\<Open Atomic Ethernet (D\\\\[ae]d\\\\[ae]lus Model)\>\""}], 
             "}"}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0.25", ",", "0.3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "StringTemplate", "[", 
                "\"\<Packet is 'longer than the wire' when length < ``m\>\"", 
                "]"}], "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"packetTransmissionTime", "[", 
                   RowBox[{"packetSizeInBytes", ",", "linkSpeedBps"}], "]"}], 
                  " ", "propSpeed"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], ",", "Gray",
               ",", "12"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0.9"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.5"}], ",", "0"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Gray", ",", "Dashed", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"packetTransmissionTime", "[", 
                   RowBox[{"packetSizeInBytes", ",", "linkSpeedBps"}], "]"}], 
                  " ", "propSpeed"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"packetTransmissionTime", "[", 
                   RowBox[{"packetSizeInBytes", ",", "linkSpeedBps"}], "]"}], 
                  " ", "propSpeed"}], ",", "1"}], "}"}]}], "}"}], "]"}]}], 
           "}"}]}], "}"}]}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"linkSpeedBps", ",", 
       RowBox[{"100", " ", 
        SuperscriptBox["10", "9"]}], ",", "\"\<Link Speed\>\""}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"10", " ", 
         SuperscriptBox["10", "9"]}], "\[Rule]", "\"\<10 Gbps\>\""}], ",", 
       RowBox[{
        RowBox[{"25", " ", 
         SuperscriptBox["10", "9"]}], "\[Rule]", "\"\<25 Gbps\>\""}], ",", 
       RowBox[{
        RowBox[{"100", " ", 
         SuperscriptBox["10", "9"]}], "\[Rule]", "\"\<100 Gbps\>\""}], ",", 
       RowBox[{
        RowBox[{"400", " ", 
         SuperscriptBox["10", "9"]}], "\[Rule]", "\"\<400 Gbps\>\""}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"packetSizeInBytes", ",", "64", ",", "\"\<Packet Size\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"64", "\[Rule]", "\"\<64 Bytes (Min)\>\""}], ",", 
       RowBox[{"512", "\[Rule]", "\"\<512 Bytes\>\""}], ",", 
       RowBox[{"1518", "\[Rule]", "\"\<1518 Bytes (Max)\>\""}]}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "contendingStationsQ", ",", "32", ",", 
       "\"\<Contending Stations (Q)\>\""}], "}"}], ",", "2", ",", "256", ",", 
     "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9629687042979593`*^9, 3.962968727068204*^9}, 
   3.962974814805903*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"04c9a7dc-baef-4a04-97b3-c3c371199a78"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`contendingStationsQ$$ = 
    32, $CellContext`linkSpeedBps$$ = 
    100000000000, $CellContext`packetSizeInBytes$$ = 64, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`linkSpeedBps$$], 100000000000, "Link Speed"}, {
      10000000000 -> "10 Gbps", 25000000000 -> "25 Gbps", 100000000000 -> 
       "100 Gbps", 400000000000 -> "400 Gbps"}, ControlType -> SetterBar}, {{
       Hold[$CellContext`packetSizeInBytes$$], 64, "Packet Size"}, {
      64 -> "64 Bytes (Min)", 512 -> "512 Bytes", 1518 -> "1518 Bytes (Max)"},
       ControlType -> SetterBar}, {{
       Hold[$CellContext`contendingStationsQ$$], 32, 
       "Contending Stations (Q)"}, 2, 256, 1, ControlType -> Manipulator}}, 
    Typeset`size$$ = {720., {200., 208.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`contendingStationsQ$$ = 
        32, $CellContext`linkSpeedBps$$ = 
        100000000000, $CellContext`packetSizeInBytes$$ = 64}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`bitsPerPacket$ = $CellContext`packetSizeInBytes$$ 
          8, $CellContext`propSpeed$ = 2. 10^8}, 
        LogLogPlot[{
          $CellContext`classicalEthernetEfficiency[$CellContext`bitsPerPacket$\
, $CellContext`linkSpeedBps$$, 
           $CellContext`roundTripPropagationDelay[$CellContext`linkLengthM, \
$CellContext`propSpeed$], $CellContext`contendingStationsQ$$], 
          $CellContext`aethernetLinkUtilization[$CellContext`\
packetSizeInBytes$$, $CellContext`linkSpeedBps$$, $CellContext`linkLengthM, \
$CellContext`propSpeed$]}, {$CellContext`linkLengthM, 0.01, 1000}, 
         PlotRange -> {{0.01, 1000}, {0, 1.1}}, 
         AxesLabel -> {
          "N2N Link Length (meters)", "Link Utilization / Efficiency"}, 
         PlotLabel -> 
         Style["Efficiency Showdown:\nClassical Contention vs. Deterministic \
Interaction", 18], PlotLegends -> Placed[
           
           LineLegend[{
            "Classical Ethernet (Metcalfe Model)", 
             "Open Atomic Ethernet (D\\[ae]d\\[ae]lus Model)"}, LegendLayout -> 
            "Column"], {0.25, 0.3}], GridLines -> Automatic, ImageSize -> 
         Large, Epilog -> {
           Text[
            Style[
             StringTemplate[
             "Packet is 'longer than the wire' when length < ``m"][
              
              NumberForm[$CellContext`packetTransmissionTime[$CellContext`\
packetSizeInBytes$$, $CellContext`linkSpeedBps$$] $CellContext`propSpeed$, {3,
                2}]], Gray, 12], {1, 0.9}, {-1.5, 0}], {Gray, Dashed, 
            
            Line[{{$CellContext`packetTransmissionTime[$CellContext`\
packetSizeInBytes$$, $CellContext`linkSpeedBps$$] $CellContext`propSpeed$, 
               0}, {$CellContext`packetTransmissionTime[$CellContext`\
packetSizeInBytes$$, $CellContext`linkSpeedBps$$] $CellContext`propSpeed$, 
               1}}]}}]], 
      "Specifications" :> {{{$CellContext`linkSpeedBps$$, 100000000000, 
          "Link Speed"}, {
         10000000000 -> "10 Gbps", 25000000000 -> "25 Gbps", 100000000000 -> 
          "100 Gbps", 400000000000 -> 
          "400 Gbps"}}, {{$CellContext`packetSizeInBytes$$, 64, 
          "Packet Size"}, {
         64 -> "64 Bytes (Min)", 512 -> "512 Bytes", 1518 -> 
          "1518 Bytes (Max)"}}, {{$CellContext`contendingStationsQ$$, 32, 
          "Contending Stations (Q)"}, 2, 256, 1, Appearance -> "Labeled"}}, 
      "Options" :> {ControlPlacement -> Left}, "DefaultOptions" :> {}],
     ImageSizeCache->{1225., {234., 244.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.962968704454365*^9, 3.962968727398193*^9}, 
   3.962969239730465*^9, {3.962974811868641*^9, 3.9629748173791122`*^9}, 
   3.962975058608705*^9, 3.962975275954768*^9, 3.962976283376794*^9, 
   3.962976317464546*^9, 3.962978368739719*^9, 3.962981575377755*^9, 
   3.962981615832444*^9, 3.962981799420012*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"337ff1fb-ce80-4296-a4bf-4fe8191379d1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[OpenCurlyQuote]Code as Proof\[CloseCurlyQuote] Efficiency Model", \
"Section",
 CellChangeTimes->{{3.9629599412040358`*^9, 3.9629599418125887`*^9}, {
  3.962976461637974*^9, 
  3.962976463707608*^9}},ExpressionUUID->"d4cd5886-5682-4112-ae00-\
e6c78c559d03"],

Cell["\<\
This Mathematica notebook serves as a form of \[OpenCurlyDoubleQuote]code as \
proof,\[CloseCurlyDoubleQuote] re-examining the foundational assumptions that \
have governed Ethernet for five decades. It provides a definitive, visual \
showdown between two paradigms. The first is the classical Metcalfe model for \
a shared, best-effort Ether, a system that embraces statistical contention \
and pushes reliability to higher layers, forcing applications to rely on \
timeouts and retries. This model quantifies a world where acknowledgements \
were considered expensive and bandwidth was throttled by the need for \
reliability.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.962976449259252*^9, 
  3.962976450044448*^9}},ExpressionUUID->"ec865ea7-4ecd-440a-b9b0-\
6b6db9a16998"],

Cell["\<\
The second paradigm is the Open Atomic Ethernet model for a reliable, \
point-to-point N2N link. This model proves that on modern high-speed, \
short-distance links, acknowledgements are not only \
inexpensive\[LongDash]they are virtually free. It demonstrates the \
\[OpenCurlyDoubleQuote]longer than the wire\[CloseCurlyDoubleQuote] concept, \
where a packet\[CloseCurlyQuote]s transmission time can exceed its round-trip \
propagation delay. In this regime, an acknowledgment is received before the \
sender has even finished transmitting, creating a \
\[OpenCurlyDoubleQuote]circulating snake\[CloseCurlyDoubleQuote] of bits that \
achieves nearly 100% link utilization. This proves that you cannot add \
reliability on top of an unreliable network; it must be built into the \
foundation. The analysis provides the definitive proof that the industry must \
shift its focus from multiplexing raw bandwidth to multiplexing the \
\[OpenCurlyDoubleQuote]transactional capacity of the link,\
\[CloseCurlyDoubleQuote] enabling exactly-once semantics without sacrificing \
performance.\
\>", "Affiliation",
 CellChangeTimes->{{3.962959958952446*^9, 3.962959960700286*^9}, {
  3.962976453241884*^9, 
  3.9629764549937057`*^9}},ExpressionUUID->"0e5bed48-31e7-4533-bb48-\
69df3f05f439"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"packetSize", "=", "512"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"linkLengthN2N", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"propagationSpeed", "=", 
   RowBox[{"2", " ", 
    SuperscriptBox["10", "8"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dataRate", "=", 
   RowBox[{"1", " ", 
    SuperscriptBox["10", "9"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"transmissionTime", "=", 
   FractionBox["packetSize", "dataRate"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"propagationDelay", "=", 
   FractionBox["linkLengthN2N", "propagationSpeed"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"roundTripTime", "=", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"transmissionTime", "+", "propagationDelay"}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"retransmissionTimeout", "=", 
   RowBox[{"2.5", " ", "roundTripTime"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"packetLossProbability", "=", "0.1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ackLossProbability", "=", "0.1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LogEvent", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eventLog_", ",", "timeline_"}], "}"}], ",", "time_", ",", 
     "party_", ",", "event_", ",", "details_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"newEventLog", ",", "newTimeline"}], "}"}], ",", 
     RowBox[{
      RowBox[{"newEventLog", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"eventLog", ",", 
         RowBox[{
          RowBox[{
          "StringTemplate", "[", "\"\<Time `1`s: `2` `3`. `4`\>\"", "]"}], 
          "[", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{"time", ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", "10"}], "}"}]}], "]"}], ",", "party", ",", 
           "event", ",", "details"}], "]"}]}], "]"}]}], ";", 
      RowBox[{"newTimeline", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"timeline", ",", 
         RowBox[{"Association", "[", 
          RowBox[{
           RowBox[{"\"\<Party\>\"", "\[Rule]", "party"}], ",", 
           RowBox[{"\"\<Event\>\"", "\[Rule]", "event"}], ",", 
           RowBox[{"\"\<Time\>\"", "\[Rule]", "time"}], ",", 
           RowBox[{"\"\<Details\>\"", "\[Rule]", "details"}]}], "]"}]}], 
        "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{"newEventLog", ",", "newTimeline"}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EnqueueEvent", "[", 
    RowBox[{"queue_", ",", "evt_"}], "]"}], ":=", 
   RowBox[{"Append", "[", 
    RowBox[{"queue", ",", "evt"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DequeueNextEvent", "[", "queue_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sorted", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{"queue", ",", 
         RowBox[{
          RowBox[{"#1", "[", "\"\<Time\>\"", "]"}], "&"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"First", "[", "sorted", "]"}], ",", 
       RowBox[{"Rest", "[", "sorted", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SimulateSAWProtocol", "[", "maxMessages_Integer", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"aliceState", "=", "\"\<Idle\>\""}], ",", 
       RowBox[{"aliceDataToSend", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"\"\<Packet\>\"", "<>", 
           RowBox[{"ToString", "[", "i", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "maxMessages"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"aliceNextPacketIndex", "=", "1"}], ",", 
       RowBox[{"aliceCurrentPacket", "=", "\"\<\>\""}], ",", 
       RowBox[{"aliceAltBit", "=", "0"}], ",", 
       RowBox[{"aliceRetransmitDeadline", "=", "0"}], ",", 
       RowBox[{"bobLastAcceptedAltBit", "=", "1"}], ",", 
       RowBox[{"bobReceivedData", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"eventLog", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"timelineEvents", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"eventQueue", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"currentTime", "=", "0"}], ",", 
       RowBox[{"maxTime", "=", 
        RowBox[{"maxMessages", " ", "10", " ", "roundTripTime"}]}], ",", 
       "schedulePacket", ",", "scheduleAck"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"schedulePacket", "[", 
        RowBox[{"packet_", ",", "altBit_", ",", "sendTime_"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "arrivalTime", "}"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], ">", "packetLossProbability"}], 
           ",", 
           RowBox[{
            RowBox[{"arrivalTime", "=", 
             RowBox[{"sendTime", "+", "propagationDelay"}]}], ";", 
            RowBox[{"eventQueue", "=", 
             RowBox[{"EnqueueEvent", "[", 
              RowBox[{"eventQueue", ",", 
               RowBox[{"Association", "[", 
                RowBox[{
                 RowBox[{"\"\<Time\>\"", "\[Rule]", "arrivalTime"}], ",", 
                 RowBox[{"\"\<Target\>\"", "\[Rule]", "\"\<Bob\>\""}], ",", 
                 RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<ReceivePacket\>\""}],
                  ",", 
                 RowBox[{"\"\<Payload\>\"", "\[Rule]", 
                  RowBox[{"Association", "[", 
                   RowBox[{
                    RowBox[{"\"\<Packet\>\"", "\[Rule]", "packet"}], ",", 
                    RowBox[{"\"\<AltBit\>\"", "\[Rule]", "altBit"}]}], 
                   "]"}]}]}], "]"}]}], "]"}]}], ";", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
             RowBox[{"LogEvent", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
               "sendTime", ",", "\"\<Alice\>\"", ",", "\"\<Sends\>\"", ",", 
               RowBox[{"packet", "<>", "\"\< (Alt: \>\"", "<>", 
                RowBox[{"ToString", "[", "altBit", "]"}], "<>", 
                "\"\<)\>\""}]}], "]"}]}], ";"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
             RowBox[{"LogEvent", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
               "sendTime", ",", "\"\<Link\>\"", ",", "\"\<Packet Lost!\>\"", 
               ",", 
               RowBox[{"packet", "<>", "\"\< (Alt: \>\"", "<>", 
                RowBox[{"ToString", "[", "altBit", "]"}], "<>", 
                "\"\<)\>\""}]}], "]"}]}], ";", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
             RowBox[{"LogEvent", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
               "sendTime", ",", "\"\<Alice\>\"", ",", "\"\<Sends\>\"", ",", 
               RowBox[{"packet", "<>", "\"\< (Alt: \>\"", "<>", 
                RowBox[{"ToString", "[", "altBit", "]"}], "<>", 
                "\"\<)\>\""}]}], "]"}]}], ";"}]}], "]"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"scheduleAck", "[", 
        RowBox[{"altBit_", ",", "sendTime_"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "arrivalTime", "}"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], ">", "ackLossProbability"}], 
           ",", 
           RowBox[{
            RowBox[{"arrivalTime", "=", 
             RowBox[{"sendTime", "+", "propagationDelay"}]}], ";", 
            RowBox[{"eventQueue", "=", 
             RowBox[{"EnqueueEvent", "[", 
              RowBox[{"eventQueue", ",", 
               RowBox[{"Association", "[", 
                RowBox[{
                 RowBox[{"\"\<Time\>\"", "\[Rule]", "arrivalTime"}], ",", 
                 RowBox[{"\"\<Target\>\"", "\[Rule]", "\"\<Alice\>\""}], ",", 
                 
                 RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<ReceiveAck\>\""}], 
                 ",", 
                 RowBox[{"\"\<Payload\>\"", "\[Rule]", 
                  RowBox[{"Association", "[", 
                   RowBox[{"\"\<AltBit\>\"", "\[Rule]", "altBit"}], "]"}]}]}],
                 "]"}]}], "]"}]}], ";", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
             RowBox[{"LogEvent", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
               "sendTime", ",", "\"\<Bob\>\"", ",", "\"\<Sends Ack\>\"", ",", 
               
               RowBox[{"\"\<(For Alt: \>\"", "<>", 
                RowBox[{"ToString", "[", "altBit", "]"}], "<>", 
                "\"\<)\>\""}]}], "]"}]}], ";"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
             RowBox[{"LogEvent", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
               "sendTime", ",", "\"\<Bob\>\"", ",", "\"\<Sends Ack\>\"", ",", 
               
               RowBox[{"\"\<(For Alt: \>\"", "<>", 
                RowBox[{"ToString", "[", "altBit", "]"}], "<>", 
                "\"\<)\>\""}]}], "]"}]}], ";", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
             RowBox[{"LogEvent", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
               "sendTime", ",", "\"\<Link\>\"", ",", "\"\<Ack Lost!\>\"", ",", 
               RowBox[{"\"\<(For Alt: \>\"", "<>", 
                RowBox[{"ToString", "[", "altBit", "]"}], "<>", 
                "\"\<)\>\""}]}], "]"}]}], ";"}]}], "]"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
       RowBox[{"LogEvent", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
         "currentTime", ",", "\"\<System\>\"", ",", 
         "\"\<Simulation Start\>\"", ",", 
         RowBox[{"\"\<Link RTT: \>\"", "<>", 
          RowBox[{"ToString", "[", "roundTripTime", "]"}], "<>", 
          "\"\<s\>\""}]}], "]"}]}], ";", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "bobReceivedData", "]"}], "<", 
          "maxMessages"}], "&&", 
         RowBox[{"currentTime", "<", "maxTime"}]}], ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"aliceState", "===", "\"\<Idle\>\""}], "&&", 
            RowBox[{"aliceNextPacketIndex", "\[LessEqual]", "maxMessages"}]}],
            ",", 
           RowBox[{
            RowBox[{"aliceCurrentPacket", "=", 
             RowBox[{
             "aliceDataToSend", "\[LeftDoubleBracket]", 
              "aliceNextPacketIndex", "\[RightDoubleBracket]"}]}], ";", 
            RowBox[{"aliceState", "=", "\"\<AwaitingAck\>\""}], ";", 
            RowBox[{"aliceRetransmitDeadline", "=", 
             RowBox[{"currentTime", "+", "retransmissionTimeout"}]}], ";", 
            RowBox[{"schedulePacket", "[", 
             RowBox[{
             "aliceCurrentPacket", ",", "aliceAltBit", ",", "currentTime"}], 
             "]"}], ";"}]}], "]"}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"eventQueue", "=!=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "nextEvt", ",", "rest", ",", "evtTime", ",", "target", ",", 
               "type", ",", "payload"}], "}"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"nextEvt", ",", "rest"}], "}"}], "=", 
               RowBox[{"DequeueNextEvent", "[", "eventQueue", "]"}]}], ";", 
              RowBox[{"eventQueue", "=", "rest"}], ";", 
              RowBox[{"evtTime", "=", 
               RowBox[{"nextEvt", "[", "\"\<Time\>\"", "]"}]}], ";", 
              RowBox[{"currentTime", "=", "evtTime"}], ";", 
              RowBox[{"target", "=", 
               RowBox[{"nextEvt", "[", "\"\<Target\>\"", "]"}]}], ";", 
              RowBox[{"type", "=", 
               RowBox[{"nextEvt", "[", "\"\<Type\>\"", "]"}]}], ";", 
              RowBox[{"payload", "=", 
               RowBox[{"nextEvt", "[", "\"\<Payload\>\"", "]"}]}], ";", 
              RowBox[{"Which", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"target", "===", "\"\<Bob\>\""}], "&&", 
                 RowBox[{"type", "===", "\"\<ReceivePacket\>\""}]}], ",", 
                RowBox[{"Module", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"packet", "=", 
                    RowBox[{"payload", "[", "\"\<Packet\>\"", "]"}]}], ",", 
                    RowBox[{"receivedAltBit", "=", 
                    RowBox[{"payload", "[", "\"\<AltBit\>\"", "]"}]}]}], 
                   "}"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
                    RowBox[{"LogEvent", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
                    "currentTime", ",", "\"\<Bob\>\"", ",", 
                    "\"\<Receives\>\"", ",", 
                    RowBox[{"packet", "<>", "\"\< (Alt: \>\"", "<>", 
                    RowBox[{"ToString", "[", "receivedAltBit", "]"}], "<>", 
                    "\"\<)\>\""}]}], "]"}]}], ";", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "receivedAltBit", "\[NotEqual]", 
                    "bobLastAcceptedAltBit"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
                    RowBox[{"LogEvent", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
                    "currentTime", ",", "\"\<Bob\>\"", ",", "\"\<Accepts\>\"",
                     ",", 
                    RowBox[{"packet", "<>", "\"\< (Alt: \>\"", "<>", 
                    RowBox[{"ToString", "[", "receivedAltBit", "]"}], "<>", 
                    "\"\<)\>\""}]}], "]"}]}], ";", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"bobReceivedData", ",", "packet"}], "]"}], ";", 
                    RowBox[{"bobLastAcceptedAltBit", "=", "receivedAltBit"}], 
                    ";"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
                    RowBox[{"LogEvent", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
                    "currentTime", ",", "\"\<Bob\>\"", ",", "\"\<Rejects\>\"",
                     ",", "\"\<(Duplicate Alt Bit)\>\""}], "]"}]}], ";"}]}], 
                    "]"}], ";", 
                   RowBox[{"scheduleAck", "[", 
                    RowBox[{"receivedAltBit", ",", "currentTime"}], "]"}], 
                   ";"}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{"target", "===", "\"\<Alice\>\""}], "&&", 
                 RowBox[{"type", "===", "\"\<ReceiveAck\>\""}]}], ",", 
                RowBox[{"Module", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"ackedAltBit", "=", 
                    RowBox[{"payload", "[", "\"\<AltBit\>\"", "]"}]}], "}"}], 
                  ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
                    RowBox[{"LogEvent", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
                    "currentTime", ",", "\"\<Alice\>\"", ",", 
                    "\"\<Receives Ack\>\"", ",", 
                    RowBox[{"\"\<(For Alt: \>\"", "<>", 
                    RowBox[{"ToString", "[", "ackedAltBit", "]"}], "<>", 
                    "\"\<)\>\""}]}], "]"}]}], ";", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"aliceState", "===", "\"\<AwaitingAck\>\""}], "&&", 
                    RowBox[{"ackedAltBit", "\[Equal]", "aliceAltBit"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
                    RowBox[{"LogEvent", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
                    "currentTime", ",", "\"\<Alice\>\"", ",", 
                    "\"\<Accepts Ack\>\"", ",", "\"\<\>\""}], "]"}]}], ";", 
                    RowBox[{"aliceState", "=", "\"\<Idle\>\""}], ";", 
                    RowBox[{"aliceAltBit", "=", 
                    RowBox[{"1", "-", "aliceAltBit"}]}], ";", 
                    RowBox[{"aliceNextPacketIndex", "++"}], ";"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
                    RowBox[{"LogEvent", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
                    "currentTime", ",", "\"\<Alice\>\"", ",", 
                    "\"\<Rejects Ack\>\"", ",", 
                    "\"\<(Wrong Alt Bit or Stale)\>\""}], "]"}]}], ";"}]}], 
                    "]"}], ";"}]}], "]"}], ",", "True", ",", "Null"}], "]"}], 
              ";"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"currentTime", "+=", 
             RowBox[{"0.5", " ", "roundTripTime"}]}], ";"}]}], "]"}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"aliceState", "===", "\"\<AwaitingAck\>\""}], "&&", 
            RowBox[{
            "currentTime", "\[GreaterEqual]", "aliceRetransmitDeadline"}]}], 
           ",", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
             RowBox[{"LogEvent", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
               "currentTime", ",", "\"\<Alice\>\"", ",", "\"\<Timeout!\>\"", 
               ",", 
               RowBox[{"\"\<Resending \>\"", "<>", "aliceCurrentPacket"}]}], 
              "]"}]}], ";", 
            RowBox[{"aliceState", "=", "\"\<AwaitingAck\>\""}], ";", 
            RowBox[{"aliceRetransmitDeadline", "=", 
             RowBox[{"currentTime", "+", "retransmissionTimeout"}]}], ";", 
            RowBox[{"schedulePacket", "[", 
             RowBox[{
             "aliceCurrentPacket", ",", "aliceAltBit", ",", "currentTime"}], 
             "]"}], ";"}]}], "]"}], ";"}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "bobReceivedData", "]"}], "\[GreaterEqual]", 
         "maxMessages"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
          RowBox[{"LogEvent", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
            "currentTime", ",", "\"\<System\>\"", ",", "\"\<Success\>\"", 
            ",", "\"\<All messages reliably transmitted.\>\""}], "]"}]}], 
         ";"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], "=", 
          RowBox[{"LogEvent", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"eventLog", ",", "timelineEvents"}], "}"}], ",", 
            "currentTime", ",", "\"\<System\>\"", ",", "\"\<Failure\>\"", 
            ",", "\"\<Simulation timed out.\>\""}], "]"}]}], ";"}]}], "]"}], 
      ";", 
      RowBox[{"{", 
       RowBox[{"eventLog", ",", "timelineEvents", ",", "bobReceivedData"}], 
       "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"simulationResult", "=", 
   RowBox[{"SimulateSAWProtocol", "[", "5", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eventLog", "=", 
   RowBox[{
   "simulationResult", "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"timelineData", "=", 
   RowBox[{
   "simulationResult", "\[LeftDoubleBracket]", "2", 
    "\[RightDoubleBracket]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"receivedData", "=", 
   RowBox[{
   "simulationResult", "\[LeftDoubleBracket]", "3", 
    "\[RightDoubleBracket]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<--- Simulation Event Log ---\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Scan", "[", 
   RowBox[{"Print", ",", "eventLog"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<\\n--- Data Received by Bob ---\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "receivedData", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"timeScale", "=", 
   SuperscriptBox["10", "9"]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"horizontalOffset", "=", "0.5"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"partyY", "[", "\"\<Alice\>\"", "]"}], ":=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"partyY", "[", "\"\<Bob\>\"", "]"}], ":=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parseEventVis", "[", "e_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ev", "=", 
        RowBox[{"e", "[", "\"\<Event\>\"", "]"}]}], ",", 
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"e", "[", "\"\<Time\>\"", "]"}], "]"}], " ", 
         "timeScale"}]}], ",", 
       RowBox[{"d", "=", 
        RowBox[{"e", "[", "\"\<Details\>\"", "]"}]}], ",", "bit"}], "}"}], 
     ",", 
     RowBox[{"Switch", "[", 
      RowBox[{"ev", ",", "\"\<Sends\>\"", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringContainsQ", "[", 
          RowBox[{"d", ",", "\"\<Packet\>\""}], "]"}], ",", 
         RowBox[{
          RowBox[{"bit", "=", 
           RowBox[{"Quiet", "[", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{"ToExpression", "[", 
               RowBox[{
                RowBox[{"StringCases", "[", 
                 RowBox[{"d", ",", 
                  RowBox[{
                   RowBox[{"\"\<Alt: \>\"", "~~", "b__", "~~", "\"\<)\>\""}], 
                   "\[RuleDelayed]", "b"}]}], "]"}], "\[LeftDoubleBracket]", 
                "1", "\[RightDoubleBracket]"}], "]"}], ",", "0"}], "]"}], 
            "]"}]}], ";", 
          RowBox[{"Association", "[", 
           RowBox[{
            RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<Packet\>\""}], ",", 
            RowBox[{"\"\<From\>\"", "\[Rule]", "\"\<Alice\>\""}], ",", 
            RowBox[{"\"\<To\>\"", "\[Rule]", "\"\<Bob\>\""}], ",", 
            RowBox[{"\"\<Time\>\"", "\[Rule]", "t"}], ",", 
            RowBox[{"\"\<Bit\>\"", "\[Rule]", "bit"}], ",", 
            RowBox[{"\"\<Label\>\"", "\[Rule]", "d"}]}], "]"}]}], ",", 
         "Null"}], "]"}], ",", "\"\<Sends Ack\>\"", ",", 
       RowBox[{
        RowBox[{"bit", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{
              RowBox[{"StringCases", "[", 
               RowBox[{"d", ",", 
                RowBox[{
                 RowBox[{"\"\<Alt: \>\"", "~~", "b__", "~~", "\"\<)\>\""}], 
                 "\[RuleDelayed]", "b"}]}], "]"}], "\[LeftDoubleBracket]", 
              "1", "\[RightDoubleBracket]"}], "]"}], ",", "0"}], "]"}], 
          "]"}]}], ";", 
        RowBox[{"Association", "[", 
         RowBox[{
          RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<Ack\>\""}], ",", 
          RowBox[{"\"\<From\>\"", "\[Rule]", "\"\<Bob\>\""}], ",", 
          RowBox[{"\"\<To\>\"", "\[Rule]", "\"\<Alice\>\""}], ",", 
          RowBox[{"\"\<Time\>\"", "\[Rule]", "t"}], ",", 
          RowBox[{"\"\<Bit\>\"", "\[Rule]", "bit"}], ",", 
          RowBox[{"\"\<Label\>\"", "\[Rule]", "d"}]}], "]"}]}], ",", "_", ",",
        "Null"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eventsRaw", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"parseEventVis", "/@", "timelineData"}], ",", "Null"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"packetArrows", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"eventsRaw", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "[", "\"\<Type\>\"", "]"}], "\[Equal]", 
       "\"\<Packet\>\""}], "&"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ackArrows", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"eventsRaw", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "[", "\"\<Type\>\"", "]"}], "\[Equal]", "\"\<Ack\>\""}], 
      "&"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"makeArrow", "[", "e_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"yFrom", "=", 
        RowBox[{"partyY", "[", 
         RowBox[{"e", "[", "\"\<From\>\"", "]"}], "]"}]}], ",", 
       RowBox[{"yTo", "=", 
        RowBox[{"partyY", "[", 
         RowBox[{"e", "[", "\"\<To\>\"", "]"}], "]"}]}], ",", 
       RowBox[{"time", "=", 
        RowBox[{"e", "[", "\"\<Time\>\"", "]"}]}], ",", 
       RowBox[{"bit", "=", 
        RowBox[{"e", "[", "\"\<Bit\>\"", "]"}]}], ",", "base", ",", "tip", 
       ",", "mid"}], "}"}], ",", 
     RowBox[{
      RowBox[{"base", "=", 
       RowBox[{"{", 
        RowBox[{"time", ",", "yFrom"}], "}"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"time", "+", "horizontalOffset"}], ",", "yTo"}], "}"}]}], 
      ";", 
      RowBox[{"mid", "=", 
       FractionBox[
        RowBox[{"base", "+", "tip"}], "2"]}], ";", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"bit", "\[Equal]", "0"}], ",", 
          RowBox[{"GrayLevel", "[", "0.3", "]"}], ",", "Black"}], "]"}], ",", 
        "Thick", ",", 
        RowBox[{"Arrowheads", "[", "0.04", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{"base", ",", "tip"}], "}"}], "]"}], ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"e", "[", "\"\<Type\>\"", "]"}], "===", 
               "\"\<Packet\>\""}], ",", 
              RowBox[{"\"\<Pkt \>\"", "<>", 
               RowBox[{"ToString", "[", "bit", "]"}]}], ",", 
              RowBox[{"\"\<Ack \>\"", "<>", 
               RowBox[{"ToString", "[", "bit", "]"}]}]}], "]"}], ",", "10", 
            ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "]"}], 
          ",", 
          RowBox[{"mid", "+", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.1"}], "}"}]}]}], "]"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"graphicsPrimitives", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"makeArrow", "/@", 
     RowBox[{"Join", "[", 
      RowBox[{"packetArrows", ",", "ackArrows"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"maxTimeNs", "=", 
   RowBox[{"Max", "[", 
    RowBox[{"Lookup", "[", 
     RowBox[{"eventsRaw", ",", "\"\<Time\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"rtNs", "=", 
   RowBox[{
    RowBox[{"N", "[", "roundTripTime", "]"}], " ", "timeScale"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"timeTicks", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ScientificForm", "[", 
           RowBox[{"t", ",", "3"}], "]"}], ",", "\"\< ns\>\""}], "}"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "maxTimeNs", ",", 
       FractionBox["rtNs", "2"]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"timelinePlot", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"GrayLevel", "[", "0.95", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "0.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.1", " ", "maxTimeNs"}], ",", "1.5"}], "}"}]}], "]"}], 
       ",", "Dashed", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1.1", " ", "maxTimeNs"}], ",", "1"}], "}"}]}], "}"}], 
        "]"}], ",", "Dashed", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1.1", " ", "maxTimeNs"}], ",", "0"}], "}"}]}], "}"}], 
        "]"}], ",", "graphicsPrimitives", ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Alice\>\"", ",", "Bold", ",", "12"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.05"}], " ", "maxTimeNs"}], ",", "1"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Bob\>\"", ",", "Bold", ",", "12"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.05"}], " ", "maxTimeNs"}], ",", "0"}], "}"}]}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"timeTicks", ",", "None", ",", "None", ",", "None"}], "}"}]}], 
     ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Time (ns)\>\"", ",", "12"}], "]"}], ",", "None"}], 
       "}"}]}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "40"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"1.05", " ", "maxTimeNs"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.5"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.35"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Column", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Legend:\>\"", ",", "Bold"}], "]"}], "}"}], "]"}], 
            ",", 
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Graphics", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"GrayLevel", "[", "0.3", "]"}], ",", "Thick", ",", 
                   
                   RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
                  ",", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}]}], "]"}], ",", 
               "\"\< Alt Bit 0\>\""}], "}"}], "]"}], ",", 
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Graphics", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Black", ",", "Thick", ",", 
                   RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
                  ",", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"30", ",", "10"}], "}"}]}]}], "]"}], ",", 
               "\"\< Alt Bit 1\>\""}], "}"}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"0.85", ",", "0.8"}], "}"}], "]"}]}], "]"}], "}"}]}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "timelinePlot", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.96297100043497*^9, 3.962971000440089*^9}, 
   3.9629748453169537`*^9},
 CellLabel->
  "In[267]:=",ExpressionUUID->"4b13a375-d529-4c40-b0f5-ee055a5d20af"],

Cell[CellGroupData[{

Cell[BoxData["\<\"--- Simulation Event Log ---\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.9629783723196163`*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"d4f64f1b-a886-403a-8225-45693e063662"],

Cell[BoxData["\<\"Time 0s: System Simulation Start. Link RTT:    \
517\\n---------\\n500000000s\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372320251*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"64fd8335-17e9-4924-9cfe-0733f8a7862e"],

Cell[BoxData["\<\"Time 0s: Alice Sends. Packet1 (Alt: 0)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372320938*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"3a33a24f-3793-4ca7-b270-d7b315ef2409"],

Cell[BoxData["\<\"Time 5.0000000000*10^-9s: Bob Receives. Packet1 (Alt: \
0)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372321402*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"1d2452c4-8740-4230-b265-f26b690adc60"],

Cell[BoxData["\<\"Time 5.0000000000*10^-9s: Bob Accepts. Packet1 (Alt: \
0)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.9629783723218203`*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"47f0404a-c454-43f6-9085-1b50a9a7af9c"],

Cell[BoxData["\<\"Time 5.0000000000*10^-9s: Bob Sends Ack. (For Alt: \
0)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372322255*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"f0a833da-1ec5-4544-8afe-6fcf5afe4595"],

Cell[BoxData["\<\"Time 1.0000000000*10^-8s: Alice Receives Ack. (For Alt: \
0)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372322693*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"8a671c7e-eddb-4931-9b0a-5a7466847dd2"],

Cell[BoxData["\<\"Time 1.0000000000*10^-8s: Alice Accepts Ack. \"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372323111*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"b0a5f728-33ae-4523-9625-fa76ded42069"],

Cell[BoxData["\<\"Time 1.0000000000*10^-8s: Alice Sends. Packet2 (Alt: \
1)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372323504*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"d817305d-cebd-48fb-a137-b6aed2776a21"],

Cell[BoxData["\<\"Time 1.5000000000*10^-8s: Bob Receives. Packet2 (Alt: \
1)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372323905*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"b32e21d0-d27c-4bf6-bfc4-f2a41ea1e04a"],

Cell[BoxData["\<\"Time 1.5000000000*10^-8s: Bob Accepts. Packet2 (Alt: \
1)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372324297*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"1d8e2689-3107-4ff0-ba87-bf4cd18bc50d"],

Cell[BoxData["\<\"Time 1.5000000000*10^-8s: Bob Sends Ack. (For Alt: \
1)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.96297837232469*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"358a05bd-1df1-4553-a6fa-f4b28f65f192"],

Cell[BoxData["\<\"Time 2.0000000000*10^-8s: Alice Receives Ack. (For Alt: \
1)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372325081*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"76dd2780-7d38-4d96-9b19-7df28538986b"],

Cell[BoxData["\<\"Time 2.0000000000*10^-8s: Alice Accepts Ack. \"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372325471*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"1c8a7383-f191-431e-ac90-b6cc13b8d2cf"],

Cell[BoxData["\<\"Time 2.0000000000*10^-8s: Alice Sends. Packet3 (Alt: \
0)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372325863*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"62d4e415-c1fd-439e-b178-e913991a0b26"],

Cell[BoxData["\<\"Time 2.5000000000*10^-8s: Bob Receives. Packet3 (Alt: \
0)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372326249*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"f15396ae-d1ec-4d0e-952c-1d85c572fe0b"],

Cell[BoxData["\<\"Time 2.5000000000*10^-8s: Bob Accepts. Packet3 (Alt: \
0)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.9629783723266363`*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"96242883-d1df-47a8-a644-82895a54a96d"],

Cell[BoxData["\<\"Time 2.5000000000*10^-8s: Bob Sends Ack. (For Alt: \
0)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.96297837232701*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"09b16447-9561-4c22-a352-14286d83b99e"],

Cell[BoxData["\<\"Time 3.0000000000*10^-8s: Alice Receives Ack. (For Alt: \
0)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372327413*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"2c86efc8-a3d0-4672-8303-62bcfdad0619"],

Cell[BoxData["\<\"Time 3.0000000000*10^-8s: Alice Accepts Ack. \"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372327828*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"f1af81e3-4ada-4711-ba0c-404e9c8bb5bd"],

Cell[BoxData["\<\"Time 3.0000000000*10^-8s: Alice Sends. Packet4 (Alt: \
1)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.9629783723282146`*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"ad3eb9d0-1a65-4fd3-a921-623c66f24873"],

Cell[BoxData["\<\"Time 3.5000000000*10^-8s: Bob Receives. Packet4 (Alt: \
1)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372328598*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"965179d8-b523-4174-89be-31fd69b70042"],

Cell[BoxData["\<\"Time 3.5000000000*10^-8s: Bob Accepts. Packet4 (Alt: \
1)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.96297837232899*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"1b25b0ee-b071-4c59-b403-89294e5ec53b"],

Cell[BoxData["\<\"Time 3.5000000000*10^-8s: Bob Sends Ack. (For Alt: \
1)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372329377*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"ae2582f5-9dc6-4581-a4dc-96bf2e1ad50b"],

Cell[BoxData["\<\"Time 4.0000000000*10^-8s: Alice Receives Ack. (For Alt: \
1)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372329768*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"1aace3a8-c98e-4182-9da0-ac469fbe5985"],

Cell[BoxData["\<\"Time 4.0000000000*10^-8s: Alice Accepts Ack. \"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.9629783723301687`*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"046d496b-dcc3-4214-a48b-e602ebad1c32"],

Cell[BoxData["\<\"Time 4.0000000000*10^-8s: Alice Sends. Packet5 (Alt: \
0)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.9629783723305473`*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"8fe04433-a6d6-4f42-98fc-2dfa0b1c8a37"],

Cell[BoxData["\<\"Time 4.5000000000*10^-8s: Bob Receives. Packet5 (Alt: \
0)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372330945*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"80ab1d1a-b0d7-4a7a-8008-382bf698f854"],

Cell[BoxData["\<\"Time 4.5000000000*10^-8s: Bob Accepts. Packet5 (Alt: \
0)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.9629783723313217`*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"c2de2a71-ea3f-4972-b631-d76525111806"],

Cell[BoxData["\<\"Time 4.5000000000*10^-8s: Bob Sends Ack. (For Alt: \
0)\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372331716*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"6fdce9ce-db16-449a-a072-280471f49f10"],

Cell[BoxData["\<\"Time 4.5000000000*10^-8s: System Success. All messages \
reliably transmitted.\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372332106*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"4f7043db-cb59-4693-8d31-1a08d409464f"],

Cell[BoxData["\<\"\\n--- Data Received by Bob ---\"\>"], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.9629783723324957`*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"e95bcb9f-6eb1-4251-8326-eafcb34fe2f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Packet1\"\>", ",", "\<\"Packet2\"\>", ",", "\<\"Packet3\"\>", 
   ",", "\<\"Packet4\"\>", ",", "\<\"Packet5\"\>"}], "}"}]], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.96297837233288*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"dffc4100-81bd-43ac-9302-903608b97c89"],

Cell[BoxData[
 GraphicsBox[
  {GrayLevel[0.95], RectangleBox[{0, -0.5}, {49.50000000000001, 1.5}], 
   {Dashing[{Small, Small}], LineBox[{{0, 1}, {49.50000000000001, 1}}]}, 
   {Dashing[{Small, Small}], LineBox[{{0, 0}, {49.50000000000001, 0}}], {
     {GrayLevel[0.3], Thickness[Large], Arrowheads[0.04], 
      ArrowBox[{{0., 1}, {0.5, 0}}], InsetBox[
       StyleBox["\<\"Pkt 0\"\>",
        StripOnInput->False,
        FontFamily->"Helvetica",
        FontSize->10], {0.25, 0.6}]}, 
     {GrayLevel[0], Thickness[Large], Arrowheads[0.04], 
      ArrowBox[{{10., 1}, {10.5, 0}}], InsetBox[
       StyleBox["\<\"Pkt 1\"\>",
        StripOnInput->False,
        FontFamily->"Helvetica",
        FontSize->10], {10.25, 0.6}]}, 
     {GrayLevel[0.3], Thickness[Large], Arrowheads[0.04], 
      ArrowBox[{{20., 1}, {20.5, 0}}], InsetBox[
       StyleBox["\<\"Pkt 0\"\>",
        StripOnInput->False,
        FontFamily->"Helvetica",
        FontSize->10], {20.25, 0.6}]}, 
     {GrayLevel[0], Thickness[Large], Arrowheads[0.04], 
      ArrowBox[{{29.999999999999996`, 1}, {30.499999999999996`, 0}}], InsetBox[
       StyleBox["\<\"Pkt 1\"\>",
        StripOnInput->False,
        FontFamily->"Helvetica",
        FontSize->10], {30.249999999999996, 0.6}]}, 
     {GrayLevel[0.3], Thickness[Large], Arrowheads[0.04], 
      ArrowBox[{{40., 1}, {40.5, 0}}], InsetBox[
       StyleBox["\<\"Pkt 0\"\>",
        StripOnInput->False,
        FontFamily->"Helvetica",
        FontSize->10], {40.25, 0.6}]}, 
     {GrayLevel[0.3], Thickness[Large], Arrowheads[0.04], 
      ArrowBox[{{5., 0}, {5.5, 1}}], InsetBox[
       StyleBox["\<\"Ack 0\"\>",
        StripOnInput->False,
        FontFamily->"Helvetica",
        FontSize->10], {5.25, 0.6}]}, 
     {GrayLevel[0], Thickness[Large], Arrowheads[0.04], 
      ArrowBox[{{14.999999999999998`, 0}, {15.499999999999998`, 1}}], InsetBox[
       StyleBox["\<\"Ack 1\"\>",
        StripOnInput->False,
        FontFamily->"Helvetica",
        FontSize->10], {15.249999999999998, 0.6}]}, 
     {GrayLevel[0.3], Thickness[Large], Arrowheads[0.04], 
      ArrowBox[{{25., 0}, {25.5, 1}}], InsetBox[
       StyleBox["\<\"Ack 0\"\>",
        StripOnInput->False,
        FontFamily->"Helvetica",
        FontSize->10], {25.25, 0.6}]}, 
     {GrayLevel[0], Thickness[Large], Arrowheads[0.04], 
      ArrowBox[{{35., 0}, {35.5, 1}}], InsetBox[
       StyleBox["\<\"Ack 1\"\>",
        StripOnInput->False,
        FontFamily->"Helvetica",
        FontSize->10], {35.25, 0.6}]}, 
     {GrayLevel[0.3], Thickness[Large], Arrowheads[0.04], 
      ArrowBox[{{45., 0}, {45.5, 1}}], InsetBox[
       StyleBox["\<\"Ack 0\"\>",
        StripOnInput->False,
        FontFamily->"Helvetica",
        FontSize->10], {45.25, 0.6}]}}, InsetBox[
     StyleBox["\<\"Alice\"\>",
      StripOnInput->False,
      FontSize->12,
      FontWeight->Bold], {-2.25, 1}], InsetBox[
     StyleBox["\<\"Bob\"\>",
      StripOnInput->False,
      FontSize->12,
      FontWeight->Bold], {-2.25, 0}]}},
  AspectRatio->0.35,
  Epilog->{
    InsetBox[
     BoxData[
      FormBox[
       TagBox[
        GridBox[{{
           TemplateBox[{
             StyleBox["\"Legend:\"", Bold, StripOnInput -> False]}, 
            "RowDefault"]}, {
           TemplateBox[{
             GraphicsBox[{
               GrayLevel[0.3], 
               Thickness[Large], 
               ArrowBox[{{0, 0}, {0.5, 0}}]}, ImageSize -> {30, 10}], 
             "\" Alt Bit 0\""}, "RowDefault"]}, {
           TemplateBox[{
             GraphicsBox[{
               GrayLevel[0], 
               Thickness[Large], 
               ArrowBox[{{0, 0}, {0.5, 0}}]}, ImageSize -> {30, 10}], 
             "\" Alt Bit 1\""}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
       TraditionalForm]], 
     Scaled[{0.85, 0.8}]]},
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"Time (ns)\"", 12, StripOnInput -> False], TraditionalForm], 
    None},
  FrameTicks->{{{0., 
      FormBox[
       TemplateBox[{
         TagBox[
          InterpretationBox[
           StyleBox["\"0.\"", ShowStringCharacters -> False], 0., AutoDelete -> 
           True], ScientificForm[#, 3]& ], "\" ns\""}, "RowDefault"], 
       TraditionalForm]}}, None, None, None},
  ImagePadding->40,
  PlotRange->{{0, 47.25}, {-0.5, 1.5}}]], "Print",
 CellChangeTimes->{{3.9629692798457603`*^9, 3.962969289880492*^9}, {
   3.962970976358601*^9, 3.9629710006939783`*^9}, {3.9629748355878897`*^9, 
   3.962974845682817*^9}, {3.962975286550806*^9, 3.962975290215605*^9}, 
   3.962978372333955*^9},
 CellLabel->
  "During evaluation of \
In[267]:=",ExpressionUUID->"9b2cc29a-1d28-497f-92cd-87443c143658"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialization and Constants", "Section",
 CellChangeTimes->{{3.9629599412040358`*^9, 3.9629599418125887`*^9}, {
  3.962976461637974*^9, 3.962976463707608*^9}, {3.962977240069503*^9, 
  3.962977240519599*^9}},ExpressionUUID->"eeb1ff8e-a5b5-4391-b42f-\
760bf7d7c9d8"],

Cell["\<\
This Mathematica notebook simulates the classic Alternating Bit Protocol \
(ABP), a foundational mechanism for achieving reliable data transfer over an \
unreliable link. It serves as a baseline to contrast with the more advanced, \
physically-grounded protocols of Open Atomic Ethernet. The simulation models \
two entities, Alice (the sender) and Bob (the receiver), communicating over a \
link with configurable latency and packet loss probabilities. It meticulously \
logs each event\[LongDash]packet transmission, reception, loss, and timeout\
\[LongDash]to provide a clear, step-by-step trace of the protocol\
\[CloseCurlyQuote]s behavior. The final output visualizes this interaction on \
a timeline, illustrating how the simple act of alternating a single bit can \
impose order and guarantee delivery, albeit with performance trade-offs that \
motivate the Daedaelus approach.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.962976449259252*^9, 3.962976450044448*^9}, {3.962977235619433*^9, 
  3.96297723652151*^9}},ExpressionUUID->"fc7f9e18-e1ba-44d6-8d47-\
517c815d7c80"],

Cell["\<\
This section establishes the physical and logical parameters of our simulated \
link. We begin here to ground our model in a concrete reality, defining the \
constraints within which our protocol must operate. The constants for packet \
size, link length, and data rate are not arbitrary; they reflect a typical \
scenario in a local, rack-scale environment where Open Atomic Ethernet is \
designed to excel. Unlike conventional models that often abstract away these \
details, we emphasize them because, in our philosophy, the physical \
characteristics of the communication medium are inseparable from the protocol\
\[CloseCurlyQuote]s behavior.\
\>", "Affiliation",
 CellChangeTimes->{{3.962959958952446*^9, 3.962959960700286*^9}, {
  3.962976453241884*^9, 3.9629764549937057`*^9}, {3.962977246740715*^9, 
  3.962977262847377*^9}, {3.962977323417676*^9, 
  3.962977323525506*^9}},ExpressionUUID->"1fe4fda8-01cd-48b2-874d-\
43bbd2fb6362"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Event Logging and Simulation Engine", "Section",
 CellChangeTimes->{{3.9629599412040358`*^9, 3.9629599418125887`*^9}, {
  3.962976461637974*^9, 3.962976463707608*^9}, {3.962977240069503*^9, 
  3.962977270086713*^9}},ExpressionUUID->"02e973a8-a162-4932-ae60-\
64ecba18f1d5"],

Cell["\<\
The core of any event-driven simulation is its ability to manage a timeline \
of discrete events. These functions, LogEvent, EnqueueEvent, and \
DequeueNextEvent, form the machinery of our simulation\[CloseCurlyQuote]s \
virtual time. We don\[CloseCurlyQuote]t rely on wall-clock time or \
timestamps, which are illusions; instead, our simulation progresses through a \
causally ordered sequence of events. This mirrors the Daedaelus protocol\
\[CloseCurlyQuote]s event-driven nature, where progress is marked not by the \
passage of time, but by the completion of meaningful interactions. This \
approach allows us to create a deterministic, reproducible model for \
analyzing protocol behavior.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.962976449259252*^9, 3.962976450044448*^9}, {3.962977235619433*^9, 
  3.96297723652151*^9}, {3.962977278097171*^9, 
  3.962977280248294*^9}},ExpressionUUID->"188b6653-43cb-416a-bcd8-\
7693fc3576a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stop-and-Wait (SAW) Protocol Simulation", "Section",
 CellChangeTimes->{{3.9629599412040358`*^9, 3.9629599418125887`*^9}, {
  3.962976461637974*^9, 3.962976463707608*^9}, {3.962977240069503*^9, 
  3.962977270086713*^9}, {3.962977302694579*^9, 
  3.962977303262985*^9}},ExpressionUUID->"422f61d9-cded-4d4b-a681-\
596e454a27c8"],

Cell["\<\
This is the heart of the notebook: a complete, agent-based simulation of the \
Alternating Bit Protocol. This protocol is the simplest form of what Bill \
Lynch described as necessary for reliable transmission. It uses a single bit \
to ensure that messages are received and acknowledged in the correct \
sequence, providing exactly-once semantics. However, as Metcalfe\
\[CloseCurlyQuote]s original analysis showed, this stop-and-wait approach can \
severely throttle bandwidth, especially on links with high latency.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.962976449259252*^9, 3.962976450044448*^9}, {3.962977235619433*^9, 
  3.96297723652151*^9}, {3.962977278097171*^9, 3.962977280248294*^9}, {
  3.96297731063553*^9, 
  3.962977312462914*^9}},ExpressionUUID->"54601819-8984-4c26-8a74-\
095dc0978879"],

Cell["\<\
Our simulation models this trade-off explicitly. Alice, the sender, will not \
transmit a new packet until she receives a correct acknowledgment for the \
previous one. If an acknowledgment is lost or delayed, she is forced to rely \
on a timeout and retry, a mechanism we view as \[OpenCurlyDoubleQuote]the \
root of all evil\[CloseCurlyDoubleQuote] because it introduces unbounded tail \
latency and turns every uncertainty into a potential duplicate. This model \
serves as our \[OpenCurlyDoubleQuote]code as proof,\[CloseCurlyDoubleQuote] a \
clear, executable demonstration of the limitations of conventional, \
best-effort networking and the fundamental problems that Open Atomic Ethernet \
is designed to solve. It highlights why we must move beyond protocols that \
merely cope with unreliability and instead build systems where reliability is \
an intrinsic property of the link itself.\
\>", "Affiliation",
 CellChangeTimes->{{3.962959958952446*^9, 3.962959960700286*^9}, {
  3.962976453241884*^9, 3.9629764549937057`*^9}, {3.962977246740715*^9, 
  3.962977317981017*^9}},ExpressionUUID->"b81597e0-ce84-4072-9889-\
234e232c3dc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Running the Simulation and Displaying Results", "Section",
 CellChangeTimes->{{3.9629599412040358`*^9, 3.9629599418125887`*^9}, {
  3.962976461637974*^9, 3.962976463707608*^9}, {3.962977240069503*^9, 
  3.962977270086713*^9}, {3.962977302694579*^9, 3.962977303262985*^9}, {
  3.9629773337561502`*^9, 
  3.9629773344292107`*^9}},ExpressionUUID->"0d6ca76f-6dc9-4ed2-8600-\
e61d3fb4e846"],

Cell["\<\
Here, we execute the simulation and present the results in two forms: a raw \
text log and a graphical timeline. The log provides a granular, \
moment-by-moment account of the protocol\[CloseCurlyQuote]s execution, making \
the causal chain of events explicit. It is our version of a \
\[OpenCurlyDoubleQuote]proof-of-history,\[CloseCurlyDoubleQuote] allowing for \
formal auditing of the simulation\[CloseCurlyQuote]s behavior. The timeline \
visualization translates this log into an intuitive graphical format, making \
the patterns of interaction, delay, and recovery immediately apparent. This \
dual presentation is central to our \[OpenCurlyDoubleQuote]code as proof\
\[CloseCurlyDoubleQuote] methodology: we provide both the detailed, \
verifiable data and a clear, compelling visualization to make our arguments \
accessible and irrefutable.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.962976449259252*^9, 3.962976450044448*^9}, {3.962977235619433*^9, 
  3.96297723652151*^9}, {3.962977278097171*^9, 3.962977280248294*^9}, {
  3.96297731063553*^9, 3.962977312462914*^9}, {3.9629773425143433`*^9, 
  3.962977347334412*^9}},ExpressionUUID->"f3e5179c-5d0a-46ea-a125-\
b90c1c8a0978"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Timeline Visualization", "Section",
 CellChangeTimes->{{3.9629599412040358`*^9, 3.9629599418125887`*^9}, {
  3.962976461637974*^9, 3.962976463707608*^9}, {3.962977240069503*^9, 
  3.962977270086713*^9}, {3.962977302694579*^9, 3.962977303262985*^9}, {
  3.9629773337561502`*^9, 
  3.962977353912526*^9}},ExpressionUUID->"ddc42493-5f15-4833-bd1d-\
6f12581199ca"],

Cell[CellGroupData[{

Cell["\<\
This final block of code is dedicated to creating a high-quality \
visualization of the protocol\[CloseCurlyQuote]s execution. We parse the raw \
event log, transforming it into a set of graphical \
primitives\[LongDash]arrows representing packets and acknowledgments. The \
timeline is carefully annotated, showing the progression of events in \
nanoseconds and clearly distinguishing between packets sent with an \
alternating bit of 0 or 1. This visualization is not merely decorative; it is \
a critical tool for understanding the temporal dynamics of the protocol. It \
makes the \[OpenCurlyDoubleQuote]stop-and-wait\[CloseCurlyDoubleQuote] \
behavior tangible, showing the idle time on the link as Alice waits for an \
acknowledgment. It also clearly illustrates the consequences of packet loss \
and timeouts, showing the retransmission of packets. This visual proof is a \
powerful way to communicate the core arguments of the Daedaelus project: that \
conventional networking protocols are fraught with inefficiencies and that a \
new, more principled approach is required.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.962976449259252*^9, 3.962976450044448*^9}, {3.962977235619433*^9, 
  3.96297723652151*^9}, {3.962977278097171*^9, 3.962977280248294*^9}, {
  3.96297731063553*^9, 3.962977312462914*^9}, {3.9629773425143433`*^9, 
  3.962977361752524*^9}},ExpressionUUID->"7c5e4df6-d6e3-45ea-a780-\
0522ee7126a0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<DaedaelusProof`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<DaedaelusProof`\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"SelectedHypercells", "::", "usage"}], "MessageName"], "=", 
   "\"\<SelectedHypercells[] draws the 10\[Times]10 N2N lattice with two \
radius-1 hypercells (centres {3,3} and {7,8}) highlighted.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n2nLattice", "=", 
   RowBox[{"GridGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "10"}], "}"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "None"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hypercell", "[", 
    RowBox[{"g_Graph", ",", "ctr_List"}], "]"}], ":=", 
   RowBox[{"NeighborhoodGraph", "[", 
    RowBox[{"g", ",", "ctr", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectedHypercells", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h1", ",", "h2"}], "}"}], ",", 
     RowBox[{
      RowBox[{"h1", "=", 
       RowBox[{"hypercell", "[", 
        RowBox[{"n2nLattice", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"h2", "=", 
       RowBox[{"hypercell", "[", 
        RowBox[{"n2nLattice", ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "8"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"HighlightGraph", "[", 
       RowBox[{"n2nLattice", ",", 
        RowBox[{"{", 
         RowBox[{"h1", ",", "h2"}], "}"}], ",", 
        RowBox[{"GraphLayout", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<GridEmbedding\>\"", ",", 
           RowBox[{"\"\<Dimension\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"10", ",", "10"}], "}"}]}]}], "}"}]}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<Selected Hypercells on N2N Lattice\>\""}]}], "]"}]}]}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}], "\n", 
 RowBox[{"SelectedHypercells", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.96297503586794*^9, 3.9629750398165092`*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"45e8ca4b-702e-49df-aa11-1e8d59f7f216"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
       74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
       92, 93, 94, 95, 96, 97, 98, 99, 100}, {Null, 
       SparseArray[Automatic, {100, 100}, 0, {1, {CompressedData["
1:eJwt0D0oxAEAxuE/l6grEnV1ri5duSRJkq5LOnXDFep0uqgrH9GVcoPBYDAY
blDKcIPBcIPBcIO6MhgMBoPBcINSBoPBYDAYDMoj3nrmt36D65XFnbYgCDaD
v7XTQRdhuumlnwhRYsRJkGSEMSaYIs0Ms2TJMU+eJZYpsfb/W2abCrvssc8B
h1Q54pgTapxyRp1zLmhwSZMrrrnhljvueaDFI08888Irb7zzwSdffP9GEShE
J2F66CPCAHESDDHMKONMkmKaDFlyzLFAngJFViixygZblPkBqXoqPA==
          "], CompressedData["
1:eJwNwsWWggAAAEDsQgETxUKxBZOwsZVUDOxAD3vb/7/tzhvc+NUMMwAAPyYA
+A+YPSYLaLZ6LTaf1Q7ZHLDdiThcfqc74AqawJDZ4w1bQF/E6oVQmw+O2iEk
5oD9mBMJxF3+YMIdSHrCKTAUSXvDKO6LRDMQGsvCUYxAYvGcH0vkA/FkIZgo
htKlcAovR9KZCopnq9EMQcayOQoj8rV4rlBP5IuNZKGZKrfSpUobL1fpTIVk
slWKJcgal6PqnXyt0S3Um71io19qD8otelhpM6MqzfIkw40ptjOpcd1pvdOb
Nbr9ebO3aA2X7cFoRQ/5NTMaCyw/EbnxVOpMZnJ3Old6s4Xan28Gq+1wudZG
K2HHr8X9WJAOE1E+TiVFn8nqaa5szgv1stSuq+3uttb2d2F3eIj741M66C/5
eHor+tlQT5fP5vzd3rTrfXd77O/Pw+N1fL71l3F6f87G9/L5A8h9SRc=
          "]}, Pattern}]}, {GraphHighlight -> {
         UndirectedEdge[3, 4], 9, 7, 4, 18, 3, 17, 
         UndirectedEdge[7, 17], 
         UndirectedEdge[7, 8], 8, 
         UndirectedEdge[7, 6], 
         UndirectedEdge[8, 18], 13, 
         UndirectedEdge[17, 18], 
         UndirectedEdge[3, 2], 
         UndirectedEdge[3, 13], 2, 6, 
         UndirectedEdge[8, 9]}, 
       GraphHighlightStyle -> {3 -> {VertexStyle -> Directive[
             Hue[0, 1, 0.8], 
             EdgeForm[{
               Hue[0, 1, 0.8], 
               Opacity[1]}]]}, 17 -> {VertexStyle -> Directive[
             Hue[0.14, 1, 0.9], 
             EdgeForm[{
               Hue[0.14, 1, 0.9], 
               Opacity[1]}]]}, UndirectedEdge[8, 9] -> {EdgeStyle -> Directive[
             Hue[0.14, 1, 0.9], 
             Opacity[1]]}, UndirectedEdge[7, 6] -> {EdgeStyle -> Directive[
             Hue[0.14, 1, 0.9], 
             Opacity[1]]}, UndirectedEdge[3, 2] -> {EdgeStyle -> Directive[
             Hue[0, 1, 0.8], 
             Opacity[1]]}, 9 -> {VertexStyle -> Directive[
             Hue[0.14, 1, 0.9], 
             EdgeForm[{
               Hue[0.14, 1, 0.9], 
               Opacity[1]}]]}, 7 -> {VertexStyle -> Directive[
             Hue[0.14, 1, 0.9], 
             EdgeForm[{
               Hue[0.14, 1, 0.9], 
               Opacity[1]}]]}, 
         UndirectedEdge[7, 17] -> {EdgeStyle -> Directive[
             Hue[0.14, 1, 0.9], 
             Opacity[1]]}, 18 -> {VertexStyle -> Directive[
             Hue[0.14, 1, 0.9], 
             EdgeForm[{
               Hue[0.14, 1, 0.9], 
               Opacity[1]}]]}, UndirectedEdge[3, 4] -> {EdgeStyle -> Directive[
             Hue[0, 1, 0.8], 
             Opacity[1]]}, 8 -> {VertexStyle -> Directive[
             Hue[0.14, 1, 0.9], 
             EdgeForm[{
               Hue[0.14, 1, 0.9], 
               Opacity[1]}]]}, 
         UndirectedEdge[3, 13] -> {EdgeStyle -> Directive[
             Hue[0, 1, 0.8], 
             Opacity[1]]}, 6 -> {VertexStyle -> Directive[
             Hue[0.14, 1, 0.9], 
             EdgeForm[{
               Hue[0.14, 1, 0.9], 
               Opacity[1]}]]}, 
         UndirectedEdge[8, 18] -> {EdgeStyle -> Directive[
             Hue[0.14, 1, 0.9], 
             Opacity[1]]}, 13 -> {VertexStyle -> Directive[
             Hue[0, 1, 0.8], 
             EdgeForm[{
               Hue[0, 1, 0.8], 
               Opacity[1]}]]}, 2 -> {VertexStyle -> Directive[
             Hue[0, 1, 0.8], 
             EdgeForm[{
               Hue[0, 1, 0.8], 
               Opacity[1]}]]}, 
         UndirectedEdge[17, 18] -> {EdgeStyle -> Directive[
             Hue[0.14, 1, 0.9], 
             Opacity[1]]}, UndirectedEdge[7, 8] -> {EdgeStyle -> Directive[
             Hue[0.14, 1, 0.9], 
             Opacity[1]]}, 4 -> {VertexStyle -> Directive[
             Hue[0, 1, 0.8], 
             EdgeForm[{
               Hue[0, 1, 0.8], 
               Opacity[1]}]]}}, 
       GraphLayout -> {"GridEmbedding", "Dimension" -> {10, 10}}, PlotLabel -> 
       "Selected Hypercells on N2N Lattice", VertexLabels -> {None}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJx11DGqwzAQhGGRyqUKFSpUKIvu8XyGHCEkda6eIyQhiPA+LIMZfuNimJ3d
8/VxuZ9SSrf3+9Hv8/w71rT/5w3OcIEr3OAOBzz2Yx9pP9YNznCBK9zgDgc8
/ZmLPraFZrjAFW5whwOe/pyTuegjL7TAFW5whwOe/uyNczIXfZSFVrjBHQ54
+rPH9sY5mYs+6kIb3OGApz/3yh7bG+dkLvpoC+1wwIP/3Hv3zF7bI+dmTvpS
Ax589w659+6ZvbZHzs2c9KUOdHUXvUPuvXtmr+2RczOnn68XY/ZWNg==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {1., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {2., 1.}}, 0.061894273127753294`]}, 
         {Hue[0, 1, 0.8], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1., 2.}, {1., 3.}}, 0.061894273127753294`]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{1., 2.}, {2., 2.}}, 0.061894273127753294`]}, 
         {Hue[0, 1, 0.8], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1., 3.}, {1., 4.}}, 0.061894273127753294`]}}, 
         {Hue[0, 1, 0.8], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1., 3.}, {2., 3.}}, 0.061894273127753294`]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{1., 4.}, {1., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1., 4.}, {2., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1., 5.}, {1., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1., 5.}, {2., 5.}}, 0.061894273127753294`]}, 
         {Hue[0.14, 1, 0.9], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1., 6.}, {1., 7.}}, 0.061894273127753294`]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{1., 6.}, {2., 6.}}, 0.061894273127753294`]}, 
         {Hue[0.14, 1, 0.9], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1., 7.}, {1., 8.}}, 0.061894273127753294`]}}, 
         {Hue[0.14, 1, 0.9], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1., 7.}, {2., 7.}}, 0.061894273127753294`]}}, 
         {Hue[0.14, 1, 0.9], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1., 8.}, {1., 9.}}, 0.061894273127753294`]}}, 
         {Hue[0.14, 1, 0.9], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1., 8.}, {2., 8.}}, 0.061894273127753294`]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{1., 9.}, {1., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1., 9.}, {2., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1., 10.}, {2., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 1.}, {2., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 1.}, {3., 1.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 2.}, {2., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 2.}, {3., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 3.}, {2., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 3.}, {3., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 4.}, {2., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 4.}, {3., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 5.}, {2., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 5.}, {3., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 6.}, {2., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 6.}, {3., 6.}}, 0.061894273127753294`]}, 
         {Hue[0.14, 1, 0.9], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{2., 7.}, {2., 8.}}, 0.061894273127753294`]}}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 7.}, {3., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 8.}, {2., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 8.}, {3., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 9.}, {2., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 9.}, {3., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{2., 10.}, {3., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 1.}, {3., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 1.}, {4., 1.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 2.}, {3., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 2.}, {4., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 3.}, {3., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 3.}, {4., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 4.}, {3., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 4.}, {4., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 5.}, {3., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 5.}, {4., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 6.}, {3., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 6.}, {4., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 7.}, {3., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 7.}, {4., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 8.}, {3., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 8.}, {4., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 9.}, {3., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 9.}, {4., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{3., 10.}, {4., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 1.}, {4., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 1.}, {5., 1.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 2.}, {4., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 2.}, {5., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 3.}, {4., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 3.}, {5., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 4.}, {4., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 4.}, {5., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 5.}, {4., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 5.}, {5., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 6.}, {4., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 6.}, {5., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 7.}, {4., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 7.}, {5., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 8.}, {4., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 8.}, {5., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 9.}, {4., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 9.}, {5., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 10.}, {5., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 1.}, {5., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 1.}, {6., 1.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 2.}, {5., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 2.}, {6., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 3.}, {5., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 3.}, {6., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 4.}, {5., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 4.}, {6., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 5.}, {5., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 5.}, {6., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 6.}, {5., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 6.}, {6., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 7.}, {5., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 7.}, {6., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 8.}, {5., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 8.}, {6., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 9.}, {5., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 9.}, {6., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{5., 10.}, {6., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 1.}, {6., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 1.}, {7., 1.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 2.}, {6., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 2.}, {7., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 3.}, {6., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 3.}, {7., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 4.}, {6., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 4.}, {7., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 5.}, {6., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 5.}, {7., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 6.}, {6., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 6.}, {7., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 7.}, {6., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 7.}, {7., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 8.}, {6., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 8.}, {7., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 9.}, {6., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 9.}, {7., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{6., 10.}, {7., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 1.}, {7., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 1.}, {8., 1.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 2.}, {7., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 2.}, {8., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 3.}, {7., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 3.}, {8., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 4.}, {7., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 4.}, {8., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 5.}, {7., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 5.}, {8., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 6.}, {7., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 6.}, {8., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 7.}, {7., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 7.}, {8., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 8.}, {7., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 8.}, {8., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 9.}, {7., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 9.}, {8., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{7., 10.}, {8., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 1.}, {8., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 1.}, {9., 1.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 2.}, {8., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 2.}, {9., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 3.}, {8., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 3.}, {9., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 4.}, {8., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 4.}, {9., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 5.}, {8., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 5.}, {9., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 6.}, {8., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 6.}, {9., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 7.}, {8., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 7.}, {9., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 8.}, {8., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 8.}, {9., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 9.}, {8., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 9.}, {9., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{8., 10.}, {9., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 1.}, {9., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 1.}, {10., 1.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 2.}, {9., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 2.}, {10., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 3.}, {9., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 3.}, {10., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 4.}, {9., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 4.}, {10., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 5.}, {9., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 5.}, {10., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 6.}, {9., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 6.}, {10., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 7.}, {9., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 7.}, {10., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 8.}, {9., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 8.}, {10., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 9.}, {9., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 9.}, {10., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{9., 10.}, {10., 10.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{10., 1.}, {10., 2.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{10., 2.}, {10., 3.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{10., 3.}, {10., 4.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{10., 4.}, {10., 5.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{10., 5.}, {10., 6.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{10., 6.}, {10., 7.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{10., 7.}, {10., 8.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{10., 8.}, {10., 9.}}, 0.061894273127753294`]}, 
         {Arrowheads[0.], 
          ArrowBox[{{10., 9.}, {10., 10.}}, 0.061894273127753294`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.061894273127753294], 
         {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
          DiskBox[2, 0.061894273127753294]}, 
         {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
          DiskBox[3, 0.061894273127753294]}, 
         {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
          DiskBox[4, 0.061894273127753294]}, DiskBox[5, 0.061894273127753294], 
         {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
          DiskBox[6, 0.061894273127753294]}, 
         {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
          DiskBox[7, 0.061894273127753294]}, 
         {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
          DiskBox[8, 0.061894273127753294]}, 
         {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
          DiskBox[9, 0.061894273127753294]}, 
         DiskBox[10, 0.061894273127753294], DiskBox[11, 0.061894273127753294],
          DiskBox[12, 0.061894273127753294], 
         {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
          DiskBox[13, 0.061894273127753294]}, 
         DiskBox[14, 0.061894273127753294], DiskBox[15, 0.061894273127753294],
          DiskBox[16, 0.061894273127753294], 
         {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
          DiskBox[17, 0.061894273127753294]}, 
         {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
          DiskBox[18, 0.061894273127753294]}, 
         DiskBox[19, 0.061894273127753294], DiskBox[20, 0.061894273127753294],
          DiskBox[21, 0.061894273127753294], 
         DiskBox[22, 0.061894273127753294], DiskBox[23, 0.061894273127753294],
          DiskBox[24, 0.061894273127753294], 
         DiskBox[25, 0.061894273127753294], DiskBox[26, 0.061894273127753294],
          DiskBox[27, 0.061894273127753294], 
         DiskBox[28, 0.061894273127753294], DiskBox[29, 0.061894273127753294],
          DiskBox[30, 0.061894273127753294], 
         DiskBox[31, 0.061894273127753294], DiskBox[32, 0.061894273127753294],
          DiskBox[33, 0.061894273127753294], 
         DiskBox[34, 0.061894273127753294], DiskBox[35, 0.061894273127753294],
          DiskBox[36, 0.061894273127753294], 
         DiskBox[37, 0.061894273127753294], DiskBox[38, 0.061894273127753294],
          DiskBox[39, 0.061894273127753294], 
         DiskBox[40, 0.061894273127753294], DiskBox[41, 0.061894273127753294],
          DiskBox[42, 0.061894273127753294], 
         DiskBox[43, 0.061894273127753294], DiskBox[44, 0.061894273127753294],
          DiskBox[45, 0.061894273127753294], 
         DiskBox[46, 0.061894273127753294], DiskBox[47, 0.061894273127753294],
          DiskBox[48, 0.061894273127753294], 
         DiskBox[49, 0.061894273127753294], DiskBox[50, 0.061894273127753294],
          DiskBox[51, 0.061894273127753294], 
         DiskBox[52, 0.061894273127753294], DiskBox[53, 0.061894273127753294],
          DiskBox[54, 0.061894273127753294], 
         DiskBox[55, 0.061894273127753294], DiskBox[56, 0.061894273127753294],
          DiskBox[57, 0.061894273127753294], 
         DiskBox[58, 0.061894273127753294], DiskBox[59, 0.061894273127753294],
          DiskBox[60, 0.061894273127753294], 
         DiskBox[61, 0.061894273127753294], DiskBox[62, 0.061894273127753294],
          DiskBox[63, 0.061894273127753294], 
         DiskBox[64, 0.061894273127753294], DiskBox[65, 0.061894273127753294],
          DiskBox[66, 0.061894273127753294], 
         DiskBox[67, 0.061894273127753294], DiskBox[68, 0.061894273127753294],
          DiskBox[69, 0.061894273127753294], 
         DiskBox[70, 0.061894273127753294], DiskBox[71, 0.061894273127753294],
          DiskBox[72, 0.061894273127753294], 
         DiskBox[73, 0.061894273127753294], DiskBox[74, 0.061894273127753294],
          DiskBox[75, 0.061894273127753294], 
         DiskBox[76, 0.061894273127753294], DiskBox[77, 0.061894273127753294],
          DiskBox[78, 0.061894273127753294], 
         DiskBox[79, 0.061894273127753294], DiskBox[80, 0.061894273127753294],
          DiskBox[81, 0.061894273127753294], 
         DiskBox[82, 0.061894273127753294], DiskBox[83, 0.061894273127753294],
          DiskBox[84, 0.061894273127753294], 
         DiskBox[85, 0.061894273127753294], DiskBox[86, 0.061894273127753294],
          DiskBox[87, 0.061894273127753294], 
         DiskBox[88, 0.061894273127753294], DiskBox[89, 0.061894273127753294],
          DiskBox[90, 0.061894273127753294], 
         DiskBox[91, 0.061894273127753294], DiskBox[92, 0.061894273127753294],
          DiskBox[93, 0.061894273127753294], 
         DiskBox[94, 0.061894273127753294], DiskBox[95, 0.061894273127753294],
          DiskBox[96, 0.061894273127753294], 
         DiskBox[97, 0.061894273127753294], DiskBox[98, 0.061894273127753294],
          DiskBox[99, 0.061894273127753294], 
         DiskBox[100, 0.061894273127753294]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotLabel->FormBox[
   "\"Selected Hypercells on N2N Lattice\"", TraditionalForm]]], "Output",
 CellChangeTimes->{{3.962974937478148*^9, 3.962974991198292*^9}, {
   3.962975036250341*^9, 3.962975045854023*^9}, 3.962975292346922*^9, 
   3.962978375971732*^9},
 CellLabel->
  "Out[314]=",ExpressionUUID->"cc7fe227-477f-453b-ba28-4bc4685edac2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Package Initialization", "Section",
 CellChangeTimes->{{3.9629599412040358`*^9, 3.9629599418125887`*^9}, {
   3.962976461637974*^9, 3.962976463707608*^9}, {3.962977240069503*^9, 
   3.962977270086713*^9}, {3.962977302694579*^9, 3.962977303262985*^9}, 
   3.962977395408943*^9, {3.962977428469879*^9, 
   3.9629774346955633`*^9}},ExpressionUUID->"519d48d5-90a8-44f3-b696-\
03a39683fa68"],

Cell["\<\
This Mathematica notebook serves as a \[OpenCurlyDoubleQuote]code as proof\
\[CloseCurlyDoubleQuote] for visualizing the core architectural components of \
the Daedaelus system: the N2N (Neighbor-to-Neighbor) Lattice and the \
Hypercell. It defines a simple function to generate the lattice and another \
to identify a hypercell within that lattice. The final output renders a 10x10 \
N2N lattice and highlights two distinct hypercells, demonstrating how these \
fundamental, self-contained computational units are situated within the \
broader, resilient fabric of the network. This visualization makes tangible \
the core Daedaelus principle of building complex systems from simple, \
locally-aware, and fault-tolerant building blocks.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
   3.962976449259252*^9, 3.962976450044448*^9}, {3.962977235619433*^9, 
   3.96297723652151*^9}, {3.962977278097171*^9, 3.962977280248294*^9}, {
   3.96297731063553*^9, 3.962977312462914*^9}, 3.9629773943233232`*^9, {
   3.962977430446239*^9, 
   3.962977431468014*^9}},ExpressionUUID->"9362b6e6-d15f-472b-b582-\
091b2ab74271"],

Cell["\<\
Here, we define a self-contained Mathematica package, DaedaelusProof. This \
encapsulates our logic, ensuring that the concepts and functions we define\
\[LongDash]like the N2N Lattice and the Hypercell\[LongDash]are cleanly \
separated from the global context. This mirrors our architectural philosophy: \
building complex systems from well-defined, modular components with clear \
boundaries. The usage message for SelectedHypercells acts as our API \
documentation, explaining its purpose: to visualize the foundational \
structures of our network.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
   3.962976449259252*^9, 3.962976450044448*^9}, {3.962977235619433*^9, 
   3.96297723652151*^9}, {3.962977278097171*^9, 3.962977280248294*^9}, {
   3.96297731063553*^9, 3.962977312462914*^9}, 3.9629773943233232`*^9, {
   3.962977430446239*^9, 
   3.962977440227504*^9}},ExpressionUUID->"d1494d03-f8d4-4c9a-82c9-\
6752cf6a98bf"],

Cell[TextData[{
 StyleBox["Private Implementation",
  FontWeight->"Bold"],
 "\nThis section contains the core logic for our architectural proof. We \
define the foundational elements of the Daedaelus topology here.\n\n",
 StyleBox["N2N Lattice Definition\n",
  FontWeight->"Bold"],
 "We create the n2nLattice as a 10x10 GridGraph. This represents our physical \
groundplane\[LongDash]a uniform, resilient fabric of directly connected \
nodes. We deliberately avoid the fragile, hierarchical structures of \
conventional Clos networks. In the Daedaelus model, every node is a peer, \
connected to its immediate neighbors. This distributed topology is inherently \
more resilient; as the saying goes, \[OpenCurlyDoubleQuote]failed nodes are \
routed around, and many links must fail before any node is finally isolated.\
\[CloseCurlyDoubleQuote]  This simple grid is the canvas upon which all \
higher-level logical and virtual structures, or TRAPHs (Tree-gRAPHs), are \
built.",
 StyleBox["\n\nHypercell Definition\n",
  FontWeight->"Bold"],
 "The hypercell function defines the \[OpenCurlyDoubleQuote]9-Cell deployable \
unit of distributed computation\[CloseCurlyDoubleQuote] that is a cornerstone \
of our architecture. A hypercell is not just an arbitrary collection of \
nodes; it is a \[OpenCurlyDoubleQuote]natural unit of fault-tolerance\
\[CloseCurlyDoubleQuote]  and the basis for local algorithms like consensus \
and routing. It is defined as a central node and its immediate neighbors (a \n\
\nNeighborhoodGraph with a radius of 1). Each cell is, by definition, the \
center of its own tile, making it the \[OpenCurlyDoubleQuote]Captain of its \
own world for the purpose of initiating distributed algorithms\
\[CloseCurlyDoubleQuote]. This function captures that critical concept, \
allowing us to identify and operate on these fundamental building blocks \
within the larger N2N lattice.\n\n",
 StyleBox["Visualization Function",
  FontWeight->"Bold"],
 "\nSelectedHypercells is the function that brings our concepts to life. It \
creates an instance of our 10x10 n2nLattice and then uses the hypercell \
function to identify two distinct, non-overlapping hypercells within it. By \
highlighting these two units, the HighlightGraph function provides a powerful \
visual proof of our architectural principles. It demonstrates how the global \
fabric is composed of these local, autonomous, and fault-tolerant units. This \
is the essence of our philosophy: \[OpenCurlyDoubleQuote]Manage on a Tree, \
Compute on a Graph\[CloseCurlyDoubleQuote]. The visualization shows discrete, \
manageable units of computation existing within a larger, interconnected \
graph, ready for the Graph Virtual Machine (GVM) to orchestrate.\n\n",
 StyleBox["Package Conclusion and Execution",
  FontWeight->"Bold"],
 "\nFinally, we close the package definition and execute our main function. \
The resulting visualization is the direct output of our \
\[OpenCurlyDoubleQuote]code as proof,\[CloseCurlyDoubleQuote] a clear and \
unambiguous representation of the foundational D\[CapitalAE]D\[CapitalAE]LUS \
topology. It is not a simulation of behavior, but a static depiction of the \
architectural principles themselves, rendered directly from their formal \
definitions in code."
}], "Affiliation",
 CellChangeTimes->{{3.962959958952446*^9, 3.962959960700286*^9}, {
   3.962976453241884*^9, 3.9629764549937057`*^9}, {3.962977246740715*^9, 
   3.962977317981017*^9}, 3.962977392706758*^9, {3.9629774474495173`*^9, 
   3.9629775041728897`*^9}},ExpressionUUID->"2f8e55fb-5502-455a-8303-\
58582634f8ef"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{
    RowBox[{"centralizedGraph", "=", 
     RowBox[{"StarGraph", "[", 
      RowBox[{"47", ",", 
       RowBox[{"GraphLayout", "\[Rule]", "\"\<RadialEmbedding\>\""}], ",", 
       RowBox[{"VertexLabels", "\[Rule]", "None"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Centralized (47 Nodes, 46 Links)\>\""}]}],
       "]"}]}], ";", 
    RowBox[{"decentralizedGraph", "=", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"EdgeList", "[", 
        RowBox[{"NestGraph", "[", 
         RowBox[{
          RowBox[{"CompleteGraph", "[", "7", "]"}], ",", "2"}], "]"}], "]"}], 
       ",", 
       RowBox[{
       "GraphLayout", "\[Rule]", "\"\<SpringElectricalEmbedding\>\""}], ",", 
       RowBox[{"VertexLabels", "\[Rule]", "None"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Decentralized (Approx. 47 Nodes)\>\""}]}],
       "]"}]}], ";", 
    RowBox[{"distributedGraph", "=", 
     RowBox[{"GridGraph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "7"}], "}"}], ",", 
       RowBox[{"VertexLabels", "\[Rule]", "None"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Distributed (49 Nodes, 98 Links)\>\""}]}],
       "]"}]}], ";", 
    RowBox[{
     RowBox[{"makeTorusGrid", "[", 
      RowBox[{"{", 
       RowBox[{"m_", ",", "n_"}], "}"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"coords", ",", "wrap", ",", "edges"}], "}"}], ",", 
       RowBox[{
        RowBox[{"coords", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "j"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "m"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "1"}], 
          "]"}]}], ";", 
        RowBox[{
         RowBox[{"wrap", "[", 
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"i", ",", "m", ",", "1"}], "]"}], ",", "j"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Mod", "[", 
              RowBox[{"j", ",", "n", ",", "1"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"i", ",", "m", ",", "1"}], "]"}], ",", 
             RowBox[{"Mod", "[", 
              RowBox[{"j", ",", "n", ",", "1"}], "]"}]}], "}"}]}], "}"}]}], 
        ";", 
        RowBox[{"edges", "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"i", ",", "j"}], "}"}], "\[UndirectedEdge]", 
                  "#1"}], "&"}], ")"}], "/@", 
               RowBox[{"wrap", "[", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "j"}], "}"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "m"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "2"}], 
           "]"}], "]"}]}], ";", 
        RowBox[{"Graph", "[", 
         RowBox[{"coords", ",", "edges", ",", 
          RowBox[{"VertexLabels", "\[Rule]", "None"}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<Transaction Fabric (49 Nodes, Toroidal)\>\""}]}], "]"}]}]}], 
      "]"}]}], ";", 
    RowBox[{"transactionFabric", "=", 
     RowBox[{"makeTorusGrid", "[", 
      RowBox[{"{", 
       RowBox[{"7", ",", "7"}], "}"}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"countSpanningTrees", "[", "g_Graph", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"lap", ",", "minor"}], "}"}], ",", 
       RowBox[{
        RowBox[{"lap", "=", 
         RowBox[{"LaplacianMatrix", "[", "g", "]"}]}], ";", 
        RowBox[{"minor", "=", 
         RowBox[{"lap", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"2", ";;", "All"}], ",", 
           RowBox[{"2", ";;", "All"}]}], "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{"Round", "[", 
         RowBox[{"Det", "[", "minor", "]"}], "]"}]}]}], "]"}]}], ";", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "centralizedGraph", ",", "decentralizedGraph", ",", 
          "distributedGraph", ",", "transactionFabric"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<Spanning Trees: \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"countSpanningTrees", "[", "centralizedGraph", "]"}], 
            "]"}]}], ",", 
          RowBox[{"\"\<Spanning Trees: \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"countSpanningTrees", "[", "decentralizedGraph", "]"}], 
            "]"}]}], ",", 
          RowBox[{"\"\<Spanning Trees: \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"countSpanningTrees", "[", "distributedGraph", "]"}], 
            "]"}]}], ",", 
          RowBox[{"\"\<Spanning Trees: \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"countSpanningTrees", "[", "transactionFabric", "]"}], 
            "]"}]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"Dividers", "\[Rule]", "Center"}]}], "]"}], ";", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"A", ",", "W", ",", "\[ExponentialE]", ",", "Pval"}], "}"}], 
        ",", 
        RowBox[{
         RowBox[{"Pval", "=", 
          RowBox[{"Floor", "[", "P", "]"}]}], ";", 
         RowBox[{"A", "=", 
          FractionBox[
           RowBox[{"Q", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox["1", "Q"]}], ")"}], 
             RowBox[{"Q", "-", "1"}]]}], "Q"]}], ";", 
         RowBox[{"W", "=", 
          FractionBox[
           RowBox[{"1", "-", "A"}], "A"]}], ";", 
         RowBox[{"\[ExponentialE]", "=", 
          FractionBox[
           RowBox[{"Pval", " ", 
            SuperscriptBox["10", "6"]}], 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{"Pval", " ", 
                SuperscriptBox["10", "6"]}], "3"], "+", 
              FractionBox[
               RowBox[{"W", " ", "16"}], 
               SuperscriptBox["10", "6"]]}], ")"}]}]]}], ";", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Tooltip", "[", 
            RowBox[{
             FractionBox["p", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"3", " ", 
                 SuperscriptBox["10", "6"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["p", 
                  RowBox[{"3", " ", 
                   SuperscriptBox["10", "6"]}]], "+", 
                 FractionBox[
                  RowBox[{"W", " ", "16"}], 
                  SuperscriptBox["10", "6"]]}], ")"}]}]], ",", 
             RowBox[{
              RowBox[{
              "StringTemplate", "[", 
               "\"\<Packet Size: `` bits\\nEfficiency: ``%\>\"", "]"}], "[", 
              RowBox[{
               RowBox[{"ToString", "[", "p", "]"}], ",", 
               RowBox[{"ToString", "[", 
                RowBox[{"Round", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"100", " ", "p"}], 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["10", "6"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["p", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["10", "6"]}]], "+", 
                    FractionBox[
                    RowBox[{"W", " ", "16"}], 
                    SuperscriptBox["10", "6"]]}], ")"}]}]], ",", "0.1"}], 
                 "]"}], "]"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"p", ",", "48", ",", "4096"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "4100"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Packet Size (P) in bits\>\"", ",", 
              "\"\<Efficiency (E)\>\""}], "}"}]}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Metcalfe Model: Ethernet Efficiency vs. Packet \
Size\\n\>\"", ",", "\"\<Stations (Q): \>\"", ",", 
               RowBox[{"ToString", "[", "Q", "]"}]}], "}"}], "]"}]}]}], 
          "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Q", ",", "10", ",", "\"\<Number of Stations\>\""}], "}"}], 
        ",", "2", ",", "256", ",", "1", ",", 
        RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"P", ",", "512", ",", "\"\<Packet Size\>\""}], "}"}], ",", 
        "48", ",", "4096", ",", "1", ",", 
        RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
      RowBox[{"ControlPlacement", "\[Rule]", "Top"}]}], "]"}], ";", 
    RowBox[{"Manipulate", "[", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "transmissionTime", ",", "propagationDelay", ",", "efficiency"}], 
         "}"}], ",", 
        RowBox[{
         RowBox[{"transmissionTime", "=", 
          FractionBox["packetSize", 
           RowBox[{"bandwidth", " ", 
            SuperscriptBox["10", "9"]}]]}], ";", 
         RowBox[{"propagationDelay", "=", 
          FractionBox["linkLength", 
           RowBox[{"3", " ", 
            SuperscriptBox["10", "8"], " ", "0.66"}]]}], ";", 
         RowBox[{"efficiency", "=", 
          RowBox[{"Min", "[", 
           RowBox[{"1", ",", 
            FractionBox["transmissionTime", 
             RowBox[{"2", " ", "propagationDelay"}]]}], "]"}]}], ";", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{"1", ",", 
             FractionBox["p", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"bandwidth", " ", 
                 SuperscriptBox["10", "9"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"2", " ", "propagationDelay"}], ")"}]}]]}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"p", ",", "64", ",", "8192"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "8200"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1.05"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Packet Size (bits)\>\"", ",", "\"\<Link Utilization\>\""}], 
             "}"}]}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
              "\"\<D\[CapitalAE]D\[CapitalAE]LUS Protocol Efficiency on a \
Point-to-Point Link\\nLink Length: \>\"", ",", 
               RowBox[{"ToString", "[", "linkLength", "]"}], ",", 
               "\"\< m, Bandwidth: \>\"", ",", 
               RowBox[{"ToString", "[", "bandwidth", "]"}], ",", 
               "\"\< Gbps\>\""}], "}"}], "]"}]}]}], "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "linkLength", ",", "1", ",", "\"\<Link Length (meters)\>\""}], "}"}],
         ",", "0.01", ",", "10", ",", "0.01", ",", 
        RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "packetSize", ",", "1500", ",", "\"\<Packet Size (bits)\>\""}], 
         "}"}], ",", "64", ",", "8192", ",", "1", ",", 
        RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"bandwidth", ",", "25", ",", "\"\<Bandwidth (Gbps)\>\""}], 
         "}"}], ",", "1", ",", "100", ",", "1", ",", 
        RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
      RowBox[{"ControlPlacement", "\[Rule]", "Top"}]}], "]"}], ";", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"classicalEff", ",", "daedalusEff"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"classicalEff", "[", "q_", "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"A", ",", "W"}], "}"}], ",", 
          RowBox[{
           RowBox[{"A", "=", 
            FractionBox[
             RowBox[{"q", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 FractionBox["1", "q"]}], ")"}], 
               RowBox[{"q", "-", "1"}]]}], "q"]}], ";", 
           RowBox[{"W", "=", 
            FractionBox[
             RowBox[{"1", "-", "A"}], "A"]}], ";", 
           FractionBox[
            RowBox[{"1500", " ", 
             SuperscriptBox["10", "6"]}], 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"1500", " ", 
                 SuperscriptBox["10", "6"]}], "3"], "+", 
               FractionBox[
                RowBox[{"W", " ", "16"}], 
                SuperscriptBox["10", "6"]]}], ")"}]}]]}]}], "]"}]}], ";", 
       RowBox[{
        RowBox[{"daedalusEff", "[", "_", "]"}], ":=", "1"}], ";", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Tooltip", "[", 
            RowBox[{
             RowBox[{"classicalEff", "[", "q", "]"}], ",", 
             "\"\<Classical Ethernet\>\""}], "]"}], ",", 
           RowBox[{"Tooltip", "[", 
            RowBox[{
             RowBox[{"daedalusEff", "[", "q", "]"}], ",", 
             "\"\<D\[CapitalAE]D\[CapitalAE]LUS N2N Link\>\""}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"q", ",", "2", ",", "256"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1.1"}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Number of Competing Stations (Q)\>\"", ",", 
            "\"\<Efficiency / Utilization\>\""}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Classical Ethernet (1500-bit packet)\>\"", ",", 
            "\"\<D\[CapitalAE]D\[CapitalAE]LUS N2N Link \
(Contention-Free)\>\""}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Red", ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Blue", ",", "Dashed"}], "}"}]}], "}"}]}], 
         ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<The Efficiency Showdown\>\""}]}], 
        "]"}]}]}], "]"}], ";", 
    RowBox[{"n2nLattice", "=", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"VertexList", "[", 
        RowBox[{"GridGraph", "[", 
         RowBox[{"{", 
          RowBox[{"10", ",", "10"}], "}"}], "]"}], "]"}], ",", 
       RowBox[{"EdgeList", "[", 
        RowBox[{"GridGraph", "[", 
         RowBox[{"{", 
          RowBox[{"10", ",", "10"}], "}"}], "]"}], "]"}], ",", 
       RowBox[{"VertexLabels", "\[Rule]", "None"}], ",", 
       RowBox[{"VertexSize", "\[Rule]", "Small"}]}], "]"}]}], ";", 
    RowBox[{
     RowBox[{"findHypercell", "[", 
      RowBox[{"g_Graph", ",", "center_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "neigh", "}"}], ",", 
       RowBox[{
        RowBox[{"neigh", "=", 
         RowBox[{"NeighborhoodGraph", "[", 
          RowBox[{"g", ",", "center", ",", "1"}], "]"}]}], ";", 
        RowBox[{"HighlightGraph", "[", 
         RowBox[{"g", ",", "neigh", ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<Hypercell around \>\"", "<>", 
              RowBox[{"ToString", "[", "center", "]"}]}], ",", "Bold"}], 
            "]"}]}]}], "]"}]}]}], "]"}]}], ";", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"findHypercell", "[", 
         RowBox[{"n2nLattice", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"findHypercell", "[", 
         RowBox[{"n2nLattice", ",", 
          RowBox[{"{", 
           RowBox[{"7", ",", "8"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.96297268037711*^9, 3.962972697184368*^9}, 
   3.962972737244294*^9, {3.962978128078717*^9, 3.962978128085936*^9}},
 CellLabel->
  "In[315]:=",ExpressionUUID->"5fce53a3-591f-4f42-8810-c363d733012d"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100}, {Null, CompressedData["
1:eJwVxWebgQAAAGB7R8osoYysJEQD2SQzZc/c9/tz9wPv7sP7vLjxrRoWk8n0
8+d/s8XstVgtPqvNCtjsNr/dYQ84nA7Q6XIGXW4X5Pa4YU/I6/OGfYAvAviB
qD/gjwXAQBwMgkgQCqIQDCXgEIyFkuFIOBWJRtLRWBSPxWNEHIlnEBTJogk0
l8ASeSyJkclCKp0qpvF0CSfwMpEhKplshsrmstVcPkfnyXyNLJBMoV4sFRul
cqlZrpTZClVpUVWqXaWrHF2j+RpTE5g6I9Y7jWaj22SbPbbFSq12q9/m2gOO
54a8wI8EURiLHXHSmXZ73VlP6s2lviT3B/3FYDhQhqPhcjQercaT8XoynWym
29l8tpvLc1VeyPuFstCUpaIvV8vDar06rjfr02a7OW8vO3V3Vffqba/t75qu
PfSD/jwcD6/j6fg+nU/G+XL+XL6ut9v9/ng8n6/X+20Yn8/XL+WhSWM=
            "]}, {GraphHighlight -> {
              UndirectedEdge[3, 4], 4, 2, 
              UndirectedEdge[2, 3], 13, 
              UndirectedEdge[3, 13], 3}, PlotLabel -> 
            Style["Hypercell around {3, 3}", Bold], VertexLabels -> {None}, 
            VertexSize -> {Small}}]]}, 
         TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
eikfon8Ad+253g==
            "], {
             {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
              {Arrowheads[0.], 
               ArrowBox[{{0.1858622288917493, 8.841615880567572}, {
                0.8942596859230476, 8.91001126453376}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.1858622288917493, 8.841615880567572}, {
                0.11878032401205552`, 8.132618579894192}}, 
                0.03552411485413732]}, 
              {Hue[1, 1, 0.7], Opacity[1], 
               {Arrowheads[0.], 
                ArrowBox[{{0.8942596859230476, 8.91001126453376}, {
                 1.8130864779160252`, 8.975188818022222}}, 
                 0.03552411485413732]}}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.8942596859230476, 8.91001126453376}, {
                0.8418457504914385, 8.190009153924649}}, 
                0.03552411485413732]}, 
              {Hue[1, 1, 0.7], Opacity[1], 
               {Arrowheads[0.], 
                ArrowBox[{{1.8130864779160252`, 8.975188818022222}, {
                 2.850368153130886, 9.022992151630508}}, 
                 0.03552411485413732]}}, 
              {Hue[1, 1, 0.7], Opacity[1], 
               {Arrowheads[0.], 
                ArrowBox[{{1.8130864779160252`, 8.975188818022222}, {
                 1.779612045742485, 8.245268103495464}}, 
                 0.03552411485413732]}}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.850368153130886, 9.022992151630508}, {
                3.9520604591928707`, 9.049233216810936}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.850368153130886, 9.022992151630508}, {
                2.833313434295456, 8.288570445842028}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9520604591928707`, 9.049233216810936}, {
                5.075258062299316, 9.052582485947713}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9520604591928707`, 9.049233216810936}, {
                3.9468283112170885`, 8.311785593702007}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.075258062299316, 9.052582485947713}, {
                6.177705270631361, 9.035723729116551}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.075258062299316, 9.052582485947713}, {
                5.08144620653243, 8.317333395730921}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.177705270631361, 9.035723729116551}, {
                7.215460496203664, 8.994172083384443}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.177705270631361, 9.035723729116551}, {
                6.197025577495545, 8.302770716299772}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.215460496203664, 8.994172083384443}, {
                8.135527968927159, 8.939419602166417}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.215460496203664, 8.994172083384443}, {
                7.252039075184963, 8.266682253867438}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.135527968927159, 8.939419602166417}, {
                8.843623309137763, 8.873346059183469}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.135527968927159, 8.939419602166417}, {
                8.190165413753261, 8.216769113684515}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.843623309137763, 8.873346059183469}, {
                8.910247591049268, 8.16599444963716}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.11878032401205552`, 8.132618579894192}, {
                0.8418457504914385, 8.190009153924649}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.11878032401205552`, 8.132618579894192}, {
                0.06249292671336715, 7.210840783555644}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.8418457504914385, 8.190009153924649}, {
                1.779612045742485, 8.245268103495464}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.8418457504914385, 8.190009153924649}, {
                0.7903131243074109, 7.250878294164927}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.779612045742485, 8.245268103495464}, {
                2.833313434295456, 8.288570445842028}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.779612045742485, 8.245268103495464}, {
                1.7420219057030653`, 7.2920349659516726`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.833313434295456, 8.288570445842028}, {
                3.9468283112170885`, 8.311785593702007}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.833313434295456, 8.288570445842028}, {
                2.8127578609916473`, 7.32637616297775}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9468283112170885`, 8.311785593702007}, {
                5.08144620653243, 8.317333395730921}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9468283112170885`, 8.311785593702007}, {
                3.9421996193515594`, 7.34948258588013}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.08144620653243, 8.317333395730921}, {
                6.197025577495545, 8.302770716299772}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.08144620653243, 8.317333395730921}, {
                5.0920739148358685`, 7.3572908872396265`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.197025577495545, 8.302770716299772}, {
                7.252039075184963, 8.266682253867438}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.197025577495545, 8.302770716299772}, {
                6.221823948855857, 7.341645310116361}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.252039075184963, 8.266682253867438}, {
                8.190165413753261, 8.216769113684515}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.252039075184963, 8.266682253867438}, {
                7.292667608165008, 7.314479958593125}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.190165413753261, 8.216769113684515}, {
                8.910247591049268, 8.16599444963716}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.190165413753261, 8.216769113684515}, {
                8.243002302007046, 7.279647871074177}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.910247591049268, 8.16599444963716}, {
                8.971206562550725, 7.247584392165568}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.06249292671336715, 7.210840783555644}, {
                0.7903131243074109, 7.250878294164927}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.06249292671336715, 7.210840783555644}, {
                0.01688143725515623, 6.1706497492559365`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7903131243074109, 7.250878294164927}, {
                1.7420219057030653`, 7.2920349659516726`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7903131243074109, 7.250878294164927}, {
                0.7510869829992393, 6.1930367648366635`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.7420219057030653`, 7.2920349659516726`}, {
                2.8127578609916473`, 7.32637616297775}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.7420219057030653`, 7.2920349659516726`}, {
                1.7132771651387344`, 6.219190678347127}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.8127578609916473`, 7.32637616297775}, {
                3.9421996193515594`, 7.34948258588013}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.8127578609916473`, 7.32637616297775}, {
                2.795395532425432, 6.2449785528931185`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9421996193515594`, 7.34948258588013}, {
                5.0920739148358685`, 7.3572908872396265`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9421996193515594`, 7.34948258588013}, {
                3.939835695830407, 6.262747169244548}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.0920739148358685`, 7.3572908872396265`}, {
                6.221823948855857, 7.341645310116361}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.0920739148358685`, 7.3572908872396265`}, {
                5.103366081222757, 6.269721591525755}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.221823948855857, 7.341645310116361}, {
                7.292667608165008, 7.314479958593125}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.221823948855857, 7.341645310116361}, {
                6.247053401560608, 6.26073447161613}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.292667608165008, 7.314479958593125}, {
                8.243002302007046, 7.279647871074177}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.292667608165008, 7.314479958593125}, {
                7.326339910944828, 6.245573499975295}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.243002302007046, 7.279647871074177}, {
                8.971206562550725, 7.247584392165568}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.243002302007046, 7.279647871074177}, {
                8.285944976195953, 6.227955367858515}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.971206562550725, 7.247584392165568}, {
                9.019300408807016, 6.211357655613504}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.01688143725515623, 6.1706497492559365`}, {
                0.7510869829992393, 6.1930367648366635`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.01688143725515623, 6.1706497492559365`}, {0., 
                5.066916408553503}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7510869829992393, 6.1930367648366635`}, {
                1.7132771651387344`, 6.219190678347127}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7510869829992393, 6.1930367648366635`}, {
                0.7357935649267664, 5.0745514735017645`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.7132771651387344`, 6.219190678347127}, {
                2.795395532425432, 6.2449785528931185`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.7132771651387344`, 6.219190678347127}, {
                1.6985400771287313`, 5.086471687661478}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.795395532425432, 6.2449785528931185`}, {
                3.939835695830407, 6.262747169244548}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.795395532425432, 6.2449785528931185`}, {
                2.7872824294344425`, 5.10091952702771}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.939835695830407, 6.262747169244548}, {
                5.103366081222757, 6.269721591525755}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.939835695830407, 6.262747169244548}, {
                3.940146605852859, 5.112769999469639}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.103366081222757, 6.269721591525755}, {
                6.247053401560608, 6.26073447161613}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.103366081222757, 6.269721591525755}, {
                5.112662270723302, 5.117795163706275}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.247053401560608, 6.26073447161613}, {
                7.326339910944828, 6.245573499975295}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.247053401560608, 6.26073447161613}, {
                6.263989317260243, 5.11785477354335}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.326339910944828, 6.245573499975295}, {
                8.285944976195953, 6.227955367858515}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.326339910944828, 6.245573499975295}, {
                7.350730138675123, 5.11802985493244}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.285944976195953, 6.227955367858515}, {
                9.019300408807016, 6.211357655613504}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.285944976195953, 6.227955367858515}, {
                8.311287126754818, 5.114591858910575}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{9.019300408807016, 6.211357655613504}, {
                9.047449299843144, 5.10988843412275}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0., 5.066916408553503}, {0.7357935649267664, 
                5.0745514735017645`}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0., 5.066916408553503}, {0.004227342750691143, 
                3.942331950101983}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7357935649267664, 5.0745514735017645`}, {
                1.6985400771287313`, 5.086471687661478}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7357935649267664, 5.0745514735017645`}, {
                0.7408453433600859, 3.938737929958709}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.6985400771287313`, 5.086471687661478}, {
                2.7872824294344425`, 5.10091952702771}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.6985400771287313`, 5.086471687661478}, {
                1.703244729981543, 3.9361788528465755`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.7872824294344425`, 5.10091952702771}, {
                3.940146605852859, 5.112769999469639}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.7872824294344425`, 5.10091952702771}, {
                2.790979053882062, 3.938555379853472}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.940146605852859, 5.112769999469639}, {
                5.112662270723302, 5.117795163706275}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.940146605852859, 5.112769999469639}, {
                3.943350251105579, 3.941896919505249}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.112662270723302, 5.117795163706275}, {
                6.263989317260243, 5.11785477354335}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.112662270723302, 5.117795163706275}, {
                5.115601458850922, 3.946680427171637}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.263989317260243, 5.11785477354335}, {
                7.350730138675123, 5.11802985493244}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.263989317260243, 5.11785477354335}, {
                6.267528901718988, 3.9558809877913115`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.350730138675123, 5.11802985493244}, {
                8.311287126754818, 5.114591858910575}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.350730138675123, 5.11802985493244}, {
                7.354420236489769, 3.9691966480580336`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.311287126754818, 5.114591858910575}, {
                9.047449299843144, 5.10988843412275}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.311287126754818, 5.114591858910575}, {
                8.316462224583756, 3.9813267890949233`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{9.047449299843144, 5.10988843412275}, {
                9.051401790047503, 3.9869150492696948`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.004227342750691143, 3.942331950101983}, {
                0.7408453433600859, 3.938737929958709}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.004227342750691143, 3.942331950101983}, {
                0.029043506421675858`, 2.8390844460582967`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7408453433600859, 3.938737929958709}, {
                1.703244729981543, 3.9361788528465755`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7408453433600859, 3.938737929958709}, {
                0.7633005643867268, 2.8232852813744147`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.703244729981543, 3.9361788528465755`}, {
                2.790979053882062, 3.938555379853472}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.703244729981543, 3.9361788528465755`}, {
                1.72435430233944, 2.8058214800148753`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.790979053882062, 3.938555379853472}, {
                3.943350251105579, 3.941896919505249}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.790979053882062, 3.938555379853472}, {
                2.807079779029127, 2.794796144560178}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.943350251105579, 3.941896919505249}, {
                5.115601458850922, 3.946680427171637}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.943350251105579, 3.941896919505249}, {
                3.9519495422172706`, 2.7894987232859414`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.115601458850922, 3.946680427171637}, {
                6.267528901718988, 3.9558809877913115`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.115601458850922, 3.946680427171637}, {
                5.114683919622031, 2.796174231089704}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.267528901718988, 3.9558809877913115`}, {
                7.354420236489769, 3.9691966480580336`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.267528901718988, 3.9558809877913115`}, {
                6.258621505257615, 2.8131697519515866`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.354420236489769, 3.9691966480580336`}, {
                8.316462224583756, 3.9813267890949233`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.354420236489769, 3.9691966480580336`}, {
                7.339814553705024, 2.8413670087615177`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.316462224583756, 3.9813267890949233`}, {
                9.051401790047503, 3.9869150492696948`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.316462224583756, 3.9813267890949233`}, {
                8.302631372921105, 2.8663247547595496`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{9.051401790047503, 3.9869150492696948`}, {
                9.035021066722987, 2.8850493588019264`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.029043506421675858`, 2.8390844460582967`}, {
                0.7633005643867268, 2.8232852813744147`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.029043506421675858`, 2.8390844460582967`}, {
                0.07576931711132495, 1.8023369640046374`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7633005643867268, 2.8232852813744147`}, {
                1.72435430233944, 2.8058214800148753`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7633005643867268, 2.8232852813744147`}, {
                0.8053705157785798, 1.7704462715988738`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.72435430233944, 2.8058214800148753`}, {
                2.807079779029127, 2.794796144560178}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.72435430233944, 2.8058214800148753`}, {
                1.7589172004448996`, 1.7352716222293818`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.807079779029127, 2.794796144560178}, {
                3.9519495422172706`, 2.7894987232859414`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.807079779029127, 2.794796144560178}, {
                2.8338408975512777`, 1.7125899187374638`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9519495422172706`, 2.7894987232859414`}, {
                5.114683919622031, 2.796174231089704}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9519495422172706`, 2.7894987232859414`}, {
                3.9658253648838246`, 1.7010825885092289`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.114683919622031, 2.796174231089704}, {
                6.258621505257615, 2.8131697519515866`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.114683919622031, 2.796174231089704}, {
                5.1152776658478025`, 1.709519827982788}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.258621505257615, 2.8131697519515866`}, {
                7.339814553705024, 2.8413670087615177`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.258621505257615, 2.8131697519515866`}, {
                6.245012578518197, 1.7335951928827456`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.339814553705024, 2.8413670087615177`}, {
                8.302631372921105, 2.8663247547595496`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.339814553705024, 2.8413670087615177`}, {
                7.313697440126961, 1.770559158829446}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.302631372921105, 2.8663247547595496`}, {
                9.035021066722987, 2.8850493588019264`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.302631372921105, 2.8663247547595496`}, {
                8.265808855292276, 1.8103065515430048`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{9.035021066722987, 2.8850493588019264`}, {
                8.991590151098357, 1.8467030036605059`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.07576931711132495, 1.8023369640046374`}, {
                0.8053705157785798, 1.7704462715988738`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.07576931711132495, 1.8023369640046374`}, {
                0.13840248266157484`, 0.8846391050762277}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.8053705157785798, 1.7704462715988738`}, {
                1.7589172004448996`, 1.7352716222293818`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.8053705157785798, 1.7704462715988738`}, {
                0.8589011218820581, 0.8330979348507244}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.7589172004448996`, 1.7352716222293818`}, {
                2.8338408975512777`, 1.7125899187374638`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.7589172004448996`, 1.7352716222293818`}, {
                1.8002519328266309`, 0.7816709412166283}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.8338408975512777`, 1.7125899187374638`}, {
                3.9658253648838246`, 1.7010825885092289`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.8338408975512777`, 1.7125899187374638`}, {
                2.858592959957279, 0.7472326928617998}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9658253648838246`, 1.7010825885092289`}, {
                5.1152776658478025`, 1.709519827982788}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9658253648838246`, 1.7010825885092289`}, {
                3.97603058834007, 0.7369844513943349}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.1152776658478025`, 1.709519827982788}, {
                6.245012578518197, 1.7335951928827456`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.1152776658478025`, 1.709519827982788}, {
                5.1104070768159, 0.7467169169970336}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.245012578518197, 1.7335951928827456`}, {
                7.313697440126961, 1.770559158829446}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.245012578518197, 1.7335951928827456`}, {
                6.225283955962465, 0.7740426697913727}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.313697440126961, 1.770559158829446}, {
                8.265808855292276, 1.8103065515430048`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.313697440126961, 1.770559158829446}, {
                7.277186146372985, 0.8189312647844509}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.265808855292276, 1.8103065515430048`}, {
                8.991590151098357, 1.8467030036605059`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.265808855292276, 1.8103065515430048`}, {
                8.21360551627343, 0.871117789356604}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.991590151098357, 1.8467030036605059`}, {
                8.933289509351471, 0.926408887773658}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.13840248266157484`, 0.8846391050762277}, {
                0.8589011218820581, 0.8330979348507244}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.13840248266157484`, 0.8846391050762277}, {
                0.20411605228061358`, 0.17639199843779796`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.8589011218820581, 0.8330979348507244}, {
                1.8002519328266309`, 0.7816709412166283}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.8589011218820581, 0.8330979348507244}, {
                0.9130474909284203, 0.10932290893672825`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.8002519328266309`, 0.7816709412166283}, {
                2.858592959957279, 0.7472326928617998}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.8002519328266309`, 0.7816709412166283}, {
                1.8362809759353391`, 0.052522907011555375`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.858592959957279, 0.7472326928617998}, {
                3.97603058834007, 0.7369844513943349}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.858592959957279, 0.7472326928617998}, {
                2.876350357022736, 0.011233681059390932`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.97603058834007, 0.7369844513943349}, {
                5.1104070768159, 0.7467169169970336}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.97603058834007, 0.7369844513943349}, {
                3.9810786479796416`, 0.}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.1104070768159, 0.7467169169970336}, {
                6.225283955962465, 0.7740426697913727}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.1104070768159, 0.7467169169970336}, {
                5.105422795292348, 0.00959419314434129}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.225283955962465, 0.7740426697913727}, {
                7.277186146372985, 0.8189312647844509}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.225283955962465, 0.7740426697913727}, {
                6.2062980304980835`, 0.03856450915692733}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.277186146372985, 0.8189312647844509}, {
                8.21360551627343, 0.871117789356604}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.277186146372985, 0.8189312647844509}, {
                7.242543109803293, 0.08738986621450273}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.21360551627343, 0.871117789356604}, {
                8.933289509351471, 0.926408887773658}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.21360551627343, 0.871117789356604}, {
                8.161790424913484, 0.14781860022187487`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.933289509351471, 0.926408887773658}, {
                8.869568573628083, 0.21796776258386164`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.20411605228061358`, 0.17639199843779796`}, {
                0.9130474909284203, 0.10932290893672825`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.9130474909284203, 0.10932290893672825`}, {
                1.8362809759353391`, 0.052522907011555375`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.8362809759353391`, 0.052522907011555375`}, {
                2.876350357022736, 0.011233681059390932`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.876350357022736, 0.011233681059390932`}, {
                3.9810786479796416`, 0.}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9810786479796416`, 0.}, {5.105422795292348, 
                0.00959419314434129}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.105422795292348, 0.00959419314434129}, {
                6.2062980304980835`, 0.03856450915692733}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.2062980304980835`, 0.03856450915692733}, {
                7.242543109803293, 0.08738986621450273}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.242543109803293, 0.08738986621450273}, {
                8.161790424913484, 0.14781860022187487`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.161790424913484, 0.14781860022187487`}, {
                8.869568573628083, 0.21796776258386164`}}, 
                0.03552411485413732]}}, 
             {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
              DiskBox[1, 0.03552411485413732], 
              {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
               DiskBox[2, 0.03552411485413732]}, 
              {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
               DiskBox[3, 0.03552411485413732]}, 
              {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
               DiskBox[4, 0.03552411485413732]}, 
              DiskBox[5, 0.03552411485413732], 
              DiskBox[6, 0.03552411485413732], 
              DiskBox[7, 0.03552411485413732], 
              DiskBox[8, 0.03552411485413732], 
              DiskBox[9, 0.03552411485413732], 
              DiskBox[10, 0.03552411485413732], 
              DiskBox[11, 0.03552411485413732], 
              DiskBox[12, 0.03552411485413732], 
              {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
               DiskBox[13, 0.03552411485413732]}, 
              DiskBox[14, 0.03552411485413732], 
              DiskBox[15, 0.03552411485413732], 
              DiskBox[16, 0.03552411485413732], 
              DiskBox[17, 0.03552411485413732], 
              DiskBox[18, 0.03552411485413732], 
              DiskBox[19, 0.03552411485413732], 
              DiskBox[20, 0.03552411485413732], 
              DiskBox[21, 0.03552411485413732], 
              DiskBox[22, 0.03552411485413732], 
              DiskBox[23, 0.03552411485413732], 
              DiskBox[24, 0.03552411485413732], 
              DiskBox[25, 0.03552411485413732], 
              DiskBox[26, 0.03552411485413732], 
              DiskBox[27, 0.03552411485413732], 
              DiskBox[28, 0.03552411485413732], 
              DiskBox[29, 0.03552411485413732], 
              DiskBox[30, 0.03552411485413732], 
              DiskBox[31, 0.03552411485413732], 
              DiskBox[32, 0.03552411485413732], 
              DiskBox[33, 0.03552411485413732], 
              DiskBox[34, 0.03552411485413732], 
              DiskBox[35, 0.03552411485413732], 
              DiskBox[36, 0.03552411485413732], 
              DiskBox[37, 0.03552411485413732], 
              DiskBox[38, 0.03552411485413732], 
              DiskBox[39, 0.03552411485413732], 
              DiskBox[40, 0.03552411485413732], 
              DiskBox[41, 0.03552411485413732], 
              DiskBox[42, 0.03552411485413732], 
              DiskBox[43, 0.03552411485413732], 
              DiskBox[44, 0.03552411485413732], 
              DiskBox[45, 0.03552411485413732], 
              DiskBox[46, 0.03552411485413732], 
              DiskBox[47, 0.03552411485413732], 
              DiskBox[48, 0.03552411485413732], 
              DiskBox[49, 0.03552411485413732], 
              DiskBox[50, 0.03552411485413732], 
              DiskBox[51, 0.03552411485413732], 
              DiskBox[52, 0.03552411485413732], 
              DiskBox[53, 0.03552411485413732], 
              DiskBox[54, 0.03552411485413732], 
              DiskBox[55, 0.03552411485413732], 
              DiskBox[56, 0.03552411485413732], 
              DiskBox[57, 0.03552411485413732], 
              DiskBox[58, 0.03552411485413732], 
              DiskBox[59, 0.03552411485413732], 
              DiskBox[60, 0.03552411485413732], 
              DiskBox[61, 0.03552411485413732], 
              DiskBox[62, 0.03552411485413732], 
              DiskBox[63, 0.03552411485413732], 
              DiskBox[64, 0.03552411485413732], 
              DiskBox[65, 0.03552411485413732], 
              DiskBox[66, 0.03552411485413732], 
              DiskBox[67, 0.03552411485413732], 
              DiskBox[68, 0.03552411485413732], 
              DiskBox[69, 0.03552411485413732], 
              DiskBox[70, 0.03552411485413732], 
              DiskBox[71, 0.03552411485413732], 
              DiskBox[72, 0.03552411485413732], 
              DiskBox[73, 0.03552411485413732], 
              DiskBox[74, 0.03552411485413732], 
              DiskBox[75, 0.03552411485413732], 
              DiskBox[76, 0.03552411485413732], 
              DiskBox[77, 0.03552411485413732], 
              DiskBox[78, 0.03552411485413732], 
              DiskBox[79, 0.03552411485413732], 
              DiskBox[80, 0.03552411485413732], 
              DiskBox[81, 0.03552411485413732], 
              DiskBox[82, 0.03552411485413732], 
              DiskBox[83, 0.03552411485413732], 
              DiskBox[84, 0.03552411485413732], 
              DiskBox[85, 0.03552411485413732], 
              DiskBox[86, 0.03552411485413732], 
              DiskBox[87, 0.03552411485413732], 
              DiskBox[88, 0.03552411485413732], 
              DiskBox[89, 0.03552411485413732], 
              DiskBox[90, 0.03552411485413732], 
              DiskBox[91, 0.03552411485413732], 
              DiskBox[92, 0.03552411485413732], 
              DiskBox[93, 0.03552411485413732], 
              DiskBox[94, 0.03552411485413732], 
              DiskBox[95, 0.03552411485413732], 
              DiskBox[96, 0.03552411485413732], 
              DiskBox[97, 0.03552411485413732], 
              DiskBox[98, 0.03552411485413732], 
              DiskBox[99, 0.03552411485413732], 
              DiskBox[100, 0.03552411485413732]}}]],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->"NetworkGraphics",
       FormatType->TraditionalForm,
       FrameTicks->None,
       PlotLabel->FormBox[
         StyleBox["\"Hypercell around {3, 3}\"", Bold, StripOnInput -> False],
          TraditionalForm]],
      TraditionalForm], {466.6666666666667, -467.775}, {Center, Center}, {875.0000000000001, 891.},
     
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     FormBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100}, {Null, CompressedData["
1:eJwVxWebgQAAAGB7R8osoYysJEQD2SQzZc/c9/tz9wPv7sP7vLjxrRoWk8n0
8+d/s8XstVgtPqvNCtjsNr/dYQ84nA7Q6XIGXW4X5Pa4YU/I6/OGfYAvAviB
qD/gjwXAQBwMgkgQCqIQDCXgEIyFkuFIOBWJRtLRWBSPxWNEHIlnEBTJogk0
l8ASeSyJkclCKp0qpvF0CSfwMpEhKplshsrmstVcPkfnyXyNLJBMoV4sFRul
cqlZrpTZClVpUVWqXaWrHF2j+RpTE5g6I9Y7jWaj22SbPbbFSq12q9/m2gOO
54a8wI8EURiLHXHSmXZ73VlP6s2lviT3B/3FYDhQhqPhcjQercaT8XoynWym
29l8tpvLc1VeyPuFstCUpaIvV8vDar06rjfr02a7OW8vO3V3Vffqba/t75qu
PfSD/jwcD6/j6fg+nU/G+XL+XL6ut9v9/ng8n6/X+20Yn8/XL+WhSWM=
            "]}, {GraphHighlight -> {6, 7, 17, 18, 9, 
              UndirectedEdge[8, 18], 
              UndirectedEdge[7, 17], 
              UndirectedEdge[6, 7], 
              UndirectedEdge[8, 9], 
              UndirectedEdge[7, 8], 
              UndirectedEdge[17, 18], 8}, PlotLabel -> 
            Style["Hypercell around {7, 8}", Bold], VertexLabels -> {None}, 
            VertexSize -> {Small}}]]}, 
         TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
eikfon8Ad+253g==
            "], {
             {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
              {Arrowheads[0.], 
               ArrowBox[{{0.1858622288917493, 8.841615880567572}, {
                0.8942596859230476, 8.91001126453376}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.1858622288917493, 8.841615880567572}, {
                0.11878032401205552`, 8.132618579894192}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.8942596859230476, 8.91001126453376}, {
                1.8130864779160252`, 8.975188818022222}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.8942596859230476, 8.91001126453376}, {
                0.8418457504914385, 8.190009153924649}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.8130864779160252`, 8.975188818022222}, {
                2.850368153130886, 9.022992151630508}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.8130864779160252`, 8.975188818022222}, {
                1.779612045742485, 8.245268103495464}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.850368153130886, 9.022992151630508}, {
                3.9520604591928707`, 9.049233216810936}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.850368153130886, 9.022992151630508}, {
                2.833313434295456, 8.288570445842028}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9520604591928707`, 9.049233216810936}, {
                5.075258062299316, 9.052582485947713}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9520604591928707`, 9.049233216810936}, {
                3.9468283112170885`, 8.311785593702007}}, 
                0.03552411485413732]}, 
              {Hue[1, 1, 0.7], Opacity[1], 
               {Arrowheads[0.], 
                ArrowBox[{{5.075258062299316, 9.052582485947713}, {
                 6.177705270631361, 9.035723729116551}}, 
                 0.03552411485413732]}}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.075258062299316, 9.052582485947713}, {
                5.08144620653243, 8.317333395730921}}, 
                0.03552411485413732]}, 
              {Hue[1, 1, 0.7], Opacity[1], 
               {Arrowheads[0.], 
                ArrowBox[{{6.177705270631361, 9.035723729116551}, {
                 7.215460496203664, 8.994172083384443}}, 
                 0.03552411485413732]}}, 
              {Hue[1, 1, 0.7], Opacity[1], 
               {Arrowheads[0.], 
                ArrowBox[{{6.177705270631361, 9.035723729116551}, {
                 6.197025577495545, 8.302770716299772}}, 
                 0.03552411485413732]}}, 
              {Hue[1, 1, 0.7], Opacity[1], 
               {Arrowheads[0.], 
                ArrowBox[{{7.215460496203664, 8.994172083384443}, {
                 8.135527968927159, 8.939419602166417}}, 
                 0.03552411485413732]}}, 
              {Hue[1, 1, 0.7], Opacity[1], 
               {Arrowheads[0.], 
                ArrowBox[{{7.215460496203664, 8.994172083384443}, {
                 7.252039075184963, 8.266682253867438}}, 
                 0.03552411485413732]}}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.135527968927159, 8.939419602166417}, {
                8.843623309137763, 8.873346059183469}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.135527968927159, 8.939419602166417}, {
                8.190165413753261, 8.216769113684515}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.843623309137763, 8.873346059183469}, {
                8.910247591049268, 8.16599444963716}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.11878032401205552`, 8.132618579894192}, {
                0.8418457504914385, 8.190009153924649}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.11878032401205552`, 8.132618579894192}, {
                0.06249292671336715, 7.210840783555644}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.8418457504914385, 8.190009153924649}, {
                1.779612045742485, 8.245268103495464}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.8418457504914385, 8.190009153924649}, {
                0.7903131243074109, 7.250878294164927}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.779612045742485, 8.245268103495464}, {
                2.833313434295456, 8.288570445842028}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.779612045742485, 8.245268103495464}, {
                1.7420219057030653`, 7.2920349659516726`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.833313434295456, 8.288570445842028}, {
                3.9468283112170885`, 8.311785593702007}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.833313434295456, 8.288570445842028}, {
                2.8127578609916473`, 7.32637616297775}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9468283112170885`, 8.311785593702007}, {
                5.08144620653243, 8.317333395730921}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9468283112170885`, 8.311785593702007}, {
                3.9421996193515594`, 7.34948258588013}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.08144620653243, 8.317333395730921}, {
                6.197025577495545, 8.302770716299772}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.08144620653243, 8.317333395730921}, {
                5.0920739148358685`, 7.3572908872396265`}}, 
                0.03552411485413732]}, 
              {Hue[1, 1, 0.7], Opacity[1], 
               {Arrowheads[0.], 
                ArrowBox[{{6.197025577495545, 8.302770716299772}, {
                 7.252039075184963, 8.266682253867438}}, 
                 0.03552411485413732]}}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.197025577495545, 8.302770716299772}, {
                6.221823948855857, 7.341645310116361}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.252039075184963, 8.266682253867438}, {
                8.190165413753261, 8.216769113684515}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.252039075184963, 8.266682253867438}, {
                7.292667608165008, 7.314479958593125}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.190165413753261, 8.216769113684515}, {
                8.910247591049268, 8.16599444963716}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.190165413753261, 8.216769113684515}, {
                8.243002302007046, 7.279647871074177}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.910247591049268, 8.16599444963716}, {
                8.971206562550725, 7.247584392165568}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.06249292671336715, 7.210840783555644}, {
                0.7903131243074109, 7.250878294164927}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.06249292671336715, 7.210840783555644}, {
                0.01688143725515623, 6.1706497492559365`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7903131243074109, 7.250878294164927}, {
                1.7420219057030653`, 7.2920349659516726`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7903131243074109, 7.250878294164927}, {
                0.7510869829992393, 6.1930367648366635`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.7420219057030653`, 7.2920349659516726`}, {
                2.8127578609916473`, 7.32637616297775}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.7420219057030653`, 7.2920349659516726`}, {
                1.7132771651387344`, 6.219190678347127}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.8127578609916473`, 7.32637616297775}, {
                3.9421996193515594`, 7.34948258588013}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.8127578609916473`, 7.32637616297775}, {
                2.795395532425432, 6.2449785528931185`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9421996193515594`, 7.34948258588013}, {
                5.0920739148358685`, 7.3572908872396265`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9421996193515594`, 7.34948258588013}, {
                3.939835695830407, 6.262747169244548}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.0920739148358685`, 7.3572908872396265`}, {
                6.221823948855857, 7.341645310116361}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.0920739148358685`, 7.3572908872396265`}, {
                5.103366081222757, 6.269721591525755}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.221823948855857, 7.341645310116361}, {
                7.292667608165008, 7.314479958593125}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.221823948855857, 7.341645310116361}, {
                6.247053401560608, 6.26073447161613}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.292667608165008, 7.314479958593125}, {
                8.243002302007046, 7.279647871074177}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.292667608165008, 7.314479958593125}, {
                7.326339910944828, 6.245573499975295}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.243002302007046, 7.279647871074177}, {
                8.971206562550725, 7.247584392165568}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.243002302007046, 7.279647871074177}, {
                8.285944976195953, 6.227955367858515}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.971206562550725, 7.247584392165568}, {
                9.019300408807016, 6.211357655613504}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.01688143725515623, 6.1706497492559365`}, {
                0.7510869829992393, 6.1930367648366635`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.01688143725515623, 6.1706497492559365`}, {0., 
                5.066916408553503}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7510869829992393, 6.1930367648366635`}, {
                1.7132771651387344`, 6.219190678347127}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7510869829992393, 6.1930367648366635`}, {
                0.7357935649267664, 5.0745514735017645`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.7132771651387344`, 6.219190678347127}, {
                2.795395532425432, 6.2449785528931185`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.7132771651387344`, 6.219190678347127}, {
                1.6985400771287313`, 5.086471687661478}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.795395532425432, 6.2449785528931185`}, {
                3.939835695830407, 6.262747169244548}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.795395532425432, 6.2449785528931185`}, {
                2.7872824294344425`, 5.10091952702771}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.939835695830407, 6.262747169244548}, {
                5.103366081222757, 6.269721591525755}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.939835695830407, 6.262747169244548}, {
                3.940146605852859, 5.112769999469639}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.103366081222757, 6.269721591525755}, {
                6.247053401560608, 6.26073447161613}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.103366081222757, 6.269721591525755}, {
                5.112662270723302, 5.117795163706275}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.247053401560608, 6.26073447161613}, {
                7.326339910944828, 6.245573499975295}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.247053401560608, 6.26073447161613}, {
                6.263989317260243, 5.11785477354335}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.326339910944828, 6.245573499975295}, {
                8.285944976195953, 6.227955367858515}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.326339910944828, 6.245573499975295}, {
                7.350730138675123, 5.11802985493244}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.285944976195953, 6.227955367858515}, {
                9.019300408807016, 6.211357655613504}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.285944976195953, 6.227955367858515}, {
                8.311287126754818, 5.114591858910575}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{9.019300408807016, 6.211357655613504}, {
                9.047449299843144, 5.10988843412275}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0., 5.066916408553503}, {0.7357935649267664, 
                5.0745514735017645`}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0., 5.066916408553503}, {0.004227342750691143, 
                3.942331950101983}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7357935649267664, 5.0745514735017645`}, {
                1.6985400771287313`, 5.086471687661478}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7357935649267664, 5.0745514735017645`}, {
                0.7408453433600859, 3.938737929958709}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.6985400771287313`, 5.086471687661478}, {
                2.7872824294344425`, 5.10091952702771}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.6985400771287313`, 5.086471687661478}, {
                1.703244729981543, 3.9361788528465755`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.7872824294344425`, 5.10091952702771}, {
                3.940146605852859, 5.112769999469639}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.7872824294344425`, 5.10091952702771}, {
                2.790979053882062, 3.938555379853472}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.940146605852859, 5.112769999469639}, {
                5.112662270723302, 5.117795163706275}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.940146605852859, 5.112769999469639}, {
                3.943350251105579, 3.941896919505249}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.112662270723302, 5.117795163706275}, {
                6.263989317260243, 5.11785477354335}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.112662270723302, 5.117795163706275}, {
                5.115601458850922, 3.946680427171637}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.263989317260243, 5.11785477354335}, {
                7.350730138675123, 5.11802985493244}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.263989317260243, 5.11785477354335}, {
                6.267528901718988, 3.9558809877913115`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.350730138675123, 5.11802985493244}, {
                8.311287126754818, 5.114591858910575}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.350730138675123, 5.11802985493244}, {
                7.354420236489769, 3.9691966480580336`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.311287126754818, 5.114591858910575}, {
                9.047449299843144, 5.10988843412275}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.311287126754818, 5.114591858910575}, {
                8.316462224583756, 3.9813267890949233`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{9.047449299843144, 5.10988843412275}, {
                9.051401790047503, 3.9869150492696948`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.004227342750691143, 3.942331950101983}, {
                0.7408453433600859, 3.938737929958709}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.004227342750691143, 3.942331950101983}, {
                0.029043506421675858`, 2.8390844460582967`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7408453433600859, 3.938737929958709}, {
                1.703244729981543, 3.9361788528465755`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7408453433600859, 3.938737929958709}, {
                0.7633005643867268, 2.8232852813744147`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.703244729981543, 3.9361788528465755`}, {
                2.790979053882062, 3.938555379853472}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.703244729981543, 3.9361788528465755`}, {
                1.72435430233944, 2.8058214800148753`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.790979053882062, 3.938555379853472}, {
                3.943350251105579, 3.941896919505249}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.790979053882062, 3.938555379853472}, {
                2.807079779029127, 2.794796144560178}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.943350251105579, 3.941896919505249}, {
                5.115601458850922, 3.946680427171637}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.943350251105579, 3.941896919505249}, {
                3.9519495422172706`, 2.7894987232859414`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.115601458850922, 3.946680427171637}, {
                6.267528901718988, 3.9558809877913115`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.115601458850922, 3.946680427171637}, {
                5.114683919622031, 2.796174231089704}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.267528901718988, 3.9558809877913115`}, {
                7.354420236489769, 3.9691966480580336`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.267528901718988, 3.9558809877913115`}, {
                6.258621505257615, 2.8131697519515866`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.354420236489769, 3.9691966480580336`}, {
                8.316462224583756, 3.9813267890949233`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.354420236489769, 3.9691966480580336`}, {
                7.339814553705024, 2.8413670087615177`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.316462224583756, 3.9813267890949233`}, {
                9.051401790047503, 3.9869150492696948`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.316462224583756, 3.9813267890949233`}, {
                8.302631372921105, 2.8663247547595496`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{9.051401790047503, 3.9869150492696948`}, {
                9.035021066722987, 2.8850493588019264`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.029043506421675858`, 2.8390844460582967`}, {
                0.7633005643867268, 2.8232852813744147`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.029043506421675858`, 2.8390844460582967`}, {
                0.07576931711132495, 1.8023369640046374`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7633005643867268, 2.8232852813744147`}, {
                1.72435430233944, 2.8058214800148753`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.7633005643867268, 2.8232852813744147`}, {
                0.8053705157785798, 1.7704462715988738`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.72435430233944, 2.8058214800148753`}, {
                2.807079779029127, 2.794796144560178}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.72435430233944, 2.8058214800148753`}, {
                1.7589172004448996`, 1.7352716222293818`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.807079779029127, 2.794796144560178}, {
                3.9519495422172706`, 2.7894987232859414`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.807079779029127, 2.794796144560178}, {
                2.8338408975512777`, 1.7125899187374638`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9519495422172706`, 2.7894987232859414`}, {
                5.114683919622031, 2.796174231089704}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9519495422172706`, 2.7894987232859414`}, {
                3.9658253648838246`, 1.7010825885092289`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.114683919622031, 2.796174231089704}, {
                6.258621505257615, 2.8131697519515866`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.114683919622031, 2.796174231089704}, {
                5.1152776658478025`, 1.709519827982788}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.258621505257615, 2.8131697519515866`}, {
                7.339814553705024, 2.8413670087615177`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.258621505257615, 2.8131697519515866`}, {
                6.245012578518197, 1.7335951928827456`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.339814553705024, 2.8413670087615177`}, {
                8.302631372921105, 2.8663247547595496`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.339814553705024, 2.8413670087615177`}, {
                7.313697440126961, 1.770559158829446}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.302631372921105, 2.8663247547595496`}, {
                9.035021066722987, 2.8850493588019264`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.302631372921105, 2.8663247547595496`}, {
                8.265808855292276, 1.8103065515430048`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{9.035021066722987, 2.8850493588019264`}, {
                8.991590151098357, 1.8467030036605059`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.07576931711132495, 1.8023369640046374`}, {
                0.8053705157785798, 1.7704462715988738`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.07576931711132495, 1.8023369640046374`}, {
                0.13840248266157484`, 0.8846391050762277}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.8053705157785798, 1.7704462715988738`}, {
                1.7589172004448996`, 1.7352716222293818`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.8053705157785798, 1.7704462715988738`}, {
                0.8589011218820581, 0.8330979348507244}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.7589172004448996`, 1.7352716222293818`}, {
                2.8338408975512777`, 1.7125899187374638`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.7589172004448996`, 1.7352716222293818`}, {
                1.8002519328266309`, 0.7816709412166283}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.8338408975512777`, 1.7125899187374638`}, {
                3.9658253648838246`, 1.7010825885092289`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.8338408975512777`, 1.7125899187374638`}, {
                2.858592959957279, 0.7472326928617998}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9658253648838246`, 1.7010825885092289`}, {
                5.1152776658478025`, 1.709519827982788}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9658253648838246`, 1.7010825885092289`}, {
                3.97603058834007, 0.7369844513943349}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.1152776658478025`, 1.709519827982788}, {
                6.245012578518197, 1.7335951928827456`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.1152776658478025`, 1.709519827982788}, {
                5.1104070768159, 0.7467169169970336}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.245012578518197, 1.7335951928827456`}, {
                7.313697440126961, 1.770559158829446}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.245012578518197, 1.7335951928827456`}, {
                6.225283955962465, 0.7740426697913727}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.313697440126961, 1.770559158829446}, {
                8.265808855292276, 1.8103065515430048`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.313697440126961, 1.770559158829446}, {
                7.277186146372985, 0.8189312647844509}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.265808855292276, 1.8103065515430048`}, {
                8.991590151098357, 1.8467030036605059`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.265808855292276, 1.8103065515430048`}, {
                8.21360551627343, 0.871117789356604}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.991590151098357, 1.8467030036605059`}, {
                8.933289509351471, 0.926408887773658}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.13840248266157484`, 0.8846391050762277}, {
                0.8589011218820581, 0.8330979348507244}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.13840248266157484`, 0.8846391050762277}, {
                0.20411605228061358`, 0.17639199843779796`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.8589011218820581, 0.8330979348507244}, {
                1.8002519328266309`, 0.7816709412166283}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.8589011218820581, 0.8330979348507244}, {
                0.9130474909284203, 0.10932290893672825`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.8002519328266309`, 0.7816709412166283}, {
                2.858592959957279, 0.7472326928617998}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.8002519328266309`, 0.7816709412166283}, {
                1.8362809759353391`, 0.052522907011555375`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.858592959957279, 0.7472326928617998}, {
                3.97603058834007, 0.7369844513943349}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.858592959957279, 0.7472326928617998}, {
                2.876350357022736, 0.011233681059390932`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.97603058834007, 0.7369844513943349}, {
                5.1104070768159, 0.7467169169970336}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.97603058834007, 0.7369844513943349}, {
                3.9810786479796416`, 0.}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.1104070768159, 0.7467169169970336}, {
                6.225283955962465, 0.7740426697913727}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.1104070768159, 0.7467169169970336}, {
                5.105422795292348, 0.00959419314434129}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.225283955962465, 0.7740426697913727}, {
                7.277186146372985, 0.8189312647844509}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.225283955962465, 0.7740426697913727}, {
                6.2062980304980835`, 0.03856450915692733}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.277186146372985, 0.8189312647844509}, {
                8.21360551627343, 0.871117789356604}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.277186146372985, 0.8189312647844509}, {
                7.242543109803293, 0.08738986621450273}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.21360551627343, 0.871117789356604}, {
                8.933289509351471, 0.926408887773658}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.21360551627343, 0.871117789356604}, {
                8.161790424913484, 0.14781860022187487`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.933289509351471, 0.926408887773658}, {
                8.869568573628083, 0.21796776258386164`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.20411605228061358`, 0.17639199843779796`}, {
                0.9130474909284203, 0.10932290893672825`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{0.9130474909284203, 0.10932290893672825`}, {
                1.8362809759353391`, 0.052522907011555375`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{1.8362809759353391`, 0.052522907011555375`}, {
                2.876350357022736, 0.011233681059390932`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{2.876350357022736, 0.011233681059390932`}, {
                3.9810786479796416`, 0.}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{3.9810786479796416`, 0.}, {5.105422795292348, 
                0.00959419314434129}}, 0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{5.105422795292348, 0.00959419314434129}, {
                6.2062980304980835`, 0.03856450915692733}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{6.2062980304980835`, 0.03856450915692733}, {
                7.242543109803293, 0.08738986621450273}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{7.242543109803293, 0.08738986621450273}, {
                8.161790424913484, 0.14781860022187487`}}, 
                0.03552411485413732]}, 
              {Arrowheads[0.], 
               ArrowBox[{{8.161790424913484, 0.14781860022187487`}, {
                8.869568573628083, 0.21796776258386164`}}, 
                0.03552411485413732]}}, 
             {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
              DiskBox[1, 0.03552411485413732], 
              DiskBox[2, 0.03552411485413732], 
              DiskBox[3, 0.03552411485413732], 
              DiskBox[4, 0.03552411485413732], 
              DiskBox[5, 0.03552411485413732], 
              {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
               DiskBox[6, 0.03552411485413732]}, 
              {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
               DiskBox[7, 0.03552411485413732]}, 
              {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
               DiskBox[8, 0.03552411485413732]}, 
              {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
               DiskBox[9, 0.03552411485413732]}, 
              DiskBox[10, 0.03552411485413732], 
              DiskBox[11, 0.03552411485413732], 
              DiskBox[12, 0.03552411485413732], 
              DiskBox[13, 0.03552411485413732], 
              DiskBox[14, 0.03552411485413732], 
              DiskBox[15, 0.03552411485413732], 
              DiskBox[16, 0.03552411485413732], 
              {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
               DiskBox[17, 0.03552411485413732]}, 
              {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
               DiskBox[18, 0.03552411485413732]}, 
              DiskBox[19, 0.03552411485413732], 
              DiskBox[20, 0.03552411485413732], 
              DiskBox[21, 0.03552411485413732], 
              DiskBox[22, 0.03552411485413732], 
              DiskBox[23, 0.03552411485413732], 
              DiskBox[24, 0.03552411485413732], 
              DiskBox[25, 0.03552411485413732], 
              DiskBox[26, 0.03552411485413732], 
              DiskBox[27, 0.03552411485413732], 
              DiskBox[28, 0.03552411485413732], 
              DiskBox[29, 0.03552411485413732], 
              DiskBox[30, 0.03552411485413732], 
              DiskBox[31, 0.03552411485413732], 
              DiskBox[32, 0.03552411485413732], 
              DiskBox[33, 0.03552411485413732], 
              DiskBox[34, 0.03552411485413732], 
              DiskBox[35, 0.03552411485413732], 
              DiskBox[36, 0.03552411485413732], 
              DiskBox[37, 0.03552411485413732], 
              DiskBox[38, 0.03552411485413732], 
              DiskBox[39, 0.03552411485413732], 
              DiskBox[40, 0.03552411485413732], 
              DiskBox[41, 0.03552411485413732], 
              DiskBox[42, 0.03552411485413732], 
              DiskBox[43, 0.03552411485413732], 
              DiskBox[44, 0.03552411485413732], 
              DiskBox[45, 0.03552411485413732], 
              DiskBox[46, 0.03552411485413732], 
              DiskBox[47, 0.03552411485413732], 
              DiskBox[48, 0.03552411485413732], 
              DiskBox[49, 0.03552411485413732], 
              DiskBox[50, 0.03552411485413732], 
              DiskBox[51, 0.03552411485413732], 
              DiskBox[52, 0.03552411485413732], 
              DiskBox[53, 0.03552411485413732], 
              DiskBox[54, 0.03552411485413732], 
              DiskBox[55, 0.03552411485413732], 
              DiskBox[56, 0.03552411485413732], 
              DiskBox[57, 0.03552411485413732], 
              DiskBox[58, 0.03552411485413732], 
              DiskBox[59, 0.03552411485413732], 
              DiskBox[60, 0.03552411485413732], 
              DiskBox[61, 0.03552411485413732], 
              DiskBox[62, 0.03552411485413732], 
              DiskBox[63, 0.03552411485413732], 
              DiskBox[64, 0.03552411485413732], 
              DiskBox[65, 0.03552411485413732], 
              DiskBox[66, 0.03552411485413732], 
              DiskBox[67, 0.03552411485413732], 
              DiskBox[68, 0.03552411485413732], 
              DiskBox[69, 0.03552411485413732], 
              DiskBox[70, 0.03552411485413732], 
              DiskBox[71, 0.03552411485413732], 
              DiskBox[72, 0.03552411485413732], 
              DiskBox[73, 0.03552411485413732], 
              DiskBox[74, 0.03552411485413732], 
              DiskBox[75, 0.03552411485413732], 
              DiskBox[76, 0.03552411485413732], 
              DiskBox[77, 0.03552411485413732], 
              DiskBox[78, 0.03552411485413732], 
              DiskBox[79, 0.03552411485413732], 
              DiskBox[80, 0.03552411485413732], 
              DiskBox[81, 0.03552411485413732], 
              DiskBox[82, 0.03552411485413732], 
              DiskBox[83, 0.03552411485413732], 
              DiskBox[84, 0.03552411485413732], 
              DiskBox[85, 0.03552411485413732], 
              DiskBox[86, 0.03552411485413732], 
              DiskBox[87, 0.03552411485413732], 
              DiskBox[88, 0.03552411485413732], 
              DiskBox[89, 0.03552411485413732], 
              DiskBox[90, 0.03552411485413732], 
              DiskBox[91, 0.03552411485413732], 
              DiskBox[92, 0.03552411485413732], 
              DiskBox[93, 0.03552411485413732], 
              DiskBox[94, 0.03552411485413732], 
              DiskBox[95, 0.03552411485413732], 
              DiskBox[96, 0.03552411485413732], 
              DiskBox[97, 0.03552411485413732], 
              DiskBox[98, 0.03552411485413732], 
              DiskBox[99, 0.03552411485413732], 
              DiskBox[100, 0.03552411485413732]}}]],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False]],
       DefaultBaseStyle->"NetworkGraphics",
       FormatType->TraditionalForm,
       FrameTicks->None,
       PlotLabel->FormBox[
         StyleBox["\"Hypercell around {7, 8}\"", Bold, StripOnInput -> False],
          TraditionalForm]],
      TraditionalForm], {1400., -467.775}, {Center, Center}, {875., 891.},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
  ImageSize->Large,
  PlotRange->{{0, 1866.6666666666667`}, {-935.55, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.96297268461525*^9, 3.962972697952118*^9}, 
   3.9629727379244556`*^9, 3.962975049392308*^9, 3.962975293908577*^9, 
   3.962978378819194*^9},
 CellLabel->"Out[316]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvVmsZsmRHvbr/utdaq+uvbqrt6ru2nqv6urq6q59a7YfbENmSzMkuznN
5tbkDMnmzBgGzAeW58GQLWCmAcsQLEIDWSPDljWceb98EWBZHMGwNDIoPXgA
G2M/0AMYtDTiU/tG5MnIiDwRefL86/nvPQXce/86J08u3xcZERl5/ox33//e
Vz/8+P3vfe3L75+69533f/2rX/vyd0/d/fZ3ti51/0qn0/9Rp7PyL051eluf
P+t0sn79vU6nvd/eb+9v7/v/Dn6tXNj69VD5FIq/Stce0Kd3ZLlbrsa/xN/9
R1u/fsx+3oOr98a8F/rxUqLU3cS9+1W133C9/7f4u/tecf8f79l/oLOCv7vw
/0ed4t9V+LV64cyD/6Qz/N3uYONnJ5945rOXLl2Dn5+fOf/S5kp/Fa531qDM
Va1WeCSq9Y5E9M/xYo8/Bj8rP8ba6Cn4dyX0pwvtQhHoS2cFf3fhObiOJVif
hr5y6A38QEHq013qj2MVS7oL1xBPrG4Eg8UG/72/+v5n/9nv/QH8hbrg+keH
zt5be++5hz84+uj0wx+c+vHph/9pZ/UnJ6988K+Guw8jYl//5If40NbfP9t/
9Mn/e7TvJNzvnIGyJ+GpzuhPeqv7frJVm9VCD1rA4V+uIvrvyCEMwhCQw6KB
n9999/PwHDQMDaxqQ4Cu/vnJp57nQwDytSFgBVAbbwX+8lY6eeP4N46MP3Ti
wYvA56dpWAOobQjNr8lO/+LxZy5+9jtb7f/+H/8U+7HFw18cOH4aO33L4uhT
HCA8SwO8VaPew1B2FXtDo9xrTwz4TCKOzP3tBCRPoTBDlX0a9LoyENa5f773
sWM0kJsWq27Q0CUqe7tGvRmDxuFq2uAX7s8/wt+D9wp8+ESFoiMaOdI9gLae
wR6O/GhgWjmR+xRFDnoMPUeAUKiPUOecOoPKvTqDxqBfQZ09DqVPuJn5u8df
/bzWBjwFbbwFbQzcFID/x7PYK0sQf6jW6RTk+9NMnIYK9wwBaBVa4b0DfqHX
axoCqgL1CGAJLPcEQ8Fqxyu0GIVYCQDeXgkEFP4fN77/LqjaLtxECF3XtkSz
04NG4WGgApo4D40hCigRfTkoByM80+nC5/c8jHfc9Hqv0Ede5QZD4ExOXAd0
nerowS9Ex4k7dOKpGjpiA8r2qes9qOk0KWyUin8/oLFm6VSYggCzQGRA1Q6k
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
nyS0bXKZC6iZodU78V1FNl26ZuGJ0Zqi3nt9dYWSrt0JXfDJsUnNHlUkck/a
gRBCtBvK9mnI/WCdu9whUH2zL0tUrSjGCjkAPZLTIgm25wyXI1ufo4SOHqgp
Cym/rCSeV7AN0hlhm8ybvod8/wEJ665ihB3n83pny/kAXYIW/r3q/lyW06iw
Shj1EQtXFkokdZZ4f2OaAnpXafplAs9RNvJLj9j0wzUwW0+TJLp9H1q7ujSY
5Ryxv4atUu7iOPwYUuY6geKqSdv0NXNMTy5kbOuZ9+IlDSJr8QsQPUMC5R7o
x+tegKrwJ7sXuCy94v68npB2cxt7rvJD16Jk0TDKUkJk3Jjp06oEheexak+e
0sh+GOAorbK1vDRvLUxs+GXvCnW4XVWWr3162qkf6MGhgI6WZJdPL5d53sdm
5SrY3PWeiaxkvrOir0OOKTKytSgolpbaOsqLiI95imWoFtLQxOKuPsqKVez4
QsHycPNgPEJwXBGElbCWlLm4ZbrhSyUZoBGa29LmeW1aurwZSAMTRLJGUXJa
04h+qHenqawzO0Zz0ymutFlcclrpGstLC2PzShzDnh/Njkr7PdCp8Gm8LKLb
qcuCSoHOUlHJ3hTiPtI2YrHoszAnr8+APYWSabHHcbbY481sP/bEqJeEPQ3n
ydnTZnTLXtPYy3xbVfXbW+pmQJ32RtFOpc5+I65U1RjfaJk5e6aofbh4/sb7
/t8sGTRayP0y9eeWiLw4fj018syvZnPlBjVEZLQE1iJQPmseTD0T9hQmpPu9
U9kzgVsKCkV3dgaFNdyybUthbAnyKMSaZkNh8o1frG98FnMjSs2k8vUEPnlQ
Vm1TT0DlJP7aRy2RLZE7gkh5rWpntmVxPBbzwk+Xtz2HWrcutERuDyLHDEPN
kMZ6e2gmg+q6eG708a619E2LvsqtmCnRN51wsGhs2gyKXrcMjstg1RfWJ+Kw
RhyjZXDZGUzuxUyfP9OTfm17M/gVvY5CnMcLQ20D/rK31hrMXn7IYu7UlWmo
pq5M98KoM+M8VdEK4cbubPLqxfSbwmCpotov/rYktiRWkSj2U3Y0iXledmLn
XiMv9mqmRJ6+GZnHW1ROLhtmTRkWbTRlij89K74qW6/iq354txZpomhzSJt0
ETQj5oTD1TK3PMxlhXEnI8/2mBbKoKngv7wjORwvntsyuOwMKnsqDaEvNxAx
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
AV9I4HctgfudcI977gzEEo0RtigGBbbkswRsq2fhSIK8t9ruQS/fSLuOAKTm
kmq6i6uYzktChKFX8NhP+Kplq/9b9cEldMFZQMMX5afY8MdZDBEu4bL4c/UZ
cKSljc8eQvUg9GylGlWQCfSQjkjNg3adlQX4oJkvKIN5Qbn2toLZPaUcizWW
MUN8eJQT16gpFXA7U/wQqAMkfit53rEzWwEobztjUKGpcnw+K6JT93SkKDzJ
gvNVEN8NMJYUxFUNRvydYXNDSIHK/arS1fqvXtfeh6mahQyC0ix0RNB085FB
4Sack2W4u0hlFi4HVXgVs1LMVGY8SoYlMjpeReG93GPaF7ffRty/FYZREn82
RD88XNLC1VeWgs+KLpDJekG59qXGkyi7EMmuZq1f3Q6kJTdOlo20Wq8cLIcO
belr6WvpW1r6pvPNspbDlsMsDid/36tlsGWwZbBlsKEM2l+daGmsoHEa7822
JLYktiS2JLYkLjOJsidakrKWwZbBlsGWwZbBlsGWwZbBlsGWwe3L4MV8+Fr+
Wv5a/lr+Wv5a/lr+Wv5a/rYff7nbxy2JLYktiS2JcyZR1DAxieOdU9lS2FLY
UthSKCjUzEvLX8tfy1/LX8tfy1/LX8tfy1/LX8tfy1/L3xT4kw2+25LXkteS
t43IM0Jg4tyRCalTOt3y1vLW8tby1vLW8tby1vLW8tby1vLW8tby1vLW8tby
tvN4wzZb3paGN9Fmy9uO4g3Hslje8F7LWw5vNfYmZ0qedsNISd0y2DLYMtgy
uBQMakuPbU9fjZ60HLYcthy2HLYcthzuQA6z6GgJbAlsCWwJbAlsCWwJbAnc
BgRC+sbNk1c+2D4Ewmh2AoEuUWofkqbyHLKYFLdYgLx38Nm3PbkMSMjPCpcb
S+QXw9B47tgwNI1kxiXc3SzyEi8Fly8XT3RcnmdIdszzQT/yNZ8LwEDCXACF
gLkW7vFky3jPRavlZF8AyeLaF/Da0I85TgCNYz4fxuTHCuNm48U07jx9+T1L
PhrH9woMszNwyc1/T2SMhxm6CigdhUpH8OTWtN0anZYFHK5jiUFogWCFPPPw
A7npCdbbElahOoovLAkdMUWxEPW+oFxzYjHyA+Xo+HTYGjpDQAEfKJKEQ954
qART2iMyr2HNA5/z3iPjUbkTQCkpnYeuo2L+TFV2LDPMNVkhOy/h79ULnTBv
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"ec3df3fb-9167-4de5-9dba-3fb842fc54a4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Topology Comparison and Resilience Analysis", "Section",
 CellChangeTimes->{{3.9629599412040358`*^9, 3.9629599418125887`*^9}, {
  3.962976461637974*^9, 3.962976463707608*^9}, {3.962977240069503*^9, 
  3.962977270086713*^9}, {3.962977302694579*^9, 3.962977303262985*^9}, {
  3.962977542816965*^9, 
  3.96297755264627*^9}},ExpressionUUID->"aa51763e-d445-4a0e-af47-\
fb875e898ca2"],

Cell["\<\
This Mathematica notebook serves as a comprehensive \
\[OpenCurlyDoubleQuote]code as proof,\[CloseCurlyDoubleQuote] meticulously \
analyzing and contrasting foundational networking topologies and protocols to \
build the case for the D\[CapitalAE]D\[CapitalAE]LUS architecture. It begins \
by visually and mathematically comparing the resilience of Centralized, \
Decentralized, Distributed, and the D\[CapitalAE]D\[CapitalAE]LUS Transaction \
Fabric topologies, using the number of spanning trees as a resilience metric. \
It then provides interactive models of both the classical Metcalfe Ethernet \
efficiency and the superior D\[CapitalAE]D\[CapitalAE]LUS N2N link \
utilization. The notebook culminates in \[OpenCurlyDoubleQuote]The Efficiency \
Showdown,\[CloseCurlyDoubleQuote] a direct graphical comparison that starkly \
illustrates the performance advantage of the contention-free D\[CapitalAE]D\
\[CapitalAE]LUS model. Finally, it visualizes the concept of Hypercells on \
the N2N lattice, reinforcing the system\[CloseCurlyQuote]s core architectural \
principles.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.962976449259252*^9, 3.962976450044448*^9}, {3.962977235619433*^9, 
  3.96297723652151*^9}, {3.962977278097171*^9, 3.962977280248294*^9}, {
  3.96297731063553*^9, 3.962977312462914*^9}, {3.96297754426095*^9, 
  3.9629775791911983`*^9}},ExpressionUUID->"19297801-ee61-41ad-a6f8-\
72acc36dd681"],

Cell[TextData[{
 "This section constructs and analyzes four distinct network topologies, \
directly referencing the classifications first proposed by Paul Baran. We \
begin with a Centralized StarGraph, which represents a single point of \
failure\[LongDash]a design that is avoided for its fragility. We then model a \
Decentralized network, which is more common but still suffers from \
\[OpenCurlyDoubleQuote]multiple SPOFs (Network partition possibilities),\
\[CloseCurlyDoubleQuote] fracturing into isolated islands when a switch \
fails. This is contrasted with a fully Distributed GridGraph, which provides \
far greater resilience because \[OpenCurlyDoubleQuote]failed nodes are routed \
around, and many links must fail before any node is finally isolated.\
\[CloseCurlyDoubleQuote]\n\nThe pinnacle of this evolution is our Transaction \
Fabric, a toroidal mesh that represents the D\[CapitalAE]D\[CapitalAE]LUS N2N \
Lattice. To provide a quantitative measure of resilience, we implement the \
countSpanningTrees function, which calculates the Graph Laplacian and its \
determinant. This metric, known as the tree-number, gives a concrete value \
for the network\[CloseCurlyQuote]s path diversity and robustness against link \
failures. The final grid visually demonstrates that the distributed and \
Transaction Fabric topologies offer exponentially greater resilience\
\[LongDash]a core tenet of the D\[CapitalAE]D\[CapitalAE]LUS philosophy.\n\n\
",
 StyleBox["Classical Ethernet Efficiency (Metcalfe Model)\n",
  FontWeight->"Bold"],
 "This interactive model implements the efficiency equations from Metcalfe \
and Boggs\[CloseCurlyQuote] original 1976 paper on Ethernet. It simulates a \
shared, half-duplex medium where multiple stations contend for access using \
statistical arbitration. The sliders allow you to explore how efficiency (E) \
is affected by the number of competing stations (Q) and the packet size (P).\n\
\nThis simulation serves to demonstrate a foundational flaw of classical \
Ethernet: \[OpenCurlyDoubleQuote]At some point the Ether will be so busy that \
additional stations will just divide more finely the already inadequate \
bandwidth.\[CloseCurlyDoubleQuote] As you increase the number of stations, \
the contention interval (W) grows, and the efficiency plummets, especially \
for smaller packets. This model is a powerful tool for understanding why \
protocols based on contention and statistical recovery inevitably lead to \
performance degradation and unbounded tail latency under load. It makes the \
case for why a new, contention-free model is necessary.\n\n",
 StyleBox["D\[CapitalAE]D\[CapitalAE]LUS Protocol Efficiency on N2N Links\n",
  FontWeight->"Bold"],
 "In stark contrast to the Metcalfe model, this interactive plot demonstrates \
the efficiency of the D\[CapitalAE]D\[CapitalAE]LUS protocol on a \
point-to-point, neighbor-to-neighbor (N2N) link. The core insight here is \
that on short, dedicated links, the acknowledgment for a packet can be \
received while the sender is still transmitting. This \
\[OpenCurlyDoubleQuote]longer than the wire\[CloseCurlyDoubleQuote] effect \
fundamentally changes the efficiency calculation.\n\nThe model shows that as \
the link length approaches zero, link utilization approaches 100%, regardless \
of packet size or bandwidth. This is because there is no contention; the \
protocol is not based on statistical arbitration but on a deterministic, \
reversible handshake. This simulation proves our thesis: \
\[OpenCurlyDoubleQuote]We do not lose bandwidth... acknowledgements are \
in-flight, not blocking.\[CloseCurlyDoubleQuote] It makes the argument that \
the industry\[CloseCurlyQuote]s reliance on bandwidth as the sole measure of \
performance is misguided, and that focusing on the transactional capacity of \
reliable, short links offers a superior path to high performance.\n\n",
 StyleBox["The Efficiency Showdown\n",
  FontWeight->"Bold"],
 "This plot brings the previous two models into direct comparison, providing \
a clear and decisive \[OpenCurlyDoubleQuote]Efficiency Showdown.\
\[CloseCurlyDoubleQuote] The red line shows the efficiency of classical \
Ethernet as the number of competing stations increases\[LongDash]it \
predictably degrades due to contention. The blue dashed line represents the D\
\[CapitalAE]D\[CapitalAE]LUS N2N link. Its efficiency remains at 100% because \
it is, by design, contention-free.\n\nThis visualization is the culmination \
of our argument. It demonstrates that by moving from a shared, broadcast \
medium to a fabric of direct, neighbor-to-neighbor connections, we escape the \
limitations of the original Ethernet model entirely. This is not an \
incremental improvement; it is a paradigm shift. The D\[CapitalAE]D\
\[CapitalAE]LUS architecture is \[OpenCurlyDoubleQuote]not an attempt to \
optimize these variables; it is an escape from this entire model.\
\[CloseCurlyDoubleQuote]\n\n",
 StyleBox["Hypercell Visualization\n",
  FontWeight->"Bold"],
 "This final visualization returns to the architectural concepts of the N2N \
Lattice and the Hypercell. It renders the underlying graph structure and then \
highlights two hypercells, demonstrating how these 9-node units are the \
fundamental building blocks of the larger fabric. This reinforces the idea \
that the D\[CapitalAE]D\[CapitalAE]LUS system is built on principles of \
locality and compositionality. Global behavior emerges from the coordinated \
actions of these local, autonomous units. This is the physical and logical \
foundation upon which our reversible transactions and reliable protocols are \
built."
}], "Affiliation",
 CellChangeTimes->{{3.962959958952446*^9, 3.962959960700286*^9}, {
  3.962976453241884*^9, 3.9629764549937057`*^9}, {3.962977246740715*^9, 
  3.962977317981017*^9}, {3.962977545342894*^9, 
  3.962977668165409*^9}},ExpressionUUID->"4071159d-41dc-4340-84e0-\
5652007bc8c0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"daedalusNodes", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"\"\<DaedaelusProtocol\>\"", "\[Rule]", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{
        "\"\<Label\>\"", "\[Rule]", "\"\<D\[AE]d\[AE]lus Protocol\>\""}], ",", 
        RowBox[{"\"\<Group\>\"", "\[Rule]", "\"\<Core Concepts\>\""}], ",", 
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<An architecture addressing fundamental problems in distributed \
systems using protocols, data structures, and algorithms inspired by Quantum \
Information Theory and Multiway Systems.\>\""}]}], "]"}]}], ",", 
     RowBox[{"\"\<GVM\>\"", "\[Rule]", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{
        "\"\<Label\>\"", "\[Rule]", "\"\<Graph Virtual Machine\\n(GVM)\>\""}],
         ",", 
        RowBox[{"\"\<Group\>\"", "\[Rule]", "\"\<Core Concepts\>\""}], ",", 
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<Builds and tears down 'named' graph relationships (sets/graph \
covers). The GVM enables transaction-multiplexing by deterministically \
scheduling interactions to avoid contention.\>\""}]}], "]"}]}], ",", 
     RowBox[{"\"\<N2NLattice\>\"", "\[Rule]", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{"\"\<Label\>\"", "\[Rule]", "\"\<N2N Lattice\>\""}], ",", 
        RowBox[{"\"\<Group\>\"", "\[Rule]", "\"\<Core Concepts\>\""}], ",", 
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<Operational maxim: 'Manage on a Tree, Compute on a Graph.' Uses \
a lattice structure for resilient, local, and relative address-free \
routing.\>\""}]}], "]"}]}], ",", 
     RowBox[{"\"\<Hypercell\>\"", "\[Rule]", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{"\"\<Label\>\"", "\[Rule]", "\"\<Hypercell (Tile)\>\""}], ",", 
        RowBox[{
        "\"\<Group\>\"", "\[Rule]", "\"\<Mechanisms & Protocols\>\""}], ",", 
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<A 9-cell deployable unit of distributed computation. It can \
dynamically expand and contract without the fragility of a fixed Cartesian \
coordinate system.\>\""}]}], "]"}]}], ",", 
     RowBox[{"\"\<TokenDynamics\>\"", "\[Rule]", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{"\"\<Label\>\"", "\[Rule]", "\"\<Token Dynamics\>\""}], ",", 
        RowBox[{
        "\"\<Group\>\"", "\[Rule]", "\"\<Mechanisms & Protocols\>\""}], ",", 
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<Manages the flow of conserved quantities. Failures are handled \
with reversal recovery, specified via Petri-Spekkens diagrams.\>\""}]}], 
       "]"}]}], ",", 
     RowBox[{"\"\<ReversibleSubtransaction\>\"", "\[Rule]", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{
        "\"\<Label\>\"", "\[Rule]", "\"\<Reversible Subtransactions\>\""}], 
        ",", 
        RowBox[{
        "\"\<Group\>\"", "\[Rule]", "\"\<Mechanisms & Protocols\>\""}], ",", 
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<// Time-reversible constructors for error recovery. This avoids \
the 'irreversible smash and restart of Shannon information' common in \
traditional systems.\>\""}]}], "]"}]}], ",", 
     RowBox[{"\"\<TruncatedTailLatency\>\"", "\[Rule]", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{
        "\"\<Label\>\"", "\[Rule]", "\"\<Truncated Tail Latency\>\""}], ",", 
        RowBox[{"\"\<Group\>\"", "\[Rule]", "\"\<Problems Addressed\>\""}], 
        ",", 
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<// The protocol knows if a transaction failed or succeeded \
without heartbeats or timeouts, eliminating the root cause of long-tail \
latency.\>\""}]}], "]"}]}], ",", 
     RowBox[{"\"\<AddressFreeRouting\>\"", "\[Rule]", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{
        "\"\<Label\>\"", "\[Rule]", 
         "\"\<Relative Address-Free\\nRouting\>\""}], ",", 
        RowBox[{
        "\"\<Group\>\"", "\[Rule]", "\"\<Mechanisms & Protocols\>\""}], ",", 
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<Routing decisions are made with local information only. The \
lack of a global address space means partitions cannot strand \
frames.\>\""}]}], "]"}]}], ",", 
     RowBox[{"\"\<QIT\>\"", "\[Rule]", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{
        "\"\<Label\>\"", "\[Rule]", "\"\<Quantum Information\\nTheory\>\""}], 
        ",", 
        RowBox[{
        "\"\<Group\>\"", "\[Rule]", "\"\<Theoretical Foundations\>\""}], ",", 
        
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<The primary theoretical inspiration for our models of causality \
and state management.\>\""}]}], "]"}]}], ",", 
     RowBox[{"\"\<MultiwaySystems\>\"", "\[Rule]", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{"\"\<Label\>\"", "\[Rule]", "\"\<Multiway Systems\>\""}], ",", 
        RowBox[{
        "\"\<Group\>\"", "\[Rule]", "\"\<Theoretical Foundations\>\""}], ",", 
        
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<Provides the framework for modeling dynamic causal structures \
and the multicomputational nature of our system.\>\""}]}], "]"}]}], ",", 
     RowBox[{"\"\<PetriNets\>\"", "\[Rule]", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{"\"\<Label\>\"", "\[Rule]", "\"\<Petri Nets\>\""}], ",", 
        RowBox[{
        "\"\<Group\>\"", "\[Rule]", "\"\<Theoretical Foundations\>\""}], ",", 
        
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<Used to formally specify reversible constructors and model the \
state-flow governed by Token Dynamics.\>\""}]}], "]"}]}], ",", 
     RowBox[{"\"\<ClassicalEthernet\>\"", "\[Rule]", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{
        "\"\<Label\>\"", "\[Rule]", 
         "\"\<Classical Ethernet\\n(Stop-and-Wait)\>\""}], ",", 
        RowBox[{"\"\<Group\>\"", "\[Rule]", "\"\<Historical Context\>\""}], 
        ",", 
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<The conventional timeout-and-retry model leads to unbounded \
tail latency. D\[AE]d\[AE]lus is an escape from this entire \
paradigm.\>\""}]}], "]"}]}], ",", 
     RowBox[{"\"\<UnboundedRetries\>\"", "\[Rule]", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{
        "\"\<Label\>\"", "\[Rule]", 
         "\"\<Unbounded Retries &\\nTimeouts\>\""}], ",", 
        RowBox[{"\"\<Group\>\"", "\[Rule]", "\"\<Problems Addressed\>\""}], 
        ",", 
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<The root cause of chaotic contention and long-tail latency, \
eliminated by the Truncated Tail Latency protocol.\>\""}]}], "]"}]}], ",", 
     RowBox[{"\"\<NetworkPartitions\>\"", "\[Rule]", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{"\"\<Label\>\"", "\[Rule]", "\"\<Network Partitions\>\""}], 
        ",", 
        RowBox[{"\"\<Group\>\"", "\[Rule]", "\"\<Problems Addressed\>\""}], 
        ",", 
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<Partitions create insidious non-determinism. The \
D\[AE]d\[AE]lus protocol is partition-sensitive and uses reversibility to \
recover deterministically.\>\""}]}], "]"}]}], ",", 
     RowBox[{"\"\<ExactlyOnceSemantics\>\"", "\[Rule]", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{
        "\"\<Label\>\"", "\[Rule]", "\"\<Exactly-Once Semantics\>\""}], ",", 
        RowBox[{"\"\<Group\>\"", "\[Rule]", "\"\<Core Concepts\>\""}], ",", 
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<// The primary goal of Open Atomic Ethernet: either both \
endpoints know a message was successfully transferred, or only the sender \
knows it failed \[Dash] with no other node aware the message ever \
existed.\>\""}]}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"daedalusEdges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<DaedaelusProtocol\>\"", "\[Rule]", "\"\<QIT\>\""}], ",", 
     RowBox[{
     "\"\<DaedaelusProtocol\>\"", "\[Rule]", "\"\<MultiwaySystems\>\""}], ",", 
     RowBox[{"\"\<DaedaelusProtocol\>\"", "\[Rule]", "\"\<GVM\>\""}], ",", 
     RowBox[{"\"\<DaedaelusProtocol\>\"", "\[Rule]", "\"\<N2NLattice\>\""}], 
     ",", 
     RowBox[{
     "\"\<DaedaelusProtocol\>\"", "\[Rule]", "\"\<ClassicalEthernet\>\""}], 
     ",", 
     RowBox[{"\"\<GVM\>\"", "\[Rule]", "\"\<AddressFreeRouting\>\""}], ",", 
     RowBox[{"\"\<GVM\>\"", "\[Rule]", "\"\<Hypercell\>\""}], ",", 
     RowBox[{"\"\<N2NLattice\>\"", "\[Rule]", "\"\<Hypercell\>\""}], ",", 
     RowBox[{"\"\<N2NLattice\>\"", "\[Rule]", "\"\<AddressFreeRouting\>\""}], 
     ",", 
     RowBox[{"\"\<Hypercell\>\"", "\[Rule]", "\"\<DaedaelusProtocol\>\""}], 
     ",", 
     RowBox[{
     "\"\<TokenDynamics\>\"", "\[Rule]", "\"\<ReversibleSubtransaction\>\""}],
      ",", 
     RowBox[{"\"\<TokenDynamics\>\"", "\[Rule]", "\"\<PetriNets\>\""}], ",", 
     RowBox[{
     "\"\<ReversibleSubtransaction\>\"", "\[Rule]", 
      "\"\<ExactlyOnceSemantics\>\""}], ",", 
     RowBox[{
     "\"\<ReversibleSubtransaction\>\"", "\[Rule]", 
      "\"\<NetworkPartitions\>\""}], ",", 
     RowBox[{
     "\"\<TruncatedTailLatency\>\"", "\[Rule]", "\"\<UnboundedRetries\>\""}], 
     ",", 
     RowBox[{
     "\"\<ClassicalEthernet\>\"", "\[Rule]", "\"\<UnboundedRetries\>\""}], 
     ",", 
     RowBox[{
     "\"\<DaedaelusProtocol\>\"", "\[Rule]", "\"\<TruncatedTailLatency\>\""}],
      ",", 
     RowBox[{
     "\"\<DaedaelusProtocol\>\"", "\[Rule]", 
      "\"\<ExactlyOnceSemantics\>\""}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edgeRelationshipLookup", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<DaedaelusProtocol\>\"", "\[Rule]", "\"\<QIT\>\""}], ")"}],
       "\[Rule]", "\"\<inspired by\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "\"\<DaedaelusProtocol\>\"", "\[Rule]", "\"\<MultiwaySystems\>\""}], 
       ")"}], "\[Rule]", "\"\<inspired by\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<DaedaelusProtocol\>\"", "\[Rule]", "\"\<GVM\>\""}], ")"}],
       "\[Rule]", "\"\<is composed of\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<DaedaelusProtocol\>\"", "\[Rule]", "\"\<N2NLattice\>\""}],
        ")"}], "\[Rule]", "\"\<is composed of\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "\"\<DaedaelusProtocol\>\"", "\[Rule]", "\"\<ClassicalEthernet\>\""}], 
       ")"}], "\[Rule]", "\"\<contrasts with\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<GVM\>\"", "\[Rule]", "\"\<AddressFreeRouting\>\""}], 
       ")"}], "\[Rule]", "\"\<enables\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<GVM\>\"", "\[Rule]", "\"\<Hypercell\>\""}], ")"}], 
      "\[Rule]", "\"\<manages\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<N2NLattice\>\"", "\[Rule]", "\"\<Hypercell\>\""}], ")"}], 
      "\[Rule]", "\"\<is composed of\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "\"\<N2NLattice\>\"", "\[Rule]", "\"\<AddressFreeRouting\>\""}], ")"}],
       "\[Rule]", "\"\<utilizes\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<Hypercell\>\"", "\[Rule]", "\"\<DaedaelusProtocol\>\""}], 
       ")"}], "\[Rule]", "\"\<is a unit of\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "\"\<TokenDynamics\>\"", "\[Rule]", 
        "\"\<ReversibleSubtransaction\>\""}], ")"}], "\[Rule]", 
      "\"\<enables\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<TokenDynamics\>\"", "\[Rule]", "\"\<PetriNets\>\""}], 
       ")"}], "\[Rule]", "\"\<specified as\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "\"\<ReversibleSubtransaction\>\"", "\[Rule]", 
        "\"\<ExactlyOnceSemantics\>\""}], ")"}], "\[Rule]", 
      "\"\<achieves\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "\"\<ReversibleSubtransaction\>\"", "\[Rule]", 
        "\"\<NetworkPartitions\>\""}], ")"}], "\[Rule]", 
      "\"\<recovers from\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "\"\<TruncatedTailLatency\>\"", "\[Rule]", 
        "\"\<UnboundedRetries\>\""}], ")"}], "\[Rule]", "\"\<solves\>\""}], 
     ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "\"\<ClassicalEthernet\>\"", "\[Rule]", "\"\<UnboundedRetries\>\""}], 
       ")"}], "\[Rule]", "\"\<suffers from\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "\"\<DaedaelusProtocol\>\"", "\[Rule]", 
        "\"\<TruncatedTailLatency\>\""}], ")"}], "\[Rule]", 
      "\"\<provides\>\""}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "\"\<DaedaelusProtocol\>\"", "\[Rule]", 
        "\"\<ExactlyOnceSemantics\>\""}], ")"}], "\[Rule]", 
      "\"\<provides\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"coreColor", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.12", ",", "0.47", ",", "0.71"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mechanismColor", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"1.00", ",", "0.50", ",", "0.05"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"foundationColor", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.17", ",", "0.63", ",", "0.17"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"problemColor", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.84", ",", "0.15", ",", "0.16"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"historicalColor", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0.50", ",", "0.50", ",", "0.50"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fontColor", "=", "White"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"groupToColor", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{"\"\<Core Concepts\>\"", "\[Rule]", "coreColor"}], ",", 
     RowBox[{"\"\<Mechanisms & Protocols\>\"", "\[Rule]", "mechanismColor"}], 
     ",", 
     RowBox[{
     "\"\<Theoretical Foundations\>\"", "\[Rule]", "foundationColor"}], ",", 
     RowBox[{"\"\<Problems Addressed\>\"", "\[Rule]", "problemColor"}], ",", 
     RowBox[{"\"\<Historical Context\>\"", "\[Rule]", "historicalColor"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", "makeDaedalusOntologyGraph", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"makeDaedalusOntologyGraph", "[", 
    RowBox[{"nodes_Association", ",", "edges_List", ",", 
     RowBox[{"size_", ":", "Medium"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "comms", ",", "img", ",", "aSize", ",", "vLbl", ",", "vSz", ",", "vSty",
        ",", "eLbl"}], "}"}], ",", 
     RowBox[{
      RowBox[{"comms", "=", 
       RowBox[{"Values", "[", 
        RowBox[{"GroupBy", "[", 
         RowBox[{
          RowBox[{"Keys", "[", "nodes", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"nodes", "[", "#1", "]"}], "[", "\"\<Group\>\"", "]"}], 
           "&"}]}], "]"}], "]"}]}], ";", 
      RowBox[{"img", "=", 
       RowBox[{"Replace", "[", 
        RowBox[{"size", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Large", "\[Rule]", "2000"}], ",", 
           RowBox[{"Medium", "\[Rule]", "1200"}], ",", 
           RowBox[{"_", "\[Rule]", "850"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"aSize", "=", 
       RowBox[{"Replace", "[", 
        RowBox[{"size", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Large", "\[Rule]", "0.03"}], ",", 
           RowBox[{"Medium", "\[Rule]", "0.02"}], ",", 
           RowBox[{"_", "\[Rule]", "0.015"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"vLbl", "=", 
       RowBox[{"AssociationMap", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"Tooltip", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"nodes", "[", "#1", "]"}], "[", "\"\<Label\>\"", 
                 "]"}], ",", "fontColor", ",", "Bold", ",", 
                RowBox[{
                "FontFamily", "\[Rule]", "\"\<Source Sans Pro\>\""}]}], "]"}],
               ",", 
              RowBox[{
               RowBox[{"nodes", "[", "#1", "]"}], "[", "\"\<Description\>\"", 
               "]"}]}], "]"}], ",", "Center"}], "]"}], "&"}], ",", 
         RowBox[{"Keys", "[", "nodes", "]"}]}], "]"}]}], ";", 
      RowBox[{"vSz", "=", 
       RowBox[{"AssociationMap", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"nodes", "[", "#1", "]"}], "[", "\"\<Group\>\"", "]"}], 
             "===", "\"\<Core Concepts\>\""}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Scaled\>\"", ",", "0.07"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Scaled\>\"", ",", "0.055"}], "}"}]}], "]"}], "&"}], 
         ",", 
         RowBox[{"Keys", "[", "nodes", "]"}]}], "]"}]}], ";", 
      RowBox[{"vSty", "=", 
       RowBox[{"AssociationMap", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"groupToColor", "[", 
           RowBox[{
            RowBox[{"nodes", "[", "#1", "]"}], "[", "\"\<Group\>\"", "]"}], 
           "]"}], "&"}], ",", 
         RowBox[{"Keys", "[", "nodes", "]"}]}], "]"}]}], ";", 
      RowBox[{"eLbl", "=", 
       RowBox[{"AssociationMap", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"edgeRelationshipLookup", "[", "#1", "]"}], ",", 
              RowBox[{"GrayLevel", "[", "0.25", "]"}], ",", "Italic", ",", 
              "9"}], "]"}], ",", "0.50"}], "]"}], "&"}], ",", "edges"}], 
        "]"}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"Keys", "[", "nodes", "]"}], ",", "edges", ",", 
        RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
        RowBox[{"GraphLayout", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<CommunityEmbedding\>\"", ",", 
           RowBox[{"\"\<Communities\>\"", "\[Rule]", "comms"}], ",", 
           RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<Hierarchical\>\""}]}], 
          "}"}]}], ",", 
        RowBox[{"VertexLabels", "\[Rule]", "vLbl"}], ",", 
        RowBox[{"VertexSize", "\[Rule]", "vSz"}], ",", 
        RowBox[{"VertexStyle", "\[Rule]", "vSty"}], ",", 
        RowBox[{"VertexShapeFunction", "\[Rule]", "\"\<RoundRectangle\>\""}], 
        ",", 
        RowBox[{"EdgeLabels", "\[Rule]", "eLbl"}], ",", 
        RowBox[{"EdgeStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Opacity", "[", "0.75", "]"}], ",", 
           RowBox[{"GrayLevel", "[", "0.15", "]"}], ",", 
           RowBox[{"Arrowheads", "[", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"aSize", ",", "0.9"}], "}"}], "}"}], "]"}]}], "]"}]}], 
        ",", 
        RowBox[{"Background", "\[Rule]", "White"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "img"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"GraphPlot", "[", 
  RowBox[{"makeDaedalusOntologyGraph", "[", 
   RowBox[{"daedalusNodes", ",", "daedalusEdges", ",", "Medium"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.962981329938802*^9, 3.962981335158122*^9}, {
  3.962981371550729*^9, 3.962981372958973*^9}},
 CellLabel->
  "In[947]:=",ExpressionUUID->"deeb7880-73b9-45a9-aeee-0f5e6447e66b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[{{1.2841836035663436`, 1.7937590796060305`}, {
    0.33797239310820704`, 2.4439866206887206`}, {0.7352378292888044, 
    2.8426580606596223`}, {0.8690452150565167, 2.389963911215944}, {
    5.443446965929827, 2.1196870362424955`}, {4.327036040724087, 
    1.7838161384968574`}, {1.3941057119532763`, 0.6986412209008537}, {0., 
    3.1874135278386255`}, {1.905924577652094, 2.3810149146898216`}, {
    0.3669949055123094, 1.4419880012845918`}, {6.315528856526816, 
    2.3284800837191177`}, {0.8627135204305338, 0.7503398045817493}, {
    0.9849324284705574, 0.}, {4.958088312759402, 1.2300302185457914`}, {
    2.8858372927076363`, 1.7785042679852885`}}, {
     {RGBColor[0.5, 0., 0.], Arrowheads[{{0.020658824865261396`, 0.8}}], 
      ArrowBox[{1, 2}], ArrowBox[{1, 3}], ArrowBox[{1, 7}], ArrowBox[{1, 9}], 
      ArrowBox[{1, 10}], ArrowBox[{1, 12}], ArrowBox[{1, 15}], 
      ArrowBox[{2, 4}], ArrowBox[{2, 8}], ArrowBox[{3, 4}], ArrowBox[{3, 8}], 
      ArrowBox[{4, 1}], ArrowBox[{5, 6}], ArrowBox[{5, 11}], 
      ArrowBox[{6, 14}], ArrowBox[{6, 15}], ArrowBox[{7, 13}], 
      ArrowBox[{12, 13}]}, 
     {RGBColor[0, 0, 0.7], 
      TagBox[
       TooltipBox[PointBox[1],
        "1"],
       Annotation[#, 1, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[2],
        "2"],
       Annotation[#, 2, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[3],
        "3"],
       Annotation[#, 3, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[4],
        "4"],
       Annotation[#, 4, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[5],
        "5"],
       Annotation[#, 5, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[6],
        "6"],
       Annotation[#, 6, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[7],
        "7"],
       Annotation[#, 7, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[8],
        "8"],
       Annotation[#, 8, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[9],
        "9"],
       Annotation[#, 9, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[10],
        "10"],
       Annotation[#, 10, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[11],
        "11"],
       Annotation[#, 11, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[12],
        "12"],
       Annotation[#, 12, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[13],
        "13"],
       Annotation[#, 13, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[14],
        "14"],
       Annotation[#, 14, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[15],
        "15"],
       Annotation[#, 15, "Tooltip"]& ]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{1.2841836035663436`, 1.7937590796060305`}, {
     0.33797239310820704`, 2.4439866206887206`}, {0.7352378292888044, 
     2.8426580606596223`}, {0.8690452150565167, 2.389963911215944}, {
     5.443446965929827, 2.1196870362424955`}, {4.327036040724087, 
     1.7838161384968574`}, {1.3941057119532763`, 0.6986412209008537}, {0., 
     3.1874135278386255`}, {1.905924577652094, 2.3810149146898216`}, {
     0.3669949055123094, 1.4419880012845918`}, {6.315528856526816, 
     2.3284800837191177`}, {0.8627135204305338, 0.7503398045817493}, {
     0.9849324284705574, 0.}, {4.958088312759402, 1.2300302185457914`}, {
     2.8858372927076363`, 1.7785042679852885`}}]& ],
  AspectRatio->Automatic,
  Background->GrayLevel[1],
  FrameTicks->None,
  ImageSize->1200,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{{3.962981554215889*^9, 3.962981559907263*^9}},
 CellLabel->
  "Out[959]=",ExpressionUUID->"351179e7-e093-40ce-8af1-f549f5b02fba"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Node Definitions: The Core Vocabulary", "Section",
 CellChangeTimes->{{3.9629599412040358`*^9, 3.9629599418125887`*^9}, {
  3.962976461637974*^9, 3.962976463707608*^9}, {3.962977240069503*^9, 
  3.962977270086713*^9}, {3.962977302694579*^9, 3.962977303262985*^9}, {
  3.96297770901075*^9, 
  3.96297770967925*^9}},ExpressionUUID->"6fdb90f4-79a1-411b-8a95-\
715f768c21d4"],

Cell["\<\
This Mathematica notebook constructs and visualizes the D\[CapitalAE]D\
\[CapitalAE]LUS Ontology, a knowledge graph that maps the core concepts, \
mechanisms, and theoretical underpinnings of the \
D\[CapitalAE]D\[CapitalAE]LUS philosophy. It begins by defining the nodes of \
the graph\[LongDash]key terms like \[OpenCurlyDoubleQuote]Graph Virtual \
Machine,\[CloseCurlyDoubleQuote] \[OpenCurlyDoubleQuote]N2N Lattice,\
\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]Reversible \
Subtransactions\[CloseCurlyDoubleQuote]\[LongDash]each with a detailed \
description drawn directly from the project\[CloseCurlyQuote]s foundational \
documents. It then defines the directed edges, representing the causal and \
compositional relationships between these concepts. Finally, it uses a \
force-directed layout algorithm to render the ontology, grouping related \
concepts by color and function. The resulting graph serves as a visual \
\[OpenCurlyDoubleQuote]code as proof,\[CloseCurlyDoubleQuote] providing a \
clear, interactive map of the entire D\[CapitalAE]D\[CapitalAE]LUS conceptual \
architecture, from its quantum-inspired foundations to its solutions for \
real-world distributed systems problems.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.962959948591845*^9, 3.962959950083309*^9}, {
  3.962976449259252*^9, 3.962976450044448*^9}, {3.962977235619433*^9, 
  3.96297723652151*^9}, {3.962977278097171*^9, 3.962977280248294*^9}, {
  3.96297731063553*^9, 3.962977312462914*^9}, {3.9629777133082438`*^9, 
  3.962977721387727*^9}},ExpressionUUID->"cc7282d9-8d72-4642-81a7-\
c8cbdf9d62b6"],

Cell[TextData[{
 "This Association data structure, daedalusNodes, serves as the definitive \
lexicon for the D\[CapitalAE]D\[CapitalAE]LUS project. Each entry represents \
a core concept, mechanism, or problem that defines our intellectual \
landscape. We are not just creating a list of terms; we are building a formal \
ontology. As one of our team members noted after a particularly challenging \
meeting, \[OpenCurlyDoubleQuote]we got, you know, criticized for being vague \
about things and for lacking concrete definitions... the conversation kept \
shifting between different domains without clearly defining the core problem\
\[CloseCurlyDoubleQuote]. This data structure is our direct response to that \
critique.\n\nEach node is categorized into a group \
(\[OpenCurlyDoubleQuote]Core Concepts,\[CloseCurlyDoubleQuote] \
\[OpenCurlyDoubleQuote]Mechanisms & Protocols,\[CloseCurlyDoubleQuote] etc.) \
to provide structure, and each Description is a carefully crafted summary of \
its meaning within our philosophy. For example, the \
\[OpenCurlyDoubleQuote]GVM\[CloseCurlyDoubleQuote] is not just a virtual \
machine; it is the specific mechanism that \[OpenCurlyDoubleQuote]enables \
transaction-multiplexing by deterministically scheduling interactions\
\[CloseCurlyDoubleQuote]. Similarly, \[OpenCurlyDoubleQuote]Truncated Tail \
Latency\[CloseCurlyDoubleQuote] is not a generic performance goal but a \
\[OpenCurlyDoubleQuote]key protocol feature that definitively knows \
\[OpenCurlyQuote]if a transaction failed or succeeded (without heartbeats or \
timeouts)\[CloseCurlyQuote]\[CloseCurlyDoubleQuote]. This explicit, \
code-based definition of our terms ensures that our conversations and our \
specifications are built on a foundation of shared, unambiguous \
understanding.\n\n",
 StyleBox["Edge Definitions: Mapping the Relationships",
  FontWeight->"Bold"],
 "\nThe daedalusEdges list defines the directed relationships between the \
concepts in our ontology. This is where we move from a simple vocabulary to a \
true knowledge graph. Each DirectedEdge represents a causal, compositional, \
or inspirational link, making the structure of our philosophy explicit. For \
example, we assert that the \[OpenCurlyDoubleQuote]DaedaelusProtocol\
\[CloseCurlyDoubleQuote] is \[OpenCurlyDoubleQuote]inspired by\
\[CloseCurlyDoubleQuote] \[OpenCurlyDoubleQuote]Quantum Information Theory\
\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]MultiwaySystems,\
\[CloseCurlyDoubleQuote] a direct reflection of our mission statement.\n\nWe \
also map functional relationships, such as how the \[OpenCurlyDoubleQuote]GVM\
\[CloseCurlyDoubleQuote] \[OpenCurlyDoubleQuote]enables\
\[CloseCurlyDoubleQuote] \[OpenCurlyDoubleQuote]AddressFreeRouting,\
\[CloseCurlyDoubleQuote] or how a \
\[OpenCurlyDoubleQuote]ReversibleSubtransaction\[CloseCurlyDoubleQuote] \
\[OpenCurlyDoubleQuote]achieves\[CloseCurlyDoubleQuote] \
\[OpenCurlyDoubleQuote]ExactlyOnceSemantics.\[CloseCurlyDoubleQuote] These \
edges are not arbitrary; they represent the logical connections that form the \
core of our arguments. This graph makes it clear how foundational physical \
principles lead to concrete architectural patterns, which in turn solve \
long-standing problems in distributed systems like \
\[OpenCurlyDoubleQuote]Network Partitions\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]UnboundedRetries.\[CloseCurlyDoubleQuote]\n\n",
 StyleBox["Styling and Visualization Logic\n",
  FontWeight->"Bold"],
 "This section of the code handles the aesthetic and informational \
presentation of our knowledge graph. The color-coding (groupToColor) visually \
separates the different categories of concepts, making the structure of the \
ontology immediately apparent. The styleDaedalusGraph and \
makeDaedalusOntologyGraph functions are the rendering engine for our \
\[OpenCurlyDoubleQuote]code as proof.\[CloseCurlyDoubleQuote]\n\nWe use a \
\[OpenCurlyDoubleQuote]SpringElectricalEmbedding\[CloseCurlyDoubleQuote] \
layout, a force-directed algorithm that naturally clusters related concepts \
and reveals the underlying structure of the ontology. The labels on the edges \
are taken directly from the \[OpenCurlyDoubleQuote]Relationship\
\[CloseCurlyDoubleQuote] property we defined, making the graph \
self-documenting. Tooltips provide the detailed descriptions for each node, \
allowing for interactive exploration. As one team member noted, we want to \
create models that provide \[OpenCurlyDoubleQuote]definitive, visual proof\
\[CloseCurlyDoubleQuote] of our ideas, and this visualization engine is a key \
tool in that effort. It transforms our formal, text-based ontology into an \
intuitive and compelling visual argument.\n\n",
 StyleBox["Graph Generation and Rendering",
  FontWeight->"Bold"],
 "\nThis final line of code executes the entire process, taking our defined \
nodes and edges and rendering the complete D\[CapitalAE]D\[CapitalAE]LUS \
Ontology graph. The output is not just a diagram; it is the logical \
conclusion of our formal specification\[LongDash]a visual representation of \
the entire D\[CapitalAE]D\[CapitalAE]LUS philosophy, ready for exploration \
and discussion."
}], "Affiliation",
 CellChangeTimes->{{3.962959958952446*^9, 3.962959960700286*^9}, {
  3.962976453241884*^9, 3.9629764549937057`*^9}, {3.962977246740715*^9, 
  3.962977317981017*^9}, {3.9629777277501717`*^9, 
  3.9629778056078043`*^9}},ExpressionUUID->"6549d63a-0c3d-4b54-a541-\
f2e1c55245d7"]
}, Open  ]]
},
WindowSize->{1512, 864},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DefaultNewCellStyle->"Input",
Background->Automatic,
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0333b416-6498-4085-9477-e4ddbcfcd3ac"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 276, 6, 84, "Section",ExpressionUUID->"e41579c9-b28b-4b03-adb5-1b582ee3d08a"],
Cell[859, 30, 212, 4, 39, "Affiliation",ExpressionUUID->"6860b1ba-7704-473c-8586-d1432b12b2c7"],
Cell[CellGroupData[{
Cell[1096, 38, 1807, 27, 268, "ItemParagraph",ExpressionUUID->"edafcdbd-7845-4d0e-b135-fc4b4547839f"],
Cell[CellGroupData[{
Cell[2928, 69, 7913, 202, 825, "Input",ExpressionUUID->"77720440-0a50-48c6-86a7-c7a99a24dea2"],
Cell[10844, 273, 7052, 136, 634, "Output",ExpressionUUID->"bdab6114-a389-4e67-a0de-c31df8c73a24"]
}, Open  ]]
}, Open  ]],
Cell[17923, 413, 289, 4, 39, "Affiliation",ExpressionUUID->"687f328a-8652-411e-a2be-4fa1c5344bb4"],
Cell[CellGroupData[{
Cell[18237, 421, 1831, 27, 294, "ItemParagraph",ExpressionUUID->"7a2b3b41-2911-4ec4-b2aa-5eab84f5e1b1"],
Cell[CellGroupData[{
Cell[20093, 452, 23479, 606, 2091, "Input",ExpressionUUID->"d08092aa-cb77-4384-8451-850d11cc9ea1"],
Cell[43575, 1060, 9490, 174, 674, "Output",ExpressionUUID->"be53d69a-ae3c-44bd-ad5a-956a3f4af422"],
Cell[53068, 1236, 14634, 307, 471, "Output",ExpressionUUID->"1871f7a7-0c21-419d-b55d-135afe12cf25"],
Cell[67705, 1545, 11910, 228, 556, "Output",ExpressionUUID->"46cdf8ed-fff4-4ad6-acf5-2ea2dfde46f9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79676, 1780, 278, 4, 84, "Section",ExpressionUUID->"9d4402cc-e578-44d5-b43a-a22c8df5d4b7"],
Cell[CellGroupData[{
Cell[79979, 1788, 2506, 37, 373, "ItemParagraph",ExpressionUUID->"a184a953-5758-4501-a1b6-9b0c810ad03c"],
Cell[CellGroupData[{
Cell[82510, 1829, 9755, 245, 958, "Input",ExpressionUUID->"c8354f97-86fb-439c-a0d2-c0264b5f6f15"],
Cell[92268, 2076, 7504, 172, 602, "Output",ExpressionUUID->"415fcb6f-0346-43e6-99b6-c45434005c11"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99833, 2255, 323, 5, 84, "Section",ExpressionUUID->"14611fa6-cd8f-4613-b204-1845a5e4688d"],
Cell[CellGroupData[{
Cell[100181, 2264, 1788, 27, 268, "ItemParagraph",ExpressionUUID->"b12ca5e5-d04a-45c8-96bb-3b4c06866ace"],
Cell[CellGroupData[{
Cell[101994, 2295, 15908, 420, 1569, "Input",ExpressionUUID->"b1a4db64-1028-454b-903b-803a58a83e90"],
Cell[117905, 2717, 76503, 1523, 832, "Output",ExpressionUUID->"221c058e-ac55-466f-adf3-e98cf9d38bd7"]
}, Open  ]]
}, Open  ]],
Cell[194435, 4244, 338, 5, 39, "Affiliation",ExpressionUUID->"65b5b73f-f2b2-4155-96de-d1fd58f184b3"],
Cell[194776, 4251, 1264, 19, 163, "ItemParagraph",ExpressionUUID->"b14bee8e-05f0-467b-b883-a5e5e3b10ee7"],
Cell[196043, 4272, 1825, 26, 241, "ItemParagraph",ExpressionUUID->"7f78c849-5f48-4b2d-bd37-54581f34879a"],
Cell[CellGroupData[{
Cell[197893, 4302, 667, 11, 84, "ItemParagraph",ExpressionUUID->"932f7d05-bce6-4559-8beb-d11fb2b0bddc"],
Cell[CellGroupData[{
Cell[198585, 4317, 11129, 295, 1186, "Input",ExpressionUUID->"554a0b5a-fdc2-46ca-b14c-d21cdbbf6192"],
Cell[CellGroupData[{
Cell[209739, 4616, 351, 9, 82, "Print",ExpressionUUID->"e5e4776a-baf0-4a39-97b6-fba63bf020a4"],
Cell[210093, 4627, 304, 6, 28, "Print",ExpressionUUID->"c0d310d7-1122-43f6-ada8-a45904dc26db"],
Cell[210400, 4635, 322, 8, 55, "Print",ExpressionUUID->"99435814-57c6-4d00-b63f-6703a4c837c2"]
}, Open  ]],
Cell[210737, 4646, 56413, 1129, 1908, "Output",ExpressionUUID->"0a792803-5ee0-4d98-8d4f-8acddf611dbb"],
Cell[267153, 5777, 344, 8, 55, "Print",ExpressionUUID->"d05603ca-8e5e-456c-802b-db94bf3dac91"],
Cell[267500, 5787, 60075, 1003, 317, 17010, 296, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"a616a781-6778-40f2-a446-bd8c6614a455"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[327636, 6797, 361, 6, 84, "Section",ExpressionUUID->"2fa9764a-1e11-46a9-a823-a6205c83cec6"],
Cell[328000, 6805, 1079, 17, 136, "ItemParagraph",ExpressionUUID->"dae59d84-304b-4665-a187-e922670d9fb0"],
Cell[CellGroupData[{
Cell[329104, 6826, 2312, 33, 294, "ItemParagraph",ExpressionUUID->"983b173b-a3cd-4c39-b91f-6c0e0008bea7"],
Cell[CellGroupData[{
Cell[331441, 6863, 7806, 203, 1137, "Input",ExpressionUUID->"b7e618dc-4ca0-4e3f-893d-9783ed950f76"],
Cell[339250, 7068, 3907, 73, 1356, "Output",ExpressionUUID->"5ff2071d-9d83-4e91-9297-7aa9469d9acf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[343218, 7148, 427, 6, 84, "Section",ExpressionUUID->"7bc53154-2f66-4bdd-b74d-81565d3f9878"],
Cell[343648, 7156, 2330, 33, 320, "ItemParagraph",ExpressionUUID->"a63a3da0-8f2a-44e8-a4d3-e13d8b4b145c"],
Cell[CellGroupData[{
Cell[346003, 7193, 616, 10, 58, "ItemParagraph",ExpressionUUID->"43e6585b-0bdd-4897-98d2-31a24efe495e"],
Cell[CellGroupData[{
Cell[346644, 7207, 36880, 979, 3588, "Input",ExpressionUUID->"0ffb6c4b-b549-4a36-a451-6e44edf65dde"],
Cell[383527, 8188, 8486, 177, 279, "Output",ExpressionUUID->"8c479944-156d-426a-aaba-eb2f4b09db01"],
Cell[392016, 8367, 34752, 680, 812, "Output",ExpressionUUID->"82bc4454-2ed8-4a17-9dfe-874ebda81d1a"]
}, Open  ]]
}, Open  ]],
Cell[426795, 9051, 373, 6, 39, "Affiliation",ExpressionUUID->"45b74d3a-71f7-4d60-9c21-f61043eeaa82"],
Cell[427171, 9059, 2311, 34, 346, "ItemParagraph",ExpressionUUID->"2628f93b-0356-4133-a106-638695b42497"],
Cell[CellGroupData[{
Cell[429507, 9097, 1353, 20, 189, "ItemParagraph",ExpressionUUID->"b3b908dc-075f-4c18-a471-9cec394f7d69"],
Cell[CellGroupData[{
Cell[430885, 9121, 32162, 775, 2854, "Input",ExpressionUUID->"832073c6-409b-4f8b-9b7c-f8b6e8ba4e62"],
Cell[CellGroupData[{
Cell[463072, 9900, 370, 10, 33, "Print",ExpressionUUID->"a266a779-cac7-4871-83b2-a3d98bc95684"],
Cell[463445, 9912, 803, 15, 81, "Print",ExpressionUUID->"6879eef1-3606-4239-ab39-f06e60b4b6be"],
Cell[464251, 9929, 385, 10, 33, "Print",ExpressionUUID->"b38cbcea-1286-453b-8bf9-3d5b87dbf793"],
Cell[464639, 9941, 918, 16, 106, "Print",ExpressionUUID->"84573f6e-8031-4fe7-8002-f5a3cb8e23dd"],
Cell[465560, 9959, 360, 10, 33, "Print",ExpressionUUID->"97402ead-41ae-49de-a943-438246531284"],
Cell[465923, 9971, 855, 15, 106, "Print",ExpressionUUID->"8a1e8501-e33e-4804-abc6-24ef09c39960"],
Cell[466781, 9988, 339, 10, 33, "Print",ExpressionUUID->"32ae54b3-f227-4427-a200-245cbef3e722"],
Cell[467123, 10000, 928, 16, 106, "Print",ExpressionUUID->"c282728a-2f8a-4e71-baae-d078033baebc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[468124, 10024, 448, 7, 84, "Section",ExpressionUUID->"27556936-f8d0-4b4f-9d19-0e7da7e40c9a"],
Cell[CellGroupData[{
Cell[468597, 10035, 2437, 38, 373, "ItemParagraph",ExpressionUUID->"ceabcf53-f465-44fe-8ff2-2e2b605f1d38"],
Cell[CellGroupData[{
Cell[471059, 10077, 35470, 794, 3049, "Input",ExpressionUUID->"f89a3856-3364-4702-afcf-3325617b20e4"],
Cell[506532, 10873, 22832, 508, 2553, "Output",ExpressionUUID->"4569efaf-2bd1-4e70-80fe-ebf7bd2d5705"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[529413, 11387, 1754, 27, 241, "ItemParagraph",ExpressionUUID->"28bbb2ac-e699-4326-812f-c944177056d7"],
Cell[CellGroupData[{
Cell[531192, 11418, 8109, 216, 826, "Input",ExpressionUUID->"04c9a7dc-baef-4a04-97b3-c3c371199a78"],
Cell[539304, 11636, 4921, 92, 521, "Output",ExpressionUUID->"337ff1fb-ce80-4296-a4bf-4fe8191379d1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[544286, 11735, 265, 5, 84, "Section",ExpressionUUID->"d4cd5886-5682-4112-ae00-e6c78c559d03"],
Cell[544554, 11742, 836, 14, 110, "ItemParagraph",ExpressionUUID->"ec865ea7-4ecd-440a-b9b0-6b6db9a16998"],
Cell[545393, 11758, 1291, 21, 188, "Affiliation",ExpressionUUID->"0e5bed48-31e7-4533-bb48-69df3f05f439"],
Cell[CellGroupData[{
Cell[546709, 11783, 34385, 855, 2820, "Input",ExpressionUUID->"4b13a375-d529-4c40-b0f5-ee055a5d20af"],
Cell[CellGroupData[{
Cell[581119, 12642, 414, 7, 28, "Print",ExpressionUUID->"d4f64f1b-a886-403a-8225-45693e063662"],
Cell[581536, 12651, 461, 8, 75, "Print",ExpressionUUID->"64fd8335-17e9-4924-9cfe-0733f8a7862e"],
Cell[582000, 12661, 422, 7, 28, "Print",ExpressionUUID->"3a33a24f-3793-4ca7-b270-d7b315ef2409"],
Cell[582425, 12670, 442, 8, 28, "Print",ExpressionUUID->"1d2452c4-8740-4230-b265-f26b690adc60"],
Cell[582870, 12680, 443, 8, 28, "Print",ExpressionUUID->"47f0404a-c454-43f6-9085-1b50a9a7af9c"],
Cell[583316, 12690, 439, 8, 28, "Print",ExpressionUUID->"f0a833da-1ec5-4544-8afe-6fcf5afe4595"],
Cell[583758, 12700, 444, 8, 28, "Print",ExpressionUUID->"8a671c7e-eddb-4931-9b0a-5a7466847dd2"],
Cell[584205, 12710, 429, 7, 28, "Print",ExpressionUUID->"b0a5f728-33ae-4523-9625-fa76ded42069"],
Cell[584637, 12719, 441, 8, 28, "Print",ExpressionUUID->"d817305d-cebd-48fb-a137-b6aed2776a21"],
Cell[585081, 12729, 442, 8, 28, "Print",ExpressionUUID->"b32e21d0-d27c-4bf6-bfc4-f2a41ea1e04a"],
Cell[585526, 12739, 441, 8, 28, "Print",ExpressionUUID->"1d8e2689-3107-4ff0-ba87-bf4cd18bc50d"],
Cell[585970, 12749, 438, 8, 28, "Print",ExpressionUUID->"358a05bd-1df1-4553-a6fa-f4b28f65f192"],
Cell[586411, 12759, 444, 8, 28, "Print",ExpressionUUID->"76dd2780-7d38-4d96-9b19-7df28538986b"],
Cell[586858, 12769, 429, 7, 28, "Print",ExpressionUUID->"1c8a7383-f191-431e-ac90-b6cc13b8d2cf"],
Cell[587290, 12778, 441, 8, 28, "Print",ExpressionUUID->"62d4e415-c1fd-439e-b178-e913991a0b26"],
Cell[587734, 12788, 442, 8, 28, "Print",ExpressionUUID->"f15396ae-d1ec-4d0e-952c-1d85c572fe0b"],
Cell[588179, 12798, 443, 8, 28, "Print",ExpressionUUID->"96242883-d1df-47a8-a644-82895a54a96d"],
Cell[588625, 12808, 438, 8, 28, "Print",ExpressionUUID->"09b16447-9561-4c22-a352-14286d83b99e"],
Cell[589066, 12818, 444, 8, 28, "Print",ExpressionUUID->"2c86efc8-a3d0-4672-8303-62bcfdad0619"],
Cell[589513, 12828, 429, 7, 28, "Print",ExpressionUUID->"f1af81e3-4ada-4711-ba0c-404e9c8bb5bd"],
Cell[589945, 12837, 443, 8, 28, "Print",ExpressionUUID->"ad3eb9d0-1a65-4fd3-a921-623c66f24873"],
Cell[590391, 12847, 442, 8, 28, "Print",ExpressionUUID->"965179d8-b523-4174-89be-31fd69b70042"],
Cell[590836, 12857, 440, 8, 28, "Print",ExpressionUUID->"1b25b0ee-b071-4c59-b403-89294e5ec53b"],
Cell[591279, 12867, 439, 8, 28, "Print",ExpressionUUID->"ae2582f5-9dc6-4581-a4dc-96bf2e1ad50b"],
Cell[591721, 12877, 444, 8, 28, "Print",ExpressionUUID->"1aace3a8-c98e-4182-9da0-ac469fbe5985"],
Cell[592168, 12887, 431, 7, 28, "Print",ExpressionUUID->"046d496b-dcc3-4214-a48b-e602ebad1c32"],
Cell[592602, 12896, 443, 8, 28, "Print",ExpressionUUID->"8fe04433-a6d6-4f42-98fc-2dfa0b1c8a37"],
Cell[593048, 12906, 442, 8, 28, "Print",ExpressionUUID->"80ab1d1a-b0d7-4a7a-8008-382bf698f854"],
Cell[593493, 12916, 443, 8, 28, "Print",ExpressionUUID->"c2de2a71-ea3f-4972-b631-d76525111806"],
Cell[593939, 12926, 439, 8, 28, "Print",ExpressionUUID->"6fdce9ce-db16-449a-a072-280471f49f10"],
Cell[594381, 12936, 462, 8, 28, "Print",ExpressionUUID->"4f7043db-cb59-4693-8d31-1a08d409464f"],
Cell[594846, 12946, 417, 7, 52, "Print",ExpressionUUID->"e95bcb9f-6eb1-4251-8326-eafcb34fe2f9"],
Cell[595266, 12955, 525, 10, 28, "Print",ExpressionUUID->"dffc4100-81bd-43ac-9302-903608b97c89"],
Cell[595794, 12967, 4826, 122, 381, "Print",ExpressionUUID->"9b2cc29a-1d28-497f-92cd-87443c143658"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[600681, 13096, 272, 4, 84, "Section",ExpressionUUID->"eeb1ff8e-a5b5-4391-b42f-760bf7d7c9d8"],
Cell[600956, 13102, 1138, 17, 136, "ItemParagraph",ExpressionUUID->"fc7f9e18-e1ba-44d6-8d47-517c815d7c80"],
Cell[602097, 13121, 950, 15, 158, "Affiliation",ExpressionUUID->"1fe4fda8-01cd-48b2-874d-43bbd2fb6362"]
}, Open  ]],
Cell[CellGroupData[{
Cell[603084, 13141, 279, 4, 84, "Section",ExpressionUUID->"02e973a8-a162-4932-ae60-64ecba18f1d5"],
Cell[603366, 13147, 998, 16, 110, "ItemParagraph",ExpressionUUID->"188b6653-43cb-416a-bcd8-7693fc3576a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[604401, 13168, 332, 5, 84, "Section",ExpressionUUID->"422f61d9-cded-4d4b-a681-596e454a27c8"],
Cell[604736, 13175, 868, 14, 84, "ItemParagraph",ExpressionUUID->"54601819-8984-4c26-8a74-095dc0978879"],
Cell[605607, 13191, 1149, 17, 188, "Affiliation",ExpressionUUID->"b81597e0-ce84-4072-9889-234e232c3dc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606793, 13213, 391, 6, 84, "Section",ExpressionUUID->"0d6ca76f-6dc9-4ed2-8600-e61d3fb4e846"],
Cell[607187, 13221, 1248, 19, 136, "ItemParagraph",ExpressionUUID->"f3e5179c-5d0a-46ea-a125-b90c1c8a0978"]
}, Open  ]],
Cell[CellGroupData[{
Cell[608472, 13245, 366, 6, 84, "Section",ExpressionUUID->"ddc42493-5f15-4833-bd1d-6f12581199ca"],
Cell[CellGroupData[{
Cell[608863, 13255, 1480, 22, 163, "ItemParagraph",ExpressionUUID->"7c5e4df6-d6e3-45ea-a780-0522ee7126a0"],
Cell[CellGroupData[{
Cell[610368, 13281, 2380, 67, 321, "Input",ExpressionUUID->"45e8ca4b-702e-49df-aa11-1e8d59f7f216"],
Cell[612751, 13350, 27862, 569, 912, "Output",ExpressionUUID->"cc7fe227-477f-453b-ba28-4bc4685edac2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[640674, 13926, 392, 6, 84, "Section",ExpressionUUID->"519d48d5-90a8-44f3-b696-03a39683fa68"],
Cell[641069, 13934, 1165, 18, 110, "ItemParagraph",ExpressionUUID->"9362b6e6-d15f-472b-b582-091b2ab74271"],
Cell[642237, 13954, 979, 16, 110, "ItemParagraph",ExpressionUUID->"d1494d03-f8d4-4c9a-82c9-6752cf6a98bf"],
Cell[643219, 13972, 3593, 57, 902, "Affiliation",ExpressionUUID->"2f8e55fb-5502-455a-8303-58582634f8ef"],
Cell[CellGroupData[{
Cell[646837, 14033, 18187, 471, 1771, "Input",ExpressionUUID->"5fce53a3-591f-4f42-8810-c363d733012d"],
Cell[665027, 14506, 127162, 2325, 383, 89209, 1702, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"ec3df3fb-9167-4de5-9dba-3fb842fc54a4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[792238, 16837, 384, 6, 84, "Section",ExpressionUUID->"aa51763e-d445-4a0e-af47-fb875e898ca2"],
Cell[792625, 16845, 1472, 22, 163, "ItemParagraph",ExpressionUUID->"19297801-ee61-41ad-a6f8-72acc36dd681"],
Cell[794100, 16869, 5926, 87, 1408, "Affiliation",ExpressionUUID->"4071159d-41dc-4340-84e0-5652007bc8c0"],
Cell[CellGroupData[{
Cell[800051, 16960, 19779, 482, 1833, "Input",ExpressionUUID->"deeb7880-73b9-45a9-aeee-0f5e6447e66b"],
Cell[819833, 17444, 3715, 99, 779, "Output",ExpressionUUID->"351179e7-e093-40ce-8af1-f549f5b02fba"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[823597, 17549, 377, 6, 84, "Section",ExpressionUUID->"6fdb90f4-79a1-411b-8a95-715f768c21d4"],
Cell[823977, 17557, 1604, 24, 163, "ItemParagraph",ExpressionUUID->"cc7282d9-8d72-4642-81a7-c8cbdf9d62b6"],
Cell[825584, 17583, 5485, 82, 1140, "Affiliation",ExpressionUUID->"6549d63a-0c3d-4b54-a541-f2e1c55245d7"]
}, Open  ]]
}
]
*)

