(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1210903,      28889]
NotebookOptionsPosition[   1188080,      28581]
NotebookOutlinePosition[   1188475,      28597]
CellTagsIndexPosition[   1188432,      28594]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Ethernet", " ", "Simulation", " ", "Parameters"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"numStations", "=", "8"}], ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{"Number", " ", "of", " ", "stations"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"cableLength", "=", "1000"}], ";"}], "         ", 
   RowBox[{"(*", 
    RowBox[{"Cable", " ", "length", " ", "in", " ", "meters"}], "*)"}], "\n", 
   
   RowBox[{
    RowBox[{"propagationSpeed", "=", 
     RowBox[{"2", "*", 
      RowBox[{"10", "^", "8"}]}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Signal", " ", "propagation", " ", "speed", " ", "in", " ", 
     RowBox[{"m", "/", "s"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"bandwidth", "=", 
     RowBox[{"3", "*", 
      RowBox[{"10", "^", "6"}]}]}], ";"}], "         ", 
   RowBox[{"(*", 
    RowBox[{"3", " ", "Mbps", " ", "Ethernet"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"packetSize", "=", "4096"}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{"Data", " ", "packet", " ", "size", " ", "in", " ", "bits"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"ackSize", "=", "64"}], ";"}], "               ", 
   RowBox[{"(*", 
    RowBox[{"ACK", " ", "size", " ", "in", " ", "bits"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"slotTime", "=", 
     RowBox[{"16", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}]}], ";"}], "        ", 
   RowBox[{"(*", 
    RowBox[{"Ethernet", " ", "slot", " ", "time"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"simulationTime", "=", "0.1"}], ";"}], "       ", 
   RowBox[{"(*", 
    RowBox[{"Simulation", " ", "duration", " ", "in", " ", "seconds"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"arrivalRate", "=", "50"}], ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{
    "Packet", " ", "arrival", " ", "rate", " ", "per", " ", "station", " ", 
     "per", " ", "second"}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Derived", " ", "parameters"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"propDelay", "=", 
     RowBox[{"cableLength", "/", "propagationSpeed"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"One", "-", 
     RowBox[{"way", " ", "propagation", " ", "delay"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"maxPropDelay", "=", 
     RowBox[{"2", "*", "propDelay"}]}], ";"}], "                ", 
   RowBox[{"(*", 
    RowBox[{"Worst", "-", 
     RowBox[{"case", " ", "collision", " ", "detection", " ", "time"}]}], 
    "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Station", " ", "Structure"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"createStation", "[", "id_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<ID\>\"", "->", "id"}], ",", 
         RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "IDLE", ",", "BACKOFF", ",", "TRANSMITTING", ",", "WAITING_ACK"}], 
          "*)"}], 
         RowBox[{"\"\<Queue\>\"", "->", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{"Packets", " ", "to", " ", "send"}], "*)"}], 
         RowBox[{"\"\<Backoff\>\"", "->", "0"}], ",", 
         RowBox[{"\"\<CollisionCount\>\"", "->", "0"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Exponential", " ", "backoff", " ", "counter"}], "*)"}], 
         RowBox[{"\"\<TransmitStart\>\"", "->", "0"}], ",", 
         RowBox[{"\"\<PendingAck\>\"", "->", "Nothing"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Packet", " ", "waiting", " ", "for", " ", "ACK"}], "*)"}], 
         
         RowBox[{"\"\<Stats\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Sent\>\"", "->", "0"}], ",", 
            RowBox[{"\"\<Collisions\>\"", "->", "0"}], ",", 
            RowBox[{"\"\<ACKsReceived\>\"", "->", "0"}], ",", 
            RowBox[{"\"\<RTTs\>\"", "->", 
             RowBox[{"{", "}"}]}]}], "|>"}]}]}], "|>"}]}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Initialize", " ", "Simulation"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"stations", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"createStation", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"eventQueue", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"currentTime", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"throughputData", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"efficiencyData", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Event", " ", "Processing", " ", "Functions"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"generatePacketArrival", "[", 
      RowBox[{"station_", ",", "time_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"packet", ",", "dest"}], "}"}], ",", 
       RowBox[{
        RowBox[{"dest", "=", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"Range", "[", "numStations", "]"}], ",", 
            RowBox[{"station", "[", "\"\<ID\>\"", "]"}]}], "]"}], "]"}]}], 
        ";", "\n", 
        RowBox[{"packet", "=", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<ID\>\"", "->", 
            RowBox[{
             RowBox[{"station", "[", 
              RowBox[{"\"\<Stats\>\"", ",", "\"\<Sent\>\""}], "]"}], "+", 
             "1"}]}], ",", 
           RowBox[{"\"\<Source\>\"", "->", 
            RowBox[{"station", "[", "\"\<ID\>\"", "]"}]}], ",", 
           RowBox[{"\"\<Destination\>\"", "->", "dest"}], ",", 
           RowBox[{"\"\<Size\>\"", "->", "packetSize"}], ",", 
           RowBox[{"\"\<GenerationTime\>\"", "->", "time"}], ",", 
           RowBox[{"\"\<Attempts\>\"", "->", "0"}]}], "|>"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], ",", "packet"}], 
          "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"station", "[", "\"\<State\>\"", "]"}], "===", 
            "\"\<IDLE\>\""}], "&&", 
           RowBox[{
            RowBox[{"station", "[", "\"\<Backoff\>\"", "]"}], "==", "0"}]}], 
          ",", 
          RowBox[{"eventQueue", "=", 
           RowBox[{"Insert", "[", 
            RowBox[{"eventQueue", ",", 
             RowBox[{"{", 
              RowBox[{
              "time", ",", "\"\<ATTEMPT_TRANSMIT\>\"", ",", "station"}], 
              "}"}], ",", "1"}], "]"}]}]}], "]"}], ";"}]}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"attemptTransmission", "[", 
      RowBox[{"station_", ",", "time_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}], ">", "0"}],
           ",", 
          RowBox[{
           RowBox[{
            RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
            "\"\<TRANSMITTING\>\""}], ";", "\n", 
           RowBox[{
            RowBox[{"station", "[", "\"\<TransmitStart\>\"", "]"}], "=", 
            "time"}], ";", "\n", 
           RowBox[{
            RowBox[{"station", "[", 
             RowBox[{"\"\<Queue\>\"", ",", "1", ",", "\"\<Attempts\>\""}], 
             "]"}], "+=", "1"}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Schedule", " ", "collision", " ", "detection"}], "*)"}], 
           
           RowBox[{"eventQueue", "=", 
            RowBox[{"Insert", "[", 
             RowBox[{"eventQueue", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"time", "+", "maxPropDelay"}], ",", 
                "\"\<COLLISION_CHECK\>\"", ",", "station"}], "}"}], ",", 
              "1"}], "]"}]}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Schedule", " ", "transmission", " ", "end"}], "*)"}], 
           RowBox[{"eventQueue", "=", 
            RowBox[{"Insert", "[", 
             RowBox[{"eventQueue", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"time", "+", 
                 RowBox[{
                  RowBox[{"station", "[", 
                   RowBox[{"\"\<Queue\>\"", ",", "1", ",", "\"\<Size\>\""}], 
                   "]"}], "/", "bandwidth"}]}], ",", 
                "\"\<END_TRANSMISSION\>\"", ",", "station"}], "}"}], ",", 
              "1"}], "]"}]}], ";"}]}], "]"}], ";"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"checkCollision", "[", 
      RowBox[{"station_", ",", "time_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"collision", "=", "False"}], ",", "transmitter"}], "}"}], 
       ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=!=", 
           "\"\<TRANSMITTING\>\""}], ",", 
          RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
         "Check", " ", "for", " ", "other", " ", "transmissions", " ", "in", 
          " ", "vulnerable", " ", "period"}], "*)"}], 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"s", "[", "\"\<ID\>\"", "]"}], "!=", 
              RowBox[{"station", "[", "\"\<ID\>\"", "]"}]}], "&&", 
             RowBox[{
              RowBox[{"s", "[", "\"\<State\>\"", "]"}], "===", 
              "\"\<TRANSMITTING\>\""}], "&&", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"s", "[", "\"\<TransmitStart\>\"", "]"}], "-", 
                RowBox[{"station", "[", "\"\<TransmitStart\>\"", "]"}]}], 
               "]"}], "<", "maxPropDelay"}]}], ",", 
            RowBox[{
             RowBox[{"collision", "=", "True"}], ";", "\n", 
             RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"s", ",", "stations"}], "}"}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{"collision", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
            "\"\<BACKOFF\>\""}], ";", "\n", 
           RowBox[{
            RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], "+=", 
            "1"}], ";", "\n", 
           RowBox[{
            RowBox[{"station", "[", 
             RowBox[{"\"\<Stats\>\"", ",", "\"\<Collisions\>\""}], "]"}], "+=",
             "1"}], ";", "\n", 
           RowBox[{"backoffSlots", "=", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{
              RowBox[{"2", "^", 
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], ",",
                  "10"}], "]"}]}], "-", "1"}], "]"}]}], ";", "\n", 
           RowBox[{
            RowBox[{"station", "[", "\"\<Backoff\>\"", "]"}], "=", 
            RowBox[{"backoffSlots", "*", "slotTime"}]}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Schedule", " ", "backoff", " ", "end"}], "*)"}], 
           RowBox[{"eventQueue", "=", 
            RowBox[{"Insert", "[", 
             RowBox[{"eventQueue", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"time", "+", 
                 RowBox[{"station", "[", "\"\<Backoff\>\"", "]"}]}], ",", 
                "\"\<END_BACKOFF\>\"", ",", "station"}], "}"}], ",", "1"}], 
             "]"}]}], ";"}]}], "]"}]}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"endTransmission", "[", 
      RowBox[{"station_", ",", "time_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"packet", ",", "destStation"}], "}"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=!=", 
           "\"\<TRANSMITTING\>\""}], ",", 
          RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\n", 
        RowBox[{"packet", "=", 
         RowBox[{"First", "[", 
          RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], ";", "\n", 
        
        RowBox[{
         RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=", 
         RowBox[{"Rest", "[", 
          RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], ";", "\n", 
        
        RowBox[{
         RowBox[{"station", "[", 
          RowBox[{"\"\<Stats\>\"", ",", "\"\<Sent\>\""}], "]"}], "+=", "1"}], 
        ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Start", " ", "ACK", " ", "timeout"}], "*)"}], 
        RowBox[{
         RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
         "\"\<WAITING_ACK\>\""}], ";", "\n", 
        RowBox[{
         RowBox[{"station", "[", "\"\<PendingAck\>\"", "]"}], "=", "packet"}],
         ";", "\n", 
        RowBox[{"eventQueue", "=", 
         RowBox[{"Insert", "[", 
          RowBox[{"eventQueue", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"time", "+", "0.05"}], ",", "\"\<ACK_TIMEOUT\>\"", ",", 
             "station"}], "}"}], ",", "1"}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Deliver", " ", "packet", " ", "to", " ", "destination"}], 
         "*)"}], 
        RowBox[{"destStation", "=", 
         RowBox[{"stations", "[", 
          RowBox[{"[", 
           RowBox[{"packet", "[", "\"\<Destination\>\"", "]"}], "]"}], 
          "]"}]}], ";", "\n", 
        RowBox[{"eventQueue", "=", 
         RowBox[{"Insert", "[", 
          RowBox[{"eventQueue", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"time", "+", "propDelay"}], ",", 
             "\"\<RECEIVE_PACKET\>\"", ",", "destStation", ",", "packet"}], 
            "}"}], ",", "1"}], "]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
         "\"\<IDLE\>\""}], ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"receivePacket", "[", 
      RowBox[{"station_", ",", "time_", ",", "packet_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Queue", " ", "ACK", " ", "response"}], "*)"}], 
       RowBox[{
        RowBox[{"eventQueue", "=", 
         RowBox[{"Insert", "[", 
          RowBox[{"eventQueue", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"time", "+", 
              RowBox[{"16", "*", 
               RowBox[{"10", "^", 
                RowBox[{"-", "6"}]}]}]}], ",", "\"\<SEND_ACK\>\"", ",", 
             "station", ",", "packet"}], "}"}], ",", "1"}], "  ", 
          RowBox[{"(*", 
           RowBox[{"SIFS", "-", 
            RowBox[{"like", " ", "delay"}]}], "*)"}], "]"}]}], ";"}]}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"sendAck", "[", 
      RowBox[{"station_", ",", "time_", ",", "packet_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ack", ",", "srcStation"}], "}"}], ",", 
       RowBox[{
        RowBox[{"ack", "=", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<ID\>\"", "->", 
            RowBox[{"packet", "[", "\"\<ID\>\"", "]"}]}], ",", 
           RowBox[{"\"\<Source\>\"", "->", 
            RowBox[{"station", "[", "\"\<ID\>\"", "]"}]}], ",", 
           RowBox[{"\"\<Destination\>\"", "->", 
            RowBox[{"packet", "[", "\"\<Source\>\"", "]"}]}], ",", 
           RowBox[{"\"\<Size\>\"", "->", "ackSize"}], ",", 
           RowBox[{"\"\<GenerationTime\>\"", "->", "time"}]}], "|>"}]}], ";", 
        "\n", 
        RowBox[{"srcStation", "=", 
         RowBox[{"stations", "[", 
          RowBox[{"[", 
           RowBox[{"packet", "[", "\"\<Source\>\"", "]"}], "]"}], "]"}]}], 
        ";", "\n", 
        RowBox[{"eventQueue", "=", 
         RowBox[{"Insert", "[", 
          RowBox[{"eventQueue", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"time", "+", "propDelay"}], ",", "\"\<RECEIVE_ACK\>\"", 
             ",", "srcStation", ",", "ack"}], "}"}], ",", "1"}], "]"}]}], 
        ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"receiveAck", "[", 
      RowBox[{"station_", ",", "time_", ",", "ack_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"station", "[", "\"\<State\>\"", "]"}], "===", 
           "\"\<WAITING_ACK\>\""}], "&&", 
          RowBox[{
           RowBox[{"station", "[", 
            RowBox[{"\"\<PendingAck\>\"", ",", "\"\<ID\>\""}], "]"}], "==", 
           RowBox[{"ack", "[", "\"\<ID\>\"", "]"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
           "\"\<IDLE\>\""}], ";", "\n", 
          RowBox[{
           RowBox[{"station", "[", "\"\<PendingAck\>\"", "]"}], "=", 
           "Nothing"}], ";", "\n", 
          RowBox[{
           RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], "=", 
           "0"}], ";", "\n", 
          RowBox[{
           RowBox[{"station", "[", 
            RowBox[{"\"\<Stats\>\"", ",", "\"\<ACKsReceived\>\""}], "]"}], "+=",
            "1"}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Record", " ", "RTT"}], "*)"}], 
          RowBox[{"rtt", "=", 
           RowBox[{"time", "-", 
            RowBox[{"station", "[", 
             RowBox[{"\"\<PendingAck\>\"", ",", "\"\<GenerationTime\>\""}], 
             "]"}]}]}], ";", "\n", 
          RowBox[{
           RowBox[{"station", "[", 
            RowBox[{"\"\<Stats\>\"", ",", "\"\<RTTs\>\""}], "]"}], "=", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"station", "[", 
              RowBox[{"\"\<Stats\>\"", ",", "\"\<RTTs\>\""}], "]"}], ",", 
             "rtt"}], "]"}]}], ";"}]}], "]"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ackTimeout", "[", 
      RowBox[{"station_", ",", "time_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"station", "[", "\"\<State\>\"", "]"}], "===", 
          "\"\<WAITING_ACK\>\""}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
           "\"\<BACKOFF\>\""}], ";", "\n", 
          RowBox[{
           RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], "+=", 
           "1"}], ";", "\n", 
          RowBox[{
           RowBox[{"station", "[", 
            RowBox[{"\"\<Stats\>\"", ",", "\"\<Collisions\>\""}], "]"}], "+=",
            "1"}], ";", "\n", 
          RowBox[{"backoffSlots", "=", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{
             RowBox[{"2", "^", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], ",", 
                "10"}], "]"}]}], "-", "1"}], "]"}]}], ";", "\n", 
          RowBox[{
           RowBox[{"station", "[", "\"\<Backoff\>\"", "]"}], "=", 
           RowBox[{"backoffSlots", "*", "slotTime"}]}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Resend", " ", "packet"}], "*)"}], 
          RowBox[{
           RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=", 
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], ",", 
             RowBox[{"station", "[", "\"\<PendingAck\>\"", "]"}]}], "]"}]}], 
          ";", "\n", 
          RowBox[{
           RowBox[{"station", "[", "\"\<PendingAck\>\"", "]"}], "=", 
           "Nothing"}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Schedule", " ", "backoff", " ", "end"}], "*)"}], 
          RowBox[{"eventQueue", "=", 
           RowBox[{"Insert", "[", 
            RowBox[{"eventQueue", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"time", "+", 
                RowBox[{"station", "[", "\"\<Backoff\>\"", "]"}]}], ",", 
               "\"\<END_BACKOFF\>\"", ",", "station"}], "}"}], ",", "1"}], 
            "]"}]}], ";"}]}], "]"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"endBackoff", "[", 
      RowBox[{"station_", ",", "time_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"station", "[", "\"\<Backoff\>\"", "]"}], "=", "0"}], ";", 
        "\n", 
        RowBox[{
         RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
         "\"\<IDLE\>\""}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}], ">", "0"}],
           ",", 
          RowBox[{
           RowBox[{"eventQueue", "=", 
            RowBox[{"Insert", "[", 
             RowBox[{"eventQueue", ",", 
              RowBox[{"{", 
               RowBox[{
               "time", ",", "\"\<ATTEMPT_TRANSMIT\>\"", ",", "station"}], 
               "}"}], ",", "1"}], "]"}]}], ";"}]}], "]"}], ";"}]}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Main", " ", "Simulation", " ", "Loop"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"While", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"currentTime", "<", "simulationTime"}], "&&", 
       RowBox[{"eventQueue", "=!=", 
        RowBox[{"{", "}"}]}]}], ",", 
      RowBox[{"(*", 
       RowBox[{"Get", " ", "next", " ", "event"}], "*)"}], 
      RowBox[{
       RowBox[{"event", "=", 
        RowBox[{"First", "[", "eventQueue", "]"}]}], ";", "\n", 
       RowBox[{"eventQueue", "=", 
        RowBox[{"Rest", "[", "eventQueue", "]"}]}], ";", "\n", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"time", ",", "type", ",", "args"}], "}"}], "=", 
        RowBox[{"event", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ";", "\n", 
       RowBox[{"currentTime", "=", "time"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Process", " ", "event"}], "*)"}], 
       RowBox[{"Switch", "[", 
        RowBox[{"type", ",", "\"\<PACKET_ARRIVAL\>\"", ",", 
         RowBox[{"generatePacketArrival", "[", 
          RowBox[{"args", ",", "time"}], "]"}], ",", 
         "\"\<ATTEMPT_TRANSMIT\>\"", ",", 
         RowBox[{"attemptTransmission", "[", 
          RowBox[{"args", ",", "time"}], "]"}], ",", 
         "\"\<COLLISION_CHECK\>\"", ",", 
         RowBox[{"checkCollision", "[", 
          RowBox[{"args", ",", "time"}], "]"}], ",", 
         "\"\<END_TRANSMISSION\>\"", ",", 
         RowBox[{"endTransmission", "[", 
          RowBox[{"args", ",", "time"}], "]"}], ",", "\"\<RECEIVE_PACKET\>\"",
          ",", 
         RowBox[{"receivePacket", "[", 
          RowBox[{
           RowBox[{"args", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "time", ",", 
           RowBox[{"args", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "\"\<SEND_ACK\>\"", 
         ",", 
         RowBox[{"sendAck", "[", 
          RowBox[{
           RowBox[{"args", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "time", ",", 
           RowBox[{"args", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         "\"\<RECEIVE_ACK\>\"", ",", 
         RowBox[{"receiveAck", "[", 
          RowBox[{
           RowBox[{"args", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "time", ",", 
           RowBox[{"args", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         "\"\<ACK_TIMEOUT\>\"", ",", 
         RowBox[{"ackTimeout", "[", 
          RowBox[{"args", ",", "time"}], "]"}], ",", "\"\<END_BACKOFF\>\"", 
         ",", 
         RowBox[{"endBackoff", "[", 
          RowBox[{"args", ",", "time"}], "]"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Generate", " ", "new", " ", "packet", " ", "arrivals"}], 
        "*)"}], 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], "<", 
            RowBox[{"arrivalRate", "*", 
             RowBox[{"(", 
              RowBox[{"time", "-", "currentTime"}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"eventQueue", "=", 
             RowBox[{"Insert", "[", 
              RowBox[{"eventQueue", ",", 
               RowBox[{"{", 
                RowBox[{
                "time", ",", "\"\<PACKET_ARRIVAL\>\"", ",", "station"}], 
                "}"}], ",", "1"}], "]"}]}], ";"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"station", ",", "stations"}], "}"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Record", " ", "throughput", " ", "every", " ", "0.01", " ", 
         "seconds"}], "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Floor", "[", 
           RowBox[{"currentTime", "/", "0.01"}], "]"}], ">", 
          RowBox[{"Length", "[", "throughputData", "]"}]}], ",", 
         RowBox[{
          RowBox[{"totalBits", "=", 
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"station", "[", 
                RowBox[{"\"\<Stats\>\"", ",", "\"\<Sent\>\""}], "]"}], "*", 
               "packetSize"}], "&"}], "/@", "stations"}], "]"}]}], ";", "\n", 
          
          RowBox[{"throughput", "=", 
           RowBox[{"totalBits", "/", "currentTime"}]}], ";", "\n", 
          RowBox[{"efficiency", "=", 
           RowBox[{"throughput", "/", "bandwidth"}]}], ";", "\n", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"throughputData", ",", 
            RowBox[{"{", 
             RowBox[{"currentTime", ",", "throughput"}], "}"}]}], "]"}], ";", 
          "\n", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"efficiencyData", ",", 
            RowBox[{"{", 
             RowBox[{"currentTime", ",", "efficiency"}], "}"}]}], "]"}], 
          ";"}]}], "]"}], ";"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Visualization", " ", "Functions"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"plotState", "[", "time_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"ColorData", "[", "97", "]"}], "[", 
                RowBox[{"station", "[", "\"\<ID\>\"", "]"}], "]"}], ",", 
               RowBox[{"Disk", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Re", "[", 
                    RowBox[{"E", "^", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", "Pi", " ", "I", " ", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<ID\>\"", "]"}], "/", 
                    "numStations"}]}], ")"}]}], "]"}], ",", 
                   RowBox[{"Im", "[", 
                    RowBox[{"E", "^", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", "Pi", " ", "I", " ", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<ID\>\"", "]"}], "/", 
                    "numStations"}]}], ")"}]}], "]"}]}], "}"}], ",", "0.1"}], 
                "]"}], ",", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"station", "[", "\"\<ID\>\"", "]"}], ",", "12", 
                   ",", "Bold"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Re", "[", 
                    RowBox[{"E", "^", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", "Pi", " ", "I", " ", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<ID\>\"", "]"}], "/", 
                    "numStations"}]}], ")"}]}], "]"}], ",", 
                   RowBox[{"Im", "[", 
                    RowBox[{"E", "^", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", "Pi", " ", "I", " ", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<ID\>\"", "]"}], "/", 
                    "numStations"}]}], ")"}]}], "]"}]}], "}"}]}], "]"}], ",", 
               
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Panel", "[", 
                  RowBox[{
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<State: \>\"", ",", 
                    RowBox[{"station", "[", "\"\<State\>\"", "]"}], ",", 
                    "\"\<\\nQueue: \>\"", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}], 
                    ",", "\"\<\\nBackoff: \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<Backoff\>\"", "]"}], ",", 
                    "3"}], "]"}]}], "}"}], "]"}], ",", 
                   RowBox[{"Background", "->", "LightYellow"}]}], "]"}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"0.8", "-", 
                    RowBox[{"0.1", "*", 
                    RowBox[{"station", "[", "\"\<ID\>\"", "]"}]}]}]}], 
                  "}"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"station", ",", "stations"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "0.9"}], "]"}]}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"PlotRange", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "->", "500"}], ",", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Ethernet Station States\>\"", ",", "16", ",", "Bold"}], 
           "]"}]}]}], "]"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"plotThroughput", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"throughputData", ",", 
         RowBox[{"AxesLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Throughput (bps)\>\""}], 
           "}"}]}], ",", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Network Throughput\>\"", ",", "16", ",", "Bold"}], 
           "]"}]}], ",", 
         RowBox[{"GridLines", "->", "Automatic"}], ",", 
         RowBox[{"ImageSize", "->", "500"}], ",", 
         RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"plotEfficiency", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{"efficiencyData", ",", 
         RowBox[{"AxesLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Efficiency\>\""}], "}"}]}], 
         ",", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Channel Efficiency\>\"", ",", "16", ",", "Bold"}], 
           "]"}]}], ",", 
         RowBox[{"GridLines", "->", "Automatic"}], ",", 
         RowBox[{"ImageSize", "->", "500"}], ",", 
         RowBox[{"PlotRange", "->", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"plotRTTs", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "rttData", "}"}], ",", 
       RowBox[{
        RowBox[{"rttData", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"station", "[", 
             RowBox[{"\"\<Stats\>\"", ",", "\"\<RTTs\>\""}], "]"}], "&"}], "/@",
            "stations"}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "rttData", "]"}], ">", "0"}], ",", 
          RowBox[{"Histogram", "[", 
           RowBox[{"rttData", ",", "20", ",", 
            RowBox[{"AxesLabel", "->", 
             RowBox[{"{", 
              RowBox[{"\"\<RTT (s)\>\"", ",", "\"\<Count\>\""}], "}"}]}], ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Round-Trip Time Distribution\>\"", ",", "16", ",", 
               "Bold"}], "]"}]}], ",", 
            RowBox[{"ImageSize", "->", "500"}]}], "]"}], ",", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"Text", "[", "\"\<No RTT data collected\>\"", "]"}], ",", 
            
            RowBox[{"ImageSize", "->", "500"}]}], "]"}]}], "]"}]}]}], "]"}]}],
     ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"plotCollisions", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "collisionData", "}"}], ",", 
       RowBox[{
        RowBox[{"collisionData", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"station", "[", 
            RowBox[{"\"\<Stats\>\"", ",", "\"\<Collisions\>\""}], "]"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"station", ",", "stations"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"BarChart", "[", 
         RowBox[{"collisionData", ",", 
          RowBox[{"ChartLabels", "->", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"station", "[", "\"\<ID\>\"", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"station", ",", "stations"}], "}"}]}], "]"}]}], ",", 
          RowBox[{"AxesLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Station ID\>\"", ",", "\"\<Collisions\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Collisions per Station\>\"", ",", "16", ",", "Bold"}], 
            "]"}]}], ",", 
          RowBox[{"ImageSize", "->", "500"}], ",", 
          RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "]"}]}]}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Run", " ", "Simulation", " ", "and", " ", "Display", " ", "Results"}], 
    "*)"}], "\n", 
   RowBox[{"plotState", "[", "currentTime", "]"}], "\n", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"plotThroughput", "[", "]"}], ",", 
      RowBox[{"plotEfficiency", "[", "]"}]}], "}"}], "]"}], "\n", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"plotRTTs", "[", "]"}], ",", 
      RowBox[{"plotCollisions", "[", "]"}]}], "}"}], "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Performance", " ", "Metrics"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"totalPackets", "=", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"station", "[", 
         RowBox[{"\"\<Stats\>\"", ",", "\"\<Sent\>\""}], "]"}], "&"}], "/@", 
       "stations"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"totalCollisions", "=", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"station", "[", 
         RowBox[{"\"\<Stats\>\"", ",", "\"\<Collisions\>\""}], "]"}], "&"}], "/@",
        "stations"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"successRate", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"station", "[", 
         RowBox[{"\"\<Stats\>\"", ",", "\"\<ACKsReceived\>\""}], "]"}], "/", 
        RowBox[{"station", "[", 
         RowBox[{"\"\<Stats\>\"", ",", "\"\<Sent\>\""}], "]"}]}], "&"}], "/@",
       "stations"}]}], ";"}], "\n", "\n", 
   RowBox[{"TableForm", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Total Packets Sent\>\"", ",", "totalPackets"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Total Collisions\>\"", ",", "totalCollisions"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Collision Rate\>\"", ",", 
         RowBox[{"N", "[", 
          RowBox[{"totalCollisions", "/", 
           RowBox[{"(", 
            RowBox[{"totalPackets", "+", "totalCollisions"}], ")"}]}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Average Throughput\>\"", ",", 
         RowBox[{"Mean", "[", 
          RowBox[{"Last", "/@", "throughputData"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Average Efficiency\>\"", ",", 
         RowBox[{"Mean", "[", 
          RowBox[{"Last", "/@", "efficiencyData"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Average RTT\>\"", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], ">", "0"}], ",", 
             RowBox[{"Mean", "[", "#", "]"}], ",", "\"\<N/A\>\""}], "]"}], 
           "&"}], "@", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", 
              RowBox[{"\"\<Stats\>\"", ",", "\"\<RTTs\>\""}], "]"}], "&"}], "/@",
             "stations"}], "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"TableHeadings", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Metric\>\"", ",", "\"\<Value\>\""}], "}"}]}], "}"}]}]}],
     "]"}], "\n", "\n", 
   RowBox[{"StationData", "=", 
    RowBox[{"TableForm", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"s", "[", "\"\<ID\>\"", "]"}], ",", 
          RowBox[{"s", "[", 
           RowBox[{"\"\<Stats\>\"", ",", "\"\<Sent\>\""}], "]"}], ",", 
          RowBox[{"s", "[", 
           RowBox[{"\"\<Stats\>\"", ",", "\"\<Collisions\>\""}], "]"}], ",", 
          RowBox[{"s", "[", 
           RowBox[{"\"\<Stats\>\"", ",", "\"\<ACKsReceived\>\""}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"\"\<Stats\>\"", ",", "\"\<Sent\>\""}], "]"}], ">", 
             "0"}], ",", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"s", "[", 
               RowBox[{"\"\<Stats\>\"", ",", "\"\<ACKsReceived\>\""}], "]"}], 
              "/", 
              RowBox[{"s", "[", 
               RowBox[{"\"\<Stats\>\"", ",", "\"\<Sent\>\""}], "]"}]}], "]"}],
             ",", "\"\<N/A\>\""}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"s", "[", 
               RowBox[{"\"\<Stats\>\"", ",", "\"\<RTTs\>\""}], "]"}], "]"}], 
             ">", "0"}], ",", 
            RowBox[{"Mean", "[", 
             RowBox[{"s", "[", 
              RowBox[{"\"\<Stats\>\"", ",", "\"\<RTTs\>\""}], "]"}], "]"}], 
            ",", "\"\<N/A\>\""}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "stations"}], "}"}]}], "]"}], ",", 
      RowBox[{"TableHeadings", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Station\>\"", ",", "\"\<Sent\>\"", ",", "\"\<Collisions\>\"", 
           ",", "\"\<ACKs\>\"", ",", "\"\<Success Rate\>\"", ",", 
           "\"\<Avg RTT\>\""}], "}"}]}], "}"}]}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.959216084026031*^9, 3.959216084027207*^9}},
 CellLabel->
  "In[572]:=",ExpressionUUID->"2f3b3aac-c6f1-4661-bf91-9bcf965836ad"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], 
     DiskBox[NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
       0.7071067811865475, 0.7071067811865475}], 0.1], InsetBox[
      StyleBox["1",
       StripOnInput->False,
       FontSize->12,
       FontWeight->Bold], 
      NCache[{2^Rational[-1, 2], 2^Rational[-1, 2]}, {0.7071067811865475, 
       0.7071067811865475}]], InsetBox[
      PanelBox[
       TemplateBox[{
        "\"State: \"", "\"IDLE\"", "\"\\nQueue: \"", "0", "\"\\nBackoff: \"", 
         
         TagBox[
          InterpretationBox[
           StyleBox["\"0\"", ShowStringCharacters -> False], 0, Editable -> 
           False], NumberForm[#, 3]& ]},
        "RowDefault"],
       Background->RGBColor[1, 1, 0.85]], {0, 0.7000000000000001}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], DiskBox[{0, 1}, 0.1], InsetBox[
      StyleBox["2",
       StripOnInput->False,
       FontSize->12,
       FontWeight->Bold], {0, 1}], InsetBox[
      PanelBox[
       TemplateBox[{
        "\"State: \"", "\"IDLE\"", "\"\\nQueue: \"", "0", "\"\\nBackoff: \"", 
         
         TagBox[
          InterpretationBox[
           StyleBox["\"0\"", ShowStringCharacters -> False], 0, Editable -> 
           False], NumberForm[#, 3]& ]},
        "RowDefault"],
       Background->RGBColor[1, 1, 0.85]], {0, 0.6000000000000001}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], 
     DiskBox[NCache[{-2^Rational[-1, 2], 2^
        Rational[-1, 2]}, {-0.7071067811865475, 0.7071067811865475}], 0.1], 
     InsetBox[
      StyleBox["3",
       StripOnInput->False,
       FontSize->12,
       FontWeight->Bold], 
      NCache[{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {-0.7071067811865475, 
       0.7071067811865475}]], InsetBox[
      PanelBox[
       TemplateBox[{
        "\"State: \"", "\"IDLE\"", "\"\\nQueue: \"", "0", "\"\\nBackoff: \"", 
         
         TagBox[
          InterpretationBox[
           StyleBox["\"0\"", ShowStringCharacters -> False], 0, Editable -> 
           False], NumberForm[#, 3]& ]},
        "RowDefault"],
       Background->RGBColor[1, 1, 0.85]], {0, 0.5}]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], DiskBox[{-1, 0}, 0.1], InsetBox[
      StyleBox["4",
       StripOnInput->False,
       FontSize->12,
       FontWeight->Bold], {-1, 0}], InsetBox[
      PanelBox[
       TemplateBox[{
        "\"State: \"", "\"IDLE\"", "\"\\nQueue: \"", "0", "\"\\nBackoff: \"", 
         
         TagBox[
          InterpretationBox[
           StyleBox["\"0\"", ShowStringCharacters -> False], 0, Editable -> 
           False], NumberForm[#, 3]& ]},
        "RowDefault"],
       Background->RGBColor[1, 1, 0.85]], {0, 0.4}]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], 
     DiskBox[NCache[{-2^Rational[-1, 2], -2^
         Rational[-1, 2]}, {-0.7071067811865475, -0.7071067811865475}], 0.1], 
     InsetBox[
      StyleBox["5",
       StripOnInput->False,
       FontSize->12,
       FontWeight->Bold], 
      NCache[{-2^Rational[-1, 2], -2^
         Rational[-1, 2]}, {-0.7071067811865475, -0.7071067811865475}]], 
     InsetBox[
      PanelBox[
       TemplateBox[{
        "\"State: \"", "\"IDLE\"", "\"\\nQueue: \"", "0", "\"\\nBackoff: \"", 
         
         TagBox[
          InterpretationBox[
           StyleBox["\"0\"", ShowStringCharacters -> False], 0, Editable -> 
           False], NumberForm[#, 3]& ]},
        "RowDefault"],
       Background->RGBColor[1, 1, 0.85]], {0, 0.30000000000000004}]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], DiskBox[{0, -1}, 0.1], InsetBox[
      StyleBox["6",
       StripOnInput->False,
       FontSize->12,
       FontWeight->Bold], {0, -1}], InsetBox[
      PanelBox[
       TemplateBox[{
        "\"State: \"", "\"IDLE\"", "\"\\nQueue: \"", "0", "\"\\nBackoff: \"", 
         
         TagBox[
          InterpretationBox[
           StyleBox["\"0\"", ShowStringCharacters -> False], 0, Editable -> 
           False], NumberForm[#, 3]& ]},
        "RowDefault"],
       Background->RGBColor[1, 1, 0.85]], {0, 0.19999999999999996}]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], 
     DiskBox[NCache[{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
       0.7071067811865475, -0.7071067811865475}], 0.1], InsetBox[
      StyleBox["7",
       StripOnInput->False,
       FontSize->12,
       FontWeight->Bold], 
      NCache[{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
       0.7071067811865475, -0.7071067811865475}]], InsetBox[
      PanelBox[
       TemplateBox[{
        "\"State: \"", "\"IDLE\"", "\"\\nQueue: \"", "0", "\"\\nBackoff: \"", 
         
         TagBox[
          InterpretationBox[
           StyleBox["\"0\"", ShowStringCharacters -> False], 0, Editable -> 
           False], NumberForm[#, 3]& ]},
        "RowDefault"],
       Background->RGBColor[1, 1, 0.85]], {0, 0.09999999999999998}]}, 
    {RGBColor[1, 0.75, 0], DiskBox[{1, 0}, 0.1], InsetBox[
      StyleBox["8",
       StripOnInput->False,
       FontSize->12,
       FontWeight->Bold], {1, 0}], InsetBox[
      PanelBox[
       TemplateBox[{
        "\"State: \"", "\"IDLE\"", "\"\\nQueue: \"", "0", "\"\\nBackoff: \"", 
         
         TagBox[
          InterpretationBox[
           StyleBox["\"0\"", ShowStringCharacters -> False], 0, Editable -> 
           False], NumberForm[#, 3]& ]},
        "RowDefault"],
       Background->RGBColor[1, 1, 0.85]], {0, 0.}]}}, 
   {Thickness[Large], CircleBox[{0, 0}, 0.9]}},
  ImageSize->500,
  PlotLabel->FormBox[
    StyleBox["\"Ethernet Station States\"", 16, Bold, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{-1.2, 1.2}, {-1.2, 1.2}}]], "Output",
 CellChangeTimes->{3.959216084181637*^9},
 CellLabel->
  "Out[604]=",ExpressionUUID->"e77344d9-eb1b-47a2-9f3f-1a1ef21213ef"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox[
        TagBox["\"Time (s)\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Throughput (bps)\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "MessagesHead" -> ListLinePlot, 
       "DownsampleWindow" -> None, "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "MessagesHead" -> ListLinePlot, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Network Throughput\"", 16, Bold, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}, AlignmentPoint -> 
     Center, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> True, AxesLabel -> None, AxesOrigin -> Automatic, 
     AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, 
     BaseStyle -> {}, ColorOutput -> Automatic, ContentSelectable -> 
     Automatic, CoordinatesToolOptions -> Automatic, 
     DisplayFunction :> $DisplayFunction, Epilog -> {}, FormatType :> 
     TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, 
     FrameTicks -> Automatic, FrameTicksStyle -> {}, GridLines -> None, 
     GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> 
     Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, Method -> 
     Automatic, PlotLabel -> None, PlotRange -> Automatic, PlotRangeClipping -> 
     True, PlotRangePadding -> Automatic, PlotRegion -> Automatic, 
     PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, 
     Ticks -> Automatic, TicksStyle -> {}}], 
   GraphicsBox[{}, {
    DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox[
        TagBox["\"Time (s)\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Efficiency\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "MessagesHead" -> ListLinePlot, 
       "DownsampleWindow" -> None, "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "MessagesHead" -> ListLinePlot, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Channel Efficiency\"", 16, Bold, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{-1, 1}, {0., 1.}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}, 
     AlignmentPoint -> Center, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, AxesLabel -> 
     None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, 
     BaselinePosition -> Automatic, BaseStyle -> {}, ColorOutput -> Automatic,
      ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, 
     DisplayFunction :> $DisplayFunction, Epilog -> {}, FormatType :> 
     TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, 
     FrameTicks -> Automatic, FrameTicksStyle -> {}, GridLines -> None, 
     GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> 
     Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, Method -> 
     Automatic, PlotLabel -> None, PlotRange -> Automatic, PlotRangeClipping -> 
     True, PlotRangePadding -> Automatic, PlotRegion -> Automatic, 
     PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, 
     Ticks -> Automatic, TicksStyle -> {}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.959216084209955*^9},
 CellLabel->
  "Out[605]=",ExpressionUUID->"b9e9e20d-5c2e-4931-8282-59844826a9ef"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.7]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {}}, {}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox[
        TagBox["\"RTT (s)\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Count\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {-0.02, 0}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, PlotLabel -> FormBox[
       StyleBox[
       "\"Round-Trip Time Distribution\"", 16, Bold, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0, 1}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, {
      
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.644]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.471412, 0.108766, 0.527016]], 
         TagBox[
          TooltipBox[
           TagBox[
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 0.}, 
             "RoundingRadius" -> 0], StatusArea[#, 0]& , TagBoxNote -> "0"], 
           StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
           Style[0, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.471412, 0.108766, 0.527016]], 
         TagBox[
          TooltipBox[
           TagBox[
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 0.},
              "RoundingRadius" -> 0], StatusArea[#, 0]& , TagBoxNote -> "0"], 
           
           StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
           Style[0, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.471412, 0.108766, 0.527016]], 
         TagBox[
          TooltipBox[
           TagBox[
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 0.},
              "RoundingRadius" -> 0], StatusArea[#, 0]& , TagBoxNote -> "0"], 
           
           StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
           Style[0, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.471412, 0.108766, 0.527016]], 
         TagBox[
          TooltipBox[
           TagBox[
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 0.}, 
             "RoundingRadius" -> 0], StatusArea[#, 0]& , TagBoxNote -> "0"], 
           StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
           Style[0, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.471412, 0.108766, 0.527016]], 
         TagBox[
          TooltipBox[
           TagBox[
            
            RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 0.}, 
             "RoundingRadius" -> 0], StatusArea[#, 0]& , TagBoxNote -> "0"], 
           StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
           Style[0, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.471412, 0.108766, 0.527016]], 
         TagBox[
          TooltipBox[
           TagBox[
            
            RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 0.}, 
             "RoundingRadius" -> 0], StatusArea[#, 0]& , TagBoxNote -> "0"], 
           StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
           Style[0, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.471412, 0.108766, 0.527016]], 
         TagBox[
          TooltipBox[
           TagBox[
            
            RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 0.}, 
             "RoundingRadius" -> 0], StatusArea[#, 0]& , TagBoxNote -> "0"], 
           StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
           Style[0, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.471412, 0.108766, 0.527016]], 
         TagBox[
          TooltipBox[
           TagBox[
            
            RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 0.}, 
             "RoundingRadius" -> 0], StatusArea[#, 0]& , TagBoxNote -> "0"], 
           StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
           Style[0, {}], "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.39075018208302986`, 0.}, {8.612410779315367, 0.}}]}, 
         StyleBox[{
           Directive[
            Thickness[Tiny]], 
           StyleBox[{
             InsetBox[
              FormBox[
               TagBox["\"Station ID\"", HoldForm], TraditionalForm], 
              Offset[{10., 0.}, {8.451201747997084, 0.}], 
              NCache[
               ImageScaled[{0, 
                 Rational[1, 2]}], 
               ImageScaled[{0, 0.5}]], Automatic, {1, 0}]}, {{}}, 
            StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
          False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{8.451201747997086, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {8.451201747997086, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {
             LineBox[{{1.4512017479970867`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
                0.}]}], 
             LineBox[{{1.5487982520029133`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
                0.}]}], 
             LineBox[{{2.4512017479970867`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
                0.}]}], 
             LineBox[{{2.5487982520029133`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
                0.}]}], 
             LineBox[{{3.4512017479970867`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
                0.}]}], 
             LineBox[{{3.5487982520029133`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
                0.}]}], 
             LineBox[{{4.451201747997087, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {4.451201747997087, 
                0.}]}], 
             LineBox[{{4.548798252002913, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {4.548798252002913, 
                0.}]}], 
             LineBox[{{5.451201747997087, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {5.451201747997087, 
                0.}]}], 
             LineBox[{{5.548798252002913, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {5.548798252002913, 
                0.}]}], 
             LineBox[{{6.451201747997087, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {6.451201747997087, 
                0.}]}], 
             LineBox[{{6.548798252002913, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {6.548798252002913, 
                0.}]}], 
             LineBox[{{7.451201747997087, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {7.451201747997087, 
                0.}]}], 
             LineBox[{{7.548798252002913, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {7.548798252002913, 
                0.}]}]}, {}}}, 
          StyleBox[{
            Directive[
             Thickness[Tiny]], 
            Directive[
             Thickness[Tiny]], 
            StyleBox[{
              InsetBox[
               FormBox["1", TraditionalForm], 
               Offset[{0, -2}, {1., 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["2", TraditionalForm], 
               Offset[{0, -2}, {2., 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["3", TraditionalForm], 
               Offset[{0, -2}, {3., 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["4", TraditionalForm], 
               Offset[{0, -2}, {4., 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["5", TraditionalForm], 
               Offset[{0, -2}, {5., 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["6", TraditionalForm], 
               Offset[{0, -2}, {6., 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["7", TraditionalForm], 
               Offset[{0, -2}, {7., 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox["8", TraditionalForm], 
               Offset[{0, -2}, {7.999999999999999, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}]}, {{}}, 
             StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
           False]}, {"GraphicsTicks"}, StripOnInput -> False]}, {
       "GraphicsAxes"}, StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\"Station ID\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Collisions\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {0.39075018208302986`, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, PlotLabel -> FormBox[
       StyleBox[
       "\"Collisions per Station\"", 16, Bold, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.9592160842412443`*^9},
 CellLabel->
  "Out[606]=",ExpressionUUID->"89c109e7-b12e-4115-bf66-d2e626bacf24"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Metric\"\>",
       HoldForm], 
      TagBox["\<\"Value\"\>",
       HoldForm]},
     {"\<\"Total Packets Sent\"\>", 
      RowBox[{"8", " ", 
       RowBox[{"station", "[", 
        RowBox[{"\<\"Stats\"\>", ",", "\<\"Sent\"\>"}], "]"}]}]},
     {"\<\"Total Collisions\"\>", 
      RowBox[{"8", " ", 
       RowBox[{"station", "[", 
        RowBox[{"\<\"Stats\"\>", ",", "\<\"Collisions\"\>"}], "]"}]}]},
     {"\<\"Collision Rate\"\>", 
      FractionBox[
       RowBox[{"8.`", " ", 
        RowBox[{"station", "[", 
         RowBox[{"\<\"Stats\"\>", ",", "\<\"Collisions\"\>"}], "]"}]}], 
       RowBox[{
        RowBox[{"8.`", " ", 
         RowBox[{"station", "[", 
          RowBox[{"\<\"Stats\"\>", ",", "\<\"Collisions\"\>"}], "]"}]}], "+", 
        
        RowBox[{"8.`", " ", 
         RowBox[{"station", "[", 
          RowBox[{"\<\"Stats\"\>", ",", "\<\"Sent\"\>"}], "]"}]}]}]]},
     {"\<\"Average Throughput\"\>", 
      RowBox[{"Mean", "[", 
       RowBox[{"{", "}"}], "]"}]},
     {"\<\"Average Efficiency\"\>", 
      RowBox[{"Mean", "[", 
       RowBox[{"{", "}"}], "]"}]},
     {"\<\"Average RTT\"\>", 
      RowBox[{"station", "[", 
       RowBox[{"\<\"Stats\"\>", ",", "\<\"RTTs\"\>"}], "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {None, {"Metric", "Value"}}]]]], "Output",
 CellChangeTimes->{3.959216084252432*^9},
 CellLabel->
  "Out[610]//TableForm=",ExpressionUUID->"b9818899-7210-4fea-a1f5-\
76483b735b20"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Station\"\>",
       HoldForm], 
      TagBox["\<\"Sent\"\>",
       HoldForm], 
      TagBox["\<\"Collisions\"\>",
       HoldForm], 
      TagBox["\<\"ACKs\"\>",
       HoldForm], 
      TagBox["\<\"Success Rate\"\>",
       HoldForm], 
      TagBox["\<\"Avg RTT\"\>",
       HoldForm]},
     {"1", "0", "0", "0", "\<\"N/A\"\>", "\<\"N/A\"\>"},
     {"2", "0", "0", "0", "\<\"N/A\"\>", "\<\"N/A\"\>"},
     {"3", "0", "0", "0", "\<\"N/A\"\>", "\<\"N/A\"\>"},
     {"4", "0", "0", "0", "\<\"N/A\"\>", "\<\"N/A\"\>"},
     {"5", "0", "0", "0", "\<\"N/A\"\>", "\<\"N/A\"\>"},
     {"6", "0", "0", "0", "\<\"N/A\"\>", "\<\"N/A\"\>"},
     {"7", "0", "0", "0", "\<\"N/A\"\>", "\<\"N/A\"\>"},
     {"8", "0", "0", "0", "\<\"N/A\"\>", "\<\"N/A\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"Station", "Sent", "Collisions", "ACKs", "Success Rate", 
       "Avg RTT"}}]]]], "Output",
 CellChangeTimes->{3.959216084253564*^9},
 CellLabel->
  "Out[611]//TableForm=",ExpressionUUID->"c480d8cc-b0df-4b11-8ce2-\
70ebb27229b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Ethernet", " ", "Simulation", " ", "Parameters"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"simulationTime", "=", "0.1"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Simulation", " ", "duration", " ", "in", " ", "seconds"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"numStations", "=", "10"}], ";"}], "     ", 
   RowBox[{"(*", 
    RowBox[{
    "Number", " ", "of", " ", "stations", " ", "on", " ", "the", " ", 
     "network"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"dataRate", "=", 
     RowBox[{"10", "^", "7"}]}], ";"}], "       ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"10", " ", "Mbps", " ", "Ethernet"}], "-", "10"}], ",", "000", 
     ",", 
     RowBox[{"000", " ", 
      RowBox[{"bits", "/", "second"}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"propDelay", "=", 
     RowBox[{"5", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "9"}]}]}]}], ";"}], "   ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"5", 
      RowBox[{"ns", "/", "m"}], "*", "100", "m"}], "=", 
     RowBox[{"500", "ns", " ", "propagation", " ", "delay"}]}], "*)"}], "\n", 
   
   RowBox[{
    RowBox[{"slotTime", "=", 
     RowBox[{"512", "/", "dataRate"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Ethernet", " ", "slot", " ", "time", " ", 
     RowBox[{"(", 
      RowBox[{"512", " ", "bits"}], ")"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"packetSize", "=", "12000"}], ";"}], "    ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"1500", "-", 
       RowBox[{"byte", " ", "packets", "*", "8"}]}], "=", "12"}], ",", 
     RowBox[{"000", " ", "bits"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"ackSize", "=", "512"}], ";"}], "         ", 
   RowBox[{"(*", 
    RowBox[{"ACK", " ", "packet", " ", "size"}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Station", " ", "Structure"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"stationTemplate", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
       RowBox[{"(*", 
        RowBox[{"IDLE", ",", "BACKOFF", ",", "TRANSMITTING"}], "*)"}], 
       RowBox[{"\"\<Queue\>\"", "->", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"Packet", " ", "queue"}], "*)"}], 
       RowBox[{"\"\<BackoffWindow\>\"", "->", "1"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Current", " ", "backoff", " ", "window"}], "*)"}], 
       RowBox[{"\"\<RetryCount\>\"", "->", "0"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Current", " ", "packet", " ", "retry", " ", "count"}], 
        "*)"}], 
       RowBox[{"\"\<CurrentPacket\>\"", "->", "None"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Packet", " ", "in", " ", "transmission"}], "*)"}], 
       RowBox[{"\"\<CollisionFlag\>\"", "->", "False"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Collision", " ", "detected"}], "*)"}], 
       RowBox[{"\"\<TotalPacketsSent\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<TotalCollisions\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<RTTMeasurements\>\"", "->", 
        RowBox[{"{", "}"}]}]}], "|>"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Initialize", " ", "Stations"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"stations", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"stationTemplate", ",", "numStations"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"medium", "=", "None"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Current", " ", "packet", " ", "on", " ", "medium"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"eventQueue", "=", 
     RowBox[{"{", "}"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Time", "-", 
     RowBox[{"sorted", " ", "event", " ", 
      RowBox[{"queue", ":", 
       RowBox[{"{", 
        RowBox[{"time", ",", "type", ",", "station", ",", "packet"}], 
        "}"}]}]}]}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Helper", " ", "Functions"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"isMediumBusy", "[", "]"}], ":=", 
    RowBox[{"medium", "=!=", "None"}]}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"getPropagationDelay", "[", 
      RowBox[{"source_", ",", "dest_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"source", "-", "dest"}], "]"}], "*", "propDelay"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Schedule", " ", "New", " ", "Packet", " ", "Arrivals"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"arrivalTime", "=", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "simulationTime"}], "}"}], "]"}]}], ";", "\n", 
       RowBox[{"destination", "=", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "numStations"}], "}"}], "]"}]}], ";", "\n", 
       RowBox[{"packet", "=", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<ID\>\"", "->", "i"}], ",", 
          RowBox[{"\"\<Source\>\"", "->", "stationID"}], ",", 
          RowBox[{"\"\<Destination\>\"", "->", "destination"}], ",", 
          RowBox[{"\"\<Size\>\"", "->", "packetSize"}], ",", 
          RowBox[{"\"\<GenerationTime\>\"", "->", "arrivalTime"}], ",", 
          RowBox[{"\"\<Attempts\>\"", "->", "0"}], ",", 
          RowBox[{"\"\<ACKReceived\>\"", "->", "False"}]}], "|>"}]}], ";", 
       "\n", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"eventQueue", ",", 
         RowBox[{"{", 
          RowBox[{
          "arrivalTime", ",", "\"\<PACKET_ARRIVAL\>\"", ",", "stationID", ",",
            "packet"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"stationID", ",", "numStations"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "10"}], "}"}]}], "  ", 
     RowBox[{"(*", 
      RowBox[{"10", " ", "packets", " ", "per", " ", "station"}], "*)"}], 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Event", " ", "Processing", " ", "Engine"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"While", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "eventQueue", "]"}], ">", "0"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Get", " ", "next", " ", "event"}], "*)"}], 
      RowBox[{
       RowBox[{"eventQueue", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{"eventQueue", ",", "First"}], "]"}]}], ";", "\n", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "currentTime", ",", "eventType", ",", "stationID", ",", "packet"}], 
         "}"}], "=", 
        RowBox[{"First", "[", "eventQueue", "]"}]}], ";", "\n", 
       RowBox[{"eventQueue", "=", 
        RowBox[{"Rest", "[", "eventQueue", "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"currentTime", ">", "simulationTime"}], ",", 
         RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\n", 
       RowBox[{"station", "=", 
        RowBox[{"stations", "[", 
         RowBox[{"[", "stationID", "]"}], "]"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Process", " ", "Event", " ", "Types"}], "*)"}], 
       RowBox[{"Switch", "[", 
        RowBox[{"eventType", ",", 
         RowBox[{"(*", 
          RowBox[{"New", " ", "packet", " ", "generated"}], "*)"}], 
         "\"\<PACKET_ARRIVAL\>\"", ",", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], ",", "packet"}], 
           "]"}], ";", "\n", 
          RowBox[{
           RowBox[{"stations", "[", 
            RowBox[{"[", "stationID", "]"}], "]"}], "=", "station"}], ";", 
          "\n", 
          RowBox[{"(*", 
           RowBox[{
           "Start", " ", "transmission", " ", "if", " ", "medium", " ", 
            "idle"}], "*)"}], 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<State\>\"", "]"}], "===", 
              "\"\<IDLE\>\""}], "&&", 
             RowBox[{"!", 
              RowBox[{"isMediumBusy", "[", "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"transmitTime", "=", "currentTime"}], ";", "\n", 
             RowBox[{"newEvent", "=", 
              RowBox[{"{", 
               RowBox[{
               "transmitTime", ",", "\"\<START_TRANSMISSION\>\"", ",", 
                "stationID", ",", 
                RowBox[{"First", "[", 
                 RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], 
               "}"}]}], ";", "\n", 
             RowBox[{"eventQueue", "=", 
              RowBox[{"Insert", "[", 
               RowBox[{"eventQueue", ",", "newEvent", ",", "1"}], "]"}]}], 
             ";"}]}], "]"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{"Begin", " ", "packet", " ", "transmission"}], "*)"}], 
         "\"\<START_TRANSMISSION\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<State\>\"", "]"}], "===", 
             "\"\<IDLE\>\""}], "&&", 
            RowBox[{"!", 
             RowBox[{"isMediumBusy", "[", "]"}]}]}], ",", 
           RowBox[{"(*", 
            RowBox[{"Remove", " ", "packet", " ", "from", " ", "queue"}], 
            "*)"}], 
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<CurrentPacket\>\"", "]"}], "=", 
             "packet"}], ";", "\n", 
            RowBox[{
             RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=", 
             RowBox[{"Rest", "[", 
              RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], ";", 
            "\n", 
            RowBox[{
             RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
             "\"\<TRANSMITTING\>\""}], ";", "\n", 
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<CurrentPacket\>\"", "]"}], "[", 
              "\"\<Attempts\>\"", "]"}], "+=", "1"}], ";", "\n", 
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "stationID", "]"}], "]"}], "=", "station"}], ";", 
            "\n", 
            RowBox[{"(*", 
             RowBox[{"Calculate", " ", "transmission", " ", "time"}], "*)"}], 
            
            RowBox[{"txTime", "=", 
             RowBox[{
              RowBox[{"packet", "[", "\"\<Size\>\"", "]"}], "/", 
              "dataRate"}]}], ";", "\n", 
            RowBox[{"endTime", "=", 
             RowBox[{"currentTime", "+", "txTime"}]}], ";", "\n", 
            RowBox[{"(*", 
             RowBox[{"Check", " ", "for", " ", "collisions"}], "*)"}], 
            RowBox[{"collision", "=", "False"}], ";", "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"isMediumBusy", "[", "]"}], ",", 
              RowBox[{
               RowBox[{"collision", "=", "True"}], ";", "\n", 
               RowBox[{"(*", 
                RowBox[{
                "Collision", " ", "detected", " ", "immediately", " ", "at", 
                 " ", "source"}], "*)"}], 
               RowBox[{"eventQueue", "=", 
                RowBox[{"Insert", "[", 
                 RowBox[{"eventQueue", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"currentTime", "+", 
                    RowBox[{"getPropagationDelay", "[", 
                    RowBox[{"stationID", ",", 
                    RowBox[{"medium", "[", "\"\<Source\>\"", "]"}]}], "]"}]}],
                     ",", "\"\<COLLISION_DETECTED\>\"", ",", "stationID", ",",
                     "packet"}], "}"}], ",", "1"}], "]"}]}], ";"}]}], "]"}], 
            ";", "\n", 
            RowBox[{"(*", 
             RowBox[{"Put", " ", "packet", " ", "on", " ", "medium"}], "*)"}], 
            RowBox[{"medium", "=", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<Source\>\"", "->", "stationID"}], ",", 
               RowBox[{"\"\<StartTime\>\"", "->", "currentTime"}], ",", 
               RowBox[{"\"\<EndTime\>\"", "->", "endTime"}], ",", 
               RowBox[{"\"\<Packet\>\"", "->", "packet"}]}], "|>"}]}], ";", 
            "\n", 
            RowBox[{"(*", 
             RowBox[{"Schedule", " ", "end", " ", "of", " ", "transmission"}],
              "*)"}], 
            RowBox[{"eventQueue", "=", 
             RowBox[{"Insert", "[", 
              RowBox[{"eventQueue", ",", 
               RowBox[{"{", 
                RowBox[{
                "endTime", ",", "\"\<END_TRANSMISSION\>\"", ",", "stationID", 
                 ",", "packet"}], "}"}], ",", "1"}], "]"}]}], ";", "\n", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"If", " ", "collision", " ", "detected"}], ",", 
              RowBox[{"handle", " ", "it"}]}], "*)"}], 
            RowBox[{"If", "[", 
             RowBox[{"collision", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"station", "[", "\"\<CollisionFlag\>\"", "]"}], "=", 
                "True"}], ";", "\n", 
               RowBox[{
                RowBox[{"stations", "[", 
                 RowBox[{"[", "stationID", "]"}], "]"}], "=", "station"}], 
               ";"}]}], "]"}]}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Successful", " ", "transmission", " ", "completion"}], 
          "*)"}], "\"\<END_TRANSMISSION\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"station", "[", "\"\<CollisionFlag\>\"", "]"}]}], ",", 
           RowBox[{"(*", 
            RowBox[{"Successful", " ", "transmission"}], "*)"}], 
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<TotalPacketsSent\>\"", "]"}], "+=", 
             "1"}], ";", "\n", 
            RowBox[{
             RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
             "\"\<IDLE\>\""}], ";", "\n", 
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "stationID", "]"}], "]"}], "=", "station"}], ";", 
            "\n", 
            RowBox[{"medium", "=", "None"}], ";", "\n", 
            RowBox[{"(*", 
             RowBox[{"Schedule", " ", "ACK", " ", "at", " ", "destination"}], 
             "*)"}], 
            RowBox[{"ackPacket", "=", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<ID\>\"", "->", 
                RowBox[{
                 RowBox[{"packet", "[", "\"\<ID\>\"", "]"}], "*", "1000"}]}], 
               ",", 
               RowBox[{"(*", 
                RowBox[{"Unique", " ", "ACK", " ", "ID"}], "*)"}], 
               RowBox[{"\"\<Source\>\"", "->", 
                RowBox[{"packet", "[", "\"\<Destination\>\"", "]"}]}], ",", 
               RowBox[{"\"\<Destination\>\"", "->", 
                RowBox[{"packet", "[", "\"\<Source\>\"", "]"}]}], ",", 
               RowBox[{"\"\<Size\>\"", "->", "ackSize"}], ",", 
               RowBox[{"\"\<GenerationTime\>\"", "->", "currentTime"}], ",", 
               RowBox[{"\"\<Acknowledges\>\"", "->", 
                RowBox[{"packet", "[", "\"\<ID\>\"", "]"}]}], ",", 
               RowBox[{"\"\<IsACK\>\"", "->", "True"}]}], "|>"}]}], ";", "\n", 
            RowBox[{"ackArrival", "=", 
             RowBox[{"currentTime", "+", 
              RowBox[{"ackSize", "/", "dataRate"}]}]}], ";", "\n", 
            RowBox[{"eventQueue", "=", 
             RowBox[{"Insert", "[", 
              RowBox[{"eventQueue", ",", 
               RowBox[{"{", 
                RowBox[{"ackArrival", ",", "\"\<PACKET_ARRIVAL\>\"", ",", 
                 RowBox[{"packet", "[", "\"\<Destination\>\"", "]"}], ",", 
                 "ackPacket"}], "}"}], ",", "1"}], "]"}]}], ";", "\n", 
            RowBox[{"(*", 
             RowBox[{
             "Process", " ", "next", " ", "packet", " ", "if", " ", "any"}], 
             "*)"}], 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}], ">", 
               "0"}], ",", 
              RowBox[{
               RowBox[{"eventQueue", "=", 
                RowBox[{"Insert", "[", 
                 RowBox[{"eventQueue", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "currentTime", ",", "\"\<START_TRANSMISSION\>\"", ",", 
                    "stationID", ",", 
                    RowBox[{"First", "[", 
                    RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], 
                   "}"}], ",", "1"}], "]"}]}], ";"}]}], "]"}]}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Collision", " ", "detected"}], "*)"}], 
         "\"\<COLLISION_DETECTED\>\"", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"station", "[", "\"\<TotalCollisions\>\"", "]"}], "+=", 
           "1"}], ";", "\n", 
          RowBox[{
           RowBox[{"station", "[", "\"\<CollisionFlag\>\"", "]"}], "=", 
           "False"}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Exponential", " ", "backoff"}], "*)"}], 
          RowBox[{
           RowBox[{"station", "[", "\"\<RetryCount\>\"", "]"}], "+=", "1"}], 
          ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<RetryCount\>\"", "]"}], ">", "10"}],
             ",", 
            RowBox[{"(*", 
             RowBox[{"Max", " ", "retries"}], "*)"}], 
            RowBox[{"(*", 
             RowBox[{"Packet", " ", "drop"}], "*)"}], 
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
              "\"\<IDLE\>\""}], ";", "\n", 
             RowBox[{
              RowBox[{"station", "[", "\"\<CurrentPacket\>\"", "]"}], "=", 
              "None"}], ";", "\n", 
             RowBox[{
              RowBox[{"station", "[", "\"\<RetryCount\>\"", "]"}], "=", "0"}],
              ";"}], ",", 
            RowBox[{"(*", 
             RowBox[{"Backoff", " ", "algorithm"}], "*)"}], 
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<BackoffWindow\>\"", "]"}], "=", 
              RowBox[{"Min", "[", 
               RowBox[{"1024", ",", 
                RowBox[{"2", "*", 
                 RowBox[{"station", "[", "\"\<BackoffWindow\>\"", "]"}]}]}], 
               "]"}]}], ";", 
             RowBox[{"(*", 
              RowBox[{"Binary", " ", "exponential", " ", "backoff"}], "*)"}], 
             
             RowBox[{"backoffSlots", "=", 
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"station", "[", "\"\<BackoffWindow\>\"", "]"}], "-",
                   "1"}]}], "}"}], "]"}]}], ";", "\n", 
             RowBox[{"backoffTime", "=", 
              RowBox[{"backoffSlots", "*", "slotTime"}]}], ";", "\n", 
             RowBox[{"(*", 
              RowBox[{"Reschedule", " ", "transmission"}], "*)"}], 
             RowBox[{"retryTime", "=", 
              RowBox[{"currentTime", "+", "backoffTime"}]}], ";", "\n", 
             RowBox[{"eventQueue", "=", 
              RowBox[{"Insert", "[", 
               RowBox[{"eventQueue", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "retryTime", ",", "\"\<START_TRANSMISSION\>\"", ",", 
                  "stationID", ",", 
                  RowBox[{"station", "[", "\"\<CurrentPacket\>\"", "]"}]}], 
                 "}"}], ",", "1"}], "]"}]}], ";", "\n", 
             RowBox[{
              RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
              "\"\<BACKOFF\>\""}], ";"}]}], "]"}], ";", "\n", 
          RowBox[{
           RowBox[{"stations", "[", 
            RowBox[{"[", "stationID", "]"}], "]"}], "=", "station"}], ";", 
          "\n", 
          RowBox[{"medium", "=", "None"}], ";"}]}], " ", 
        RowBox[{"(*", 
         RowBox[{"Clear", " ", "medium", " ", "after", " ", "collision"}], 
         "*)"}], "]"}]}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Calculate", " ", "Performance", " ", "Metrics"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", "\"\<Simulation Complete. Calculating metrics...\>\"", 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"throughput", "=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"stations", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "\"\<TotalPacketsSent\>\""}], "]"}], "]"}], 
       "]"}], "/", "simulationTime"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"collisionRate", "=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"stations", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "\"\<TotalCollisions\>\""}], "]"}], "]"}], "]"}],
       "/", "simulationTime"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Calculate", " ", "Round"}], "-", 
     RowBox[{"Trip", " ", "Times"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"rttValues", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"dataPackets", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"station", "[", "\"\<RTTMeasurements\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"#", "[", "\"\<IsACK\>\"", "]"}]}], "&"}]}], "]"}]}], ";",
        "\n", 
       RowBox[{"ackPackets", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"station", "[", "\"\<RTTMeasurements\>\"", "]"}], ",", 
          RowBox[{
           RowBox[{"#", "[", "\"\<IsACK\>\"", "]"}], "&"}]}], "]"}]}], ";", 
       "\n", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ack", "=", 
           RowBox[{"FirstCase", "[", 
            RowBox[{"ackPackets", ",", 
             RowBox[{"ack_", "/;", 
              RowBox[{
               RowBox[{
                RowBox[{"ack", "[", "\"\<Acknowledges\>\"", "]"}], "===", 
                RowBox[{"packet", "[", "\"\<ID\>\"", "]"}]}], "&&", 
               RowBox[{
                RowBox[{"ack", "[", "\"\<RxTime\>\"", "]"}], ">", 
                RowBox[{"packet", "[", "\"\<TxTime\>\"", "]"}]}]}]}]}], 
            "]"}]}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", "ack", "]"}], "=!=", "FirstCase"}], ",", 
            RowBox[{
             RowBox[{"rtt", "=", 
              RowBox[{
               RowBox[{"ack", "[", "\"\<RxTime\>\"", "]"}], "-", 
               RowBox[{"packet", "[", "\"\<TxTime\>\"", "]"}]}]}], ";", "\n", 
             
             RowBox[{"AppendTo", "[", 
              RowBox[{"rttValues", ",", "rtt"}], "]"}], ";"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"packet", ",", "dataPackets"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"station", ",", "stations"}], "}"}]}], "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Visualization", ":", 
     RowBox[{"Network", " ", "Throughput"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"throughputPlot", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{
            RowBox[{"stations", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "\"\<TotalPacketsSent\>\""}], "]"}], "]"}], 
            "/", "simulationTime"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}], ",", 
       RowBox[{
       "PlotLabel", "->", "\"\<Station Throughput (packets/sec)\>\""}], ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Station ID\>\"", ",", "\"\<Throughput\>\""}], "}"}]}], 
       ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Visualization", ":", 
     RowBox[{"Collision", " ", "Statistics"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"collisionPlot", "=", 
     RowBox[{"BarChart", "[", 
      RowBox[{
       RowBox[{"stations", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "\"\<TotalCollisions\>\""}], "]"}], "]"}], ",", 
       RowBox[{"ChartLabels", "->", 
        RowBox[{"Range", "[", "numStations", "]"}]}], ",", 
       RowBox[{"PlotLabel", "->", "\"\<Collisions per Station\>\""}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Visualization", ":", 
     RowBox[{"Round", "-", 
      RowBox[{"Trip", " ", "Time", " ", "Distribution"}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"rttPlot", "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "rttValues", "]"}], ">", "0"}], ",", 
       RowBox[{"SmoothHistogram", "[", 
        RowBox[{
         RowBox[{"rttValues", "*", 
          RowBox[{"10", "^", "6"}]}], ",", 
         RowBox[{
         "PlotLabel", "->", "\"\<Round-Trip Time Distribution (\[Mu]s)\>\""}],
          ",", 
         RowBox[{"AxesLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<RTT (\[Mu]s)\>\"", ",", "\"\<Density\>\""}], "}"}]}], 
         ",", 
         RowBox[{"ImageSize", "->", "400"}]}], "]"}], ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{"\"\<No RTT measurements recorded\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "0.5"}], "}"}]}], "]"}], ",", 
         RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Visualization", ":", 
     RowBox[{"Medium", " ", "Utilization", " ", "Timeline"}]}], "*)"}], "\n", 
   
   RowBox[{
    RowBox[{"utilizationPlot", "=", 
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"isMediumBusy", "[", "]"}], ",", "1", ",", "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "simulationTime", ",", 
         RowBox[{"simulationTime", "/", "100"}]}], "}"}], ",", 
       RowBox[{"Filling", "->", "Axis"}], ",", 
       RowBox[{"PlotLabel", "->", "\"\<Medium Utilization\>\""}], ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Busy (1)/Idle (0)\>\""}], 
         "}"}]}], ",", 
       RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "Results"}], "*)"}], "\n", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Throughput: \>\"", "<>", 
          RowBox[{"ToString", "[", "throughput", "]"}], "<>", 
          "\"\< packets/sec\>\""}], ",", 
         RowBox[{"\"\<Collision Rate: \>\"", "<>", 
          RowBox[{"ToString", "[", "collisionRate", "]"}], "<>", 
          "\"\< collisions/sec\>\""}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"throughputPlot", ",", "collisionPlot"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"rttPlot", ",", "utilizationPlot"}], "}"}]}], "}"}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.959216181345511*^9, 3.9592161813463917`*^9}},
 CellLabel->
  "In[1137]:=",ExpressionUUID->"9304f824-24e2-484b-a282-967fd963be52"],

Cell[BoxData["\<\"Simulation Complete. Calculating metrics...\"\>"], "Print",
 CellChangeTimes->{3.959216181551621*^9},
 CellLabel->
  "During evaluation of \
In[1137]:=",ExpressionUUID->"5c0753ee-b835-4eb4-b9a1-9b1e2d63b15c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Throughput: 6480. packets/sec\"\>", "\<\"Collision Rate: 0. \
collisions/sec\"\>"},
    {
     GraphicsBox[{{}, 
       InterpretationBox[{
         TagBox[{{}, {}, 
           TagBox[
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
             2], LineBox[{{1., 2020.}, {2., 300.}, {3., 1720.}, {4., 740.}, {
              5., 110.}, {6., 0.}, {7., 70.}, {8., 1040.}, {9., 110.}, {10., 
              370.}}]},
            Annotation[#, "Charting`Private`Tag#1"]& ]},
          {
          "WolframDynamicHighlight", <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
         StyleBox[
          DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
            Slot["HighlightElements"], 
            Slot["LayoutOptions"], 
            Slot["Meta"], 
            Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
               Annotation[{
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[2]], 
                 
                 Line[{{1., 2020.}, {2., 300.}, {3., 1720.}, {4., 740.}, {5., 
                  110.}, {6., 0.}, {7., 70.}, {8., 1040.}, {9., 110.}, {10., 
                  370.}}]}, "Charting`Private`Tag#1"]}}, <|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, 
                "PlotRange" -> {{0, 10.}, {0, 2020.}}, 
                "Frame" -> {{False, False}, {False, False}}, 
                "AxesOrigin" -> {0, 0}, "ImageSize" -> {400, 400/GoldenRatio},
                 "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                GoldenRatio^(-1), "DefaultStyle" -> {
                  Directive[
                   PointSize[
                    Rational[7, 360]], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> ListLinePlot, "GroupHighlight" -> 
                False|>|>]]& )[<|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, 
               "PlotRange" -> {{0, 10.}, {0, 2020.}}, 
               "Frame" -> {{False, False}, {False, False}}, 
               "AxesOrigin" -> {0, 0}, "ImageSize" -> {400, 400/GoldenRatio}, 
               "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[2]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>],
           
           ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
            4.503599627370496*^15, -4.503599627370496*^15}}],
          Selectable->False]},
        Annotation[{{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[7, 360]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[{{1., 2020.}, {2., 300.}, {3., 1720.}, {4., 740.}, {5., 
              110.}, {6., 0.}, {7., 70.}, {8., 1040.}, {9., 110.}, {10., 
              370.}}]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 10.}, {0, 2020.}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {400, 400/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>, 
         "DynamicHighlight"]], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         TagBox["\"Station ID\"", HoldForm], TraditionalForm], 
        FormBox[
         TagBox["\"Throughput\"", HoldForm], TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
        "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"Station Throughput (packets/sec)\"", TraditionalForm],
      PlotRange->{{0, 10.}, {0, 2020.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{
       {Opacity[0], 
        PointBox[{{0.3507501820830299, 0.}, {10.451201747997086`, 0.}}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
         Thickness[Small]}], 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            
            TagBox[RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 0.},
              
              RoundingRadius->0],
             StatusArea[#, 0]& ,
             TagBoxNote->"0"],
            StyleBox["0", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            
            TagBox[RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 0.},
              
              RoundingRadius->0],
             StatusArea[#, 0]& ,
             TagBoxNote->"0"],
            StyleBox["0", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            
            TagBox[RectangleBox[{2.5487982520029133, 0.}, {3.4512017479970867, 0.},
              
              RoundingRadius->0],
             StatusArea[#, 0]& ,
             TagBoxNote->"0"],
            StyleBox["0", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            
            TagBox[RectangleBox[{3.5487982520029133, 0.}, {4.451201747997087, 0.},
              
              RoundingRadius->0],
             StatusArea[#, 0]& ,
             TagBoxNote->"0"],
            StyleBox["0", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            
            TagBox[RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 0.},
              
              RoundingRadius->0],
             StatusArea[#, 0]& ,
             TagBoxNote->"0"],
            StyleBox["0", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            
            TagBox[RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 0.},
              
              RoundingRadius->0],
             StatusArea[#, 0]& ,
             TagBoxNote->"0"],
            StyleBox["0", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 0.},
              RoundingRadius->0],
             StatusArea[#, 0]& ,
             TagBoxNote->"0"],
            StyleBox["0", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            
            TagBox[RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 0.},
              
              RoundingRadius->0],
             StatusArea[#, 0]& ,
             TagBoxNote->"0"],
            StyleBox["0", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            
            TagBox[RectangleBox[{8.548798252002912, 0.}, {9.451201747997086, 0.},
              
              RoundingRadius->0],
             StatusArea[#, 0]& ,
             TagBoxNote->"0"],
            StyleBox["0", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
          Thickness[Small]}], 
          TagBox[
           TooltipBox[
            
            TagBox[RectangleBox[{9.548798252002912, 0.}, {10.451201747997086, 0.},
              
              RoundingRadius->0],
             StatusArea[#, 0]& ,
             TagBoxNote->"0"],
            StyleBox["0", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
       StyleBox[
        StyleBox[{
          {Thickness[Tiny], 
           LineBox[{{0.3507501820830299, 0.}, {10.653210779315367`, 0.}}], 
           StyleBox[{}, "GraphicsLabel",
            StripOnInput->False]}, 
          StyleBox[{
            {Thickness[Tiny], 
             LineBox[{{0.5487982520029133, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
                0.}]}], 
             LineBox[{{10.451201747997086`, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {10.451201747997086`, 
                0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
               LineBox[{{1.4512017479970867`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
                  0.}]}], 
               LineBox[{{1.5487982520029133`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
                  0.}]}], 
               LineBox[{{2.4512017479970867`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
                  0.}]}], 
               LineBox[{{2.5487982520029133`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
                  0.}]}], 
               LineBox[{{3.4512017479970867`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
                  0.}]}], 
               LineBox[{{3.5487982520029133`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
                  0.}]}], 
               LineBox[{{4.451201747997087, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {4.451201747997087, 
                  0.}]}], 
               LineBox[{{4.548798252002913, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {4.548798252002913, 
                  0.}]}], 
               LineBox[{{5.451201747997087, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {5.451201747997087, 
                  0.}]}], 
               LineBox[{{5.548798252002913, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {5.548798252002913, 
                  0.}]}], 
               LineBox[{{6.451201747997087, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {6.451201747997087, 
                  0.}]}], 
               LineBox[{{6.548798252002913, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {6.548798252002913, 
                  0.}]}], 
               LineBox[{{7.451201747997087, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {7.451201747997087, 
                  0.}]}], 
               LineBox[{{7.548798252002913, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {7.548798252002913, 
                  0.}]}], 
               LineBox[{{8.451201747997086, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {8.451201747997086, 
                  0.}]}], 
               LineBox[{{8.548798252002912, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {8.548798252002912, 
                  0.}]}], 
               LineBox[{{9.451201747997086, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {9.451201747997086, 
                  0.}]}], 
               LineBox[{{9.54879825200291, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {9.54879825200291, 
                  0.}]}]}, {}}}, 
            StyleBox[
             {Thickness[Tiny], 
              InsetBox["1", Offset[{0, -2}, {1., 0.}], NCache[
               ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
               Automatic, {1, 0}], 
              InsetBox["2", Offset[{0, -2}, {2., 0.}], NCache[
               ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
               Automatic, {1, 0}], 
              InsetBox["3", Offset[{0, -2}, {3., 0.}], NCache[
               ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
               Automatic, {1, 0}], 
              InsetBox["4", Offset[{0, -2}, {4., 0.}], NCache[
               ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
               Automatic, {1, 0}], 
              InsetBox["5", Offset[{0, -2}, {5., 0.}], NCache[
               ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
               Automatic, {1, 0}], 
              InsetBox["6", Offset[{0, -2}, {6., 0.}], NCache[
               ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
               Automatic, {1, 0}], 
              InsetBox["7", Offset[{0, -2}, {7., 0.}], NCache[
               ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
               Automatic, {1, 0}], 
              InsetBox["8", Offset[{0, -2}, {7.999999999999999, 0.}], NCache[
               ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
               Automatic, {1, 0}], 
              InsetBox["9", Offset[{0, -2}, {9., 0.}], NCache[
               ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
               Automatic, {1, 0}], 
              InsetBox["10", Offset[{0, -2}, {10., 0.}], NCache[
               ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
               Automatic, {1, 0}]}, "GraphicsLabel",
             StripOnInput->False]}, "GraphicsTicks",
           StripOnInput->False]},
         Antialiasing->False], "GraphicsAxes",
        StripOnInput->False]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, True},
      AxesLabel->{None, None},
      AxesOrigin->{0.3507501820830299, 0.},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      PlotLabel->FormBox["\"Collisions per Station\"", TraditionalForm],
      PlotRange->{{All, All}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{None, Automatic}]},
    {
     GraphicsBox[InsetBox["\<\"No RTT measurements recorded\"\>", {0.5, 0.5}],
      
      ImageSize->400], 
     GraphicsBox[{{
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], 
         TagBox[{
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
            LineBox[{},
             VertexColors->None]}, 
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
            LineBox[CompressedData["
1:eJxdlntojXEYx59mSUtStOaS3FrT0pIkt5YiucVGWvLHWlZzicXSsDSMzX2b
mZlttp3NbGYYtjNJQhpKYrUkSZLmEsOSy8r7vvN8n76/t84fn/PpnPN7n8v3
PRPStianDxKRdO8V8f/F19dE952/jb3PlqetTFTPrD7V8anwv/dsvJV1MgOe
WT+f6Xw+E373yJZFb3ZlwTPr92c7358Nv7MndtqQ5hx4Zv39XOf3c+Hnvl5x
7PSWffDMer4853x58DcXD42Izz8Iz6znL3DOXwA/+3rnjtvnDsMz6/0dde7v
KHx43IGPSeHj8Mx6/4XO/RfCV9wff2VbRhE8s9an2KlPMfzLX8ENwTNr/Uqc
+pXAj0l4NXnw3lPwzFrfUqe+pfBr18/xTwTPrPUvc+pfBl9+JrjgmbU/5U5/
yuFfPPm56m39WXhm7V+F078K+FGRa4ZNba2EZ9b+Vjn9rYJPmRUcCJ5Z+1/t
9L8aftnMQ/NT35ln1vmoceajBv5Tkn8i88w6P7XO/NTCH9n8/k9jr3lmna+Q
M18h+Pj8aK/k5pl1/uqc+auDf1yzsO17v3lmnc96Zz7r4Td50xQTeR6eWefX
PLNIVHcoc15UAzyzzrd5ZpEmv53DL8Az6/ybZxZZ4h8nuhGeWffDPLPIB3+c
xzbBM+v+mGcW8aft6cSL8My6X+aZRaasO3G3L64Znln3zzyzyEPvNKMTLsEz
636aZxbZUPQ5J3FGCzyz7q95ZhGvWF5LL8Mz636bZxZZ7YWNt5LwzLr/5plF
6rxp6w6ZZ9Z8MM8s8qO/K7sn9io8s+aHeWaRBcHCm2fWfDHPLFISEzQEnlnz
xzyzyEC5zDNrPplnFpkeXNfgmTW/zDOL7L/zyEsc88yab+aZRZ572+7NBDyz
5p95ZpFJwYHMM2s+mmcW2Z7hD/wNeGbNT/PMIvf64ryNNc+s+drm5Gsb/IiB
gsEza/6aZxYJqtVpnlnzud3J53b41sovDQ+WmmfW/DbP7P1HDxpqnlnzPezk
exg+eSBQ4Jk1/80zi9T67ewyz6zPhw7n+dAB/80/Top5Zn1+mGcW+Qfw543c

             "],
             VertexColors->None]}},
          Annotation[#, "Charting`Private`Tag$1404323#1"]& ]}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.004766666666666667], AbsoluteThickness[2], {}, 
          PointBox[CompressedData["
1:eJxd02lIlGEUBeBhkAiJEBKxjLAFMSQkQqJUhqCIykgtQqIfIglTRomJWEm0
m5aWuVSm5SxmY6alZZNESEpYQUQJEiIiEeESZiXRIvQucA+eD0QeRu93lzNL
sw6nZzsdDke2+tG/Zz/fXP8CU++3Z6W6ZjtT/OfEgWf5lW76PFd8PLx188ix
fPr7QvHR0ZjVc1uK6P9PipOGd5RdO3Sa6p0Vd22Z54wrPk/1L4jXP+oreH67
lN53SRxccm48LVhO778iruuNfpDnrqB+rooHf5sXUn9V4qj4oRVzTlVTvzXi
PfsSdUXq/7q49oZ5aJ5a8ce3v3Z+arxJ89WJF4bsnr+qvZ7mvSXOWGcK0vwN
4pS1JRsyPzfQPjziiTRd0UP78YovHvzyNzDlpX35xHHFEWoEH+3PL37j2dT5
Y8ZP+2wU56htRYbcof3CoQO+3OTQJto33KzHDbtL+4e36nIRAboHPKbXvbiZ
7gPr7b1bdo/uBa/ce/nFdGwL3Q9+paotir9P94T3V3wtciW00n1h1ZwauY3u
De9S4VEnpfvDfrW9AR9s8wD/nOkvHI15SPmAN5oAwDYvcFWkGYjyA9v2YJsn
eI15Oihf8Jnu1ypBsM0b/EFdX+2E8gcvNwVhm0f4iFsf4DHlE+6ZjlUXhm1e
O8ULbIOUX9h01wfbPD8Rt9dPNr3cBtt8w04zMGzzHhSn28BQ/mGvHrcftt+H
p+LvulwGbL8f8H+FCwPD
           "]], {}},
         Annotation[#, "Charting`Private`Tag$1404323#1"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesLabel->{
        FormBox["\"Time (s)\"", TraditionalForm], 
        FormBox["\"Busy (1)/Idle (0)\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
        "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
        "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
        Scaled[0.05]},
      PlotLabel->FormBox["\"Medium Utilization\"", TraditionalForm],
      PlotRange->{{0., 0.1}, {0, 2.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.959216181591928*^9},
 CellLabel->
  "Out[1161]=",ExpressionUUID->"dd45592a-5bff-4e2b-9fe5-de0657dee13f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Constants", " ", "from", " ", "Metcalfe", " ", "1976", " ", "paper"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cRate", "=", 
    RowBox[{"3", "*", 
     RowBox[{"10", "^", "6"}]}]}], ";"}], "          ", 
  RowBox[{"(*", 
   RowBox[{"Channel", " ", 
    RowBox[{"capacity", ":", 
     RowBox[{"3", " ", "Mbps"}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"slotTime", "=", 
    RowBox[{"16", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}]}]}], ";"}], "     ", 
  RowBox[{"(*", 
   RowBox[{"Slot", " ", 
    RowBox[{"time", ":", 
     RowBox[{"16", " ", "\[Mu]s"}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"propSpeed", "=", 
    RowBox[{"2", "*", 
     RowBox[{"10", "^", "8"}]}]}], ";"}], "      ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Signal", " ", "propagation", " ", 
     RowBox[{"speed", ":", "200"}]}], ",", 
    RowBox[{"000", " ", 
     RowBox[{"km", "/", "s"}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"maxStations", "=", "256"}], ";"}], "       ", 
  RowBox[{"(*", 
   RowBox[{"Maximum", " ", "stations", " ", "in", " ", "network"}], "*)"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Simulation", " ", "parameters"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numStations", "=", "10"}], ";"}], "        ", 
  RowBox[{"(*", 
   RowBox[{"Number", " ", "of", " ", "contending", " ", "stations"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"packetSize", "=", 
    RowBox[{"1500", "*", "8"}]}], ";"}], "     ", 
  RowBox[{"(*", 
   RowBox[{"Packet", " ", 
    RowBox[{"size", ":", 
     RowBox[{"1500", " ", "bytes", " ", "in", " ", "bits"}]}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"simTime", "=", "0.1"}], ";"}], "           ", 
  RowBox[{"(*", 
   RowBox[{"Total", " ", "simulation", " ", 
    RowBox[{"time", ":", 
     RowBox[{"100", " ", "ms"}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"timeStep", "=", 
    RowBox[{"1", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}]}]}], ";"}], "      ", 
  RowBox[{"(*", 
   RowBox[{"Simulation", " ", "time", " ", 
    RowBox[{"step", ":", 
     RowBox[{"1", " ", "\[Mu]s"}]}]}], "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Station", " ", "data", " ", "structure"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"initStation", "[", "id_", "]"}], ":=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<ID\>\"", "->", "id"}], ",", 
      RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"States", ":", "IDLE"}], ",", "BACKOFF", ",", 
        "TRANSMITTING"}], "*)"}], 
      RowBox[{"\"\<PacketQueue\>\"", "->", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"\"\<BackoffCounter\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<CollisionCount\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<TransmitTime\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<LatencyData\>\"", "->", 
       RowBox[{"{", "}"}]}]}], "|>"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Initialize", " ", "network"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"stations", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"i", "->", 
       RowBox[{"initStation", "[", "i", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"etherState", "=", "\"\<IDLE\>\""}], ";"}], "          ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Ether", " ", 
     RowBox[{"states", ":", "IDLE"}]}], ",", "BUSY", ",", "COLLISION"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"currentTransmissions", "=", 
    RowBox[{"{", "}"}]}], ";"}], "    ", 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"stationID", ",", "startTime", ",", "endTime"}], "}"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"collisionDetected", "=", "False"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eventLog", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"latencyStats", "=", 
    RowBox[{"{", "}"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Helper", " ", "functions"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"exponentialBackoff", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"2", "^", "k"}], "-", "1"}]}], "}"}], "]"}], "*", 
     "slotTime"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"attemptTransmission", "[", 
     RowBox[{"stationID_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"station", "=", 
        RowBox[{"stations", "[", "stationID", "]"}]}], "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"etherState", "==", "\"\<IDLE\>\""}], ",", 
        RowBox[{
         RowBox[{"etherState", "=", "\"\<BUSY\>\""}], ";", "\n", 
         RowBox[{"currentTransmissions", "=", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"stationID", ",", "t", ",", 
             RowBox[{"t", "+", 
              RowBox[{"packetSize", "/", "cRate"}]}]}], "}"}], "}"}]}], ";", 
         "\n", 
         RowBox[{
          RowBox[{"stations", "[", "stationID", "]"}], "=", 
          RowBox[{
           RowBox[{"station", "//", 
            RowBox[{"Append", "[", 
             RowBox[{"\"\<State\>\"", "->", "\"\<TRANSMITTING\>\""}], "]"}]}],
            "//", 
           RowBox[{"Append", "[", 
            RowBox[{"\"\<TransmitTime\>\"", "->", "t"}], "]"}]}]}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"Else", ":", 
          RowBox[{"carrier", " ", "detected"}]}], "*)"}], 
        RowBox[{
         RowBox[{"etherState", "=", "\"\<COLLISION\>\""}], ";", "\n", 
         RowBox[{"collisionDetected", "=", "True"}], ";", "\n", 
         RowBox[{
          RowBox[{"stations", "[", "stationID", "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"station", "//", 
             RowBox[{"Append", "[", 
              RowBox[{"\"\<State\>\"", "->", "\"\<BACKOFF\>\""}], "]"}]}], "//", 
            RowBox[{"Append", "[", 
             RowBox[{"\"\<CollisionCount\>\"", "->", 
              RowBox[{
               RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], "+", 
               "1"}]}], "]"}]}], "//", 
           RowBox[{"Append", "[", 
            RowBox[{"\"\<BackoffCounter\>\"", "->", 
             RowBox[{"exponentialBackoff", "[", 
              RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], 
              "]"}]}], "]"}]}]}]}]}], "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"processCollision", "[", "t_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "collidingStations", "}"}], ",", 
      RowBox[{
       RowBox[{"collidingStations", "=", 
        RowBox[{"Keys", "@", 
         RowBox[{"Select", "[", 
          RowBox[{"stations", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", "\"\<State\>\"", "]"}], "==", 
             "\"\<TRANSMITTING\>\""}], "&"}]}], "]"}]}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Reset", " ", "colliding", " ", "stations"}], "*)"}], 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"stations", "[", "id", "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", "id", "]"}], "//", 
             RowBox[{"Append", "[", 
              RowBox[{"\"\<State\>\"", "->", "\"\<BACKOFF\>\""}], "]"}]}], "//", 
            RowBox[{"Append", "[", 
             RowBox[{"\"\<CollisionCount\>\"", "->", 
              RowBox[{
               RowBox[{
                RowBox[{"stations", "[", "id", "]"}], "[", 
                "\"\<CollisionCount\>\"", "]"}], "+", "1"}]}], "]"}]}], "//", 
           
           RowBox[{"Append", "[", 
            RowBox[{"\"\<BackoffCounter\>\"", "->", 
             RowBox[{"exponentialBackoff", "[", 
              RowBox[{
               RowBox[{"stations", "[", "id", "]"}], "[", 
               "\"\<CollisionCount\>\"", "]"}], "]"}]}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"id", ",", "collidingStations"}], "}"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Log", " ", "collision", " ", "event"}], "*)"}], 
       RowBox[{"AppendTo", "[", 
        RowBox[{"eventLog", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<COLLISION\>\"", ",", "t", ",", "collidingStations"}], 
          "}"}]}], "]"}], ";", "\n", 
       RowBox[{"etherState", "=", "\"\<IDLE\>\""}], ";", "\n", 
       RowBox[{"currentTransmissions", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"collisionDetected", "=", "False"}]}]}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Main", " ", "simulation", " ", "loop"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"simulationTime", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{"simulationTime", "<", "simTime"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Generate", " ", "new", " ", "packets"}], "*)"}], 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], "<", "0.05"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", "id", "]"}], "[", "\"\<State\>\"", 
             "]"}], "==", "\"\<IDLE\>\""}]}], ",", 
          RowBox[{
           RowBox[{"stations", "[", "id", "]"}], "=", 
           RowBox[{
            RowBox[{"stations", "[", "id", "]"}], "//", 
            RowBox[{"Append", "[", 
             RowBox[{"\"\<PacketQueue\>\"", "->", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"stations", "[", "id", "]"}], "[", 
                 "\"\<PacketQueue\>\"", "]"}], ",", "simulationTime"}], 
               "]"}]}], "]"}]}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"id", ",", 
          RowBox[{"Keys", "@", "stations"}]}], "}"}]}], "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"Process", " ", "station", " ", "states"}], "*)"}], 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"station", "=", 
          RowBox[{"stations", "[", "id", "]"}]}], ";", "\n", 
         RowBox[{"Switch", "[", 
          RowBox[{
           RowBox[{"station", "[", "\"\<State\>\"", "]"}], ",", 
           "\"\<IDLE\>\"", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"station", "[", "\"\<PacketQueue\>\"", "]"}], "]"}], 
              ">", "0"}], ",", 
             RowBox[{"attemptTransmission", "[", 
              RowBox[{"id", ",", "simulationTime"}], "]"}]}], "]"}], ",", 
           "\"\<BACKOFF\>\"", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<BackoffCounter\>\"", "]"}], "<=", 
              "0"}], ",", 
             RowBox[{
              RowBox[{"stations", "[", "id", "]"}], "=", 
              RowBox[{"station", "//", 
               RowBox[{"Append", "[", 
                RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], "]"}]}]}], 
             ",", 
             RowBox[{
              RowBox[{"stations", "[", "id", "]"}], "=", 
              RowBox[{"station", "//", 
               RowBox[{"Append", "[", 
                RowBox[{"\"\<BackoffCounter\>\"", "->", 
                 RowBox[{
                  RowBox[{"station", "[", "\"\<BackoffCounter\>\"", "]"}], 
                  "-", "timeStep"}]}], "]"}]}]}]}], "]"}], ",", 
           "\"\<TRANSMITTING\>\"", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"simulationTime", ">=", 
              RowBox[{
               RowBox[{"station", "[", "\"\<TransmitTime\>\"", "]"}], "+", 
               RowBox[{"packetSize", "/", "cRate"}]}]}], ",", 
             RowBox[{"(*", 
              RowBox[{"Transmission", " ", "complete"}], "*)"}], 
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", "id", "]"}], "=", 
               RowBox[{
                RowBox[{"station", "//", 
                 RowBox[{"Append", "[", 
                  RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], "]"}]}], "//", 
                RowBox[{"Append", "[", 
                 RowBox[{"\"\<PacketQueue\>\"", "->", 
                  RowBox[{"Drop", "[", 
                   RowBox[{
                    RowBox[{"station", "[", "\"\<PacketQueue\>\"", "]"}], ",",
                     "1"}], "]"}]}], "]"}]}]}], ";", "\n", 
              RowBox[{"(*", 
               RowBox[{"Log", " ", "successful", " ", "transmission"}], 
               "*)"}], 
              RowBox[{"packetCreationTime", "=", 
               RowBox[{"First", "[", 
                RowBox[{"station", "[", "\"\<PacketQueue\>\"", "]"}], "]"}]}],
               ";", "\n", 
              RowBox[{"transmissionTime", "=", 
               RowBox[{"simulationTime", "-", "packetCreationTime"}]}], ";", 
              "\n", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"latencyStats", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<TRANSMISSION\>\"", ",", "id", ",", "transmissionTime"}],
                  "}"}]}], "]"}], ";", "\n", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Schedule", " ", "ACK"}], "-", 
                RowBox[{
                "modeled", " ", "as", " ", "new", " ", "packet", " ", "at", 
                 " ", "receiver"}]}], "*)"}], 
              RowBox[{"receiver", "=", 
               RowBox[{"RandomChoice", "[", 
                RowBox[{"DeleteCases", "[", 
                 RowBox[{
                  RowBox[{"Keys", "@", "stations"}], ",", "id"}], "]"}], 
                "]"}]}], ";", "\n", 
              RowBox[{
               RowBox[{"stations", "[", "receiver", "]"}], "=", 
               RowBox[{
                RowBox[{"stations", "[", "receiver", "]"}], "//", 
                RowBox[{"Append", "[", 
                 RowBox[{"\"\<PacketQueue\>\"", "->", 
                  RowBox[{"Append", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"stations", "[", "receiver", "]"}], "[", 
                    "\"\<PacketQueue\>\"", "]"}], ",", "simulationTime"}], 
                   "]"}]}], "]"}]}]}], ";", "\n", 
              RowBox[{"(*", 
               RowBox[{"Update", " ", "ether", " ", "state"}], "*)"}], 
              RowBox[{"etherState", "=", "\"\<IDLE\>\""}], ";", "\n", 
              RowBox[{"currentTransmissions", "=", 
               RowBox[{"{", "}"}]}]}]}], "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"id", ",", 
          RowBox[{"Keys", "@", "stations"}]}], "}"}]}], "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"Detect", " ", "collisions"}], "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "currentTransmissions", "]"}], ">", "1"}], 
        ",", 
        RowBox[{"processCollision", "[", "simulationTime", "]"}]}], "]"}], 
      ";", "\n", 
      RowBox[{"simulationTime", "+=", "timeStep"}], ";"}]}], "]"}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Analysis", " ", "and", " ", "Visualization"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Simulation Complete. Events: \>\"", ",", 
    RowBox[{"Length", "[", "eventLog", "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Successful Transmissions: \>\"", ",", 
     RowBox[{"Count", "[", 
      RowBox[{"latencyStats", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<TRANSMISSION\>\"", ",", "_", ",", "_"}], "}"}]}], 
      "]"}]}], "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "latency", " ", "distribution"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"transmissionTimes", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"latencyStats", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<TRANSMISSION\>\"", ",", "_", ",", "t_"}], "}"}], ":>", 
      "t"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "@", "transmissionTimes"}], ">", "0"}], ",", 
     RowBox[{"Histogram", "[", 
      RowBox[{"transmissionTimes", ",", "20", ",", 
       RowBox[{
       "PlotLabel", "->", 
        "\"\<Packet Transmission Latency Distribution\>\""}], ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Latency (s)\>\"", ",", "\"\<Count\>\""}], "}"}]}], ",", 
       
       RowBox[{"ChartStyle", "->", "\"\<Rainbow\>\""}]}], "]"}], ",", 
     RowBox[{
     "Print", "[", "\"\<No successful transmissions to plot\>\"", "]"}]}], 
    "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "channel", " ", "utilization"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"busyTime", "=", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{"eventLog", ",", 
      RowBox[{"{", 
       RowBox[{"_", ",", "_", ",", "_"}], "}"}]}], "]"}], "*", "timeStep"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"utilizationPlot", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"simulationTime", ",", "t"}], "]"}], "/", "t"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"busyTime", "/", "t"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0.01", ",", "simTime"}], "}"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Channel Utilization Over Time\>\""}], 
      ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Utilization\>\""}], "}"}]}], 
      ",", 
      RowBox[{"PlotStyle", "->", "Thick"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Full", "-", 
    RowBox[{"Duplex", " ", "Extension"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fullDuplexEfficiency", "[", 
     RowBox[{"length_", ",", "size_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"propTime", "=", 
         RowBox[{"length", "/", "propSpeed"}]}], ",", 
        RowBox[{"txTime", "=", 
         RowBox[{"size", "/", "cRate"}]}]}], "}"}], ",", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", "*", 
          RowBox[{"propTime", "/", "txTime"}]}]}], ")"}]}]}], "  ", 
     RowBox[{"(*", 
      RowBox[{"Stop", "-", "and", "-", 
       RowBox[{"wait", " ", "efficiency"}]}], "*)"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fullDuplexEfficiency", "[", 
        RowBox[{"d", ",", "p"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"p", "/", "cRate"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"p", "/", "cRate"}], ")"}], "+", 
          RowBox[{"2", "*", 
           RowBox[{"d", "/", "propSpeed"}]}], "+", "0.0001"}], ")"}]}]}], 
      "  ", 
      RowBox[{"(*", 
       RowBox[{"TCP", "-", "like"}], "*)"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0.1", ",", "100"}], "}"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Full-Duplex Link Efficiency\>\""}], ",", 
     
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Distance (m)\>\"", ",", "\"\<Efficiency\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Theoretical Maximum\>\"", ",", 
        "\"\<TCP-like Implementation\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.1"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "packetSize", ",", "\"\<Packet Size (bits)\>\""}], 
      "}"}], ",", 
     RowBox[{"64", "*", "8"}], ",", 
     RowBox[{"4096", "*", "8"}], ",", "100"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9592162093468313`*^9, 3.959216209348071*^9}},
 CellLabel->
  "In[1380]:=",ExpressionUUID->"6833db9b-be94-4d71-808c-ce7e9bf283fe"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Simulation Complete. Events: \"\>", "\[InvisibleSpace]", "0"}],
  
  SequenceForm["Simulation Complete. Events: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592162125537987`*^9},
 CellLabel->
  "During evaluation of \
In[1380]:=",ExpressionUUID->"193e63a3-57b5-4aa3-a051-914b3ae98ae3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Successful Transmissions: \"\>", "\[InvisibleSpace]", "24"}],
  SequenceForm["Successful Transmissions: ", 24],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216212555357*^9},
 CellLabel->
  "During evaluation of \
In[1380]:=",ExpressionUUID->"8771b55b-33e2-4085-bda4-cb2d95898b5e"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{EthernetSimulation`Private`p$$ = 4512, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[EthernetSimulation`Private`p$$], 12000, "Packet Size (bits)"}, 
      512, 32768, 100, ControlType -> Manipulator}}, Typeset`size$$ = {
    859., {202., 211.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {EthernetSimulation`Private`p$$ = 12000},
       "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         EthernetSimulation`Private`fullDuplexEfficiency[
         EthernetSimulation`Private`d, EthernetSimulation`Private`p$$], (
          EthernetSimulation`Private`p$$/EthernetSimulation`Private`cRate)/(
         EthernetSimulation`Private`p$$/EthernetSimulation`Private`cRate + 
         2 (EthernetSimulation`Private`d/
           EthernetSimulation`Private`propSpeed) + 0.0001)}, {
        EthernetSimulation`Private`d, 0.1, 100}, PlotLabel -> 
        "Full-Duplex Link Efficiency", 
        AxesLabel -> {"Distance (m)", "Efficiency"}, 
        PlotLegends -> {"Theoretical Maximum", "TCP-like Implementation"}, 
        PlotRange -> {0, 1.1}], 
      "Specifications" :> {{{
         EthernetSimulation`Private`p$$, 12000, "Packet Size (bits)"}, 512, 
         32768, 100}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{913., {257., 267.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.959216212584243*^9},
 CellLabel->
  "Out[1408]=",ExpressionUUID->"94e2ab91-68a1-445f-9b5b-cde38dbce03b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Clear", " ", "all", " ", "variables", " ", "and", " ", "set", " ", 
    "simulation", " ", "parameters"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetSystemOptions", "[", 
     RowBox[{"\"\<CatchMachineUnderflow\>\"", "->", "False"}], "]"}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", "===", "===", "===", "===", "===", "===", "==="}], "*)"}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"SIMULATION", " ", "CONFIGURATION"}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", "===", "===", "===", "===", "===", "===", "==="}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"numStations", "=", "5"}], ";"}], "              ", 
   RowBox[{"(*", 
    RowBox[{
    "Number", " ", "of", " ", "stations", " ", "in", " ", "the", " ", 
     "network"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"packetDuration", "=", "10"}], ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{
    "Time", " ", "slots", " ", "to", " ", "transmit", " ", "a", " ", "data", 
     " ", "packet"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"ackDuration", "=", "2"}], ";"}], "               ", 
   RowBox[{"(*", 
    RowBox[{
    "Time", " ", "slots", " ", "to", " ", "transmit", " ", "an", " ", "ACK"}],
     "*)"}], "\n", 
   RowBox[{
    RowBox[{"processingDelay", "=", "1"}], ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{
    "Processing", " ", "delay", " ", "before", " ", "sending", " ", "ACK"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"bitRate", "=", 
     RowBox[{"3", "*", 
      RowBox[{"10", "^", "6"}]}]}], ";"}], "              ", 
   RowBox[{"(*", 
    RowBox[{"Bits", " ", "per", " ", "second"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"slotTime", "=", 
     RowBox[{"16", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}]}], ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{"Slot", " ", "time", " ", "in", " ", "seconds"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"simulationTime", "=", "1000"}], ";"}], "         ", 
   RowBox[{"(*", 
    RowBox[{"Total", " ", "simulation", " ", "slots"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"arrivalRate", "=", "0.02"}], ";"}], "            ", 
   RowBox[{"(*", 
    RowBox[{
    "Packet", " ", "arrival", " ", "probability", " ", "per", " ", "station", 
     " ", "per", " ", "slot"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"maxBackoffExponent", "=", "10"}], ";"}], "       ", 
   RowBox[{"(*", 
    RowBox[{"Maximum", " ", "backoff", " ", "exponent", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "^", "10"}], "=", "1024"}], ")"}]}], "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{"(*", 
    RowBox[{"INITIALIZATION", " ", "SECTION"}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"initializeSimulation", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"State", " ", "variables"}], "*)"}], 
       RowBox[{
        RowBox[{"etherState", "=", "\"\<IDLE\>\""}], ";", 
        RowBox[{"(*", 
         RowBox[{"\"\<IDLE\>\"", ",", "\"\<BUSY\>\"", ",", 
          RowBox[{"or", " ", "\"\<COLLISION\>\""}]}], "*)"}], 
        RowBox[{"currentTransmittingStation", "=", 
         RowBox[{"-", "1"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"Station", " ", "currently", " ", "transmitting"}], "*)"}], 
        RowBox[{"busyEndTime", "=", 
         RowBox[{"-", "1"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Time", " ", "when", " ", "current", " ", "transmission", " ", 
          "ends"}], "*)"}], 
        RowBox[{"(*", 
         RowBox[{"Station", "-", 
          RowBox[{"specific", " ", "arrays"}]}], "*)"}], 
        RowBox[{"stationState", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"\"\<IDLE\>\"", ",", 
           RowBox[{"{", "numStations", "}"}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "\"\<IDLE\>\"", ",", "\"\<TRANSMITTING\>\"", ",", 
          "\"\<BACKOFF\>\""}], "*)"}], 
        RowBox[{"stationQueue", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "numStations", "}"}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"Queued", " ", "packets", " ", 
          RowBox[{"{", 
           RowBox[{"genTime", ",", "dest", ",", "type"}], "}"}]}], "*)"}], 
        RowBox[{"backoffCounter", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "numStations", "}"}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"Current", " ", "backoff", " ", "counter"}], "*)"}], 
        RowBox[{"collisionCount", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "numStations", "}"}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Collision", " ", "count", " ", "for", " ", "current", " ", 
          "packet"}], "*)"}], 
        RowBox[{"nextArrival", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "numStations", "}"}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"Next", " ", "packet", " ", "arrival", " ", "time"}], "*)"}], 
        RowBox[{"(*", 
         RowBox[{"Statistics", " ", "tracking"}], "*)"}], 
        RowBox[{"stats", "=", 
         RowBox[{"Association", "[", 
          RowBox[{
           RowBox[{"\"\<successCount\>\"", "->", "0"}], ",", 
           RowBox[{"\"\<collisionEvents\>\"", "->", "0"}], ",", 
           RowBox[{"\"\<totalLatency\>\"", "->", "0"}], ",", 
           RowBox[{"\"\<ackLatency\>\"", "->", "0"}], ",", 
           RowBox[{"\"\<timeline\>\"", "->", 
            RowBox[{"{", "}"}]}]}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Initialize", " ", "packet", " ", "arrivals"}], "*)"}], 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"nextArrival", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "10"}], "}"}], "]"}]}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}], ";"}]}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"NETWORK", " ", "EVENT", " ", "HELPERS"}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"generatePacket", "[", "src_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "dest", "}"}], ",", 
       RowBox[{
        RowBox[{"dest", "=", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"Range", "[", "numStations", "]"}], ",", "src"}], "]"}], 
          "]"}]}], ";", "\n", 
        RowBox[{"{", 
         RowBox[{
         "src", ",", "dest", ",", "\"\<DATA\>\"", ",", "CurrentTime"}], 
         "}"}]}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"scheduleACK", "[", 
      RowBox[{"dest_", ",", "src_", ",", "genTime_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"stationQueue", "[", 
           RowBox[{"[", "dest", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"dest", ",", "src", ",", "\"\<ACK\>\"", ",", "genTime"}], 
           "}"}]}], "]"}], ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"startTransmission", "[", "station_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"etherState", "==", "\"\<IDLE\>\""}], ",", 
         RowBox[{
          RowBox[{"etherState", "=", "\"\<BUSY\>\""}], ";", "\n", 
          RowBox[{"currentTransmittingStation", "=", "station"}], ";", "\n", 
          RowBox[{"busyEndTime", "=", 
           RowBox[{"CurrentTime", "+", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"stationQueue", "[", 
                RowBox[{"[", 
                 RowBox[{"station", ",", "1", ",", "3"}], "]"}], "]"}], "==", 
               "\"\<DATA\>\""}], ",", "packetDuration", ",", "ackDuration"}], 
             "]"}]}]}], ";", "\n", 
          RowBox[{
           RowBox[{"stationState", "[", 
            RowBox[{"[", "station", "]"}], "]"}], "=", 
           "\"\<TRANSMITTING\>\""}], ";", "\n", 
          RowBox[{
           RowBox[{"stats", "[", "\"\<timeline\>\"", "]"}], "=", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"stats", "[", "\"\<timeline\>\"", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "CurrentTime", ",", "station", ",", "\"\<BEGIN_TRANSMIT\>\"", 
               ",", 
               RowBox[{"stationQueue", "[", 
                RowBox[{"[", 
                 RowBox[{"station", ",", "1"}], "]"}], "]"}]}], "}"}]}], 
            "]"}]}], ";", "\n", "True"}], ",", "False"}], "]"}]}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"handleCollision", "[", "stations_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "k", "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"stats", "[", "\"\<collisionEvents\>\"", "]"}], "+=", 
         RowBox[{"Length", "[", "stations", "]"}]}], ";", "\n", 
        RowBox[{"etherState", "=", "\"\<COLLISION\>\""}], ";", "\n", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"collisionCount", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"collisionCount", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ",", 
              "maxBackoffExponent"}], "]"}]}], ";", "\n", 
           RowBox[{"k", "=", 
            RowBox[{"collisionCount", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", 
           RowBox[{
            RowBox[{"backoffCounter", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"2", "^", "k"}], "-", "1"}]}], "}"}], "]"}]}], ";", 
           "\n", 
           RowBox[{
            RowBox[{"stationState", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", "\"\<BACKOFF\>\""}], ";", 
           "\n", 
           RowBox[{
            RowBox[{"stats", "[", "\"\<timeline\>\"", "]"}], "=", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"stats", "[", "\"\<timeline\>\"", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"CurrentTime", ",", "i", ",", "\"\<COLLISION\>\"", ",", 
                RowBox[{"backoffCounter", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "stations"}], "}"}]}], "]"}], ";"}]}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"finalizeTransmission", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "packet", ",", "src", ",", "dest", ",", "type", ",", "genTime"}], 
        "}"}], ",", 
       RowBox[{
        RowBox[{"packet", "=", 
         RowBox[{"stationQueue", "[", 
          RowBox[{"[", 
           RowBox[{"currentTransmittingStation", ",", "1"}], "]"}], "]"}]}], 
        ";", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"src", ",", "dest", ",", "type", ",", "genTime"}], "}"}], 
         "=", "packet"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Process", " ", "successful", " ", "transmission"}], "*)"}], 
        
        RowBox[{
         RowBox[{"stats", "[", "\"\<successCount\>\"", "]"}], "++"}], ";", 
        "\n", 
        RowBox[{
         RowBox[{"stationQueue", "[", 
          RowBox[{"[", "currentTransmittingStation", "]"}], "]"}], "=", 
         RowBox[{"Rest", "[", 
          RowBox[{"stationQueue", "[", 
           RowBox[{"[", "currentTransmittingStation", "]"}], "]"}], "]"}]}], 
        ";", "\n", 
        RowBox[{
         RowBox[{"collisionCount", "[", 
          RowBox[{"[", "currentTransmittingStation", "]"}], "]"}], "=", "0"}],
         ";", "\n", 
        RowBox[{
         RowBox[{"stats", "[", "\"\<timeline\>\"", "]"}], "=", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"stats", "[", "\"\<timeline\>\"", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "CurrentTime", ",", "currentTransmittingStation", ",", 
             "\"\<SUCCESS\>\"", ",", "packet"}], "}"}]}], "]"}]}], ";", "\n", 
        
        RowBox[{"(*", 
         RowBox[{
         "Schedule", " ", "ACK", " ", "for", " ", "DATA", " ", "packets"}], 
         "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"type", "==", "\"\<DATA\>\""}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"stats", "[", "\"\<totalLatency\>\"", "]"}], "+=", 
            RowBox[{"(", 
             RowBox[{"CurrentTime", "-", "genTime"}], ")"}]}], ";", "\n", 
           RowBox[{"ScheduleTask", "[", 
            RowBox[{
             RowBox[{"scheduleACK", "[", 
              RowBox[{"dest", ",", "src", ",", "genTime"}], "]"}], ",", 
             RowBox[{"CurrentTime", "+", "processingDelay"}]}], "]"}], 
           ";"}]}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", " ", "ACK"}], ",", 
          RowBox[{"record", " ", "RTT"}]}], "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"type", "==", "\"\<ACK\>\""}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"stats", "[", "\"\<ackLatency\>\"", "]"}], "+=", 
            RowBox[{"(", 
             RowBox[{"CurrentTime", "-", "genTime"}], ")"}]}], ";"}]}], "]"}],
         ";", "\n", 
        RowBox[{
         RowBox[{"stationState", "[", 
          RowBox[{"[", "currentTransmittingStation", "]"}], "]"}], "=", 
         "\"\<IDLE\>\""}], ";", "\n", 
        RowBox[{"currentTransmittingStation", "=", 
         RowBox[{"-", "1"}]}], ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", "===", "===", "===", "===", "==="}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"MAIN", " ", "SIMULATION", " ", "LOOP"}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", "===", "===", "===", "===", "==="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"simulateHalfDuplex", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"initializeSimulation", "[", "]"}], ";", "\n", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"CurrentTime", "=", "0"}], ",", 
          RowBox[{"CurrentTime", "<", "simulationTime"}], ",", 
          RowBox[{"CurrentTime", "++"}], ",", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Step", " ", "1"}], ":", 
            RowBox[{"Update", " ", "ether", " ", "state"}]}], "*)"}], 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"etherState", "==", "\"\<BUSY\>\""}], "&&", 
              RowBox[{"CurrentTime", "==", "busyEndTime"}]}], ",", 
             RowBox[{
              RowBox[{"finalizeTransmission", "[", "]"}], ";", "\n", 
              RowBox[{"etherState", "=", "\"\<IDLE\>\""}], ";"}]}], "]"}], 
           ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"etherState", "==", "\"\<COLLISION\>\""}], ",", 
             RowBox[{
              RowBox[{"etherState", "=", "\"\<IDLE\>\""}], ";"}]}], "]"}], 
           ";", "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Step", " ", "2"}], ":", 
             RowBox[{"Generate", " ", "new", " ", "packets"}]}], "*)"}], 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"CurrentTime", ">=", 
                 RowBox[{"nextArrival", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "&&", 
                RowBox[{
                 RowBox[{"RandomReal", "[", "]"}], "<", "arrivalRate"}]}], 
               ",", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{"stationQueue", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"generatePacket", "[", "i", "]"}]}], "]"}], ";", 
                "\n", 
                RowBox[{
                 RowBox[{"nextArrival", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "=", 
                 RowBox[{"CurrentTime", "+", 
                  RowBox[{"RandomInteger", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "50"}], "}"}], "]"}]}]}], ";", "\n", 
                RowBox[{
                 RowBox[{"stats", "[", "\"\<timeline\>\"", "]"}], "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{
                   RowBox[{"stats", "[", "\"\<timeline\>\"", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "CurrentTime", ",", "i", ",", "\"\<PACKET_ARRIVAL\>\"", 
                    ",", 
                    RowBox[{"Last", "[", 
                    RowBox[{"stationQueue", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
                 ";"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Step", " ", "3"}], ":", 
             RowBox[{
             "Attempt", " ", "transmissions", " ", "if", " ", "ether", " ", 
              "is", " ", "idle"}]}], "*)"}], 
           RowBox[{"attemptingStations", "=", 
            RowBox[{"{", "}"}]}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"etherState", "==", "\"\<IDLE\>\""}], ",", 
             RowBox[{
              RowBox[{"Do", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"stationState", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "==", "\"\<IDLE\>\""}], "&&", 
                   RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"stationQueue", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ">", "0"}], "&&", 
                   RowBox[{
                    RowBox[{"backoffCounter", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "==", "0"}]}], ",", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"attemptingStations", ",", "i"}], "]"}], ";"}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}], ";", "\n", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "attemptingStations", "]"}], ">", 
                 "0"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", "attemptingStations", "]"}], "==", 
                   "1"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"startTransmission", "[", 
                    RowBox[{"First", "[", "attemptingStations", "]"}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"stats", "[", "\"\<timeline\>\"", "]"}], "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"stats", "[", "\"\<timeline\>\"", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"CurrentTime", ",", 
                    RowBox[{"First", "[", "attemptingStations", "]"}], ",", 
                    "\"\<START_TRANSMIT\>\"", ",", 
                    RowBox[{"stationQueue", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"First", "[", "attemptingStations", "]"}], ",", 
                    "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}]}], "]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{
                   "handleCollision", "[", "attemptingStations", "]"}], 
                   ";"}]}], "]"}]}], "]"}]}]}], "]"}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Step", " ", "4"}], ":", 
             RowBox[{"Update", " ", "backoff", " ", "counters"}]}], "*)"}], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"etherState", "==", "\"\<IDLE\>\""}], ",", 
             RowBox[{
              RowBox[{"Do", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"stationState", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "==", "\"\<BACKOFF\>\""}],
                   ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"backoffCounter", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"backoffCounter", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", "1"}]}], "]"}]}], 
                   ";", "\n", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"backoffCounter", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"stationState", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", "\"\<IDLE\>\""}], 
                    ";"}]}], "]"}], ";"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}], ";"}]}], 
            "]"}], ";"}]}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Return", " ", "simulation", " ", "results"}], "*)"}], 
        "stats"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", "===", "===", "===", "===", "===", "===", "===", "=="}], 
    "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"FULL", "-", 
     RowBox[{"DUPLEX", " ", "IMPLEMENTATION"}]}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", "===", "===", "===", "===", "===", "===", "===", "=="}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"simulateFullDuplex", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "stats", "}"}], ",", 
       RowBox[{
        RowBox[{"stats", "=", 
         RowBox[{"simulateHalfDuplex", "[", "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Modify", " ", "stats", " ", "for", " ", "full"}], "-", 
           RowBox[{"duplex", ":", 
            RowBox[{"no", " ", "collisions"}]}]}], ",", 
          RowBox[{"double", " ", "bandwidth"}]}], "*)"}], 
        RowBox[{
         RowBox[{"stats", "[", "\"\<collisionEvents\>\"", "]"}], "=", "0"}], 
        ";", "\n", 
        RowBox[{
         RowBox[{"stats", "[", "\"\<successCount\>\"", "]"}], "=", 
         RowBox[{"2", "*", 
          RowBox[{"stats", "[", "\"\<successCount\>\"", "]"}]}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"Approximate", " ", "effect"}], "*)"}], "stats"}]}], "]"}]}],
     ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", "===", "===", "===", "===", "===", "===", "=="}], "*)"}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"VISUALIZATION", " ", "FUNCTIONS"}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", "===", "===", "===", "===", "===", "===", "=="}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"visualizeTimeline", "[", 
      RowBox[{"timeline_", ",", "maxTime_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "events", "}"}], ",", 
       RowBox[{
        RowBox[{"events", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<PACKET_ARRIVAL\>\"", ",", "Green"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<START_TRANSMIT\>\"", ",", "Blue"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<COLLISION\>\"", ",", "Red"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<SUCCESS\>\"", ",", 
             RowBox[{"Darker", "[", "Green", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<BEGIN_TRANSMIT\>\"", ",", "Orange"}], "}"}]}], 
          "}"}]}], ";", "\n", 
        RowBox[{"TimelinePlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Callout", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"event", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], ",", 
                   RowBox[{"event", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], ",", 
                 RowBox[{"Row", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<Station \>\"", ",", "station"}], "}"}], ",", 
                   "\"\< \>\""}], "]"}]}], "]"}], ",", 
               RowBox[{"event", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "/.", " ", 
             RowBox[{"Thread", "[", 
              RowBox[{"Rule", "@@@", "events"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"event", ",", 
              RowBox[{"Select", "[", 
               RowBox[{"timeline", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "<=", "maxTime"}], "&"}]}],
                "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"PlotRange", "->", 
           RowBox[{"{", 
            RowBox[{"0", ",", "maxTime"}], "}"}]}], ",", 
          RowBox[{"AxesLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Time Slot\>\"", ",", "\"\<Event\>\""}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Network Event Timeline\>\"", ",", "16", ",", "Bold"}], 
            "]"}]}]}], "]"}]}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"plotLatencyHistogram", "[", "stats_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "latencies", "}"}], ",", 
       RowBox[{
        RowBox[{"latencies", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"stats", "[", "\"\<timeline\>\"", "]"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"_", ",", "_", ",", "\"\<SUCCESS\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"_", ",", "_", ",", "\"\<ACK\>\"", ",", "genTime_"}], 
               "}"}]}], "}"}], ":>", 
            RowBox[{"(", 
             RowBox[{"CurrentTime", "-", "genTime"}], ")"}]}]}], "]"}]}], ";",
         "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "latencies", "]"}], ">", "0"}], ",", 
          RowBox[{"Histogram", "[", 
           RowBox[{"latencies", ",", 
            RowBox[{"AxesLabel", "->", 
             RowBox[{"{", 
              RowBox[{"\"\<RTT (Slots)\>\"", ",", "\"\<Frequency\>\""}], 
              "}"}]}], ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Round-Trip Time Distribution\>\"", ",", "16", ",", 
               "Bold"}], "]"}]}], ",", 
            RowBox[{"ChartStyle", "->", "LightBlue"}]}], "]"}], ",", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"Text", "[", "\"\<No ACK packets recorded\>\"", "]"}], 
            ",", 
            RowBox[{"ImageSize", "->", "Medium"}]}], "]"}]}], "]"}]}]}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", "===", "===", "===", "===", "==="}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"PERFORMANCE", " ", "METRICS"}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", "===", "===", "===", "===", "==="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"calculateEfficiency", "[", "stats_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"stats", "[", "\"\<successCount\>\"", "]"}], "*", 
         RowBox[{"packetDuration", "/", "simulationTime"}]}], "]"}]}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"printStats", "[", 
      RowBox[{"stats_", ",", "title_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"Print", "[", "title", "]"}], ";", "\n", 
        RowBox[{
        "Print", "[", "\"\<==========================================\>\"", 
         "]"}], ";", "\n", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Successful Packets: \>\"", ",", 
          RowBox[{"stats", "[", "\"\<successCount\>\"", "]"}]}], "]"}], ";", 
        "\n", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Collision Events: \>\"", ",", 
          RowBox[{"stats", "[", "\"\<collisionEvents\>\"", "]"}]}], "]"}], 
        ";", "\n", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Channel Efficiency: \>\"", ",", 
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{"100", "*", 
             RowBox[{"calculateEfficiency", "[", "stats", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", "\"\<%\>\""}], 
         "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"stats", "[", "\"\<successCount\>\"", "]"}], ">", "0"}], 
          ",", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Avg Data Latency: \>\"", ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"stats", "[", "\"\<totalLatency\>\"", "]"}], "/", 
               RowBox[{"stats", "[", "\"\<successCount\>\"", "]"}]}], "]"}], 
             ",", "\"\< slots\>\""}], "]"}], ";", "\n", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Avg ACK RTT: \>\"", ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"stats", "[", "\"\<ackLatency\>\"", "]"}], "/", 
               RowBox[{"stats", "[", "\"\<successCount\>\"", "]"}]}], "]"}], 
             ",", "\"\< slots\>\""}], "]"}], ";"}]}], "]"}], ";", "\n", 
        RowBox[{"Print", "[", "]"}], ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", "===", "===", "===", "===", "==="}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"MAIN", " ", "EXECUTION", " ", "FLOW"}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", "===", "===", "===", "===", "==="}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Run", " ", "half"}], "-", 
     RowBox[{"duplex", " ", "simulation"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"halfDuplexStats", "=", 
     RowBox[{"simulateHalfDuplex", "[", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"printStats", "[", 
     RowBox[{
     "halfDuplexStats", ",", 
      "\"\<Half-Duplex Ethernet (CSMA/CD) Results\>\""}], "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Run", " ", "full"}], "-", 
     RowBox[{"duplex", " ", "simulation"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"fullDuplexStats", "=", 
     RowBox[{"simulateFullDuplex", "[", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"printStats", "[", 
     RowBox[{
     "fullDuplexStats", ",", "\"\<Full-Duplex Point-to-Point Results\>\""}], 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Generate", " ", "visualizations"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"visualizeTimeline", "[", 
     RowBox[{
      RowBox[{"halfDuplexStats", "[", "\"\<timeline\>\"", "]"}], ",", 
      RowBox[{"Min", "[", 
       RowBox[{"100", ",", "simulationTime"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"plotLatencyHistogram", "[", "halfDuplexStats", "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.959216234060396*^9, 3.959216234061593*^9}},
 CellLabel->
  "In[1521]:=",ExpressionUUID->"8592322d-40de-404a-abbc-16ea1aabff86"],

Cell[BoxData[
 TemplateBox[{
  "SetSystemOptions", "sysname", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"CatchMachineUnderflow\\\\\\\"\\\"}]\\) is \
not a known SystemOption.\"", 2, 1522, 318, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9592162342119412`*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"bc55b2fe-d66c-45f6-b390-1d662d8e4c07"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Half-Duplex Ethernet (CSMA/CD) Results\"\>"], "Print",
 CellChangeTimes->{3.959216234231303*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"91aae255-5c6f-4864-bff8-9a28799d3ec1"],

Cell[BoxData["\<\"==========================================\"\>"], "Print",
 CellChangeTimes->{3.9592162342317877`*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"9aabaf88-be15-493d-b99f-c33c0ca2b563"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Successful Packets: \"\>", "\[InvisibleSpace]", "113"}],
  SequenceForm["Successful Packets: ", 113],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592162342323303`*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"0f2340b8-2ac2-4f27-b2aa-daa0e625c0a9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collision Events: \"\>", "\[InvisibleSpace]", "162"}],
  SequenceForm["Collision Events: ", 162],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216234232689*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"bd516965-438f-4692-8094-deb021edb3b0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Channel Efficiency: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"113.00\"\>",
      ShowStringCharacters->False],
     112.99999999999999`,
     AutoDelete->True],
    NumberForm[#, {4, 2}]& ], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["Channel Efficiency: ", 
   NumberForm[112.99999999999999`, {4, 2}], "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592162342330627`*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"41c43923-e339-4742-848c-02582d4bb8f8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Avg Data Latency: \"\>", "\[InvisibleSpace]", 
   "47.27433628318584`", "\[InvisibleSpace]", "\<\" slots\"\>"}],
  SequenceForm["Avg Data Latency: ", 47.27433628318584, " slots"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592162342334337`*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"24ebf814-f21a-4f50-87d1-b8e921e6b863"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Avg ACK RTT: \"\>", "\[InvisibleSpace]", "67.54867256637168`", 
   "\[InvisibleSpace]", "\<\" slots\"\>"}],
  SequenceForm["Avg ACK RTT: ", 67.54867256637168, " slots"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216234233797*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"bf707c5a-9885-4133-b2a9-34948e62a99c"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.959216234234125*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"aeba8be9-ec8d-4e68-a035-05615498cabd"],

Cell[BoxData["\<\"Full-Duplex Point-to-Point Results\"\>"], "Print",
 CellChangeTimes->{3.959216234248851*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"2d70ded7-6bf5-4d9a-854e-98a60e8fd784"],

Cell[BoxData["\<\"==========================================\"\>"], "Print",
 CellChangeTimes->{3.959216234249261*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"90ac055f-783c-46db-9f09-3a7211e3a389"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Successful Packets: \"\>", "\[InvisibleSpace]", "216"}],
  SequenceForm["Successful Packets: ", 216],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216234249618*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"b4ef4c6e-e3da-4efd-a561-48a845d36d50"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collision Events: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Collision Events: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216234249982*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"4f195571-caa8-432f-9573-e7d7bbd71e74"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Channel Efficiency: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"216.00\"\>",
      ShowStringCharacters->False],
     216.,
     AutoDelete->True],
    NumberForm[#, {4, 2}]& ], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["Channel Efficiency: ", 
   NumberForm[216., {4, 2}], "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216234250351*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"4ebc8739-b235-4c19-a6a1-d16904e45a97"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Avg Data Latency: \"\>", "\[InvisibleSpace]", 
   "11.731481481481481`", "\[InvisibleSpace]", "\<\" slots\"\>"}],
  SequenceForm["Avg Data Latency: ", 11.731481481481481`, " slots"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216234250708*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"ef5fae72-c64a-4d3d-a6dd-6c0765eff026"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Avg ACK RTT: \"\>", "\[InvisibleSpace]", "17.26851851851852`", 
   "\[InvisibleSpace]", "\<\" slots\"\>"}],
  SequenceForm["Avg ACK RTT: ", 17.26851851851852, " slots"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216234251041*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"a9ee59f1-d8f4-4b5a-85ad-53a68df05bb7"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.95921623425136*^9},
 CellLabel->
  "During evaluation of \
In[1521]:=",ExpressionUUID->"32e47cf9-34d6-442a-a646-a48d6d10fe81"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetSystemOptions", "[", 
    RowBox[{"\"\<CatchMachineUnderflow\>\"", "->", "False"}], "]"}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Simulation", " ", "parameters"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bitRate", "=", 
    RowBox[{"3", "*", 
     RowBox[{"10", "^", "6"}]}]}], ";"}], "          ", 
  RowBox[{"(*", 
   RowBox[{"3", " ", "Mbps"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"slotTime", "=", 
    RowBox[{"16", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}]}]}], ";"}], "       ", 
  RowBox[{"(*", 
   RowBox[{"16", " ", "\[Mu]s"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"propDelay", "=", 
    RowBox[{"slotTime", "/", "2"}]}], ";"}], "    ", 
  RowBox[{"(*", 
   RowBox[{"Propagation", " ", "delay"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cableLength", "=", "1000"}], ";"}], "        ", 
  RowBox[{"(*", "Meters", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numStations", "=", "5"}], ";"}], "           ", 
  RowBox[{"(*", 
   RowBox[{"Number", " ", "of", " ", "stations"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"simulationTime", "=", "0.1"}], ";"}], "      ", 
  RowBox[{"(*", "Seconds", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"packetSize", "=", 
    RowBox[{"1500", "*", "8"}]}], ";"}], "       ", 
  RowBox[{"(*", "Bits", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ackSize", "=", "64"}], ";"}], "              ", 
  RowBox[{"(*", 
   RowBox[{"ACK", " ", "size", " ", "in", " ", "bits"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dataGenRate", "=", "0.01"}], ";"}], "        ", 
  RowBox[{"(*", 
   RowBox[{
   "Packet", " ", "generation", " ", "probability", " ", "per", " ", 
    "station", " ", "per", " ", "slot"}], "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Station", " ", "data", " ", "structure"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"createStation", "[", "id_", "]"}], ":=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<ID\>\"", "->", "id"}], ",", 
      RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
      RowBox[{"(*", 
       RowBox[{"IDLE", ",", "BACKOFF", ",", "TRANSMITTING"}], "*)"}], 
      RowBox[{"\"\<Queue\>\"", "->", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"\"\<BackoffCount\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<CollisionCount\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<CurrentPacket\>\"", "->", "None"}], ",", 
      RowBox[{"\"\<SentPackets\>\"", "->", 
       RowBox[{"<|", "|>"}]}], ",", 
      RowBox[{"(*", 
       RowBox[{"PacketID", "->", 
        RowBox[{"{", 
         RowBox[{"sendTime", ",", "dest", ",", "retryCount"}], "}"}]}], 
       "*)"}], 
      RowBox[{"\"\<AckQueue\>\"", "->", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"\"\<RTTs\>\"", "->", 
       RowBox[{"{", "}"}]}]}], "|>"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Initialize", " ", "simulation"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"stations", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"i", "->", 
       RowBox[{"createStation", "[", "i", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"channel", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
     RowBox[{"(*", 
      RowBox[{"IDLE", ",", "BUSY", ",", "JAM"}], "*)"}], 
     RowBox[{"\"\<CurrentPacket\>\"", "->", "None"}], ",", 
     RowBox[{"\"\<StartTime\>\"", "->", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"\"\<EndTime\>\"", "->", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"\"\<VulnerableEnd\>\"", "->", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"\"\<SourceID\>\"", "->", 
      RowBox[{"-", "1"}]}]}], "|>"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"packetCounter", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eventLog", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"currentTime", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jamEndTime", "=", 
    RowBox[{"-", "1"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Helper", " ", "functions"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"generatePacket", "[", 
     RowBox[{"src_", ",", "dest_"}], "]"}], ":=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<ID\>\"", "->", 
       RowBox[{"++", "packetCounter"}]}], ",", 
      RowBox[{"\"\<Source\>\"", "->", "src"}], ",", 
      RowBox[{"\"\<Destination\>\"", "->", "dest"}], ",", 
      RowBox[{"\"\<Size\>\"", "->", "packetSize"}], ",", 
      RowBox[{"\"\<Type\>\"", "->", "\"\<DATA\>\""}], ",", 
      RowBox[{"\"\<SendTime\>\"", "->", "currentTime"}], ",", 
      RowBox[{"\"\<AckReceived\>\"", "->", "False"}]}], "|>"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"generateACK", "[", "dataPacket_", "]"}], ":=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<ID\>\"", "->", 
       RowBox[{"++", "packetCounter"}]}], ",", 
      RowBox[{"\"\<Source\>\"", "->", 
       RowBox[{"dataPacket", "[", "\"\<Destination\>\"", "]"}]}], ",", 
      RowBox[{"\"\<Destination\>\"", "->", 
       RowBox[{"dataPacket", "[", "\"\<Source\>\"", "]"}]}], ",", 
      RowBox[{"\"\<Size\>\"", "->", "ackSize"}], ",", 
      RowBox[{"\"\<Type\>\"", "->", "\"\<ACK\>\""}], ",", 
      RowBox[{"\"\<OriginalPacketID\>\"", "->", 
       RowBox[{"dataPacket", "[", "\"\<ID\>\"", "]"}]}], ",", 
      RowBox[{"\"\<SendTime\>\"", "->", "currentTime"}]}], "|>"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"startTransmission", "[", "stationID_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"station", ",", "packet"}], "}"}], ",", 
      RowBox[{
       RowBox[{"station", "=", 
        RowBox[{"stations", "[", "stationID", "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=!=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{
          RowBox[{"packet", "=", 
           RowBox[{"First", "[", 
            RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], ";", 
          "\n", 
          RowBox[{
           RowBox[{"stations", "[", 
            RowBox[{"stationID", ",", "\"\<CurrentPacket\>\""}], "]"}], "=", 
           "packet"}], ";", "\n", 
          RowBox[{
           RowBox[{"stations", "[", 
            RowBox[{"stationID", ",", "\"\<Queue\>\""}], "]"}], "=", 
           RowBox[{"Rest", "[", 
            RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], ";", 
          "\n", 
          RowBox[{
           RowBox[{"stations", "[", 
            RowBox[{"stationID", ",", "\"\<State\>\""}], "]"}], "=", 
           "\"\<TRANSMITTING\>\""}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{
           "Add", " ", "to", " ", "sent", " ", "packets", " ", "for", " ", 
            "RTT", " ", "tracking"}], "*)"}], 
          RowBox[{
           RowBox[{"stations", "[", 
            RowBox[{"stationID", ",", "\"\<SentPackets\>\"", ",", 
             RowBox[{"packet", "[", "\"\<ID\>\"", "]"}]}], "]"}], "=", 
           RowBox[{"{", 
            RowBox[{"currentTime", ",", 
             RowBox[{"packet", "[", "\"\<Destination\>\"", "]"}], ",", "0"}], 
            "  ", 
            RowBox[{"(*", 
             RowBox[{"retry", " ", "count"}], "*)"}], "}"}]}], ";", "\n", 
          RowBox[{
           RowBox[{"channel", "[", "\"\<State\>\"", "]"}], "=", 
           "\"\<BUSY\>\""}], ";", "\n", 
          RowBox[{
           RowBox[{"channel", "[", "\"\<CurrentPacket\>\"", "]"}], "=", 
           "packet"}], ";", "\n", 
          RowBox[{
           RowBox[{"channel", "[", "\"\<SourceID\>\"", "]"}], "=", 
           "stationID"}], ";", "\n", 
          RowBox[{
           RowBox[{"channel", "[", "\"\<StartTime\>\"", "]"}], "=", 
           "currentTime"}], ";", "\n", 
          RowBox[{
           RowBox[{"channel", "[", "\"\<EndTime\>\"", "]"}], "=", 
           RowBox[{"currentTime", "+", 
            RowBox[{
             RowBox[{"packet", "[", "\"\<Size\>\"", "]"}], "/", 
             "bitRate"}]}]}], ";", "\n", 
          RowBox[{
           RowBox[{"channel", "[", "\"\<VulnerableEnd\>\"", "]"}], "=", 
           RowBox[{"currentTime", "+", "slotTime"}]}], ";", "\n", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"eventLog", ",", 
            RowBox[{"{", 
             RowBox[{
             "currentTime", ",", "\"\<START_TX\>\"", ",", "stationID", ",", 
              RowBox[{"packet", "[", "\"\<ID\>\"", "]"}]}], "}"}]}], "]"}], 
          ";"}]}], "]"}]}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"backoff", "[", "stationID_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"station", ",", "k", ",", "backoffSlots"}], "}"}], ",", 
      RowBox[{
       RowBox[{"station", "=", 
        RowBox[{"stations", "[", "stationID", "]"}]}], ";", "\n", 
       RowBox[{
        RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], "++"}], ";", 
       "\n", 
       RowBox[{"k", "=", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], ",", 
          "10"}], "]"}]}], ";", "\n", 
       RowBox[{"backoffSlots", "=", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"2", "^", "k"}], "-", "1"}]}], "}"}], "]"}]}], ";", "\n", 
       
       RowBox[{
        RowBox[{"station", "[", "\"\<BackoffUntil\>\"", "]"}], "=", 
        RowBox[{"currentTime", "+", 
         RowBox[{"backoffSlots", "*", "slotTime"}]}]}], ";", "\n", 
       RowBox[{
        RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
        "\"\<BACKOFF\>\""}], ";", "\n", 
       RowBox[{
        RowBox[{"stations", "[", "stationID", "]"}], "=", "station"}], ";", 
       "\n", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"eventLog", ",", 
         RowBox[{"{", 
          RowBox[{
          "currentTime", ",", "\"\<BACKOFF\>\"", ",", "stationID", ",", 
           "backoffSlots"}], "}"}]}], "]"}], ";"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"processCollision", "[", "collidingStations_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"channel", "[", "\"\<State\>\"", "]"}], "=", "\"\<JAM\>\""}], 
       ";", "\n", 
       RowBox[{"jamEndTime", "=", 
        RowBox[{"currentTime", "+", 
         RowBox[{"48", "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "6"}]}]}]}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Jam", " ", "for", " ", "48", " ", "\[Mu]s"}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{
        "All", " ", "colliding", " ", "stations", " ", "go", " ", "to", " ", 
         "backoff"}], "*)"}], 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"stations", "[", 
            RowBox[{"stationID", ",", "\"\<State\>\""}], "]"}], "=", 
           "\"\<BACKOFF\>\""}], ";", "\n", 
          RowBox[{
           RowBox[{"stations", "[", 
            RowBox[{"stationID", ",", "\"\<CurrentPacket\>\""}], "]"}], "=", 
           "None"}], ";", "\n", 
          RowBox[{"backoff", "[", "stationID", "]"}], ";", "\n", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"eventLog", ",", 
            RowBox[{"{", 
             RowBox[{
             "currentTime", ",", "\"\<COLLISION\>\"", ",", "stationID"}], 
             "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"stationID", ",", "collidingStations"}], "}"}]}], "]"}], 
       ";"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Main", " ", "simulation", " ", "loop"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{"currentTime", "<", "simulationTime"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Process", " ", "channel", " ", "state", " ", "changes"}], 
      "*)"}], 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"channel", "[", "\"\<State\>\"", "]"}], "==", 
          "\"\<BUSY\>\""}], "&&", 
         RowBox[{"currentTime", ">=", 
          RowBox[{"channel", "[", "\"\<EndTime\>\"", "]"}]}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"Successful", " ", "transmission"}], "*)"}], 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"channel", "[", "\"\<CurrentPacket\>\"", "]"}], "[", 
             "\"\<Type\>\"", "]"}], "==", "\"\<DATA\>\""}], ",", 
           RowBox[{"(*", 
            RowBox[{"Queue", " ", "ACK", " ", "at", " ", "destination"}], 
            "*)"}], 
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"dest", "=", 
                RowBox[{
                 RowBox[{"channel", "[", "\"\<CurrentPacket\>\"", "]"}], "[", 
                 "\"\<Destination\>\"", "]"}]}], "}"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"stations", "[", 
                 RowBox[{"dest", ",", "\"\<AckQueue\>\""}], "]"}], "=", 
                RowBox[{"Append", "[", 
                 RowBox[{
                  RowBox[{"stations", "[", 
                   RowBox[{"dest", ",", "\"\<AckQueue\>\""}], "]"}], ",", 
                  RowBox[{"generateACK", "[", 
                   RowBox[{"channel", "[", "\"\<CurrentPacket\>\"", "]"}], 
                   "]"}]}], "]"}]}], ";"}]}], "]"}], ";", "\n", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"eventLog", ",", 
              RowBox[{"{", 
               RowBox[{"currentTime", ",", "\"\<TX_SUCCESS\>\"", ",", 
                RowBox[{"channel", "[", "\"\<SourceID\>\"", "]"}]}], "}"}]}], 
             "]"}]}], ",", 
           RowBox[{"(*", 
            RowBox[{"ACK", " ", "received"}], "*)"}], 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"src", "=", 
                RowBox[{
                 RowBox[{"channel", "[", "\"\<CurrentPacket\>\"", "]"}], "[", 
                 "\"\<Destination\>\"", "]"}]}], ",", 
               RowBox[{"origID", "=", 
                RowBox[{
                 RowBox[{"channel", "[", "\"\<CurrentPacket\>\"", "]"}], "[", 
                 "\"\<OriginalPacketID\>\"", "]"}]}]}], "}"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"KeyExistsQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"stations", "[", "src", "]"}], "[", 
                  "\"\<SentPackets\>\"", "]"}], ",", "origID"}], "]"}], ",", 
               RowBox[{"(*", 
                RowBox[{"Record", " ", "RTT"}], "*)"}], 
               RowBox[{
                RowBox[{
                 RowBox[{"stations", "[", 
                  RowBox[{"src", ",", "\"\<RTTs\>\""}], "]"}], "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{
                   RowBox[{"stations", "[", 
                    RowBox[{"src", ",", "\"\<RTTs\>\""}], "]"}], ",", 
                   RowBox[{"currentTime", "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"stations", "[", "src", "]"}], "[", 
                    "\"\<SentPackets\>\"", "]"}], "[", "origID", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", "\n", 
                RowBox[{
                 RowBox[{"stations", "[", 
                  RowBox[{"src", ",", "\"\<SentPackets\>\""}], "]"}], "=", 
                 RowBox[{"KeyDrop", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"stations", "[", "src", "]"}], "[", 
                    "\"\<SentPackets\>\"", "]"}], ",", "origID"}], "]"}]}], 
                ";", "\n", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"eventLog", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "currentTime", ",", "\"\<ACK_RECEIVED\>\"", ",", "src", 
                    ",", "origID"}], "}"}]}], "]"}], ";"}]}], "]"}]}], 
            "]"}]}], "]"}], ";", "\n", 
         RowBox[{
          RowBox[{"channel", "[", "\"\<State\>\"", "]"}], "=", 
          "\"\<IDLE\>\""}], ";", "\n", 
         RowBox[{
          RowBox[{"stations", "[", 
           RowBox[{
            RowBox[{"channel", "[", "\"\<SourceID\>\"", "]"}], ",", 
            "\"\<State\>\""}], "]"}], "=", "\"\<IDLE\>\""}], ";", "\n", 
         RowBox[{
          RowBox[{"stations", "[", 
           RowBox[{
            RowBox[{"channel", "[", "\"\<SourceID\>\"", "]"}], ",", 
            "\"\<CurrentPacket\>\""}], "]"}], "=", "None"}], ";"}]}], "]"}], 
      ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"channel", "[", "\"\<State\>\"", "]"}], "==", 
          "\"\<JAM\>\""}], "&&", 
         RowBox[{"currentTime", ">=", "jamEndTime"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"channel", "[", "\"\<State\>\"", "]"}], "=", 
          "\"\<IDLE\>\""}], ";", "\n", 
         RowBox[{"jamEndTime", "=", 
          RowBox[{"-", "1"}]}], ";"}]}], "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"Process", " ", "stations"}], "*)"}], 
      RowBox[{"activeTransmitters", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"station", "=", 
          RowBox[{"stations", "[", "id", "]"}]}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{"Handle", " ", "ACK", " ", "queue", " ", 
           RowBox[{"(", 
            RowBox[{"prioritized", " ", "over", " ", "data"}], ")"}]}], 
          "*)"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<State\>\"", "]"}], "==", 
             "\"\<IDLE\>\""}], "&&", 
            RowBox[{
             RowBox[{"station", "[", "\"\<AckQueue\>\"", "]"}], "=!=", 
             RowBox[{"{", "}"}]}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"id", ",", "\"\<Queue\>\""}], "]"}], "=", 
             RowBox[{"Prepend", "[", 
              RowBox[{
               RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], ",", 
               RowBox[{"First", "[", 
                RowBox[{"station", "[", "\"\<AckQueue\>\"", "]"}], "]"}]}], 
              "]"}]}], ";", "\n", 
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"id", ",", "\"\<AckQueue\>\""}], "]"}], "=", 
             RowBox[{"Rest", "[", 
              RowBox[{"station", "[", "\"\<AckQueue\>\"", "]"}], "]"}]}], 
            ";"}]}], "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{"Generate", " ", "new", " ", "packets"}], "*)"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<State\>\"", "]"}], "==", 
             "\"\<IDLE\>\""}], "&&", 
            RowBox[{
             RowBox[{"RandomReal", "[", "]"}], "<", "dataGenRate"}]}], ",", 
           RowBox[{
            RowBox[{"dest", "=", 
             RowBox[{"RandomChoice", "[", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{
                RowBox[{"Range", "[", "numStations", "]"}], ",", "id"}], 
               "]"}], "]"}]}], ";", "\n", 
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"id", ",", "\"\<Queue\>\""}], "]"}], "=", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], ",", 
               RowBox[{"generatePacket", "[", 
                RowBox[{"id", ",", "dest"}], "]"}]}], "]"}]}], ";", "\n", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"eventLog", ",", 
              RowBox[{"{", 
               RowBox[{
               "currentTime", ",", "\"\<PKT_GEN\>\"", ",", "id", ",", 
                "dest"}], "}"}]}], "]"}], ";"}]}], "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{"Backoff", " ", "handling"}], "*)"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<State\>\"", "]"}], "==", 
             "\"\<BACKOFF\>\""}], "&&", 
            RowBox[{"currentTime", ">=", 
             RowBox[{"station", "[", "\"\<BackoffUntil\>\"", "]"}]}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"id", ",", "\"\<State\>\""}], "]"}], "=", 
             "\"\<IDLE\>\""}], ";", "\n", 
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"id", ",", "\"\<BackoffUntil\>\""}], "]"}], "=", 
             "None"}], ";"}]}], "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{"Transmission", " ", "attempt"}], "*)"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<State\>\"", "]"}], "==", 
             "\"\<IDLE\>\""}], "&&", 
            RowBox[{
             RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=!=", 
             RowBox[{"{", "}"}]}], "&&", 
            RowBox[{
             RowBox[{"channel", "[", "\"\<State\>\"", "]"}], "==", 
             "\"\<IDLE\>\""}]}], ",", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"activeTransmitters", ",", "id"}], "]"}], ";"}]}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"id", ",", 
          RowBox[{"Keys", "[", "stations", "]"}]}], "}"}]}], "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"Handle", " ", "transmission", " ", "attempts"}], "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "activeTransmitters", "]"}], ">", "0"}], ",", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "activeTransmitters", "]"}], "==", "1"}], 
          ",", 
          RowBox[{
           RowBox[{"startTransmission", "[", 
            RowBox[{"First", "[", "activeTransmitters", "]"}], "]"}], ";", 
           "\n", 
           RowBox[{"activeTransmitters", "=", 
            RowBox[{"{", "}"}]}]}], ",", 
          RowBox[{"(*", 
           RowBox[{"Collision", " ", "detected"}], "*)"}], 
          RowBox[{
           RowBox[{"processCollision", "[", "activeTransmitters", "]"}], ";", 
           "\n", 
           RowBox[{"activeTransmitters", "=", 
            RowBox[{"{", "}"}]}]}]}], "]"}]}], "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"Timeout", " ", "handling"}], "*)"}], 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"station", "=", 
          RowBox[{"stations", "[", "id", "]"}]}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<State\>\"", "]"}], "==", 
             "\"\<TRANSMITTING\>\""}], "||", 
            RowBox[{
             RowBox[{"station", "[", "\"\<State\>\"", "]"}], "==", 
             "\"\<BACKOFF\>\""}]}], ",", 
           RowBox[{
            RowBox[{"timeout", "=", "0.1"}], ";", 
            RowBox[{"(*", 
             RowBox[{"100", "ms", " ", "timeout"}], "*)"}], 
            RowBox[{"expired", "=", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{"station", "[", "\"\<SentPackets\>\"", "]"}], "]"}], 
               ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"currentTime", "-", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ">", "timeout"}], ")"}],
                 "&"}]}], "]"}]}], ";", "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "expired", "]"}], ">", "0"}], ",", 
              RowBox[{
               RowBox[{"Do", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"packetID", "=", 
                   RowBox[{"expiredPacket", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"dest", "=", 
                   RowBox[{
                    RowBox[{"expiredPacket", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"retryCount", "=", 
                   RowBox[{
                    RowBox[{"expiredPacket", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"retryCount", "<", "5"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{"Max", " ", "5", " ", "retries"}], "*)"}], 
                    RowBox[{"(*", 
                    RowBox[{"Requeue", " ", "packet"}], "*)"}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{"id", ",", "\"\<Queue\>\""}], "]"}], "=", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], ",", 
                    RowBox[{"generatePacket", "[", 
                    RowBox[{"id", ",", "dest"}], "]"}]}], "]"}]}], ";", "\n", 
                    
                    RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{
                    "id", ",", "\"\<SentPackets\>\"", ",", "packetID"}], 
                    "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"currentTime", ",", "dest", ",", 
                    RowBox[{"retryCount", "+", "1"}]}], "}"}]}], ";", "\n", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"eventLog", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "currentTime", ",", "\"\<TIMEOUT\>\"", ",", "id", ",", 
                    "packetID", ",", 
                    RowBox[{"retryCount", "+", "1"}]}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"(*", 
                    RowBox[{"Max", " ", "retries", " ", "reached"}], "*)"}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{"id", ",", "\"\<SentPackets\>\""}], "]"}], "=", 
                    RowBox[{"KeyDrop", "[", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<SentPackets\>\"", "]"}], ",",
                     "packetID"}], "]"}]}], ";", "\n", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"eventLog", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "currentTime", ",", "\"\<PKT_DROP\>\"", ",", "id", ",", 
                    "packetID"}], "}"}]}], "]"}], ";"}]}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"expiredPacket", ",", "expired"}], "}"}]}], "]"}], 
               ";"}]}], "]"}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"id", ",", 
          RowBox[{"Keys", "[", "stations", "]"}]}], "}"}]}], "]"}], ";", "\n", 
      RowBox[{"currentTime", "+=", 
       RowBox[{"10", "^", 
        RowBox[{"-", "6"}]}]}], ";"}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"Advance", " ", "time", " ", "by", " ", "1", " ", "\[Mu]s"}], 
     "*)"}], "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Analysis", " ", "functions"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"analyzeRTTs", "=", 
    RowBox[{"AssociationMap", "[", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"id", ",", 
        RowBox[{
         RowBox[{"rtts", "=", 
          RowBox[{
           RowBox[{"stations", "[", "id", "]"}], "[", "\"\<RTTs\>\"", "]"}]}],
          ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"rtts", "=!=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<MeanRTT\>\"", "->", 
              RowBox[{"Mean", "[", "rtts", "]"}]}], ",", 
             RowBox[{"\"\<MinRTT\>\"", "->", 
              RowBox[{"Min", "[", "rtts", "]"}]}], ",", 
             RowBox[{"\"\<MaxRTT\>\"", "->", 
              RowBox[{"Max", "[", "rtts", "]"}]}], ",", 
             RowBox[{"\"\<Count\>\"", "->", 
              RowBox[{"Length", "[", "rtts", "]"}]}]}], "|>"}], ",", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<MeanRTT\>\"", "->", "0"}], ",", 
             RowBox[{"\"\<MinRTT\>\"", "->", "0"}], ",", 
             RowBox[{"\"\<MaxRTT\>\"", "->", "0"}], ",", 
             RowBox[{"\"\<Count\>\"", "->", "0"}]}], "|>"}]}], "]"}]}]}], 
       "]"}], ",", 
      RowBox[{"Keys", "[", "stations", "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"visualizeEvents", "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "events", "}"}], ",", 
      RowBox[{
       RowBox[{"events", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{"eventLog", ",", "First"}], "]"}]}], ";", "\n", 
       RowBox[{"TimelinePlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Callout", "[", 
            RowBox[{"#3", ",", 
             RowBox[{"ToString", "[", "#2", "]"}]}], "]"}], "&"}], "@@@", 
          "events"}], ",", 
         RowBox[{"PlotLayout", "->", "\"\<Stacked\>\""}], ",", 
         RowBox[{"ImageSize", "->", "800"}], ",", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Ethernet Event Timeline\>\"", ",", "16", ",", "Bold"}], 
           "]"}]}], ",", 
         RowBox[{"FrameLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Station ID\>\""}], "}"}]}]}],
         "]"}]}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Output", " ", "results"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Simulation Complete! Runtime: \>\"", ",", "currentTime", ",", 
    "\"\< seconds\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<\\nRound-Trip Time Analysis:\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Dataset", "[", "analyzeRTTs", "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<\\nEvent Timeline Visualization:\>\"", "]"}], 
  ";"}], "\n", "visualizeEvents"}], "Input",
 CellChangeTimes->{{3.9592162533016644`*^9, 3.9592162533028803`*^9}},
 CellLabel->
  "In[1590]:=",ExpressionUUID->"a6c729f7-fb3a-4fb1-a58e-c5110e4bf228"],

Cell[BoxData[
 TemplateBox[{
  "SetSystemOptions", "sysname", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"CatchMachineUnderflow\\\\\\\"\\\"}]\\) is \
not a known SystemOption.\"", 2, 1591, 326, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9592162534354143`*^9},
 CellLabel->
  "During evaluation of \
In[1590]:=",ExpressionUUID->"6b95747e-851a-4c56-bcf0-e01be168ab4f"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.959216259132565*^9},
 CellLabel->
  "Out[1615]=",ExpressionUUID->"0761fda4-aef4-4d50-a22e-a8a20b6b78d8"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Simulation Complete! Runtime: \"\>", "\[InvisibleSpace]", 
   FractionBox["1", "10"], "\[InvisibleSpace]", "\<\" seconds\"\>"}],
  SequenceForm["Simulation Complete! Runtime: ", 
   Rational[1, 10], " seconds"],
  Editable->False]], "Print",
 CellChangeTimes->{3.95921625913352*^9},
 CellLabel->
  "During evaluation of \
In[1590]:=",ExpressionUUID->"89721fb4-f98d-4c7a-80e6-8765d1f725f2"],

Cell[BoxData["\<\"\\nRound-Trip Time Analysis:\"\>"], "Print",
 CellChangeTimes->{3.959216259134015*^9},
 CellLabel->
  "During evaluation of \
In[1590]:=",ExpressionUUID->"c3ef703f-2516-4cc2-9dc8-0d2c2d3bbce2"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> <|"MeanRTT" -> Rational[3011, 100000], "MinRTT" -> 
         Rational[3609, 200000], "MaxRTT" -> Rational[1687, 40000], "Count" -> 
         2|>, 2 -> <|
        "MeanRTT" -> Rational[66509, 3000000], "MinRTT" -> 
         Rational[1077, 125000], "MaxRTT" -> Rational[9233, 200000], "Count" -> 
         3|>, 3 -> <|
        "MeanRTT" -> Rational[4807, 500000], "MinRTT" -> 
         Rational[8823, 1000000], "MaxRTT" -> Rational[2081, 200000], "Count" -> 
         2|>, 4 -> <|
        "MeanRTT" -> Rational[6457, 125000], "MinRTT" -> 
         Rational[6457, 125000], "MaxRTT" -> Rational[6457, 125000], "Count" -> 
         1|>, 5 -> <|
        "MeanRTT" -> Rational[150079, 6000000], "MinRTT" -> 
         Rational[6939, 500000], "MaxRTT" -> Rational[18961, 500000], "Count" -> 
         6|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "MeanRTT"} -> 
        1, {All, "MinRTT"} -> 1, {All, "MaxRTT"} -> 1, {All, "Count"} -> 1|>, 
       
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "MeanRTT" -> TypeSystem`PackageScope`AtomShape[60], "MinRTT" -> 
             TypeSystem`PackageScope`AtomShape[60], "MaxRTT" -> 
             TypeSystem`PackageScope`AtomShape[60], "Count" -> 
             TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 4, {All}]]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"MeanRTT", "MinRTT", "MaxRTT", "Count"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "MeanRTT"} -> 
        1, {All, "MinRTT"} -> 1, {All, "MaxRTT"} -> 1, {All, "Count"} -> 1|>, 
       
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "MeanRTT" -> TypeSystem`PackageScope`AtomShape[60], "MinRTT" -> 
             TypeSystem`PackageScope`AtomShape[60], "MaxRTT" -> 
             TypeSystem`PackageScope`AtomShape[60], "Count" -> 
             TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 4, {All}]]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"MeanRTT", "MinRTT", "MaxRTT", "Count"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer]}], 5], "Path" -> {}, "DisplayedRowCount" -> 
     5, "DisplayedColumnCount" -> 4, "DataRowCount" -> 5, "DataColumnCount" -> 
     4, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MeanRTT", 
                  Style[
                  "MeanRTT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MeanRTT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MeanRTT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MinRTT", 
                  Style[
                  "MinRTT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MinRTT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MinRTT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MaxRTT", 
                  Style[
                  "MaxRTT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MaxRTT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MaxRTT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.03011"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MeanRTT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.018045"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MinRTT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.042175"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MaxRTT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0221697"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MeanRTT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.008616"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MinRTT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.046165"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MaxRTT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.009614"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MeanRTT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.008823"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MinRTT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.010405"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MaxRTT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.051656"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MeanRTT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.051656"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MinRTT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.051656"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MaxRTT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0250132"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["MeanRTT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.013878"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["MinRTT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.037922"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["MaxRTT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{334., {108.67974853515625`, 118.32025146484375`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{334., {108.67974853515625`, 118.32025146484375`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.959216259152308*^9},
 CellLabel->
  "Out[1618]=",ExpressionUUID->"187e9e4c-ebd5-4232-8ffb-6c9468530313"],

Cell[BoxData["\<\"\\nEvent Timeline Visualization:\"\>"], "Print",
 CellChangeTimes->{3.959216259201592*^9},
 CellLabel->
  "During evaluation of \
In[1590]:=",ExpressionUUID->"95104337-b61e-456b-9ab1-398de1a64557"],

Cell[BoxData["visualizeEvents"], "Output",
 CellChangeTimes->{3.9592162592019653`*^9},
 CellLabel->
  "Out[1620]=",ExpressionUUID->"8ee8a587-eb61-4d4b-89b8-665755f0daea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "PARAMETERS"}], " ", "FROM", " ", "1976", " ", 
    "ETHERNET", " ", "SPEC"}], "*****)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bitRate", "=", 
    RowBox[{"3", "*", 
     RowBox[{"10", "^", "6"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"3", " ", "Mbps"}], "-", 
    RowBox[{"original", " ", "Ethernet", " ", "speed"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bitTime", "=", 
    RowBox[{"1", "/", "bitRate"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Time", " ", "to", " ", "transmit", " ", "one", " ", "bit"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"propSpeed", "=", 
    RowBox[{"2", "*", 
     RowBox[{"10", "^", "8"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Signal", " ", "propagation", " ", 
    RowBox[{"speed", ":", 
     RowBox[{
      RowBox[{"2", "/", "3"}], " ", "light", " ", "speed"}]}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"maxDistance", "=", "1000"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Max", " ", "cable", " ", 
    RowBox[{"length", ":", 
     RowBox[{"1", " ", "km"}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"propDelay", "=", 
    RowBox[{"maxDistance", "/", "propSpeed"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"One", "-", 
    RowBox[{"way", " ", "propagation", " ", "delay"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"slotTime", "=", 
    RowBox[{
     RowBox[{"2", "*", "propDelay"}], "+", "0.000010"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Slot", " ", "time"}], "=", 
    RowBox[{
     RowBox[{"2", "*", "prop"}], "+", 
     RowBox[{"safety", " ", "margin"}]}]}], "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "SIMULATION"}], " ", "PARAMETERS"}], 
   "*****)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nStations", "=", "10"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Number", " ", "of", " ", "stations", " ", "on", " ", "the", " ", 
    "network"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"packetSize", "=", "4096"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Data", " ", "packet", " ", "size", " ", "in", " ", "bits"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ackSize", "=", "64"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"ACK", " ", "packet", " ", "size", " ", "in", " ", "bits"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"simTime", "=", "0.1"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Simulation", " ", "duration", " ", "in", " ", "seconds"}], "*)"}],
   "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "EVENT"}], "-", 
    RowBox[{"DRIVEN", " ", "SIMULATION", " ", "ENGINE"}]}], "*****)"}], "\n", 
  
  RowBox[{"(*", 
   RowBox[{"Event", " ", 
    RowBox[{"queue", ":", 
     RowBox[{"{", 
      RowBox[{"time", ",", "eventType", ",", "stationID", ",", "packet"}], 
      "}"}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"eventQueue", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"currentTime", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ongoingTransmissions", "=", 
    RowBox[{"{", "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"station", ",", "startTime", ",", "endTime", ",", "packet"}], 
    "}"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"collisionFlag", "=", "False"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"backoffCounters", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "nStations"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Collision", " ", "counters", " ", "per", " ", "station"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stationStates", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"\"\<IDLE\>\"", ",", "nStations"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"IDLE", ",", "TRANSMITTING", ",", "BACKOFF"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"packetQueues", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "nStations"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Packets", " ", "waiting", " ", "to", " ", "send"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stats", "=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<sent\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<collisions\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<success\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<rttSamples\>\"", "->", 
       RowBox[{"{", "}"}]}]}], "|>"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Performance", " ", "statistics"}], "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "HELPER"}], " ", "FUNCTIONS"}], "*****)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"scheduleEvent", "[", 
     RowBox[{"time_", ",", "type_", ",", "id_", ",", "packet_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "newEvent", "}"}], ",", 
      RowBox[{
       RowBox[{"newEvent", "=", 
        RowBox[{"{", 
         RowBox[{"time", ",", "type", ",", "id", ",", "packet"}], "}"}]}], 
       ";", "\n", 
       RowBox[{"eventQueue", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{"eventQueue", ",", "newEvent"}], "]"}], ",", "First"}], 
         "]"}]}], ";"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getEtherState", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ongoingTransmissions", "===", 
         RowBox[{"{", "}"}]}], ",", "\"\<IDLE\>\"", ",", "\"\<BUSY\>\""}], 
       "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getNextIdleTime", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ongoingTransmissions", "===", 
         RowBox[{"{", "}"}]}], ",", "currentTime", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"ongoingTransmissions", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], "]"}]}], "]"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"exponentialBackoff", "[", "station_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", ",", "backoffSlots"}], "}"}], ",", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"backoffCounters", "[", 
            RowBox[{"[", "station", "]"}], "]"}], "+", "1"}], ",", "10"}], 
         "]"}]}], ";", "\n", 
       RowBox[{"backoffSlots", "=", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"2", "^", "k"}], "-", "1"}]}], "}"}], "]"}]}], ";", "\n", 
       
       RowBox[{
        RowBox[{"backoffCounters", "[", 
         RowBox[{"[", "station", "]"}], "]"}], "=", "k"}], ";", "\n", 
       RowBox[{"backoffSlots", "*", "slotTime"}]}]}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "PACKET"}], " ", "GENERATION"}], "*****)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"generateDataPacket", "[", 
     RowBox[{"src_", ",", "dest_"}], "]"}], ":=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<id\>\"", "->", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"10", "^", "9"}], "]"}]}], ",", 
      RowBox[{"\"\<type\>\"", "->", "\"\<DATA\>\""}], ",", 
      RowBox[{"\"\<src\>\"", "->", "src"}], ",", 
      RowBox[{"\"\<dest\>\"", "->", "dest"}], ",", 
      RowBox[{"\"\<size\>\"", "->", "packetSize"}], ",", 
      RowBox[{"\"\<sentTime\>\"", "->", 
       RowBox[{"-", "1"}]}], ",", 
      RowBox[{"\"\<ackTime\>\"", "->", 
       RowBox[{"-", "1"}]}]}], "|>"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"generateAckPacket", "[", 
     RowBox[{"src_", ",", "dest_", ",", "dataID_"}], "]"}], ":=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<id\>\"", "->", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"10", "^", "9"}], "]"}]}], ",", 
      RowBox[{"\"\<type\>\"", "->", "\"\<ACK\>\""}], ",", 
      RowBox[{"\"\<src\>\"", "->", "src"}], ",", 
      RowBox[{"\"\<dest\>\"", "->", "dest"}], ",", 
      RowBox[{"\"\<size\>\"", "->", "ackSize"}], ",", 
      RowBox[{"\"\<dataID\>\"", "->", "dataID"}], ",", 
      RowBox[{"\"\<sentTime\>\"", "->", 
       RowBox[{"-", "1"}]}]}], "|>"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "EVENT"}], " ", "HANDLERS"}], "*****)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"handlePacketArrival", "[", 
     RowBox[{"station_", ",", "packet_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"packetQueues", "[", 
          RowBox[{"[", "station", "]"}], "]"}], ",", "packet"}], "]"}], ";", 
       "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"stationStates", "[", 
           RowBox[{"[", "station", "]"}], "]"}], "===", "\"\<IDLE\>\""}], ",", 
         RowBox[{"scheduleTransmission", "[", "station", "]"}]}], "]"}]}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"scheduleTransmission", "[", "station_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "nextIdleTime", "}"}], ",", 
      RowBox[{
       RowBox[{"nextIdleTime", "=", 
        RowBox[{"getNextIdleTime", "[", "]"}]}], ";", "\n", 
       RowBox[{
        RowBox[{"stationStates", "[", 
         RowBox[{"[", "station", "]"}], "]"}], "=", "\"\<WAITING\>\""}], ";", 
       "\n", 
       RowBox[{"scheduleEvent", "[", 
        RowBox[{
        "nextIdleTime", ",", "\"\<START_XMIT\>\"", ",", "station", ",", 
         "Null"}], "]"}]}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"handleStartXmit", "[", "station_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"packet", ",", "xmitTime", ",", "endTime"}], "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"packetQueues", "[", 
           RowBox[{"[", "station", "]"}], "]"}], "===", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\n", 
       RowBox[{"packet", "=", 
        RowBox[{"First", "[", 
         RowBox[{"packetQueues", "[", 
          RowBox[{"[", "station", "]"}], "]"}], "]"}]}], ";", "\n", 
       RowBox[{
        RowBox[{"packetQueues", "[", 
         RowBox[{"[", "station", "]"}], "]"}], "=", 
        RowBox[{"Rest", "[", 
         RowBox[{"packetQueues", "[", 
          RowBox[{"[", "station", "]"}], "]"}], "]"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Check", " ", "if", " ", "medium", " ", "is", " ", "free"}], 
         "-", 
         RowBox[{"carrier", " ", "sensing"}]}], "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"getEtherState", "[", "]"}], "===", "\"\<BUSY\>\""}], ",", 
         RowBox[{
          RowBox[{"scheduleTransmission", "[", "station", "]"}], ";", "\n", 
          RowBox[{"Return", "[", "]"}], ";"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Start", " ", "transmission"}], "*)"}], 
       RowBox[{
        RowBox[{"stationStates", "[", 
         RowBox[{"[", "station", "]"}], "]"}], "=", "\"\<TRANSMITTING\>\""}], 
       ";", "\n", 
       RowBox[{"xmitTime", "=", 
        RowBox[{
         RowBox[{"packet", "[", "\"\<size\>\"", "]"}], "*", "bitTime"}]}], 
       ";", "\n", 
       RowBox[{"endTime", "=", 
        RowBox[{"currentTime", "+", "xmitTime"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Record", " ", "send", " ", "time", " ", "for", " ", "RTT", " ", 
         "calculation"}], "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"packet", "[", "\"\<type\>\"", "]"}], "===", 
          "\"\<DATA\>\""}], ",", 
         RowBox[{
          RowBox[{"packet", "[", "\"\<sentTime\>\"", "]"}], "=", 
          "currentTime"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Add", " ", "to", " ", "ongoing", " ", "transmissions"}], 
        "*)"}], 
       RowBox[{"AppendTo", "[", 
        RowBox[{"ongoingTransmissions", ",", 
         RowBox[{"{", 
          RowBox[{
          "station", ",", "currentTime", ",", "endTime", ",", "packet"}], 
          "}"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Schedule", " ", "end", " ", "of", " ", "transmission"}], 
        "*)"}], 
       RowBox[{"scheduleEvent", "[", 
        RowBox[{
        "endTime", ",", "\"\<END_XMIT\>\"", ",", "station", ",", "packet"}], 
        "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Schedule", " ", "collision", " ", "detection", " ", "window"}], 
        "*)"}], 
       RowBox[{"scheduleEvent", "[", 
        RowBox[{
         RowBox[{"currentTime", "+", "propDelay"}], ",", 
         "\"\<COLLISION_CHECK\>\"", ",", "station", ",", "packet"}], "]"}], 
       ";"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"handleEndXmit", "[", 
     RowBox[{"station_", ",", "packet_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Remove", " ", "from", " ", "ongoing", " ", "transmissions"}], 
       "*)"}], 
      RowBox[{
       RowBox[{"ongoingTransmissions", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"ongoingTransmissions", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "!=", "station"}], "&"}]}], 
         "]"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "If", " ", "this", " ", "was", " ", "a", " ", "data", " ", 
          "packet"}], ",", 
         RowBox[{"schedule", " ", "ACK", " ", "at", " ", "destination"}]}], 
        "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"packet", "[", "\"\<type\>\"", "]"}], "===", 
          "\"\<DATA\>\""}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"stats", "[", "\"\<sent\>\"", "]"}], "++"}], ";", "\n", 
          RowBox[{"scheduleEvent", "[", 
           RowBox[{
            RowBox[{"currentTime", "+", 
             RowBox[{"2", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "6"}]}]}]}], ",", "\"\<GEN_ACK\>\"", ",", 
            RowBox[{"packet", "[", "\"\<dest\>\"", "]"}], ",", "packet"}], 
           "]"}]}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"If", " ", "this", " ", "was", " ", "an", " ", "ACK"}], ",", 
         
         RowBox[{"record", " ", "RTT"}]}], "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"packet", "[", "\"\<type\>\"", "]"}], "===", 
          "\"\<ACK\>\""}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"stats", "[", "\"\<rttSamples\>\"", "]"}], "=", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"stats", "[", "\"\<rttSamples\>\"", "]"}], ",", 
             RowBox[{"currentTime", "-", 
              RowBox[{"packet", "[", "\"\<sentTime\>\"", "]"}]}]}], "]"}]}], 
          ";", "\n", 
          RowBox[{
           RowBox[{"stats", "[", "\"\<success\>\"", "]"}], "++"}], ";"}]}], 
        "]"}], ";", "\n", 
       RowBox[{
        RowBox[{"stationStates", "[", 
         RowBox[{"[", "station", "]"}], "]"}], "=", "\"\<IDLE\>\""}], ";", 
       "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Process", " ", "next", " ", "packet", " ", "if", " ", "any"}], 
        "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"packetQueues", "[", 
           RowBox[{"[", "station", "]"}], "]"}], "=!=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"scheduleTransmission", "[", "station", "]"}]}], "]"}], 
       ";"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"handleCollisionCheck", "[", 
     RowBox[{"station_", ",", "packet_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "collision", "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "Check", " ", "if", " ", "collision", " ", "occurred", " ", "during", 
        " ", "vulnerable", " ", "period"}], "*)"}], 
      RowBox[{
       RowBox[{"collision", "=", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Cases", "[", 
           RowBox[{"ongoingTransmissions", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"s_", ",", "start_", ",", "end_", ",", "_"}], "}"}], "/;", 
             RowBox[{
              RowBox[{"s", "!=", "station"}], "&&", 
              RowBox[{"start", "<", "currentTime"}]}]}]}], "]"}], "]"}], ">", 
         "0"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{"collision", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"stats", "[", "\"\<collisions\>\"", "]"}], "++"}], ";", 
          "\n", 
          RowBox[{"ongoingTransmissions", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"ongoingTransmissions", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "!=", "station"}], "&"}]}], 
            "]"}]}], ";", "\n", 
          RowBox[{
           RowBox[{"stationStates", "[", 
            RowBox[{"[", "station", "]"}], "]"}], "=", "\"\<BACKOFF\>\""}], 
          ";", "\n", 
          RowBox[{"(*", 
           RowBox[{
           "Reschedule", " ", "packet", " ", "for", " ", "retransmission"}], 
           "*)"}], 
          RowBox[{"PrependTo", "[", 
           RowBox[{
            RowBox[{"packetQueues", "[", 
             RowBox[{"[", "station", "]"}], "]"}], ",", "packet"}], "]"}], 
          ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Schedule", " ", "backoff", " ", "timer"}], "*)"}], 
          RowBox[{"backoffTime", "=", 
           RowBox[{"exponentialBackoff", "[", "station", "]"}]}], ";", "\n", 
          RowBox[{"scheduleEvent", "[", 
           RowBox[{
            RowBox[{"currentTime", "+", "backoffTime"}], ",", 
            "\"\<BACKOFF_END\>\"", ",", "station", ",", "Null"}], "]"}], 
          ";"}]}], "]"}]}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"handleBackoffEnd", "[", "station_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"stationStates", "[", 
         RowBox[{"[", "station", "]"}], "]"}], "=", "\"\<IDLE\>\""}], ";", 
       "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"packetQueues", "[", 
           RowBox[{"[", "station", "]"}], "]"}], "=!=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"scheduleTransmission", "[", "station", "]"}]}], "]"}]}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"handleGenAck", "[", 
     RowBox[{"station_", ",", "dataPacket_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "ackPacket", "}"}], ",", 
      RowBox[{
       RowBox[{"ackPacket", "=", 
        RowBox[{"generateAckPacket", "[", 
         RowBox[{"station", ",", 
          RowBox[{"dataPacket", "[", "\"\<src\>\"", "]"}], ",", 
          RowBox[{"dataPacket", "[", "\"\<id\>\"", "]"}]}], "]"}]}], ";", 
       "\n", 
       RowBox[{
        RowBox[{"ackPacket", "[", "\"\<sentTime\>\"", "]"}], "=", 
        "currentTime"}], ";", "\n", 
       RowBox[{"handlePacketArrival", "[", 
        RowBox[{"station", ",", "ackPacket"}], "]"}]}]}], "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "SIMULATION"}], " ", "LOOP"}], "*****)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"initializeSimulation", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "i", "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Schedule", " ", "initial", " ", "packets"}], "*)"}], 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"dest", "=", 
             RowBox[{"RandomChoice", "[", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{
                RowBox[{"Range", "[", "nStations", "]"}], ",", "i"}], "]"}], 
              "]"}]}], ";", "\n", 
            RowBox[{"handlePacketArrival", "[", 
             RowBox[{"i", ",", 
              RowBox[{"generateDataPacket", "[", 
               RowBox[{"i", ",", "dest"}], "]"}]}], "]"}]}], ",", 
           RowBox[{"{", "3", "}"}]}], " ", 
          RowBox[{"(*", 
           RowBox[{"3", " ", "packets", " ", "per", " ", "station"}], "*)"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";"}]}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"runSimulation", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "event", "}"}], ",", 
      RowBox[{
       RowBox[{"initializeSimulation", "[", "]"}], ";", "\n", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eventQueue", "=!=", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{"currentTime", "<", "simTime"}]}], ",", 
         RowBox[{
          RowBox[{"event", "=", 
           RowBox[{"First", "[", "eventQueue", "]"}]}], ";", "\n", 
          RowBox[{"eventQueue", "=", 
           RowBox[{"Rest", "[", "eventQueue", "]"}]}], ";", "\n", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "currentTime", ",", "eventType", ",", "station", ",", "packet"}], 
            "}"}], "=", "event"}], ";", "\n", 
          RowBox[{"Switch", "[", 
           RowBox[{"eventType", ",", "\"\<START_XMIT\>\"", ",", 
            RowBox[{"handleStartXmit", "[", "station", "]"}], ",", 
            "\"\<END_XMIT\>\"", ",", 
            RowBox[{"handleEndXmit", "[", 
             RowBox[{"station", ",", "packet"}], "]"}], ",", 
            "\"\<COLLISION_CHECK\>\"", ",", 
            RowBox[{"handleCollisionCheck", "[", 
             RowBox[{"station", ",", "packet"}], "]"}], ",", 
            "\"\<BACKOFF_END\>\"", ",", 
            RowBox[{"handleBackoffEnd", "[", "station", "]"}], ",", 
            "\"\<GEN_ACK\>\"", ",", 
            RowBox[{"handleGenAck", "[", 
             RowBox[{"station", ",", "packet"}], "]"}]}], "]"}]}]}], "]"}], 
       ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Return", " ", "results"}], "*)"}], "stats"}]}], "]"}]}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "RUN"}], " ", "SIMULATION", " ", "AND", " ", 
    "VISUALIZE", " ", "RESULTS"}], "*****)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"results", "=", 
    RowBox[{"runSimulation", "[", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Performance", " ", "Metrics"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"utilization", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"results", "[", "\"\<success\>\"", "]"}], "*", "packetSize"}], 
     ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"bitRate", "*", "currentTime"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"collisionRate", "=", 
   RowBox[{
    RowBox[{"results", "[", "\"\<collisions\>\"", "]"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"results", "[", "\"\<success\>\"", "]"}], "+", 
      RowBox[{"results", "[", "\"\<collisions\>\"", "]"}]}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"meanRTT", "=", 
    RowBox[{"Mean", "[", 
     RowBox[{"results", "[", "\"\<rttSamples\>\"", "]"}], "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Output", " ", "Results"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Simulation Results:\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<- Duration: \>\"", ",", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"currentTime", ",", "3"}], "]"}], ",", "\"\< seconds\>\""}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<- Packets Sent: \>\"", ",", 
    RowBox[{"results", "[", "\"\<sent\>\"", "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<- Successful Transmissions: \>\"", ",", 
    RowBox[{"results", "[", "\"\<success\>\"", "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<- Collisions: \>\"", ",", 
    RowBox[{"results", "[", "\"\<collisions\>\"", "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<- Channel Utilization: \>\"", ",", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{"100", "*", "utilization"}], ",", "4"}], "]"}], ",", 
    "\"\<%\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<- Collision Rate: \>\"", ",", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{"100", "*", "collisionRate"}], ",", "4"}], "]"}], ",", 
    "\"\<%\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<- Mean RTT: \>\"", ",", 
     RowBox[{"NumberForm", "[", 
      RowBox[{
       RowBox[{"meanRTT", "*", "1000"}], ",", "4"}], "]"}], ",", 
     "\"\< ms\>\""}], "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"RTT", " ", "Distribution"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rttHistogram", "=", 
    RowBox[{"Histogram", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"results", "[", "\"\<rttSamples\>\"", "]"}], "*", "1000"}], 
      ",", 
      RowBox[{"{", "0.1", "}"}], ",", "\"\<Probability\>\"", ",", 
      RowBox[{"ChartStyle", "->", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.2", ",", "0.5", ",", "0.8"}], "]"}]}], ",", 
      RowBox[{"PlotLabel", "->", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Round-Trip Time Distribution\>\"", ",", "16", ",", "Bold"}], 
        "]"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<RTT (ms)\>\"", ",", "\"\<Probability\>\""}], "}"}]}], 
      ",", 
      RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Timeline", " ", "Visualization"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"timelineEvents", "=", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{"eventQueue", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t_", ",", "\"\<END_XMIT\>\"", ",", "s_", ",", "p_"}], "}"}],
         ":>", 
        RowBox[{"{", 
         RowBox[{"t", ",", "s", ",", "p"}], "}"}]}]}], "]"}], ",", "First"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"timelinePlot", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{"timelineEvents", ",", 
          RowBox[{"{", 
           RowBox[{"t_", ",", "_", ",", "_"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "currentTime", ",", "0.0001"}], "}"}]}], 
       "]"}], ",", 
      RowBox[{"PlotLabel", "->", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Network Activity Timeline\>\"", ",", "16", ",", "Bold"}],
         "]"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Active Transmissions\>\""}], 
        "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Show", " ", "Results"}], "*)"}]}], "\n", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"rttHistogram", ",", "timelinePlot"}], "}"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.959216274080605*^9, 3.959216274081779*^9}},
 CellLabel->
  "In[1661]:=",ExpressionUUID->"e3252a12-ab00-4df1-94bf-4d97b91cf540"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Simulation Results:\"\>"], "Print",
 CellChangeTimes->{3.959216274217758*^9},
 CellLabel->
  "During evaluation of \
In[1661]:=",ExpressionUUID->"772a9d3b-fdd0-4c13-9ea5-b59bd3bb7b17"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Duration: \"\>", "\[InvisibleSpace]", 
   TagBox[
    FractionBox[
     InterpretationBox[
      StyleBox["\<\"193\"\>",
       ShowStringCharacters->False],
      193,
      Editable->False], 
     InterpretationBox[
      StyleBox["\<\"46875\"\>",
       ShowStringCharacters->False],
      46875,
      Editable->False]],
    NumberForm[#, 3]& ], "\[InvisibleSpace]", "\<\" seconds\"\>"}],
  SequenceForm["- Duration: ", 
   NumberForm[
    Rational[193, 46875], 3], " seconds"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216274219727*^9},
 CellLabel->
  "During evaluation of \
In[1661]:=",ExpressionUUID->"80ddb5f7-356f-4202-84d6-ad3368580d2f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Packets Sent: \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["- Packets Sent: ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216274220347*^9},
 CellLabel->
  "During evaluation of \
In[1661]:=",ExpressionUUID->"dac665fc-e93c-4d67-8571-b941d118a5dc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Successful Transmissions: \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["- Successful Transmissions: ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216274220724*^9},
 CellLabel->
  "During evaluation of \
In[1661]:=",ExpressionUUID->"c5962c66-8a5e-484b-8894-c4bafb3e02c8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Collisions: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["- Collisions: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592162742210903`*^9},
 CellLabel->
  "During evaluation of \
In[1661]:=",ExpressionUUID->"c51a2be1-3f00-41fe-aea1-d635d1f2973a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Channel Utilization: \"\>", "\[InvisibleSpace]", 
   TagBox[
    FractionBox[
     InterpretationBox[
      StyleBox["\<\"6400\"\>",
       ShowStringCharacters->False],
      6400,
      Editable->False], 
     InterpretationBox[
      StyleBox["\<\"193\"\>",
       ShowStringCharacters->False],
      193,
      Editable->False]],
    NumberForm[#, 4]& ], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["- Channel Utilization: ", 
   NumberForm[
    Rational[6400, 193], 4], "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592162742214947`*^9},
 CellLabel->
  "During evaluation of \
In[1661]:=",ExpressionUUID->"ee68715b-b499-40d7-8efe-49aefc26e36d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Collision Rate: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"0\"\>",
      ShowStringCharacters->False],
     0,
     Editable->False],
    NumberForm[#, 4]& ], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["- Collision Rate: ", 
   NumberForm[0, 4], "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216274221917*^9},
 CellLabel->
  "During evaluation of \
In[1661]:=",ExpressionUUID->"e28e14ff-bb2b-4996-b492-99eaa2e5ff3f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Mean RTT: \"\>", "\[InvisibleSpace]", 
   TagBox[
    FractionBox[
     InterpretationBox[
      StyleBox["\<\"2077\"\>",
       ShowStringCharacters->False],
      2077,
      Editable->False], 
     InterpretationBox[
      StyleBox["\<\"1500\"\>",
       ShowStringCharacters->False],
      1500,
      Editable->False]],
    NumberForm[#, 4]& ], "\[InvisibleSpace]", "\<\" ms\"\>"}],
  SequenceForm["- Mean RTT: ", 
   NumberForm[
    Rational[2077, 1500], 4], " ms"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216274222333*^9},
 CellLabel->
  "During evaluation of \
In[1661]:=",ExpressionUUID->"23583199-7f5d-4d03-8a9d-64084e3eb716"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.2, 0.5, 0.8], EdgeForm[{Opacity[0.6789999999999999], 
        Thickness[Small]}], {}, 
        {RGBColor[0.2, 0.5, 0.8], EdgeForm[{Opacity[0.6789999999999999], 
         Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.3, 0}, {1.4000000000000001`, 1.}, 
                "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{36.527371897517696`, 
               429.14596677341797`}, {-102.1945122392936, 
               133.12506010984598`}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ]}, {}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         TagBox["\"RTT (ms)\"", HoldForm], TraditionalForm], 
        FormBox[
         TagBox["\"Probability\"", HoldForm], TraditionalForm]},
      AxesOrigin->{1.298, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      PlotLabel->FormBox[
        StyleBox[
        "\"Round-Trip Time Distribution\"", 16, Bold, StripOnInput -> False], 
        TraditionalForm],
      PlotRange->{{1.3, 1.4000000000000001`}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       InterpretationBox[{
         TagBox[{{}, {}, 
           TagBox[
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
              NCache[
               Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
             2], LineBox[CompressedData["
1:eJxdycsKQWEUhuGVkaGBgYEBkrTTzvnM3k434BKUsVtwyS4BKfU/X61WT2/7
9rjeKxGRfe77f3sVka5MWcU1XMcN3MQt3MFd3MN9nOEBzvEQj/AYT/AUz/Ac
L/ASr/Aab/AW7/AeF7hM/cRxoOM40nGc6DjOdByXv99b8xew
              "]]},
            Annotation[#, "Charting`Private`Tag#1"]& ]},
          {
          "WolframDynamicHighlight", <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
         StyleBox[
          DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
            Slot["HighlightElements"], 
            Slot["LayoutOptions"], 
            Slot["Meta"], 
            Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
               Annotation[{
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[2]], 
                 Line[CompressedData["
1:eJxdycsKQWEUhuGVkaGBgYEBkrTTzvnM3k434BKUsVtwyS4BKfU/X61WT2/7
9rjeKxGRfe77f3sVka5MWcU1XMcN3MQt3MFd3MN9nOEBzvEQj/AYT/AUz/Ac
L/ASr/Aab/AW7/AeF7hM/cRxoOM40nGc6DjOdByXv99b8xew
                  "]]}, "Charting`Private`Tag#1"]}}, <|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 42.}, {-1, 1}},
                 "Frame" -> {{True, True}, {True, True}}, 
                "AxesOrigin" -> {0., 0}, 
                "ImageSize" -> {400, 400/GoldenRatio}, 
                "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
                GoldenRatio^(-1), "DefaultStyle" -> {
                  Directive[
                   PointSize[
                    Rational[7, 360]], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> ListLinePlot, "GroupHighlight" -> 
                False|>|>]]& )[<|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 42.}, {-1, 1}}, 
               "Frame" -> {{True, True}, {True, True}}, 
               "AxesOrigin" -> {0., 0}, "ImageSize" -> {400, 400/GoldenRatio},
                "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
               GoldenRatio^(-1), "DefaultStyle" -> {
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[2]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>],
           
           ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
            4.503599627370496*^15, -4.503599627370496*^15}}],
          Selectable->False]},
        Annotation[{{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[7, 360]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJxdycsKQWEUhuGVkaGBgYEBkrTTzvnM3k434BKUsVtwyS4BKfU/X61WT2/7
9rjeKxGRfe77f3sVka5MWcU1XMcN3MQt3MFd3MN9nOEBzvEQj/AYT/AUz/Ac
L/ASr/Aab/AW7/AeF7hM/cRxoOM40nGc6DjOdByXv99b8xew
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 42.}, {-1, 1}}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0}, 
            "ImageSize" -> {400, 400/GoldenRatio}, "Axes" -> {False, False}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>, 
         "DynamicHighlight"]], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{
        FormBox[
         TagBox["\"Time (s)\"", HoldForm], TraditionalForm], 
        FormBox[
         TagBox["\"Active Transmissions\"", HoldForm], TraditionalForm]},
      AxesOrigin->{0., 0},
      BaseStyle->12,
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImageSize->400,
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
        "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox[
        "\"Network Activity Timeline\"", 16, Bold, StripOnInput -> False], 
        TraditionalForm],
      PlotRange->{{0., 42.}, {-1, 1}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.959216274247208*^9},
 CellLabel->
  "Out[1710]=",ExpressionUUID->"77526708-3ae0-4276-9678-458a66d60dde"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetSystemOptions", "[", 
    RowBox[{"\"\<CatchMachineUnderflow\>\"", "->", "False"}], "]"}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"===", "===", "===", "===", "===", "==="}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"SIMULATION", " ", "SETTINGS"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"===", "===", "===", "===", "===", "==="}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dataRate", "=", 
    RowBox[{"10", "^", "7"}]}], ";"}], "           ", 
  RowBox[{"(*", 
   RowBox[{"10", " ", "Mbps"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"slotTime", "=", 
    RowBox[{"512", "/", "dataRate"}]}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"51.2", " ", "\[Mu]s"}], "-", 
    RowBox[{"time", " ", "to", " ", "detect", " ", "collision"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jamTime", "=", 
    RowBox[{"32", "/", "dataRate"}]}], ";"}], "     ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"3.2", " ", "\[Mu]s"}], "-", 
    RowBox[{"jam", " ", "signal", " ", "duration"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ifg", "=", 
    RowBox[{"96", "/", "dataRate"}]}], ";"}], "         ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"9.6", " ", "\[Mu]s"}], "-", "inter", "-", 
    RowBox[{"frame", " ", "gap"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"propSpeed", "=", "2*^8"}], ";"}], "          ", 
  RowBox[{"(*", 
   RowBox[{"Signal", " ", "propagation", " ", "speed", " ", 
    RowBox[{"(", 
     RowBox[{"m", "/", "s"}], ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cableLength", "=", "500"}], ";"}], "         ", 
  RowBox[{"(*", 
   RowBox[{"Total", " ", "cable", " ", "length", " ", 
    RowBox[{"(", "m", ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"maxPropDelay", "=", 
    RowBox[{"cableLength", "/", "propSpeed"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Max", " ", "one"}], "-", 
    RowBox[{"way", " ", "delay"}]}], "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nStations", "=", "5"}], ";"}], "             ", 
  RowBox[{"(*", 
   RowBox[{"Number", " ", "of", " ", "stations"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"packetSize", "=", 
    RowBox[{"1500", "*", "8"}]}], ";"}], "       ", 
  RowBox[{"(*", 
   RowBox[{"Data", " ", "packet", " ", "size", " ", 
    RowBox[{"(", "bits", ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ackSize", "=", 
    RowBox[{"64", "*", "8"}]}], ";"}], "            ", 
  RowBox[{"(*", 
   RowBox[{"ACK", " ", "size", " ", 
    RowBox[{"(", "bits", ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"simDuration", "=", "0.01"}], ";"}], "        ", 
  RowBox[{"(*", 
   RowBox[{"Simulation", " ", "duration", " ", 
    RowBox[{"(", "s", ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dt", "=", 
    RowBox[{"slotTime", "/", "10"}]}], ";"}], "          ", 
  RowBox[{"(*", 
   RowBox[{"Simulation", " ", "time", " ", "step", " ", 
    RowBox[{"(", "s", ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"offeredLoad", "=", "0.7"}], ";"}], "         ", 
  RowBox[{"(*", 
   RowBox[{"Total", " ", "offered", " ", "channel", " ", "load"}], "*)"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"===", "===", "===", "===", "===", "===", "===", "==="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"PHYSICAL", " ", "LAYER", " ", "FUNCTIONS"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"===", "===", "===", "===", "===", "===", "===", "==="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getPropDelay", "[", 
    RowBox[{"src_", ",", "dest_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"stationPositions", "[", 
       RowBox[{"[", "src", "]"}], "]"}], "-", 
      RowBox[{"stationPositions", "[", 
       RowBox[{"[", "dest", "]"}], "]"}]}], "]"}], "/", "propSpeed"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getVulnerableStations", "[", "time_", "]"}], ":=", 
    RowBox[{"Select", "[", 
     RowBox[{"activeTransmissions", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"time", "-", 
           RowBox[{"#", "[", "\"\<startTime\>\"", "]"}]}], "<", "slotTime"}], 
         ")"}], "&&", 
        RowBox[{"!", 
         RowBox[{"#", "[", "\"\<collided\>\"", "]"}]}]}], "&"}]}], "]"}]}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"===", "===", "===", "===", "===", "===", "=="}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"STATION", " ", "INITIALIZER"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"===", "===", "===", "===", "===", "===", "=="}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"stationPositions", "=", 
   RowBox[{"Subdivide", "[", 
    RowBox[{"0", ",", "cableLength", ",", 
     RowBox[{"nStations", "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InitializeStation", "[", "id_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<id\>\"", "->", "id"}], ",", 
        RowBox[{"\"\<position\>\"", "->", 
         RowBox[{"stationPositions", "[", 
          RowBox[{"[", "id", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<state\>\"", "->", "\"\<IDLE\>\""}], ",", 
        RowBox[{"\"\<queue\>\"", "->", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"\"\<backlog\>\"", "->", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"\"\<collisionCount\>\"", "->", "0"}], ",", 
        RowBox[{"\"\<backoffCounter\>\"", "->", "0"}], ",", 
        RowBox[{"\"\<currentPacket\>\"", "->", "None"}], ",", 
        RowBox[{"\"\<jamEndTime\>\"", "->", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"\"\<sentPackets\>\"", "->", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"\"\<rcvdPackets\>\"", "->", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"\"\<rttStats\>\"", "->", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"\"\<throughput\>\"", "->", "0"}]}], "|>"}]}], "]"}]}], ";"}],
   "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"PACKET", " ", "HANDLING", " ", "UTILS"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GeneratePacket", "[", 
     RowBox[{"src_", ",", "dest_"}], "]"}], ":=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<id\>\"", "->", 
       RowBox[{"CreateUUID", "[", "]"}]}], ",", 
      RowBox[{"\"\<src\>\"", "->", "src"}], ",", 
      RowBox[{"\"\<dest\>\"", "->", "dest"}], ",", 
      RowBox[{"\"\<size\>\"", "->", "packetSize"}], ",", 
      RowBox[{"\"\<genTime\>\"", "->", "currentTime"}], ",", 
      RowBox[{"\"\<sentTime\>\"", "->", 
       RowBox[{"-", "1"}]}], ",", 
      RowBox[{"\"\<ackTime\>\"", "->", 
       RowBox[{"-", "1"}]}], ",", 
      RowBox[{"\"\<attempts\>\"", "->", "0"}]}], "|>"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenerateACK", "[", "dataPacket_", "]"}], ":=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<id\>\"", "->", 
       RowBox[{"CreateUUID", "[", "]"}]}], ",", 
      RowBox[{"\"\<src\>\"", "->", 
       RowBox[{"dataPacket", "[", "\"\<dest\>\"", "]"}]}], ",", 
      RowBox[{"\"\<dest\>\"", "->", 
       RowBox[{"dataPacket", "[", "\"\<src\>\"", "]"}]}], ",", 
      RowBox[{"\"\<size\>\"", "->", "ackSize"}], ",", 
      RowBox[{"\"\<dataID\>\"", "->", 
       RowBox[{"dataPacket", "[", "\"\<id\>\"", "]"}]}], ",", 
      RowBox[{"\"\<genTime\>\"", "->", "currentTime"}]}], "|>"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"BACKOFF", " ", "CALCULATIONS"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "*)"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetBackoffTime", "[", "collisionCount_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", "=", 
        RowBox[{"Min", "[", 
         RowBox[{"10", ",", "collisionCount"}], "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"2", "^", "k"}], "-", "1"}]}], "}"}], "]"}], "*", 
       "slotTime"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"===", "===", "===", "===", "===", "==="}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"SIMULATION", " ", "CORE"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"===", "===", "===", "===", "===", "==="}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"stations", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"InitializeStation", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"activeTransmissions", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"etherJamEndTime", "=", 
   RowBox[{"-", "1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lastBusyEndTime", "=", 
   RowBox[{"-", "1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"currentTime", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eventLog", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"totalBitsSent", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"successfulPackets", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"collisionEvents", "=", "0"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{"currentTime", "<", "simDuration"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Update", " ", "station", " ", "states"}], "*)"}], 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"station", "=", 
            RowBox[{"stations", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"(*", 
           RowBox[{"Handle", " ", "JAMMING", " ", "state"}], "*)"}], 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"station", "[", "\"\<state\>\"", "]"}], "==", 
               "\"\<JAMMING\>\""}], "&&", 
              RowBox[{"currentTime", ">=", 
               RowBox[{"station", "[", "\"\<jamEndTime\>\"", "]"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"station", "[", "\"\<state\>\"", "]"}], "=", 
               "\"\<BACKOFF\>\""}], ";", "\n", 
              RowBox[{
               RowBox[{"station", "[", "\"\<backoffCounter\>\"", "]"}], "=", 
               RowBox[{"GetBackoffTime", "[", 
                RowBox[{"station", "[", "\"\<collisionCount\>\"", "]"}], 
                "]"}]}], ";"}]}], "]"}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Handle", " ", "BACKOFF", " ", "state"}], "*)"}], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<state\>\"", "]"}], "==", 
              "\"\<BACKOFF\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"station", "[", "\"\<backoffCounter\>\"", "]"}], "=", 
               RowBox[{"Max", "[", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"station", "[", "\"\<backoffCounter\>\"", "]"}], 
                  "-", "dt"}]}], "]"}]}], ";", "\n", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"station", "[", "\"\<backoffCounter\>\"", "]"}], "<=",
                  "0"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"station", "[", "\"\<state\>\"", "]"}], "=", 
                  "\"\<IDLE\>\""}], ";", "\n", 
                 RowBox[{
                  RowBox[{"station", "[", "\"\<collisionCount\>\"", "]"}], 
                  "=", "0"}], ";"}]}], "]"}]}]}], "]"}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Generate", " ", "new", " ", "packets"}], "*)"}], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"RandomReal", "[", "]"}], "<", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"offeredLoad", "*", "dataRate", "*", "dt"}], ")"}], 
               "/", 
               RowBox[{"(", 
                RowBox[{"packetSize", "*", "nStations"}], ")"}]}]}], ",", 
             RowBox[{
              RowBox[{"dest", "=", 
               RowBox[{"RandomChoice", "[", 
                RowBox[{"DeleteCases", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", "nStations", "]"}], ",", "i"}], "]"}],
                 "]"}]}], ";", "\n", 
              RowBox[{"packet", "=", 
               RowBox[{"GeneratePacket", "[", 
                RowBox[{"i", ",", "dest"}], "]"}]}], ";", "\n", 
              RowBox[{
               RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "=", 
               RowBox[{"Append", "[", 
                RowBox[{
                 RowBox[{"station", "[", "\"\<queue\>\"", "]"}], ",", 
                 "packet"}], "]"}]}], ";"}]}], "]"}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Start", " ", "new", " ", "transmission"}], "*)"}], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"station", "[", "\"\<state\>\"", "]"}], "==", 
               "\"\<IDLE\>\""}], "&&", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "]"}], ">", 
               "0"}]}], ",", 
             RowBox[{"(*", 
              RowBox[{
              "Check", " ", "IFG", " ", "and", " ", "channel", " ", "idle"}], 
              "*)"}], 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"currentTime", ">", 
                RowBox[{"lastBusyEndTime", "+", "ifg"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"station", "[", "\"\<currentPacket\>\"", "]"}], "=", 
                 
                 RowBox[{"First", "[", 
                  RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "]"}]}], 
                ";", "\n", 
                RowBox[{
                 RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "=", 
                 RowBox[{"Rest", "[", 
                  RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "]"}]}], 
                ";", "\n", 
                RowBox[{
                 RowBox[{
                  RowBox[{"station", "[", "\"\<currentPacket\>\"", "]"}], 
                  "[", "\"\<attempts\>\"", "]"}], "++"}], ";", "\n", 
                RowBox[{
                 RowBox[{
                  RowBox[{"station", "[", "\"\<currentPacket\>\"", "]"}], 
                  "[", "\"\<sentTime\>\"", "]"}], "=", "currentTime"}], ";", 
                "\n", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"activeTransmissions", ",", 
                  RowBox[{"<|", 
                   RowBox[{
                    RowBox[{"\"\<startTime\>\"", "->", "currentTime"}], ",", 
                    RowBox[{"\"\<endTime\>\"", "->", 
                    RowBox[{"currentTime", "+", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"station", "[", "\"\<currentPacket\>\"", "]"}], 
                    "[", "\"\<size\>\"", "]"}], "/", "dataRate"}]}]}], ",", 
                    RowBox[{"\"\<source\>\"", "->", "i"}], ",", 
                    RowBox[{"\"\<packet\>\"", "->", 
                    RowBox[{"station", "[", "\"\<currentPacket\>\"", "]"}]}], 
                    ",", 
                    RowBox[{"\"\<collided\>\"", "->", "False"}]}], "|>"}]}], 
                 "]"}], ";", "\n", 
                RowBox[{
                 RowBox[{"station", "[", "\"\<state\>\"", "]"}], "=", 
                 "\"\<SENDING\>\""}], ";", "\n", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"eventLog", ",", 
                  RowBox[{"{", 
                   RowBox[{"currentTime", ",", "\"\<START\>\"", ",", "i"}], 
                   "}"}]}], "]"}], ";"}]}], "]"}]}], "]"}], ";", "\n", 
           RowBox[{
            RowBox[{"stations", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", "station"}], ";"}]}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"Collision", " ", "detection"}], "*)"}], 
      RowBox[{"vulnerableTx", "=", 
       RowBox[{"getVulnerableStations", "[", "currentTime", "]"}]}], ";", 
      "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "vulnerableTx", "]"}], ">", "1"}], ",", 
        RowBox[{
         RowBox[{"collisionSources", "=", 
          RowBox[{"{", "}"}]}], ";", "\n", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"tx", "[", "\"\<collided\>\"", "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"tx", "[", "\"\<collided\>\"", "]"}], "=", "True"}], 
              ";", "\n", 
              RowBox[{"collisionSources", "=", 
               RowBox[{"Union", "[", 
                RowBox[{"collisionSources", ",", 
                 RowBox[{"{", 
                  RowBox[{"tx", "[", "\"\<source\>\"", "]"}], "}"}]}], 
                "]"}]}], ";", "\n", 
              RowBox[{"collisionEvents", "++"}], ";", "\n", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"eventLog", ",", 
                RowBox[{"{", 
                 RowBox[{"currentTime", ",", "\"\<COLLISION\>\"", ",", 
                  RowBox[{"tx", "[", "\"\<source\>\"", "]"}]}], "}"}]}], 
               "]"}], ";"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"tx", ",", "vulnerableTx"}], "}"}]}], "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{"Handle", " ", "collisions"}], "*)"}], 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"station", "=", 
               RowBox[{"stations", "[", 
                RowBox[{"[", "source", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"station", "[", "\"\<state\>\"", "]"}], "==", 
                "\"\<SENDING\>\""}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"station", "[", "\"\<state\>\"", "]"}], "=", 
                 "\"\<JAMMING\>\""}], ";", "\n", 
                RowBox[{
                 RowBox[{"station", "[", "\"\<jamEndTime\>\"", "]"}], "=", 
                 RowBox[{"currentTime", "+", "jamTime"}]}], ";", "\n", 
                RowBox[{
                 RowBox[{"station", "[", "\"\<collisionCount\>\"", "]"}], 
                 "++"}], ";", "\n", 
                RowBox[{"(*", 
                 RowBox[{"Reschedule", " ", "packet"}], "*)"}], 
                RowBox[{
                 RowBox[{"station", "[", "\"\<backlog\>\"", "]"}], "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{
                   RowBox[{"station", "[", "\"\<backlog\>\"", "]"}], ",", 
                   RowBox[{"station", "[", "\"\<currentPacket\>\"", "]"}]}], 
                  "]"}]}], ";", "\n", 
                RowBox[{
                 RowBox[{"station", "[", "\"\<currentPacket\>\"", "]"}], "=", 
                 "None"}], ";", "\n", 
                RowBox[{"(*", 
                 RowBox[{"Update", " ", "ether", " ", "jam", " ", "state"}], "*)"}]\
, 
                RowBox[{"etherJamEndTime", "=", 
                 RowBox[{"Max", "[", 
                  RowBox[{"etherJamEndTime", ",", 
                   RowBox[{"currentTime", "+", "jamTime"}]}], "]"}]}], 
                ";"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"source", ",", "collisionSources"}], "}"}]}], "]"}], ";", 
         "\n", 
         RowBox[{"(*", 
          RowBox[{"Remove", " ", "collided", " ", "transmissions"}], "*)"}], 
         RowBox[{"activeTransmissions", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"activeTransmissions", ",", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"#", "[", "\"\<collided\>\"", "]"}]}], "&"}]}], "]"}]}],
          ";"}]}], "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"Check", " ", "completed", " ", "transmissions"}], "*)"}], 
      RowBox[{"completedTx", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"activeTransmissions", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", "\"\<endTime\>\"", "]"}], "<=", "currentTime"}], 
          "&"}]}], "]"}]}], ";", "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"tx", "=", "c"}], ",", 
            RowBox[{"src", "=", 
             RowBox[{"c", "[", "\"\<source\>\"", "]"}]}], ",", 
            RowBox[{"dest", "=", 
             RowBox[{
              RowBox[{"c", "[", "\"\<packet\>\"", "]"}], "[", "\"\<dest\>\"", 
              "]"}]}]}], "}"}], ",", 
          RowBox[{"(*", 
           RowBox[{"Successful", " ", "transmission"}], "*)"}], 
          RowBox[{
           RowBox[{"successfulPackets", "++"}], ";", "\n", 
           RowBox[{"totalBitsSent", "+=", 
            RowBox[{
             RowBox[{"tx", "[", "\"\<packet\>\"", "]"}], "[", "\"\<size\>\"", 
             "]"}]}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Update", " ", "source", " ", "station"}], "*)"}], 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "src", "]"}], "]"}], "[", "\"\<throughput\>\"", 
             "]"}], "+=", 
            RowBox[{
             RowBox[{"tx", "[", "\"\<packet\>\"", "]"}], "[", "\"\<size\>\"", 
             "]"}]}], ";", "\n", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "src", "]"}], "]"}], "[", "\"\<sentPackets\>\"", 
             "]"}], "=", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", 
                RowBox[{"[", "src", "]"}], "]"}], "[", "\"\<sentPackets\>\"", 
               "]"}], ",", 
              RowBox[{"tx", "[", "\"\<packet\>\"", "]"}]}], "]"}]}], ";", 
           "\n", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "src", "]"}], "]"}], "[", "\"\<state\>\"", "]"}], 
            "=", "\"\<IDLE\>\""}], ";", "\n", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "src", "]"}], "]"}], "[", "\"\<currentPacket\>\"", 
             "]"}], "=", "None"}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Queue", " ", "ACK", " ", "at", " ", "destination"}], 
            "*)"}], 
           RowBox[{"ack", "=", 
            RowBox[{"GenerateACK", "[", 
             RowBox[{"tx", "[", "\"\<packet\>\"", "]"}], "]"}]}], ";", "\n", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "dest", "]"}], "]"}], "[", "\"\<queue\>\"", "]"}], 
            "=", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", 
                RowBox[{"[", "dest", "]"}], "]"}], "[", "\"\<queue\>\"", 
               "]"}], ",", "ack"}], "]"}]}], ";", "\n", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"eventLog", ",", 
             RowBox[{"{", 
              RowBox[{"currentTime", ",", "\"\<SUCCESS\>\"", ",", "src"}], 
              "}"}]}], "]"}], ";"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "completedTx"}], "}"}]}], "]"}], ";", "\n", 
      RowBox[{"activeTransmissions", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{"activeTransmissions", ",", "completedTx"}], "]"}]}], ";", 
      "\n", 
      RowBox[{"(*", 
       RowBox[{"Check", " ", "received", " ", "ACKs"}], "*)"}], 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"station", "=", 
             RowBox[{"stations", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"newRcvd", "=", 
             RowBox[{"{", "}"}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"p", "[", "\"\<dest\>\"", "]"}], "==", "i"}], "&&", 
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"station", "[", "\"\<rcvdPackets\>\"", "]"}], ",", 
                   
                   RowBox[{"p", "[", "\"\<id\>\"", "]"}]}], "]"}]}]}], ",", 
               RowBox[{"(*", 
                RowBox[{"Find", " ", "matching", " ", "data", " ", "packet"}],
                 "*)"}], 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"KeyExistsQ", "[", 
                   RowBox[{"p", ",", "\"\<dataID\>\""}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"dataID", "=", 
                    RowBox[{"p", "[", "\"\<dataID\>\"", "]"}]}], ";", "\n", 
                   RowBox[{"dataPacket", "=", 
                    RowBox[{"FirstCase", "[", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<sentPackets\>\"", "]"}], ",", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", "\"\<id\>\"", "]"}], "==", "dataID"}], 
                    "&"}], ")"}]}], ",", "None"}], "]"}]}], ";", "\n", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"dataPacket", "=!=", "None"}], ",", 
                    RowBox[{
                    RowBox[{"rtt", "=", 
                    RowBox[{"currentTime", "-", 
                    RowBox[{"dataPacket", "[", "\"\<sentTime\>\"", "]"}]}]}], 
                    ";", "\n", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<rttStats\>\"", "]"}], "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<rttStats\>\"", "]"}], ",", 
                    "rtt"}], "]"}]}], ";", "\n", 
                    RowBox[{
                    RowBox[{"dataPacket", "[", "\"\<ackTime\>\"", "]"}], "=", 
                    "currentTime"}], ";", "\n", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<throughput\>\"", "]"}], "+=", 
                    RowBox[{"p", "[", "\"\<size\>\"", "]"}]}], ";"}]}], 
                    "]"}]}]}], "]"}], ";", "\n", 
                RowBox[{"newRcvd", "=", 
                 RowBox[{"Union", "[", 
                  RowBox[{"newRcvd", ",", 
                   RowBox[{"{", 
                    RowBox[{"p", "[", "\"\<id\>\"", "]"}], "}"}]}], "]"}]}], 
                ";"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"p", ",", 
               RowBox[{"station", "[", "\"\<queue\>\"", "]"}]}], "}"}]}], 
            "]"}], ";", "\n", 
           RowBox[{
            RowBox[{"station", "[", "\"\<rcvdPackets\>\"", "]"}], "=", 
            RowBox[{"Union", "[", 
             RowBox[{
              RowBox[{"station", "[", "\"\<rcvdPackets\>\"", "]"}], ",", 
              "newRcvd"}], "]"}]}], ";"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"Update", " ", "channel", " ", "state"}], "*)"}], 
      RowBox[{"lastBusyEndTime", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "activeTransmissions", "]"}], ">", "0"}], "||", 
          RowBox[{"currentTime", "<", "etherJamEndTime"}]}], ",", 
         "currentTime", ",", "lastBusyEndTime"}], "]"}]}], ";", "\n", 
      RowBox[{"currentTime", "+=", "dt"}], ";"}]}], "]"}], ";"}], "\n", "\n", 
  
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "==="}], "="}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ANALYSIS", "&"}], " ", "METRICS"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "==="}], "="}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"totalTime", "=", "currentTime"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"channelBusyTime", "=", 
   RowBox[{"totalTime", "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Length", "@", 
       RowBox[{"Select", "[", 
        RowBox[{"eventLog", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "==", "\"\<IDLE\>\""}], "&"}]}], 
        "]"}]}], "*", "dt"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"utilization", "=", 
   RowBox[{"totalBitsSent", "/", 
    RowBox[{"(", 
     RowBox[{"dataRate", "*", "totalTime"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"collisionRate", "=", 
    RowBox[{"collisionEvents", "/", 
     RowBox[{"Max", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "[", "eventLog", "]"}]}], "]"}]}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"rttValues", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"stations", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "\"\<rttStats\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"meanRTT", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "rttValues", "]"}], ">", "0"}], ",", 
     RowBox[{"Mean", "[", "rttValues", "]"}], ",", "0"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"throughputValues", "=", 
    RowBox[{
     RowBox[{"stations", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "\"\<throughput\>\""}], "]"}], "]"}], "/", 
     "totalTime"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<=== Simulation Results ===\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Channel Utilization: \>\"", ",", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{"utilization", "*", "100"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", "\"\<%\>\""}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Collision Rate: \>\"", ",", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{"collisionRate", "*", "100"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", "\"\<%\>\""}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Mean RTT: \>\"", ",", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{"meanRTT", "*", "1000"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", "\"\< ms\>\""}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Successful Packets: \>\"", ",", "successfulPackets"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Total Bits Sent: \>\"", ",", "totalBitsSent"}], "]"}], ";"}],
   "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"===", "===", "===", "===", "==="}], "*)"}], "\n", 
  RowBox[{"(*", "VISUALIZATION", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"===", "===", "===", "===", "==="}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"timelineEvents", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", "\"\<START\>\"", ",", "#3"}], "}"}], "->", 
         RowBox[{"Style", "[", 
          RowBox[{"#3", ",", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "#3", "]"}]}], 
          "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", "\"\<COLLISION\>\"", ",", "#3"}], "}"}], "->", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<X\>\"", ",", "Red", ",", "Bold"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", "\"\<SUCCESS\>\"", ",", "#3"}], "}"}], "->", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\[Checkmark]\>\"", ",", 
           RowBox[{"Darker", "@", "Green"}], ",", "Bold"}], "]"}]}]}], "}"}], 
      "&"}], "@@@", "eventLog"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"TimelinePlot", "[", 
   RowBox[{"timelineEvents", ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{"0", ",", "simDuration"}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Station\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Ethernet Event Timeline\>\"", ",", "16", ",", "Bold"}], 
      "]"}]}], ",", 
    RowBox[{"GridLines", "->", "Automatic"}], ",", 
    RowBox[{"ImageSize", "->", "800"}]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"StationThroughput", "=", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{"throughputValues", "/", 
       RowBox[{"10", "^", "6"}]}], ",", 
      RowBox[{"ChartLabels", "->", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\"\<Station \>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"PlotLabel", "->", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Station Throughput (Mbps)\>\"", ",", "16"}], "]"}]}], 
      ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Station\>\"", ",", "\"\<Mbps\>\""}], "}"}]}], ",", 
      RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
      RowBox[{"ImageSize", "->", "500"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RTTDistribution", "=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "rttValues", "]"}], ">", "0"}], ",", 
      RowBox[{"SmoothHistogram", "[", 
       RowBox[{
        RowBox[{"rttValues", "*", "1000"}], ",", 
        RowBox[{"PlotLabel", "->", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Round-Trip Time Distribution\>\"", ",", "16"}], 
          "]"}]}], ",", 
        RowBox[{"AxesLabel", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<RTT (ms)\>\"", ",", "\"\<Density\>\""}], "}"}]}], ",", 
        
        RowBox[{"ImageSize", "->", "500"}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"Text", "[", "\"\<No RTT data collected\>\"", "]"}], ",", 
        RowBox[{"ImageSize", "->", "500"}]}], "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"StationThroughput", ",", "RTTDistribution"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.959216335709647*^9, 3.959216335710857*^9}},
 CellLabel->
  "In[2006]:=",ExpressionUUID->"e50e076b-22d4-4e20-9462-42f0b807b889"],

Cell[BoxData[
 TemplateBox[{
  "SetSystemOptions", "sysname", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"CatchMachineUnderflow\\\\\\\"\\\"}]\\) is \
not a known SystemOption.\"", 2, 2007, 384, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216335823182*^9},
 CellLabel->
  "During evaluation of \
In[2006]:=",ExpressionUUID->"09142a5b-a4ee-4a12-a483-b234b8744e9a"],

Cell[BoxData[
 TemplateBox[{
  "Association", "setps", 
   "\"\\!\\(\\*RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\\\
\"id\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"position\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{\\\"\
\\\\\\\"state\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"SENDING\\\\\\\"\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"queue\\\\\\\
\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\",\
\\\", RowBox[{\\\"\\\\\\\"jamEndTime\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\
\"-\\\", \\\"1\\\"}]}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"sentPackets\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\
\", \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"\[RightAssociation]\\\"}]\\) in the part \
assignment is not a symbol.\"", 2, 2037, 385, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216335906879*^9},
 CellLabel->
  "During evaluation of \
In[2006]:=",ExpressionUUID->"a00e50e4-3245-48e4-91cb-c02edd825ed7"],

Cell[BoxData[
 TemplateBox[{
  "Association", "setps", 
   "\"\\!\\(\\*RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\\\
\"id\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"position\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{\\\"\
\\\\\\\"state\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"SENDING\\\\\\\"\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"queue\\\\\\\
\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\",\
\\\", RowBox[{\\\"\\\\\\\"jamEndTime\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\
\"-\\\", \\\"1\\\"}]}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"sentPackets\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\
\", \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"\[RightAssociation]\\\"}]\\) in the part \
assignment is not a symbol.\"", 2, 2037, 386, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216335911042*^9},
 CellLabel->
  "During evaluation of \
In[2006]:=",ExpressionUUID->"e9fc8a49-777f-443c-8103-745bde0f02cd"],

Cell[BoxData[
 TemplateBox[{
  "Association", "setps", 
   "\"\\!\\(\\*RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\\\
\"id\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"position\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", RowBox[{\\\"\
\\\\\\\"state\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"SENDING\\\\\\\"\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"queue\\\\\\\
\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\",\
\\\", RowBox[{\\\"\\\\\\\"jamEndTime\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\
\"-\\\", \\\"1\\\"}]}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"sentPackets\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\
\", \\\"}\\\"}]}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"\[RightAssociation]\\\"}]\\) in the part \
assignment is not a symbol.\"", 2, 2037, 387, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216335913377*^9},
 CellLabel->
  "During evaluation of \
In[2006]:=",ExpressionUUID->"4a8093b3-4c70-4bef-924b-fc426ef29b2d"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Association\\\", \\\"::\
\\\", \\\"setps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 2037, 388, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216335915732*^9},
 CellLabel->
  "During evaluation of \
In[2006]:=",ExpressionUUID->"53f2cb08-da6a-4bf6-9dad-b2a3e7dca6cd"],

Cell[CellGroupData[{

Cell[BoxData["\<\"=== Simulation Results ===\"\>"], "Print",
 CellChangeTimes->{3.959216335978127*^9},
 CellLabel->
  "During evaluation of \
In[2006]:=",ExpressionUUID->"54b147e9-946f-4718-8c7e-96adb3bf6121"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Channel Utilization: \"\>", "\[InvisibleSpace]", 
   TagBox[
    FractionBox[
     InterpretationBox[
      StyleBox["\<\"140625\"\>",
       ShowStringCharacters->False],
      140625,
      Editable->False], 
     InterpretationBox[
      StyleBox["\<\"3908\"\>",
       ShowStringCharacters->False],
      3908,
      Editable->False]],
    NumberForm[#, {4, 1}]& ], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["Channel Utilization: ", 
   NumberForm[
    Rational[140625, 3908], {4, 1}], "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216335978586*^9},
 CellLabel->
  "During evaluation of \
In[2006]:=",ExpressionUUID->"78efc2f6-565d-4a6d-a137-58e226d11a66"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collision Rate: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"0\"\>",
      ShowStringCharacters->False],
     0,
     Editable->False],
    NumberForm[#, {4, 1}]& ], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["Collision Rate: ", 
   NumberForm[0, {4, 1}], "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216335979274*^9},
 CellLabel->
  "During evaluation of \
In[2006]:=",ExpressionUUID->"3555ad67-d0ee-4c9a-b941-9f6fb66d74ec"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean RTT: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"0\"\>",
      ShowStringCharacters->False],
     0,
     Editable->False],
    NumberForm[#, {4, 2}]& ], "\[InvisibleSpace]", "\<\" ms\"\>"}],
  SequenceForm["Mean RTT: ", 
   NumberForm[0, {4, 2}], " ms"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216335979643*^9},
 CellLabel->
  "During evaluation of \
In[2006]:=",ExpressionUUID->"5c43bc8f-ca46-42d1-9811-e9d54dd33f18"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Successful Packets: \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Successful Packets: ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216335979993*^9},
 CellLabel->
  "During evaluation of \
In[2006]:=",ExpressionUUID->"f3e37ecd-0e3f-4da2-9c0c-31391dcdf282"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Bits Sent: \"\>", "\[InvisibleSpace]", "36000"}],
  SequenceForm["Total Bits Sent: ", 36000],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216335980296*^9},
 CellLabel->
  "During evaluation of \
In[2006]:=",ExpressionUUID->"ca98bf02-01d9-485c-af7c-a0a8bef0f3f7"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "TimelinePlot", "ldata", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{FractionBox[\\\"1562\\\", \
\\\"390625\\\"], \\\",\\\", \\\"\\\\\\\"START\\\\\\\"\\\", \\\",\\\", \\\"1\\\
\"}], \\\"}\\\"}], \\\"\[Rule]\\\", StyleBox[\\\"1\\\", RGBColor[0.368417`, \
0.506779`, 0.709798`], Rule[StripOnInput, False]]}], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{FractionBox[\\\"1562\\\", \\\"390625\\\"], \
\\\",\\\", \\\"\\\\\\\"COLLISION\\\\\\\"\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\
\"}], \\\"\[Rule]\\\", StyleBox[\\\"\\\\\\\"X\\\\\\\"\\\", RGBColor[1, 0, 0], \
Bold, Rule[StripOnInput, False]]}], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{FractionBox[\\\"1562\\\", \\\"390625\\\"], \\\",\\\", \
\\\"\\\\\\\"SUCCESS\\\\\\\"\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\"\
\[Rule]\\\", StyleBox[\\\"\\\\\\\"\[Checkmark]\\\\\\\"\\\", RGBColor[0, \
Rational[2, 3], 0], Bold, Rule[StripOnInput, False]]}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}]\\) is not a valid dataset or list of datasets.\"", 2, 
   2052, 389, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216336018834*^9},
 CellLabel->
  "During evaluation of \
In[2006]:=",ExpressionUUID->"fc1e8f85-94f7-4487-b4e9-14dbec4a2dea"],

Cell[BoxData[
 RowBox[{"TimelinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["1562", "390625"], ",", "\<\"START\"\>", ",", "1"}], 
         "}"}], "\[Rule]", 
        StyleBox["1",
         StripOnInput->False,
         LineColor->RGBColor[0.368417, 0.506779, 0.709798],
         FrontFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
         BackFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
         GraphicsColor->RGBColor[0.368417, 0.506779, 0.709798],
         FontColor->RGBColor[0.368417, 0.506779, 0.709798]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["1562", "390625"], ",", "\<\"COLLISION\"\>", ",", "1"}],
          "}"}], "\[Rule]", 
        StyleBox["\<\"X\"\>",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["1562", "390625"], ",", "\<\"SUCCESS\"\>", ",", "1"}], 
         "}"}], "\[Rule]", 
        StyleBox["\<\"\[Checkmark]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontWeight->Bold,
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["2032", "390625"], ",", "\<\"START\"\>", ",", "1"}], 
         "}"}], "\[Rule]", 
        StyleBox["1",
         StripOnInput->False,
         LineColor->RGBColor[0.368417, 0.506779, 0.709798],
         FrontFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
         BackFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
         GraphicsColor->RGBColor[0.368417, 0.506779, 0.709798],
         FontColor->RGBColor[0.368417, 0.506779, 0.709798]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["2032", "390625"], ",", "\<\"COLLISION\"\>", ",", "1"}],
          "}"}], "\[Rule]", 
        StyleBox["\<\"X\"\>",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["2032", "390625"], ",", "\<\"SUCCESS\"\>", ",", "1"}], 
         "}"}], "\[Rule]", 
        StyleBox["\<\"\[Checkmark]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontWeight->Bold,
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["2196", "390625"], ",", "\<\"START\"\>", ",", "5"}], 
         "}"}], "\[Rule]", 
        StyleBox["5",
         StripOnInput->False,
         LineColor->RGBColor[0.528488, 0.470624, 0.701351],
         FrontFaceColor->RGBColor[0.528488, 0.470624, 0.701351],
         BackFaceColor->RGBColor[0.528488, 0.470624, 0.701351],
         GraphicsColor->RGBColor[0.528488, 0.470624, 0.701351],
         FontColor->RGBColor[0.528488, 0.470624, 0.701351]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["2196", "390625"], ",", "\<\"COLLISION\"\>", ",", "5"}],
          "}"}], "\[Rule]", 
        StyleBox["\<\"X\"\>",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["2196", "390625"], ",", "\<\"SUCCESS\"\>", ",", "5"}], 
         "}"}], "\[Rule]", 
        StyleBox["\<\"\[Checkmark]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontWeight->Bold,
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["2666", "390625"], ",", "\<\"START\"\>", ",", "5"}], 
         "}"}], "\[Rule]", 
        StyleBox["5",
         StripOnInput->False,
         LineColor->RGBColor[0.528488, 0.470624, 0.701351],
         FrontFaceColor->RGBColor[0.528488, 0.470624, 0.701351],
         BackFaceColor->RGBColor[0.528488, 0.470624, 0.701351],
         GraphicsColor->RGBColor[0.528488, 0.470624, 0.701351],
         FontColor->RGBColor[0.528488, 0.470624, 0.701351]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["2666", "390625"], ",", "\<\"COLLISION\"\>", ",", "5"}],
          "}"}], "\[Rule]", 
        StyleBox["\<\"X\"\>",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["2666", "390625"], ",", "\<\"SUCCESS\"\>", ",", "5"}], 
         "}"}], "\[Rule]", 
        StyleBox["\<\"\[Checkmark]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontWeight->Bold,
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["2758", "390625"], ",", "\<\"START\"\>", ",", "2"}], 
         "}"}], "\[Rule]", 
        StyleBox["2",
         StripOnInput->False,
         LineColor->RGBColor[0.880722, 0.611041, 0.142051],
         FrontFaceColor->RGBColor[0.880722, 0.611041, 0.142051],
         BackFaceColor->RGBColor[0.880722, 0.611041, 0.142051],
         GraphicsColor->RGBColor[0.880722, 0.611041, 0.142051],
         FontColor->RGBColor[0.880722, 0.611041, 0.142051]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["2758", "390625"], ",", "\<\"COLLISION\"\>", ",", "2"}],
          "}"}], "\[Rule]", 
        StyleBox["\<\"X\"\>",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["2758", "390625"], ",", "\<\"SUCCESS\"\>", ",", "2"}], 
         "}"}], "\[Rule]", 
        StyleBox["\<\"\[Checkmark]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontWeight->Bold,
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["3228", "390625"], ",", "\<\"START\"\>", ",", "2"}], 
         "}"}], "\[Rule]", 
        StyleBox["2",
         StripOnInput->False,
         LineColor->RGBColor[0.880722, 0.611041, 0.142051],
         FrontFaceColor->RGBColor[0.880722, 0.611041, 0.142051],
         BackFaceColor->RGBColor[0.880722, 0.611041, 0.142051],
         GraphicsColor->RGBColor[0.880722, 0.611041, 0.142051],
         FontColor->RGBColor[0.880722, 0.611041, 0.142051]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["3228", "390625"], ",", "\<\"COLLISION\"\>", ",", "2"}],
          "}"}], "\[Rule]", 
        StyleBox["\<\"X\"\>",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["3228", "390625"], ",", "\<\"SUCCESS\"\>", ",", "2"}], 
         "}"}], "\[Rule]", 
        StyleBox["\<\"\[Checkmark]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontWeight->Bold,
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["728", "78125"], ",", "\<\"START\"\>", ",", "4"}], 
         "}"}], "\[Rule]", 
        StyleBox["4",
         StripOnInput->False,
         LineColor->RGBColor[0.922526, 0.385626, 0.209179],
         FrontFaceColor->RGBColor[0.922526, 0.385626, 0.209179],
         BackFaceColor->RGBColor[0.922526, 0.385626, 0.209179],
         GraphicsColor->RGBColor[0.922526, 0.385626, 0.209179],
         FontColor->RGBColor[0.922526, 0.385626, 0.209179]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["728", "78125"], ",", "\<\"COLLISION\"\>", ",", "4"}], 
         "}"}], "\[Rule]", 
        StyleBox["\<\"X\"\>",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["728", "78125"], ",", "\<\"SUCCESS\"\>", ",", "4"}], 
         "}"}], "\[Rule]", 
        StyleBox["\<\"\[Checkmark]\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 
           Rational[2, 3], 0],
         FrontFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         BackFaceColor->RGBColor[0, 
           Rational[2, 3], 0],
         GraphicsColor->RGBColor[0, 
           Rational[2, 3], 0],
         FontWeight->Bold,
         FontColor->RGBColor[0, 
           Rational[2, 3], 0]]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.01`"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Time (s)\"\>", ",", "\<\"Station\"\>"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    StyleBox["\<\"Ethernet Event Timeline\"\>",
     StripOnInput->False,
     FontSize->16,
     FontWeight->Bold]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]], "Output",
 CellChangeTimes->{3.959216336024428*^9},
 CellLabel->
  "Out[2052]=",ExpressionUUID->"27cbd5f8-4b5f-4cbc-968d-97e2a10cec72"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{
       {Opacity[0], 
        PointBox[{{0.45075018208302986`, 0.}, {5.451201747997087, 0.}}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.6649999999999999], Thickness[Small]}], 
         {RGBColor[0.471412, 0.108766, 0.527016], EdgeForm[{Opacity[
          0.6649999999999999], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            
            TagBox[RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 0.},
              
              RoundingRadius->0],
             StatusArea[#, 0]& ,
             TagBoxNote->"0"],
            StyleBox["0", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0, {}], "Tooltip"]& ]}, 
         {RGBColor[0.471412, 0.108766, 0.527016], EdgeForm[{Opacity[
          0.6649999999999999], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            
            TagBox[RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 0.},
              
              RoundingRadius->0],
             StatusArea[#, 0]& ,
             TagBoxNote->"0"],
            StyleBox["0", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0, {}], "Tooltip"]& ]}, 
         {RGBColor[0.471412, 0.108766, 0.527016], EdgeForm[{Opacity[
          0.6649999999999999], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            
            TagBox[RectangleBox[{2.5487982520029133, 0.}, {3.4512017479970867, 0.},
              
              RoundingRadius->0],
             StatusArea[#, 0]& ,
             TagBoxNote->"0"],
            StyleBox["0", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0, {}], "Tooltip"]& ]}, 
         {RGBColor[0.471412, 0.108766, 0.527016], EdgeForm[{Opacity[
          0.6649999999999999], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            
            TagBox[RectangleBox[{3.5487982520029133, 0.}, {4.451201747997087, 0.},
              
              RoundingRadius->0],
             StatusArea[#, 0]& ,
             TagBoxNote->"0"],
            StyleBox["0", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0, {}], "Tooltip"]& ]}, 
         {RGBColor[0.471412, 0.108766, 0.527016], EdgeForm[{Opacity[
          0.6649999999999999], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            
            TagBox[RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 0.},
              
              RoundingRadius->0],
             StatusArea[#, 0]& ,
             TagBoxNote->"0"],
            StyleBox["0", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{
        FormBox[
         TagBox["\"Station\"", HoldForm], TraditionalForm], 
        FormBox[
         TagBox["\"Mbps\"", HoldForm], TraditionalForm]},
      AxesOrigin->{0.45075018208302986`, 0.},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      DisplayFunction->Identity,
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {{{1., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
           FormBox["\"Station 1\"", TraditionalForm], 0}, {2., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
           FormBox["\"Station 2\"", TraditionalForm], 0}, {3., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
           FormBox["\"Station 3\"", TraditionalForm], 0}, {4., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
           FormBox["\"Station 4\"", TraditionalForm], 0}, {5., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
           FormBox["\"Station 5\"", TraditionalForm], 0}}, {{1., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
      GridLines->{None, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->{{23., 0.5000000000000568}, {15., 3.}},
      ImageSize->500,
      PlotLabel->FormBox[
        StyleBox["\"Station Throughput (Mbps)\"", 16, StripOnInput -> False], 
        TraditionalForm],
      PlotRange->{{All, All}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{None, Automatic}], {266.6666666666667, -262.5}, 
     ImageScaled[{0.5, 0.5}], {500, 500.},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     GraphicsBox[InsetBox["\<\"No RTT data collected\"\>", {0, 0}],
      DisplayFunction->Identity,
      ImagePadding->{{0., 0.}, {15., 3.}},
      ImageSize->500], {800., -262.5}, ImageScaled[{0.5, 0.5}], {500, 500.},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
  ImageSize->{
    UpTo[600], 
    UpTo[500]},
  PlotRange->{{0, 1066.6666666666667`}, {-525., 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.9592163360842543`*^9},
 CellLabel->
  "Out[2055]=",ExpressionUUID->"5df468fb-49af-4029-899b-b319d49fa9e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Ethernet", " ", "Agent"}], "-", 
    RowBox[{"Based", " ", "Simulation"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetSystemOptions", "[", 
     RowBox[{"\"\<CatchMachineUnderflow\>\"", "->", "False"}], "]"}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Simulation", " ", "Parameters"}]}], "===", "=="}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"slotTime", "=", "16*^-6"}], ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{"Ethernet", " ", "slot", " ", "time", " ", 
     RowBox[{"(", 
      RowBox[{"16", " ", "\[Mu]s"}], ")"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"cRate", "=", "3*^6"}], ";"}], "                ", 
   RowBox[{"(*", 
    RowBox[{"Channel", " ", 
     RowBox[{"rate", ":", 
      RowBox[{"3", " ", "Mbps"}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"propSpeed", "=", "2*^8"}], ";"}], "            ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Signal", " ", "propagation", " ", 
      RowBox[{"speed", ":", "200"}]}], ",", 
     RowBox[{"000", " ", 
      RowBox[{"km", "/", "s"}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"maxStations", "=", "256"}], ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{"Maximum", " ", "number", " ", "of", " ", "stations"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"packetSize", "=", "4096"}], ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{"Data", " ", "packet", " ", "size", " ", "in", " ", "bits"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"ackSize", "=", "64"}], ";"}], "                ", 
   RowBox[{"(*", 
    RowBox[{"ACK", " ", "packet", " ", "size", " ", "in", " ", "bits"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"maxBackoff", "=", "10"}], ";"}], "             ", 
   RowBox[{"(*", 
    RowBox[{"Maximum", " ", "backoff", " ", "exponent"}], "*)"}], "\n", "\n", 
   
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Station", " ", "Data", " ", "Structure"}]}], "===", "=="}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"createStation", "[", "id_", "]"}], ":=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<ID\>\"", "->", "id"}], ",", 
       RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"States", ":", "IDLE"}], ",", "BACKOFF", ",", "TRANSMITTING",
          ",", "WAITING_ACK"}], "*)"}], 
       RowBox[{"\"\<PacketQueue\>\"", "->", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Packets", " ", "waiting", " ", "to", " ", "be", " ", "sent"}], 
        "*)"}], 
       RowBox[{"\"\<CurrentPacket\>\"", "->", "None"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Packet", " ", "currently", " ", "being", " ", "transmitted"}], 
        "*)"}], 
       RowBox[{"\"\<CollisionCount\>\"", "->", "0"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Collision", " ", "counter", " ", "for", " ", "current", " ", 
         "packet"}], "*)"}], 
       RowBox[{"\"\<BackoffEnd\>\"", "->", "\[Infinity]"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Time", " ", "when", " ", "backoff", " ", "period", " ", "ends"}], 
        "*)"}], 
       RowBox[{"\"\<PacketGenTime\>\"", "->", "0"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Generation", " ", "time", " ", "of", " ", "current", " ", "packet"}],
         "*)"}], 
       RowBox[{"\"\<AckWaitStart\>\"", "->", "0"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Time", " ", "when", " ", "waiting", " ", "for", " ", "ACK", " ", 
         "started"}], "*)"}], 
       RowBox[{"\"\<Stats\>\"", "->", 
        RowBox[{"<|", 
         RowBox[{"(*", 
          RowBox[{"Performance", " ", "statistics"}], "*)"}], 
         RowBox[{
          RowBox[{"\"\<PacketsSent\>\"", "->", "0"}], ",", 
          RowBox[{"\"\<Collisions\>\"", "->", "0"}], ",", 
          RowBox[{"\"\<TotalLatency\>\"", "->", "0"}], ",", 
          RowBox[{"\"\<TotalRTT\>\"", "->", "0"}]}], "|>"}]}]}], "|>"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Event", " ", "System"}]}], "===", "=="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"events", "=", 
     RowBox[{"{", "}"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Sorted", " ", 
     RowBox[{"queue", ":", 
      RowBox[{"{", 
       RowBox[{"time", ",", "type", ",", "stationID", ",", "..."}], "}"}]}]}],
     "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"scheduleEvent", "[", 
      RowBox[{"time_", ",", "type_", ",", "id_", ",", "data___"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"newEvent", "=", 
         RowBox[{"{", 
          RowBox[{"time", ",", "type", ",", "id", ",", "data"}], "}"}]}], 
        "}"}], ",", 
       RowBox[{"events", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"events", ",", 
            RowBox[{"{", "newEvent", "}"}]}], "]"}], ",", "First"}], 
         "]"}]}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"processNextEvent", "[", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"events", "=!=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"event", "=", 
            RowBox[{"First", "[", "events", "]"}]}], ",", "time", ",", "type",
            ",", "id", ",", "data"}], "}"}], ",", 
         RowBox[{
          RowBox[{"events", "=", 
           RowBox[{"Rest", "[", "events", "]"}]}], ";", "\n", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"time", ",", "type", ",", "id", ",", "data"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"event", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"event", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"event", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", 
             RowBox[{"Drop", "[", 
              RowBox[{"event", ",", "3"}], "]"}]}], "}"}]}], ";", "\n", 
          RowBox[{"handleEvent", "[", 
           RowBox[{"time", ",", "type", ",", "id", ",", "data"}], "]"}], ";", 
          "\n", "True"}]}], "]"}], ",", "False"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Event", " ", "Handlers"}]}], "===", "=="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"handleEvent", "[", 
      RowBox[{"time_", ",", "\"\<PACKET_GEN\>\"", ",", "id_", ",", 
       RowBox[{"{", "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"station", "=", 
          RowBox[{"stations", "[", "id", "]"}]}], ",", "newPacket"}], "}"}], 
       ",", 
       RowBox[{
        RowBox[{"newPacket", "=", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<GenTime\>\"", "->", "time"}], ",", 
           RowBox[{"\"\<Dest\>\"", "->", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "maxStations"}], "}"}], "]"}]}], ",", 
           RowBox[{"\"\<Size\>\"", "->", "packetSize"}]}], "|>"}]}], ";", 
        "\n", 
        RowBox[{
         RowBox[{"station", "[", "\"\<PacketQueue\>\"", "]"}], "=", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"station", "[", "\"\<PacketQueue\>\"", "]"}], ",", 
           "newPacket"}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"station", "[", "\"\<State\>\"", "]"}], "===", 
           "\"\<IDLE\>\""}], ",", 
          RowBox[{
           RowBox[{"attemptTransmission", "[", 
            RowBox[{"time", ",", "id"}], "]"}], ";"}]}], "]"}], ";", "\n", 
        RowBox[{
         RowBox[{"stations", "[", "id", "]"}], "=", "station"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Schedule", " ", "next", " ", "packet", " ", "generation"}], 
         "*)"}], 
        RowBox[{"scheduleEvent", "[", 
         RowBox[{
          RowBox[{"time", "+", 
           RowBox[{"RandomVariate", "[", 
            RowBox[{"ExponentialDistribution", "[", 
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"cRate", "/", "1000"}], ")"}]}], "]"}], "]"}]}], ",", 
          "\"\<PACKET_GEN\>\"", ",", "id"}], "]"}], ";"}]}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"handleEvent", "[", 
      RowBox[{"time_", ",", "\"\<START_TX\>\"", ",", "id_", ",", 
       RowBox[{"{", "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"station", "=", 
          RowBox[{"stations", "[", "id", "]"}]}], ",", "packet", ",", 
         "txTime"}], "}"}], ",", 
       RowBox[{
        RowBox[{"packet", "=", 
         RowBox[{"First", "[", 
          RowBox[{"station", "[", "\"\<PacketQueue\>\"", "]"}], "]"}]}], ";", 
        "\n", 
        RowBox[{
         RowBox[{"station", "[", "\"\<PacketQueue\>\"", "]"}], "=", 
         RowBox[{"Rest", "[", 
          RowBox[{"station", "[", "\"\<PacketQueue\>\"", "]"}], "]"}]}], ";", 
        "\n", 
        RowBox[{
         RowBox[{"station", "[", "\"\<CurrentPacket\>\"", "]"}], "=", 
         "packet"}], ";", "\n", 
        RowBox[{
         RowBox[{"station", "[", "\"\<PacketGenTime\>\"", "]"}], "=", 
         RowBox[{"packet", "[", "\"\<GenTime\>\"", "]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
         "\"\<TRANSMITTING\>\""}], ";", "\n", 
        RowBox[{
         RowBox[{"stations", "[", "id", "]"}], "=", "station"}], ";", "\n", 
        RowBox[{"txTime", "=", 
         RowBox[{
          RowBox[{"packet", "[", "\"\<Size\>\"", "]"}], "/", "cRate"}]}], ";",
         "\n", 
        RowBox[{"(*", 
         RowBox[{"Schedule", " ", "end", " ", "of", " ", "transmission"}], 
         "*)"}], 
        RowBox[{"scheduleEvent", "[", 
         RowBox[{
          RowBox[{"time", "+", "txTime"}], ",", "\"\<END_TX\>\"", ",", "id"}],
          "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Schedule", " ", "collision", " ", "detection"}], "*)"}], 
        RowBox[{"scheduleEvent", "[", 
         RowBox[{
          RowBox[{"time", "+", "slotTime"}], ",", "\"\<COLLISION_CHECK\>\"", 
          ",", "id"}], "]"}], ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"handleEvent", "[", 
      RowBox[{"time_", ",", "\"\<END_TX\>\"", ",", "id_", ",", 
       RowBox[{"{", "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"station", "=", 
          RowBox[{"stations", "[", "id", "]"}]}], ",", "packet", ",", 
         "destID"}], "}"}], ",", 
       RowBox[{
        RowBox[{"packet", "=", 
         RowBox[{"station", "[", "\"\<CurrentPacket\>\"", "]"}]}], ";", "\n", 
        
        RowBox[{"destID", "=", 
         RowBox[{"packet", "[", "\"\<Dest\>\"", "]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"station", "[", "\"\<Stats\>\"", "]"}], "[", 
          "\"\<PacketsSent\>\"", "]"}], "++"}], ";", "\n", 
        RowBox[{
         RowBox[{"station", "[", "\"\<CurrentPacket\>\"", "]"}], "=", 
         "None"}], ";", "\n", 
        RowBox[{
         RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
         "\"\<WAITING_ACK\>\""}], ";", "\n", 
        RowBox[{
         RowBox[{"station", "[", "\"\<AckWaitStart\>\"", "]"}], "=", "time"}],
         ";", "\n", 
        RowBox[{
         RowBox[{"stations", "[", "id", "]"}], "=", "station"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
         "Schedule", " ", "ACK", " ", "generation", " ", "at", " ", 
          "destination"}], "*)"}], 
        RowBox[{"scheduleEvent", "[", 
         RowBox[{
          RowBox[{"time", "+", 
           RowBox[{
            RowBox[{"packet", "[", "\"\<Size\>\"", "]"}], "/", "cRate"}], "+",
            "1*^-6"}], ",", "\"\<ACK_GEN\>\"", ",", "destID", ",", "id"}], 
         "]"}], ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"handleEvent", "[", 
      RowBox[{"time_", ",", "\"\<ACK_GEN\>\"", ",", "destID_", ",", 
       RowBox[{"{", "srcID_", "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"destStation", "=", 
          RowBox[{"stations", "[", "destID", "]"}]}], ",", "ackPacket"}], 
        "}"}], ",", 
       RowBox[{
        RowBox[{"ackPacket", "=", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<GenTime\>\"", "->", "time"}], ",", 
           RowBox[{"\"\<Dest\>\"", "->", "srcID"}], ",", 
           RowBox[{"\"\<Size\>\"", "->", "ackSize"}], ",", 
           RowBox[{"\"\<SrcPacketTime\>\"", "->", 
            RowBox[{
             RowBox[{"stations", "[", "srcID", "]"}], "[", 
             "\"\<PacketGenTime\>\"", "]"}]}]}], "|>"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"destStation", "[", "\"\<PacketQueue\>\"", "]"}], "=", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"destStation", "[", "\"\<PacketQueue\>\"", "]"}], ",", 
           "ackPacket"}], "]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"stations", "[", "destID", "]"}], "=", "destStation"}], ";", 
        "\n", 
        RowBox[{"attemptTransmission", "[", 
         RowBox[{"time", ",", "destID"}], "]"}], ";"}]}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"handleEvent", "[", 
      RowBox[{"time_", ",", "\"\<COLLISION_CHECK\>\"", ",", "id_", ",", 
       RowBox[{"{", "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"station", "=", 
         RowBox[{"stations", "[", "id", "]"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"station", "[", "\"\<State\>\"", "]"}], "===", 
           "\"\<TRANSMITTING\>\""}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], "++"}], 
           ";", "\n", 
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<Stats\>\"", "]"}], "[", 
             "\"\<Collisions\>\"", "]"}], "++"}], ";", "\n", 
           RowBox[{
            RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
            "\"\<BACKOFF\>\""}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Binary", " ", "exponential", " ", "backoff"}], "*)"}], 
           RowBox[{"k", "=", 
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], ",", 
              "maxBackoff"}], "]"}]}], ";", "\n", 
           RowBox[{"backoffSlots", "=", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"2", "^", "k"}], "-", "1"}]}], "}"}], "]"}]}], ";", 
           "\n", 
           RowBox[{
            RowBox[{"station", "[", "\"\<BackoffEnd\>\"", "]"}], "=", 
            RowBox[{"time", "+", 
             RowBox[{"backoffSlots", "*", "slotTime"}]}]}], ";", "\n", 
           RowBox[{
            RowBox[{"stations", "[", "id", "]"}], "=", "station"}], ";", "\n", 
           RowBox[{"scheduleEvent", "[", 
            RowBox[{
             RowBox[{"station", "[", "\"\<BackoffEnd\>\"", "]"}], ",", 
             "\"\<BACKOFF_END\>\"", ",", "id"}], "]"}], ";"}]}], "]"}], 
        ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"handleEvent", "[", 
      RowBox[{"time_", ",", "\"\<BACKOFF_END\>\"", ",", "id_", ",", 
       RowBox[{"{", "}"}]}], "]"}], ":=", 
     RowBox[{"attemptTransmission", "[", 
      RowBox[{"time", ",", "id"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"handleEvent", "[", 
      RowBox[{"time_", ",", "\"\<ACK_RECEIVED\>\"", ",", "id_", ",", 
       RowBox[{"{", 
        RowBox[{"srcID_", ",", "genTime_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"station", "=", 
          RowBox[{"stations", "[", "id", "]"}]}], ",", "rtt"}], "}"}], ",", 
       RowBox[{
        RowBox[{"rtt", "=", 
         RowBox[{"time", "-", "genTime"}]}], ";", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"station", "[", "\"\<Stats\>\"", "]"}], "[", 
          "\"\<TotalRTT\>\"", "]"}], "+=", "rtt"}], ";", "\n", 
        RowBox[{
         RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
         "\"\<IDLE\>\""}], ";", "\n", 
        RowBox[{
         RowBox[{"stations", "[", "id", "]"}], "=", "station"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
         "Process", " ", "next", " ", "packet", " ", "if", " ", "available"}],
          "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"station", "[", "\"\<PacketQueue\>\"", "]"}], "]"}], ">", 
           "0"}], ",", 
          RowBox[{
           RowBox[{"attemptTransmission", "[", 
            RowBox[{"time", ",", "id"}], "]"}], ";"}]}], "]"}], ";"}]}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Transmission", " ", "Logic"}]}], "===", "=="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"attemptTransmission", "[", 
      RowBox[{"time_", ",", "id_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"station", "=", 
         RowBox[{"stations", "[", "id", "]"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"station", "[", "\"\<PacketQueue\>\"", "]"}], "]"}], "==",
            "0"}], ",", 
          RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\n", 
        RowBox[{"Which", "[", 
         RowBox[{"(*", 
          RowBox[{"Backoff", " ", "in", " ", "progress"}], "*)"}], 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"station", "[", "\"\<State\>\"", "]"}], "===", 
            "\"\<BACKOFF\>\""}], "&&", 
           RowBox[{"time", "<", 
            RowBox[{"station", "[", "\"\<BackoffEnd\>\"", "]"}]}]}], ",", 
          RowBox[{"Return", "[", "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{"Channel", " ", "is", " ", "busy"}], "*)"}], 
          RowBox[{"channelBusy", "[", "time", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
            "\"\<IDLE\>\""}], ";", "\n", 
           RowBox[{
            RowBox[{"stations", "[", "id", "]"}], "=", "station"}]}], ",", 
          RowBox[{"(*", 
           RowBox[{"Clear", " ", "to", " ", "transmit"}], "*)"}], "True", ",", 
          RowBox[{"scheduleEvent", "[", 
           RowBox[{"time", ",", "\"\<START_TX\>\"", ",", "id"}], "]"}]}], 
         "]"}], ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Channel", " ", "busy", " ", "if", " ", "any", " ", "station", " ", "is", 
     " ", "transmitting"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"channelBusy", "[", "time_", "]"}], ":=", 
     RowBox[{"AnyTrue", "[", 
      RowBox[{
       RowBox[{"Range", "[", "maxStations", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"stations", "[", "#", "]"}], "[", "\"\<State\>\"", "]"}], 
         "===", "\"\<TRANSMITTING\>\""}], "&"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Simulation", " ", "Initialization"}]}], "===", "=="}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"initializeSimulation", "[", 
      RowBox[{"stationCount_", ",", "simTime_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"stations", "=", 
         RowBox[{"Association", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"i", "->", 
             RowBox[{"createStation", "[", "i", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "stationCount"}], "}"}]}], "]"}]}]}], ";", 
        "\n", 
        RowBox[{"events", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
         "Schedule", " ", "initial", " ", "packet", " ", "generations"}], 
         "*)"}], 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"scheduleEvent", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"0.1", "*", "simTime"}]}], "}"}], "]"}], ",", 
            "\"\<PACKET_GEN\>\"", ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "stationCount"}], "}"}]}], "]"}], ";"}]}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Run", " ", "Simulation"}]}], "===", "=="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"runSimulation", "[", "simTime_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"currentTime", "=", "0"}], "}"}], ",", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"processNextEvent", "[", "]"}], "&&", 
           RowBox[{"currentTime", "<", "simTime"}]}], ",", 
          RowBox[{
           RowBox[{"currentTime", "=", 
            RowBox[{"First", "[", 
             RowBox[{"First", "[", "events", "]"}], "]"}]}], ";"}]}], "]"}], 
        ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Analysis", " ", "Functions"}]}], "===", "=="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"getRTTStats", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rtts", "=", 
         RowBox[{"{", "}"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", "i", "]"}], "[", "\"\<Stats\>\"", 
               "]"}], "[", "\"\<PacketsSent\>\"", "]"}], ">", "0"}], ",", 
            RowBox[{
             RowBox[{"meanRTT", "=", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"stations", "[", "i", "]"}], "[", "\"\<Stats\>\"", 
                 "]"}], "[", "\"\<TotalRTT\>\"", "]"}], "/", 
               RowBox[{
                RowBox[{
                 RowBox[{"stations", "[", "i", "]"}], "[", "\"\<Stats\>\"", 
                 "]"}], "[", "\"\<PacketsSent\>\"", "]"}]}]}], ";", "\n", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"rtts", ",", "meanRTT"}], "]"}], ";"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "stations", "]"}]}], "}"}]}], "]"}], ";", 
        "\n", "rtts"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"getCollisionStats", "[", "]"}], ":=", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"stations", "[", "#", "]"}], "[", "\"\<Stats\>\"", "]"}], 
         "[", "\"\<Collisions\>\"", "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "stations", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"getThroughput", "[", "]"}], ":=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"stations", "[", "#", "]"}], "[", "\"\<Stats\>\"", "]"}], 
          "[", "\"\<PacketsSent\>\"", "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "stations", "]"}], "]"}]}], "]"}], "*", 
      RowBox[{"packetSize", "/", "simTime"}]}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", "Visualization"}], "===", "=="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"plotRTTDistribution", "[", "rtts_", "]"}], ":=", 
     RowBox[{"Histogram", "[", 
      RowBox[{"rtts", ",", "\"\<Log\>\"", ",", "\"\<PDF\>\"", ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<Round-Trip Time (s)\>\"", ",", "\"\<Probability\>\""}], 
         "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "->", 
        "\"\<TCP-like RTT Distribution over Half-Duplex Ethernet\>\""}], ",", 
       
       RowBox[{"ChartStyle", "->", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"GridLines", "->", "Automatic"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"plotThroughputVsStations", "[", "data_", "]"}], ":=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{"data", ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Number of Stations\>\"", ",", "\"\<Throughput (Mbps)\>\""}], 
         "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "->", 
        "\"\<Throughput Degradation with Increasing Stations\>\""}], ",", 
       RowBox[{"GridLines", "->", "Automatic"}], ",", 
       RowBox[{"PlotStyle", "->", "Thick"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Main", " ", "Execution"}]}], "===", "=="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"simTime", "=", "1.0"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"1", " ", "second", " ", "simulation"}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Run", " ", "simulation", " ", "for", " ", "different", " ", "station", 
     " ", "counts"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"initializeSimulation", "[", 
         RowBox[{"stationCount", ",", "simTime"}], "]"}], ";", "\n", 
        RowBox[{"runSimulation", "[", "simTime", "]"}], ";", "\n", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<Stations\>\"", "->", "stationCount"}], ",", 
          RowBox[{"\"\<Throughput\>\"", "->", 
           RowBox[{"getThroughput", "[", "]"}]}], ",", 
          RowBox[{"\"\<Collisions\>\"", "->", 
           RowBox[{"getCollisionStats", "[", "]"}]}], ",", 
          RowBox[{"\"\<MeanRTT\>\"", "->", 
           RowBox[{"Mean", "[", 
            RowBox[{"getRTTStats", "[", "]"}], "]"}]}]}], "|>"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"stationCount", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4", ",", "8", ",", "16", ",", "32", ",", "64"}], 
          "}"}]}], "}"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "results"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Simulation Results:\>\"", "]"}], ";"}], "\n", 
   RowBox[{"Dataset", "[", "results", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Visualize", " ", "throughput", " ", "degradation"}], "*)"}], 
   "\n", 
   RowBox[{"plotThroughputVsStations", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "[", "\"\<Stations\>\"", "]"}], "->", 
        RowBox[{
         RowBox[{"#", "[", "\"\<Throughput\>\"", "]"}], "/", 
         RowBox[{"10", "^", "6"}]}]}], "}"}], "&"}], "/@", "results"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9592163865986557`*^9, 
  3.9592163865996113`*^9}},ExpressionUUID->"5463c956-9294-460f-b9a0-\
e392c6591bd1"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.959216388384101*^9},
 CellLabel->
  "Out[2584]=",ExpressionUUID->"ad41465d-fbf3-4d23-9d48-4b522a82c361"],

Cell[CellGroupData[{

Cell[BoxData["\<\"===== Network Performance =====\"\>"], "Print",
 CellChangeTimes->{3.959216388386059*^9},
 CellLabel->
  "During evaluation of \
In[2561]:=",ExpressionUUID->"6fe29547-1228-4605-9b4d-3fd09acba736"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Utilization: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"0.00\"\>",
      ShowStringCharacters->False],
     0.,
     AutoDelete->True],
    NumberForm[#, {4, 2}]& ], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["Utilization: ", 
   NumberForm[0., {4, 2}], "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216388386491*^9},
 CellLabel->
  "During evaluation of \
In[2561]:=",ExpressionUUID->"e8325b8a-d82a-49e5-9147-9a53adc475ef"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Throughput: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"5397.00\"\>",
      ShowStringCharacters->False],
     5396.5199999999995`,
     AutoDelete->True],
    NumberForm[#, {4, 2}]& ], "\[InvisibleSpace]", "\<\" Mbps\"\>"}],
  SequenceForm["Throughput: ", 
   NumberForm[5396.5199999999995`, {4, 2}], " Mbps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216388386943*^9},
 CellLabel->
  "During evaluation of \
In[2561]:=",ExpressionUUID->"346e9bfe-9f4d-42be-8f27-188c0b78f11f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collision Rate: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"0.0000\"\>",
      ShowStringCharacters->False],
     0.,
     AutoDelete->True],
    NumberForm[#, {4, 4}]& ], "\[InvisibleSpace]", "\<\" per second\"\>"}],
  SequenceForm["Collision Rate: ", 
   NumberForm[0., {4, 4}], " per second"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216388387362*^9},
 CellLabel->
  "During evaluation of \
In[2561]:=",ExpressionUUID->"17d6e08b-ebd8-433d-8566-153ece2440bc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Successful Packets: \"\>", "\[InvisibleSpace]", "44971"}],
  SequenceForm["Successful Packets: ", 44971],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216388387793*^9},
 CellLabel->
  "During evaluation of \
In[2561]:=",ExpressionUUID->"605555d5-aa2c-4ea0-939e-1eb5354f73a0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collision Events: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Collision Events: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.95921638838822*^9},
 CellLabel->
  "During evaluation of \
In[2561]:=",ExpressionUUID->"2474641e-e418-4f7a-b412-6bcb706e1a30"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "allLatencies", "shdw", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"allLatencies\\\\\\\"\\\"}]\\) \
appears in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"EthernetSimulation`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Global`\\\\\\\"\\\"}], \\\"}\\\"}]\\); definitions in context \\!\
\\(\\*RowBox[{\\\"\\\\\\\"EthernetSimulation`\\\\\\\"\\\"}]\\) may shadow or \
be shadowed by other definitions.\"", 2, 2594, 623, 19024681249811965357, 
   "Local", "EthernetSimulation`allLatencies"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.959216388399583*^9},
 CellLabel->
  "During evaluation of \
In[2561]:=",ExpressionUUID->"8759a8d3-3acd-47c3-95ad-64192b2e3ecf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Plot", ",", 
     RowBox[{"BaseStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "->", "\"\<Avenir\>\""}], ",", 
        RowBox[{"FontSize", "->", "12"}]}], "}"}]}]}], "]"}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"SIMULATION", " ", "PARAMETERS"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nStations", "=", "8"}], ";"}], "                  ", 
  RowBox[{"(*", 
   RowBox[{
   "Number", " ", "of", " ", "stations", " ", "on", " ", "the", " ", 
    "network"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bitRate", "=", 
    RowBox[{"3", "*", 
     RowBox[{"10", "^", "6"}]}]}], ";"}], "               ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"3", " ", "Mbps"}], "-", 
    RowBox[{"Original", " ", "Ethernet", " ", "speed"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cableLength", "=", "1000"}], ";"}], "             ", 
  RowBox[{"(*", 
   RowBox[{"Cable", " ", "length", " ", "in", " ", "meters"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"propSpeed", "=", 
    RowBox[{"2.3", "*", 
     RowBox[{"10", "^", "8"}]}]}], ";"}], "           ", 
  RowBox[{"(*", 
   RowBox[{"Signal", " ", "propagation", " ", 
    RowBox[{"speed", ":", 
     RowBox[{
      RowBox[{"2", "/", "3"}], " ", "c"}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"slotTime", "=", 
    RowBox[{"16", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}]}]}], ";"}], "            ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"51.2", " ", "\[Mu]s", " ", "for", " ", "10", "Mbps"}], ",", 
    RowBox[{"16", "\[Mu]s", " ", "for", " ", "3", "Mbps"}]}], "*)"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"packetSize", "=", "4096"}], ";"}], "              ", 
  RowBox[{"(*", 
   RowBox[{"Packet", " ", "size", " ", "in", " ", "bits"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"simTime", "=", "0.1"}], ";"}], "                  ", 
  RowBox[{"(*", 
   RowBox[{"Simulation", " ", "time", " ", "in", " ", "seconds"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"maxCollisions", "=", "16"}], ";"}], "             ", 
  RowBox[{"(*", 
   RowBox[{
   "Maximum", " ", "collisions", " ", "before", " ", "packet", " ", "drop"}], 
   "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"PHYSICAL", " ", "CALCULATIONS"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"propDelay", "=", 
    RowBox[{"cableLength", "/", "propSpeed"}]}], ";"}], "       ", 
  RowBox[{"(*", 
   RowBox[{"One", "-", 
    RowBox[{"way", " ", "propagation", " ", "delay"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"roundTripTime", "=", 
    RowBox[{"2", "*", "propDelay"}]}], ";"}], "             ", 
  RowBox[{"(*", 
   RowBox[{"RTT", " ", "for", " ", "collision", " ", "detection"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"txTime", "=", 
    RowBox[{"packetSize", "/", "bitRate"}]}], ";"}], "             ", 
  RowBox[{"(*", 
   RowBox[{"Packet", " ", "transmission", " ", "time"}], "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Critical Parameters:\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Packet transmission time: \>\"", ",", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{"txTime", "*", 
       RowBox[{"10", "^", "6"}]}], ",", "4"}], "]"}], ",", 
    "\"\< \[Mu]s\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Round-trip time: \>\"", ",", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{"roundTripTime", "*", 
       RowBox[{"10", "^", "6"}]}], ",", "4"}], "]"}], ",", 
    "\"\< \[Mu]s\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Slot time: \>\"", ",", 
     RowBox[{"NumberForm", "[", 
      RowBox[{
       RowBox[{"slotTime", "*", 
        RowBox[{"10", "^", "6"}]}], ",", "4"}], "]"}], ",", 
     "\"\< \[Mu]s\>\""}], "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"STATION", " ", "REPRESENTATION"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"initStation", "[", "id_", "]"}], ":=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<ID\>\"", "->", "id"}], ",", 
      RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
      RowBox[{"(*", 
       RowBox[{"IDLE", ",", "BACKOFF", ",", "TRANSMITTING"}], "*)"}], 
      RowBox[{"\"\<Queue\>\"", "->", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"(*", 
       RowBox[{"Pending", " ", "packets"}], "*)"}], 
      RowBox[{"\"\<CollisionCount\>\"", "->", "0"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Collisions", " ", "for", " ", "current", " ", "packet"}], 
       "*)"}], 
      RowBox[{"\"\<BackoffEnd\>\"", "->", "Infinity"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Time", " ", "when", " ", "backoff", " ", "ends"}], "*)"}], 
      RowBox[{"\"\<TransmitStart\>\"", "->", "0"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Packet", " ", "start", " ", "time"}], "*)"}], 
      RowBox[{"\"\<SuccessCount\>\"", "->", "0"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Successful", " ", "transmissions"}], "*)"}], 
      RowBox[{"\"\<CollisionCountTotal\>\"", "->", "0"}]}], "           ", 
     RowBox[{"(*", 
      RowBox[{"Total", " ", "collisions", " ", "experienced"}], "*)"}], 
     "|>"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"NETWORK", " ", "STATE"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"network", "=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Stations\>\"", "->", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"initStation", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"\"\<ActiveTransmissions\>\"", "->", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{"stationID", ",", "startTime", ",", "endTime"}], "}"}], 
       "*)"}], 
      RowBox[{"\"\<EventQueue\>\"", "->", 
       RowBox[{"CreateDataStructure", "[", "\"\<PriorityQueue\>\"", "]"}]}], 
      ",", 
      RowBox[{"(*", 
       RowBox[{"Time", "-", 
        RowBox[{"ordered", " ", "events"}]}], "*)"}], 
      RowBox[{"\"\<Time\>\"", "->", "0.0"}], ",", 
      RowBox[{"\"\<TotalSuccess\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<TotalCollisions\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<Busy\>\"", "->", "False"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Channel", " ", "state"}], "*)"}], 
      RowBox[{"\"\<WaitingStations\>\"", "->", 
       RowBox[{"{", "}"}]}]}], "              ", 
     RowBox[{"(*", 
      RowBox[{"Stations", " ", "waiting", " ", "for", " ", "channel"}], 
      "*)"}], "|>"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"EVENT", " ", "HANDLING"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"scheduleEvent", "[", 
     RowBox[{"time_", ",", "type_", ",", "data_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"network", "[", "\"\<EventQueue\>\"", "]"}], "[", 
     RowBox[{"\"\<Push\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"time", ",", "type", ",", "data"}], "}"}], ",", "time"}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"processEvent", "[", 
     RowBox[{"time_", ",", "type_", ",", "data_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"network", "[", "\"\<Time\>\"", "]"}], "=", "time"}], ";", 
       "\n", 
       RowBox[{"Switch", "[", 
        RowBox[{"type", ",", "\"\<TRANSMIT_START\>\"", ",", 
         RowBox[{"handleTransmitStart", "[", "data", "]"}], ",", 
         "\"\<TRANSMIT_END\>\"", ",", 
         RowBox[{"handleTransmitEnd", "[", "data", "]"}], ",", 
         "\"\<COLLISION_CHECK\>\"", ",", 
         RowBox[{"handleCollisionCheck", "[", "data", "]"}], ",", 
         "\"\<BACKOFF_END\>\"", ",", 
         RowBox[{"handleBackoffEnd", "[", "data", "]"}], ",", 
         "\"\<PACKET_ARRIVAL\>\"", ",", 
         RowBox[{"handlePacketArrival", "[", "data", "]"}], ",", "_", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Unknown event type: \>\"", ",", "type"}], "]"}]}], 
        "]"}]}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"EVENT", " ", "HANDLERS"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"handlePacketArrival", "[", "stationID_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"station", ",", "packet"}], "}"}], ",", 
      RowBox[{
       RowBox[{"station", "=", 
        RowBox[{
         RowBox[{"network", "[", "\"\<Stations\>\"", "]"}], "[", 
         RowBox[{"[", "stationID", "]"}], "]"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Create", " ", "new", " ", "packet", " ", "with", " ", "unique", " ", 
         "ID"}], "*)"}], 
       RowBox[{"packet", "=", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<ID\>\"", "->", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1000", ",", "9999"}], "}"}], "]"}]}], ",", 
          RowBox[{"\"\<CreateTime\>\"", "->", 
           RowBox[{"network", "[", "\"\<Time\>\"", "]"}]}], ",", 
          RowBox[{"\"\<StartTime\>\"", "->", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{"\"\<EndTime\>\"", "->", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{"\"\<Collisions\>\"", "->", "0"}]}], "|>"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Add", " ", "to", " ", "station", " ", "queue"}], "*)"}], 
       RowBox[{
        RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], ",", "packet"}], 
         "]"}]}], ";", "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"network", "[", "\"\<Stations\>\"", "]"}], "[", 
         RowBox[{"[", "stationID", "]"}], "]"}], "=", "station"}], ";", "\n", 
       
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"If", " ", "idle", " ", "and", " ", "channel", " ", "free"}],
          ",", 
         RowBox[{"start", " ", "transmission"}]}], "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"station", "[", "\"\<State\>\"", "]"}], "==", 
           "\"\<IDLE\>\""}], "&&", 
          RowBox[{"!", 
           RowBox[{"network", "[", "\"\<Busy\>\"", "]"}]}]}], ",", 
         RowBox[{"startTransmission", "[", "stationID", "]"}]}], "]"}], 
       ";"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"handleTransmitStart", "[", "stationID_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "station", "}"}], ",", 
      RowBox[{
       RowBox[{"station", "=", 
        RowBox[{
         RowBox[{"network", "[", "\"\<Stations\>\"", "]"}], "[", 
         RowBox[{"[", "stationID", "]"}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=!=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{"Remove", " ", "packet", " ", "from", " ", "queue"}], 
          "*)"}], 
         RowBox[{
          RowBox[{
           RowBox[{"station", "[", "\"\<CurrentPacket\>\"", "]"}], "=", 
           RowBox[{"First", "[", 
            RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], ";", 
          "\n", 
          RowBox[{
           RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=", 
           RowBox[{"Rest", "[", 
            RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], ";", 
          "\n", 
          RowBox[{
           RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
           "\"\<TRANSMITTING\>\""}], ";", "\n", 
          RowBox[{
           RowBox[{"station", "[", "\"\<TransmitStart\>\"", "]"}], "=", 
           RowBox[{"network", "[", "\"\<Time\>\"", "]"}]}], ";", "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"station", "[", "\"\<CurrentPacket\>\"", "]"}], "[", 
            "\"\<StartTime\>\"", "]"}], "=", 
           RowBox[{"network", "[", "\"\<Time\>\"", "]"}]}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Add", " ", "to", " ", "active", " ", "transmissions"}], 
           "*)"}], 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"network", "[", "\"\<ActiveTransmissions\>\"", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"stationID", ",", 
              RowBox[{"network", "[", "\"\<Time\>\"", "]"}], ",", 
              RowBox[{
               RowBox[{"network", "[", "\"\<Time\>\"", "]"}], "+", 
               "txTime"}]}], "}"}]}], "]"}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Schedule", " ", "end", " ", "of", " ", "transmission"}], 
           "*)"}], 
          RowBox[{"scheduleEvent", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"network", "[", "\"\<Time\>\"", "]"}], "+", "txTime"}], 
            ",", "\"\<TRANSMIT_END\>\"", ",", "stationID"}], "]"}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Schedule", " ", "collision", " ", "check"}], "*)"}], 
          RowBox[{"scheduleEvent", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"network", "[", "\"\<Time\>\"", "]"}], "+", "slotTime"}],
             ",", "\"\<COLLISION_CHECK\>\"", ",", "stationID"}], "]"}], ";", 
          "\n", 
          RowBox[{"(*", 
           RowBox[{"Mark", " ", "channel", " ", "as", " ", "busy"}], "*)"}], 
          RowBox[{
           RowBox[{"network", "[", "\"\<Busy\>\"", "]"}], "=", "True"}], ";", 
          "\n", 
          RowBox[{"(*", 
           RowBox[{"Update", " ", "station"}], "*)"}], 
          RowBox[{
           RowBox[{
            RowBox[{"network", "[", "\"\<Stations\>\"", "]"}], "[", 
            RowBox[{"[", "stationID", "]"}], "]"}], "=", "station"}], ";"}]}],
         "]"}]}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"handleTransmitEnd", "[", "stationID_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"station", ",", "packet"}], "}"}], ",", 
      RowBox[{
       RowBox[{"station", "=", 
        RowBox[{
         RowBox[{"network", "[", "\"\<Stations\>\"", "]"}], "[", 
         RowBox[{"[", "stationID", "]"}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"station", "[", "\"\<State\>\"", "]"}], "==", 
          "\"\<TRANSMITTING\>\""}], ",", 
         RowBox[{
          RowBox[{"packet", "=", 
           RowBox[{"station", "[", "\"\<CurrentPacket\>\"", "]"}]}], ";", 
          "\n", 
          RowBox[{
           RowBox[{"packet", "[", "\"\<EndTime\>\"", "]"}], "=", 
           RowBox[{"network", "[", "\"\<Time\>\"", "]"}]}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Successful", " ", "transmission"}], "*)"}], 
          RowBox[{
           RowBox[{"station", "[", "\"\<SuccessCount\>\"", "]"}], "+=", "1"}],
           ";", "\n", 
          RowBox[{
           RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], "=", 
           "0"}], ";", "\n", 
          RowBox[{
           RowBox[{"network", "[", "\"\<TotalSuccess\>\"", "]"}], "+=", "1"}],
           ";", "\n", 
          RowBox[{"(*", 
           RowBox[{
           "Remove", " ", "from", " ", "active", " ", "transmissions"}], 
           "*)"}], 
          RowBox[{
           RowBox[{"network", "[", "\"\<ActiveTransmissions\>\"", "]"}], "=", 
           
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"network", "[", "\"\<ActiveTransmissions\>\"", "]"}], 
             ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "!=", "stationID"}], "&"}]}], 
            "]"}]}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{
           "Process", " ", "next", " ", "packet", " ", "if", " ", 
            "available"}], "*)"}], 
          RowBox[{
           RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
           "\"\<IDLE\>\""}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=!=", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"network", "[", "\"\<Busy\>\"", "]"}]}], ",", 
              RowBox[{"startTransmission", "[", "stationID", "]"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{
                RowBox[{"network", "[", "\"\<WaitingStations\>\"", "]"}], ",",
                 "stationID"}], "]"}]}], "]"}]}], "]"}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{
           "Check", " ", "if", " ", "channel", " ", "is", " ", "now", " ", 
            "free"}], "*)"}], 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"network", "[", "\"\<ActiveTransmissions\>\"", "]"}], "==", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"network", "[", "\"\<Busy\>\"", "]"}], "=", "False"}], 
             ";", "\n", 
             RowBox[{"processWaitingStations", "[", "]"}], ";"}]}], "]"}], 
          ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Update", " ", "station"}], "*)"}], 
          RowBox[{
           RowBox[{"station", "[", "\"\<CurrentPacket\>\"", "]"}], "=", 
           "None"}], ";", "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"network", "[", "\"\<Stations\>\"", "]"}], "[", 
            RowBox[{"[", "stationID", "]"}], "]"}], "=", "station"}], ";"}]}],
         "]"}]}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"handleCollisionCheck", "[", "stationID_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"station", ",", "collision"}], "}"}], ",", 
      RowBox[{
       RowBox[{"station", "=", 
        RowBox[{
         RowBox[{"network", "[", "\"\<Stations\>\"", "]"}], "[", 
         RowBox[{"[", "stationID", "]"}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"station", "[", "\"\<State\>\"", "]"}], "==", 
          "\"\<TRANSMITTING\>\""}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "Check", " ", "for", " ", "overlapping", " ", "transmissions"}], 
          "*)"}], 
         RowBox[{
          RowBox[{"collision", "=", "False"}], ";", "\n", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"trans", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "!=", "stationID"}], "&&", 
               RowBox[{
                RowBox[{"trans", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "<", 
                RowBox[{"network", "[", "\"\<Time\>\"", "]"}]}], "&&", 
               RowBox[{
                RowBox[{"trans", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ">", 
                RowBox[{
                 RowBox[{"network", "[", "\"\<Time\>\"", "]"}], "-", 
                 "slotTime"}]}]}], ",", 
              RowBox[{
               RowBox[{"collision", "=", "True"}], ";", "\n", 
               RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"trans", ",", 
              RowBox[{"network", "[", "\"\<ActiveTransmissions\>\"", "]"}]}], 
             "}"}]}], "]"}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{"collision", ",", 
            RowBox[{"(*", 
             RowBox[{"Handle", " ", "collision"}], "*)"}], 
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], "+=", 
              "1"}], ";", "\n", 
             RowBox[{
              RowBox[{"station", "[", "\"\<CollisionCountTotal\>\"", "]"}], "+=",
               "1"}], ";", "\n", 
             RowBox[{
              RowBox[{"network", "[", "\"\<TotalCollisions\>\"", "]"}], "+=", 
              "1"}], ";", "\n", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], ">", 
                "maxCollisions"}], ",", 
               RowBox[{"(*", 
                RowBox[{"Packet", " ", "drop"}], "*)"}], 
               RowBox[{
                RowBox[{
                 RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], "=",
                  "0"}], ";", "\n", 
                RowBox[{
                 RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
                 "\"\<IDLE\>\""}], ";", "\n", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=!=", 
                   RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"!", 
                    RowBox[{"network", "[", "\"\<Busy\>\"", "]"}]}], ",", 
                    RowBox[{"startTransmission", "[", "stationID", "]"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{"network", "[", "\"\<WaitingStations\>\"", "]"}], 
                    ",", "stationID"}], "]"}]}], "]"}]}], "]"}]}], ",", 
               RowBox[{"(*", 
                RowBox[{"Exponential", " ", "backoff"}], "*)"}], 
               RowBox[{
                RowBox[{
                 RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
                 "\"\<BACKOFF\>\""}], ";", "\n", 
                RowBox[{"backoffTime", "=", 
                 RowBox[{"slotTime", "*", 
                  RowBox[{"RandomInteger", "[", 
                   RowBox[{
                    RowBox[{"2", "^", 
                    RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}]}],
                     "-", "1"}], "]"}]}]}], ";", "\n", 
                RowBox[{
                 RowBox[{"station", "[", "\"\<BackoffEnd\>\"", "]"}], "=", 
                 RowBox[{
                  RowBox[{"network", "[", "\"\<Time\>\"", "]"}], "+", 
                  "backoffTime"}]}], ";", "\n", 
                RowBox[{"scheduleEvent", "[", 
                 RowBox[{
                  RowBox[{"station", "[", "\"\<BackoffEnd\>\"", "]"}], ",", 
                  "\"\<BACKOFF_END\>\"", ",", "stationID"}], "]"}], ";"}]}], 
              "]"}], ";", "\n", 
             RowBox[{"(*", 
              RowBox[{
              "Remove", " ", "from", " ", "active", " ", "transmissions"}], 
              "*)"}], 
             RowBox[{
              RowBox[{"network", "[", "\"\<ActiveTransmissions\>\"", "]"}], 
              "=", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"network", "[", "\"\<ActiveTransmissions\>\"", "]"}], 
                ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "!=", "stationID"}], 
                 "&"}]}], "]"}]}], ";", "\n", 
             RowBox[{"(*", 
              RowBox[{"Update", " ", "station"}], "*)"}], 
             RowBox[{
              RowBox[{
               RowBox[{"network", "[", "\"\<Stations\>\"", "]"}], "[", 
               RowBox[{"[", "stationID", "]"}], "]"}], "=", "station"}], ";", 
             "\n", 
             RowBox[{"(*", 
              RowBox[{
              "Check", " ", "if", " ", "channel", " ", "is", " ", "now", " ", 
               "free"}], "*)"}], 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"network", "[", "\"\<ActiveTransmissions\>\"", "]"}], 
                "==", 
                RowBox[{"{", "}"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"network", "[", "\"\<Busy\>\"", "]"}], "=", 
                 "False"}], ";", "\n", 
                RowBox[{"processWaitingStations", "[", "]"}], ";"}]}], "]"}], 
             ";"}]}], "]"}]}]}], "]"}]}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"handleBackoffEnd", "[", "stationID_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "station", "}"}], ",", 
      RowBox[{
       RowBox[{"station", "=", 
        RowBox[{
         RowBox[{"network", "[", "\"\<Stations\>\"", "]"}], "[", 
         RowBox[{"[", "stationID", "]"}], "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"station", "[", "\"\<State\>\"", "]"}], "==", 
          "\"\<BACKOFF\>\""}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
           "\"\<IDLE\>\""}], ";", "\n", 
          RowBox[{
           RowBox[{"station", "[", "\"\<BackoffEnd\>\"", "]"}], "=", 
           "Infinity"}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Try", " ", "to", " ", "transmit", " ", "again"}], "*)"}], 
          
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"network", "[", "\"\<Busy\>\"", "]"}]}], ",", 
            RowBox[{"startTransmission", "[", "stationID", "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"network", "[", "\"\<WaitingStations\>\"", "]"}], ",", 
              "stationID"}], "]"}]}], "]"}], ";", "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"network", "[", "\"\<Stations\>\"", "]"}], "[", 
            RowBox[{"[", "stationID", "]"}], "]"}], "=", "station"}], ";"}]}],
         "]"}]}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"HELPER", " ", "FUNCTIONS"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"startTransmission", "[", "stationID_", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"scheduleEvent", "[", 
       RowBox[{
        RowBox[{"network", "[", "\"\<Time\>\"", "]"}], ",", 
        "\"\<TRANSMIT_START\>\"", ",", "stationID"}], "]"}], ";"}], ")"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"processWaitingStations", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"network", "[", "\"\<WaitingStations\>\"", "]"}], "]"}], 
           ">", "0"}], "&&", 
          RowBox[{"!", 
           RowBox[{"network", "[", "\"\<Busy\>\"", "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"stationID", "=", 
           RowBox[{"First", "[", 
            RowBox[{"network", "[", "\"\<WaitingStations\>\"", "]"}], "]"}]}],
           ";", "\n", 
          RowBox[{
           RowBox[{"network", "[", "\"\<WaitingStations\>\"", "]"}], "=", 
           RowBox[{"Rest", "[", 
            RowBox[{"network", "[", "\"\<WaitingStations\>\"", "]"}], "]"}]}],
           ";", "\n", 
          RowBox[{"startTransmission", "[", "stationID", "]"}], ";"}]}], 
        "]"}], ";"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"SIMULATION", " ", "INIT"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Initialize", " ", "with", " ", "random", " ", "packet", " ", "arrivals"}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"arrivalTime", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"simTime", "/", "2"}]}], "}"}], "]"}]}], ";", "\n", 
      RowBox[{"scheduleEvent", "[", 
       RowBox[{"arrivalTime", ",", "\"\<PACKET_ARRIVAL\>\"", ",", "i"}], 
       "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"MAIN", " ", "SIMULATION", " ", "LOOP"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"!", 
       RowBox[{
        RowBox[{"network", "[", "\"\<EventQueue\>\"", "]"}], "[", 
        "\"\<EmptyQ\>\"", "]"}]}], "&&", 
      RowBox[{
       RowBox[{"network", "[", "\"\<Time\>\"", "]"}], "<", "simTime"}]}], ",", 
     RowBox[{
      RowBox[{"event", "=", 
       RowBox[{
        RowBox[{"network", "[", "\"\<EventQueue\>\"", "]"}], "[", 
        "\"\<Pop\>\"", "]"}]}], ";", "\n", 
      RowBox[{"processEvent", "@@", "event"}], ";"}]}], "]"}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"RESULTS", "&"}], " ", "VISUALIZATION"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<\\nSimulation Results:\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Total successful packets: \>\"", ",", 
    RowBox[{"network", "[", "\"\<TotalSuccess\>\"", "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Total collisions: \>\"", ",", 
    RowBox[{"network", "[", "\"\<TotalCollisions\>\"", "]"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Channel utilization: \>\"", ",", 
     RowBox[{"NumberForm", "[", 
      RowBox[{
       RowBox[{"100", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"network", "[", "\"\<TotalSuccess\>\"", "]"}], "*", 
           "txTime"}], ")"}], "/", "simTime"}]}], ",", "4"}], "]"}], ",", 
     "\"\<%\>\""}], "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Throughput", " ", "calculation"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"throughput", "=", 
   RowBox[{
    RowBox[{"network", "[", "\"\<TotalSuccess\>\"", "]"}], "*", 
    RowBox[{"packetSize", "/", "simTime"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Throughput: \>\"", ",", 
     RowBox[{"NumberForm", "[", 
      RowBox[{
       RowBox[{"throughput", "/", 
        RowBox[{"10", "^", "6"}]}], ",", "4"}], "]"}], ",", "\"\< Mbps\>\""}],
     "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Collision", " ", "statistics"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"stationCollisions", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"network", "[", "\"\<Stations\>\"", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<CollisionCountTotal\>\"", 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stationSuccess", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"network", "[", "\"\<Stations\>\"", "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<SuccessCount\>\"", "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "collision", " ", "distribution"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"BarChart", "[", 
   RowBox[{"stationCollisions", ",", 
    RowBox[{"ChartLabels", "->", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\"\<Station \>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Collisions per Station\>\""}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Station\>\"", ",", "\"\<Collisions\>\""}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<Temperature\>\""}], ",", 
    RowBox[{"ImageSize", "->", "500"}]}], "]"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "success", " ", "distribution"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"BarChart", "[", 
   RowBox[{"stationSuccess", ",", 
    RowBox[{"ChartLabels", "->", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\"\<Station \>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}], ",", 
    RowBox[{
    "PlotLabel", "->", "\"\<Successful Transmissions per Station\>\""}], ",", 
    
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Station\>\"", ",", "\"\<Successes\>\""}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<Pastel\>\""}], ",", 
    RowBox[{"ImageSize", "->", "500"}]}], "]"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Channel", " ", "utilization", " ", "visualization"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"utilizationData", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Theoretical Max\>\"", ",", 
        RowBox[{"bitRate", "/", 
         RowBox[{"10", "^", "6"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"packetSize", "/", "txTime"}], ")"}], "/", 
         RowBox[{"10", "^", "6"}]}], ",", "\"\<N/A\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Simulation\>\"", ",", 
        RowBox[{"throughput", "/", 
         RowBox[{"10", "^", "6"}]}], ",", "\"\<N/A\>\"", ",", 
        RowBox[{"100", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"network", "[", "\"\<TotalSuccess\>\"", "]"}], "*", 
            "txTime"}], ")"}], "/", "simTime"}]}]}], "}"}]}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{"utilizationData", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Metric\>\"", ",", "\"\<Throughput (Mbps)\>\"", ",", 
       "\"\<Theoretical Packet Rate\>\"", ",", "\"\<Utilization (%)\>\""}], 
      "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}], ",", 
   RowBox[{"Background", "->", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"LightBlue", ",", "LightYellow"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.959216418945704*^9, 3.9592164189466267`*^9}},
 CellLabel->
  "In[2852]:=",ExpressionUUID->"28758bb7-9c8b-43c8-9a72-7cf16cc48a9b"],

Cell[BoxData[
 TemplateBox[{
  "roundTripTime", "shdw", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"roundTripTime\\\\\\\"\\\"}]\\) \
appears in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"EthernetSimulation`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Global`\\\\\\\"\\\"}], \\\"}\\\"}]\\); definitions in context \\!\
\\(\\*RowBox[{\\\"\\\\\\\"EthernetSimulation`\\\\\\\"\\\"}]\\) may shadow or \
be shadowed by other definitions.\"", 2, 2863, 685, 19024681249811965357, 
   "Local", "EthernetSimulation`roundTripTime"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.959216419119503*^9},
 CellLabel->
  "During evaluation of \
In[2852]:=",ExpressionUUID->"e43c31a1-d386-463d-b1c4-5b3767aba07b"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Critical Parameters:\"\>"], "Print",
 CellChangeTimes->{3.9592164191252317`*^9},
 CellLabel->
  "During evaluation of \
In[2852]:=",ExpressionUUID->"4d3d0fc5-032d-48ec-b8ed-dfe22da7c3a4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Packet transmission time: \"\>", "\[InvisibleSpace]", 
   TagBox[
    FractionBox[
     InterpretationBox[
      StyleBox["\<\"4096\"\>",
       ShowStringCharacters->False],
      4096,
      Editable->False], 
     InterpretationBox[
      StyleBox["\<\"3\"\>",
       ShowStringCharacters->False],
      3,
      Editable->False]],
    NumberForm[#, 4]& ], "\[InvisibleSpace]", "\<\" \[Mu]s\"\>"}],
  SequenceForm["Packet transmission time: ", 
   NumberForm[
    Rational[4096, 3], 4], " \[Mu]s"],
  Editable->False]], "Print",
 CellChangeTimes->{3.95921641912568*^9},
 CellLabel->
  "During evaluation of \
In[2852]:=",ExpressionUUID->"4dd677f5-115e-43e5-beb1-96c5ab6a14d6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Round-trip time: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"8.696\"\>",
      ShowStringCharacters->False],
     8.695652173913045,
     AutoDelete->True],
    NumberForm[#, 4]& ], "\[InvisibleSpace]", "\<\" \[Mu]s\"\>"}],
  SequenceForm["Round-trip time: ", 
   NumberForm[8.695652173913045, 4], " \[Mu]s"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216419126305*^9},
 CellLabel->
  "During evaluation of \
In[2852]:=",ExpressionUUID->"d9c4ba16-84b3-46a0-b56e-ade5c8a2044c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Slot time: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"16\"\>",
      ShowStringCharacters->False],
     16,
     Editable->False],
    NumberForm[#, 4]& ], "\[InvisibleSpace]", "\<\" \[Mu]s\"\>"}],
  SequenceForm["Slot time: ", 
   NumberForm[16, 4], " \[Mu]s"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216419126704*^9},
 CellLabel->
  "During evaluation of \
In[2852]:=",ExpressionUUID->"e8f7729f-ae87-4f9a-82b0-151a7c574b86"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "processEvent", "shdw", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"processEvent\\\\\\\"\\\"}]\\) \
appears in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"EthernetSimulation`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Global`\\\\\\\"\\\"}], \\\"}\\\"}]\\); definitions in context \\!\
\\(\\*RowBox[{\\\"\\\\\\\"EthernetSimulation`\\\\\\\"\\\"}]\\) may shadow or \
be shadowed by other definitions.\"", 2, 2872, 686, 19024681249811965357, 
   "Local", "EthernetSimulation`processEvent"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.959216419137731*^9},
 CellLabel->
  "During evaluation of \
In[2852]:=",ExpressionUUID->"9cd1de4d-341d-4e0e-b87d-5f9388afcd77"],

Cell[BoxData[
 TemplateBox[{
  "DataStructure", "dargb", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"PriorityQueue\\\\\\\"\\\"}]\\) operation \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Push\\\\\\\"\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"2\\\"}]\\) \
arguments are expected.\"", 2, 2880, 687, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216419140628*^9},
 CellLabel->
  "During evaluation of \
In[2852]:=",ExpressionUUID->"c40ca36c-8ee8-4ff3-afa7-83ef652ce90a"],

Cell[BoxData[
 TemplateBox[{
  "DataStructure", "dargb", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"PriorityQueue\\\\\\\"\\\"}]\\) operation \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Push\\\\\\\"\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"2\\\"}]\\) \
arguments are expected.\"", 2, 2880, 688, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216419143511*^9},
 CellLabel->
  "During evaluation of \
In[2852]:=",ExpressionUUID->"591ecd04-22d8-4084-9a77-79d4b352a943"],

Cell[BoxData[
 TemplateBox[{
  "DataStructure", "dargb", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"PriorityQueue\\\\\\\"\\\"}]\\) operation \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Push\\\\\\\"\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"2\\\"}]\\) \
arguments are expected.\"", 2, 2880, 689, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216419200111*^9},
 CellLabel->
  "During evaluation of \
In[2852]:=",ExpressionUUID->"6a4e1746-baf0-4aa9-b33b-e6649f1d19fb"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"DataStructure\\\", \
\\\"::\\\", \\\"dargb\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 2880, 690, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216419256049*^9},
 CellLabel->
  "During evaluation of \
In[2852]:=",ExpressionUUID->"f1d27b00-c622-4559-9977-bbf8c674f04e"],

Cell[CellGroupData[{

Cell[BoxData["\<\"\\nSimulation Results:\"\>"], "Print",
 CellChangeTimes->{3.959216419312503*^9},
 CellLabel->
  "During evaluation of \
In[2852]:=",ExpressionUUID->"f8138ae7-b6bc-4e34-8a5a-8949db980003"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total successful packets: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Total successful packets: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592164193135366`*^9},
 CellLabel->
  "During evaluation of \
In[2852]:=",ExpressionUUID->"f5bc86cc-0939-424a-a290-1ef043dc62b4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total collisions: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Total collisions: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592164193150377`*^9},
 CellLabel->
  "During evaluation of \
In[2852]:=",ExpressionUUID->"11c7a83d-59ae-41e4-ae63-621c155f4197"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Channel utilization: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"0.\"\>",
      ShowStringCharacters->False],
     0.,
     AutoDelete->True],
    NumberForm[#, 4]& ], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["Channel utilization: ", 
   NumberForm[0., 4], "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216419315711*^9},
 CellLabel->
  "During evaluation of \
In[2852]:=",ExpressionUUID->"9ff0af41-22d2-4d74-8fbe-def4870e5263"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Throughput: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"0.\"\>",
      ShowStringCharacters->False],
     0.,
     AutoDelete->True],
    NumberForm[#, 4]& ], "\[InvisibleSpace]", "\<\" Mbps\"\>"}],
  SequenceForm["Throughput: ", 
   NumberForm[0., 4], " Mbps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592164193164186`*^9},
 CellLabel->
  "During evaluation of \
In[2852]:=",ExpressionUUID->"67f5b18f-d18d-4e31-86b4-d3710c791c78"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
     Thickness[Small]}], 
     {RGBColor[0.178927, 0.305394, 0.933501], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.178927, 0.305394, 0.933501], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.178927, 0.305394, 0.933501], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{2.5487982520029133, 0.}, {3.4512017479970867, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.178927, 0.305394, 0.933501], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{3.5487982520029133, 0.}, {4.451201747997087, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.178927, 0.305394, 0.933501], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.178927, 0.305394, 0.933501], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.178927, 0.305394, 0.933501], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.178927, 0.305394, 0.933501], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{
    FormBox[
     TagBox["\"Station\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Collisions\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0.39075018208302986`, 0.},
  BaseStyle->{FontFamily -> "Arial", FontSize -> 12},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Station 1\"", TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"Station 2\"", TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"Station 3\"", TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["\"Station 4\"", TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["\"Station 5\"", TraditionalForm], 0}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox["\"Station 6\"", TraditionalForm], 0}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox["\"Station 7\"", TraditionalForm], 0}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox["\"Station 8\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->500,
  PlotLabel->FormBox["\"Collisions per Station\"", TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.9592164193459263`*^9},
 CellLabel->
  "Out[2890]=",ExpressionUUID->"d9a76452-b711-4b1e-ac2f-a17766a03161"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
     Thickness[Small]}], 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{2.5487982520029133, 0.}, {3.4512017479970867, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{3.5487982520029133, 0.}, {4.451201747997087, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{
    FormBox[
     TagBox["\"Station\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Successes\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0.39075018208302986`, 0.},
  BaseStyle->{FontFamily -> "Arial", FontSize -> 12},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Station 1\"", TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"Station 2\"", TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"Station 3\"", TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["\"Station 4\"", TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["\"Station 5\"", TraditionalForm], 0}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox["\"Station 6\"", TraditionalForm], 0}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox["\"Station 7\"", TraditionalForm], 0}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox["\"Station 8\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->500,
  PlotLabel->FormBox[
   "\"Successful Transmissions per Station\"", TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.959216419379545*^9},
 CellLabel->
  "Out[2891]=",ExpressionUUID->"a287b200-d129-41a0-b8d8-eb93ee46cd99"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Metric\"\>", "\<\"Throughput (Mbps)\"\>", "\<\"Theoretical Packet \
Rate\"\>", "\<\"Utilization (%)\"\>"},
    {"\<\"Theoretical Max\"\>", "3", "3", "\<\"N/A\"\>"},
    {"\<\"Simulation\"\>", "0.`", "\<\"N/A\"\>", "0.`"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       RGBColor[0.87, 0.94, 1], 
       RGBColor[1, 1, 0.85]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.959216419392703*^9},
 CellLabel->
  "Out[2893]=",ExpressionUUID->"a517df6b-9283-432e-9fb0-e69a876e89ce"],

Cell[BoxData[
 TemplateBox[{
  "processEvent", "shdw", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"processEvent\\\\\\\"\\\"}]\\) \
appears in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"EthernetSimulation`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Global`\\\\\\\"\\\"}], \\\"}\\\"}]\\); definitions in context \\!\
\\(\\*RowBox[{\\\"\\\\\\\"EthernetSimulation`\\\\\\\"\\\"}]\\) may shadow or \
be shadowed by other definitions.\"", 2, 732, 165, 19024688865372878773, 
   "Local", "EthernetSimulation`processEvent"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.959217349808864*^9},
 CellLabel->"",ExpressionUUID->"aafde64d-6edb-47e1-b604-a431ea4a498f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Half", "-", 
    RowBox[{"Duplex", " ", "Ethernet", " ", 
     RowBox[{"CSMA", "/", "CD"}], " ", "Simulation"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Simulation", " ", "parameters"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"nStations", "=", "5"}], ";"}], "            ", 
   RowBox[{"(*", 
    RowBox[{"Number", " ", "of", " ", "stations"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"tau", "=", "0.0001"}], ";"}], "             ", 
   RowBox[{"(*", 
    RowBox[{"Propagation", " ", "delay", " ", 
     RowBox[{"(", "seconds", ")"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"lambda", "=", "0.05"}], ";"}], "            ", 
   RowBox[{"(*", 
    RowBox[{
    "Packet", " ", "generation", " ", "rate", " ", "per", " ", "station", " ", 
     RowBox[{"(", 
      RowBox[{"packets", "/", "sec"}], ")"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"maxSlots", "=", "10000"}], ";"}], "         ", 
   RowBox[{"(*", 
    RowBox[{"Total", " ", "simulation", " ", "slots"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"backoffLimit", "=", "10"}], ";"}], "        ", 
   RowBox[{"(*", 
    RowBox[{"Maximum", " ", "backoff", " ", "exponent"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"packetTypes", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<DATA\>\"", "->", "1"}], ",", 
       RowBox[{"\"\<ACK\>\"", "->", "2"}]}], "|>"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Packet", " ", "type", " ", "identifiers"}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Initialize", " ", "stations"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"initStation", "[", "i_", "]"}], ":=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<ID\>\"", "->", "i"}], ",", 
       RowBox[{"\"\<Packet\>\"", "->", "None"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Current", " ", "packet"}], "*)"}], 
       RowBox[{"\"\<BackoffCount\>\"", "->", "0"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Collision", " ", "counter"}], "*)"}], 
       RowBox[{"\"\<BackoffTimer\>\"", "->", "0"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Backoff", " ", "slots", " ", "remaining"}], "*)"}], 
       RowBox[{"\"\<DataPacketsSent\>\"", "->", "0"}], ",", 
       RowBox[{"(*", "Statistics", "*)"}], 
       RowBox[{"\"\<AckPacketsSent\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<CollisionCount\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<RTTs\>\"", "->", 
        RowBox[{"{", "}"}]}]}], "|>"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"stations", "=", 
     RowBox[{"Association", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"i", "->", 
         RowBox[{"initStation", "[", "i", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"pendingACKs", "=", 
     RowBox[{"{", "}"}]}], ";"}], "                 ", 
   RowBox[{"(*", 
    RowBox[{"ACK", " ", "packets", " ", "to", " ", "be", " ", "generated"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"rttRecords", "=", 
     RowBox[{"{", "}"}]}], ";"}], "                  ", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"dataSlot", ",", "ackSlot", ",", "source", ",", "dest"}], "}"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"channelBusyUntil", "=", 
     RowBox[{"-", "Infinity"}]}], ";"}], "     ", 
   RowBox[{"(*", 
    RowBox[{"Medium", " ", "busy", " ", "state"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"simulationStats", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<TotalSlots\>\"", "->", "maxSlots"}], ",", 
       RowBox[{"\"\<IdleSlots\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<SuccessfulTransmissions\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<Collisions\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<GeneratedPackets\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<DroppedACKs\>\"", "->", "0"}]}], "|>"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Main", " ", "simulation", " ", "loop"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{"(*", 
      RowBox[{"Update", " ", "channel", " ", "state"}], "*)"}], 
     RowBox[{
      RowBox[{
       RowBox[{"currentTime", "=", 
        RowBox[{"slot", "*", "tau"}]}], ";", "\n", 
       RowBox[{"isChannelIdle", "=", 
        RowBox[{"currentTime", ">", "channelBusyUntil"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Generate", " ", "new", " ", "DATA", " ", "packets"}], "*)"}], 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"stations", "[", "i", "]"}], "[", "\"\<Packet\>\"", 
              "]"}], "===", "None"}], "&&", 
            RowBox[{
             RowBox[{"RandomReal", "[", "]"}], "<", 
             RowBox[{"lambda", "*", "tau"}]}]}], ",", 
           RowBox[{
            RowBox[{"dest", "=", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"i", ",", "nStations"}], "]"}], "+", "1"}]}], ";", 
            "\n", 
            RowBox[{
             RowBox[{
              RowBox[{"stations", "[", "i", "]"}], "[", "\"\<Packet\>\"", 
              "]"}], "=", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<ID\>\"", "->", 
                RowBox[{
                 RowBox[{
                 "simulationStats", "[", "\"\<GeneratedPackets\>\"", "]"}], 
                 "++"}]}], ",", 
               RowBox[{"\"\<Type\>\"", "->", "\"\<DATA\>\""}], ",", 
               RowBox[{"\"\<Source\>\"", "->", "i"}], ",", 
               RowBox[{"\"\<Destination\>\"", "->", "dest"}], ",", 
               RowBox[{"\"\<GenSlot\>\"", "->", "slot"}]}], "|>"}]}], ";", 
            "\n", 
            RowBox[{
             RowBox[{
              RowBox[{"stations", "[", "i", "]"}], "[", 
              "\"\<BackoffCount\>\"", "]"}], "=", "0"}], ";", "\n", 
            RowBox[{
             RowBox[{
              RowBox[{"stations", "[", "i", "]"}], "[", 
              "\"\<BackoffTimer\>\"", "]"}], "=", "0"}], ";"}]}], "]"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Process", " ", "pending", " ", "ACKs", " ", "from", " ", "previous", 
         " ", "slot"}], "*)"}], 
       RowBox[{"newACKs", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"ack", "[", "\"\<Destination\>\"", "]"}], "]"}], "[", 
             "\"\<Packet\>\"", "]"}], "===", "None"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"stations", "[", 
               RowBox[{"ack", "[", "\"\<Destination\>\"", "]"}], "]"}], "[", 
              "\"\<Packet\>\"", "]"}], "=", "ack"}], ";", "\n", 
            RowBox[{
             RowBox[{
              RowBox[{"stations", "[", 
               RowBox[{"ack", "[", "\"\<Destination\>\"", "]"}], "]"}], "[", 
              "\"\<BackoffCount\>\"", "]"}], "=", "0"}], ";", "\n", 
            RowBox[{
             RowBox[{
              RowBox[{"stations", "[", 
               RowBox[{"ack", "[", "\"\<Destination\>\"", "]"}], "]"}], "[", 
              "\"\<BackoffTimer\>\"", "]"}], "=", "0"}], ";"}]}], "]"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"ack", ",", "pendingACKs"}], "}"}]}], "]"}], ";", "\n", 
       RowBox[{"pendingACKs", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Find", " ", "ready", " ", "stations"}], "*)"}], 
       RowBox[{"readyStations", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"stations", "[", "i", "]"}], "[", "\"\<Packet\>\"", 
              "]"}], "=!=", "None"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{"stations", "[", "i", "]"}], "[", 
              "\"\<BackoffTimer\>\"", "]"}], "==", "0"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"readyStations", ",", "i"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Determine", " ", "channel", " ", "outcome"}], "*)"}], 
       RowBox[{"nReady", "=", 
        RowBox[{"Length", "[", "readyStations", "]"}]}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"nReady", "==", "0"}], ",", 
         RowBox[{
          RowBox[{"outcome", "=", "\"\<IDLE\>\""}], ";", "\n", 
          RowBox[{
           RowBox[{"simulationStats", "[", "\"\<IdleSlots\>\"", "]"}], 
           "++"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "Check", " ", "if", " ", "channel", " ", "is", " ", "idle", " ", 
           "at", " ", "transmission", " ", "attempt", " ", "time"}], "*)"}], 
         RowBox[{"If", "[", 
          RowBox[{"isChannelIdle", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"nReady", "==", "1"}], ",", 
             RowBox[{"outcome", "=", "\"\<SUCCESS\>\""}], ",", 
             RowBox[{"outcome", "=", "\"\<COLLISION\>\""}]}], "]"}], ",", 
           RowBox[{"outcome", "=", "\"\<BUSY\>\""}]}], "  ", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Channel", " ", "occupied"}], ",", 
            RowBox[{"no", " ", "transmission", " ", "attempt"}]}], "*)"}], 
          "]"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Process", " ", "transmission", " ", "outcomes"}], "*)"}], 
       RowBox[{"Switch", "[", 
        RowBox[{"outcome", ",", "\"\<SUCCESS\>\"", ",", 
         RowBox[{
          RowBox[{"i", "=", 
           RowBox[{"First", "[", "readyStations", "]"}]}], ";", "\n", 
          RowBox[{"pkt", "=", 
           RowBox[{
            RowBox[{"stations", "[", "i", "]"}], "[", "\"\<Packet\>\"", 
            "]"}]}], ";", "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"stations", "[", "i", "]"}], "[", "\"\<Packet\>\"", "]"}],
            "=", "None"}], ";", "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"stations", "[", "i", "]"}], "[", "\"\<BackoffCount\>\"", 
            "]"}], "=", "0"}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Record", " ", "successful", " ", "transmission"}], "*)"}], 
          RowBox[{
           RowBox[{
           "simulationStats", "[", "\"\<SuccessfulTransmissions\>\"", "]"}], 
           "++"}], ";", "\n", 
          RowBox[{"channelBusyUntil", "=", 
           RowBox[{"currentTime", "+", "tau"}]}], ";", 
          RowBox[{"(*", 
           RowBox[{"Packet", " ", "occupies", " ", "channel"}], "*)"}], 
          RowBox[{"(*", 
           RowBox[{
           "Generate", " ", "ACK", " ", "for", " ", "DATA", " ", "packets"}], 
           "*)"}], 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"pkt", "[", "\"\<Type\>\"", "]"}], "==", 
             "\"\<DATA\>\""}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", "i", "]"}], "[", 
               "\"\<DataPacketsSent\>\"", "]"}], "++"}], ";", "\n", 
             RowBox[{"ackPkt", "=", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<ID\>\"", "->", 
                 RowBox[{
                  RowBox[{
                  "simulationStats", "[", "\"\<GeneratedPackets\>\"", "]"}], 
                  "++"}]}], ",", 
                RowBox[{"\"\<Type\>\"", "->", "\"\<ACK\>\""}], ",", 
                RowBox[{"\"\<Source\>\"", "->", 
                 RowBox[{"pkt", "[", "\"\<Destination\>\"", "]"}]}], ",", 
                RowBox[{"\"\<Destination\>\"", "->", 
                 RowBox[{"pkt", "[", "\"\<Source\>\"", "]"}]}], ",", 
                RowBox[{"\"\<AckFor\>\"", "->", 
                 RowBox[{"pkt", "[", "\"\<ID\>\"", "]"}]}], ",", 
                RowBox[{"\"\<DataGenSlot\>\"", "->", 
                 RowBox[{"pkt", "[", "\"\<GenSlot\>\"", "]"}]}]}], "|>"}]}], 
             ";", "\n", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"pendingACKs", ",", "ackPkt"}], "]"}], ";"}]}], "  ", 
           RowBox[{"(*", 
            RowBox[{
            "Will", " ", "be", " ", "processed", " ", "next", " ", "slot"}], 
            "*)"}], "]"}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"pkt", "[", "\"\<Type\>\"", "]"}], "==", "\"\<ACK\>\""}],
             ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", "i", "]"}], "[", 
               "\"\<AckPacketsSent\>\"", "]"}], "++"}], ";", "\n", 
             RowBox[{"(*", 
              RowBox[{"Record", " ", 
               RowBox[{"RTT", ":", 
                RowBox[{"currentSlot", "-", "dataGenSlot"}]}]}], "*)"}], 
             RowBox[{"rtt", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"slot", "-", 
                 RowBox[{"pkt", "[", "\"\<DataGenSlot\>\"", "]"}]}], ")"}], 
               "*", "tau"}]}], ";", "\n", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"rttRecords", ",", 
               RowBox[{"<|", 
                RowBox[{
                 RowBox[{"\"\<DataSlot\>\"", "->", 
                  RowBox[{"pkt", "[", "\"\<DataGenSlot\>\"", "]"}]}], ",", 
                 RowBox[{"\"\<AckSlot\>\"", "->", "slot"}], ",", 
                 RowBox[{"\"\<Source\>\"", "->", 
                  RowBox[{"pkt", "[", "\"\<Destination\>\"", "]"}]}], ",", 
                 RowBox[{"\"\<Destination\>\"", "->", 
                  RowBox[{"pkt", "[", "\"\<Source\>\"", "]"}]}], ",", 
                 RowBox[{"\"\<RTT\>\"", "->", "rtt"}]}], "|>"}]}], "]"}], 
             ";"}]}], "]"}]}], ",", "\"\<COLLISION\>\"", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"simulationStats", "[", "\"\<Collisions\>\"", "]"}], 
           "++"}], ";", "\n", 
          RowBox[{"channelBusyUntil", "=", 
           RowBox[{"currentTime", "+", "tau"}]}], ";", 
          RowBox[{"(*", 
           RowBox[{"Collision", " ", "jams", " ", "channel"}], "*)"}], 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", "station", "]"}], "[", 
               "\"\<BackoffCount\>\"", "]"}], "=", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"stations", "[", "station", "]"}], "[", 
                  "\"\<BackoffCount\>\"", "]"}], "+", "1"}], ",", 
                "backoffLimit"}], "]"}]}], ";", "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", "station", "]"}], "[", 
               "\"\<BackoffTimer\>\"", "]"}], "=", 
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"2", "^", 
                   RowBox[{
                    RowBox[{"stations", "[", "station", "]"}], "[", 
                    "\"\<BackoffCount\>\"", "]"}]}], "-", "1"}]}], "}"}], 
               "]"}]}], ";", "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", "station", "]"}], "[", 
               "\"\<CollisionCount\>\"", "]"}], "++"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"station", ",", "readyStations"}], "}"}]}], "]"}]}], 
         ",", "\"\<BUSY\>\"", ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Do", " ", "nothing"}], ",", 
           RowBox[{"channel", " ", "occupied"}]}], "*)"}], "\"\<IDLE\>\""}], 
        "  ", 
        RowBox[{"(*", 
         RowBox[{"Already", " ", "counted", " ", "in", " ", "stats"}], "*)"}],
         "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Update", " ", "backoff", " ", "timers", " ", "during", " ", "idle", 
         " ", "slots"}], "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"outcome", "==", "\"\<IDLE\>\""}], ",", 
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"stations", "[", "i", "]"}], "[", "\"\<Packet\>\"", 
                 "]"}], "=!=", "None"}], "&&", 
               RowBox[{
                RowBox[{
                 RowBox[{"stations", "[", "i", "]"}], "[", 
                 "\"\<BackoffTimer\>\"", "]"}], ">", "0"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"stations", "[", "i", "]"}], "[", 
                "\"\<BackoffTimer\>\"", "]"}], "--"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"slot", ",", "0", ",", 
        RowBox[{"maxSlots", "-", "1"}]}], "}"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Simulation", " ", "Analysis", " ", "Functions"}], "*)"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"1.", " ", "Channel", " ", "Utilization", " ", "Plot"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"utilization", "=", 
     RowBox[{
      RowBox[{"N", "@", 
       RowBox[{
       "simulationStats", "[", "\"\<SuccessfulTransmissions\>\"", "]"}]}], 
      "/", "maxSlots"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"channelStats", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Idle\>\"", "->", 
        RowBox[{"simulationStats", "[", "\"\<IdleSlots\>\"", "]"}]}], ",", 
       RowBox[{"\"\<Successful\>\"", "->", 
        RowBox[{
        "simulationStats", "[", "\"\<SuccessfulTransmissions\>\"", "]"}]}], 
       ",", 
       RowBox[{"\"\<Collisions\>\"", "->", 
        RowBox[{"simulationStats", "[", "\"\<Collisions\>\"", "]"}]}], ",", 
       RowBox[{"\"\<Busy\>\"", "->", 
        RowBox[{"maxSlots", "-", 
         RowBox[{"simulationStats", "[", "\"\<IdleSlots\>\"", "]"}]}]}]}], 
      "|>"}]}], ";"}], "\n", "\n", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Idle Slots\>\"", "->", 
        RowBox[{"channelStats", "[", "\"\<Idle\>\"", "]"}]}], ",", 
       RowBox[{"\"\<Successful Transmissions\>\"", "->", 
        RowBox[{"channelStats", "[", "\"\<Successful\>\"", "]"}]}], ",", 
       RowBox[{"\"\<Collisions\>\"", "->", 
        RowBox[{"channelStats", "[", "\"\<Collisions\>\"", "]"}]}]}], "|>"}], 
     ",", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Channel Utilization Breakdown\>\"", ",", "16", ",", "Bold"}], 
       "]"}]}], ",", 
     RowBox[{"ChartLabels", "->", 
      RowBox[{"{", "\"\<Slot Type\>\"", "}"}]}], ",", 
     RowBox[{"ChartLegends", "->", "Automatic"}], ",", 
     RowBox[{"ChartStyle", "->", 
      RowBox[{"{", 
       RowBox[{"LightBlue", ",", "LightGreen", ",", "LightRed"}], "}"}]}], 
     ",", 
     RowBox[{"ImageSize", "->", "500"}]}], "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"2.", " ", "RTT", " ", "Analysis"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "rttRecords", "]"}], ">", "0"}], ",", 
      RowBox[{
       RowBox[{"rttValues", "=", 
        RowBox[{"rttRecords", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "\"\<RTT\>\""}], "]"}], "]"}]}], ";", "\n", 
       RowBox[{"avgRTT", "=", 
        RowBox[{"Mean", "[", "rttValues", "]"}]}], ";", "\n", 
       RowBox[{"minRTT", "=", 
        RowBox[{"Min", "[", "rttValues", "]"}]}], ";", "\n", 
       RowBox[{"maxRTT", "=", 
        RowBox[{"Max", "[", "rttValues", "]"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"RTT", " ", "Histogram"}], "*)"}], 
       RowBox[{"Histogram", "[", 
        RowBox[{"rttValues", ",", "20", ",", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Round-Trip Time Distribution\>\"", ",", "16", ",", "Bold"}], 
           "]"}]}], ",", 
         RowBox[{"AxesLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<RTT (seconds)\>\"", ",", "\"\<Count\>\""}], "}"}]}], 
         ",", 
         RowBox[{"ImageSize", "->", "500"}], ",", 
         RowBox[{"ChartStyle", "->", "LightBlue"}], ",", 
         RowBox[{"PlotRange", "->", "All"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"RTT", " ", "vs", " ", "Slot", " ", "Time"}], "*)"}], 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rttRecords", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<DataSlot\>\"", ",", "\"\<RTT\>\""}], "}"}]}], 
             "]"}], "]"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"3", "*", "tau"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "0", ",", "maxSlots", ",", 
               RowBox[{"maxSlots", "/", "10"}]}], "}"}]}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<RTT vs Transmission Time\>\"", ",", "16", ",", "Bold"}], 
           "]"}]}], ",", 
         RowBox[{"PlotRange", "->", "All"}], ",", 
         RowBox[{"AxesLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<Slot Number\>\"", ",", "\"\<RTT (seconds)\>\""}], 
           "}"}]}], ",", 
         RowBox[{"PlotLegends", "->", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Simulated RTT\>\"", ",", 
            "\"\<Theoretical Minimum (3\[Tau])\>\""}], "}"}]}], ",", 
         RowBox[{"ImageSize", "->", "500"}], ",", 
         RowBox[{"PlotStyle", "->", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"{", 
             RowBox[{"Red", ",", "Dashed"}], "}"}]}], "}"}]}]}], "]"}]}], ",", 
      RowBox[{
      "Print", "[", "\"\<No RTT records captured during simulation\>\"", 
       "]"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"3.", " ", "Collision", " ", "Analysis"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"collisionCounts", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"stations", "[", "i", "]"}], "[", "\"\<CollisionCount\>\"", 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}], ";"}], "\n", "\n", 
   
   RowBox[{"BarChart", "[", 
    RowBox[{"collisionCounts", ",", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Collisions per Station\>\"", ",", "16", ",", "Bold"}], 
       "]"}]}], ",", 
     RowBox[{"ChartLabels", "->", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"\"\<Station \>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"ChartStyle", "->", "\"\<TemperatureMap\>\""}], ",", 
     RowBox[{"ImageSize", "->", "500"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Station ID\>\"", ",", "\"\<Collision Count\>\""}], 
       "}"}]}]}], "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Output", " ", "simulation", " ", "statistics"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Simulation Statistics:\>\"", "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", "simulationStats", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\\nAverage RTT: \>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "rttRecords", "]"}], ">", "0"}], ",", 
        "avgRTT", ",", "\"\<N/A\>\""}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Minimum RTT: \>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "rttRecords", "]"}], ">", "0"}], ",", 
        "minRTT", ",", "\"\<N/A\>\""}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Maximum RTT: \>\"", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "rttRecords", "]"}], ">", "0"}], ",", 
        "maxRTT", ",", "\"\<N/A\>\""}], "]"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.959216552723679*^9, 3.959216552724979*^9}},
 CellLabel->
  "In[3605]:=",ExpressionUUID->"4efc44e2-2f98-4d90-85b0-66b6483d58fd"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{-0.4116533139111435, 0.}, {4.35360524399126, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6789999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[0.87, 0.94, 1]], 
         TagBox[
          TooltipBox[
           TagBox[
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             9997.}, "RoundingRadius" -> 0], StatusArea[#, 9997]& , 
            TagBoxNote -> "9997"], 
           StyleBox["9997", {}, StripOnInput -> False]], Annotation[#, 
           Style[9997, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[0.88, 1, 0.88]], 
         TagBox[
          TooltipBox[
           TagBox[
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 2.},
              "RoundingRadius" -> 0], StatusArea[#, 2]& , TagBoxNote -> "2"], 
           
           StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
           Style[2, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[1, 0.85, 0.85]], 
         TagBox[
          TooltipBox[
           TagBox[
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 0.},
              "RoundingRadius" -> 0], StatusArea[#, 0]& , TagBoxNote -> "0"], 
           
           StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
           Style[0, {}], "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.4116533139111435, 0.}, 
     BaseStyle -> {FontFamily -> "Avenir", FontSize -> 12}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, Frame -> True, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {{{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox["\"Slot Type\"", TraditionalForm], 0}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}, {{
         1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 500, PlotLabel -> FormBox[
       StyleBox[
       "\"Channel Utilization Breakdown\"", 16, Bold, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Idle Slots\"", "\"Successful Transmissions\"", "\"Collisions\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[0.87, 0.94, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[0.88, 1, 0.88]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.87, 0.94, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.88, 1, 0.88]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.85, 0.85]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.959216553110565*^9},
 CellLabel->
  "Out[3621]=",ExpressionUUID->"6f5ba634-2164-4c4f-881f-16d2ec139e6e"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.45075018208302986`, 0.}, {5.451201747997087, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6649999999999999], Thickness[Small]}], 
     {RGBColor[0.178927, 0.305394, 0.933501], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.642359, 0.720535, 0.964988], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.984192, 0.987731, 0.911643], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{2.5487982520029133, 0.}, {3.4512017479970867, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.955963, 0.863115, 0.283425], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{3.5487982520029133, 0.}, {4.451201747997087, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.817319, 0.134127, 0.164218], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{
    FormBox[
     TagBox["\"Station ID\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Collision Count\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0.45075018208302986`, 0.},
  BaseStyle->{FontFamily -> "Avenir", FontSize -> 12},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Station 1\"", TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"Station 2\"", TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"Station 3\"", TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["\"Station 4\"", TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["\"Station 5\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->500,
  PlotLabel->FormBox[
    StyleBox["\"Collisions per Station\"", 16, Bold, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.959216553159162*^9},
 CellLabel->
  "Out[3624]=",ExpressionUUID->"bc6fc263-98e8-4171-9f86-362a81c7b8ea"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Simulation Statistics:\"\>"], "Print",
 CellChangeTimes->{3.959216553166033*^9},
 CellLabel->
  "During evaluation of \
In[3605]:=",ExpressionUUID->"ab824785-bd0e-409e-86a2-ed473263f044"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"TotalSlots\"\>", "\[Rule]", "10000"}], ",", 
   RowBox[{"\<\"IdleSlots\"\>", "\[Rule]", "9997"}], ",", 
   RowBox[{"\<\"SuccessfulTransmissions\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"Collisions\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"GeneratedPackets\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"DroppedACKs\"\>", "\[Rule]", "0"}]}], 
  "\[RightAssociation]"}]], "Print",
 CellChangeTimes->{3.959216553166535*^9},
 CellLabel->
  "During evaluation of \
In[3605]:=",ExpressionUUID->"d39e1f9a-7f3a-49ff-a451-40def6b79c8c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nAverage RTT: \"\>", "\[InvisibleSpace]", "0.0002`"}],
  SequenceForm["\nAverage RTT: ", 0.0002],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216553167204*^9},
 CellLabel->
  "During evaluation of \
In[3605]:=",ExpressionUUID->"8fa61928-e409-4e8e-aaef-2b2456e6f49e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Minimum RTT: \"\>", "\[InvisibleSpace]", "0.0002`"}],
  SequenceForm["Minimum RTT: ", 0.0002],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216553167556*^9},
 CellLabel->
  "During evaluation of \
In[3605]:=",ExpressionUUID->"54202ca6-ea3d-498b-a28c-08b76300ce9c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Maximum RTT: \"\>", "\[InvisibleSpace]", "0.0002`"}],
  SequenceForm["Maximum RTT: ", 0.0002],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216553167894*^9},
 CellLabel->
  "During evaluation of \
In[3605]:=",ExpressionUUID->"66ca73f3-49de-49c5-b771-66b6010a9505"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Ethernet", " ", 
    RowBox[{"CSMA", "/", "CD"}], " ", "Simulator"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{"(*", 
    RowBox[{"SIMULATION", " ", "PARAMETERS"}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"bitRate", "=", "10.0*^6"}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{"10", " ", "Mbps", " ", "Ethernet"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"slotTime", "=", 
     RowBox[{"512", "/", "bitRate"}]}], ";"}], "     ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"51.2", " ", "\[Mu]s"}], "-", 
     RowBox[{"fundamental", " ", "time", " ", "unit"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"maxPropDelay", "=", 
     RowBox[{"slotTime", "/", "2"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"25.6", " ", "\[Mu]s"}], "-", 
     RowBox[{"max", " ", "propagation", " ", "delay"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"jamDuration", "=", 
     RowBox[{"32", "/", "bitRate"}]}], ";"}], "   ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"3.2", " ", "\[Mu]s"}], "-", 
     RowBox[{"jam", " ", "signal", " ", "duration"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"minPacketSize", "=", "512"}], ";"}], "        ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"64", " ", "bytes"}], "=", 
     RowBox[{"512", " ", "bits"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"maxPacketSize", "=", "12000"}], ";"}], "      ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"1500", " ", "bytes"}], "=", 
     RowBox[{"12000", " ", "bits"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"ackSize", "=", "512"}], ";"}], "              ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"64", " ", "bytes"}], "=", 
     RowBox[{"512", " ", "bits"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"processingDelay", "=", "100*^-6"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"100", " ", "\[Mu]s", " ", "receiver", " ", "processing"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"simulationTime", "=", "0.1"}], ";"}], "       ", 
   RowBox[{"(*", 
    RowBox[{"0.1", " ", "seconds", " ", "simulation", " ", "time"}], "*)"}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{"(*", 
    RowBox[{"STATION", " ", "CONFIGURATION"}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"nStations", "=", "5"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{
    "Number", " ", "of", " ", "stations", " ", "on", " ", "the", " ", 
     "network"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"stationPositions", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "100"}], "}"}], ",", "nStations"}], "]"}]}], ";"}], 
   "  ", 
   RowBox[{"(*", 
    RowBox[{"Physical", " ", "positions"}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Calculate", " ", "propagation", " ", "delay", " ", "between", " ", 
     "stations"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"propDelay", "[", 
      RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"stationPositions", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "-", 
        RowBox[{"stationPositions", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "/", 
      RowBox[{"(", "2*^8", ")"}]}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{"(*", 
    RowBox[{"EVENT", "-", 
     RowBox[{"DRIVINE", " ", "SIMULATOR"}]}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"events", "=", 
     RowBox[{"{", "}"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Sorted", " ", "event", " ", 
     RowBox[{"queue", ":", 
      RowBox[{"{", 
       RowBox[{"time", ",", "type", ",", "station", ",", "packet"}], 
       "}"}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"busBusyUntil", "=", "0"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Time", " ", "when", " ", "bus", " ", "becomes", " ", "idle"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"activeTransmissions", "=", 
     RowBox[{"{", "}"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"startTime", ",", "station", ",", "packet"}], "}"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"stats", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<throughput\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<collisions\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<successes\>\"", "->", "0"}]}], "|>"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"tcpFlows", "=", 
     RowBox[{"{", "}"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"dataSentTime", ",", "ackReceivedTime", ",", "rtt"}], "}"}], 
    "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Event", " ", 
      RowBox[{"types", ":", "\"\<PacketArrival\>\""}]}], ",", 
     "\"\<StartTransmission\>\"", ",", "\"\<CollisionDetect\>\"", ",", 
     "\"\<DeferredStart\>\"", ",", "\"\<PacketDelivered\>\""}], "*)"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Schedule", " ", "new", " ", "event"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ScheduleEvent", "[", 
      RowBox[{"time_", ",", "type_", ",", "station_", ",", "packet_"}], "]"}],
      ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "newEvent", "}"}], ",", 
       RowBox[{
        RowBox[{"newEvent", "=", 
         RowBox[{"{", 
          RowBox[{"time", ",", "type", ",", "station", ",", "packet"}], 
          "}"}]}], ";", "\n", 
        RowBox[{"events", "=", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Insert", "[", 
            RowBox[{"events", ",", "newEvent", ",", 
             RowBox[{"1", "+", 
              RowBox[{"LengthWhile", "[", 
               RowBox[{"events", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "<=", "time"}], "&"}]}], 
               "]"}]}]}], "]"}], ",", "First"}], "]"}]}]}]}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Generate", " ", "new", " ", "packet"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"NewPacket", "[", 
      RowBox[{
      "station_", ",", "dest_", ",", "size_", ",", "type_", ",", 
       "createTime_"}], "]"}], ":=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<id\>\"", "->", 
        RowBox[{"Unique", "[", "\"\<pkt\>\"", "]"}]}], ",", 
       RowBox[{"\"\<source\>\"", "->", "station"}], ",", 
       RowBox[{"\"\<dest\>\"", "->", "dest"}], ",", 
       RowBox[{"\"\<size\>\"", "->", "size"}], ",", 
       RowBox[{"\"\<type\>\"", "->", "type"}], ",", 
       RowBox[{"\"\<createTime\>\"", "->", "createTime"}], ",", 
       RowBox[{"\"\<backoffCount\>\"", "->", "0"}]}], "|>"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{"(*", 
    RowBox[{"STATION", " ", "LOGIC"}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"StartSending", "[", 
      RowBox[{"station_", ",", "packet_", ",", "currentTime_"}], "]"}], ":=", 
     
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"packetDuration", "=", 
          RowBox[{
           RowBox[{"packet", "[", "\"\<size\>\"", "]"}], "/", "bitRate"}]}], 
         ",", 
         RowBox[{"jamTime", "=", 
          RowBox[{"maxPropDelay", "+", "jamDuration"}]}], ",", 
         "newBusyUntil"}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "new", " ", "bus", " ", "busy", " ", "time"}], 
        "*)"}], 
       RowBox[{
        RowBox[{"newBusyUntil", "=", 
         RowBox[{"Max", "[", 
          RowBox[{"busBusyUntil", ",", 
           RowBox[{"currentTime", "+", 
            RowBox[{"Max", "[", 
             RowBox[{"packetDuration", ",", "jamTime"}], "]"}], "+", 
            "maxPropDelay"}]}], "]"}]}], ";", "\n", 
        RowBox[{"busBusyUntil", "=", "newBusyUntil"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Add", " ", "to", " ", "active", " ", "transmissions"}], 
         "*)"}], 
        RowBox[{"AppendTo", "[", 
         RowBox[{"activeTransmissions", ",", 
          RowBox[{"{", 
           RowBox[{"currentTime", ",", "station", ",", "packet"}], "}"}]}], 
         "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Schedule", " ", "collision", " ", "detection"}], "*)"}], 
        RowBox[{"ScheduleEvent", "[", 
         RowBox[{
          RowBox[{"currentTime", "+", "maxPropDelay"}], ",", 
          "\"\<CollisionDetect\>\"", ",", "station", ",", "packet"}], "]"}], 
        ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ProcessCollision", "[", 
      RowBox[{"station_", ",", "packet_", ",", "currentTime_"}], "]"}], ":=", 
     
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"backoffSlots", ",", "backoffTime", ",", 
         RowBox[{"k", "=", 
          RowBox[{"packet", "[", "\"\<backoffCount\>\"", "]"}]}]}], "}"}], 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{"stats", "[", "\"\<collisions\>\"", "]"}], "++"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Exponential", " ", "backoff"}], "*)"}], 
        RowBox[{"k", "=", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"k", "+", "1"}], ",", "10"}], "]"}]}], ";", "\n", 
        RowBox[{"backoffSlots", "=", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"2", "^", "k"}], "-", "1"}]}], "}"}], "]"}]}], ";", "\n", 
        RowBox[{"backoffTime", "=", 
         RowBox[{"backoffSlots", "*", "slotTime"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"packet", "[", "\"\<backoffCount\>\"", "]"}], "=", "k"}], 
        ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Reschedule", " ", "transmission"}], "*)"}], 
        RowBox[{"ScheduleEvent", "[", 
         RowBox[{
          RowBox[{"currentTime", "+", "backoffTime"}], ",", 
          "\"\<DeferredStart\>\"", ",", "station", ",", "packet"}], "]"}], 
        ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Remove", " ", "from", " ", "active", " ", "transmissions"}],
          "*)"}], 
        RowBox[{"activeTransmissions", "=", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"activeTransmissions", ",", 
           RowBox[{"{", 
            RowBox[{"_", ",", "station", ",", "packet"}], "}"}]}], "]"}]}], 
        ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ProcessSuccess", "[", 
      RowBox[{"station_", ",", "packet_", ",", "currentTime_"}], "]"}], ":=", 
     
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"deliveryTime", "=", 
         RowBox[{"currentTime", "+", 
          RowBox[{"propDelay", "[", 
           RowBox[{"station", ",", 
            RowBox[{"packet", "[", "\"\<dest\>\"", "]"}]}], "]"}], "+", 
          RowBox[{
           RowBox[{"packet", "[", "\"\<size\>\"", "]"}], "/", "bitRate"}]}]}],
         "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"stats", "[", "\"\<successes\>\"", "]"}], "++"}], ";", "\n", 
        
        RowBox[{
         RowBox[{"stats", "[", "\"\<throughput\>\"", "]"}], "+=", 
         RowBox[{"packet", "[", "\"\<size\>\"", "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Remove", " ", "from", " ", "active", " ", "transmissions"}],
          "*)"}], 
        RowBox[{"activeTransmissions", "=", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"activeTransmissions", ",", 
           RowBox[{"{", 
            RowBox[{"_", ",", "station", ",", "packet"}], "}"}]}], "]"}]}], 
        ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Schedule", " ", "delivery"}], "*)"}], 
        RowBox[{"ScheduleEvent", "[", 
         RowBox[{"deliveryTime", ",", "\"\<PacketDelivered\>\"", ",", 
          RowBox[{"packet", "[", "\"\<dest\>\"", "]"}], ",", "packet"}], 
         "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", " ", "data", " ", "packet"}], ",", 
          RowBox[{"schedule", " ", "ACK", " ", "generation"}]}], "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"packet", "[", "\"\<type\>\"", "]"}], "==", 
           "\"\<DATA\>\""}], ",", 
          RowBox[{"ScheduleEvent", "[", 
           RowBox[{
            RowBox[{"deliveryTime", "+", "processingDelay"}], ",", 
            "\"\<GenerateACK\>\"", ",", 
            RowBox[{"packet", "[", "\"\<dest\>\"", "]"}], ",", "packet"}], 
           "]"}]}], "]"}], ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{"(*", 
    RowBox[{"MAIN", " ", "EVENT", " ", "LOOP"}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InitializeSimulation", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "packet", ",", "dest"}], "}"}], ",", 
       RowBox[{
        RowBox[{"events", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"activeTransmissions", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"busBusyUntil", "=", "0"}], ";", "\n", 
        RowBox[{
         RowBox[{"stats", "[", "\"\<throughput\>\"", "]"}], "=", "0"}], ";", 
        "\n", 
        RowBox[{
         RowBox[{"stats", "[", "\"\<collisions\>\"", "]"}], "=", "0"}], ";", 
        "\n", 
        RowBox[{
         RowBox[{"stats", "[", "\"\<successes\>\"", "]"}], "=", "0"}], ";", 
        "\n", 
        RowBox[{"tcpFlows", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Schedule", " ", "initial", " ", "packets"}], "*)"}], 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dest", "=", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "nStations"}], "}"}], "]"}]}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"dest", "!=", "i"}], ",", 
             RowBox[{
              RowBox[{"packet", "=", 
               RowBox[{"NewPacket", "[", 
                RowBox[{"i", ",", "dest", ",", 
                 RowBox[{"RandomInteger", "[", 
                  RowBox[{"{", 
                   RowBox[{"minPacketSize", ",", "maxPacketSize"}], "}"}], 
                  "]"}], ",", "\"\<DATA\>\"", ",", "0"}], "]"}]}], ";", "\n", 
              
              RowBox[{"ScheduleEvent", "[", 
               RowBox[{
               "0", ",", "\"\<PacketArrival\>\"", ",", "i", ",", "packet"}], 
               "]"}], ";"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";"}]}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RunSimulation", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "currentEvent", ",", "time", ",", "type", ",", "station", ",", 
         "packet", ",", "otherStations", ",", "collisionDetected", ",", 
         "deliveryTime"}], "}"}], ",", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"events", "=!=", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"events", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], "<=", 
             "simulationTime"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"time", ",", "type", ",", "station", ",", "packet"}], 
             "}"}], "=", 
            RowBox[{"currentEvent", "=", 
             RowBox[{"First", "[", "events", "]"}]}]}], ";", "\n", 
           RowBox[{"events", "=", 
            RowBox[{"Rest", "[", "events", "]"}]}], ";", "\n", 
           RowBox[{"Switch", "[", 
            RowBox[{"type", ",", "\"\<PacketArrival\>\"", ",", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"If", " ", "bus", " ", "idle"}], ",", 
               RowBox[{"start", " ", "transmitting", " ", "immediately"}]}], 
              "*)"}], 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"time", ">=", "busBusyUntil"}], ",", 
               RowBox[{"StartSending", "[", 
                RowBox[{"station", ",", "packet", ",", "time"}], "]"}], ",", 
               RowBox[{"(*", 
                RowBox[{
                "Else", " ", "defer", " ", "until", " ", "bus", " ", "free"}],
                 "*)"}], 
               RowBox[{"ScheduleEvent", "[", 
                RowBox[{
                "busBusyUntil", ",", "\"\<DeferredStart\>\"", ",", "station", 
                 ",", "packet"}], "]"}]}], "]"}], ",", 
             "\"\<DeferredStart\>\"", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"time", ">=", "busBusyUntil"}], ",", 
               RowBox[{"StartSending", "[", 
                RowBox[{"station", ",", "packet", ",", "time"}], "]"}], ",", 
               RowBox[{"ScheduleEvent", "[", 
                RowBox[{
                "busBusyUntil", ",", "\"\<DeferredStart\>\"", ",", "station", 
                 ",", "packet"}], "]"}]}], "]"}], ",", 
             "\"\<StartTransmission\>\"", ",", 
             RowBox[{"StartSending", "[", 
              RowBox[{"station", ",", "packet", ",", "time"}], "]"}], ",", 
             "\"\<CollisionDetect\>\"", ",", 
             RowBox[{"(*", 
              RowBox[{"Check", " ", "for", " ", "collisions"}], "*)"}], 
             RowBox[{
              RowBox[{"collisionDetected", "=", "False"}], ";", "\n", 
              RowBox[{"Do", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"otherStation", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "!=", "station"}], "&&", 
                   RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"otherStation", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "time"}], "]"}], "<",
                     "maxPropDelay"}]}], ",", 
                  RowBox[{
                   RowBox[{"collisionDetected", "=", "True"}], ";", "\n", 
                   RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"otherStation", ",", "activeTransmissions"}], 
                 "}"}]}], "]"}], ";", "\n", 
              RowBox[{"If", "[", 
               RowBox[{"collisionDetected", ",", 
                RowBox[{"ProcessCollision", "[", 
                 RowBox[{"station", ",", "packet", ",", "time"}], "]"}], ",", 
                
                RowBox[{"ProcessSuccess", "[", 
                 RowBox[{"station", ",", "packet", ",", "time"}], "]"}]}], 
               "]"}]}], ",", "\"\<PacketDelivered\>\"", ",", 
             RowBox[{"(*", 
              RowBox[{"Record", " ", "successful", " ", "delivery"}], "*)"}], 
             
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"packet", "[", "\"\<type\>\"", "]"}], "==", 
                "\"\<DATA\>\""}], ",", 
               RowBox[{"Print", "[", 
                RowBox[{"\"\<Data packet \>\"", ",", 
                 RowBox[{"packet", "[", "\"\<id\>\"", "]"}], ",", 
                 "\"\< delivered to station \>\"", ",", "station", ",", 
                 "\"\< at \>\"", ",", 
                 RowBox[{"time", "*", "1000"}], ",", "\"\< ms\>\""}], "]"}]}],
               "]"}], ",", "\"\<GenerateACK\>\"", ",", 
             RowBox[{"(*", 
              RowBox[{"Create", " ", "and", " ", "send", " ", "ACK"}], "*)"}], 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", "ackPacket", "}"}], ",", 
               RowBox[{
                RowBox[{"ackPacket", "=", 
                 RowBox[{"NewPacket", "[", 
                  RowBox[{"station", ",", 
                   RowBox[{"packet", "[", "\"\<source\>\"", "]"}], ",", 
                   "ackSize", ",", "\"\<ACK\>\"", ",", "time"}], "]"}]}], ";",
                 "\n", 
                RowBox[{
                 RowBox[{"ackPacket", "[", "\"\<dataPacketId\>\"", "]"}], "=", 
                 RowBox[{"packet", "[", "\"\<id\>\"", "]"}]}], ";", "\n", 
                RowBox[{
                 RowBox[{"ackPacket", "[", "\"\<dataCreateTime\>\"", "]"}], 
                 "=", 
                 RowBox[{"packet", "[", "\"\<createTime\>\"", "]"}]}], ";", 
                "\n", 
                RowBox[{"ScheduleEvent", "[", 
                 RowBox[{
                 "time", ",", "\"\<PacketArrival\>\"", ",", "station", ",", 
                  "ackPacket"}], "]"}], ";"}]}], "]"}], ",", "_", ",", 
             RowBox[{"Print", "[", 
              RowBox[{"\"\<Unknown event type: \>\"", ",", "type"}], "]"}]}], 
            "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Calculate", " ", "final", " ", "statistics"}], "*)"}], 
        RowBox[{
         RowBox[{"stats", "[", "\"\<throughput\>\"", "]"}], "=", 
         RowBox[{
          RowBox[{"stats", "[", "\"\<throughput\>\"", "]"}], "/", 
          "simulationTime"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{"bits", "/", "sec"}], "*)"}], 
        RowBox[{
         RowBox[{"stats", "[", "\"\<utilization\>\"", "]"}], "=", 
         RowBox[{
          RowBox[{"stats", "[", "\"\<throughput\>\"", "]"}], "/", 
          "bitRate"}]}], ";", "\n", "stats"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{"(*", 
    RowBox[{"TCP", " ", "RTT", " ", "SIMULATION"}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SimulateTCPFlow", "[", 
      RowBox[{"src_", ",", "dest_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"packet", ",", 
         RowBox[{"ackReceived", "=", "False"}], ",", "startTime", ",", 
         "rtt"}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Create", " ", "data", " ", "packet"}], "*)"}], 
       RowBox[{
        RowBox[{"packet", "=", 
         RowBox[{"NewPacket", "[", 
          RowBox[{
          "src", ",", "dest", ",", "maxPacketSize", ",", "\"\<DATA\>\"", ",", 
           "0"}], "]"}]}], ";", "\n", 
        RowBox[{"startTime", "=", "0"}], ";", "\n", 
        RowBox[{"ScheduleEvent", "[", 
         RowBox[{
         "0", ",", "\"\<PacketArrival\>\"", ",", "src", ",", "packet"}], 
         "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Run", " ", "simulation"}], "*)"}], 
        RowBox[{"InitializeSimulation", "[", "]"}], ";", "\n", 
        RowBox[{"RunSimulation", "[", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Find", " ", "ACK", " ", "for", " ", "this", " ", "packet"}],
          "*)"}], 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"event", "[", 
               RowBox[{"[", 
                RowBox[{"4", ",", "\"\<type\>\""}], "]"}], "]"}], "==", 
              "\"\<ACK\>\""}], "&&", 
             RowBox[{
              RowBox[{"event", "[", 
               RowBox[{"[", 
                RowBox[{"4", ",", "\"\<dataPacketId\>\""}], "]"}], "]"}], "===", 
              RowBox[{"packet", "[", "\"\<id\>\"", "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"rtt", "=", 
              RowBox[{
               RowBox[{"event", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"packet", "[", "\"\<createTime\>\"", "]"}]}]}], ";", 
             "\n", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"tcpFlows", ",", 
               RowBox[{"{", 
                RowBox[{"startTime", ",", 
                 RowBox[{"event", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "rtt"}], "}"}]}], 
              "]"}], ";", "\n", 
             RowBox[{"ackReceived", "=", "True"}], ";", "\n", 
             RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"event", ",", "events"}], "}"}]}], "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", "ackReceived"}], ",", 
          RowBox[{
          "Print", "[", "\"\<ACK not received within simulation time\>\"", 
           "]"}]}], "]"}], ";", "\n", "rtt"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{"(*", "VISUALIZATION", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"VisualizeNetwork", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "nodes", ",", "edges", ",", "collisions", ",", "successes", ",", 
         "throughput"}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Create", " ", "station", " ", "nodes"}], "*)"}], 
       RowBox[{
        RowBox[{"nodes", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Tooltip", "[", 
            RowBox[{
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"stationPositions", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "}"}], "]"}], 
             ",", 
             RowBox[{"\"\<Station \>\"", "<>", 
              RowBox[{"ToString", "[", "i", "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Create", " ", "collision", " ", "indicators"}], "*)"}], 
        RowBox[{"collisions", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"stationPositions", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"-", "0.1"}]}], "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"stats", "[", "\"\<collisions\>\"", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Create", " ", "success", " ", "indicators"}], "*)"}], 
        RowBox[{"successes", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Green", ",", 
             RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"stationPositions", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"-", "0.2"}]}], "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"stats", "[", "\"\<successes\>\"", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"(*", "Visualization", "*)"}], 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Gray", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"100", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"(*", 
             RowBox[{"Bus", " ", "cable"}], "*)"}], 
            RowBox[{"{", 
             RowBox[{"Black", ",", 
              RowBox[{"PointSize", "[", "0.05", "]"}], ",", "nodes"}], "}"}], 
            ",", 
            RowBox[{"(*", "Stations", "*)"}], "collisions", ",", 
            RowBox[{"(*", 
             RowBox[{"Collision", " ", "indicators"}], "*)"}], "successes", 
            ",", 
            RowBox[{"(*", 
             RowBox[{"Success", " ", "indicators"}], "*)"}], 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Ethernet CSMA/CD Simulation\>\"", ",", "16"}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"50", ",", "0.5"}], "}"}]}], "]"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"\"\<Throughput: \>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"stats", "[", "\"\<throughput\>\"", "]"}], "/", 
                    RowBox[{"10", "^", "6"}]}], ",", "0.01"}], "]"}], "]"}], 
                 "<>", "\"\< Mbps\>\""}], ",", "12"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"50", ",", "0.3"}], "}"}]}], "]"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"\"\<Collisions: \>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"stats", "[", "\"\<collisions\>\"", "]"}], "]"}]}], 
                ",", "12"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"50", ",", "0.2"}], "}"}]}], "]"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"\"\<Utilization: \>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"stats", "[", "\"\<utilization\>\"", "]"}], "*", 
                    "100"}], ",", "1"}], "]"}], "]"}], "<>", "\"\<%\>\""}], 
                ",", "12"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"50", ",", "0.1"}], "}"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"ImageSize", "->", "600"}], ",", 
          RowBox[{"PlotRange", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "105"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.3"}], ",", "0.6"}], "}"}]}], "}"}]}]}], 
         "]"}]}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{"(*", 
    RowBox[{"RUN", " ", "SIMULATION"}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"InitializeSimulation", "[", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"simulationStats", "=", 
     RowBox[{"RunSimulation", "[", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "results"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Simulation Complete!\>\"", "]"}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Total Throughput: \>\"", ",", 
      RowBox[{
       RowBox[{"simulationStats", "[", "\"\<throughput\>\"", "]"}], "/", 
       RowBox[{"10", "^", "6"}]}], ",", "\"\< Mbps\>\""}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Packet Success Rate: \>\"", ",", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"simulationStats", "[", "\"\<successes\>\"", "]"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"simulationStats", "[", "\"\<successes\>\"", "]"}], "+", 
            RowBox[{"simulationStats", "[", "\"\<collisions\>\"", "]"}]}], 
           ")"}]}], "*", "100"}], ",", "2"}], "]"}], ",", "\"\<%\>\""}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Network Utilization: \>\"", ",", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"simulationStats", "[", "\"\<utilization\>\"", "]"}], "*", 
         "100"}], ",", "0.1"}], "]"}], ",", "\"\<%\>\""}], "]"}], ";"}], "\n",
    "\n", 
   RowBox[{"(*", 
    RowBox[{"Run", " ", "TCP", " ", "RTT", " ", "simulation"}], "*)"}], "\n", 
   
   RowBox[{
    RowBox[{
    "Print", "[", "\"\<\\nSimulating TCP Flow between Station 1 and 2...\>\"",
      "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rtt", "=", 
     RowBox[{"SimulateTCPFlow", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<TCP RTT: \>\"", ",", 
      RowBox[{"rtt", "*", "1000"}], ",", "\"\< ms\>\""}], "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Visualize", " ", "network"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"VisualizeNetwork", "[", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.959216568638702*^9, 3.9592165686399727`*^9}},
 CellLabel->
  "In[3630]:=",ExpressionUUID->"8b0fb3b6-f20a-41fb-b6bd-2dba22b5bb92"],

Cell[BoxData[
 TemplateBox[{
  "SetDelayed", "write", 
   "\"Tag \\!\\(\\*RowBox[{\\\"Rational\\\"}]\\) in \
\\!\\(\\*RowBox[{FractionBox[\\\"1\\\", \\\"1000000\\\"], \\\"[\\\", RowBox[{\
\\\"i_\\\", \\\",\\\", \\\"j_\\\"}], \\\"]\\\"}]\\) is Protected.\"", 2, 3642,
    855, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.95921656886266*^9},
 CellLabel->
  "During evaluation of \
In[3630]:=",ExpressionUUID->"41ee6805-9ad0-4a2c-981a-242157d25b06"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Simulation Complete!\"\>"], "Print",
 CellChangeTimes->{3.959216568871921*^9},
 CellLabel->
  "During evaluation of \
In[3630]:=",ExpressionUUID->"cdf2efba-2aca-4a37-8524-371383bd7cba"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Throughput: \"\>", "\[InvisibleSpace]", "0.24405`", 
   "\[InvisibleSpace]", "\<\" Mbps\"\>"}],
  SequenceForm["Total Throughput: ", 0.24405, " Mbps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216568872488*^9},
 CellLabel->
  "During evaluation of \
In[3630]:=",ExpressionUUID->"fb3a1a24-b1c6-4ca3-83f2-e7c353fe6e09"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Packet Success Rate: \"\>", "\[InvisibleSpace]", "100.`2.", 
   "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["Packet Success Rate: ", 100.`2., "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592165688730927`*^9},
 CellLabel->
  "During evaluation of \
In[3630]:=",ExpressionUUID->"f960dc42-cd87-4b61-82dd-719e4f91562d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Network Utilization: \"\>", "\[InvisibleSpace]", 
   "2.4000000000000004`", "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["Network Utilization: ", 2.4000000000000004`, "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216568873517*^9},
 CellLabel->
  "During evaluation of \
In[3630]:=",ExpressionUUID->"183183ae-0eff-433d-8eb5-67617b815aca"],

Cell[BoxData["\<\"\\nSimulating TCP Flow between Station 1 and 2...\"\>"], \
"Print",
 CellChangeTimes->{3.959216568873906*^9},
 CellLabel->
  "During evaluation of \
In[3630]:=",ExpressionUUID->"0a6013ee-c569-4530-8d29-0378cf485032"],

Cell[BoxData["\<\"ACK not received within simulation time\"\>"], "Print",
 CellChangeTimes->{3.9592165688742847`*^9},
 CellLabel->
  "During evaluation of \
In[3630]:=",ExpressionUUID->"878b99af-74fa-4280-9e72-e4a780806009"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"TCP RTT: \"\>", "\[InvisibleSpace]", 
   RowBox[{"1000", " ", "rtt$3922424"}], "\[InvisibleSpace]", "\<\" ms\"\>"}],
  
  SequenceForm["TCP RTT: ", 1000 EthernetSimulation`rtt$3922424, " ms"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216568874674*^9},
 CellLabel->
  "During evaluation of \
In[3630]:=",ExpressionUUID->"8497bdeb-41ba-41a3-ac8a-1eb0011b1cc8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Half", "-", 
    RowBox[{"Duplex", " ", "Ethernet", " ", "Simulation"}], "-", 
    RowBox[{
     RowBox[{"CSMA", "/", "CD"}], " ", "Protocol"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Simulation", " ", "parameters"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"dataRate", "=", 
     RowBox[{"10", "^", "7"}]}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{"10", " ", "Mbps", " ", "Ethernet"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"slotTime", "=", 
     RowBox[{"512", "/", "dataRate"}]}], ";"}], "   ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"51.2", " ", "\[Mu]s"}], "-", 
     RowBox[{"minimum", " ", "frame", " ", "time"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"propDelay", "=", 
     RowBox[{"slotTime", "/", "2"}]}], ";"}], "    ", 
   RowBox[{"(*", 
    RowBox[{"Propagation", " ", "delay"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"nStations", "=", "10"}], ";"}], "            ", 
   RowBox[{"(*", 
    RowBox[{"Number", " ", "of", " ", "stations"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"packetSize", "=", "12000"}], ";"}], "        ", 
   RowBox[{"(*", 
    RowBox[{"Data", " ", "packet", " ", "size", " ", "in", " ", "bits"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"ackSize", "=", "512"}], ";"}], "             ", 
   RowBox[{"(*", 
    RowBox[{"ACK", " ", "packet", " ", "size", " ", "in", " ", "bits"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"simulationSlots", "=", "100000"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Simulation", " ", "duration", " ", "in", " ", "slots"}], "*)"}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Station", " ", "data", " ", "structure"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"createStation", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<queue\>\"", "->", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{"Packet", " ", "queue"}], "*)"}], 
         RowBox[{"\"\<backoff\>\"", "->", "0"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Current", " ", "backoff", " ", "counter"}], "*)"}], 
         RowBox[{"\"\<collisions\>\"", "->", "0"}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "Collision", " ", "count", " ", "for", " ", "current", " ", 
           "packet"}], "*)"}], 
         RowBox[{"\"\<state\>\"", "->", "\"\<IDLE\>\""}], ",", 
         RowBox[{"(*", 
          RowBox[{"IDLE", ",", "WAITING", ",", "TRANSMITTING"}], "*)"}], 
         RowBox[{"\"\<sentPackets\>\"", "->", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{"Packets", " ", "sent", " ", "awaiting", " ", "ACK"}], 
          "*)"}], 
         RowBox[{"\"\<rttHistory\>\"", "->", 
          RowBox[{"{", "}"}]}]}], "            ", 
        RowBox[{"(*", 
         RowBox[{"RTT", " ", "measurements"}], "*)"}], "|>"}]}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Initialize", " ", "simulation"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"stations", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"createStation", "[", "]"}], ",", "nStations"}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"channelBusyUntil", "=", 
     RowBox[{"-", "1"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{
    "Slot", " ", "when", " ", "channel", " ", "becomes", " ", "idle"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"stats", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<successfulData\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<successfulAcks\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<collisions\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<idleSlots\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<totalDataBits\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<totalAckBits\>\"", "->", "0"}]}], "|>"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"packetIDCounter", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"futureACKs", "=", 
     RowBox[{"{", "}"}]}], ";"}], "        ", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"slot", ",", "station", ",", "packet"}], "}"}], "*)"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Helper", " ", "functions"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"generatePacket", "[", 
      RowBox[{"src_", ",", "dest_", ",", "type_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "id", "}"}], ",", 
       RowBox[{
        RowBox[{"packetIDCounter", "++"}], ";", "\n", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<id\>\"", "->", "packetIDCounter"}], ",", 
          RowBox[{"\"\<src\>\"", "->", "src"}], ",", 
          RowBox[{"\"\<dest\>\"", "->", "dest"}], ",", 
          RowBox[{"\"\<type\>\"", "->", "type"}], ",", 
          RowBox[{"\"\<size\>\"", "->", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"type", "==", "\"\<DATA\>\""}], ",", "packetSize", ",", 
             "ackSize"}], "]"}]}], ",", 
          RowBox[{"\"\<createSlot\>\"", "->", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{"\"\<startTxSlot\>\"", "->", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{"\"\<endTxSlot\>\"", "->", 
           RowBox[{"-", "1"}]}]}], "|>"}]}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"transmitTime", "[", "size_", "]"}], ":=", 
     RowBox[{"Ceiling", "[", 
      RowBox[{"size", "/", 
       RowBox[{"(", 
        RowBox[{"dataRate", "*", "slotTime"}], ")"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Main", " ", "simulation", " ", "loop"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"slot", "=", "0"}], ",", 
      RowBox[{"slot", "<", "simulationSlots"}], ",", 
      RowBox[{"slot", "++"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "Process", " ", "future", " ", "ACKs", " ", "for", " ", "this", " ", 
        "slot"}], "*)"}], 
      RowBox[{
       RowBox[{"currentACKs", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"futureACKs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "==", "slot"}], "&"}]}], "]"}]}],
        ";", "\n", 
       RowBox[{"futureACKs", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"futureACKs", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ">", "slot"}], "&"}]}], "]"}]}], 
       ";", "\n", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ack", "=", 
              RowBox[{"acks", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ",", 
             RowBox[{"station", "=", 
              RowBox[{"stations", "[", 
               RowBox[{"[", 
                RowBox[{"acks", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "=", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{"station", "[", "\"\<queue\>\"", "]"}], ",", "ack"}], 
              "]"}]}], ";", "\n", 
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", 
               RowBox[{"acks", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "=", 
             "station"}], ";"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"acks", ",", "currentACKs"}], "}"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Channel", " ", "state", " ", "handling"}], "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"slot", "<", "channelBusyUntil"}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Channel", " ", "busy"}], "-", 
           RowBox[{"no", " ", "actions"}]}], "*)"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Channel", " ", "idle"}], "*)"}], 
         RowBox[{
          RowBox[{"channelBusyUntil", "=", 
           RowBox[{"-", "1"}]}], ";", "\n", 
          RowBox[{
           RowBox[{"stats", "[", "\"\<idleSlots\>\"", "]"}], "++"}], ";", 
          "\n", 
          RowBox[{"(*", 
           RowBox[{"Process", " ", "stations"}], "*)"}], 
          RowBox[{"readyStations", "=", 
           RowBox[{"{", "}"}]}], ";", "\n", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"station", "=", 
                RowBox[{"stations", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"(*", 
               RowBox[{
               "Add", " ", "new", " ", "packets", " ", "with", " ", 
                "probability", " ", "0.01", " ", "per", " ", "slot"}], "*)"}], 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"RandomReal", "[", "]"}], "<", "0.01"}], "&&", 
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "]"}], 
                   "<", "5"}]}], ",", 
                 RowBox[{
                  RowBox[{"dest", "=", 
                   RowBox[{"RandomChoice", "[", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "nStations", "]"}], ",", "i"}], 
                    "]"}], "]"}]}], ";", "\n", 
                  RowBox[{"packet", "=", 
                   RowBox[{"generatePacket", "[", 
                    RowBox[{"i", ",", "dest", ",", "\"\<DATA\>\""}], "]"}]}], 
                  ";", "\n", 
                  RowBox[{
                   RowBox[{"packet", "[", "\"\<createSlot\>\"", "]"}], "=", 
                   "slot"}], ";", "\n", 
                  RowBox[{
                   RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "=", 
                   RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<queue\>\"", "]"}], ",", 
                    "packet"}], "]"}]}], ";"}]}], "]"}], ";", "\n", 
               RowBox[{"(*", 
                RowBox[{"Handle", " ", "backoff"}], "*)"}], 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"station", "[", "\"\<state\>\"", "]"}], "==", 
                   "\"\<WAITING\>\""}], "&&", 
                  RowBox[{
                   RowBox[{"station", "[", "\"\<backoff\>\"", "]"}], ">", 
                   "0"}]}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"station", "[", "\"\<backoff\>\"", "]"}], "--"}], 
                  ";"}]}], "]"}], ";", "\n", 
               RowBox[{"(*", 
                RowBox[{"Ready", " ", "to", " ", 
                 RowBox[{"transmit", "?"}]}], "*)"}], 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "]"}], 
                   ">", "0"}], "&&", 
                  RowBox[{
                   RowBox[{"station", "[", "\"\<state\>\"", "]"}], "==", 
                   "\"\<IDLE\>\""}], "&&", 
                  RowBox[{
                   RowBox[{"station", "[", "\"\<backoff\>\"", "]"}], "==", 
                   "0"}]}], ",", 
                 RowBox[{
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"readyStations", ",", "i"}], "]"}], ";"}]}], "]"}],
                ";", "\n", 
               RowBox[{
                RowBox[{"stations", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", "station"}], ";"}]}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Transmission", " ", "attempt"}], "*)"}], 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "readyStations", "]"}], ">", "0"}], ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "readyStations", "]"}], "==", "1"}], 
               ",", 
               RowBox[{"(*", 
                RowBox[{"Successful", " ", "transmission"}], "*)"}], 
               RowBox[{
                RowBox[{"i", "=", 
                 RowBox[{"First", "[", "readyStations", "]"}]}], ";", "\n", 
                RowBox[{"station", "=", 
                 RowBox[{"stations", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", 
                RowBox[{"packet", "=", 
                 RowBox[{"First", "[", 
                  RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "]"}]}], 
                ";", "\n", 
                RowBox[{
                 RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "=", 
                 RowBox[{"Rest", "[", 
                  RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "]"}]}], 
                ";", "\n", 
                RowBox[{"(*", 
                 RowBox[{"Record", " ", "packet", " ", "info"}], "*)"}], 
                RowBox[{
                 RowBox[{"packet", "[", "\"\<startTxSlot\>\"", "]"}], "=", 
                 "slot"}], ";", "\n", 
                RowBox[{"txTime", "=", 
                 RowBox[{"transmitTime", "[", 
                  RowBox[{"packet", "[", "\"\<size\>\"", "]"}], "]"}]}], ";", 
                "\n", 
                RowBox[{
                 RowBox[{"packet", "[", "\"\<endTxSlot\>\"", "]"}], "=", 
                 RowBox[{"slot", "+", "txTime"}]}], ";", "\n", 
                RowBox[{"channelBusyUntil", "=", 
                 RowBox[{"slot", "+", "txTime"}]}], ";", "\n", 
                RowBox[{"(*", 
                 RowBox[{"Handle", " ", "packet", " ", "type"}], "*)"}], 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"packet", "[", "\"\<type\>\"", "]"}], "==", 
                   "\"\<DATA\>\""}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"stats", "[", "\"\<successfulData\>\"", "]"}], 
                    "++"}], ";", "\n", 
                   RowBox[{
                    RowBox[{"stats", "[", "\"\<totalDataBits\>\"", "]"}], "+=", 
                    RowBox[{"packet", "[", "\"\<size\>\"", "]"}]}], ";", "\n", 
                   RowBox[{"(*", 
                    RowBox[{"Schedule", " ", "ACK"}], "*)"}], 
                   RowBox[{"ackPacket", "=", 
                    RowBox[{"generatePacket", "[", 
                    RowBox[{
                    RowBox[{"packet", "[", "\"\<dest\>\"", "]"}], ",", 
                    RowBox[{"packet", "[", "\"\<src\>\"", "]"}], ",", 
                    "\"\<ACK\>\""}], "]"}]}], ";", "\n", 
                   RowBox[{
                    RowBox[{"ackPacket", "[", "\"\<dataID\>\"", "]"}], "=", 
                    RowBox[{"packet", "[", "\"\<id\>\"", "]"}]}], ";", "\n", 
                   RowBox[{"futureACKs", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"futureACKs", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"slot", "+", "txTime", "+", "1"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Schedule", " ", "at", " ", "end", " ", "of", " ", "tx"}],
                     "+", 
                    RowBox[{"1", " ", "slot"}]}], "*)"}], 
                    RowBox[{"packet", "[", "\"\<dest\>\"", "]"}], ",", 
                    "ackPacket"}], "}"}]}], "]"}]}], ";", "\n", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Record", " ", "sent", " ", "packet", " ", "for", " ", 
                    "RTT", " ", "measurement"}], "*)"}], 
                   RowBox[{
                    RowBox[{"station", "[", "\"\<sentPackets\>\"", "]"}], "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<sentPackets\>\"", "]"}], ",",
                     "packet"}], "]"}]}], ";"}]}], "]"}], ";", "\n", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"packet", "[", "\"\<type\>\"", "]"}], "==", 
                   "\"\<ACK\>\""}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"stats", "[", "\"\<successfulAcks\>\"", "]"}], 
                    "++"}], ";", "\n", 
                   RowBox[{
                    RowBox[{"stats", "[", "\"\<totalAckBits\>\"", "]"}], "+=", 
                    RowBox[{"packet", "[", "\"\<size\>\"", "]"}]}], ";", "\n", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Record", " ", "RTT", " ", "for", " ", "original", " ", 
                    "data", " ", "packet"}], "*)"}], 
                   RowBox[{"sender", "=", 
                    RowBox[{"stations", "[", 
                    RowBox[{"[", 
                    RowBox[{"packet", "[", "\"\<dest\>\"", "]"}], "]"}], 
                    "]"}]}], ";", "\n", 
                   RowBox[{"sentPacket", "=", 
                    RowBox[{"SelectFirst", "[", 
                    RowBox[{
                    RowBox[{"sender", "[", "\"\<sentPackets\>\"", "]"}], ",", 
                    
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", "\"\<id\>\"", "]"}], "==", 
                    RowBox[{"packet", "[", "\"\<dataID\>\"", "]"}]}], "&"}], 
                    ",", "None"}], "]"}]}], ";", "\n", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"sentPacket", "=!=", "None"}], ",", 
                    RowBox[{
                    RowBox[{"rtt", "=", 
                    RowBox[{"slot", "-", 
                    RowBox[{
                    "sentPacket", "[", "\"\<startTxSlot\>\"", "]"}]}]}], ";", 
                    "\n", 
                    RowBox[{
                    RowBox[{"sender", "[", "\"\<rttHistory\>\"", "]"}], "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"sender", "[", "\"\<rttHistory\>\"", "]"}], ",", 
                    "rtt"}], "]"}]}], ";", "\n", 
                    RowBox[{
                    RowBox[{"sender", "[", "\"\<sentPackets\>\"", "]"}], "=", 
                    
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"sender", "[", "\"\<sentPackets\>\"", "]"}], ",", 
                    
                    RowBox[{"p_", "/;", 
                    RowBox[{
                    RowBox[{"p", "[", "\"\<id\>\"", "]"}], "==", 
                    RowBox[{"packet", "[", "\"\<dataID\>\"", "]"}]}]}]}], 
                    "]"}]}], ";", "\n", 
                    RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{"[", 
                    RowBox[{"packet", "[", "\"\<dest\>\"", "]"}], "]"}], 
                    "]"}], "=", "sender"}], ";"}]}], "]"}], ";"}]}], "]"}], 
                ";", "\n", 
                RowBox[{
                 RowBox[{"station", "[", "\"\<state\>\"", "]"}], "=", 
                 "\"\<IDLE\>\""}], ";", "\n", 
                RowBox[{
                 RowBox[{"station", "[", "\"\<collisions\>\"", "]"}], "=", 
                 "0"}], ";", "\n", 
                RowBox[{
                 RowBox[{"stations", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "=", "station"}], ";"}], 
               ",", 
               RowBox[{"(*", "Collision", "*)"}], 
               RowBox[{
                RowBox[{
                 RowBox[{"stats", "[", "\"\<collisions\>\"", "]"}], "++"}], 
                ";", "\n", 
                RowBox[{"Do", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"station", "=", 
                    RowBox[{"stations", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", 
                   RowBox[{
                    RowBox[{"station", "[", "\"\<collisions\>\"", "]"}], "=", 
                    
                    RowBox[{"Min", "[", 
                    RowBox[{"10", ",", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<collisions\>\"", "]"}], "+", 
                    "1"}]}], "]"}]}], ";", "\n", 
                   RowBox[{"k", "=", 
                    RowBox[{"station", "[", "\"\<collisions\>\"", "]"}]}], 
                   ";", "\n", 
                   RowBox[{
                    RowBox[{"station", "[", "\"\<backoff\>\"", "]"}], "=", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"2", "^", "k"}], "-", "1"}]}], "}"}], "]"}]}], 
                   ";", "\n", 
                   RowBox[{
                    RowBox[{"station", "[", "\"\<state\>\"", "]"}], "=", 
                    "\"\<WAITING\>\""}], ";", "\n", 
                   RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", "station"}], ";"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "readyStations"}], "}"}]}], "]"}], 
                ";"}]}], "]"}], ";"}]}], "]"}], ";"}]}], "]"}], ";"}]}], 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Simulation", " ", "results"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"efficiency", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"stats", "[", "\"\<totalDataBits\>\"", "]"}], "+", 
        RowBox[{"stats", "[", "\"\<totalAckBits\>\"", "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"simulationSlots", "*", "dataRate", "*", "slotTime"}], 
       ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"channelUtilization", "=", 
     RowBox[{"1", "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"stats", "[", "\"\<idleSlots\>\"", "]"}], "/", 
        "simulationSlots"}], ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"collisionRate", "=", 
     RowBox[{
      RowBox[{"stats", "[", "\"\<collisions\>\"", "]"}], "/", 
      "simulationSlots"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Half-Duplex Ethernet Results:\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<- Channel Efficiency: \>\"", ",", 
      RowBox[{"NumberForm", "[", 
       RowBox[{
        RowBox[{"efficiency", "*", "100"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", "\"\<%\>\""}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<- Channel Utilization: \>\"", ",", 
      RowBox[{"NumberForm", "[", 
       RowBox[{
        RowBox[{"channelUtilization", "*", "100"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", "\"\<%\>\""}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<- Collision Rate: \>\"", ",", 
      RowBox[{"NumberForm", "[", 
       RowBox[{
        RowBox[{"collisionRate", "*", "100"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", "\"\<%\>\""}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<- Successful Data Packets: \>\"", ",", 
      RowBox[{"stats", "[", "\"\<successfulData\>\"", "]"}]}], "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<- Successful ACK Packets: \>\"", ",", 
      RowBox[{"stats", "[", "\"\<successfulAcks\>\"", "]"}]}], "]"}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Calculate", " ", "average", " ", "RTT"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"allRTTs", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"s", "[", "\"\<rttHistory\>\"", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "stations"}], "}"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "allRTTs", "]"}], ">", "0"}], ",", 
      RowBox[{
       RowBox[{"avgRTT", "=", 
        RowBox[{
         RowBox[{"Mean", "[", "allRTTs", "]"}], "*", "slotTime", "*", 
         "1000"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"in", " ", "ms"}], "*)"}], 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<- Average RTT: \>\"", ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{"avgRTT", ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", "\"\< ms\>\""}], 
        "]"}], ";"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Full", "-", 
     RowBox[{"Duplex", " ", "Point"}], "-", "to", "-", 
     RowBox[{"Point", " ", "Simulation"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", "\"\<\\nFull-Duplex Point-to-Point Analysis:\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"linkCapacity", "=", "dataRate"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Per", " ", "direction"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"propDelayMs", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"propDelay", "*", "1000"}], ")"}], "/.", " ", 
      RowBox[{"slotTime", "->", "51.2*^-6"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Realistic", " ", "prop", " ", "delay"}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Throughput", " ", "without", " ", "contention"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"dataThroughput", "=", 
     RowBox[{"packetSize", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"packetSize", "/", "linkCapacity"}], "+", 
        RowBox[{"2", "*", "propDelay"}], "+", 
        RowBox[{"ackSize", "/", "linkCapacity"}]}], ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ackThroughput", "=", 
     RowBox[{"ackSize", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"packetSize", "/", "linkCapacity"}], "+", 
        RowBox[{"2", "*", "propDelay"}], "+", 
        RowBox[{"ackSize", "/", "linkCapacity"}]}], ")"}]}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<- Data Throughput: \>\"", ",", 
      RowBox[{"NumberForm", "[", 
       RowBox[{
        RowBox[{"dataThroughput", "/", 
         RowBox[{"10", "^", "6"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", "\"\< Mbps\>\""}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<- ACK Throughput: \>\"", ",", 
      RowBox[{"NumberForm", "[", 
       RowBox[{
        RowBox[{"ackThroughput", "/", 
         RowBox[{"10", "^", "6"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", "\"\< Mbps\>\""}], 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Theoretical", " ", "RTT"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"theoreticalRTT", "=", 
     RowBox[{
      RowBox[{"2", "*", "propDelay"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"packetSize", "+", "ackSize"}], ")"}], "/", 
       "linkCapacity"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<- Theoretical RTT: \>\"", ",", 
      RowBox[{"NumberForm", "[", 
       RowBox[{
        RowBox[{"theoreticalRTT", "*", "1000"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", "\"\< ms\>\""}], "]"}],
     ";"}], "\n", "\n", 
   RowBox[{"(*", "Visualizations", "*)"}], "\n", 
   RowBox[{
    RowBox[{"StationRTTs", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"s", "[", "\"\<rttHistory\>\"", "]"}], "]"}], ">", "0"}], 
         ",", 
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"s", "[", "\"\<rttHistory\>\"", "]"}], "]"}], "*", 
          "slotTime", "*", "1000"}], ",", "Null"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "stations"}], "}"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"RTT", " ", "Distribution"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Histogram", "[", 
     RowBox[{
      RowBox[{"allRTTs", "*", "slotTime", "*", "1000"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<RTT (ms)\>\"", ",", "\"\<Count\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Half-Duplex RTT Distribution\>\""}], 
      ",", 
      RowBox[{"ChartStyle", "->", "\"\<TemperatureMap\>\""}]}], "]"}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Throughput", " ", "Comparison"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"stats", "[", "\"\<totalDataBits\>\"", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"simulationSlots", "*", "slotTime"}], ")"}]}], "/", 
           RowBox[{"10", "^", "6"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"stats", "[", "\"\<totalAckBits\>\"", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"simulationSlots", "*", "slotTime"}], ")"}]}], "/", 
           RowBox[{"10", "^", "6"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dataThroughput", "/", 
           RowBox[{"10", "^", "6"}]}], ",", 
          RowBox[{"ackThroughput", "/", 
           RowBox[{"10", "^", "6"}]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"ChartLabels", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Data\>\"", ",", "\"\<ACKs\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Half-Duplex\>\"", ",", "\"\<Full-Duplex\>\""}], 
          "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Throughput Comparison (Mbps)\>\""}], 
      ",", 
      RowBox[{"ChartLegends", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Data\>\"", ",", "\"\<ACKs\>\""}], "}"}]}], ",", 
      RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9592165868753242`*^9, 3.959216586876482*^9}},
 CellLabel->
  "In[3789]:=",ExpressionUUID->"c3a4fe16-3b52-4094-99d5-66db263844a1"],

Cell[BoxData[
 TemplateBox[{
  "SetDelayed", "write", 
   "\"Tag \\!\\(\\*RowBox[{\\\"Rational\\\"}]\\) in \
\\!\\(\\*RowBox[{FractionBox[\\\"64\\\", \\\"46875\\\"], \\\"[\\\", \\\"size_\
\\\", \\\"]\\\"}]\\) is Protected.\"", 2, 3804, 904, 19024681249811965357, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.95921658703106*^9},
 CellLabel->
  "During evaluation of \
In[3789]:=",ExpressionUUID->"b5e3c0f6-d31f-4a15-bf21-ffc67238afa3"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Half-Duplex Ethernet Results:\"\>"], "Print",
 CellChangeTimes->{3.959216587157255*^9},
 CellLabel->
  "During evaluation of \
In[3789]:=",ExpressionUUID->"44625fec-1d04-46f7-a7e3-0b4fed8cc123"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Channel Efficiency: \"\>", "\[InvisibleSpace]", 
   TagBox[
    FractionBox[
     InterpretationBox[
      StyleBox["\<\"3\"\>",
       ShowStringCharacters->False],
      3,
      Editable->False], 
     InterpretationBox[
      StyleBox["\<\"128\"\>",
       ShowStringCharacters->False],
      128,
      Editable->False]],
    NumberForm[#, {4, 2}]& ], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["- Channel Efficiency: ", 
   NumberForm[
    Rational[3, 128], {4, 2}], "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.95921658715775*^9},
 CellLabel->
  "During evaluation of \
In[3789]:=",ExpressionUUID->"1fb374e4-d754-4704-bc2f-af3fba41ffc1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Channel Utilization: \"\>", "\[InvisibleSpace]", 
   TagBox[
    FractionBox[
     InterpretationBox[
      StyleBox["\<\"24999\"\>",
       ShowStringCharacters->False],
      24999,
      Editable->False], 
     InterpretationBox[
      StyleBox["\<\"250\"\>",
       ShowStringCharacters->False],
      250,
      Editable->False]],
    NumberForm[#, {4, 2}]& ], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["- Channel Utilization: ", 
   NumberForm[
    Rational[24999, 250], {4, 2}], "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216587158348*^9},
 CellLabel->
  "During evaluation of \
In[3789]:=",ExpressionUUID->"c57c18d6-e4ef-447f-aba2-1c1f1e9ea40c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Collision Rate: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"0\"\>",
      ShowStringCharacters->False],
     0,
     Editable->False],
    NumberForm[#, {4, 2}]& ], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["- Collision Rate: ", 
   NumberForm[0, {4, 2}], "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216587158742*^9},
 CellLabel->
  "During evaluation of \
In[3789]:=",ExpressionUUID->"407f258a-cb04-410f-8da5-d129ded8d33c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Successful Data Packets: \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["- Successful Data Packets: ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.95921658715911*^9},
 CellLabel->
  "During evaluation of \
In[3789]:=",ExpressionUUID->"75905813-b521-42ca-814f-ac4960eb4497"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Successful ACK Packets: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["- Successful ACK Packets: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592165871594563`*^9},
 CellLabel->
  "During evaluation of \
In[3789]:=",ExpressionUUID->"5dc24dbf-0c70-4d8d-9658-187678d39309"],

Cell[BoxData["\<\"\\nFull-Duplex Point-to-Point Analysis:\"\>"], "Print",
 CellChangeTimes->{3.959216587159786*^9},
 CellLabel->
  "During evaluation of \
In[3789]:=",ExpressionUUID->"436ca260-c43e-4bb3-8e1b-6d39d3334fa4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Data Throughput: \"\>", "\[InvisibleSpace]", 
   TagBox[
    FractionBox[
     InterpretationBox[
      StyleBox["\<\"3750\"\>",
       ShowStringCharacters->False],
      3750,
      Editable->False], 
     InterpretationBox[
      StyleBox["\<\"407\"\>",
       ShowStringCharacters->False],
      407,
      Editable->False]],
    NumberForm[#, {4, 2}]& ], "\[InvisibleSpace]", "\<\" Mbps\"\>"}],
  SequenceForm["- Data Throughput: ", 
   NumberForm[
    Rational[3750, 407], {4, 2}], " Mbps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216587160141*^9},
 CellLabel->
  "During evaluation of \
In[3789]:=",ExpressionUUID->"52dab6d4-c072-4e8d-aa6b-b10666e0a9d4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- ACK Throughput: \"\>", "\[InvisibleSpace]", 
   TagBox[
    FractionBox[
     InterpretationBox[
      StyleBox["\<\"160\"\>",
       ShowStringCharacters->False],
      160,
      Editable->False], 
     InterpretationBox[
      StyleBox["\<\"407\"\>",
       ShowStringCharacters->False],
      407,
      Editable->False]],
    NumberForm[#, {4, 2}]& ], "\[InvisibleSpace]", "\<\" Mbps\"\>"}],
  SequenceForm["- ACK Throughput: ", 
   NumberForm[
    Rational[160, 407], {4, 2}], " Mbps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216587160528*^9},
 CellLabel->
  "During evaluation of \
In[3789]:=",ExpressionUUID->"54fb86a1-3c35-4eb8-a4cf-9942ff8bcec9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Theoretical RTT: \"\>", "\[InvisibleSpace]", 
   TagBox[
    FractionBox[
     InterpretationBox[
      StyleBox["\<\"814\"\>",
       ShowStringCharacters->False],
      814,
      Editable->False], 
     InterpretationBox[
      StyleBox["\<\"625\"\>",
       ShowStringCharacters->False],
      625,
      Editable->False]],
    NumberForm[#, {5, 2}]& ], "\[InvisibleSpace]", "\<\" ms\"\>"}],
  SequenceForm["- Theoretical RTT: ", 
   NumberForm[
    Rational[814, 625], {5, 2}], " ms"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216587160918*^9},
 CellLabel->
  "During evaluation of \
In[3789]:=",ExpressionUUID->"76b2322d-0da5-4435-bbd8-0095ccb233f7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Simulation", " ", "Parameters"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numStations", "=", "5"}], ";"}], "            ", 
  RowBox[{"(*", 
   RowBox[{
   "Number", " ", "of", " ", "stations", " ", "on", " ", "the", " ", 
    "network"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"packetSizeBytes", "=", "1500"}], ";"}], "     ", 
  RowBox[{"(*", 
   RowBox[{"Data", " ", "packet", " ", "size", " ", "in", " ", "bytes"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ackSizeBytes", "=", "64"}], ";"}], "          ", 
  RowBox[{"(*", 
   RowBox[{"ACK", " ", "packet", " ", "size", " ", "in", " ", "bytes"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"slotTime", "=", "51.2*^-6"}], ";"}], "        ", 
  RowBox[{"(*", 
   RowBox[{"Ethernet", " ", "slot", " ", "time", " ", 
    RowBox[{"(", 
     RowBox[{"512", " ", "bits", " ", "at", " ", "10", " ", "Mbps"}], ")"}]}],
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"propSpeed", "=", "2*^8"}], ";"}], "           ", 
  RowBox[{"(*", 
   RowBox[{"Signal", " ", "propagation", " ", "speed", " ", 
    RowBox[{"(", 
     RowBox[{"m", "/", "s"}], ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cableLength", "=", "100"}], ";"}], "           ", 
  RowBox[{"(*", 
   RowBox[{"Cable", " ", "length", " ", "in", " ", "meters"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"simulationSlots", "=", "5000"}], ";"}], "      ", 
  RowBox[{"(*", 
   RowBox[{
   "Number", " ", "of", " ", "time", " ", "slots", " ", "to", " ", 
    "simulate"}], "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Derived", " ", "Parameters"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"propDelaySlots", "=", 
    RowBox[{
     RowBox[{"cableLength", "/", "propSpeed"}], "/", "slotTime"}]}], ";"}], 
  "  ", 
  RowBox[{"(*", 
   RowBox[{"Propagation", " ", "delay", " ", "in", " ", "slots"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dataPacketSlots", "=", 
    RowBox[{"Ceiling", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"packetSizeBytes", "*", "8"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"slotTime", "*", 
        RowBox[{"10", "^", "6"}]}], ")"}]}], "]"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"Packet", " ", "duration", " ", "in", " ", "slots"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ackPacketSlots", "=", 
    RowBox[{"Ceiling", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"ackSizeBytes", "*", "8"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"slotTime", "*", 
        RowBox[{"10", "^", "6"}]}], ")"}]}], "]"}]}], ";"}], "       ", 
  RowBox[{"(*", 
   RowBox[{"ACK", " ", "duration", " ", "in", " ", "slots"}], "*)"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Station", " ", "Data", " ", "Structure"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"createStation", "[", "id_", "]"}], ":=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<ID\>\"", "->", "id"}], ",", 
      RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "IDLE", ",", "BACKOFF", ",", "TRANSMITTING", ",", "WAITING_ACK"}], 
       "*)"}], 
      RowBox[{"\"\<BackoffCounter\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<CollisionCount\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<Queue\>\"", "->", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"(*", 
       RowBox[{"Packet", " ", 
        RowBox[{"queue", ":", 
         RowBox[{"{", 
          RowBox[{"packetID", ",", "destID", ",", "size"}], "}"}]}]}], "*)"}], 
      RowBox[{"\"\<TransmitRemaining\>\"", "->", "0"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "Slots", " ", "remaining", " ", "for", " ", "current", " ", 
        "transmission"}], "*)"}], 
      RowBox[{"\"\<AckPending\>\"", "->", "False"}], ",", 
      RowBox[{"(*", 
       RowBox[{"ACK", " ", "to", " ", 
        RowBox[{"send", "?"}]}], "*)"}], 
      RowBox[{"\"\<Stats\>\"", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<PacketsSent\>\"", "->", "0"}], ",", 
         RowBox[{"\"\<Collisions\>\"", "->", "0"}], ",", 
         RowBox[{"\"\<TotalLatency\>\"", "->", "0"}], ",", 
         RowBox[{"\"\<RTTs\>\"", "->", 
          RowBox[{"{", "}"}]}]}], "|>"}]}]}], "|>"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Initialize", " ", "stations"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stations", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"createStation", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Channel", " ", "Model"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"channelState", "=", "\"\<IDLE\>\""}], ";"}], "            ", 
  RowBox[{"(*", 
   RowBox[{"IDLE", ",", "BUSY", ",", "COLLISION"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"activeTransmitters", "=", 
    RowBox[{"{", "}"}]}], ";"}], "          ", 
  RowBox[{"(*", 
   RowBox[{"Stations", " ", "currently", " ", "transmitting"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"collisionDetected", "=", "False"}], ";"}], "        ", 
  RowBox[{"(*", 
   RowBox[{"Collision", " ", "in", " ", "current", " ", "slot"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"timeline", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Time\>\"", "->", "t"}], ",", 
        RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
        RowBox[{"\"\<Active\>\"", "->", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"\"\<Events\>\"", "->", 
         RowBox[{"{", "}"}]}]}], "|>"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "simulationSlots"}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Helper", " ", "Functions"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Exponential", " ", "backoff", " ", "algorithm"}], "*)"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"computeBackoff", "[", "station_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", ",", "range"}], "}"}], ",", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], ",", 
          "10"}], "]"}]}], ";", "\n", 
       RowBox[{"range", "=", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"2", "^", "k"}], ",", "1024"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Cap", " ", "at", " ", "1024", " ", "as", " ", "in", " ", 
         "Ethernet"}], "*)"}], 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"range", "-", "1"}]}], "}"}], "]"}]}]}], "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Packet", " ", "generation"}], "-", 
    RowBox[{"simplified", " ", "model"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"generatePacket", "[", 
     RowBox[{"src_", ",", "dest_"}], "]"}], ":=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<ID\>\"", "->", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1000000"}], "}"}], "]"}]}], ",", 
      RowBox[{"\"\<Source\>\"", "->", "src"}], ",", 
      RowBox[{"\"\<Destination\>\"", "->", "dest"}], ",", 
      RowBox[{"\"\<Size\>\"", "->", "packetSizeBytes"}], ",", 
      RowBox[{"\"\<GenTime\>\"", "->", "Null"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Set", " ", "when", " ", "transmission", " ", "starts"}], 
       "*)"}], 
      RowBox[{"\"\<AckTime\>\"", "->", "Null"}]}], "      ", 
     RowBox[{"(*", 
      RowBox[{"Set", " ", "when", " ", "ACK", " ", "received"}], "*)"}], 
     "|>"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Main", " ", "Simulation", " ", "Loop"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"slot", "=", "1"}], ",", 
     RowBox[{"slot", "<=", "simulationSlots"}], ",", 
     RowBox[{"slot", "++"}], ",", 
     RowBox[{"(*", 
      RowBox[{
      "Reset", " ", "collision", " ", "flag", " ", "for", " ", "new", " ", 
       "slot"}], "*)"}], 
     RowBox[{
      RowBox[{"collisionDetected", "=", "False"}], ";", "\n", 
      RowBox[{"currentTransmitters", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"Update", " ", "station", " ", "states"}], "*)"}], 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<=", "numStations"}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{
         RowBox[{"station", "=", 
          RowBox[{"stations", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{"State", "-", 
           RowBox[{"specific", " ", "processing"}]}], "*)"}], 
         RowBox[{"Switch", "[", 
          RowBox[{
           RowBox[{"station", "[", "\"\<State\>\"", "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"IDLE", ":", 
             RowBox[{
             "Check", " ", "if", " ", "we", " ", "have", " ", "packets", " ", 
              "to", " ", "send"}]}], "*)"}], "\"\<IDLE\>\"", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}], ">", 
               "0"}], "||", 
              RowBox[{"station", "[", "\"\<AckPending\>\"", "]"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"channelState", "==", "\"\<IDLE\>\""}], ",", 
               RowBox[{"(*", 
                RowBox[{"Start", " ", "transmitting"}], "*)"}], 
               RowBox[{
                RowBox[{
                 RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
                 "\"\<TRANSMITTING\>\""}], ";", "\n", 
                RowBox[{
                 RowBox[{"station", "[", "\"\<TransmitRemaining\>\"", "]"}], 
                 "=", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"station", "[", "\"\<AckPending\>\"", "]"}], ",", 
                   "ackPacketSlots", ",", "dataPacketSlots"}], "]"}]}], ";", 
                "\n", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"For", " ", "data", " ", "packets"}], ",", 
                  RowBox[{"record", " ", "start", " ", "time"}]}], "*)"}], 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"!", 
                    RowBox[{"station", "[", "\"\<AckPending\>\"", "]"}]}], "&&", 
                   RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}], 
                    ">", "0"}]}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<GenTime\>\"", 
                    "]"}], "=", "slot"}], ";"}]}], "]"}], ";", "\n", 
                RowBox[{"(*", 
                 RowBox[{
                 "Add", " ", "to", " ", "current", " ", "transmitters"}], 
                 "*)"}], 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"currentTransmitters", ",", 
                  RowBox[{"station", "[", "\"\<ID\>\"", "]"}]}], "]"}], 
                ";"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"BACKOFF", ":", 
             RowBox[{
             "Decrement", " ", "counter", " ", "if", " ", "channel", " ", 
              "is", " ", "idle"}]}], "*)"}], "\"\<BACKOFF\>\"", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"channelState", "==", "\"\<IDLE\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"station", "[", "\"\<BackoffCounter\>\"", "]"}], "=", 
               RowBox[{
                RowBox[{"station", "[", "\"\<BackoffCounter\>\"", "]"}], "-", 
                "1"}]}], ";", "\n", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"station", "[", "\"\<BackoffCounter\>\"", "]"}], "<=",
                  "0"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
                  "\"\<IDLE\>\""}], ";"}]}], "]"}]}]}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{"TRANSMITTING", ":", 
             RowBox[{"Continue", " ", "transmission"}]}], "*)"}], 
           "\"\<TRANSMITTING\>\"", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<TransmitRemaining\>\"", "]"}], "=", 
             
             RowBox[{
              RowBox[{"station", "[", "\"\<TransmitRemaining\>\"", "]"}], "-",
               "1"}]}], ";", "\n", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"currentTransmitters", ",", 
              RowBox[{"station", "[", "\"\<ID\>\"", "]"}]}], "]"}], ";", "\n", 
            RowBox[{"(*", 
             RowBox[{
             "Check", " ", "if", " ", "transmission", " ", "completed"}], 
             "*)"}], 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"station", "[", "\"\<TransmitRemaining\>\"", "]"}], "<=",
                "0"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", "collisionDetected"}], ",", 
                RowBox[{"(*", 
                 RowBox[{"Successful", " ", "transmission"}], "*)"}], 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"station", "[", "\"\<AckPending\>\"", "]"}], ",", 
                  RowBox[{"(*", 
                   RowBox[{"ACK", " ", "transmission", " ", "complete"}], 
                   "*)"}], 
                  RowBox[{
                   RowBox[{
                    RowBox[{"station", "[", "\"\<AckPending\>\"", "]"}], "=", 
                    "False"}], ";", "\n", 
                   RowBox[{
                    RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
                    "\"\<IDLE\>\""}], ";", "\n", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Record", " ", "RTT", " ", "for", " ", "data", " ", 
                    "packet"}], "*)"}], 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}], 
                    ">", "0"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"pkt", "=", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pkt", "[", "\"\<AckTime\>\"", "]"}], "=", 
                    "slot"}], ";", "\n", 
                    RowBox[{
                    RowBox[{"station", "[", 
                    RowBox[{"\"\<Stats\>\"", ",", "\"\<TotalLatency\>\""}], 
                    "]"}], "+=", 
                    RowBox[{"(", 
                    RowBox[{"slot", "-", 
                    RowBox[{"pkt", "[", "\"\<GenTime\>\"", "]"}]}], ")"}]}], 
                    ";", "\n", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{"station", "[", 
                    RowBox[{"\"\<Stats\>\"", ",", "\"\<RTTs\>\""}], "]"}], 
                    ",", 
                    RowBox[{"slot", "-", 
                    RowBox[{"pkt", "[", "\"\<GenTime\>\"", "]"}]}]}], "]"}], 
                    ";", "\n", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=", 
                    RowBox[{"Rest", "[", 
                    RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], 
                    ";", "\n", 
                    RowBox[{
                    RowBox[{"station", "[", 
                    RowBox[{"\"\<Stats\>\"", ",", "\"\<PacketsSent\>\""}], 
                    "]"}], "++"}], ";"}]}], "]"}]}], "]"}]}], ",", 
                  RowBox[{"(*", 
                   RowBox[{"Data", " ", "transmission", " ", "complete"}], 
                   "*)"}], 
                  RowBox[{
                   RowBox[{
                    RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
                    "\"\<WAITING_ACK\>\""}], ";", "\n", 
                   RowBox[{
                    RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], 
                    "=", "0"}], ";", "\n", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Schedule", " ", "ACK", " ", "at", " ", "destination"}], 
                    "*)"}], 
                   RowBox[{"destID", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    "\"\<Destination\>\"", "]"}]}], ";", "\n", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{"[", "destID", "]"}], "]"}], "[", 
                    "\"\<AckPending\>\"", "]"}], "=", "True"}], ";"}]}], 
                 "]"}], ",", 
                RowBox[{"(*", 
                 RowBox[{"Collision", " ", "during", " ", "transmission"}], 
                 "*)"}], 
                RowBox[{
                 RowBox[{
                  RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
                  "\"\<BACKOFF\>\""}], ";", "\n", 
                 RowBox[{
                  RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], 
                  "++"}], ";", "\n", 
                 RowBox[{
                  RowBox[{"station", "[", 
                   RowBox[{"\"\<Stats\>\"", ",", "\"\<Collisions\>\""}], 
                   "]"}], "++"}], ";", "\n", 
                 RowBox[{
                  RowBox[{"station", "[", "\"\<BackoffCounter\>\"", "]"}], 
                  "=", 
                  RowBox[{"computeBackoff", "[", "station", "]"}]}], ";", 
                 "\n", 
                 RowBox[{"(*", 
                  RowBox[{"Reset", " ", "ACK", " ", "if", " ", "pending"}], 
                  "*)"}], 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"station", "[", "\"\<AckPending\>\"", "]"}], ",", 
                   RowBox[{
                    RowBox[{"station", "[", "\"\<AckPending\>\"", "]"}], "=", 
                    "False"}]}], "]"}], ";"}]}], "]"}]}], "]"}]}]}], "]"}], 
         ";", "\n", 
         RowBox[{
          RowBox[{"stations", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", "station"}], ";"}]}], "]"}], 
      ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"Detect", " ", "collisions"}], "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "currentTransmitters", "]"}], ">", "1"}], ",", 
        RowBox[{
         RowBox[{"collisionDetected", "=", "True"}], ";", "\n", 
         RowBox[{"channelState", "=", "\"\<COLLISION\>\""}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{"Handle", " ", "colliding", " ", "stations"}], "*)"}], 
         RowBox[{"ForEach", "[", 
          RowBox[{"id", ",", "currentTransmitters", ",", 
           RowBox[{
            RowBox[{"station", "=", 
             RowBox[{"stations", "[", 
              RowBox[{"[", "id", "]"}], "]"}]}], ";", "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"station", "[", "\"\<State\>\"", "]"}], "==", 
               "\"\<TRANSMITTING\>\""}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
                "\"\<BACKOFF\>\""}], ";", "\n", 
               RowBox[{
                RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], 
                "++"}], ";", "\n", 
               RowBox[{
                RowBox[{"station", "[", 
                 RowBox[{"\"\<Stats\>\"", ",", "\"\<Collisions\>\""}], "]"}], 
                "++"}], ";", "\n", 
               RowBox[{
                RowBox[{"station", "[", "\"\<BackoffCounter\>\"", "]"}], "=", 
                
                RowBox[{"computeBackoff", "[", "station", "]"}]}], ";", "\n", 
               
               RowBox[{
                RowBox[{"stations", "[", 
                 RowBox[{"[", "id", "]"}], "]"}], "=", "station"}], ";"}]}], 
             "]"}]}]}], "]"}], ";"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "currentTransmitters", "]"}], "==", "1"}], 
          ",", 
          RowBox[{
           RowBox[{"channelState", "=", "\"\<BUSY\>\""}], ";"}], ",", 
          RowBox[{
           RowBox[{"channelState", "=", "\"\<IDLE\>\""}], ";"}]}], "]"}]}], 
       "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"Generate", " ", "new", " ", "packets", " ", "randomly"}], 
       "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "<", "0.02"}], ",", 
        RowBox[{"(*", 
         RowBox[{
         "2", "%", " ", "chance", " ", "per", " ", "slot", " ", "per", " ", 
          "station"}], "*)"}], 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<=", "numStations"}], ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RandomReal", "[", "]"}], "<", "0.3"}], ",", 
            RowBox[{"(*", 
             RowBox[{
             "30", "%", " ", "of", " ", "stations", " ", "get", " ", "new", 
              " ", "packet"}], "*)"}], 
            RowBox[{
             RowBox[{"dest", "=", 
              RowBox[{"RandomChoice", "[", 
               RowBox[{"DeleteCases", "[", 
                RowBox[{
                 RowBox[{"Range", "[", "numStations", "]"}], ",", "i"}], 
                "]"}], "]"}]}], ";", "\n", 
             RowBox[{"newPacket", "=", 
              RowBox[{"generatePacket", "[", 
               RowBox[{"i", ",", "dest"}], "]"}]}], ";", "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<Queue\>\"", "]"}], 
              "=", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"stations", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<Queue\>\"", "]"}],
                 ",", "newPacket"}], "]"}]}], ";"}]}], "]"}]}], "]"}]}], 
       "]"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"Record", " ", "timeline"}], "*)"}], 
      RowBox[{
       RowBox[{"timeline", "[", 
        RowBox[{"[", "slot", "]"}], "]"}], "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Time\>\"", "->", "slot"}], ",", 
         RowBox[{"\"\<State\>\"", "->", "channelState"}], ",", 
         RowBox[{"\"\<Active\>\"", "->", "currentTransmitters"}], ",", 
         RowBox[{"\"\<Events\>\"", "->", 
          RowBox[{"If", "[", 
           RowBox[{"collisionDetected", ",", "\"\<COLLISION\>\"", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "currentTransmitters", "]"}], ">", 
               "0"}], ",", "\"\<TX\>\"", ",", "\"\<IDLE\>\""}], "]"}]}], 
           "]"}]}]}], "|>"}]}], ";"}]}], "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Analysis", "&"}], " ", "Visualization"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"===", "===", "===", "===", "===", "===", "==="}], "="}], "*)"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"1.", " ", "Channel", " ", "Utilization"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"utilization", "=", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{"timeline", ",", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", "\"\<State\>\"", "]"}], "==", "\"\<BUSY\>\""}], "||", 
         RowBox[{
          RowBox[{"#", "[", "\"\<State\>\"", "]"}], "==", 
          "\"\<COLLISION\>\""}]}], ")"}]}]}], "]"}], "/", 
    "simulationSlots"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Channel Utilization: \>\"", ",", "utilization"}], "]"}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"2.", " ", "Collision", " ", "Rate"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"collisionRate", "=", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{"timeline", ",", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", "\"\<State\>\"", "]"}], "==", 
         "\"\<COLLISION\>\""}], ")"}]}]}], "]"}], "/", "simulationSlots"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Collision Rate: \>\"", ",", "collisionRate"}], "]"}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"3.", " ", "Timeline", " ", "Visualization"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"timelineEvents", "=", 
   RowBox[{"timeline", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "\"\<Events\>\""}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"timelinePlot", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"timelineEvents", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "==", "\"\<TX\>\""}], ",", "1", 
           ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"timelineEvents", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "==", "\"\<COLLISION\>\""}], 
             ",", "0.5", ",", "0"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "simulationSlots"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"1", "/", "4"}]}], ",", 
      RowBox[{"ImageSize", "->", "800"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Channel Activity Over Time\>\""}], ",", 
      
      RowBox[{"FrameLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Time Slot\>\"", ",", "\"\<Activity\>\""}], "}"}]}], ",", 
      
      RowBox[{"PlotLegends", "->", 
       RowBox[{
       "{", "\"\<0=IDLE, 0.5=COLLISION, 1=TRANSMISSION\>\"", "}"}]}]}], 
     "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"4.", " ", "RTT", " ", "Distribution"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"allRTTs", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"station", "[", 
       RowBox[{"\"\<Stats\>\"", ",", "\"\<RTTs\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"station", ",", "stations"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rttHist", "=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "allRTTs", "]"}], ">", "0"}], ",", 
      RowBox[{"Histogram", "[", 
       RowBox[{"allRTTs", ",", "20", ",", 
        RowBox[{"ChartStyle", "->", "\"\<TemperatureMap\>\""}], ",", 
        RowBox[{"PlotLabel", "->", "\"\<Round-Trip Time Distribution\>\""}], 
        ",", 
        RowBox[{"FrameLabel", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<RTT (slots)\>\"", ",", "\"\<Frequency\>\""}], "}"}]}], 
        ",", 
        RowBox[{"ImageSize", "->", "400"}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{"\"\<No RTT data collected\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.5"}], "}"}]}], "]"}], ",", 
        RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"5.", " ", "Throughput", " ", "Calculation"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"totalPackets", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"station", "[", 
       RowBox[{"\"\<Stats\>\"", ",", "\"\<PacketsSent\>\""}], "]"}], "&"}], "/@",
      "stations"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"throughput", "=", 
   RowBox[{"totalPackets", "*", "packetSizeBytes", "*", 
    RowBox[{"8", "/", 
     RowBox[{"(", 
      RowBox[{"simulationSlots", "*", "slotTime"}], ")"}]}]}]}], ";"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<Aggregate Throughput: \>\"", ",", "throughput", ",", 
     "\"\< bps\>\""}], "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"6.", " ", "Station", " ", "Statistics"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stationStats", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<ID\>\"", "->", 
         RowBox[{"s", "[", "\"\<ID\>\"", "]"}]}], ",", 
        RowBox[{"\"\<PacketsSent\>\"", "->", 
         RowBox[{"s", "[", 
          RowBox[{"\"\<Stats\>\"", ",", "\"\<PacketsSent\>\""}], "]"}]}], ",", 
        RowBox[{"\"\<Collisions\>\"", "->", 
         RowBox[{"s", "[", 
          RowBox[{"\"\<Stats\>\"", ",", "\"\<Collisions\>\""}], "]"}]}], ",", 
        
        RowBox[{"\"\<AvgRTT\>\"", "->", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"s", "[", 
              RowBox[{"\"\<Stats\>\"", ",", "\"\<RTTs\>\""}], "]"}], "]"}], 
            ">", "0"}], ",", 
           RowBox[{"Mean", "[", 
            RowBox[{"s", "[", 
             RowBox[{"\"\<Stats\>\"", ",", "\"\<RTTs\>\""}], "]"}], "]"}], 
           ",", "0"}], "]"}]}]}], "|>"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "stations"}], "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"statsTable", "=", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"s", "[", "\"\<ID\>\"", "]"}], ",", 
            RowBox[{"s", "[", "\"\<PacketsSent\>\"", "]"}], ",", 
            RowBox[{"s", "[", "\"\<Collisions\>\"", "]"}], ",", 
            RowBox[{"s", "[", "\"\<AvgRTT\>\"", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"s", ",", "stationStats"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Station\>\"", ",", "\"\<Packets Sent\>\"", ",", 
          "\"\<Collisions\>\"", ",", "\"\<Avg RTT\>\""}], "}"}]}], "]"}], ",", 
      RowBox[{"Frame", "->", "All"}], ",", 
      RowBox[{"Background", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"LightBlue", ",", 
           RowBox[{"{", 
            RowBox[{"White", ",", "LightGray"}], "}"}]}], "}"}]}], "}"}]}], 
      ",", 
      RowBox[{"Alignment", "->", "Center"}], ",", 
      RowBox[{"Dividers", "->", "All"}], ",", 
      RowBox[{"ItemStyle", "->", "\"\<Text\>\""}]}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
   "7.", " ", "Efficiency", " ", "Comparison", " ", "to", " ", "Metcalfe", 
    " ", "Model"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Metcalfe", " ", "efficiency", " ", "function", " ", "from", " ", 
    "previous", " ", "code"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"acquisitionProbability", "[", "Q_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"1", "/", "Q"}]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"Q", "-", "1"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"meanWaitSlots", "[", "Q_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"acquisitionProbability", "[", "Q", "]"}]}], ")"}], "/", 
    RowBox[{"acquisitionProbability", "[", "Q", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"metcalfeEfficiency", "[", 
     RowBox[{"P_", ",", "Q_", ",", "C_", ",", "T_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"P", "/", "C"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"P", "/", "C"}], ")"}], "+", 
       RowBox[{
        RowBox[{"meanWaitSlots", "[", "Q", "]"}], "*", "T"}]}], ")"}]}]}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Compare", " ", "simulated", " ", "vs", " ", "theoretical"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"simulatedEfficiency", "=", "utilization"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"theoreticalEfficiency", "=", 
    RowBox[{"metcalfeEfficiency", "[", 
     RowBox[{
      RowBox[{"packetSizeBytes", "*", "8"}], ",", "numStations", ",", 
      RowBox[{"10", "^", "7"}], ",", 
      RowBox[{"(*", 
       RowBox[{"10", " ", "Mbps"}], "*)"}], "slotTime"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"efficiencyComparison", "=", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"simulatedEfficiency", ",", "theoreticalEfficiency"}], "}"}], 
      ",", 
      RowBox[{"ChartLabels", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Simulated\>\"", ",", "\"\<Metcalfe Model\>\""}], "}"}]}],
       ",", 
      RowBox[{"PlotLabel", "->", "\"\<Efficiency Comparison\>\""}], ",", 
      RowBox[{"ChartStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Orange"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Display", " ", "results"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Simulation Complete\>\"", "]"}], ";"}], "\n", 
 RowBox[{"Column", "[", 
  RowBox[{"{", 
   RowBox[{"timelinePlot", ",", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{"rttHist", ",", "efficiencyComparison"}], "}"}], "]"}], ",", 
    "statsTable"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.959216593745017*^9, 3.959216593746222*^9}},
 CellLabel->
  "In[3829]:=",ExpressionUUID->"7afee7a1-d7d6-496b-af49-20e674711316"],

Cell[BoxData[
 TemplateBox[{
  "currentTransmitters", "shdw", 
   "\"Symbol \
\\!\\(\\*RowBox[{\\\"\\\\\\\"currentTransmitters\\\\\\\"\\\"}]\\) appears in \
multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"EthernetSimulation`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Global`\\\\\\\"\\\"}], \\\"}\\\"}]\\); definitions in context \\!\
\\(\\*RowBox[{\\\"\\\\\\\"EthernetSimulation`\\\\\\\"\\\"}]\\) may shadow or \
be shadowed by other definitions.\"", 2, 3848, 905, 19024681249811965357, 
   "Local", "EthernetSimulation`currentTransmitters"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.959216593914356*^9},
 CellLabel->
  "During evaluation of \
In[3829]:=",ExpressionUUID->"f4cbb6c3-fa8c-43b0-8b4c-4ee629f62a45"],

Cell[BoxData[
 TemplateBox[{
  "Association", "setps", 
   "\"\\!\\(\\*RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\\\
\"ID\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"3\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"State\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"IDLE\\\\\\\"\\\"}], \\\",\\\
\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"AckPending\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"False\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"Stats\\\\\\\"\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\
\\\"PacketsSent\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"Collisions\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"TotalLatency\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"0\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"RTTs\\\\\\\"\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}]}], \
\\\"\[RightAssociation]\\\"}]}]}], \\\"\[RightAssociation]\\\"}]\\) in the \
part assignment is not a symbol.\"", 2, 3848, 906, 19024681249811965357, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9592165939197392`*^9},
 CellLabel->
  "During evaluation of \
In[3829]:=",ExpressionUUID->"0d01bae9-e64a-4eaf-81f1-60f4927a04ff"],

Cell[BoxData[
 TemplateBox[{
  "Association", "setps", 
   "\"\\!\\(\\*RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\\\
\"ID\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"3\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"State\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"IDLE\\\\\\\"\\\"}], \\\",\\\
\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"AckPending\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"False\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"Stats\\\\\\\"\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\
\\\"PacketsSent\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"Collisions\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"TotalLatency\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"0\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"RTTs\\\\\\\"\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}]}], \
\\\"\[RightAssociation]\\\"}]}]}], \\\"\[RightAssociation]\\\"}]\\) in the \
part assignment is not a symbol.\"", 2, 3848, 907, 19024681249811965357, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216593922438*^9},
 CellLabel->
  "During evaluation of \
In[3829]:=",ExpressionUUID->"bc6a8980-7eaf-4df8-afd6-bb7fac5864f9"],

Cell[BoxData[
 TemplateBox[{
  "Association", "setps", 
   "\"\\!\\(\\*RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\\\
\"ID\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"5\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"State\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"IDLE\\\\\\\"\\\"}], \\\",\\\
\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"AckPending\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"False\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"Stats\\\\\\\"\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\
\\\"PacketsSent\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"Collisions\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"TotalLatency\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"0\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"RTTs\\\\\\\"\\\", \
\\\"\[Rule]\\\", RowBox[{\\\"{\\\", \\\"}\\\"}]}]}], \
\\\"\[RightAssociation]\\\"}]}]}], \\\"\[RightAssociation]\\\"}]\\) in the \
part assignment is not a symbol.\"", 2, 3848, 908, 19024681249811965357, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.95921659392485*^9},
 CellLabel->
  "During evaluation of \
In[3829]:=",ExpressionUUID->"712ba76c-af77-44df-885a-f57bf3fb26bd"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Association\\\", \\\"::\
\\\", \\\"setps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 3848, 909, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216593927249*^9},
 CellLabel->
  "During evaluation of \
In[3829]:=",ExpressionUUID->"d6c77644-91da-4261-b0e2-78fdbffe05c9"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Channel Utilization: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Channel Utilization: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.95921659398701*^9},
 CellLabel->
  "During evaluation of \
In[3829]:=",ExpressionUUID->"b30e2514-9a05-4c42-8a91-bde6c8b71187"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collision Rate: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Collision Rate: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216593987462*^9},
 CellLabel->
  "During evaluation of \
In[3829]:=",ExpressionUUID->"062eb537-2e90-40fe-8002-296f251ac490"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "totalPackets", "shdw", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"totalPackets\\\\\\\"\\\"}]\\) \
appears in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"EthernetSimulation`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Global`\\\\\\\"\\\"}], \\\"}\\\"}]\\); definitions in context \\!\
\\(\\*RowBox[{\\\"\\\\\\\"EthernetSimulation`\\\\\\\"\\\"}]\\) may shadow or \
be shadowed by other definitions.\"", 2, 3857, 910, 19024681249811965357, 
   "Local", "EthernetSimulation`totalPackets"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.959216594032151*^9},
 CellLabel->
  "During evaluation of \
In[3829]:=",ExpressionUUID->"fa1b8bf6-b403-42a8-ba6b-28af224f44e1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Aggregate Throughput: \"\>", "\[InvisibleSpace]", "0.`", 
   "\[InvisibleSpace]", "\<\" bps\"\>"}],
  SequenceForm["Aggregate Throughput: ", 0., " bps"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216594035468*^9},
 CellLabel->
  "During evaluation of \
In[3829]:=",ExpressionUUID->"a764613d-0d1b-462e-8c04-9333e8a93608"],

Cell[BoxData["\<\"Simulation Complete\"\>"], "Print",
 CellChangeTimes->{3.9592165940463877`*^9},
 CellLabel->
  "During evaluation of \
In[3829]:=",ExpressionUUID->"968975f7-3645-4c30-b3ee-2299b3bc8ff3"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, 
         InterpretationBox[{
           TagBox[{{}, {}, 
             TagBox[{
               RGBColor[0.368417, 0.506779, 0.709798], 
               PointSize[
                NCache[
                 Rational[1, 180], 0.005555555555555556]], 
               AbsoluteThickness[2], 
               LineBox[CompressedData["
1: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
fwkfxV/G3f/f/wewsiyN
                "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}, {
            "WolframDynamicHighlight", <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
           StyleBox[
            DynamicBox[
             (Charting`HighlightActionBox["DynamicHighlight", {}, 
              Slot["HighlightElements"], 
              Slot["LayoutOptions"], 
              Slot["Meta"], 
              Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
                 Annotation[{
                   Hue[0.67, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[1, 180]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                   Line[CompressedData["
1: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
fwkfxV/G3f/f/wewsiyN
                    "]]}, "Charting`Private`Tag#1"]}}, <|
               "HighlightElements" -> <|
                 "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
                "LayoutOptions" -> <|
                 "PanelPlotLayout" -> <||>, 
                  "PlotRange" -> {{0, 5000.}, {-1, 1}}, 
                  "Frame" -> {{True, True}, {True, True}}, 
                  "AxesOrigin" -> {0, 0}, "ImageSize" -> {800, 200}, 
                  "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
                  Rational[1, 4], "DefaultStyle" -> {
                    Directive[
                    PointSize[
                    Rational[1, 180]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}, 
                  "HighlightLabelingFunctions" -> <|
                   "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                    "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                  False|>, 
                "Meta" -> <|
                 "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                  "Function" -> ListLinePlot, "GroupHighlight" -> 
                  False|>|>]]& )[<|
              "HighlightElements" -> <|
                "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
               "LayoutOptions" -> <|
                "PanelPlotLayout" -> <||>, 
                 "PlotRange" -> {{0, 5000.}, {-1, 1}}, 
                 "Frame" -> {{True, True}, {True, True}}, 
                 "AxesOrigin" -> {0, 0}, "ImageSize" -> {800, 200}, 
                 "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
                 Rational[1, 4], "DefaultStyle" -> {
                   Directive[
                    PointSize[
                    Rational[1, 180]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]]}, 
                 "HighlightLabelingFunctions" -> <|
                  "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                   "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                 False|>, 
               "Meta" -> <|
                "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                 "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>], 
             ImageSizeCache -> {{
              4.503599627370496*^15, -4.503599627370496*^15}, {
              4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
            False]}, 
          Annotation[{{{}, {}, 
             Annotation[{
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[
                 Rational[1, 180]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1: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
fwkfxV/G3f/f/wewsiyN
                "]]}, "Charting`Private`Tag#1"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 5000.}, {-1, 1}}, 
              "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0},
               "ImageSize" -> {800, 200}, "Axes" -> {False, False}, 
              "LabelStyle" -> {}, "AspectRatio" -> Rational[1, 4], 
              "DefaultStyle" -> {
                Directive[
                 PointSize[
                  Rational[1, 180]], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>, 
           "DynamicHighlight"]], {{}, {}}}, AspectRatio -> NCache[
          Rational[1, 4], 0.25], Axes -> {False, False}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, BaseStyle -> 12, 
        DisplayFunction -> Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{
           FormBox[
            TagBox["\"Activity\"", HoldForm], TraditionalForm], None}, {
           FormBox[
            TagBox["\"Time Slot\"", HoldForm], TraditionalForm], None}}, 
        FrameStyle -> Automatic, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.4, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], ImageSize -> 800, 
        Method -> {
         "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[2]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[2]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[2]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[2]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[2]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[2]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[2]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[2]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[2]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[2]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
          "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
          "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> 
          Automatic, "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}}, PlotLabel -> 
        FormBox["\"Channel Activity Over Time\"", TraditionalForm], 
        PlotRange -> {{0, 5000.}, {-1, 1}}, PlotRangeClipping -> True, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"0=IDLE, 0.5=COLLISION, 1=TRANSMISSION\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[
        InsetBox[
         FormBox["\"No RTT data collected\"", TraditionalForm], {0.5, 0.5}], 
        ImageSize -> 400], 
       GraphicsBox[{{
          Opacity[0], 
          
          PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
           0.}}]}, {{}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.6859999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.6859999999999999]]], 
              RGBColor[0, 0, 1]], 
             TagBox[
              TooltipBox[
               TagBox[
                
                RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                 0.}, "RoundingRadius" -> 0], StatusArea[#, 0]& , TagBoxNote -> 
                "0"], 
               StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
               Style[0, {}], "Tooltip"]& ]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.6859999999999999]]], 
              RGBColor[1, 0.5, 0]], 
             TagBox[
              TooltipBox[
               TagBox[
                
                RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                 0.9420631182289213}, "RoundingRadius" -> 0], 
                StatusArea[#, 0.9420631182289213]& , TagBoxNote -> 
                "0.9420631182289213"], 
               StyleBox["0.9420631182289213`", {}, StripOnInput -> False]], 
              Annotation[#, 
               Style[0.9420631182289213, {}], 
               "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
        DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {-0.8428550619082302, 0.}, 
         BaseStyle -> {FontFamily -> "Avenir", FontSize -> 12}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}, Frame -> True, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {{{1., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
             1., 
              FormBox["\"Simulated\"", TraditionalForm], 0}, {2., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
             2., 
              FormBox["\"Metcalfe Model\"", TraditionalForm], 0}}, {{1., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
             2., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}}, 
         GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> 400, PlotLabel -> 
         FormBox["\"Efficiency Comparison\"", TraditionalForm], 
         PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {None, 
            Scaled[0.05]}}, Ticks -> {None, Automatic}}]},
      "RowDefault"]},
    {
     TagBox[GridBox[{
        {"\<\"Station\"\>", "\<\"Packets Sent\"\>", "\<\"Collisions\"\>", "\<\
\"Avg RTT\"\>"},
        {"1", "0", "0", "0"},
        {"2", "0", "0", "0"},
        {"3", "0", "0", "0"},
        {"4", "0", "0", "0"},
        {"5", "0", "0", "0"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
           RGBColor[0.87, 0.94, 1], {
            GrayLevel[1], 
            GrayLevel[0.85]}}},
       GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxItemStyle->{"Columns" -> {{"Text"}}, "Rows" -> {{"Text"}}}],
      "Grid"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.959216594059516*^9},
 CellLabel->
  "Out[3869]=",ExpressionUUID->"1c5216c1-5dea-4e8f-adaa-eabdc45b98a6"],

Cell[BoxData[
 TemplateBox[{
  "totalPackets", "shdw", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"totalPackets\\\\\\\"\\\"}]\\) \
appears in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"EthernetSimulation`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Global`\\\\\\\"\\\"}], \\\"}\\\"}]\\); definitions in context \\!\
\\(\\*RowBox[{\\\"\\\\\\\"EthernetSimulation`\\\\\\\"\\\"}]\\) may shadow or \
be shadowed by other definitions.\"", 2, 732, 164, 19024688865372878773, 
   "Local", "EthernetSimulation`totalPackets"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.9592173470341177`*^9},
 CellLabel->"",ExpressionUUID->"b9ec7828-67ad-4074-bb96-9dcfb2ef0259"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Ethernet", " ", "Simulation", " ", "Parameters"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"numStations", "=", "8"}], ";"}], "         ", 
   RowBox[{"(*", 
    RowBox[{
    "Number", " ", "of", " ", "stations", " ", "on", " ", "the", " ", 
     "network"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"cableLength", "=", "100"}], ";"}], "        ", 
   RowBox[{"(*", 
    RowBox[{"Cable", " ", "length", " ", "in", " ", "meters"}], "*)"}], "\n", 
   
   RowBox[{
    RowBox[{"dataRate", "=", 
     RowBox[{"10", "^", "7"}]}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{"10", " ", "Mbps", " ", "data", " ", "rate", " ", "in", " ", 
     RowBox[{"bits", "/", "sec"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"propSpeed", "=", 
     RowBox[{"2", "*", 
      RowBox[{"10", "^", "8"}]}]}], ";"}], "       ", 
   RowBox[{"(*", 
    RowBox[{"Signal", " ", "propagation", " ", 
     RowBox[{"speed", ":", 
      RowBox[{
       RowBox[{"2", "/", "3"}], " ", "light", " ", "speed"}]}]}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"packetSize", "=", "12000"}], ";"}], "       ", 
   RowBox[{"(*", 
    RowBox[{"Data", " ", "packet", " ", "size", " ", "in", " ", "bits"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"ackSize", "=", "1200"}], ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{"ACK", " ", "packet", " ", "size", " ", "in", " ", "bits"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"maxBackoff", "=", "10"}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{"Maximum", " ", "backoff", " ", "exponent"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"simulationTime", "=", "0.1"}], ";"}], "     ", 
   RowBox[{"(*", 
    RowBox[{"Simulation", " ", "duration", " ", "in", " ", "seconds"}], 
    "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Derived", " ", "Parameters"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"slotTime", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"cableLength", "/", "propSpeed"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{"512", "/", "dataRate"}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Ethernet", " ", "slot", " ", "time"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"propDelay", "=", 
     RowBox[{"cableLength", "/", "propSpeed"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"One", "-", 
     RowBox[{"way", " ", "propagation", " ", "delay"}]}], "*)"}], "\n", "\n", 
   
   RowBox[{"(*", 
    RowBox[{"Station", " ", "State", " ", "Structure"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"stationTemplate", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<ID\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<Queue\>\"", "->", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"Packet", " ", "queue"}], "*)"}], 
       RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
       RowBox[{"(*", 
        RowBox[{"IDLE", ",", "BACKOFF", ",", "TRANSMITTING", ",", "JAMMING"}],
         "*)"}], 
       RowBox[{"\"\<BackoffCount\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<Collisions\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<TransmitStart\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<CurrentPacket\>\"", "->", "None"}], ",", 
       RowBox[{"\"\<RTT\>\"", "->", "0"}]}], "|>"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Initialize", " ", "Stations"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"stations", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Association", "[", 
        RowBox[{"stationTemplate", ",", 
         RowBox[{"\"\<ID\>\"", "->", "i"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Event", " ", "Queue"}], "-", 
     RowBox[{"{", 
      RowBox[{"time", ",", "type", ",", "stationID", ",", "packet"}], "}"}]}],
     "*)"}], "\n", 
   RowBox[{
    RowBox[{"eventQueue", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Channel", " ", "State"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"channelBusyUntil", "=", "0"}], ";"}], "     ", 
   RowBox[{"(*", 
    RowBox[{
    "Time", " ", "when", " ", "channel", " ", "becomes", " ", "idle"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"activeTransmitters", "=", 
     RowBox[{"{", "}"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Stations", " ", "currently", " ", "transmitting"}], "*)"}], "\n",
    "\n", 
   RowBox[{"(*", 
    RowBox[{"Helper", " ", "Functions"}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Add", " ", "event", " ", "to", " ", "queue"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"ScheduleEvent", "[", 
     RowBox[{"time_", ",", "type_", ",", "id_", ",", "packet_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"eventQueue", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"Append", "[", 
          RowBox[{"eventQueue", ",", 
           RowBox[{"{", 
            RowBox[{"time", ",", "type", ",", "id", ",", "packet"}], "}"}]}], 
          "]"}], ",", "First"}], "]"}]}], ";"}], ")"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Exponential", " ", "backoff", " ", "calculation"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"GetBackoffTime", "[", "collisions_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "k", "}"}], ",", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"Min", "[", 
         RowBox[{"collisions", ",", "maxBackoff"}], "]"}]}], ";", "\n", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"2", "^", "k"}], "-", "1"}]}], "}"}], "]"}], "*", 
        "slotTime"}]}]}], "]"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Main", " ", "Simulation", " ", "Loop"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"currentTime", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"packetCount", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"successCount", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"collisionCount", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"latencyMeasurements", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"While", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"currentTime", "<", "simulationTime"}], "&&", 
       RowBox[{"eventQueue", "=!=", 
        RowBox[{"{", "}"}]}]}], ",", 
      RowBox[{"(*", 
       RowBox[{"Get", " ", "next", " ", "event"}], "*)"}], 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "currentTime", ",", "eventType", ",", "stationID", ",", "packet"}], 
         "}"}], "=", 
        RowBox[{"First", "[", "eventQueue", "]"}]}], ";", "\n", 
       RowBox[{"eventQueue", "=", 
        RowBox[{"Rest", "[", "eventQueue", "]"}]}], ";", "\n", 
       RowBox[{"station", "=", 
        RowBox[{"stations", "[", 
         RowBox[{"[", "stationID", "]"}], "]"}]}], ";", "\n", 
       RowBox[{"Switch", "[", 
        RowBox[{"eventType", ",", 
         RowBox[{"(*", 
          RowBox[{"Packet", " ", "generation", " ", "event"}], "*)"}], 
         "\"\<PACKET_GEN\>\"", ",", 
         RowBox[{
          RowBox[{"packetCount", "++"}], ";", "\n", 
          RowBox[{"newPacket", "=", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<ID\>\"", "->", "packetCount"}], ",", 
             RowBox[{"\"\<GenTime\>\"", "->", "currentTime"}], ",", 
             RowBox[{"\"\<Src\>\"", "->", "stationID"}], ",", 
             RowBox[{"\"\<Dest\>\"", "->", 
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"stationID", ",", "numStations"}], "]"}], "+", 
               "1"}]}]}], "|>"}]}], ";", "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"stations", "[", 
             RowBox[{"[", "stationID", "]"}], "]"}], "[", "\"\<Queue\>\"", 
            "]"}], "=", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], ",", 
             "newPacket"}], "]"}]}], ";", "\n", 
          RowBox[{"ScheduleEvent", "[", 
           RowBox[{
           "currentTime", ",", "\"\<TRY_TRANSMIT\>\"", ",", "stationID", ",", 
            "None"}], "]"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{"Attempt", " ", "transmission"}], "*)"}], 
         "\"\<TRY_TRANSMIT\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<State\>\"", "]"}], "===", 
             "\"\<IDLE\>\""}], "&&", 
            RowBox[{"channelBusyUntil", "<=", "currentTime"}]}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=!=", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{"packetToSend", "=", 
               RowBox[{"First", "[", 
                RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], ";", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"stations", "[", 
                 RowBox[{"[", "stationID", "]"}], "]"}], "[", 
                "\"\<CurrentPacket\>\"", "]"}], "=", "packetToSend"}], ";", 
              "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"stations", "[", 
                 RowBox[{"[", "stationID", "]"}], "]"}], "[", "\"\<State\>\"",
                 "]"}], "=", "\"\<TRANSMITTING\>\""}], ";", "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"stations", "[", 
                 RowBox[{"[", "stationID", "]"}], "]"}], "[", 
                "\"\<TransmitStart\>\"", "]"}], "=", "currentTime"}], ";", 
              "\n", 
              RowBox[{"ScheduleEvent", "[", 
               RowBox[{
                RowBox[{"currentTime", "+", 
                 RowBox[{"packetSize", "/", "dataRate"}]}], ",", 
                "\"\<END_TRANSMIT\>\"", ",", "stationID", ",", 
                "packetToSend"}], "]"}], ";", "\n", 
              RowBox[{"activeTransmitters", "=", 
               RowBox[{"{", "stationID", "}"}]}], ";", "\n", 
              RowBox[{"channelBusyUntil", "=", 
               RowBox[{"currentTime", "+", 
                RowBox[{"packetSize", "/", "dataRate"}]}]}], ";", "\n", 
              RowBox[{"ScheduleEvent", "[", 
               RowBox[{
                RowBox[{"currentTime", "+", "propDelay"}], ",", 
                "\"\<START_DETECTION\>\"", ",", "stationID", ",", 
                "packetToSend"}], "]"}]}], ",", 
             RowBox[{"(*", 
              RowBox[{"Else", ":", 
               RowBox[{"no", " ", "packets", " ", "to", " ", "send"}]}], 
              "*)"}], "Null"}], "]"}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Start", " ", "of", " ", "vulnerable", " ", "period"}], 
          "*)"}], "\"\<START_DETECTION\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "activeTransmitters", "]"}], ">", "1"}], 
           ",", 
           RowBox[{"(*", 
            RowBox[{"Collision", " ", "detected"}], "*)"}], 
           RowBox[{
            RowBox[{"collisionCount", "++"}], ";", "\n", 
            RowBox[{"Scan", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"stations", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<State\>\"", 
                   "]"}], "=", "\"\<JAMMING\>\""}], ";", "\n", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"stations", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<Collisions\>\"",
                    "]"}], "++"}], ";", "\n", 
                 RowBox[{"ScheduleEvent", "[", 
                  RowBox[{
                   RowBox[{"currentTime", "+", 
                    RowBox[{"(", 
                    RowBox[{"512", "/", "dataRate"}], ")"}]}], ",", 
                   "\"\<END_JAMMING\>\"", ",", "#", ",", "None"}], "]"}]}], 
                ")"}], "&"}], ",", "activeTransmitters"}], "]"}], ";", "\n", 
            RowBox[{"activeTransmitters", "=", 
             RowBox[{"{", "}"}]}]}], ",", 
           RowBox[{"(*", 
            RowBox[{"Else", ":", 
             RowBox[{"no", " ", "collision"}]}], "*)"}], "Null"}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"End", " ", "of", " ", "transmission"}], "*)"}], 
         "\"\<END_TRANSMIT\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"station", "[", "\"\<State\>\"", "]"}], "===", 
            "\"\<TRANSMITTING\>\""}], ",", 
           RowBox[{"(*", 
            RowBox[{"Successful", " ", "transmission"}], "*)"}], 
           RowBox[{
            RowBox[{"successCount", "++"}], ";", "\n", 
            RowBox[{
             RowBox[{
              RowBox[{"stations", "[", 
               RowBox[{"[", "stationID", "]"}], "]"}], "[", "\"\<Queue\>\"", 
              "]"}], "=", 
             RowBox[{"Rest", "[", 
              RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], ";", 
            "\n", 
            RowBox[{
             RowBox[{
              RowBox[{"stations", "[", 
               RowBox[{"[", "stationID", "]"}], "]"}], "[", "\"\<State\>\"", 
              "]"}], "=", "\"\<IDLE\>\""}], ";", "\n", 
            RowBox[{"(*", 
             RowBox[{"Schedule", " ", "ACK", " ", "at", " ", "destination"}], 
             "*)"}], 
            RowBox[{"ScheduleEvent", "[", 
             RowBox[{
              RowBox[{"currentTime", "+", "propDelay"}], ",", 
              "\"\<ACK_PACKET\>\"", ",", 
              RowBox[{"packet", "[", "\"\<Dest\>\"", "]"}], ",", "packet"}], 
             "]"}], ";", "\n", 
            RowBox[{"(*", 
             RowBox[{"Schedule", " ", "next", " ", "transmission"}], "*)"}], 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=!=", 
               RowBox[{"{", "}"}]}], ",", 
              RowBox[{"ScheduleEvent", "[", 
               RowBox[{
               "currentTime", ",", "\"\<TRY_TRANSMIT\>\"", ",", "stationID", 
                ",", "None"}], "]"}]}], "]"}]}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"End", " ", "of", " ", "jamming"}], "*)"}], 
         "\"\<END_JAMMING\>\"", ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"stations", "[", 
             RowBox[{"[", "stationID", "]"}], "]"}], "[", "\"\<State\>\"", 
            "]"}], "=", "\"\<BACKOFF\>\""}], ";", "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"stations", "[", 
             RowBox[{"[", "stationID", "]"}], "]"}], "[", 
            "\"\<BackoffCount\>\"", "]"}], "=", 
           RowBox[{"GetBackoffTime", "[", 
            RowBox[{"station", "[", "\"\<Collisions\>\"", "]"}], "]"}]}], ";",
           "\n", 
          RowBox[{"ScheduleEvent", "[", 
           RowBox[{
            RowBox[{"currentTime", "+", 
             RowBox[{"station", "[", "\"\<BackoffCount\>\"", "]"}]}], ",", 
            "\"\<BACKOFF_END\>\"", ",", "stationID", ",", "None"}], "]"}]}], 
         ",", 
         RowBox[{"(*", 
          RowBox[{"Backoff", " ", "period", " ", "end"}], "*)"}], 
         "\"\<BACKOFF_END\>\"", ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"stations", "[", 
             RowBox[{"[", "stationID", "]"}], "]"}], "[", "\"\<State\>\"", 
            "]"}], "=", "\"\<IDLE\>\""}], ";", "\n", 
          RowBox[{"ScheduleEvent", "[", 
           RowBox[{
           "currentTime", ",", "\"\<TRY_TRANSMIT\>\"", ",", "stationID", ",", 
            "None"}], "]"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{"ACK", " ", "packet", " ", "generation"}], "*)"}], 
         "\"\<ACK_PACKET\>\"", ",", 
         RowBox[{
          RowBox[{"ackPacket", "=", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<ID\>\"", "->", 
              RowBox[{"-", 
               RowBox[{"packet", "[", "\"\<ID\>\"", "]"}]}]}], ",", 
             RowBox[{"\"\<GenTime\>\"", "->", "currentTime"}], ",", 
             RowBox[{"\"\<Src\>\"", "->", "stationID"}], ",", 
             RowBox[{"\"\<Dest\>\"", "->", 
              RowBox[{"packet", "[", "\"\<Src\>\"", "]"}]}], ",", 
             RowBox[{"\"\<DataPacket\>\"", "->", "packet"}]}], "|>"}]}], ";", 
          "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"stations", "[", 
             RowBox[{"[", "stationID", "]"}], "]"}], "[", "\"\<Queue\>\"", 
            "]"}], "=", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], ",", 
             "ackPacket"}], "]"}]}], ";", "\n", 
          RowBox[{"ScheduleEvent", "[", 
           RowBox[{
           "currentTime", ",", "\"\<TRY_TRANSMIT\>\"", ",", "stationID", ",", 
            "None"}], "]"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{"ACK", " ", "received"}], "*)"}], "\"\<ACK_RECEIVED\>\"", 
         ",", 
         RowBox[{
          RowBox[{"latency", "=", 
           RowBox[{"currentTime", "-", 
            RowBox[{
             RowBox[{"packet", "[", "\"\<DataPacket\>\"", "]"}], "[", 
             "\"\<GenTime\>\"", "]"}]}]}], ";", "\n", 
          RowBox[{"latencyMeasurements", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"latencyMeasurements", ",", "latency"}], "]"}]}], ";", 
          "\n", 
          RowBox[{
           RowBox[{
            RowBox[{"stations", "[", 
             RowBox[{"[", "stationID", "]"}], "]"}], "[", "\"\<RTT\>\"", 
            "]"}], "=", "latency"}], ";"}]}], "]"}]}]}], "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Generate", " ", "initial", " ", "traffic"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"ScheduleEvent", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.05"}], "}"}], "]"}], ",", 
          "\"\<PACKET_GEN\>\"", ",", "i", ",", "None"}], "]"}], ",", 
        RowBox[{"{", "5", "}"}]}], "  ", 
       RowBox[{"(*", 
        RowBox[{"5", " ", "packets", " ", "per", " ", "station"}], "*)"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Run", " ", "simulation"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"While", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eventQueue", "=!=", 
        RowBox[{"{", "}"}]}], "&&", 
       RowBox[{"currentTime", "<", "simulationTime"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "currentTime", ",", "eventType", ",", "stationID", ",", "packet"}], 
         "}"}], "=", 
        RowBox[{"First", "[", "eventQueue", "]"}]}], ";", "\n", 
       RowBox[{"eventQueue", "=", 
        RowBox[{"Rest", "[", "eventQueue", "]"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"...", " ", 
          RowBox[{"(", 
           RowBox[{
           "Event", " ", "handling", " ", "from", " ", "main", " ", "loop"}], 
           ")"}]}], "..."}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{
        "Special", " ", "handling", " ", "for", " ", "ACK", " ", "arrival"}], 
        "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eventType", "===", "\"\<END_TRANSMIT\>\""}], "&&", 
          RowBox[{"packet", "=!=", "None"}], "&&", 
          RowBox[{
           RowBox[{"packet", "[", "\"\<ID\>\"", "]"}], "<", "0"}]}], ",", 
         RowBox[{
          RowBox[{"ScheduleEvent", "[", 
           RowBox[{
            RowBox[{"currentTime", "+", "propDelay"}], ",", 
            "\"\<ACK_RECEIVED\>\"", ",", 
            RowBox[{"packet", "[", "\"\<Dest\>\"", "]"}], ",", "packet"}], 
           "]"}], ";"}]}], "]"}]}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Performance", " ", "Metrics"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"utilization", "=", 
     RowBox[{"successCount", "*", 
      RowBox[{"packetSize", "/", 
       RowBox[{"(", 
        RowBox[{"dataRate", "*", "currentTime"}], ")"}]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"collisionRate", "=", 
     RowBox[{"collisionCount", "/", 
      RowBox[{"(", 
       RowBox[{"successCount", "+", "collisionCount"}], ")"}]}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"meanLatency", "=", 
     RowBox[{"Mean", "[", "latencyMeasurements", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Simulation Complete\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", "\"\<========================================\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Simulation Time: \>\"", ",", "currentTime", ",", 
      "\"\< seconds\>\""}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Packets Sent: \>\"", ",", "packetCount"}], "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Successful Transmissions: \>\"", ",", "successCount"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Collisions: \>\"", ",", "collisionCount"}], "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Channel Utilization: \>\"", ",", 
      RowBox[{"utilization", "*", "100"}], ",", "\"\<%\>\""}], "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Collision Rate: \>\"", ",", 
      RowBox[{"collisionRate", "*", "100"}], ",", "\"\<%\>\""}], "]"}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Mean RTT: \>\"", ",", 
      RowBox[{"meanLatency", "*", "1000"}], ",", "\"\< ms\>\""}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Latency Measurements: \>\"", ",", "latencyMeasurements"}], 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Visualization", ":", 
     RowBox[{"Channel", " ", "Activity", " ", "Timeline"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"timelineEvents", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Scan", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "===", "\"\<END_TRANSMIT\>\""}], 
           "&&", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "=!=", "None"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"timelineEvents", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "[", "\"\<Size\>\"", "]"}],
                  "/", "dataRate"}], ")"}]}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}], 
        ")"}], "&"}], ",", "eventLog"}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"TimelinePlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Callout", "[", 
        RowBox[{
         RowBox[{"Interval", "[", "#1", "]"}], ",", "#3"}], "]"}], "&"}], "@@@",
       "timelineEvents"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "simulationTime"}], "}"}], ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Station\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Ethernet Channel Activity\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.959216687603737*^9, 3.959216687604916*^9}},
 CellLabel->
  "In[4064]:=",ExpressionUUID->"962e724e-5d59-4f80-b78c-265d0235ce04"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 4090, 931, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216687732242*^9},
 CellLabel->
  "During evaluation of \
In[4064]:=",ExpressionUUID->"b1e3fd32-972f-402d-aa6b-c1b77e915c28"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 4090, 932, 
   19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216687738683*^9},
 CellLabel->
  "During evaluation of \
In[4064]:=",ExpressionUUID->"8ca13b66-2980-42eb-8c41-bf284ffed506"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Simulation Complete\"\>"], "Print",
 CellChangeTimes->{3.9592166877414923`*^9},
 CellLabel->
  "During evaluation of \
In[4064]:=",ExpressionUUID->"5ed3343c-c885-4f8a-a2bb-d4faff25e7e4"],

Cell[BoxData["\<\"========================================\"\>"], "Print",
 CellChangeTimes->{3.959216687741935*^9},
 CellLabel->
  "During evaluation of \
In[4064]:=",ExpressionUUID->"c5bb3fa0-d460-4731-a5b2-75e9d39e907e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Simulation Time: \"\>", "\[InvisibleSpace]", 
   "0.04980251146997926`", "\[InvisibleSpace]", "\<\" seconds\"\>"}],
  SequenceForm["Simulation Time: ", 0.04980251146997926, " seconds"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592166877425547`*^9},
 CellLabel->
  "During evaluation of \
In[4064]:=",ExpressionUUID->"51e648e4-3667-4c45-96a0-055e59e5d593"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Packets Sent: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Packets Sent: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216687742989*^9},
 CellLabel->
  "During evaluation of \
In[4064]:=",ExpressionUUID->"78b87f29-9dde-4f1e-ae17-386f86be4241"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Successful Transmissions: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Successful Transmissions: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592166877434196`*^9},
 CellLabel->
  "During evaluation of \
In[4064]:=",ExpressionUUID->"3c3be467-aa98-44fc-ba9d-b3698d09e2e0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collisions: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Collisions: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216687743815*^9},
 CellLabel->
  "During evaluation of \
In[4064]:=",ExpressionUUID->"fbb0d875-fb49-4af9-a290-509b90db9a5d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Channel Utilization: \"\>", "\[InvisibleSpace]", "0.`", 
   "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["Channel Utilization: ", 0., "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216687744205*^9},
 CellLabel->
  "During evaluation of \
In[4064]:=",ExpressionUUID->"1986fb44-0a3b-44b5-944d-f3bd7bbb8e60"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collision Rate: \"\>", "\[InvisibleSpace]", "Indeterminate", 
   "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["Collision Rate: ", Indeterminate, "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592166877446003`*^9},
 CellLabel->
  "During evaluation of \
In[4064]:=",ExpressionUUID->"8617979c-9969-4538-b2cf-26501bfd64ec"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean RTT: \"\>", "\[InvisibleSpace]", 
   RowBox[{"1000", " ", 
    RowBox[{"Mean", "[", 
     RowBox[{"{", "}"}], "]"}]}], "\[InvisibleSpace]", "\<\" ms\"\>"}],
  SequenceForm["Mean RTT: ", 1000 Mean[{}], " ms"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592166877450027`*^9},
 CellLabel->
  "During evaluation of \
In[4064]:=",ExpressionUUID->"b334181a-d9c8-46c2-975d-8c3324766d72"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Latency Measurements: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "}"}]}],
  SequenceForm["Latency Measurements: ", {}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592166877454147`*^9},
 CellLabel->
  "During evaluation of \
In[4064]:=",ExpressionUUID->"5866c83f-7c09-494c-b3fe-b3c483e95f33"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{
   {AbsolutePointSize[0], Opacity[0], 
    PointBox[NCache[{{0, 0}, {1, Rational[3, 2]}}, {{0, 0}, {1, 1.5}}]], 
    PointBox[NCache[{{0, Rational[-1, 2]}, {1, 1}}, {{0, -0.5}, {1, 
       1}}]]}, {}, {
    {PointSize[0], Opacity[0], 
     PointBox[{{3.959198686786979*^9, 0}, {
       3.959198688786979*^9, 1}}]}, {}, {}}, {}, {}},
  AspectRatio->NCache[Rational[1, 2]/GoldenRatio, 0.3090169943749474],
  Axes->{False, False},
  AxesLabel->{
    FormBox["\"Time (s)\"", TraditionalForm], 
    FormBox["\"Station\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Frame->{{None, None}, {True, None}},
  FrameTicks->
   FrontEndValueCache[{{None, None}, {
     Charting`getDateTicks[Automatic, {Automatic}, 
       (Map[DateList, {
         SlotSequence[1]}]& )[
        SlotSequence[1]], None, 7, {{0.01, 0}, {0.005, 0}}, Automatic]& , 
      Automatic}}, {{None, None}, {{{-0.020000000000003126`, 
        FormBox["\"59.979\"", TraditionalForm], {0.006666666666666666, 0}}, {
       0., 
        FormBox["\"00.000\"", TraditionalForm], {0.006666666666666666, 0}}, {
       0.02, 
        FormBox["\"00.020\"", TraditionalForm], {0.006666666666666666, 0}}, {
       0.04, 
        FormBox["\"00.040\"", TraditionalForm], {0.006666666666666666, 0}}, {
       0.06, 
        FormBox["\"00.060\"", TraditionalForm], {0.006666666666666666, 0}}, {
       0.08, 
        FormBox["\"00.080\"", TraditionalForm], {0.006666666666666666, 0}}, {
       0.1, 
        FormBox["\"00.100\"", TraditionalForm], {0.006666666666666666, 0}}, {
       0.12, 
        FormBox["\"00.120\"", TraditionalForm], {
        0.006666666666666666, 0}}, {-0.020000000000003126`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {-0.015000000000000568`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {-0.00999999999999801, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {-0.0049999999999954525`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {7.105427357601002*^-15, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.005000000000009663, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.010000000000012221`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.01500000000001478, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.020000000000017337`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.025000000000019895`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.030000000000022453`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.03500000000002501, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.04000000000002757, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.04500000000003013, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.050000000000032685`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.05500000000003524, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.0600000000000378, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.06500000000004036, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.07000000000004292, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.07500000000004547, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.08000000000004803, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.08500000000005059, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.09000000000005315, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.0950000000000557, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.10000000000005826`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}, {0.10500000000006082`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0}}}, Automatic}}],
  GridLines->{None, None},
  ImagePadding->All,
  ImageSize->{600, Automatic},
  PlotLabel->FormBox["\"Ethernet Channel Activity\"", TraditionalForm],
  PlotRange->{{0., 0.1}, {0, All}},
  PlotRangePadding->{{
     Scaled[0.06], 
     Scaled[0.06]}, {None, 
     Scaled[0.05]}},
  Ticks->{{{-7.889184*^8, 
      FormBox["\"1875\"", TraditionalForm], {0.006666666666666666, 0}}, {0., 
      FormBox["\"1900\"", TraditionalForm], {0.006666666666666666, 0}}, {
     7.889184*^8, 
      FormBox["\"1925\"", TraditionalForm], {0.006666666666666666, 0}}, {
     1.5778368*^9, 
      FormBox["\"1950\"", TraditionalForm], {0.006666666666666666, 0}}, {
     2.3667552*^9, 
      FormBox["\"1975\"", TraditionalForm], {0.006666666666666666, 0}}, {
     3.1556736*^9, 
      FormBox["\"2000\"", TraditionalForm], {0.006666666666666666, 0}}, {
     3.9446784*^9, 
      FormBox["\"2025\"", TraditionalForm], {0.006666666666666666, 0}}, {
     4.7335968*^9, 
      FormBox["\"2050\"", TraditionalForm], {
      0.006666666666666666, 0}}, {-7.889184*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {-6.31152*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {-4.732992*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {-3.155328*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {-1.577664*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {0., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {1.577664*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.155328*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {4.732992*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {6.310656*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {7.889184*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {9.466848*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {1.1044512*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {1.2622176*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {1.4200704*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {1.5778368*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {1.7356032*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {1.8933696*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {2.0512224*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {2.2089888*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {2.3667552*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {2.5245216*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {2.6823744*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {2.8401408*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {2.9979072*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.1556736*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.3135264*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.4712928*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.6290592*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7868256*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.9446784*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {4.1024448*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}}, None}]], "Output",
 CellChangeTimes->{3.959216687794971*^9},
 CellLabel->
  "Out[4104]=",ExpressionUUID->"57532624-78e1-4f15-8548-26e32d68e60f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetSystemOptions", "[", 
    RowBox[{"\"\<CatchMachineUnderflow\>\"", "->", "False"}], "]"}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Simulation", " ", "parameters"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nStations", "=", "5"}], ";"}], "                 ", 
  RowBox[{"(*", 
   RowBox[{
   "Number", " ", "of", " ", "stations", " ", "on", " ", "the", " ", 
    "network"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dataRate", "=", 
    RowBox[{"3", "*", 
     RowBox[{"10", "^", "6"}]}]}], ";"}], "             ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"3", " ", "Mbps", " ", "data", " ", "rate"}], "-", 
    RowBox[{"original", " ", "Ethernet"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"slotTime", "=", 
    RowBox[{"16", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}]}]}], ";"}], "           ", 
  RowBox[{"(*", 
   RowBox[{
   "51.2", " ", "\[Mu]s", " ", "slot", " ", "time", " ", "for", " ", 
    "collision", " ", "detection"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cableLength", "=", "1000"}], ";"}], "            ", 
  RowBox[{"(*", 
   RowBox[{"Cable", " ", "length", " ", "in", " ", "meters"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"propSpeed", "=", 
    RowBox[{"2", "*", 
     RowBox[{"10", "^", "8"}]}]}], ";"}], "            ", 
  RowBox[{"(*", 
   RowBox[{"Signal", " ", "propagation", " ", 
    RowBox[{"speed", ":", 
     RowBox[{
      RowBox[{"2", "/", "3"}], " ", "light", " ", "speed"}]}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"maxSimTime", "=", "0.1"}], ";"}], "              ", 
  RowBox[{"(*", 
   RowBox[{"Simulation", " ", "duration", " ", "in", " ", "seconds"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"packetSize", "=", "12000"}], ";"}], "            ", 
  RowBox[{"(*", 
   RowBox[{"1500", " ", "byte", " ", "packets", " ", "in", " ", "bits"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arrivalRate", "=", "0.02"}], ";"}], "            ", 
  RowBox[{"(*", 
   RowBox[{
   "Packet", " ", "arrival", " ", "rate", " ", "per", " ", "station", " ", 
    "per", " ", "slot"}], "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Derived", " ", "parameters"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"bitsPerSlot", "=", 
   RowBox[{"dataRate", "*", "slotTime"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"propDelay", "=", 
   RowBox[{"cableLength", "/", "propSpeed"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"transmissionSlots", "=", 
    RowBox[{"Ceiling", "[", 
     RowBox[{"packetSize", "/", "bitsPerSlot"}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Initialize", " ", "stations"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"initStation", "[", "id_", "]"}], ":=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<ID\>\"", "->", "id"}], ",", 
      RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
      RowBox[{"\"\<Queue\>\"", "->", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"\"\<BackoffCount\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<CollisionCount\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<TransmitTime\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<SuccessfulTx\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<Collisions\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<TotalDelay\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<Attempts\>\"", "->", "0"}]}], "|>"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"stations", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"initStation", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"channel", "=", "\"\<IDLE\>\""}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Channel", " ", 
     RowBox[{"state", ":", "IDLE"}]}], ",", "BUSY", ",", 
    RowBox[{"or", " ", "COLLISION"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"transmittingStations", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eventLog", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"currentTime", "=", "0"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Helper", " ", "functions"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"startTransmission", "[", "station_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "updatedStation", "}"}], ",", 
      RowBox[{
       RowBox[{"updatedStation", "=", "station"}], ";", "\n", 
       RowBox[{
        RowBox[{"updatedStation", "[", "\"\<State\>\"", "]"}], "=", 
        "\"\<TRANSMITTING\>\""}], ";", "\n", 
       RowBox[{
        RowBox[{"updatedStation", "[", "\"\<TransmitTime\>\"", "]"}], "=", 
        "currentTime"}], ";", "\n", 
       RowBox[{
        RowBox[{"updatedStation", "[", "\"\<Attempts\>\"", "]"}], "+=", "1"}],
        ";", "\n", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"transmittingStations", ",", 
         RowBox[{"station", "[", "\"\<ID\>\"", "]"}]}], "]"}], ";", "\n", 
       "updatedStation"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"detectCollision", "[", "station_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"updatedStation", ",", "k", ",", "backoff"}], "}"}], ",", 
      RowBox[{
       RowBox[{"updatedStation", "=", "station"}], ";", "\n", 
       RowBox[{
        RowBox[{"updatedStation", "[", "\"\<State\>\"", "]"}], "=", 
        "\"\<BACKOFF\>\""}], ";", "\n", 
       RowBox[{
        RowBox[{"updatedStation", "[", "\"\<CollisionCount\>\"", "]"}], "+=", 
        "1"}], ";", "\n", 
       RowBox[{
        RowBox[{"updatedStation", "[", "\"\<Collisions\>\"", "]"}], "+=", 
        "1"}], ";", "\n", 
       RowBox[{"k", "=", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"updatedStation", "[", "\"\<CollisionCount\>\"", "]"}], ",",
           "10"}], "]"}]}], ";", "\n", 
       RowBox[{"backoff", "=", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"2", "^", "k"}], "-", "1"}]}], "}"}], "]"}]}], ";", "\n", 
       
       RowBox[{
        RowBox[{"updatedStation", "[", "\"\<BackoffCount\>\"", "]"}], "=", 
        "backoff"}], ";", "\n", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"eventLog", ",", 
         RowBox[{"{", 
          RowBox[{"currentTime", ",", "\"\<COLLISION\>\"", ",", 
           RowBox[{"station", "[", "\"\<ID\>\"", "]"}]}], "}"}]}], "]"}], ";",
        "\n", "updatedStation"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"completeTransmission", "[", "station_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "updatedStation", "}"}], ",", 
      RowBox[{
       RowBox[{"updatedStation", "=", "station"}], ";", "\n", 
       RowBox[{
        RowBox[{"updatedStation", "[", "\"\<State\>\"", "]"}], "=", 
        "\"\<IDLE\>\""}], ";", "\n", 
       RowBox[{
        RowBox[{"updatedStation", "[", "\"\<CollisionCount\>\"", "]"}], "=", 
        "0"}], ";", "\n", 
       RowBox[{
        RowBox[{"updatedStation", "[", "\"\<SuccessfulTx\>\"", "]"}], "+=", 
        "1"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "and", " ", "record", " ", "transmission", " ", 
         "delay"}], "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}], ">", "0"}], 
         ",", 
         RowBox[{
          RowBox[{"packet", "=", 
           RowBox[{"First", "[", 
            RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], ";", 
          "\n", 
          RowBox[{"delay", "=", 
           RowBox[{"currentTime", "-", 
            RowBox[{"packet", "[", "\"\<ArrivalTime\>\"", "]"}]}]}], ";", 
          "\n", 
          RowBox[{
           RowBox[{"updatedStation", "[", "\"\<TotalDelay\>\"", "]"}], "+=", 
           "delay"}], ";", "\n", 
          RowBox[{
           RowBox[{"updatedStation", "[", "\"\<Queue\>\"", "]"}], "=", 
           RowBox[{"Rest", "[", 
            RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], ";"}]}], 
        "]"}], ";", "\n", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"eventLog", ",", 
         RowBox[{"{", 
          RowBox[{"currentTime", ",", "\"\<SUCCESS\>\"", ",", 
           RowBox[{"station", "[", "\"\<ID\>\"", "]"}]}], "}"}]}], "]"}], ";",
        "\n", "updatedStation"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"processBackoff", "[", "station_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "updatedStation", "}"}], ",", 
      RowBox[{
       RowBox[{"updatedStation", "=", "station"}], ";", "\n", 
       RowBox[{
        RowBox[{"updatedStation", "[", "\"\<BackoffCount\>\"", "]"}], "-=", 
        "1"}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"updatedStation", "[", "\"\<BackoffCount\>\"", "]"}], "<=", 
          "0"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"updatedStation", "[", "\"\<State\>\"", "]"}], "=", 
           "\"\<IDLE\>\""}], ";"}]}], "]"}], ";", "\n", "updatedStation"}]}], 
     "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Main", " ", "simulation", " ", "loop"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{"currentTime", "<", "maxSimTime"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Update", " ", "channel", " ", "state"}], "*)"}], 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "transmittingStations", "]"}], "==", "0"}], 
        ",", 
        RowBox[{"channel", "=", "\"\<IDLE\>\""}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "transmittingStations", "]"}], "==", "1"}], 
          ",", 
          RowBox[{"channel", "=", "\"\<BUSY\>\""}], ",", 
          RowBox[{"channel", "=", "\"\<COLLISION\>\""}]}], "]"}]}], "]"}], 
      ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"Process", " ", "each", " ", "station"}], "*)"}], 
      RowBox[{"newStations", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"newTransmitting", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"station", "=", 
          RowBox[{"stations", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{"Packet", " ", "arrival"}], "*)"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], "<", "arrivalRate"}], ",", 
           RowBox[{
            RowBox[{"newPacket", "=", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<Size\>\"", "->", "packetSize"}], ",", 
               RowBox[{"\"\<ArrivalTime\>\"", "->", "currentTime"}]}], 
              "|>"}]}], ";", "\n", 
            RowBox[{
             RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], ",", 
               "newPacket"}], "]"}]}], ";"}]}], "]"}], ";", "\n", 
         RowBox[{"Switch", "[", 
          RowBox[{
           RowBox[{"station", "[", "\"\<State\>\"", "]"}], ",", 
           "\"\<IDLE\>\"", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"channel", "==", "\"\<IDLE\>\""}], "&&", 
              RowBox[{
               RowBox[{"station", "[", "\"\<BackoffCount\>\"", "]"}], "==", 
               "0"}], "&&", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}], ">", 
               "0"}]}], ",", 
             RowBox[{
              RowBox[{"station", "=", 
               RowBox[{"startTransmission", "[", "station", "]"}]}], ";"}]}], 
            "]"}], ",", "\"\<TRANSMITTING\>\"", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"channel", "==", "\"\<COLLISION\>\""}], ",", 
             RowBox[{"station", "=", 
              RowBox[{"detectCollision", "[", "station", "]"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"currentTime", "-", 
                 RowBox[{"station", "[", "\"\<TransmitTime\>\"", "]"}]}], ">=", 
                RowBox[{"transmissionSlots", "*", "slotTime"}]}], ",", 
               RowBox[{"station", "=", 
                RowBox[{"completeTransmission", "[", "station", "]"}]}], ",", 
               
               RowBox[{"AppendTo", "[", 
                RowBox[{"newTransmitting", ",", 
                 RowBox[{"station", "[", "\"\<ID\>\"", "]"}]}], "]"}]}], 
              "]"}]}], "]"}], ",", "\"\<BACKOFF\>\"", ",", 
           RowBox[{"station", "=", 
            RowBox[{"processBackoff", "[", "station", "]"}]}]}], "]"}], ";", 
         "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"newStations", ",", "station"}], "]"}], ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";", "\n", 
      RowBox[{"stations", "=", "newStations"}], ";", "\n", 
      RowBox[{"transmittingStations", "=", "newTransmitting"}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "Advance", " ", "simulation", " ", "time", " ", "by", " ", "one", " ", 
        "slot"}], "*)"}], 
      RowBox[{"currentTime", "+=", "slotTime"}], ";"}]}], "]"}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Simulation", " ", "statistics"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"totalPackets", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "\"\<SuccessfulTx\>\"", "]"}], "&"}], "/@", 
     "stations"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"totalCollisions", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "\"\<Collisions\>\"", "]"}], "&"}], "/@", 
     "stations"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"totalAttempts", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "\"\<Attempts\>\"", "]"}], "&"}], "/@", "stations"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"avgDelay", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<TotalDelay\>\"", "]"}], "/", 
       RowBox[{"Max", "[", 
        RowBox[{"1", ",", 
         RowBox[{"#", "[", "\"\<SuccessfulTx\>\"", "]"}]}], "]"}]}], "&"}], "/@",
      "stations"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"channelUtilization", "=", 
    RowBox[{"totalPackets", "*", 
     RowBox[{"packetSize", "/", 
      RowBox[{"(", 
       RowBox[{"dataRate", "*", "currentTime"}], ")"}]}]}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Output", " ", "results"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Simulation Complete\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<========================================\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Stations: \>\"", ",", "nStations"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Simulation Time: \>\"", ",", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"currentTime", ",", "6"}], "]"}], ",", "\"\< seconds\>\""}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Total Packets Sent: \>\"", ",", "totalPackets"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Total Collisions: \>\"", ",", "totalCollisions"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Collision Rate: \>\"", ",", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"totalCollisions", "/", "totalAttempts"}], "*", "100"}], ",", 
      "4"}], "]"}], ",", "\"\<%\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Average Delay: \>\"", ",", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{"avgDelay", "*", "1000"}], ",", "4"}], "]"}], ",", 
    "\"\< ms\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Channel Utilization: \>\"", ",", 
    RowBox[{"NumberForm", "[", 
     RowBox[{
      RowBox[{"channelUtilization", "*", "100"}], ",", "4"}], "]"}], ",", 
    "\"\<%\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "Print", "[", "\"\<========================================\>\"", "]"}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Visualization", ":", 
    RowBox[{"Channel", " ", "Activity", " ", "Timeline"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"timelineEvents", "=", 
   RowBox[{"SortBy", "[", 
    RowBox[{"eventLog", ",", "First"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"timelinePlot", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cases", "[", 
         RowBox[{"timelineEvents", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t_", ",", "\"\<SUCCESS\>\"", ",", "id_"}], "}"}], ":>", 
           RowBox[{"{", 
            RowBox[{"t", ",", "id"}], "}"}]}]}], "]"}], ",", 
        RowBox[{"Cases", "[", 
         RowBox[{"timelineEvents", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t_", ",", "\"\<COLLISION\>\"", ",", "id_"}], "}"}], ":>", 
           RowBox[{"{", 
            RowBox[{"t", ",", "id"}], "}"}]}]}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Red"}], "}"}]}], ",", 
      RowBox[{"PlotMarkers", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<\[FilledCircle]\>\"", ",", "8"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Station ID\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Ethernet Channel Activity Timeline\>\""}], ",", 
      
      RowBox[{"ImageSize", "->", "800"}], ",", 
      RowBox[{"Epilog", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Successful Transmission\>\"", ",", "10", ",", 
             RowBox[{"Darker", "[", "Green", "]"}]}], "]"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.8", ",", "0.9"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Collision\>\"", ",", "10", ",", "Red"}], "]"}], ",", 
           
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.8", ",", "0.85"}], "}"}], "]"}]}], "]"}]}], "}"}]}]}],
      "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Visualization", ":", 
    RowBox[{"Station", " ", "Statistics"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stationStats", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s", "[", "\"\<ID\>\"", "]"}], ",", 
        RowBox[{"s", "[", "\"\<SuccessfulTx\>\"", "]"}], ",", 
        RowBox[{"s", "[", "\"\<Collisions\>\"", "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"s", "[", "\"\<SuccessfulTx\>\"", "]"}], ">", "0"}], ",", 
          RowBox[{
           RowBox[{"s", "[", "\"\<TotalDelay\>\"", "]"}], "/", 
           RowBox[{"s", "[", "\"\<SuccessfulTx\>\"", "]"}]}], ",", "0"}], 
         "]"}], ",", 
        RowBox[{"s", "[", "\"\<Attempts\>\"", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "stations"}], "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"statsPlot", "=", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"Prepend", "[", 
       RowBox[{"stationStats", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Station\>\"", ",", "\"\<Success\>\"", ",", "\"\<Collisions\>\"",
           ",", "\"\<Avg Delay (s)\>\"", ",", "\"\<Attempts\>\""}], "}"}]}], 
       "]"}], ",", 
      RowBox[{"Frame", "->", "All"}], ",", 
      RowBox[{"Background", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"LightBlue", ",", 
           RowBox[{"{", 
            RowBox[{"LightYellow", ",", "LightGreen"}], "}"}]}], "}"}]}], 
        "}"}]}], ",", 
      RowBox[{"Alignment", "->", "Center"}], ",", 
      RowBox[{"ItemStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Automatic"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Display", " ", "results"}], "*)"}]}], "\n", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"timelinePlot", ",", "statsPlot"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.95921673156756*^9, 3.95921673156892*^9}},
 CellLabel->
  "In[4318]:=",ExpressionUUID->"9d8607f4-f2a0-408a-b414-913d21339ee0"],

Cell[BoxData[
 TemplateBox[{
  "SetSystemOptions", "sysname", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"CatchMachineUnderflow\\\\\\\"\\\"}]\\) is \
not a known SystemOption.\"", 2, 4319, 990, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216731730955*^9},
 CellLabel->
  "During evaluation of \
In[4318]:=",ExpressionUUID->"da389032-9d52-4596-86c1-c6f5c484aeb8"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Simulation Complete\"\>"], "Print",
 CellChangeTimes->{3.959216731821466*^9},
 CellLabel->
  "During evaluation of \
In[4318]:=",ExpressionUUID->"508cefd6-5231-431c-afd0-9700c161a13e"],

Cell[BoxData["\<\"========================================\"\>"], "Print",
 CellChangeTimes->{3.959216731821939*^9},
 CellLabel->
  "During evaluation of \
In[4318]:=",ExpressionUUID->"1c2504bd-3e52-4964-a6d2-b5a422700f23"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Stations: \"\>", "\[InvisibleSpace]", "5"}],
  SequenceForm["Stations: ", 5],
  Editable->False]], "Print",
 CellChangeTimes->{3.95921673182251*^9},
 CellLabel->
  "During evaluation of \
In[4318]:=",ExpressionUUID->"5aea88e5-9df1-4ed7-90af-25ed87997328"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Simulation Time: \"\>", "\[InvisibleSpace]", 
   TagBox[
    FractionBox[
     InterpretationBox[
      StyleBox["\<\"1\"\>",
       ShowStringCharacters->False],
      1,
      Editable->False], 
     InterpretationBox[
      StyleBox["\<\"10\"\>",
       ShowStringCharacters->False],
      10,
      Editable->False]],
    NumberForm[#, 6]& ], "\[InvisibleSpace]", "\<\" seconds\"\>"}],
  SequenceForm["Simulation Time: ", 
   NumberForm[
    Rational[1, 10], 6], " seconds"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592167318229227`*^9},
 CellLabel->
  "During evaluation of \
In[4318]:=",ExpressionUUID->"1b1ed481-afa8-4681-a7c8-11182b9dcf23"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Packets Sent: \"\>", "\[InvisibleSpace]", "24"}],
  SequenceForm["Total Packets Sent: ", 24],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592167318233767`*^9},
 CellLabel->
  "During evaluation of \
In[4318]:=",ExpressionUUID->"d87a379b-74fa-459a-8ad8-8e36bcc3dfdc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Collisions: \"\>", "\[InvisibleSpace]", "11"}],
  SequenceForm["Total Collisions: ", 11],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216731823783*^9},
 CellLabel->
  "During evaluation of \
In[4318]:=",ExpressionUUID->"7694f089-3f44-4170-bc9b-15bae0ead641"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collision Rate: \"\>", "\[InvisibleSpace]", 
   TagBox[
    FractionBox[
     InterpretationBox[
      StyleBox["\<\"275\"\>",
       ShowStringCharacters->False],
      275,
      Editable->False], 
     InterpretationBox[
      StyleBox["\<\"9\"\>",
       ShowStringCharacters->False],
      9,
      Editable->False]],
    NumberForm[#, 4]& ], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["Collision Rate: ", 
   NumberForm[
    Rational[275, 9], 4], "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216731824182*^9},
 CellLabel->
  "During evaluation of \
In[4318]:=",ExpressionUUID->"6a89767f-856a-4cd9-831d-10341c849ae3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Average Delay: \"\>", "\[InvisibleSpace]", 
   TagBox[
    FractionBox[
     InterpretationBox[
      StyleBox["\<\"145828\"\>",
       ShowStringCharacters->False],
      145828,
      Editable->False], 
     InterpretationBox[
      StyleBox["\<\"14375\"\>",
       ShowStringCharacters->False],
      14375,
      Editable->False]],
    NumberForm[#, 4]& ], "\[InvisibleSpace]", "\<\" ms\"\>"}],
  SequenceForm["Average Delay: ", 
   NumberForm[
    Rational[145828, 14375], 4], " ms"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9592167318247433`*^9},
 CellLabel->
  "During evaluation of \
In[4318]:=",ExpressionUUID->"b960dd3a-615c-485e-ad36-653dcf507d87"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Channel Utilization: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"96\"\>",
      ShowStringCharacters->False],
     96,
     Editable->False],
    NumberForm[#, 4]& ], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["Channel Utilization: ", 
   NumberForm[96, 4], "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216731825241*^9},
 CellLabel->
  "During evaluation of \
In[4318]:=",ExpressionUUID->"d1350c3f-4a6a-48e1-90a5-ca77f53c5490"],

Cell[BoxData["\<\"========================================\"\>"], "Print",
 CellChangeTimes->{3.959216731825601*^9},
 CellLabel->
  "During evaluation of \
In[4318]:=",ExpressionUUID->"3ae6e554-947f-4459-8aa1-f3fb7474d083"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{{
          TagBox[{
            Directive[
             PointSize[0.012833333333333334`], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], FontFamily -> "Avenir", FontSize -> 12, 
             RGBColor[0, 1, 0]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                "\"\[FilledCircle]\"", FontSize -> 8, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGCQAGJGIGYC4pfxk06JFBfYM4ABh0P8luPcLz80QPkCDsKJ
hy9rp3bC5Vs82mSiz0+A8+seaPkrvJkC51dWnG98yjETzi8WKNmySnUunG8e
0vPZfOECON9kwb2eWesXwfmGbwzU/u5dAufrWTTvjz+zDM7XbrkacejWCjhf
84L6J5WXq+B8NZmq7vbva+B85YwzKq9Y18P5AlH88WpdG+B8/oYdq8MnboTz
eZcl/uiYsQnO5znD5bpr/mY4n+vT5omvl22B8zklYu/JrNsK53PYsWn7bd0G
57OlrC+v37Mdzmftijiy4fAOOB8AcMJiFQ==
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Directive[
             PointSize[0.012833333333333334`], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], FontFamily -> "Avenir", FontSize -> 12, 
             RGBColor[1, 0, 0]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                "\"\[FilledCircle]\"", FontSize -> 8, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}], {{{0.004064, 1.}}, {{0.004064, 
             2.}}, {{0.004064, 3.}}, {{0.004064, 4.}}, {{0.004064, 5.}}, {{
             0.004128, 3.}}, {{0.004128, 4.}}, {{0.004224, 3.}}, {{0.004224, 
             4.}}, {{0.00832, 3.}}, {{0.00832, 4.}}}]}, 
           Annotation[#, "Charting`Private`Tag#2"]& ]}}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
       StyleBox[
        DynamicBox[
         (Charting`HighlightActionBox["DynamicHighlight", {}, 
          Slot["HighlightElements"], 
          Slot["LayoutOptions"], 
          Slot["Meta"], 
          Charting`HighlightActionFunction["DynamicHighlight", {{
             Annotation[{
               Directive[
                PointSize[0.012833333333333334`], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Avenir", FontSize -> 
                12, 
                RGBColor[0, 1, 0]], 
               GeometricTransformation[
                Inset[
                 Style["\[FilledCircle]", FontSize -> 8], {0., 
                 0.}], CompressedData["
1:eJxTTMoPSmVmYGCQAGJGIGYC4pfxk06JFBfYM4ABh0P8luPcLz80QPkCDsKJ
hy9rp3bC5Vs82mSiz0+A8+seaPkrvJkC51dWnG98yjETzi8WKNmySnUunG8e
0vPZfOECON9kwb2eWesXwfmGbwzU/u5dAufrWTTvjz+zDM7XbrkacejWCjhf
84L6J5WXq+B8NZmq7vbva+B85YwzKq9Y18P5AlH88WpdG+B8/oYdq8MnboTz
eZcl/uiYsQnO5znD5bpr/mY4n+vT5omvl22B8zklYu/JrNsK53PYsWn7bd0G
57OlrC+v37Mdzmftijiy4fAOOB8AcMJiFQ==
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                PointSize[0.012833333333333334`], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Avenir", FontSize -> 
                12, 
                RGBColor[1, 0, 0]], 
               GeometricTransformation[
                Inset[
                 Style["\[FilledCircle]", FontSize -> 8], {0., 0.}], {{{
                0.004064, 1.}}, {{0.004064, 2.}}, {{0.004064, 3.}}, {{
                0.004064, 4.}}, {{0.004064, 5.}}, {{0.004128, 3.}}, {{
                0.004128, 4.}}, {{0.004224, 3.}}, {{0.004224, 4.}}, {{0.00832,
                 3.}}, {{0.00832, 4.}}}]}, "Charting`Private`Tag#2"]}}, <|
           "HighlightElements" -> <|
             "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
            "LayoutOptions" -> <|
             "PanelPlotLayout" -> <||>, 
              "PlotRange" -> {{0, 0.096736`16.}, {0, 5.`16.}}, 
              "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0},
               "ImageSize" -> {800, 800/GoldenRatio}, 
              "Axes" -> {False, False}, 
              "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
              GoldenRatio^(-1), "DefaultStyle" -> {
                Directive[
                 PointSize[0.012833333333333334`], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Avenir", FontSize -> 
                 12, 
                 RGBColor[1, 0, 0]], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], FontFamily -> "Avenir", FontSize -> 
                 12, 
                 RGBColor[0, 1, 0]]}, 
              "HighlightLabelingFunctions" -> <|
               "CoordinatesToolOptions" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), 
                "ScalingFunctions" -> {{Identity, Identity}, {
                  Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
              False|>, 
            "Meta" -> <|
             "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
              "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{0, 0.096736`16.}, {0, 5.`16.}}, 
             "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
             "ImageSize" -> {800, 800/GoldenRatio}, "Axes" -> {False, False}, 
             "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[0.012833333333333334`], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Avenir", FontSize -> 
                12, 
                RGBColor[1, 0, 0]], 
               Directive[
                PointSize[0.012833333333333334`], 
                CapForm["Butt"], 
                AbsoluteThickness[1.6], FontFamily -> "Avenir", FontSize -> 
                12, 
                RGBColor[0, 1, 0]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>]], 
        Selectable -> False]}, 
      Annotation[{{
         Annotation[{
           Directive[
            PointSize[0.012833333333333334`], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], FontFamily -> "Avenir", FontSize -> 12, 
            RGBColor[0, 1, 0]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledCircle]", FontSize -> 8], {0., 
             0.}], CompressedData["
1:eJxTTMoPSmVmYGCQAGJGIGYC4pfxk06JFBfYM4ABh0P8luPcLz80QPkCDsKJ
hy9rp3bC5Vs82mSiz0+A8+seaPkrvJkC51dWnG98yjETzi8WKNmySnUunG8e
0vPZfOECON9kwb2eWesXwfmGbwzU/u5dAufrWTTvjz+zDM7XbrkacejWCjhf
84L6J5WXq+B8NZmq7vbva+B85YwzKq9Y18P5AlH88WpdG+B8/oYdq8MnboTz
eZcl/uiYsQnO5znD5bpr/mY4n+vT5omvl22B8zklYu/JrNsK53PYsWn7bd0G
57OlrC+v37Mdzmftijiy4fAOOB8AcMJiFQ==
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            PointSize[0.012833333333333334`], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], FontFamily -> "Avenir", FontSize -> 12, 
            RGBColor[1, 0, 0]], 
           GeometricTransformation[
            Inset[
             Style["\[FilledCircle]", FontSize -> 8], {0., 0.}], {{{0.004064, 
            1.}}, {{0.004064, 2.}}, {{0.004064, 3.}}, {{0.004064, 4.}}, {{
            0.004064, 5.}}, {{0.004128, 3.}}, {{0.004128, 4.}}, {{0.004224, 
            3.}}, {{0.004224, 4.}}, {{0.00832, 3.}}, {{0.00832, 4.}}}]}, 
          "Charting`Private`Tag#2"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{0, 0.096736`16.}, {0, 5.`16.}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {800, 800/GoldenRatio}, "Axes" -> {False, False}, 
          "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.012833333333333334`], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], FontFamily -> "Avenir", FontSize -> 12, 
             RGBColor[1, 0, 0]], 
            Directive[
             PointSize[0.012833333333333334`], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6], FontFamily -> "Avenir", FontSize -> 12, 
             RGBColor[0, 1, 0]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListPlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {
       FormBox[
        TagBox["\"Time (s)\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Station ID\"", HoldForm], TraditionalForm]}, 
     AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Avenir", FontSize -> 12}, DisplayFunction :> 
     Identity, Epilog -> {
       InsetBox[
        BoxData[
         FormBox[
          StyleBox["\"Successful Transmission\"", 10, 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False], TraditionalForm]], 
        Scaled[{0.8, 0.9}]], 
       InsetBox[
        BoxData[
         FormBox[
          StyleBox["\"Collision\"", 10, 
           RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm]], 
        Scaled[{0.8, 0.85}]]}, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, 
     LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.365248, 0.427802, 0.758297], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.945109, 0.593901, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.645957, 0.253192, 0.685109], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.285821, 0.56, 0.450773], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.7, 0.336, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.491486, 0.345109, 0.8], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.71788, 0.568653, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.70743, 0.224, 0.542415], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.287228, 0.490217, 0.664674], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> 
       "CurrentPoint", "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
       True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Ethernet Channel Activity Timeline\"", TraditionalForm], 
     PlotRange -> {{0, 0.096736}, {0, 5.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   TagBox[
    GridBox[{{
      "\"Station\"", "\"Success\"", "\"Collisions\"", "\"Avg Delay (s)\"", 
       "\"Attempts\""}, {"1", "0", "1", "0", "1"}, {
      "2", "0", "1", "0", "1"}, {"3", "23", "4", 
       FractionBox["61391", "1437500"], "28"}, {"4", "1", "4", 
       FractionBox["501", "62500"], "5"}, {"5", "0", "1", "0", "1"}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> False, 
     GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
         RGBColor[0.87, 0.94, 1], {
          RGBColor[1, 1, 0.85], 
          RGBColor[0.88, 1, 0.88]}}}, 
     GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxItemStyle -> {"Columns" -> {{Bold}}, "Rows" -> {{Automatic}}}], 
    "Grid"]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.9592167318411813`*^9},
 CellLabel->
  "Out[4361]=",ExpressionUUID->"a571b181-3cd3-448a-a917-9fa5228f9139"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Half", "-", 
    RowBox[{"Duplex", " ", "Ethernet", " ", "Simulation"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Simulation", " ", "Parameters"}]}], "===", "=="}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"nStations", "=", "5"}], ";"}], "              ", 
   RowBox[{"(*", 
    RowBox[{"Number", " ", "of", " ", "stations"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"bandwidth", "=", 
     RowBox[{"3", "*", 
      RowBox[{"10", "^", "6"}]}]}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"3", " ", "Mbps"}], "-", 
     RowBox[{"original", " ", "Ethernet", " ", "speed"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"cableLength", "=", "1000"}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{"Cable", " ", "length", " ", "in", " ", "meters"}], "*)"}], "\n", 
   
   RowBox[{
    RowBox[{"propSpeed", "=", 
     RowBox[{"2", "*", 
      RowBox[{"10", "^", "8"}]}]}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{"Signal", " ", "propagation", " ", "speed", " ", 
     RowBox[{"m", "/", "s"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"packetSize", "=", "12000"}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{"Data", " ", "packet", " ", "size", " ", "in", " ", "bits"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"ackSize", "=", "640"}], ";"}], "               ", 
   RowBox[{"(*", 
    RowBox[{"ACK", " ", "size", " ", "in", " ", "bits"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"simulationTime", "=", "0.1"}], ";"}], "        ", 
   RowBox[{"(*", 
    RowBox[{"Simulation", " ", "duration", " ", "in", " ", "seconds"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"arrivalRate", "=", "50"}], ";"}], "            ", 
   RowBox[{"(*", 
    RowBox[{
    "Packet", " ", "arrival", " ", "rate", " ", "per", " ", "station", " ", 
     RowBox[{"(", 
      RowBox[{"packets", "/", "sec"}], ")"}]}], "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Derived", " ", "Parameters"}]}], "===", "=="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"propDelay", "=", 
     RowBox[{"cableLength", "/", "propSpeed"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"One", "-", 
     RowBox[{"way", " ", "propagation", " ", "delay"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"slotTime", "=", 
     RowBox[{"2", "*", "propDelay"}]}], ";"}], "             ", 
   RowBox[{"(*", 
    RowBox[{"Ethernet", " ", "slot", " ", "time"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"minFrameTime", "=", 
     RowBox[{"512", "/", "bandwidth"}]}], ";"}], "       ", 
   RowBox[{"(*", 
    RowBox[{"64", "-", 
     RowBox[{"byte", " ", "minimum", " ", "frame", " ", "time"}]}], "*)"}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Station", " ", "Data", " ", "Structure"}]}], "===", "=="}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"createStation", "[", "id_", "]"}], ":=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<ID\>\"", "->", "id"}], ",", 
       RowBox[{"\"\<Queue\>\"", "->", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "IDLE", ",", "BACKOFF", ",", "TRANSMITTING", ",", "WAITING_ACK"}], 
        "*)"}], 
       RowBox[{"\"\<BackoffCount\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<CollisionCount\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<RetransmitCount\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<TotalPackets\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<Successful\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<RTTs\>\"", "->", 
        RowBox[{"{", "}"}]}]}], "|>"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Event", " ", "System"}]}], "===", "=="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"events", "=", 
     RowBox[{"{", "}"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Format", ":", 
     RowBox[{"{", 
      RowBox[{"time", ",", "stationID", ",", "eventType", ",", "packet"}], 
      "}"}]}], "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"scheduleEvent", "[", 
      RowBox[{"time_", ",", "id_", ",", "type_", ",", "packet_"}], "]"}], ":=", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"events", ",", 
       RowBox[{"{", 
        RowBox[{"time", ",", "id", ",", "type", ",", "packet"}], "}"}]}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Packet", " ", "Functions"}]}], "===", "=="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"createPacket", "[", 
      RowBox[{"src_", ",", "dest_", ",", "size_"}], "]"}], ":=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<ID\>\"", "->", 
        RowBox[{"Unique", "[", "\"\<PKT\>\"", "]"}]}], ",", 
       RowBox[{"\"\<Src\>\"", "->", "src"}], ",", 
       RowBox[{"\"\<Dest\>\"", "->", "dest"}], ",", 
       RowBox[{"\"\<Size\>\"", "->", "size"}], ",", 
       RowBox[{"\"\<StartTime\>\"", "->", "Null"}], ",", 
       RowBox[{"\"\<EndTime\>\"", "->", "Null"}], ",", 
       RowBox[{"\"\<Attempts\>\"", "->", "0"}]}], "|>"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Channel", " ", "Model"}]}], "===", "=="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"channelState", "=", "\"\<IDLE\>\""}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"IDLE", " ", "or", " ", "BUSY"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"currentTransmissions", "=", 
     RowBox[{"{", "}"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"stationID", ",", "packet", ",", "endTime"}], "}"}], "*)"}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Transmission", " ", "Functions"}]}], "===", "=="}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"attemptTransmission", "[", 
      RowBox[{"station_", ",", "time_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"packet", ",", "txTime"}], "}"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"channelState", "===", "\"\<IDLE\>\""}], ",", 
         RowBox[{
          RowBox[{"packet", "=", 
           RowBox[{"First", "[", 
            RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], ";", 
          "\n", 
          RowBox[{"txTime", "=", 
           RowBox[{
            RowBox[{"packet", "[", "\"\<Size\>\"", "]"}], "/", 
            "bandwidth"}]}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Schedule", " ", "transmission", " ", "events"}], "*)"}], 
          RowBox[{"scheduleEvent", "[", 
           RowBox[{"time", ",", 
            RowBox[{"station", "[", "\"\<ID\>\"", "]"}], ",", 
            "\"\<START_TX\>\"", ",", "packet"}], "]"}], ";", "\n", 
          RowBox[{"scheduleEvent", "[", 
           RowBox[{
            RowBox[{"time", "+", "txTime"}], ",", 
            RowBox[{"station", "[", "\"\<ID\>\"", "]"}], ",", 
            "\"\<END_TX\>\"", ",", "packet"}], "]"}], ";", "\n", 
          RowBox[{"scheduleEvent", "[", 
           RowBox[{
            RowBox[{"time", "+", "propDelay"}], ",", 
            RowBox[{"station", "[", "\"\<ID\>\"", "]"}], ",", 
            "\"\<COLLISION_CHECK\>\"", ",", "packet"}], "]"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Channel", " ", "busy"}], "-", 
           RowBox[{"schedule", " ", "next", " ", "attempt"}]}], "*)"}], 
         RowBox[{"scheduleEvent", "[", 
          RowBox[{
           RowBox[{"time", "+", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"slotTime", "/", "10"}], "]"}]}], ",", 
           RowBox[{"station", "[", "\"\<ID\>\"", "]"}], ",", 
           "\"\<ATTEMPT_TX\>\"", ",", "packet"}], "]"}]}], "]"}]}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Main", " ", "Event", " ", "Handler"}]}], "===", "=="}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"processEvent", "[", "event_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"time", "=", 
          RowBox[{"event", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"id", "=", 
          RowBox[{"event", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"type", "=", 
          RowBox[{"event", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{"packet", "=", 
          RowBox[{"event", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", "station", ",", 
         "destStation", ",", "ackPacket", ",", "backoffSlots"}], "}"}], ",", 
       RowBox[{
        RowBox[{"station", "=", 
         RowBox[{"stations", "[", 
          RowBox[{"[", "id", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"Switch", "[", 
         RowBox[{"type", ",", 
          RowBox[{"(*", 
           RowBox[{"Packet", " ", "arrival", " ", "at", " ", "station"}], 
           "*)"}], "\"\<PACKET_ARRIVAL\>\"", ",", 
          RowBox[{
           RowBox[{"destStation", "=", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "nStations"}], "}"}], "]"}]}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"destStation", "===", "id"}], ",", 
             RowBox[{"destStation", "=", 
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"id", ",", "nStations"}], "]"}], "+", "1"}]}]}], 
            "]"}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Avoid", " ", "self"}], "-", "send"}], "*)"}], 
           RowBox[{
            RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], ",", 
              RowBox[{"createPacket", "[", 
               RowBox[{"id", ",", "destStation", ",", "packetSize"}], "]"}]}],
              "]"}]}], ";", "\n", 
           RowBox[{
            RowBox[{"station", "[", "\"\<TotalPackets\>\"", "]"}], "++"}], 
           ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<State\>\"", "]"}], "===", 
              "\"\<IDLE\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
               "\"\<READY\>\""}], ";", "\n", 
              RowBox[{"scheduleEvent", "[", 
               RowBox[{"time", ",", "id", ",", "\"\<ATTEMPT_TX\>\"", ",", 
                RowBox[{"Last", "[", 
                 RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], 
               "]"}], ";"}]}], "]"}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Schedule", " ", "next", " ", "packet", " ", "arrival"}], 
            "*)"}], 
           RowBox[{"scheduleEvent", "[", 
            RowBox[{
             RowBox[{"time", "+", 
              RowBox[{"RandomVariate", "[", 
               RowBox[{"ExponentialDistribution", "[", "arrivalRate", "]"}], 
               "]"}]}], ",", "id", ",", "\"\<PACKET_ARRIVAL\>\"", ",", 
             "Null"}], "]"}]}], ",", 
          RowBox[{"(*", 
           RowBox[{"Attempt", " ", "to", " ", "transmit"}], "*)"}], 
          "\"\<ATTEMPT_TX\>\"", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<State\>\"", "]"}], "===", 
              "\"\<READY\>\""}], "||", 
             RowBox[{
              RowBox[{"station", "[", "\"\<State\>\"", "]"}], "===", 
              "\"\<BACKOFF\>\""}]}], ",", 
            RowBox[{"attemptTransmission", "[", 
             RowBox[{"station", ",", "time"}], "]"}]}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{"Start", " ", "transmission"}], "*)"}], "\"\<START_TX\>\"",
           ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"channelState", "===", "\"\<IDLE\>\""}], ",", 
            RowBox[{
             RowBox[{"channelState", "=", "\"\<BUSY\>\""}], ";", "\n", 
             RowBox[{
              RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
              "\"\<TRANSMITTING\>\""}], ";", "\n", 
             RowBox[{
              RowBox[{"packet", "[", "\"\<StartTime\>\"", "]"}], "=", 
              "time"}], ";", "\n", 
             RowBox[{
              RowBox[{"packet", "[", "\"\<Attempts\>\"", "]"}], "++"}], ";", 
             "\n", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"currentTransmissions", ",", 
               RowBox[{"{", 
                RowBox[{"id", ",", "packet", ",", 
                 RowBox[{"time", "+", 
                  RowBox[{
                   RowBox[{"packet", "[", "\"\<Size\>\"", "]"}], "/", 
                   "bandwidth"}]}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"(*", 
             RowBox[{"Collision", " ", "detected", " ", "immediately"}], 
             "*)"}], 
            RowBox[{"scheduleEvent", "[", 
             RowBox[{
             "time", ",", "id", ",", "\"\<COLLISION_DETECTED\>\"", ",", 
              "packet"}], "]"}]}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "Collision", " ", "check", " ", "after", " ", "propagation", " ", 
            "delay"}], "*)"}], "\"\<COLLISION_CHECK\>\"", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "currentTransmissions", "]"}], ">", "1"}],
             ",", 
            RowBox[{"(*", 
             RowBox[{"Collision", " ", "detected"}], "*)"}], 
            RowBox[{
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"stations", "[", 
                    RowBox[{"[", 
                    RowBox[{"tx", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                   "\"\<State\>\"", "]"}], "===", "\"\<TRANSMITTING\>\""}], 
                 ",", 
                 RowBox[{"scheduleEvent", "[", 
                  RowBox[{"time", ",", 
                   RowBox[{"tx", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   "\"\<COLLISION_DETECTED\>\"", ",", 
                   RowBox[{"tx", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"tx", ",", "currentTransmissions"}], "}"}]}], "]"}], 
             ";", "\n", 
             RowBox[{"channelState", "=", "\"\<IDLE\>\""}], ";", "\n", 
             RowBox[{"currentTransmissions", "=", 
              RowBox[{"{", "}"}]}]}], ",", 
            RowBox[{"(*", 
             RowBox[{"Successful", " ", "transmission"}], "*)"}], 
            RowBox[{
             RowBox[{"destStation", "=", 
              RowBox[{"stations", "[", 
               RowBox[{"[", 
                RowBox[{"packet", "[", "\"\<Dest\>\"", "]"}], "]"}], "]"}]}], 
             ";", "\n", 
             RowBox[{"scheduleEvent", "[", 
              RowBox[{
               RowBox[{"time", "+", "propDelay"}], ",", 
               RowBox[{"packet", "[", "\"\<Dest\>\"", "]"}], ",", 
               "\"\<PACKET_RECEIVED\>\"", ",", "packet"}], "]"}]}]}], "]"}], 
          ",", 
          RowBox[{"(*", 
           RowBox[{"Packet", " ", "received", " ", "by", " ", "destination"}],
            "*)"}], "\"\<PACKET_RECEIVED\>\"", ",", 
          RowBox[{"(*", 
           RowBox[{"Send", " ", "ACK", " ", "after", " ", "SIFS"}], "*)"}], 
          RowBox[{"scheduleEvent", "[", 
           RowBox[{
            RowBox[{"time", "+", 
             RowBox[{"minFrameTime", "/", "4"}]}], ",", "id", ",", 
            "\"\<SEND_ACK\>\"", ",", "packet"}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{"Send", " ", "ACK"}], "*)"}], "\"\<SEND_ACK\>\"", ",", 
          RowBox[{
           RowBox[{"ackPacket", "=", 
            RowBox[{"createPacket", "[", 
             RowBox[{"id", ",", 
              RowBox[{"packet", "[", "\"\<Src\>\"", "]"}], ",", "ackSize"}], 
             "]"}]}], ";", "\n", 
           RowBox[{"destStation", "=", 
            RowBox[{"stations", "[", 
             RowBox[{"[", 
              RowBox[{"packet", "[", "\"\<Src\>\"", "]"}], "]"}], "]"}]}], 
           ";", "\n", 
           RowBox[{
            RowBox[{"destStation", "[", "\"\<Queue\>\"", "]"}], "=", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"destStation", "[", "\"\<Queue\>\"", "]"}], ",", 
              "ackPacket"}], "]"}]}], ";", "\n", 
           RowBox[{"scheduleEvent", "[", 
            RowBox[{
            "time", ",", "id", ",", "\"\<ATTEMPT_TX\>\"", ",", "ackPacket"}], 
            "]"}]}], ",", 
          RowBox[{"(*", 
           RowBox[{"ACK", " ", "received"}], "*)"}], "\"\<ACK_RECEIVED\>\"", 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"station", "[", "\"\<Successful\>\"", "]"}], "++"}], ";", 
           "\n", 
           RowBox[{
            RowBox[{"station", "[", "\"\<RTTs\>\"", "]"}], "=", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"station", "[", "\"\<RTTs\>\"", "]"}], ",", 
              RowBox[{"time", "-", 
               RowBox[{"packet", "[", "\"\<StartTime\>\"", "]"}]}]}], "]"}]}],
            ";", "\n", 
           RowBox[{
            RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "=", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{
              RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], ",", "packet"}],
              "]"}]}], ";", "\n", 
           RowBox[{
            RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], "=", 
            "0"}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}], ">", 
              "0"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
               "\"\<READY\>\""}], ";", "\n", 
              RowBox[{"scheduleEvent", "[", 
               RowBox[{"time", ",", "id", ",", "\"\<ATTEMPT_TX\>\"", ",", 
                RowBox[{"First", "[", 
                 RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], 
               "]"}]}], ",", 
             RowBox[{
              RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
              "\"\<IDLE\>\""}]}], "]"}]}], ",", 
          RowBox[{"(*", 
           RowBox[{"Collision", " ", "detected"}], "*)"}], 
          "\"\<COLLISION_DETECTED\>\"", ",", 
          RowBox[{
           RowBox[{"channelState", "=", "\"\<IDLE\>\""}], ";", "\n", 
           RowBox[{"currentTransmissions", "=", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{"currentTransmissions", ",", 
              RowBox[{"{", 
               RowBox[{"id", ",", "_", ",", "_"}], "}"}]}], "]"}]}], ";", 
           "\n", 
           RowBox[{
            RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
            "\"\<BACKOFF\>\""}], ";", "\n", 
           RowBox[{
            RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], "++"}], 
           ";", "\n", 
           RowBox[{
            RowBox[{"station", "[", "\"\<RetransmitCount\>\"", "]"}], "++"}], 
           ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Binary", " ", "exponential", " ", "backoff"}], "*)"}], 
           RowBox[{"backoffSlots", "=", 
            RowBox[{
             RowBox[{"RandomInteger", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"2", "^", 
                    RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}]}],
                    "-", "1"}], ",", "1023"}], "]"}]}], "}"}], "]"}], "*", 
             "slotTime"}]}], ";", "\n", 
           RowBox[{"scheduleEvent", "[", 
            RowBox[{
             RowBox[{"time", "+", "backoffSlots"}], ",", "id", ",", 
             "\"\<ATTEMPT_TX\>\"", ",", "packet"}], "]"}]}], ",", 
          RowBox[{"(*", 
           RowBox[{"End", " ", "transmission"}], "*)"}], "\"\<END_TX\>\"", 
          ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<BACKOFF\>\"", ",", "\"\<WAITING_ACK\>\""}], 
                "}"}], ",", 
               RowBox[{"station", "[", "\"\<State\>\"", "]"}]}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"packet", "[", "\"\<Size\>\"", "]"}], "===", 
               "ackSize"}], ",", 
              RowBox[{"(*", 
               RowBox[{"ACK", " ", "transmission"}], "*)"}], 
              RowBox[{"scheduleEvent", "[", 
               RowBox[{
                RowBox[{"time", "+", "propDelay"}], ",", 
                RowBox[{"packet", "[", "\"\<Dest\>\"", "]"}], ",", 
                "\"\<ACK_RECEIVED\>\"", ",", "packet"}], "]"}], ",", 
              RowBox[{"(*", 
               RowBox[{"Data", " ", "transmission", " ", "complete"}], "*)"}], 
              RowBox[{
               RowBox[{
                RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
                "\"\<WAITING_ACK\>\""}], ";", "\n", 
               RowBox[{"scheduleEvent", "[", 
                RowBox[{
                 RowBox[{"time", "+", 
                  RowBox[{"10", "*", "slotTime"}]}], ",", "id", ",", 
                 "\"\<ACK_TIMEOUT\>\"", ",", "packet"}], "]"}]}]}], "]"}]}], 
           "]"}]}], "]"}], ";", "\n", 
        RowBox[{
         RowBox[{"stations", "[", 
          RowBox[{"[", "id", "]"}], "]"}], "=", "station"}], ";"}]}], "]"}]}],
     ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Initialize", " ", "Simulation"}]}], "===", "=="}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"stations", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"createStation", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"channelState", "=", "\"\<IDLE\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{"currentTransmissions", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Schedule", " ", "initial", " ", "packet", " ", "arrivals"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"scheduleEvent", "[", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0.1"}], "}"}], "]"}], ",", "i", ",", 
        "\"\<PACKET_ARRIVAL\>\"", ",", "Null"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Run", " ", "Simulation"}]}], "===", "=="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"simulationResults", "=", 
     RowBox[{"<|", "|>"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"While", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"events", "=!=", 
        RowBox[{"{", "}"}]}], "&&", 
       RowBox[{
        RowBox[{"events", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "<=", "simulationTime"}]}], 
      ",", 
      RowBox[{
       RowBox[{"event", "=", 
        RowBox[{"First", "[", "events", "]"}]}], ";", "\n", 
       RowBox[{"events", "=", 
        RowBox[{"Rest", "[", "events", "]"}]}], ";", "\n", 
       RowBox[{"processEvent", "[", "event", "]"}], ";"}]}], "]"}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Results", " ", "Analysis"}]}], "===", "=="}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Calculate", " ", "performance", " ", "metrics"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"throughput", "=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", "\"\<Successful\>\"", "]"}], "&"}], "/@", 
        "stations"}], "]"}], "/", "simulationTime"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"collisionRate", "=", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", "\"\<RetransmitCount\>\"", "]"}], "&"}], "/@", 
        "stations"}], "]"}], "/", 
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", "\"\<TotalPackets\>\"", "]"}], "&"}], "/@", 
        "stations"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rtts", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", "\"\<RTTs\>\"", "]"}], "&"}], "/@", "stations"}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"meanRTT", "=", 
     RowBox[{"Mean", "[", "rtts", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rttHist", "=", 
     RowBox[{"Histogram", "[", 
      RowBox[{"rtts", ",", "Automatic", ",", "\"\<PDF\>\"", ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<RTT (s)\>\"", ",", "\"\<Density\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "->", "\"\<Round-Trip Time Distribution\>\""}]}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Channel", " ", "utilization", " ", "calculation"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"totalBusyTime", "=", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "-", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "&"}], "/@", 
       "currentTransmissions"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"utilization", "=", 
     RowBox[{"totalBusyTime", "/", "simulationTime"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"===", 
     RowBox[{"==", 
      RowBox[{"Output", " ", "Results"}]}], "===", "=="}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<===== Simulation Results =====\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Throughput: \>\"", ",", "throughput", ",", "\"\< packets/sec\>\""}],
      "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Collision Rate: \>\"", ",", 
      RowBox[{"100", "*", "collisionRate"}], ",", "\"\<%\>\""}], "]"}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Mean RTT: \>\"", ",", "meanRTT", ",", "\"\< seconds\>\""}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Channel Utilization: \>\"", ",", 
      RowBox[{"100", "*", "utilization"}], ",", "\"\<%\>\""}], "]"}], ";"}], 
   "\n", "rttHist"}]}]], "Input",
 CellChangeTimes->{{3.959216791317458*^9, 3.9592167913186493`*^9}},
 CellLabel->
  "In[4731]:=",ExpressionUUID->"79e741a4-d18d-4a47-9054-217af4c38fe1"],

Cell[CellGroupData[{

Cell[BoxData["\<\"===== Simulation Results =====\"\>"], "Print",
 CellChangeTimes->{3.959216791524803*^9},
 CellLabel->
  "During evaluation of \
In[4731]:=",ExpressionUUID->"58cb6c7f-9c4b-4bed-8164-74dd3185d778"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Throughput: \"\>", "\[InvisibleSpace]", "0.`", 
   "\[InvisibleSpace]", "\<\" packets/sec\"\>"}],
  SequenceForm["Throughput: ", 0., " packets/sec"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216791526705*^9},
 CellLabel->
  "During evaluation of \
In[4731]:=",ExpressionUUID->"dc3dfbdd-4737-49d3-99a4-b8b7a5cc1427"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collision Rate: \"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["Collision Rate: ", 0, "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216791527349*^9},
 CellLabel->
  "During evaluation of \
In[4731]:=",ExpressionUUID->"719d5056-f3f9-4957-8769-fd30ecbc248a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean RTT: \"\>", "\[InvisibleSpace]", 
   RowBox[{"Mean", "[", 
    RowBox[{"{", "}"}], "]"}], "\[InvisibleSpace]", "\<\" seconds\"\>"}],
  SequenceForm["Mean RTT: ", 
   Mean[{}], " seconds"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216791527815*^9},
 CellLabel->
  "During evaluation of \
In[4731]:=",ExpressionUUID->"6eddadc8-a326-4be0-a174-d7e2db6fb026"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Channel Utilization: \"\>", "\[InvisibleSpace]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"ID\"\>", "\[Rule]", 
      RowBox[{"1000.`", " ", 
       RowBox[{"(", 
        RowBox[{"0.07093380947014394`", "\[VeryThinSpace]", "-", "PKT75447"}],
         ")"}]}]}], ",", 
     RowBox[{"\<\"Src\"\>", "\[Rule]", 
      RowBox[{"-", "929.0661905298559`"}]}], ",", 
     RowBox[{"\<\"Dest\"\>", "\[Rule]", 
      RowBox[{"-", "1929.066190529856`"}]}], ",", 
     RowBox[{"\<\"Size\"\>", "\[Rule]", 
      RowBox[{"-", "1.1999929066190531`*^7"}]}], ",", 
     RowBox[{"\<\"StartTime\"\>", "\[Rule]", "4.0000000000000036`"}], ",", 
     RowBox[{"\<\"EndTime\"\>", "\[Rule]", 
      RowBox[{"1000.`", " ", 
       RowBox[{"(", 
        RowBox[{"0.07093380947014394`", "\[VeryThinSpace]", "-", "Null"}], 
        ")"}]}]}], ",", 
     RowBox[{"\<\"Attempts\"\>", "\[Rule]", 
      RowBox[{"-", "929.0661905298559`"}]}]}], "\[RightAssociation]"}], 
   "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm[
  "Channel Utilization: ", <|
   "ID" -> 1000. (0.07093380947014394 - EthernetSimulation`PKT75447), 
    "Src" -> -929.0661905298559, "Dest" -> -1929.066190529856, 
    "Size" -> -1.1999929066190531`*^7, "StartTime" -> 4.0000000000000036`, 
    "EndTime" -> 1000. (0.07093380947014394 - Null), 
    "Attempts" -> -929.0661905298559|>, "%"],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216791528371*^9},
 CellLabel->
  "During evaluation of \
In[4731]:=",ExpressionUUID->"dbecedb6-fce0-4d4d-ba29-cf8e487cf57b"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.7], Thickness[Small]}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"RTT (s)\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Density\"", HoldForm], TraditionalForm]},
  AxesOrigin->{-0.02, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox["\"Round-Trip Time Distribution\"", TraditionalForm],
  PlotRange->{{0, 1}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9592167915293627`*^9},
 CellLabel->
  "Out[4769]=",ExpressionUUID->"215e494f-30d4-4a88-a63b-1005f54ce595"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Ethernet", " ", "Simulation", " ", "Parameters"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"nStations", "=", "5"}], ";"}], "              ", 
   RowBox[{"(*", 
    RowBox[{"Number", " ", "of", " ", "stations"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"bitRate", "=", 
     RowBox[{"3", "*", 
      RowBox[{"10", "^", "6"}]}]}], ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{"3", " ", "Mbps", " ", "transmission", " ", "rate"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"timePerBit", "=", 
     RowBox[{"1.0", "/", "bitRate"}]}], ";"}], "   ", 
   RowBox[{"(*", 
    RowBox[{"Time", " ", "per", " ", "bit", " ", "in", " ", "seconds"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"slotTime", "=", 
     RowBox[{"16", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}]}], ";"}], "        ", 
   RowBox[{"(*", 
    RowBox[{"Collision", " ", "detection", " ", "slot", " ", "time"}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"cableLength", "=", "1000"}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{"Cable", " ", "length", " ", "in", " ", "meters"}], "*)"}], "\n", 
   
   RowBox[{
    RowBox[{"propSpeed", "=", 
     RowBox[{"2", "*", 
      RowBox[{"10", "^", "8"}]}]}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{"Signal", " ", "propagation", " ", "speed", " ", 
     RowBox[{"m", "/", "s"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"propDelay", "=", 
     RowBox[{"cableLength", "/", "propSpeed"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"One", "-", 
     RowBox[{"way", " ", "propagation", " ", "delay"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"dataPacketSize", "=", "12000"}], ";"}], "      ", 
   RowBox[{"(*", 
    RowBox[{"Data", " ", "packet", " ", "size", " ", "in", " ", "bits"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"ackPacketSize", "=", "640"}], ";"}], "         ", 
   RowBox[{"(*", 
    RowBox[{"ACK", " ", "packet", " ", "size", " ", "in", " ", "bits"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"maxRetries", "=", "5"}], ";"}], "              ", 
   RowBox[{"(*", 
    RowBox[{"Maximum", " ", "transmission", " ", "attempts"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"simulationTime", "=", "0.01"}], ";"}], "       ", 
   RowBox[{"(*", 
    RowBox[{"Simulation", " ", "duration", " ", "in", " ", "seconds"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"timeStep", "=", 
     RowBox[{"0.1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}]}], ";"}], "        ", 
   RowBox[{"(*", 
    RowBox[{"Simulation", " ", "time", " ", "step"}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Station", " ", "State", " ", "Structure"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"stationTemplate", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "IDLE", ",", "BACKOFF", ",", "TRANSMITTING", ",", "WAITING_ACK"}], 
        "*)"}], 
       RowBox[{"\"\<Queue\>\"", "->", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"Packet", " ", "queue"}], "*)"}], 
       RowBox[{"\"\<BackoffCounter\>\"", "->", "0"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Backoff", " ", "time", " ", "counter"}], "*)"}], 
       RowBox[{"\"\<CollisionCount\>\"", "->", "0"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Collision", " ", "counter", " ", "for", " ", "backoff"}], 
        "*)"}], 
       RowBox[{"\"\<CurrentPacket\>\"", "->", "None"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Packet", " ", "in", " ", "transmission"}], "*)"}], 
       RowBox[{"\"\<RetryCount\>\"", "->", "0"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Transmission", " ", "attempt", " ", "count"}], "*)"}], 
       RowBox[{"\"\<AckTimeout\>\"", "->", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"ACK", " ", "timeout", " ", "timestamp"}], "*)"}], 
       RowBox[{"\"\<TransmitStart\>\"", "->", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"Transmission", " ", "start", " ", "time"}], "*)"}], 
       RowBox[{"\"\<NextPacketTime\>\"", "->", "0.0"}]}], "    ", 
      RowBox[{"(*", 
       RowBox[{"Next", " ", "packet", " ", "generation", " ", "time"}], 
       "*)"}], "|>"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Initialize", " ", "Stations"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"stations", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"stationTemplate", ",", "nStations"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", "nStations"}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{"stations", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "\"\<NextPacketTime\>\""}], "]"}], "]"}], "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"ExponentialDistribution", "[", 
         RowBox[{"1", "/", "0.001"}], "]"}], "]"}]}]}], "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Channel", " ", "State"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"channel", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
       RowBox[{"(*", 
        RowBox[{"IDLE", ",", "BUSY", ",", "COLLISION"}], "*)"}], 
       RowBox[{"\"\<CurrentTransmissions\>\"", "->", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"Stations", " ", "transmitting"}], "*)"}], 
       RowBox[{"\"\<BusyStart\>\"", "->", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"Busy", " ", "period", " ", "start", " ", "time"}], "*)"}], 
       RowBox[{"\"\<BusyEnd\>\"", "->", 
        RowBox[{"-", "1"}]}]}], "            ", 
      RowBox[{"(*", 
       RowBox[{"Busy", " ", "period", " ", "end", " ", "time"}], "*)"}], 
      "|>"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Event", " ", "Logging"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"eventLog", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"logEvent", "[", 
      RowBox[{"type_", ",", "station_", ",", "time_", ",", "data_"}], "]"}], ":=", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"eventLog", ",", 
       RowBox[{"{", 
        RowBox[{"type", ",", "station", ",", "time", ",", "data"}], "}"}]}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Backoff", " ", "Time", " ", "Calculation"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"backoffTime", "[", "collisions_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", "=", 
         RowBox[{"Min", "[", 
          RowBox[{"collisions", ",", "10"}], "]"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"2", "^", "k"}], "-", "1"}]}], "}"}], "]"}], "*", 
        "slotTime"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Transmission", " ", "Functions"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"startTransmission", "[", 
      RowBox[{"stationID_", ",", "time_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s", ",", "packet", ",", "packetSize"}], "}"}], ",", 
       RowBox[{
        RowBox[{"s", "=", 
         RowBox[{"stations", "[", 
          RowBox[{"[", "stationID", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"s", "[", "\"\<Queue\>\"", "]"}], "=!=", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{
           RowBox[{"packet", "=", 
            RowBox[{"First", "[", 
             RowBox[{"s", "[", "\"\<Queue\>\"", "]"}], "]"}]}], ";", "\n", 
           RowBox[{"packetSize", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"packet", "[", "\"\<Type\>\"", "]"}], "==", 
               "\"\<DATA\>\""}], ",", "dataPacketSize", ",", 
              "ackPacketSize"}], "]"}]}], ";", "\n", 
           RowBox[{
            RowBox[{"s", "[", "\"\<CurrentPacket\>\"", "]"}], "=", "packet"}],
            ";", "\n", 
           RowBox[{
            RowBox[{"s", "[", "\"\<TransmitStart\>\"", "]"}], "=", "time"}], 
           ";", "\n", 
           RowBox[{
            RowBox[{"s", "[", "\"\<State\>\"", "]"}], "=", 
            "\"\<TRANSMITTING\>\""}], ";", "\n", 
           RowBox[{
            RowBox[{"stations", "[", 
             RowBox[{"[", "stationID", "]"}], "]"}], "=", "s"}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Update", " ", "channel", " ", "state"}], "*)"}], 
           RowBox[{"Switch", "[", 
            RowBox[{
             RowBox[{"channel", "[", "\"\<State\>\"", "]"}], ",", 
             "\"\<IDLE\>\"", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"channel", "[", "\"\<State\>\"", "]"}], "=", 
               "\"\<BUSY\>\""}], ";", "\n", 
              RowBox[{
               RowBox[{"channel", "[", "\"\<CurrentTransmissions\>\"", "]"}], 
               "=", 
               RowBox[{"{", "stationID", "}"}]}], ";", "\n", 
              RowBox[{
               RowBox[{"channel", "[", "\"\<BusyStart\>\"", "]"}], "=", 
               "time"}], ";", "\n", 
              RowBox[{
               RowBox[{"channel", "[", "\"\<BusyEnd\>\"", "]"}], "=", 
               RowBox[{"time", "+", 
                RowBox[{"packetSize", "*", "timePerBit"}], "+", 
                "propDelay"}]}]}], ",", 
             RowBox[{"\"\<BUSY\>\"", "|", "\"\<COLLISION\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"channel", "[", "\"\<State\>\"", "]"}], "=", 
               "\"\<COLLISION\>\""}], ";", "\n", 
              RowBox[{
               RowBox[{"channel", "[", "\"\<CurrentTransmissions\>\"", "]"}], 
               "=", 
               RowBox[{"Append", "[", 
                RowBox[{
                 RowBox[{
                 "channel", "[", "\"\<CurrentTransmissions\>\"", "]"}], ",", 
                 "stationID"}], "]"}]}], ";", "\n", 
              RowBox[{
               RowBox[{"channel", "[", "\"\<BusyEnd\>\"", "]"}], "=", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"channel", "[", "\"\<BusyEnd\>\"", "]"}], ",", 
                 RowBox[{"time", "+", 
                  RowBox[{"packetSize", "*", "timePerBit"}], "+", 
                  "propDelay"}]}], "]"}]}]}]}], "]"}], ";", "\n", 
           RowBox[{"logEvent", "[", 
            RowBox[{
            "\"\<TX_START\>\"", ",", "stationID", ",", "time", ",", 
             "packet"}], "]"}]}]}], "]"}]}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"detectCollision", "[", 
      RowBox[{"stationID_", ",", "time_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "s", "}"}], ",", 
       RowBox[{
        RowBox[{"s", "=", 
         RowBox[{"stations", "[", 
          RowBox[{"[", "stationID", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"channel", "[", "\"\<State\>\"", "]"}], "==", 
            "\"\<COLLISION\>\""}], "&&", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"channel", "[", "\"\<CurrentTransmissions\>\"", "]"}], 
             ",", "stationID"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"s", "[", "\"\<CollisionCount\>\"", "]"}], "+=", "1"}], 
           ";", "\n", 
           RowBox[{
            RowBox[{"s", "[", "\"\<State\>\"", "]"}], "=", 
            "\"\<BACKOFF\>\""}], ";", "\n", 
           RowBox[{
            RowBox[{"s", "[", "\"\<BackoffCounter\>\"", "]"}], "=", 
            RowBox[{"backoffTime", "[", 
             RowBox[{"s", "[", "\"\<CollisionCount\>\"", "]"}], "]"}]}], ";", 
           "\n", 
           RowBox[{
            RowBox[{"s", "[", "\"\<RetryCount\>\"", "]"}], "+=", "1"}], ";", 
           "\n", 
           RowBox[{
            RowBox[{"stations", "[", 
             RowBox[{"[", "stationID", "]"}], "]"}], "=", "s"}], ";", "\n", 
           RowBox[{"logEvent", "[", 
            RowBox[{"\"\<COLLISION\>\"", ",", "stationID", ",", "time", ",", 
             RowBox[{"s", "[", "\"\<CollisionCount\>\"", "]"}]}], "]"}], ";", 
           "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"s", "[", "\"\<RetryCount\>\"", "]"}], ">=", 
              "maxRetries"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"s", "[", "\"\<Queue\>\"", "]"}], "=", 
               RowBox[{"Rest", "[", 
                RowBox[{"s", "[", "\"\<Queue\>\"", "]"}], "]"}]}], ";", "\n", 
              
              RowBox[{
               RowBox[{"s", "[", "\"\<CollisionCount\>\"", "]"}], "=", "0"}], 
              ";", "\n", 
              RowBox[{
               RowBox[{"s", "[", "\"\<RetryCount\>\"", "]"}], "=", "0"}], ";",
               "\n", 
              RowBox[{
               RowBox[{"s", "[", "\"\<State\>\"", "]"}], "=", 
               "\"\<IDLE\>\""}], ";", "\n", 
              RowBox[{
               RowBox[{"stations", "[", 
                RowBox[{"[", "stationID", "]"}], "]"}], "=", "s"}], ";", "\n", 
              RowBox[{"logEvent", "[", 
               RowBox[{
               "\"\<PACKET_DROP\>\"", ",", "stationID", ",", "time", ",", 
                "\"\<Max retries exceeded\>\""}], "]"}]}]}], "]"}]}]}], 
         "]"}]}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"completeTransmission", "[", 
      RowBox[{"stationID_", ",", "time_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s", "=", 
         RowBox[{"stations", "[", 
          RowBox[{"[", "stationID", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"s", "[", "\"\<CurrentPacket\>\"", "]"}], "[", 
            "\"\<Type\>\"", "]"}], "==", "\"\<DATA\>\""}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "Schedule", " ", "ACK", " ", "at", " ", "destination", " ", 
            "station"}], "*)"}], 
          RowBox[{
           RowBox[{"destID", "=", 
            RowBox[{
             RowBox[{"s", "[", "\"\<CurrentPacket\>\"", "]"}], "[", 
             "\"\<Destination\>\"", "]"}]}], ";", "\n", 
           RowBox[{"ackPacket", "=", 
            RowBox[{"<|", 
             RowBox[{
              RowBox[{"\"\<Source\>\"", "->", "destID"}], ",", 
              RowBox[{"\"\<Destination\>\"", "->", "stationID"}], ",", 
              RowBox[{"\"\<Type\>\"", "->", "\"\<ACK\>\""}], ",", 
              RowBox[{"\"\<Data\>\"", "->", 
               RowBox[{"\"\<ACK for packet from \>\"", "<>", 
                RowBox[{"ToString", "[", "stationID", "]"}]}]}]}], "|>"}]}], 
           ";", "\n", 
           RowBox[{
            RowBox[{"stations", "[", 
             RowBox[{"[", 
              RowBox[{"destID", ",", "\"\<Queue\>\""}], "]"}], "]"}], "=", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"stations", "[", 
               RowBox[{"[", 
                RowBox[{"destID", ",", "\"\<Queue\>\""}], "]"}], "]"}], ",", 
              "ackPacket"}], "]"}]}], ";"}]}], "]"}], ";", "\n", 
        RowBox[{
         RowBox[{"s", "[", "\"\<Queue\>\"", "]"}], "=", 
         RowBox[{"Rest", "[", 
          RowBox[{"s", "[", "\"\<Queue\>\"", "]"}], "]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"s", "[", "\"\<CurrentPacket\>\"", "]"}], "=", "None"}], ";",
         "\n", 
        RowBox[{
         RowBox[{"s", "[", "\"\<CollisionCount\>\"", "]"}], "=", "0"}], ";", 
        "\n", 
        RowBox[{
         RowBox[{"s", "[", "\"\<RetryCount\>\"", "]"}], "=", "0"}], ";", "\n", 
        RowBox[{
         RowBox[{"s", "[", "\"\<State\>\"", "]"}], "=", "\"\<IDLE\>\""}], ";",
         "\n", 
        RowBox[{
         RowBox[{"stations", "[", 
          RowBox[{"[", "stationID", "]"}], "]"}], "=", "s"}], ";", "\n", 
        RowBox[{"logEvent", "[", 
         RowBox[{"\"\<TX_SUCCESS\>\"", ",", "stationID", ",", "time", ",", 
          RowBox[{"s", "[", "\"\<CurrentPacket\>\"", "]"}]}], "]"}]}]}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Main", " ", "Simulation", " ", "Loop"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"currentTime", "=", "0"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"nSteps", "=", 
     RowBox[{"Round", "[", 
      RowBox[{"simulationTime", "/", "timeStep"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"step", "=", "0"}], ",", 
        RowBox[{"step", "<", "nSteps"}], ",", 
        RowBox[{"step", "++"}], ",", 
        RowBox[{
         RowBox[{"currentTime", "=", 
          RowBox[{"step", "*", "timeStep"}]}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{"Generate", " ", "new", " ", "packets"}], "*)"}], 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "<=", "nStations"}], ",", 
           RowBox[{"i", "++"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"stations", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "\"\<NextPacketTime\>\""}], "]"}], "]"}], "<=",
               "currentTime"}], ",", 
             RowBox[{
              RowBox[{"dest", "=", 
               RowBox[{"RandomChoice", "[", 
                RowBox[{"DeleteCases", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", "nStations", "]"}], ",", "i"}], "]"}],
                 "]"}]}], ";", "\n", 
              RowBox[{"packet", "=", 
               RowBox[{"<|", 
                RowBox[{
                 RowBox[{"\"\<Source\>\"", "->", "i"}], ",", 
                 RowBox[{"\"\<Destination\>\"", "->", "dest"}], ",", 
                 RowBox[{"\"\<Type\>\"", "->", "\"\<DATA\>\""}], ",", 
                 RowBox[{"\"\<Data\>\"", "->", 
                  RowBox[{"\"\<Packet from \>\"", "<>", 
                   RowBox[{"ToString", "[", "i", "]"}]}]}]}], "|>"}]}], ";", 
              "\n", 
              RowBox[{
               RowBox[{"stations", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "\"\<Queue\>\""}], "]"}], "]"}], "=", 
               RowBox[{"Append", "[", 
                RowBox[{
                 RowBox[{"stations", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "\"\<Queue\>\""}], "]"}], "]"}], ",", 
                 "packet"}], "]"}]}], ";", "\n", 
              RowBox[{
               RowBox[{"stations", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "\"\<NextPacketTime\>\""}], "]"}], "]"}], 
               "=", 
               RowBox[{"currentTime", "+", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"ExponentialDistribution", "[", 
                  RowBox[{"1", "/", "0.001"}], "]"}], "]"}]}]}], ";", "\n", 
              RowBox[{"logEvent", "[", 
               RowBox[{
               "\"\<PACKET_GEN\>\"", ",", "i", ",", "currentTime", ",", 
                "packet"}], "]"}], ";"}]}], "]"}]}], "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{"Update", " ", "channel", " ", "state"}], "*)"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"channel", "[", "\"\<State\>\"", "]"}], "!=", 
             "\"\<IDLE\>\""}], "&&", 
            RowBox[{"currentTime", ">=", 
             RowBox[{"channel", "[", "\"\<BusyEnd\>\"", "]"}]}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"channel", "[", "\"\<State\>\"", "]"}], "=", 
             "\"\<IDLE\>\""}], ";", "\n", 
            RowBox[{
             RowBox[{"channel", "[", "\"\<CurrentTransmissions\>\"", "]"}], 
             "=", 
             RowBox[{"{", "}"}]}], ";"}]}], "]"}], ";", "\n", 
         RowBox[{"(*", 
          RowBox[{"Update", " ", "stations"}], "*)"}], 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "<=", "nStations"}], ",", 
           RowBox[{"i", "++"}], ",", 
           RowBox[{"Which", "[", 
            RowBox[{"(*", 
             RowBox[{
             "IDLE", " ", "Station", " ", "with", " ", "packets", " ", "to", 
              " ", "send"}], "*)"}], 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "\"\<State\>\""}], "]"}], "]"}], "==", 
               "\"\<IDLE\>\""}], "&&", 
              RowBox[{
               RowBox[{"stations", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "\"\<Queue\>\""}], "]"}], "]"}], "=!=", 
               RowBox[{"{", "}"}]}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"channel", "[", "\"\<State\>\"", "]"}], "==", 
                "\"\<IDLE\>\""}], ",", 
               RowBox[{"startTransmission", "[", 
                RowBox[{"i", ",", "currentTime"}], "]"}]}], "]"}], ",", 
             RowBox[{"(*", 
              RowBox[{
              "Station", " ", "in", " ", "TRANSMITTING", " ", "state"}], 
              "*)"}], 
             RowBox[{
              RowBox[{"stations", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "\"\<State\>\""}], "]"}], "]"}], "==", 
              "\"\<TRANSMITTING\>\""}], ",", 
             RowBox[{
              RowBox[{"detectCollision", "[", 
               RowBox[{"i", ",", "currentTime"}], "]"}], ";", "\n", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"stations", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "\"\<State\>\""}], "]"}], "]"}], "==", 
                  "\"\<TRANSMITTING\>\""}], "&&", 
                 RowBox[{"currentTime", ">=", 
                  RowBox[{
                   RowBox[{"stations", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "\"\<TransmitStart\>\""}], "]"}], "]"}],
                    "+", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    "i", ",", "\"\<CurrentPacket\>\"", ",", "\"\<Type\>\""}], 
                    "]"}], "]"}], "==", "\"\<DATA\>\""}], ",", 
                    "dataPacketSize", ",", "ackPacketSize"}], "]"}], "*", 
                    "timePerBit"}]}]}]}], ",", 
                RowBox[{"completeTransmission", "[", 
                 RowBox[{"i", ",", "currentTime"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"(*", 
              RowBox[{"Station", " ", "in", " ", "BACKOFF", " ", "state"}], 
              "*)"}], 
             RowBox[{
              RowBox[{"stations", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "\"\<State\>\""}], "]"}], "]"}], "==", 
              "\"\<BACKOFF\>\""}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "\"\<BackoffCounter\>\""}], "]"}], "]"}], "-=",
                "timeStep"}], ";", "\n", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"stations", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "\"\<BackoffCounter\>\""}], "]"}], "]"}],
                  "<=", "0"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"stations", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "\"\<State\>\""}], "]"}], "]"}], "=", 
                  "\"\<IDLE\>\""}], ";", "\n", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"channel", "[", "\"\<State\>\"", "]"}], "==", 
                    "\"\<IDLE\>\""}], ",", 
                   RowBox[{"startTransmission", "[", 
                    RowBox[{"i", ",", "currentTime"}], "]"}]}], "]"}]}]}], 
               "]"}]}]}], "]"}]}], "]"}]}]}], "]"}], ",", 
      RowBox[{"ProgressIndicator", "[", 
       RowBox[{"currentTime", "/", "simulationTime"}], "]"}]}], "]"}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Visualization", " ", "Functions"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"createTimelinePlot", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"events", ",", "plotData"}], "}"}], ",", 
       RowBox[{
        RowBox[{"events", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{"eventLog", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"type_", ",", "station_", ",", "time_", ",", "_"}], 
             "}"}], ":>", 
            RowBox[{"{", 
             RowBox[{"time", ",", "station", ",", "type"}], "}"}]}]}], 
          "]"}]}], ";", "\n", 
        RowBox[{"plotData", "=", 
         RowBox[{"GroupBy", "[", 
          RowBox[{"events", ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "&"}]}], "]"}]}], ";", "\n", 
        RowBox[{"TimelinePlot", "[", 
         RowBox[{
          RowBox[{"Association", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#1", "->", 
                 RowBox[{"Callout", "[", 
                  RowBox[{
                   RowBox[{"Point", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}], 
                   ",", "#2"}], "]"}]}], "&"}], "@@@", 
               RowBox[{"{", 
                RowBox[{"#1", "->", "#2"}], "}"}]}], "&"}], "@@@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "3"}], "]"}], "]"}], ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], "/@",
                "plotData"}], ")"}]}], ")"}]}], ",", 
          RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
          RowBox[{"ImageSize", "->", "800"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Ethernet Event Timeline\>\"", ",", "16", ",", "Bold"}], 
            "]"}]}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Station ID\>\""}], "}"}]}], 
          ",", 
          RowBox[{"GridLines", "->", "Automatic"}]}], "]"}]}]}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"createChannelUtilizationPlot", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"busyTimes", ",", 
         RowBox[{"totalTime", "=", "simulationTime"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"busyTimes", "=", 
         RowBox[{"Total", "[", 
          RowBox[{"Cases", "[", 
           RowBox[{"eventLog", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<TX_START\>\"", ",", "_", ",", "start_", ",", "_"}], "}"}],
               ":>", 
              RowBox[{"{", 
               RowBox[{"start", ",", 
                RowBox[{"Lookup", "[", 
                 RowBox[{"channel", ",", "\"\<BusyEnd\>\"", ",", "start"}], 
                 "]"}]}], "}"}]}], "/.", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"start_", ",", "end_"}], "}"}], ":>", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"end", "-", "start"}], ",", 
                RowBox[{"totalTime", "-", "start"}]}], "]"}]}]}]}], "]"}], 
          "]"}]}], ";", "\n", 
        RowBox[{"PieChart", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"busyTimes", ",", 
            RowBox[{"totalTime", "-", "busyTimes"}]}], "}"}], ",", 
          RowBox[{"ChartLabels", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Channel Busy\>\"", ",", "\"\<Channel Idle\>\""}], 
            "}"}]}], ",", 
          RowBox[{"ChartStyle", "->", 
           RowBox[{"{", 
            RowBox[{"Red", ",", "Green"}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Channel Utilization\>\"", ",", "16", ",", "Bold"}], 
            "]"}]}]}], "]"}]}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Run", " ", "Visualizations"}], "*)"}], "\n", 
   RowBox[{"createTimelinePlot", "[", "]"}], "\n", 
   RowBox[{"createChannelUtilizationPlot", "[", "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Performance", " ", "Metrics"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"successfulTx", "=", 
     RowBox[{"Count", "[", 
      RowBox[{"eventLog", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<TX_SUCCESS\>\"", ",", "_", ",", "_", ",", "_"}], "}"}]}],
       "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"collisions", "=", 
     RowBox[{"Count", "[", 
      RowBox[{"eventLog", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<COLLISION\>\"", ",", "_", ",", "_", ",", "_"}], "}"}]}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"generatedPackets", "=", 
     RowBox[{"Count", "[", 
      RowBox[{"eventLog", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<PACKET_GEN\>\"", ",", "_", ",", "_", ",", "_"}], "}"}]}],
       "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"droppedPackets", "=", 
     RowBox[{"Count", "[", 
      RowBox[{"eventLog", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<PACKET_DROP\>\"", ",", "_", ",", "_", ",", "_"}], 
        "}"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Simulation Results:\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Successful Transmissions: \>\"", ",", "successfulTx"}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Collisions: \>\"", ",", "collisions"}], "]"}], ";"}], "\n", 
   
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Packet Delivery Ratio: \>\"", ",", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"successfulTx", "/", "generatedPackets"}], ",", "4"}], 
       "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Channel Utilization: \>\"", ",", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"successfulTx", "*", 
         RowBox[{"dataPacketSize", "/", 
          RowBox[{"(", 
           RowBox[{"bitRate", "*", "simulationTime"}], ")"}]}]}], ",", "4"}], 
       "]"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.959216848335252*^9, 3.959216848336359*^9}},
 CellLabel->
  "In[4949]:=",ExpressionUUID->"5a6f0051-7556-4973-b0f9-6d2619d7f23d"],

Cell[BoxData[
 GraphicsBox[{
   {AbsolutePointSize[0], Opacity[0], 
    PointBox[NCache[{{0, 0}, {1, Rational[3, 2]}}, {{0, 0}, {1, 1.5}}]], 
    PointBox[NCache[{{0, Rational[-1, 2]}, {1, 1}}, {{0, -0.5}, {1, 
       1}}]]}, {}, {
    {PointSize[0], Opacity[0], 
     PointBox[{{3.959198849355661*^9, 0}, {
       3.959198851355661*^9, 1}}]}, {}, {}}, {}, {}},
  AspectRatio->NCache[Rational[1, 2]/GoldenRatio, 0.3090169943749474],
  Axes->{False, False},
  AxesOrigin->{0, 0},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{
    FormBox["\"Time (s)\"", TraditionalForm], 
    FormBox["\"Station ID\"", TraditionalForm]},
  FrameStyle->Automatic,
  FrameTicks->
   FrontEndValueCache[{{None, None}, {
     Charting`getDateTicks[Automatic, {Automatic}, 
       (Map[DateList, {
         SlotSequence[1]}]& )[
        SlotSequence[1]], None, 9, {{0.0075, 0}, {0.00375, 0}}, Automatic]& , 
      Automatic}}, {{None, None}, {{{-6.31152*^8, 
        FormBox["\"1880\"", TraditionalForm], {0.004999999999999999, 0}}, {0., 
        FormBox["\"1900\"", TraditionalForm], {0.004999999999999999, 0}}, {
       6.310656*^8, 
        FormBox["\"1920\"", TraditionalForm], {0.004999999999999999, 0}}, {
       1.2622176*^9, 
        FormBox["\"1940\"", TraditionalForm], {0.004999999999999999, 0}}, {
       1.8933696*^9, 
        FormBox["\"1960\"", TraditionalForm], {0.004999999999999999, 0}}, {
       2.5245216*^9, 
        FormBox["\"1980\"", TraditionalForm], {0.004999999999999999, 0}}, {
       3.1556736*^9, 
        FormBox["\"2000\"", TraditionalForm], {0.004999999999999999, 0}}, {
       3.7868256*^9, 
        FormBox["\"2020\"", TraditionalForm], {0.004999999999999999, 0}}, {
       4.4179776*^9, 
        FormBox["\"2040\"", TraditionalForm], {
        0.004999999999999999, 0}}, {-6.31152*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {-4.732992*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {-3.155328*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {-1.577664*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {0., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {1.577664*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {3.155328*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {4.732992*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {6.310656*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {7.889184*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {9.466848*^8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {1.1044512*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {1.2622176*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {1.4200704*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {1.5778368*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {1.7356032*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {1.8933696*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {2.0512224*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {2.2089888*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {2.3667552*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {2.5245216*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {2.6823744*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {2.8401408*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {2.9979072*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {3.1556736*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {3.3135264*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {3.4712928*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {3.9446784*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}, {4.1024448*^9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
        0.004999999999999999, 0}}}, Automatic}}],
  GridLines->FrontEndValueCache[{(Transpose[{#, 
       Table[
        Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], {
         Length[#]}]}]& )[
      Part[
       Select[
        (Charting`getDateTicks[Automatic, {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], {{
           Scaled[0.06], 
           Scaled[0.06]}, {None, 
           Scaled[0.05]}}, 9, {{0.0075, 0}, {0.00375, 0}}, Automatic]& )[
         SlotSequence[1]], And[
         FreeQ[#, 
          Alternatives["", 
           Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
       1]]& , {}}, {{{-6.31152*^8, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {0., 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {6.310656*^8, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {1.2622176*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {1.8933696*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {2.5245216*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {3.1556736*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {3.7868256*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {4.4179776*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {5.0491296*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}}, {}}],
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImagePadding->All,
  ImageSize->{800, Automatic},
  PlotLabel->FormBox[
    StyleBox["\"Ethernet Event Timeline\"", 16, Bold, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{All, All}, {0, All}},
  PlotRangePadding->{{
     Scaled[0.06], 
     Scaled[0.06]}, {None, 
     Scaled[0.05]}},
  Ticks->{{{-6.31152*^8, 
      FormBox["\"1880\"", TraditionalForm], {0.004999999999999999, 0}}, {0., 
      FormBox["\"1900\"", TraditionalForm], {0.004999999999999999, 0}}, {
     6.310656*^8, 
      FormBox["\"1920\"", TraditionalForm], {0.004999999999999999, 0}}, {
     1.2622176*^9, 
      FormBox["\"1940\"", TraditionalForm], {0.004999999999999999, 0}}, {
     1.8933696*^9, 
      FormBox["\"1960\"", TraditionalForm], {0.004999999999999999, 0}}, {
     2.5245216*^9, 
      FormBox["\"1980\"", TraditionalForm], {0.004999999999999999, 0}}, {
     3.1556736*^9, 
      FormBox["\"2000\"", TraditionalForm], {0.004999999999999999, 0}}, {
     3.7868256*^9, 
      FormBox["\"2020\"", TraditionalForm], {0.004999999999999999, 0}}, {
     4.4179776*^9, 
      FormBox["\"2040\"", TraditionalForm], {
      0.004999999999999999, 0}}, {-6.31152*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {-4.732992*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {-3.155328*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {-1.577664*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {0., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {1.577664*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {3.155328*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {4.732992*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {6.310656*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {7.889184*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {9.466848*^8, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {1.1044512*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {1.2622176*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {1.4200704*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {1.5778368*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {1.7356032*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {1.8933696*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {2.0512224*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {2.2089888*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {2.3667552*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {2.5245216*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {2.6823744*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {2.8401408*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {2.9979072*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {3.1556736*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {3.3135264*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {3.4712928*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {3.6290592*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {3.7868256*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {3.9446784*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}, {4.1024448*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.004999999999999999, 0}}}, None}]], "Output",
 CellChangeTimes->{3.959216850363736*^9},
 CellLabel->
  "Out[4976]=",ExpressionUUID->"81b6c14a-0d33-4763-b843-54e81e7c81f4"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   DynamicModuleBox[{DynamicChart`click$4893578$4893604 = False}, {
     {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.5]}], {{{}, {
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
          TagBox[GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                   
                   ImageSizeCache->{{79.11666666666667, 
                    794.8833333333333}, {-350.8833333333334, 
                    364.88333333333327`}}],
                  "DelayedMouseEffectStyle"], {}},
                StatusArea[#, 0.0176307]& ,
                TagBoxNote->"0.0176307"],
               StyleBox["0.0176307`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.0176307, {}], "Tooltip"]& ],
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$4893578$4893604, 
                 FEPrivate`Not[DynamicChart`click$4893578$4893604]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], Dynamic[
            FEPrivate`If[
             DynamicChart`click$4893578$4893604, {{{1., 0.}, {0., 1.}}, {0.2, 
               0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$4893578$4893604}]],
           "DelayedClickEffect"]}, {}}}, {}}, {}}, {{{
        TagBox[GeometricTransformationBox[
          TagBox[
           TagBox[
            TooltipBox[
             
             TagBox[{{}, {{}, 
                InsetBox["\<\"Channel Busy\"\>", {0.6666666666666666, 0.}]}},
              StatusArea[#, 0.0176307]& ,
              TagBoxNote->"0.0176307"],
             StyleBox["0.0176307`", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0176307, {}], "Tooltip"]& ],
           
           EventHandlerTag[{
            "MouseClicked" :> 
             FEPrivate`Set[DynamicChart`click$4893578$4893604, 
               FEPrivate`Not[DynamicChart`click$4893578$4893604]], 
             PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
             True}]], Dynamic[
          FEPrivate`If[
           DynamicChart`click$4893578$4893604, {{{1., 0.}, {0., 1.}}, {0.2, 
             0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
           TrackedSymbols :> {DynamicChart`click$4893578$4893604}]],
         "DelayedClickEffect"], {}}, {}}, {}}, {}, {}},
    DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
  ContentSelectable->False,
  DisplayFunction->Identity,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox[
    StyleBox["\"Channel Utilization\"", 16, Bold, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{-1., 1.}, {-1., 1.}},
  PlotRangePadding->Scaled[0.09166666666666669]]], "Output",
 CellChangeTimes->{3.959216850400391*^9},
 CellLabel->
  "Out[4977]=",ExpressionUUID->"977515fd-c12f-44c4-8f43-11ab52eb9510"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Simulation Results:\"\>"], "Print",
 CellChangeTimes->{3.959216850405686*^9},
 CellLabel->
  "During evaluation of \
In[4949]:=",ExpressionUUID->"359b66c4-bccd-4684-934b-702066e5cc98"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Successful Transmissions: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Successful Transmissions: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216850406144*^9},
 CellLabel->
  "During evaluation of \
In[4949]:=",ExpressionUUID->"04a97f7d-b9ea-4527-a712-d70f29e91783"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collisions: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Collisions: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216850406736*^9},
 CellLabel->
  "During evaluation of \
In[4949]:=",ExpressionUUID->"a8881caf-c7d8-49e8-b55d-61403c90a101"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Packet Delivery Ratio: \"\>", "\[InvisibleSpace]", 
   "0.0454545454545454546`4."}],
  SequenceForm["Packet Delivery Ratio: ", 0.0454545454545454546`4.],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216850407063*^9},
 CellLabel->
  "During evaluation of \
In[4949]:=",ExpressionUUID->"30c169b0-1bba-4423-b139-98d8b4c8d2b0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Channel Utilization: \"\>", "\[InvisibleSpace]", "0.8`"}],
  SequenceForm["Channel Utilization: ", 0.8],
  Editable->False]], "Print",
 CellChangeTimes->{3.959216850407391*^9},
 CellLabel->
  "During evaluation of \
In[4949]:=",ExpressionUUID->"acd4a07c-2b94-4af0-9b07-fcd71f358edc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Ethernet", " ", "Simulation", " ", "Parameters"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ListLinePlot", ",", "Plot"}], "}"}], ",", 
      RowBox[{"ImageSize", "->", "500"}], ",", 
      RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}]}], "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Physical", " ", "parameters"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"propSpeed", "=", 
     RowBox[{"2", "*", 
      RowBox[{"10", "^", "8"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Signal", " ", "propagation", " ", "speed", " ", "in", " ", 
     RowBox[{"m", "/", "s"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"cableLength", "=", "1000"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Cable", " ", "length", " ", "in", " ", "meters"}], "*)"}], "\n", 
   
   RowBox[{
    RowBox[{"dataRate", "=", 
     RowBox[{"3", "*", 
      RowBox[{"10", "^", "6"}]}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"3", " ", "Mbps", " ", "data", " ", "rate"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"slotTime", "=", 
     RowBox[{"16", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Time", " ", "slot", " ", "duration"}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Calculated", " ", "values"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"propDelay", "=", 
     RowBox[{"cableLength", "/", "propSpeed"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"One", "-", 
     RowBox[{"way", " ", "propagation", " ", "delay"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"transTime", "[", "bits_", "]"}], ":=", 
     RowBox[{"bits", "/", "dataRate"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Transmission", " ", "time", " ", "for", " ", "bits"}], "*)"}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Station", " ", "class"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"createStation", "[", "id_", "]"}], ":=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<id\>\"", "->", "id"}], ",", 
       RowBox[{"\"\<state\>\"", "->", "\"\<IDLE\>\""}], ",", 
       RowBox[{"(*", 
        RowBox[{"IDLE", ",", "SENDING", ",", "BACKOFF", ",", "DEFERRING"}], 
        "*)"}], 
       RowBox[{"\"\<queue\>\"", "->", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"Packet", " ", "queue"}], "*)"}], 
       RowBox[{"\"\<collisionCount\>\"", "->", "0"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Collision", " ", "counter", " ", "for", " ", "backoff"}], 
        "*)"}], 
       RowBox[{"\"\<backoffSlots\>\"", "->", "0"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Remaining", " ", "backoff", " ", "slots"}], "*)"}], 
       RowBox[{"\"\<currentPacket\>\"", "->", "None"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Packet", " ", "being", " ", "transmitted"}], "*)"}], 
       RowBox[{"\"\<sentPackets\>\"", "->", 
        RowBox[{"<|", "|>"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"Packets", " ", "sent", " ", 
         RowBox[{"(", 
          RowBox[{"for", " ", "ACK", " ", "tracking"}], ")"}]}], "*)"}], 
       RowBox[{"\"\<receivedPackets\>\"", "->", 
        RowBox[{"<|", "|>"}]}]}], "    ", 
      RowBox[{"(*", 
       RowBox[{"Packets", " ", "received"}], "*)"}], "|>"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Channel", " ", "model"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"createChannel", "[", "]"}], ":=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<state\>\"", "->", "\"\<IDLE\>\""}], ",", 
       RowBox[{"(*", 
        RowBox[{"IDLE", ",", "BUSY", ",", "COLLISION"}], "*)"}], 
       RowBox[{"\"\<currentTransmissions\>\"", "->", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{"stationId", ",", "packet", ",", "startTime"}], "}"}], 
        "*)"}], 
       RowBox[{"\"\<busyStart\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<busyEnd\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<totalBusyTime\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<successfulTx\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<collisions\>\"", "->", "0"}]}], "|>"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Initialize", " ", "simulation"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"initializeSimulation", "[", 
      RowBox[{"nStations_", ",", "simTime_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"stations", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"createStation", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"channel", "=", 
         RowBox[{"createChannel", "[", "]"}]}], ";", "\n", 
        RowBox[{"eventQueue", "=", 
         RowBox[{"CreateDataStructure", "[", "\"\<PriorityQueue\>\"", "]"}]}],
         ";", "\n", 
        RowBox[{"currentTime", "=", "0"}], ";", "\n", 
        RowBox[{"maxTime", "=", "simTime"}], ";", "\n", 
        RowBox[{"stats", "=", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<totalPackets\>\"", "->", "0"}], ",", 
           RowBox[{"\"\<successfulPackets\>\"", "->", "0"}], ",", 
           RowBox[{"\"\<collidedPackets\>\"", "->", "0"}], ",", 
           RowBox[{"\"\<totalLatency\>\"", "->", "0"}], ",", 
           RowBox[{"\"\<channelBusyTime\>\"", "->", "0"}]}], "|>"}]}], ";", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
         "Schedule", " ", "initial", " ", "packet", " ", "generations"}], 
         "*)"}], 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"schedulePacketGeneration", "[", 
           RowBox[{"i", ",", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"maxTime", "/", "10"}]}], "}"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";"}]}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Event", " ", "scheduling"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"scheduleEvent", "[", 
      RowBox[{"time_", ",", "type_", ",", "data_"}], "]"}], ":=", 
     RowBox[{"eventQueue", "[", 
      RowBox[{"\"\<Insert\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"time", ",", "type", ",", "data"}], "}"}], ",", "time"}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"schedulePacketGeneration", "[", 
      RowBox[{"stationId_", ",", "time_"}], "]"}], ":=", 
     RowBox[{"scheduleEvent", "[", 
      RowBox[{"time", ",", "\"\<PACKET_ARRIVAL\>\"", ",", "stationId"}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Packet", " ", "creation"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"createPacket", "[", 
      RowBox[{"src_", ",", "dest_", ",", "size_"}], "]"}], ":=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<id\>\"", "->", 
        RowBox[{"Unique", "[", "\"\<pkt\>\"", "]"}]}], ",", 
       RowBox[{"\"\<src\>\"", "->", "src"}], ",", 
       RowBox[{"\"\<dest\>\"", "->", "dest"}], ",", 
       RowBox[{"\"\<size\>\"", "->", "size"}], ",", 
       RowBox[{"\"\<genTime\>\"", "->", "currentTime"}], ",", 
       RowBox[{"\"\<txStartTime\>\"", "->", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\"\<txEndTime\>\"", "->", 
        RowBox[{"-", "1"}]}]}], "|>"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "==="}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"EVENT", " ", "HANDLERS"}], "===", "===", "==="}], "="}]}], 
    "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"processEvent", "[", 
      RowBox[{"time_", ",", "\"\<PACKET_ARRIVAL\>\"", ",", "stationId_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"station", ",", "packet", ",", "dest"}], "}"}], ",", 
       RowBox[{
        RowBox[{"station", "=", 
         RowBox[{"stations", "[", 
          RowBox[{"[", "stationId", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Create", " ", "new", " ", "packet"}], "-", 
           RowBox[{"80", "%", " ", "to", " ", "random", " ", "station"}]}], 
          ",", 
          RowBox[{"20", "%", " ", "broadcast"}]}], "*)"}], 
        RowBox[{"dest", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], "<", "0.2"}], ",", "0", ",", 
           RowBox[{"RandomChoice", "[", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"Length", "[", "stations", "]"}], "]"}], ",", 
              "stationId"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"packet", "=", 
         RowBox[{"createPacket", "[", 
          RowBox[{"stationId", ",", "dest", ",", 
           RowBox[{"RandomChoice", "[", 
            RowBox[{"{", 
             RowBox[{"4096", ",", "1024", ",", "512", ",", "48"}], "}"}], 
            "]"}]}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Add", " ", "to", " ", "queue", " ", "and", " ", "log"}], 
         "*)"}], 
        RowBox[{
         RowBox[{
          RowBox[{"stations", "[", 
           RowBox[{"[", "stationId", "]"}], "]"}], "[", "\"\<queue\>\"", 
          "]"}], "=", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"station", "[", "\"\<queue\>\"", "]"}], ",", "packet"}], 
          "]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"stats", "[", "\"\<totalPackets\>\"", "]"}], "++"}], ";", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{"Schedule", " ", "next", " ", "arrival"}], "*)"}], 
        RowBox[{"schedulePacketGeneration", "[", 
         RowBox[{"stationId", ",", 
          RowBox[{"time", "+", 
           RowBox[{"RandomReal", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.1", ",", "1.0"}], "}"}], "*", 
             RowBox[{"maxTime", "/", "10"}]}], "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", " ", "idle"}], ",", 
          RowBox[{"attempt", " ", "transmission"}]}], "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"station", "[", "\"\<state\>\"", "]"}], "===", 
           "\"\<IDLE\>\""}], ",", 
          RowBox[{"attemptTransmission", "[", "stationId", "]"}]}], "]"}], 
        ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"attemptTransmission", "[", "stationId_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"station", ",", "packet", ",", "txTime"}], "}"}], ",", 
       RowBox[{
        RowBox[{"station", "=", 
         RowBox[{"stations", "[", 
          RowBox[{"[", "stationId", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "]"}], "==", 
           "0"}], ",", 
          RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Check", " ", "channel", " ", "state"}], "-", 
          RowBox[{"carrier", " ", "sense"}]}], "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"channel", "[", "\"\<state\>\"", "]"}], "===", 
            "\"\<IDLE\>\""}], "||", 
           RowBox[{"currentTime", ">=", 
            RowBox[{"channel", "[", "\"\<busyEnd\>\"", "]"}]}]}], ",", 
          RowBox[{"(*", 
           RowBox[{"Start", " ", "transmission"}], "*)"}], 
          RowBox[{
           RowBox[{"packet", "=", 
            RowBox[{"First", "[", 
             RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "]"}]}], ";", 
           "\n", 
           RowBox[{
            RowBox[{"packet", "[", "\"\<txStartTime\>\"", "]"}], "=", 
            "currentTime"}], ";", "\n", 
           RowBox[{"txTime", "=", 
            RowBox[{"transTime", "[", 
             RowBox[{"packet", "[", "\"\<size\>\"", "]"}], "]"}]}], ";", "\n", 
           RowBox[{
            RowBox[{"stations", "[", 
             RowBox[{"[", "stationId", "]"}], "]"}], "=", "station"}], ";", 
           "\n", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "stationId", "]"}], "]"}], "[", "\"\<state\>\"", 
             "]"}], "=", "\"\<SENDING\>\""}], ";", "\n", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "stationId", "]"}], "]"}], "[", 
             "\"\<currentPacket\>\"", "]"}], "=", "packet"}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Update", " ", "channel"}], "*)"}], 
           RowBox[{
            RowBox[{"channel", "[", "\"\<state\>\"", "]"}], "=", 
            "\"\<BUSY\>\""}], ";", "\n", 
           RowBox[{
            RowBox[{"channel", "[", "\"\<busyStart\>\"", "]"}], "=", 
            "currentTime"}], ";", "\n", 
           RowBox[{
            RowBox[{"channel", "[", "\"\<busyEnd\>\"", "]"}], "=", 
            RowBox[{"currentTime", "+", "txTime", "+", "propDelay"}]}], ";", 
           "\n", 
           RowBox[{
            RowBox[{"channel", "[", "\"\<currentTransmissions\>\"", "]"}], 
            "=", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"channel", "[", "\"\<currentTransmissions\>\"", "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"stationId", ",", "packet", ",", "currentTime"}], 
               "}"}]}], "]"}]}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Schedule", " ", "end", " ", "of", " ", "transmission"}], 
            "*)"}], 
           RowBox[{"scheduleEvent", "[", 
            RowBox[{
             RowBox[{"currentTime", "+", "txTime"}], ",", "\"\<TX_END\>\"", 
             ",", "stationId"}], "]"}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{
            "Schedule", " ", "collision", " ", "detection", " ", "window"}], 
            "*)"}], 
           RowBox[{"scheduleEvent", "[", 
            RowBox[{
             RowBox[{"currentTime", "+", "propDelay"}], ",", 
             "\"\<COLLISION_CHECK\>\"", ",", "stationId"}], "]"}], ";"}]}], 
         "]"}], ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"processEvent", "[", 
      RowBox[{"time_", ",", "\"\<COLLISION_CHECK\>\"", ",", "stationId_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "transmissions", "}"}], ",", 
       RowBox[{
        RowBox[{"transmissions", "=", 
         RowBox[{"channel", "[", "\"\<currentTransmissions\>\"", "]"}]}], ";",
         "\n", 
        RowBox[{"(*", 
         RowBox[{
         "Collision", " ", "if", " ", "more", " ", "than", " ", "one", " ", 
          "transmission", " ", "started", " ", "within", " ", "propDelay"}], 
         "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "transmissions", "]"}], ">", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"channel", "[", "\"\<state\>\"", "]"}], "=", 
            "\"\<COLLISION\>\""}], ";", "\n", 
           RowBox[{
            RowBox[{"channel", "[", "\"\<collisions\>\"", "]"}], "++"}], ";", 
           "\n", 
           RowBox[{"(*", 
            RowBox[{
            "Notify", " ", "all", " ", "transmitting", " ", "stations"}], 
            "*)"}], 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"stations", "[", 
                 RowBox[{"[", "sid", "]"}], "]"}], "[", 
                "\"\<collisionCount\>\"", "]"}], "++"}], ";", "\n", 
              RowBox[{
               RowBox[{
                RowBox[{"stations", "[", 
                 RowBox[{"[", "sid", "]"}], "]"}], "[", "\"\<state\>\"", 
                "]"}], "=", "\"\<BACKOFF\>\""}], ";", "\n", 
              RowBox[{"startBackoff", "[", "sid", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"sid", ",", 
               RowBox[{"transmissions", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], 
           ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Reset", " ", "channel"}], "*)"}], 
           RowBox[{
            RowBox[{"channel", "[", "\"\<currentTransmissions\>\"", "]"}], 
            "=", 
            RowBox[{"{", "}"}]}], ";"}]}], "]"}], ";"}]}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"startBackoff", "[", "stationId_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"station", ",", "k"}], "}"}], ",", 
       RowBox[{
        RowBox[{"station", "=", 
         RowBox[{"stations", "[", 
          RowBox[{"[", "stationId", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"k", "=", 
         RowBox[{"station", "[", "\"\<collisionCount\>\"", "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Exponential", " ", 
          RowBox[{"backoff", ":", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"random", " ", "slots", " ", "0"}], ".."}], 
             RowBox[{"2", "^", "min"}], 
             RowBox[{"(", 
              RowBox[{"k", ",", "10"}], ")"}]}], "-", "1"}]}]}], "*)"}], 
        RowBox[{"backoffSlots", "=", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"2", "^", "k"}], ",", "1024"}], "]"}], "-", "1"}]}], 
           "}"}], "]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"stations", "[", 
           RowBox[{"[", "stationId", "]"}], "]"}], "[", 
          "\"\<backoffSlots\>\"", "]"}], "=", "backoffSlots"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Schedule", " ", "backoff", " ", "completion"}], "*)"}], 
        RowBox[{"scheduleEvent", "[", 
         RowBox[{
          RowBox[{"currentTime", "+", 
           RowBox[{"backoffSlots", "*", "slotTime"}]}], ",", 
          "\"\<BACKOFF_END\>\"", ",", "stationId"}], "]"}], ";"}]}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"processEvent", "[", 
      RowBox[{"time_", ",", "\"\<BACKOFF_END\>\"", ",", "stationId_"}], "]"}],
      ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "station", "}"}], ",", 
       RowBox[{
        RowBox[{"station", "=", 
         RowBox[{"stations", "[", 
          RowBox[{"[", "stationId", "]"}], "]"}]}], ";", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"stations", "[", 
           RowBox[{"[", "stationId", "]"}], "]"}], "[", "\"\<state\>\"", 
          "]"}], "=", "\"\<IDLE\>\""}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Re", "-", 
          RowBox[{
          "attempt", " ", "transmission", " ", "if", " ", "packets", " ", 
           "in", " ", "queue"}]}], "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "]"}], ">", "0"}],
           ",", 
          RowBox[{"attemptTransmission", "[", "stationId", "]"}]}], "]"}], 
        ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"processEvent", "[", 
      RowBox[{"time_", ",", "\"\<TX_END\>\"", ",", "stationId_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"station", ",", "packet", ",", "ackTime"}], "}"}], ",", 
       RowBox[{
        RowBox[{"station", "=", 
         RowBox[{"stations", "[", 
          RowBox[{"[", "stationId", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"packet", "=", 
         RowBox[{"station", "[", "\"\<currentPacket\>\"", "]"}]}], ";", "\n", 
        
        RowBox[{"(*", 
         RowBox[{
         "Successful", " ", "transmission", " ", "if", " ", "no", " ", 
          "collision"}], "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"channel", "[", "\"\<state\>\"", "]"}], "===", 
           "\"\<BUSY\>\""}], ",", 
          RowBox[{"(*", 
           RowBox[{"Update", " ", "stats"}], "*)"}], 
          RowBox[{
           RowBox[{
            RowBox[{"stats", "[", "\"\<successfulPackets\>\"", "]"}], "++"}], 
           ";", "\n", 
           RowBox[{
            RowBox[{"channel", "[", "\"\<successfulTx\>\"", "]"}], "++"}], 
           ";", "\n", 
           RowBox[{
            RowBox[{"channel", "[", "\"\<totalBusyTime\>\"", "]"}], "+=", 
            RowBox[{"transTime", "[", 
             RowBox[{"packet", "[", "\"\<size\>\"", "]"}], "]"}]}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Record", " ", "latency"}], "*)"}], 
           RowBox[{
            RowBox[{"stats", "[", "\"\<totalLatency\>\"", "]"}], "+=", 
            RowBox[{"currentTime", "-", 
             RowBox[{"packet", "[", "\"\<genTime\>\"", "]"}]}]}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Remove", " ", "from", " ", "queue"}], "*)"}], 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "stationId", "]"}], "]"}], "[", "\"\<queue\>\"", 
             "]"}], "=", 
            RowBox[{"Rest", "[", 
             RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "]"}]}], ";", 
           "\n", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "stationId", "]"}], "]"}], "[", 
             "\"\<currentPacket\>\"", "]"}], "=", "None"}], ";", "\n", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"stations", "[", 
               RowBox[{"[", "stationId", "]"}], "]"}], "[", 
              "\"\<sentPackets\>\"", "]"}], "[", 
             RowBox[{"packet", "[", "\"\<id\>\"", "]"}], "]"}], "=", 
            "currentTime"}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "If", " ", "destination", " ", "is", " ", "specific", " ", 
              "station"}], ",", 
             RowBox[{"schedule", " ", "ACK"}]}], "*)"}], 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"packet", "[", "\"\<dest\>\"", "]"}], ">", "0"}], ",", 
             RowBox[{
              RowBox[{"ackTime", "=", 
               RowBox[{"currentTime", "+", "propDelay", "+", 
                RowBox[{"transTime", "[", "64", "]"}]}]}], ";", 
              RowBox[{"(*", 
               RowBox[{"64", "-", 
                RowBox[{"bit", " ", "ACK"}]}], "*)"}], 
              RowBox[{"scheduleEvent", "[", 
               RowBox[{"ackTime", ",", "\"\<ACK_ARRIVAL\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"packet", "[", "\"\<dest\>\"", "]"}], ",", 
                  "stationId", ",", 
                  RowBox[{"packet", "[", "\"\<id\>\"", "]"}]}], "}"}]}], 
               "]"}], ";"}]}], "]"}], ";"}]}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
         "Reset", " ", "channel", " ", "if", " ", "no", " ", "other", " ", 
          "transmissions"}], "*)"}], 
        RowBox[{
         RowBox[{"channel", "[", "\"\<currentTransmissions\>\"", "]"}], "=", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"channel", "[", "\"\<currentTransmissions\>\"", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"stationId", ",", "_", ",", "_"}], "}"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"channel", "[", "\"\<currentTransmissions\>\"", "]"}], 
            "]"}], "==", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"channel", "[", "\"\<state\>\"", "]"}], "=", 
            "\"\<IDLE\>\""}], ";"}]}], "]"}], ";"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"processEvent", "[", 
      RowBox[{"time_", ",", "\"\<ACK_ARRIVAL\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"destId_", ",", "srcId_", ",", "pktId_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Record", " ", "ACK", " ", "receipt"}], "*)"}], 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"stations", "[", 
            RowBox[{"[", "destId", "]"}], "]"}], "[", 
           "\"\<receivedPackets\>\"", "]"}], "[", "pktId", "]"}], "=", 
         "currentTime"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Calculate", " ", "RTT", " ", "if", " ", "possible"}], 
         "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "destId", "]"}], "]"}], "[", "\"\<sentPackets\>\"",
              "]"}], ",", "pktId"}], "]"}], ",", 
          RowBox[{
           RowBox[{"rtt", "=", 
            RowBox[{"currentTime", "-", 
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", 
                RowBox[{"[", "destId", "]"}], "]"}], "[", 
               "\"\<sentPackets\>\"", "]"}], "[", "pktId", "]"}]}]}], ";"}]}],
          "\n", 
         RowBox[{"(*", 
          RowBox[{
          "Can", " ", "store", " ", "RTT", " ", "for", " ", "analysis"}], 
          "*)"}], "]"}], ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "==="}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"MAIN", " ", "SIMULATION", " ", "LOOP"}], "===", "===", 
       "==="}], "="}]}], "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"runSimulation", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "nextEvent", "}"}], ",", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"!", 
            RowBox[{"eventQueue", "[", "\"\<EmptyQ\>\"", "]"}]}], "&&", 
           RowBox[{"currentTime", "<", "maxTime"}]}], ",", 
          RowBox[{
           RowBox[{"nextEvent", "=", 
            RowBox[{"eventQueue", "[", "\"\<Pop\>\"", "]"}]}], ";", "\n", 
           RowBox[{"currentTime", "=", 
            RowBox[{"nextEvent", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"nextEvent", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "==", 
              "\"\<PACKET_ARRIVAL\>\""}], ",", 
             RowBox[{"processEvent", "@@", "nextEvent"}], ",", 
             RowBox[{
              RowBox[{"nextEvent", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "==", "\"\<TX_END\>\""}], ",", 
             
             RowBox[{"processEvent", "@@", "nextEvent"}], ",", 
             RowBox[{
              RowBox[{"nextEvent", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "==", 
              "\"\<COLLISION_CHECK\>\""}], ",", 
             RowBox[{"processEvent", "@@", "nextEvent"}], ",", 
             RowBox[{
              RowBox[{"nextEvent", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "==", "\"\<BACKOFF_END\>\""}], 
             ",", 
             RowBox[{"processEvent", "@@", "nextEvent"}], ",", 
             RowBox[{
              RowBox[{"nextEvent", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "==", "\"\<ACK_ARRIVAL\>\""}], 
             ",", 
             RowBox[{"processEvent", "@@", "nextEvent"}]}], "]"}], ";"}]}], 
         "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Final", " ", "stats"}], "*)"}], 
        RowBox[{
         RowBox[{"stats", "[", "\"\<channelUtilization\>\"", "]"}], "=", 
         RowBox[{
          RowBox[{"channel", "[", "\"\<totalBusyTime\>\"", "]"}], "/", 
          "currentTime"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"stats", "[", "\"\<avgLatency\>\"", "]"}], "=", 
         RowBox[{
          RowBox[{"stats", "[", "\"\<totalLatency\>\"", "]"}], "/", 
          RowBox[{"Max", "[", 
           RowBox[{"1", ",", 
            RowBox[{"stats", "[", "\"\<successfulPackets\>\"", "]"}]}], 
           "]"}]}]}], ";", "\n", 
        RowBox[{
         RowBox[{"stats", "[", "\"\<collisionRate\>\"", "]"}], "=", 
         RowBox[{
          RowBox[{"channel", "[", "\"\<collisions\>\"", "]"}], "/", 
          RowBox[{"Max", "[", 
           RowBox[{"1", ",", 
            RowBox[{"stats", "[", "\"\<totalPackets\>\"", "]"}]}], "]"}]}]}], 
        ";", "\n", "stats"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "==="}], "=", 
     RowBox[{
      RowBox[{"VISUALIZATION", "===", "===", "==="}], "="}]}], "*)"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"visualizeSimulation", "[", 
      RowBox[{"stats_", ",", "nStations_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"util", ",", "eff", ",", "latency"}], "}"}], ",", 
       RowBox[{
        RowBox[{"util", "=", 
         RowBox[{"stats", "[", "\"\<channelUtilization\>\"", "]"}]}], ";", 
        "\n", 
        RowBox[{"eff", "=", 
         RowBox[{
          RowBox[{"stats", "[", "\"\<successfulPackets\>\"", "]"}], "/", 
          RowBox[{"stats", "[", "\"\<totalPackets\>\"", "]"}]}]}], ";", "\n", 
        
        RowBox[{"latency", "=", 
         RowBox[{"stats", "[", "\"\<avgLatency\>\"", "]"}]}], ";", "\n", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Ethernet CSMA/CD Simulation Results\>\"", ",", 
               "\"\<Section\>\"", ",", "16"}], "]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Value\>\"", ",", "Bold"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Description\>\"", ",", "Bold"}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Stations:\>\"", ",", "nStations", ",", 
              "\"\<Number of communicating stations\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Channel Utilization:\>\"", ",", 
              RowBox[{
               RowBox[{"NumberForm", "[", 
                RowBox[{
                 RowBox[{"util", "*", "100"}], ",", "3"}], "]"}], "<>", 
               "\"\<%\>\""}], ",", 
              "\"\<Fraction of time channel was busy\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Efficiency:\>\"", ",", 
              RowBox[{
               RowBox[{"NumberForm", "[", 
                RowBox[{
                 RowBox[{"eff", "*", "100"}], ",", "3"}], "]"}], "<>", 
               "\"\<%\>\""}], ",", 
              "\"\<Successful packets / Total packets\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Avg. Latency:\>\"", ",", 
              RowBox[{
               RowBox[{"NumberForm", "[", 
                RowBox[{
                 RowBox[{"latency", "*", "1000"}], ",", "4"}], "]"}], "<>", 
               "\"\< ms\>\""}], ",", 
              "\"\<Average packet delivery latency\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Collision Rate:\>\"", ",", 
              RowBox[{
               RowBox[{"NumberForm", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"stats", "[", "\"\<collisionRate\>\"", "]"}], "*", 
                  "100"}], ",", "3"}], "]"}], "<>", "\"\<%\>\""}], ",", 
              "\"\<Collisions per packet attempt\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Successful Packets:\>\"", ",", 
              RowBox[{"stats", "[", "\"\<successfulPackets\>\"", "]"}], ",", 
              "\"\<Packets delivered successfully\>\""}], "}"}]}], "}"}], ",", 
          RowBox[{"Frame", "->", "All"}], ",", 
          RowBox[{"Alignment", "->", "Left"}], ",", 
          RowBox[{"Background", "->", 
           RowBox[{"{", 
            RowBox[{"None", ",", 
             RowBox[{"{", 
              RowBox[{
              "LightBlue", ",", "LightYellow", ",", "LightGreen", ",", 
               "LightRed", ",", "LightOrange", ",", "LightPurple", ",", 
               "LightCyan"}], "}"}]}], "}"}]}]}], "]"}]}]}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"===", "===", "==="}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"EXAMPLE", " ", "USAGE"}], "===", "===", "==="}], "="}]}], 
    "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Initialize", " ", "and", " ", "run", " ", "simulation"}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"initializeSimulation", "[", 
     RowBox[{"8", ",", "0.1"}], "]"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"8", " ", "stations"}], ",", 
     RowBox[{"0.1", " ", "seconds", " ", "sim", " ", "time"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{"runSimulation", "[", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "results"}], "*)"}], "\n", 
   RowBox[{"visualizeSimulation", "[", 
    RowBox[{"results", ",", "8"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.959216922930759*^9, 3.9592169229319277`*^9}},
 CellLabel->
  "In[5511]:=",ExpressionUUID->"da620e12-43bb-481d-863f-98dd5ebb49e6"],

Cell[BoxData[
 TemplateBox[{
  "SetDelayed", "write", 
   "\"Tag \\!\\(\\*RowBox[{\\\"Rational\\\"}]\\) in \
\\!\\(\\*RowBox[{FractionBox[\\\"64\\\", \\\"46875\\\"], \\\"[\\\", \\\"bits_\
\\\", \\\"]\\\"}]\\) is Protected.\"", 2, 5518, 1267, 19024681249811965357, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.95921692303764*^9},
 CellLabel->
  "During evaluation of \
In[5511]:=",ExpressionUUID->"91d02bb3-83f3-40e3-8a26-f366b133ad48"],

Cell[BoxData[
 TemplateBox[{
  "DataStructure", "noop", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Insert\\\\\\\"\\\"}]\\) is not a known \
operation for \\!\\(\\*RowBox[{\\\"\\\\\\\"PriorityQueue\\\\\\\"\\\"}]\\).\"",
    2, 5534, 1268, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216923046014*^9},
 CellLabel->
  "During evaluation of \
In[5511]:=",ExpressionUUID->"a4f5646d-5fa6-46bb-af46-805e99c15beb"],

Cell[BoxData[
 TemplateBox[{
  "DataStructure", "noop", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Insert\\\\\\\"\\\"}]\\) is not a known \
operation for \\!\\(\\*RowBox[{\\\"\\\\\\\"PriorityQueue\\\\\\\"\\\"}]\\).\"",
    2, 5534, 1269, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216923048689*^9},
 CellLabel->
  "During evaluation of \
In[5511]:=",ExpressionUUID->"4f013504-f45b-43c8-9073-2e6aa54773f7"],

Cell[BoxData[
 TemplateBox[{
  "DataStructure", "noop", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Insert\\\\\\\"\\\"}]\\) is not a known \
operation for \\!\\(\\*RowBox[{\\\"\\\\\\\"PriorityQueue\\\\\\\"\\\"}]\\).\"",
    2, 5534, 1270, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216923050927*^9},
 CellLabel->
  "During evaluation of \
In[5511]:=",ExpressionUUID->"de5809cd-dd10-4014-880d-5e57665afb6d"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"DataStructure\\\", \
\\\"::\\\", \\\"noop\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 5534, 1271, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216923053297*^9},
 CellLabel->
  "During evaluation of \
In[5511]:=",ExpressionUUID->"88e1a1f1-0f5a-4376-8363-24e88a43bd7e"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 5535, 1272, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216923055772*^9},
 CellLabel->
  "During evaluation of \
In[5511]:=",ExpressionUUID->"6e18c311-e946-458c-8251-8cbbdc6a81f7"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 5535, 1273, 
   19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216923058264*^9},
 CellLabel->
  "During evaluation of \
In[5511]:=",ExpressionUUID->"b06e9b73-32c9-4681-b816-869dfddfe105"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 5536, 1274, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216923060589*^9},
 CellLabel->
  "During evaluation of \
In[5511]:=",ExpressionUUID->"8ed35bb3-1f4d-4138-87a9-f1f93ecccf06"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 5536, 1275, 
   19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216923063157*^9},
 CellLabel->
  "During evaluation of \
In[5511]:=",ExpressionUUID->"b66dd585-07c7-44ab-9820-81d1265b63d2"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Indeterminate\\\", \\\"<>\\\", \
\\\"\\\\\\\"%\\\\\\\"\\\"}]\\).\"", 2, 5536, 1276, 19024681249811965357, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216923065775*^9},
 CellLabel->
  "During evaluation of \
In[5511]:=",ExpressionUUID->"bb0de66c-3340-40af-8d3f-0960088185a9"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Indeterminate\\\", \\\"<>\\\", \
\\\"\\\\\\\"%\\\\\\\"\\\"}]\\).\"", 2, 5536, 1277, 19024681249811965357, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9592169230680103`*^9},
 CellLabel->
  "During evaluation of \
In[5511]:=",ExpressionUUID->"6f77e1e9-8131-42b9-9e96-305a791e28e8"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0\\\\\\\"\\\", \\\"<>\\\", \\\"\\\\\\\" ms\\\\\\\
\"\\\"}]\\).\"", 2, 5536, 1278, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216923070355*^9},
 CellLabel->
  "During evaluation of \
In[5511]:=",ExpressionUUID->"60e42427-5ac5-4aa8-9b3b-a4347cc45f72"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 5536, 1279, 19024681249811965357, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959216923074132*^9},
 CellLabel->
  "During evaluation of \
In[5511]:=",ExpressionUUID->"0c37da04-636c-4fe5-a503-79951bcc32cc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Ethernet CSMA/CD Simulation Results\"\>", "Section",
      StripOnInput->False,
      FontSize->16], "", ""},
    {"\<\"\"\>", 
     StyleBox["\<\"Value\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Description\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"\<\"Stations:\"\>", "8", "\<\"Number of communicating stations\"\>"},
    {"\<\"Channel Utilization:\"\>", 
     RowBox[{
      TagBox["Indeterminate",
       NumberForm[#, 3]& ], 
      "<>", "\<\"%\"\>"}], "\<\"Fraction of time channel was busy\"\>"},
    {"\<\"Efficiency:\"\>", 
     RowBox[{
      TagBox["Indeterminate",
       NumberForm[#, 3]& ], 
      "<>", "\<\"%\"\>"}], "\<\"Successful packets / Total packets\"\>"},
    {"\<\"Avg. Latency:\"\>", 
     RowBox[{
      TagBox[
       InterpretationBox[
        StyleBox["\<\"0\"\>",
         ShowStringCharacters->False],
        0,
        Editable->False],
       NumberForm[#, 4]& ], 
      "<>", "\<\" ms\"\>"}], "\<\"Average packet delivery latency\"\>"},
    {"\<\"Collision Rate:\"\>", 
     RowBox[{
      TagBox[
       InterpretationBox[
        StyleBox["\<\"0\"\>",
         ShowStringCharacters->False],
        0,
        Editable->False],
       NumberForm[#, 3]& ], 
      "<>", "\<\"%\"\>"}], "\<\"Collisions per packet attempt\"\>"},
    {"\<\"Successful Packets:\"\>", 
     "0", "\<\"Packets delivered successfully\"\>"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       RGBColor[0.87, 0.94, 1], 
       RGBColor[1, 1, 0.85], 
       RGBColor[0.88, 1, 0.88], 
       RGBColor[1, 0.85, 0.85], 
       RGBColor[1, 0.9, 0.8], 
       RGBColor[0.94, 0.88, 0.94], 
       RGBColor[0.9, 1, 1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.959216923076603*^9},
 CellLabel->
  "Out[5536]=",ExpressionUUID->"3479d004-2507-4bb0-92dc-7c756091689d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Ethernet", " ", "Simulation", " ", "Parameters"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"slotDuration", "=", 
     RowBox[{"16", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"16", " ", "\[Mu]s", " ", "slot", " ", "time"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"numStations", "=", "10"}], ";"}], "         ", 
   RowBox[{"(*", 
    RowBox[{"Number", " ", "of", " ", "stations"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"dataPacketSlots", "=", "10"}], ";"}], "     ", 
   RowBox[{"(*", 
    RowBox[{"Data", " ", "packet", " ", "duration", " ", "in", " ", "slots"}],
     "*)"}], "\n", 
   RowBox[{
    RowBox[{"ackPacketSlots", "=", "2"}], ";"}], "       ", 
   RowBox[{"(*", 
    RowBox[{"ACK", " ", "packet", " ", "duration", " ", "in", " ", "slots"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"packetArrivalRate", "=", "0.01"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Packet", " ", "arrival", " ", "probability", " ", "per", " ", "slot"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"maxCollisions", "=", "10"}], ";"}], "       ", 
   RowBox[{"(*", 
    RowBox[{"Maximum", " ", "collision", " ", "attempts"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"simulationSlots", "=", "5000"}], ";"}], "   ", 
   RowBox[{"(*", 
    RowBox[{"Total", " ", "simulation", " ", "duration"}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Initialize", " ", "station", " ", "states"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"stationStates", "=", 
     RowBox[{"Association", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"i", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<state\>\"", "->", "\"\<IDLE\>\""}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "IDLE", ",", "BACKOFF", ",", "TRANSMITTING", ",", "WAITING_ACK"}],
             "*)"}], 
           RowBox[{"\"\<queue\>\"", "->", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"(*", 
            RowBox[{"Packet", " ", "queue"}], "*)"}], 
           RowBox[{"\"\<backoffCounter\>\"", "->", "0"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Current", " ", "backoff", " ", "count"}], "*)"}], 
           RowBox[{"\"\<collisionCount\>\"", "->", "0"}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "Consecutive", " ", "collisions", " ", "for", " ", "current", " ",
              "packet"}], "*)"}], 
           RowBox[{"\"\<currentPacket\>\"", "->", "None"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Packet", " ", "being", " ", "processed"}], "*)"}], 
           RowBox[{"\"\<transmitRemaining\>\"", "->", "0"}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "Slots", " ", "remaining", " ", "for", " ", "transmission"}], 
            "*)"}], 
           RowBox[{"\"\<timeoutCounter\>\"", "->", "0"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Timeout", " ", "counter", " ", "for", " ", "ACK"}], 
            "*)"}], 
           RowBox[{"\"\<successCount\>\"", "->", "0"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Successful", " ", "transmissions"}], "*)"}], 
           RowBox[{"\"\<collisionEvents\>\"", "->", "0"}], ",", 
           RowBox[{"(*", 
            RowBox[{"Collision", " ", "events"}], "*)"}], 
           RowBox[{"\"\<totalDelay\>\"", "->", "0"}]}], "             ", 
          RowBox[{"(*", 
           RowBox[{"Cumulative", " ", "packet", " ", "delay"}], "*)"}], 
          "|>"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}]}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Channel", " ", "state"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"channelState", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<state\>\"", "->", "\"\<IDLE\>\""}], ",", 
       RowBox[{"(*", 
        RowBox[{"IDLE", ",", "BUSY", ",", "COLLISION"}], "*)"}], 
       RowBox[{"\"\<currentTransmitter\>\"", "->", "None"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Station", " ", "currently", " ", "transmitting"}], "*)"}], 
       RowBox[{"\"\<remainingSlots\>\"", "->", "0"}]}], "         ", 
      RowBox[{"(*", 
       RowBox[{"Slots", " ", "remaining", " ", "in", " ", "transmission"}], 
       "*)"}], "|>"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Statistics", " ", "tracking"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"simulationStats", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<totalSlots\>\"", "->", "simulationSlots"}], ",", 
       RowBox[{"\"\<busySlots\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<successfulTransmissions\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<collisionEvents\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<generatedPackets\>\"", "->", "0"}], ",", 
       RowBox[{"\"\<timedOutPackets\>\"", "->", "0"}]}], "|>"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Main", " ", "simulation", " ", "loop"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{"(*", 
      RowBox[{"Update", " ", "channel", " ", "state"}], "*)"}], 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"channelState", "[", "\"\<state\>\"", "]"}], "==", 
          "\"\<BUSY\>\""}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"channelState", "[", "\"\<remainingSlots\>\"", "]"}], 
           "--"}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"channelState", "[", "\"\<remainingSlots\>\"", "]"}], "==",
              "0"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"channelState", "[", "\"\<state\>\"", "]"}], "=", 
              "\"\<IDLE\>\""}], ";", "\n", 
             RowBox[{
              RowBox[{
              "channelState", "[", "\"\<currentTransmitter\>\"", "]"}], "=", 
              "None"}], ";"}]}], "]"}], ";"}]}], "]"}], ";", "\n", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"channelState", "[", "\"\<state\>\"", "]"}], "==", 
          "\"\<COLLISION\>\""}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"channelState", "[", "\"\<state\>\"", "]"}], "=", 
           "\"\<IDLE\>\""}], ";"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Process", " ", "station", " ", "timeouts"}], "*)"}], 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"stationStates", "[", "i", "]"}], "[", "\"\<state\>\"", 
             "]"}], "==", "\"\<WAITING_ACK\>\""}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"stationStates", "[", "i", "]"}], "[", 
              "\"\<timeoutCounter\>\"", "]"}], "--"}], ";", "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"stationStates", "[", "i", "]"}], "[", 
                "\"\<timeoutCounter\>\"", "]"}], "<=", "0"}], ",", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Timeout", " ", "occurred"}], "-", 
                RowBox[{"reschedule", " ", "packet"}]}], "*)"}], 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"stationStates", "[", "i", "]"}], "[", 
                  "\"\<queue\>\"", "]"}], ",", 
                 RowBox[{
                  RowBox[{"stationStates", "[", "i", "]"}], "[", 
                  "\"\<currentPacket\>\"", "]"}]}], "]"}], ";", "\n", 
               RowBox[{
                RowBox[{
                 RowBox[{"stationStates", "[", "i", "]"}], "[", 
                 "\"\<currentPacket\>\"", "]"}], "=", "None"}], ";", "\n", 
               RowBox[{
                RowBox[{
                 RowBox[{"stationStates", "[", "i", "]"}], "[", 
                 "\"\<state\>\"", "]"}], "=", "\"\<BACKOFF\>\""}], ";", "\n", 
               
               RowBox[{
                RowBox[{
                 RowBox[{"stationStates", "[", "i", "]"}], "[", 
                 "\"\<collisionCount\>\"", "]"}], "++"}], ";", "\n", 
               RowBox[{
                RowBox[{
                "simulationStats", "[", "\"\<timedOutPackets\>\"", "]"}], 
                "++"}], ";"}]}], "]"}], ";"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Generate", " ", "new", " ", "packets"}], "*)"}], 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], "<", "packetArrivalRate"}], ",", 
           RowBox[{
            RowBox[{"destination", "=", 
             RowBox[{"RandomChoice", "[", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{
                RowBox[{"Range", "[", "numStations", "]"}], ",", "i"}], "]"}],
               "]"}]}], ";", "\n", 
            RowBox[{"newPacket", "=", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<id\>\"", "->", 
                RowBox[{
                 RowBox[{
                 "simulationStats", "[", "\"\<generatedPackets\>\"", "]"}], 
                 "+", "1"}]}], ",", 
               RowBox[{"\"\<source\>\"", "->", "i"}], ",", 
               RowBox[{"\"\<destination\>\"", "->", "destination"}], ",", 
               RowBox[{"\"\<generationTime\>\"", "->", "t"}], ",", 
               RowBox[{"\"\<type\>\"", "->", "\"\<DATA\>\""}], ",", 
               RowBox[{"\"\<attempts\>\"", "->", "0"}]}], "|>"}]}], ";", "\n", 
            RowBox[{
             RowBox[{
             "simulationStats", "[", "\"\<generatedPackets\>\"", "]"}], 
             "++"}], ";", "\n", 
            RowBox[{
             RowBox[{
              RowBox[{"stationStates", "[", "i", "]"}], "[", "\"\<queue\>\"", 
              "]"}], "=", 
             RowBox[{"Append", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"stationStates", "[", "i", "]"}], "[", 
                "\"\<queue\>\"", "]"}], ",", "newPacket"}], "]"}]}], ";"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Process", " ", "channel", " ", "access"}], "*)"}], 
       RowBox[{"readyStations", "=", 
        RowBox[{"{", "}"}]}], ";", "\n", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"station", "=", 
           RowBox[{"stationStates", "[", "i", "]"}]}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<state\>\"", "]"}], "==", 
              "\"\<IDLE\>\""}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "]"}], ">", 
              "0"}], "&&", 
             RowBox[{
              RowBox[{"station", "[", "\"\<backoffCounter\>\"", "]"}], "==", 
              "0"}]}], ",", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"readyStations", ",", "i"}], "]"}], ";"}]}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Handle", " ", "transmission", " ", "attempts"}], "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"channelState", "[", "\"\<state\>\"", "]"}], "==", 
           "\"\<IDLE\>\""}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", "readyStations", "]"}], ">", "0"}]}], ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "readyStations", "]"}], ">", "1"}], ",", 
            RowBox[{"(*", 
             RowBox[{"Collision", " ", "occurred"}], "*)"}], 
            RowBox[{
             RowBox[{
              RowBox[{"channelState", "[", "\"\<state\>\"", "]"}], "=", 
              "\"\<COLLISION\>\""}], ";", "\n", 
             RowBox[{
              RowBox[{
              "simulationStats", "[", "\"\<collisionEvents\>\"", "]"}], 
              "++"}], ";", "\n", 
             RowBox[{
              RowBox[{"simulationStats", "[", "\"\<busySlots\>\"", "]"}], 
              "++"}], ";", "\n", 
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"stationStates", "[", "i", "]"}], "[", 
                  "\"\<state\>\"", "]"}], "=", "\"\<BACKOFF\>\""}], ";", "\n", 
                RowBox[{
                 RowBox[{
                  RowBox[{"stationStates", "[", "i", "]"}], "[", 
                  "\"\<collisionCount\>\"", "]"}], "=", 
                 RowBox[{"Min", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"stationStates", "[", "i", "]"}], "[", 
                    "\"\<collisionCount\>\"", "]"}], "+", "1"}], ",", 
                   "maxCollisions"}], "]"}]}], ";", "\n", 
                RowBox[{"backoffWindow", "=", 
                 RowBox[{
                  RowBox[{"2", "^", 
                   RowBox[{
                    RowBox[{"stationStates", "[", "i", "]"}], "[", 
                    "\"\<collisionCount\>\"", "]"}]}], "-", "1"}]}], ";", 
                "\n", 
                RowBox[{
                 RowBox[{
                  RowBox[{"stationStates", "[", "i", "]"}], "[", 
                  "\"\<backoffCounter\>\"", "]"}], "=", 
                 RowBox[{"RandomInteger", "[", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "backoffWindow"}], "}"}], "]"}]}], ";", 
                "\n", 
                RowBox[{
                 RowBox[{
                  RowBox[{"stationStates", "[", "i", "]"}], "[", 
                  "\"\<collisionEvents\>\"", "]"}], "++"}], ";", "\n", 
                RowBox[{
                 RowBox[{
                  RowBox[{"stationStates", "[", "i", "]"}], "[", 
                  "\"\<currentPacket\>\"", "]"}], "=", 
                 RowBox[{"First", "[", 
                  RowBox[{
                   RowBox[{"stationStates", "[", "i", "]"}], "[", 
                   "\"\<queue\>\"", "]"}], "]"}]}], ";", "\n", 
                RowBox[{
                 RowBox[{
                  RowBox[{"stationStates", "[", "i", "]"}], "[", 
                  "\"\<queue\>\"", "]"}], "=", 
                 RowBox[{"Rest", "[", 
                  RowBox[{
                   RowBox[{"stationStates", "[", "i", "]"}], "[", 
                   "\"\<queue\>\"", "]"}], "]"}]}], ";"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "readyStations"}], "}"}]}], "]"}], ";"}], 
            ",", 
            RowBox[{"(*", 
             RowBox[{"Single", " ", "station", " ", "transmitting"}], "*)"}], 
            
            RowBox[{
             RowBox[{"i", "=", 
              RowBox[{"First", "[", "readyStations", "]"}]}], ";", "\n", 
             RowBox[{"packet", "=", 
              RowBox[{"First", "[", 
               RowBox[{
                RowBox[{"stationStates", "[", "i", "]"}], "[", 
                "\"\<queue\>\"", "]"}], "]"}]}], ";", "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"stationStates", "[", "i", "]"}], "[", "\"\<queue\>\"",
                "]"}], "=", 
              RowBox[{"Rest", "[", 
               RowBox[{
                RowBox[{"stationStates", "[", "i", "]"}], "[", 
                "\"\<queue\>\"", "]"}], "]"}]}], ";", "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"stationStates", "[", "i", "]"}], "[", 
               "\"\<currentPacket\>\"", "]"}], "=", "packet"}], ";", "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"stationStates", "[", "i", "]"}], "[", 
               "\"\<transmitRemaining\>\"", "]"}], "=", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"packet", "[", "\"\<type\>\"", "]"}], "==", 
                 "\"\<DATA\>\""}], ",", "dataPacketSlots", ",", 
                "ackPacketSlots"}], "]"}]}], ";", "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"stationStates", "[", "i", "]"}], "[", "\"\<state\>\"",
                "]"}], "=", "\"\<TRANSMITTING\>\""}], ";", "\n", 
             RowBox[{
              RowBox[{"channelState", "[", "\"\<state\>\"", "]"}], "=", 
              "\"\<BUSY\>\""}], ";", "\n", 
             RowBox[{
              RowBox[{
              "channelState", "[", "\"\<currentTransmitter\>\"", "]"}], "=", 
              "i"}], ";", "\n", 
             RowBox[{
              RowBox[{"channelState", "[", "\"\<remainingSlots\>\"", "]"}], 
              "=", 
              RowBox[{
               RowBox[{
                RowBox[{"stationStates", "[", "i", "]"}], "[", 
                "\"\<transmitRemaining\>\"", "]"}], "-", "1"}]}], ";", "\n", 
             RowBox[{
              RowBox[{"simulationStats", "[", "\"\<busySlots\>\"", "]"}], 
              "++"}], ";"}]}], "]"}], ";"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Process", " ", "ongoing", " ", "transmissions"}], "*)"}], 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"stationStates", "[", "i", "]"}], "[", "\"\<state\>\"", 
             "]"}], "==", "\"\<TRANSMITTING\>\""}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"stationStates", "[", "i", "]"}], "[", 
              "\"\<transmitRemaining\>\"", "]"}], "--"}], ";", "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"stationStates", "[", "i", "]"}], "[", 
                "\"\<transmitRemaining\>\"", "]"}], "==", "0"}], ",", 
              RowBox[{
               RowBox[{"packet", "=", 
                RowBox[{
                 RowBox[{"stationStates", "[", "i", "]"}], "[", 
                 "\"\<currentPacket\>\"", "]"}]}], ";", "\n", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"packet", "[", "\"\<type\>\"", "]"}], "==", 
                  "\"\<DATA\>\""}], ",", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Schedule", " ", "ACK", " ", "at", " ", "destination"}], 
                  "*)"}], 
                 RowBox[{
                  RowBox[{"ackPacket", "=", 
                   RowBox[{"<|", 
                    RowBox[{
                    RowBox[{"\"\<id\>\"", "->", 
                    RowBox[{"packet", "[", "\"\<id\>\"", "]"}]}], ",", 
                    RowBox[{"\"\<source\>\"", "->", 
                    RowBox[{"packet", "[", "\"\<destination\>\"", "]"}]}], 
                    ",", 
                    RowBox[{"\"\<destination\>\"", "->", 
                    RowBox[{"packet", "[", "\"\<source\>\"", "]"}]}], ",", 
                    RowBox[{"\"\<generationTime\>\"", "->", "t"}], ",", 
                    RowBox[{"\"\<type\>\"", "->", "\"\<ACK\>\""}], ",", 
                    RowBox[{"\"\<originalPacket\>\"", "->", "packet"}]}], 
                    "|>"}]}], ";", "\n", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"stationStates", "[", 
                    RowBox[{"packet", "[", "\"\<destination\>\"", "]"}], 
                    "]"}], "[", "\"\<queue\>\"", "]"}], "=", 
                   RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"stationStates", "[", 
                    RowBox[{"packet", "[", "\"\<destination\>\"", "]"}], 
                    "]"}], "[", "\"\<queue\>\"", "]"}], ",", "ackPacket"}], 
                    "]"}]}], ";", "\n", 
                  RowBox[{"(*", 
                   RowBox[{
                   "Switch", " ", "to", " ", "waiting", " ", "state"}], 
                   "*)"}], 
                  RowBox[{
                   RowBox[{
                    RowBox[{"stationStates", "[", "i", "]"}], "[", 
                    "\"\<state\>\"", "]"}], "=", "\"\<WAITING_ACK\>\""}], ";",
                   "\n", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"stationStates", "[", "i", "]"}], "[", 
                    "\"\<timeoutCounter\>\"", "]"}], "=", 
                   RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{"dataPacketSlots", "+", "ackPacketSlots"}], 
                    ")"}]}]}], ";"}], ",", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"ACK", " ", "received"}], "-", 
                   RowBox[{"successful", " ", "transmission"}]}], "*)"}], 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"stationStates", "[", "i", "]"}], "[", 
                    "\"\<successCount\>\"", "]"}], "++"}], ";", "\n", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"stationStates", "[", "i", "]"}], "[", 
                    "\"\<totalDelay\>\"", "]"}], "+=", 
                   RowBox[{"(", 
                    RowBox[{"t", "-", 
                    RowBox[{
                    RowBox[{"packet", "[", "\"\<originalPacket\>\"", "]"}], 
                    "[", "\"\<generationTime\>\"", "]"}]}], ")"}]}], ";", 
                  "\n", 
                  RowBox[{
                   RowBox[{
                   "simulationStats", "[", "\"\<successfulTransmissions\>\"", 
                    "]"}], "++"}], ";", "\n", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"stationStates", "[", "i", "]"}], "[", 
                    "\"\<currentPacket\>\"", "]"}], "=", "None"}], ";", "\n", 
                  
                  RowBox[{
                   RowBox[{
                    RowBox[{"stationStates", "[", "i", "]"}], "[", 
                    "\"\<state\>\"", "]"}], "=", "\"\<IDLE\>\""}], ";", "\n", 
                  
                  RowBox[{
                   RowBox[{
                    RowBox[{"stationStates", "[", "i", "]"}], "[", 
                    "\"\<collisionCount\>\"", "]"}], "=", "0"}], ";"}]}], 
                "]"}], ";"}]}], "]"}], ";"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Process", " ", "backoff", " ", "counters"}], "*)"}], 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"stationStates", "[", "i", "]"}], "[", "\"\<state\>\"", 
              "]"}], "==", "\"\<BACKOFF\>\""}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{"stationStates", "[", "i", "]"}], "[", 
              "\"\<backoffCounter\>\"", "]"}], ">", "0"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"stationStates", "[", "i", "]"}], "[", 
              "\"\<backoffCounter\>\"", "]"}], "--"}], ";", "\n", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"stationStates", "[", "i", "]"}], "[", 
                "\"\<backoffCounter\>\"", "]"}], "==", "0"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"stationStates", "[", "i", "]"}], "[", 
                 "\"\<state\>\"", "]"}], "=", "\"\<IDLE\>\""}], ";"}]}], 
             "]"}], ";"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "simulationSlots"}], "}"}]}], "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Calculate", " ", "statistics"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"utilization", "=", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"simulationStats", "[", "\"\<busySlots\>\"", "]"}], "/", 
       RowBox[{"simulationStats", "[", "\"\<totalSlots\>\"", "]"}]}], "]"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{"throughput", "=", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{
       "simulationStats", "[", "\"\<successfulTransmissions\>\"", "]"}], "/", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{"simulationStats", "[", "\"\<totalSlots\>\"", "]"}], "*", 
         "slotDuration"}], ")"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"avgDelay", "=", 
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"stationStates", "[", "i", "]"}], "[", 
             "\"\<successCount\>\"", "]"}], ">", "0"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"stationStates", "[", "i", "]"}], "[", 
             "\"\<totalDelay\>\"", "]"}], "/", 
            RowBox[{
             RowBox[{"stationStates", "[", "i", "]"}], "[", 
             "\"\<successCount\>\"", "]"}]}], ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}], "]"}], "*", 
      "slotDuration"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Visualization", " ", "functions"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CreateTimelinePlot", "[", 
      RowBox[{"stationID_", ",", "maxSlots_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"events", ",", "data"}], "}"}], ",", 
       RowBox[{
        RowBox[{"events", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Scan", " ", "through", " ", "simulation", " ", "history"}], 
         "*)"}], 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"state", "=", 
            RowBox[{
             RowBox[{"stationStates", "[", "stationID", "]"}], "[", 
             "\"\<state\>\"", "]"}]}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"state", "==", "\"\<TRANSMITTING\>\""}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"events", ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "3"}], "}"}]}], "]"}]}], "]"}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"state", "==", "\"\<BACKOFF\>\""}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"events", ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"state", "==", "\"\<WAITING_ACK\>\""}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"events", ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], "]"}], ";", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"state", "==", "\"\<IDLE\>\""}], "&&", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{
                 RowBox[{"stationStates", "[", "stationID", "]"}], "[", 
                 "\"\<queue\>\"", "]"}], "]"}], ">", "0"}]}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"events", ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0.5"}], "}"}]}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "maxSlots"}], "}"}]}], "]"}], ";", "\n", 
        RowBox[{"ListPlot", "[", 
         RowBox[{"events", ",", 
          RowBox[{"PlotStyle", "->", 
           RowBox[{"PointSize", "[", "Large", "]"}]}], ",", 
          RowBox[{"Filling", "->", "Axis"}], ",", 
          RowBox[{"PlotRange", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "maxSlots"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "3.5"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Time Slot\>\"", ",", "\"\<Activity State\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{"\"\<Station \>\"", "<>", 
            RowBox[{"ToString", "[", "stationID", "]"}], "<>", 
            "\"\< Activity Timeline\>\""}]}], ",", 
          RowBox[{"FrameTicks", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"None", ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CreateNetworkActivityPlot", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"busySlots", ",", "collisionSlots"}], "}"}], ",", 
       RowBox[{
        RowBox[{"busySlots", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"channelState", "[", "\"\<state\>\"", "]"}], "==", 
               "\"\<BUSY\>\""}], "||", 
              RowBox[{
               RowBox[{"channelState", "[", "\"\<state\>\"", "]"}], "==", 
               "\"\<COLLISION\>\""}]}], ",", "1", ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "simulationSlots"}], "}"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"ListLinePlot", "[", 
         RowBox[{"busySlots", ",", 
          RowBox[{"PlotRange", "->", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1.2"}], "}"}]}], ",", 
          RowBox[{"Filling", "->", "Axis"}], ",", 
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Time Slot\>\"", ",", "\"\<Channel State\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLabel", "->", "\"\<Channel Utilization\>\""}], ",", 
          RowBox[{"Epilog", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Text", "[", 
              RowBox[{"\"\<BUSY/COLLISION\>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"simulationSlots", "/", "2"}], ",", "1.1"}], "}"}]}],
               "]"}], ",", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<IDLE\>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"simulationSlots", "/", "2"}], ",", "0.1"}], "}"}]}],
               "]"}]}], "}"}]}]}], "]"}]}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Display", " ", "results"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<=== Simulation Results ===\>\"", "]"}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Total Slots: \>\"", ",", 
      RowBox[{"simulationStats", "[", "\"\<totalSlots\>\"", "]"}]}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Channel Utilization: \>\"", ",", 
      RowBox[{"NumberForm", "[", 
       RowBox[{
        RowBox[{"utilization", "*", "100"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", "\"\<%\>\""}], "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Throughput: \>\"", ",", 
      RowBox[{"NumberForm", "[", 
       RowBox[{
        RowBox[{"throughput", "/", "1000"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", "\"\< kbps\>\""}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Successful Transmissions: \>\"", ",", 
      RowBox[{
      "simulationStats", "[", "\"\<successfulTransmissions\>\"", "]"}]}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Collision Events: \>\"", ",", 
      RowBox[{"simulationStats", "[", "\"\<collisionEvents\>\"", "]"}]}], 
     "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Average Round-Trip Delay: \>\"", ",", 
      RowBox[{"NumberForm", "[", 
       RowBox[{
        RowBox[{"avgDelay", "*", "1000"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", "\"\< ms\>\""}], "]"}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Timed Out Packets: \>\"", ",", 
      RowBox[{"simulationStats", "[", "\"\<timedOutPackets\>\"", "]"}]}], 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Generate", " ", "visualizations"}], "*)"}], "\n", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"CreateTimelinePlot", "[", 
      RowBox[{"station", ",", "500"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"station", ",", "1", ",", "numStations", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlPlacement", "->", "Top"}]}], "]"}], "\n", "\n", 
   RowBox[{"CreateNetworkActivityPlot", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.959217185525488*^9, 3.959217185526703*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"3c3e7d55-5b26-448a-94d0-283f4ba2e5dd"],

Cell[CellGroupData[{

Cell[BoxData["\<\"=== Simulation Results ===\"\>"], "Print",
 CellChangeTimes->{{3.959217185839143*^9, 3.959217200854155*^9}},
 CellLabel->
  "During evaluation of \
In[128]:=",ExpressionUUID->"ff8d381c-d818-45d7-abd7-19c258b65dc5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Slots: \"\>", "\[InvisibleSpace]", "5000"}],
  SequenceForm["Total Slots: ", 5000],
  Editable->False]], "Print",
 CellChangeTimes->{{3.959217185839143*^9, 3.959217200854673*^9}},
 CellLabel->
  "During evaluation of \
In[128]:=",ExpressionUUID->"25ecd12e-e0e9-4cdc-9c38-02bc927b0443"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Channel Utilization: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"0.20\"\>",
      ShowStringCharacters->False],
     0.2,
     AutoDelete->True],
    NumberForm[#, {4, 2}]& ], "\[InvisibleSpace]", "\<\"%\"\>"}],
  SequenceForm["Channel Utilization: ", 
   NumberForm[0.2, {4, 2}], "%"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.959217185839143*^9, 3.959217200855259*^9}},
 CellLabel->
  "During evaluation of \
In[128]:=",ExpressionUUID->"a616a5dd-cab8-487c-9db3-675e17b6ee51"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Throughput: \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox["\<\"0.01\"\>",
      ShowStringCharacters->False],
     0.0125,
     AutoDelete->True],
    NumberForm[#, {4, 2}]& ], "\[InvisibleSpace]", "\<\" kbps\"\>"}],
  SequenceForm["Throughput: ", 
   NumberForm[0.0125, {4, 2}], " kbps"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.959217185839143*^9, 3.95921720085563*^9}},
 CellLabel->
  "During evaluation of \
In[128]:=",ExpressionUUID->"94dc06d9-0560-468d-a526-1a322bb9e45f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Successful Transmissions: \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Successful Transmissions: ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.959217185839143*^9, 3.959217200855969*^9}},
 CellLabel->
  "During evaluation of \
In[128]:=",ExpressionUUID->"0be893f0-f945-4860-b753-3096da903dce"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collision Events: \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Collision Events: ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.959217185839143*^9, 3.959217200856282*^9}},
 CellLabel->
  "During evaluation of \
In[128]:=",ExpressionUUID->"1f58e9d9-2739-4043-86e5-559c80818f37"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Average Round-Trip Delay: \"\>", "\[InvisibleSpace]", 
   TagBox[
    FractionBox[
     InterpretationBox[
      StyleBox["\<\"16\"\>",
       ShowStringCharacters->False],
      16,
      Editable->False], 
     InterpretationBox[
      StyleBox["\<\"625\"\>",
       ShowStringCharacters->False],
      625,
      Editable->False]],
    NumberForm[#, {4, 2}]& ], "\[InvisibleSpace]", "\<\" ms\"\>"}],
  SequenceForm["Average Round-Trip Delay: ", 
   NumberForm[
    Rational[16, 625], {4, 2}], " ms"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.959217185839143*^9, 3.9592172008566227`*^9}},
 CellLabel->
  "During evaluation of \
In[128]:=",ExpressionUUID->"01119744-9e0a-46a8-9e77-ed86613c2930"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Timed Out Packets: \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["Timed Out Packets: ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{{3.959217185839143*^9, 3.959217200856989*^9}},
 CellLabel->
  "During evaluation of \
In[128]:=",ExpressionUUID->"e72d056a-524b-448d-93c6-acc0225cbcc5"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`station$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`station$$], 1, 10, 1, ControlType -> Manipulator}}, 
    Typeset`size$$ = {251., {3.03955078125, 12.7349853515625}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`station$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`CreateTimelinePlot[$CellContext`station$$, 500], 
      "Specifications" :> {{$CellContext`station$$, 1, 10, 1}}, 
      "Options" :> {ControlPlacement -> Top}, "DefaultOptions" :> {}],
     ImageSizeCache->{337., {61., 70.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.959217185853609*^9, 3.959217200861025*^9}},
 CellLabel->
  "Out[152]=",ExpressionUUID->"794e4811-db3b-4021-945d-becf344d85a8"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[GraphicsComplexBox[CompressedData["
1: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
PoZH8ig+lkfzcXw8n8An8hgeyyfxyXwKn8rj+DQ+nc/gM3k8n8Vn8zk8gSfy
JJ7MU3gqT+PpPINn8iyezXN4Ls/j+byAF/IiXsxLeCmfy+fx+XwBX8jL+CK+
mC/hS/kyXs6X8wpeyVfwKl7Na3gtr+Mr+Sq+mq/ha/k6vp7X8wbeyDfwjXwT
38y38Ca+lW/jzbyFb+c7eCvfydv4Lt7Od/MOvod38r28i3fzfbyH7+e9vF9t
3x/A+/MDeQA/iAfyg/kAfggfyA/lg/hhfDA/nAfxI3gwP5IP4UfxEH40H8qP
4aH8WD6MH8eH8+N5GD+Bj+An8pH8JD6Kn8zD+Sl8ND+VR/DT+Bh+Oo/kZ/Ao
fiYfy8/i0fxsPo6fw8fzc/kEfh6fyM/nMfwCHssv5JP4RXwyv5hP4ZfwqfxS
Hscv49P45Xw6v4LP4FfymfwqHs+v5rP4NXw2v5bP4dfxBH49T+Q38CR+I0/m
N/EUfjNP5bfwNH4rT+e38Qx+O8/kd/AsfifP5nfxHH43z+X38Dx+L8/n9/EC
fj8v5A/wIv4gL+YP8RL+MC/lj/C5/FE+jz/G5/PH+QL+BF/In+Rl/Cm+iD/N
F/Nn+BL+LF/Kn+PL+PO8nL/Al/MXeQV/iVfyl/kK/gqv4q/yav4ar+Gv81r+
Bq/jb/KV/C2+ir/NV/N3+Br+Ll/L3+Pr+Pt8Pf+A1/MPeQP/iDfyj/kG/gnf
yD/lm/hnfDP/nG/hX/Am/iXfyr/i2/jXvJl/w1v4t3w7/47v4N/zVv4D38l/
5G38J76L/8zb+S98N/+Vd/Df+B7+O+/kf/C9/E/exf/i3fxvvo//w3v4v3w/
/x/v5f/xfm/0/QG8Pz+QB/CDeCA/mA/gh/CB/FA+iB/GB/PDeRA/ggfzI/kQ
fhQP4UfzofwYHsqP5cP4cXw4P56H8RP4CH4iH8lP4qP4yTycn8JH81N5BD+N
j+Gn80h+Bo/iZ/Kx/Cwezc/m4/g5fDw/l0/g5/GJ/Hwewy/gsfxCPolfxCfz
i/kUfgmfyi/lcfwyPo1fzqfzK/gMfiWfya/i8fxqPotfw2fza/kcfh1P4Nfz
RH4DT+I38mR+E0/hN/NUfgtP47fydH4bz+C380x+B8/id/JsfhfP4XfzXH4P
z+P38nx+Hy/g9/NC/gAv4g/yYv4QL+EP81L+CJ/LH+Xz+GN8Pn+cL+BP8IX8
SV7Gn+KL+NN8MX+GL+HP8qX8Ob6MP8/L+Qt8OX+RV/CXeCV/ma/gr/Aq/iqv
5q/xGv46r+Vv8Dr+Jl/J3+Kr+Nt8NX+Hr+Hv8rX8Pb6Ov8/X8w94Pf+QN/CP
eCP/mG/gn/CN/FO+iX/GN/PP+Rb+BW/iX/Kt/Cu+jX/Nm/k3vIV/y7fz7/gO
/j1v5T/wnfxH3sZ/4rv4z7yd/8J38195B/+N7+G/807+B9/L/+Rd/C/ezf/m
+/g/vIf/y/fz//Fe/h/vV9f3B/D+/EAewA/igfxgPoAfwgfyQ/kgfhgfzA/n
QfwIHsyP5EP4UTyEH82H8mN4KD+WD+PH8eH8eB7GT+Aj+Il8JD+Jj+In83B+
Ch/NT+UR/DQ+hp/OI/kZPIqfycfys3g0P5uP4+fw8fxcPoGfxyfy83kMv4DH
8gv5JH4Rn8wv5lP4JXwqv5TH8cv4NH45n86v4DP4lXwmv4rH86v5LH4Nn82v
5XP4dTyBX88T+Q08id/Ik/lNPIXfzFP5LTyN38rT+W08g9/OM/kdPIvfybP5
XTyH381z+T08j9/L8/l9vIDfzwv5A7yIP8iL+UO8hD/MS/kjfC5/lM/jj/H5
/HG+gD/BF/IneRl/ii/iT/PF/Bm+hD/Ll/Ln+DL+PC/nL/Dl/EVewV/ilfxl
voK/wqv4q7yav8Zr+Ou8lr/B6/ibfCV/i6/ib/PV/B2+hr/L1/L3+Dr+Pl/P
P+D1/EPewD/ijfxjvoF/wjfyT/km/hnfzD/nW/gXvIl/ybfyr/g2/jVv5t/w
Fv4t386/4zv497yV/8B38h95G/+J7+I/83b+C9/Nf+Ud/De+h//OO/kffC//
k3fxv3g3/5vv4//wHv4v38//x3v5f7zfm31/AO/PD+QB/CAeyA/mA/ghfCA/
lA/ih/HB/HAexI/gwfxIPoQfxUP40XwoP4aH8mP5MH4cH86P52H8BD6Cn8hH
8pP4KH4yD+en8NH8VB7BT+Nj+Ok8kp/Bo/iZfCw/i0fzs/k4fg4fz8/lE/h5
fCI/n8fwC3gsv5BP4hfxyfxiPoVfwqfyS3kcv4xP45fz6fwKPoNfyWfyq3g8
v5rP4tfw2fxaPodfxxP49TyR38CT+I08md/EU/jNPJXfwtP4rTyd38Yz+O08
k9/Bs/idPJvfxXP43TyX38Pz+L08n9/HC/j9vJA/wIv4g7yYP8RL+MO89P//
fxajVm0=
       "], {{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[2], 
          LineBox[CompressedData["
1:eJwl3EMQIMqSAMA/tm3btm3btm3btm3btm3b9pvNiT1k9K1vreqqStCwXcW2
Af73v/8Nj/S///0bAxKIwAQhKMEITghCEorQhCEs4QhPBCJiqv9FJgpRiUZ0
YhCTWMQmDnGJR3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZy
kJNc5CYPeclHfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQ
k1rUpg51qUd9GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc5nHfBawkEUsZglLWcZyVrCSVaxmDWtZx3o2sJFNbGYLW9nGdnawk13s
Zg972cd+DnCQQxzmCEc5xnFOcJJTnOYMZznHeS5wkUtc5gpXucZ1bnCTW9zm
Dne5x30e8JBHPOYJT3nGc17wkle85g1vecd7PvCRT3zmC1/5xnd+8JNf/OYP
//GXf4s/AAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCVaEQnBjGJRWzi
EJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVsZCcHOclFbvKQ
l3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpUpwY1qUVt6lCX
etSnAQ1pRGOa0JRmNKcFLWlFa9rwb/NuR3s60JFOdKYLXelGd3rQk170pg99
6Ud/BjCQQQxmCEMZxnBGMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZ
x3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nH
fg5wkEMc5ghHOcZxTnCSU5zmDGc5x3kucJFLXOYKV7nGdW5wk1vc5g53ucd9
HvCQRzzmCU95xnNe8JJXvOYNb3nHez7wkU985gtf+cZ3fvCTX/zmD//xl38H
fwACEojABCEowQhOCEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu8YhP
AhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5yE8B
ClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWoTwMa
0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93oTg960ove9KEv/ejPAAYy
iMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKI
xSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vYzwEOcojD
HOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jPAx7yiMc8
4SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84T/+8u/SH4CABCIw
QQhKMIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJ
SEoykpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUo
SjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhK
M5rTgpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3fehLP/ozgIEMYjBDGMow
hjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKW
s4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjKMY5z
gpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvOC
l7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+I+//HvwByAggQhMEIISjOCE
ICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM5KQg
JalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozilKAk
pShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWt
aE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM4YxgJKMY
zRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jN
GtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSnOM0Z
znKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94zRve
8o73fOAjn/jMF77yje/84Ce/+M0f/uMv/4J9AQhIIAIThKAEIzghCEkoQhOG
sIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0
pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKU
ozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGtrSj
PR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8
E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b
2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4
yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jI
Jz7zha984zs/+MkvfvOH//jLv0B/AAISiMAEISjBCE4IQhKK0IQhLOEITwQi
EonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKS
icxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJ
ylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onO
dKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclM
YSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxh
K9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq
17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic984Svf
+M4PfvKL3/zhP/7y75MvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCVbnSn
Bz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcG
M5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc7
2cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5
xW3ucJd73OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nF
b/7wH3/598EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKITg5jE
IjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spODnOQi
N3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2
dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570ojd9
6Es/+jOAgQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxiNnOY
yzzms4CFLGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3e9jL
PvZzgIMc4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3uMs9
7vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4j7/8
S+4JQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe
8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5
KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVp
QEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/RnA
QAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBC
FrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEO
cZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7x
mCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/8x1/+JfYFICCB
CEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQgIYlI
TBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAghShM
EYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGNaEwT
mtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCG
MozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpay
jOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM
45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8ozn
vOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zR/+4y//knoDEJBABCYIQQlG
cEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQkEQkJglJSUZy
UpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQQhSmCEUpRnFK
UJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBGNKYJTWlGc1rQ
kla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYPfelHfwYwkEEMZghDGcZwRjCS
UYxmDGMZx3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJWsJJV
rGYNa1nHejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5wklOc
5gxnOcd5LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zm
DW95x3s+8JFPfOYLX/nGd37wk1/85g//8Zd/Cf0BCEggAhOEoAQjOCEISShC
E4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJKlKT
hrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkpSlOG
spSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSjOS1oSSta04a2
tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGM
YzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxj
PRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8
F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f
+MgnPvOFr3zjOz/4yS9+84f/+Mu/Yp4ABCQQgQlCUIIRnBCEJBShCUNYwhGe
CEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rSkZ4M
ZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWcpRngpU
pBKVqUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0pBWtaUNb2tGeDnSk
E53pQle60Z0e9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQS
k5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb
2cJWtrGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5
wlWucZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nC
V77xnR/85Be/+cN//OVfIV8AAhKIwAQhKMEITghCEorQhCEs4QhPBCISichE
ISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3pSE8GMpKJzGQh
K9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUoTwUqUonKVKEq
1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orWtKEt7WhPBzrSic50oSvd
6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxhKtOY
zgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jO
Dnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4N
bnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+
8ovf/OE//vKviDcAAQlEYIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcG
MYlFbOIQl3jEJwEJSURikpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5
yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSnBjWp
RW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelF
b/rQl370ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs
5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72
sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5w
l3vc5wEPecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vAf
f/lXwB+AgAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGI
Szzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echL
PvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs9
6tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6
M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOaz
gIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOA
gxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CH
POIxT3jKM57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/iPv/xr3hGA
gAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CE
JCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIU
ojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSi
MU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6M4CBDGIw
QxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFL
WMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4
yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jK
M57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/iPv/xr3BOAgAQiMEEI
SjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIxSUhK
MpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBFKEox
ilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1oSjOa
04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYz
gpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOC
laxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjGOc4KT
nOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jKM57zgpe8
4jVveMs73vOBj3ziM1/4yje+84Of/OI3f/iPv/xr2hWAgAQiMEEISjCCE4KQ
hCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSk
IjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBFKEoxilOCkpSi
NGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1
bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKsEj/3x/u/wCB
/FL0
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", 
         GraphicsComplex[CompressedData["
1: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
PoZH8ig+lkfzcXw8n8An8hgeyyfxyXwKn8rj+DQ+nc/gM3k8n8Vn8zk8gSfy
JJ7MU3gqT+PpPINn8iyezXN4Ls/j+byAF/IiXsxLeCmfy+fx+XwBX8jL+CK+
mC/hS/kyXs6X8wpeyVfwKl7Na3gtr+Mr+Sq+mq/ha/k6vp7X8wbeyDfwjXwT
38y38Ca+lW/jzbyFb+c7eCvfydv4Lt7Od/MOvod38r28i3fzfbyH7+e9vF9t
3x/A+/MDeQA/iAfyg/kAfggfyA/lg/hhfDA/nAfxI3gwP5IP4UfxEH40H8qP
4aH8WD6MH8eH8+N5GD+Bj+An8pH8JD6Kn8zD+Sl8ND+VR/DT+Bh+Oo/kZ/Ao
fiYfy8/i0fxsPo6fw8fzc/kEfh6fyM/nMfwCHssv5JP4RXwyv5hP4ZfwqfxS
Hscv49P45Xw6v4LP4FfymfwqHs+v5rP4NXw2v5bP4dfxBH49T+Q38CR+I0/m
N/EUfjNP5bfwNH4rT+e38Qx+O8/kd/AsfifP5nfxHH43z+X38Dx+L8/n9/EC
fj8v5A/wIv4gL+YP8RL+MC/lj/C5/FE+jz/G5/PH+QL+BF/In+Rl/Cm+iD/N
F/Nn+BL+LF/Kn+PL+PO8nL/Al/MXeQV/iVfyl/kK/gqv4q/yav4ar+Gv81r+
Bq/jb/KV/C2+ir/NV/N3+Br+Ll/L3+Pr+Pt8Pf+A1/MPeQP/iDfyj/kG/gnf
yD/lm/hnfDP/nG/hX/Am/iXfyr/i2/jXvJl/w1v4t3w7/47v4N/zVv4D38l/
5G38J76L/8zb+S98N/+Vd/Df+B7+O+/kf/C9/E/exf/i3fxvvo//w3v4v3w/
/x/v5f/xfm/0/QG8Pz+QB/CDeCA/mA/gh/CB/FA+iB/GB/PDeRA/ggfzI/kQ
fhQP4UfzofwYHsqP5cP4cXw4P56H8RP4CH4iH8lP4qP4yTycn8JH81N5BD+N
j+Gn80h+Bo/iZ/Kx/Cwezc/m4/g5fDw/l0/g5/GJ/Hwewy/gsfxCPolfxCfz
i/kUfgmfyi/lcfwyPo1fzqfzK/gMfiWfya/i8fxqPotfw2fza/kcfh1P4Nfz
RH4DT+I38mR+E0/hN/NUfgtP47fydH4bz+C380x+B8/id/JsfhfP4XfzXH4P
z+P38nx+Hy/g9/NC/gAv4g/yYv4QL+EP81L+CJ/LH+Xz+GN8Pn+cL+BP8IX8
SV7Gn+KL+NN8MX+GL+HP8qX8Ob6MP8/L+Qt8OX+RV/CXeCV/ma/gr/Aq/iqv
5q/xGv46r+Vv8Dr+Jl/J3+Kr+Nt8NX+Hr+Hv8rX8Pb6Ov8/X8w94Pf+QN/CP
eCP/mG/gn/CN/FO+iX/GN/PP+Rb+BW/iX/Kt/Cu+jX/Nm/k3vIV/y7fz7/gO
/j1v5T/wnfxH3sZ/4rv4z7yd/8J38195B/+N7+G/807+B9/L/+Rd/C/ezf/m
+/g/vIf/y/fz//Fe/h/vV9f3B/D+/EAewA/igfxgPoAfwgfyQ/kgfhgfzA/n
QfwIHsyP5EP4UTyEH82H8mN4KD+WD+PH8eH8eB7GT+Aj+Il8JD+Jj+In83B+
Ch/NT+UR/DQ+hp/OI/kZPIqfycfys3g0P5uP4+fw8fxcPoGfxyfy83kMv4DH
8gv5JH4Rn8wv5lP4JXwqv5TH8cv4NH45n86v4DP4lXwmv4rH86v5LH4Nn82v
5XP4dTyBX88T+Q08id/Ik/lNPIXfzFP5LTyN38rT+W08g9/OM/kdPIvfybP5
XTyH381z+T08j9/L8/l9vIDfzwv5A7yIP8iL+UO8hD/MS/kjfC5/lM/jj/H5
/HG+gD/BF/IneRl/ii/iT/PF/Bm+hD/Ll/Ln+DL+PC/nL/Dl/EVewV/ilfxl
voK/wqv4q7yav8Zr+Ou8lr/B6/ibfCV/i6/ib/PV/B2+hr/L1/L3+Dr+Pl/P
P+D1/EPewD/ijfxjvoF/wjfyT/km/hnfzD/nW/gXvIl/ybfyr/g2/jVv5t/w
Fv4t386/4zv497yV/8B38h95G/+J7+I/83b+C9/Nf+Ud/De+h//OO/kffC//
k3fxv3g3/5vv4//wHv4v38//x3v5f7zfm31/AO/PD+QB/CAeyA/mA/ghfCA/
lA/ih/HB/HAexI/gwfxIPoQfxUP40XwoP4aH8mP5MH4cH86P52H8BD6Cn8hH
8pP4KH4yD+en8NH8VB7BT+Nj+Ok8kp/Bo/iZfCw/i0fzs/k4fg4fz8/lE/h5
fCI/n8fwC3gsv5BP4hfxyfxiPoVfwqfyS3kcv4xP45fz6fwKPoNfyWfyq3g8
v5rP4tfw2fxaPodfxxP49TyR38CT+I08md/EU/jNPJXfwtP4rTyd38Yz+O08
k9/Bs/idPJvfxXP43TyX38Pz+L08n9/HC/j9vJA/wIv4g7yYP8RL+MO89P//
fxajVm0=
          "], {{{}, {}, 
            Annotation[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 180]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]], 
              Line[CompressedData["
1:eJwl3EMQIMqSAMA/tm3btm3btm3btm3btm3b9pvNiT1k9K1vreqqStCwXcW2
Af73v/8Nj/S///0bAxKIwAQhKMEITghCEorQhCEs4QhPBCJiqv9FJgpRiUZ0
YhCTWMQmDnGJR3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZy
kJNc5CYPeclHfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQ
k1rUpg51qUd9GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc5nHfBawkEUsZglLWcZyVrCSVaxmDWtZx3o2sJFNbGYLW9nGdnawk13s
Zg972cd+DnCQQxzmCEc5xnFOcJJTnOYMZznHeS5wkUtc5gpXucZ1bnCTW9zm
Dne5x30e8JBHPOYJT3nGc17wkle85g1vecd7PvCRT3zmC1/5xnd+8JNf/OYP
//GXf4s/AAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCVaEQnBjGJRWzi
EJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVsZCcHOclFbvKQ
l3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpUpwY1qUVt6lCX
etSnAQ1pRGOa0JRmNKcFLWlFa9rwb/NuR3s60JFOdKYLXelGd3rQk170pg99
6Ud/BjCQQQxmCEMZxnBGMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZ
x3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nH
fg5wkEMc5ghHOcZxTnCSU5zmDGc5x3kucJFLXOYKV7nGdW5wk1vc5g53ucd9
HvCQRzzmCU95xnNe8JJXvOYNb3nHez7wkU985gtf+cZ3fvCTX/zmD//xl38H
fwACEojABCEowQhOCEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu8YhP
AhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5yE8B
ClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWoTwMa
0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93oTg960ove9KEv/ejPAAYy
iMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKI
xSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vYzwEOcojD
HOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jPAx7yiMc8
4SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84T/+8u/SH4CABCIw
QQhKMIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJ
SEoykpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUo
SjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhK
M5rTgpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3fehLP/ozgIEMYjBDGMow
hjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKW
s4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjKMY5z
gpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvOC
l7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+I+//HvwByAggQhMEIISjOCE
ICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM5KQg
JalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozilKAk
pShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWt
aE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM4YxgJKMY
zRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jN
GtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSnOM0Z
znKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94zRve
8o73fOAjn/jMF77yje/84Ce/+M0f/uMv/4J9AQhIIAIThKAEIzghCEkoQhOG
sIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0
pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKU
ozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGtrSj
PR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8
E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b
2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4
yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jI
Jz7zha984zs/+MkvfvOH//jLv0B/AAISiMAEISjBCE4IQhKK0IQhLOEITwQi
EonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKS
icxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJ
ylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onO
dKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclM
YSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxh
K9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq
17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic984Svf
+M4PfvKL3/zhP/7y75MvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCVbnSn
Bz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcG
M5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc7
2cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5
xW3ucJd73OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nF
b/7wH3/598EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKITg5jE
IjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spODnOQi
N3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2
dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570ojd9
6Es/+jOAgQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxiNnOY
yzzms4CFLGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3e9jL
PvZzgIMc4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3uMs9
7vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4j7/8
S+4JQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe
8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5
KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVp
QEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/RnA
QAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBC
FrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEO
cZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7x
mCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/8x1/+JfYFICCB
CEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQgIYlI
TBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAghShM
EYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGNaEwT
mtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCG
MozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpay
jOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM
45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8ozn
vOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zR/+4y//knoDEJBABCYIQQlG
cEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQkEQkJglJSUZy
UpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQQhSmCEUpRnFK
UJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBGNKYJTWlGc1rQ
kla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYPfelHfwYwkEEMZghDGcZwRjCS
UYxmDGMZx3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJWsJJV
rGYNa1nHejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5wklOc
5gxnOcd5LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zm
DW95x3s+8JFPfOYLX/nGd37wk1/85g//8Zd/Cf0BCEggAhOEoAQjOCEISShC
E4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJKlKT
hrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkpSlOG
spSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSjOS1oSSta04a2
tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGM
YzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxj
PRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8
F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f
+MgnPvOFr3zjOz/4yS9+84f/+Mu/Yp4ABCQQgQlCUIIRnBCEJBShCUNYwhGe
CEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rSkZ4M
ZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWcpRngpU
pBKVqUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0pBWtaUNb2tGeDnSk
E53pQle60Z0e9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQS
k5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb
2cJWtrGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5
wlWucZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nC
V77xnR/85Be/+cN//OVfIV8AAhKIwAQhKMEITghCEorQhCEs4QhPBCISichE
ISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3pSE8GMpKJzGQh
K9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUoTwUqUonKVKEq
1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orWtKEt7WhPBzrSic50oSvd
6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxhKtOY
zgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jO
Dnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4N
bnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+
8ovf/OE//vKviDcAAQlEYIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcG
MYlFbOIQl3jEJwEJSURikpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5
yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSnBjWp
RW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelF
b/rQl370ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs
5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72
sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5w
l3vc5wEPecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vAf
f/lXwB+AgAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGI
Szzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echL
PvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs9
6tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6
M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOaz
gIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOA
gxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CH
POIxT3jKM57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/iPv/xr3hGA
gAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CE
JCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIU
ojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSi
MU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6M4CBDGIw
QxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFL
WMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4
yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jK
M57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/iPv/xr3BOAgAQiMEEI
SjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIxSUhK
MpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBFKEox
ilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1oSjOa
04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYz
gpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOC
laxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjGOc4KT
nOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jKM57zgpe8
4jVveMs73vOBj3ziM1/4yje+84Of/OI3f/iPv/xr2hWAgAQiMEEISjCCE4KQ
hCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSk
IjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBFKEoxilOCkpSi
NGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1
bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKsEj/3x/u/wCB
/FL0
               "]]}, "Charting`Private`Tag#1"]}}], <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 5000.}, {0., 1.2}},
             "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0},
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 180]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {{{}, {}, 
               Annotation[{
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[
                   Rational[1, 180]], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[2]], 
                 Line[CompressedData["
1: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
fwkfxV/G3f/f/wewsiyN
                  "]]}, "Charting`Private`Tag#1"]}}, "GCFlag" -> True|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 5000.}, {0., 1.2}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 180]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {{{}, {}, 
              Annotation[{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[
                  Rational[1, 180]], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[2]], 
                Line[CompressedData["
1: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
fwkfxV/G3f/f/wewsiyN
                 "]]}, "Charting`Private`Tag#1"]}}, "GCFlag" -> True|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[
     GraphicsComplex[CompressedData["
1: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
PoZH8ig+lkfzcXw8n8An8hgeyyfxyXwKn8rj+DQ+nc/gM3k8n8Vn8zk8gSfy
JJ7MU3gqT+PpPINn8iyezXN4Ls/j+byAF/IiXsxLeCmfy+fx+XwBX8jL+CK+
mC/hS/kyXs6X8wpeyVfwKl7Na3gtr+Mr+Sq+mq/ha/k6vp7X8wbeyDfwjXwT
38y38Ca+lW/jzbyFb+c7eCvfydv4Lt7Od/MOvod38r28i3fzfbyH7+e9vF9t
3x/A+/MDeQA/iAfyg/kAfggfyA/lg/hhfDA/nAfxI3gwP5IP4UfxEH40H8qP
4aH8WD6MH8eH8+N5GD+Bj+An8pH8JD6Kn8zD+Sl8ND+VR/DT+Bh+Oo/kZ/Ao
fiYfy8/i0fxsPo6fw8fzc/kEfh6fyM/nMfwCHssv5JP4RXwyv5hP4ZfwqfxS
Hscv49P45Xw6v4LP4FfymfwqHs+v5rP4NXw2v5bP4dfxBH49T+Q38CR+I0/m
N/EUfjNP5bfwNH4rT+e38Qx+O8/kd/AsfifP5nfxHH43z+X38Dx+L8/n9/EC
fj8v5A/wIv4gL+YP8RL+MC/lj/C5/FE+jz/G5/PH+QL+BF/In+Rl/Cm+iD/N
F/Nn+BL+LF/Kn+PL+PO8nL/Al/MXeQV/iVfyl/kK/gqv4q/yav4ar+Gv81r+
Bq/jb/KV/C2+ir/NV/N3+Br+Ll/L3+Pr+Pt8Pf+A1/MPeQP/iDfyj/kG/gnf
yD/lm/hnfDP/nG/hX/Am/iXfyr/i2/jXvJl/w1v4t3w7/47v4N/zVv4D38l/
5G38J76L/8zb+S98N/+Vd/Df+B7+O+/kf/C9/E/exf/i3fxvvo//w3v4v3w/
/x/v5f/xfm/0/QG8Pz+QB/CDeCA/mA/gh/CB/FA+iB/GB/PDeRA/ggfzI/kQ
fhQP4UfzofwYHsqP5cP4cXw4P56H8RP4CH4iH8lP4qP4yTycn8JH81N5BD+N
j+Gn80h+Bo/iZ/Kx/Cwezc/m4/g5fDw/l0/g5/GJ/Hwewy/gsfxCPolfxCfz
i/kUfgmfyi/lcfwyPo1fzqfzK/gMfiWfya/i8fxqPotfw2fza/kcfh1P4Nfz
RH4DT+I38mR+E0/hN/NUfgtP47fydH4bz+C380x+B8/id/JsfhfP4XfzXH4P
z+P38nx+Hy/g9/NC/gAv4g/yYv4QL+EP81L+CJ/LH+Xz+GN8Pn+cL+BP8IX8
SV7Gn+KL+NN8MX+GL+HP8qX8Ob6MP8/L+Qt8OX+RV/CXeCV/ma/gr/Aq/iqv
5q/xGv46r+Vv8Dr+Jl/J3+Kr+Nt8NX+Hr+Hv8rX8Pb6Ov8/X8w94Pf+QN/CP
eCP/mG/gn/CN/FO+iX/GN/PP+Rb+BW/iX/Kt/Cu+jX/Nm/k3vIV/y7fz7/gO
/j1v5T/wnfxH3sZ/4rv4z7yd/8J38195B/+N7+G/807+B9/L/+Rd/C/ezf/m
+/g/vIf/y/fz//Fe/h/vV9f3B/D+/EAewA/igfxgPoAfwgfyQ/kgfhgfzA/n
QfwIHsyP5EP4UTyEH82H8mN4KD+WD+PH8eH8eB7GT+Aj+Il8JD+Jj+In83B+
Ch/NT+UR/DQ+hp/OI/kZPIqfycfys3g0P5uP4+fw8fxcPoGfxyfy83kMv4DH
8gv5JH4Rn8wv5lP4JXwqv5TH8cv4NH45n86v4DP4lXwmv4rH86v5LH4Nn82v
5XP4dTyBX88T+Q08id/Ik/lNPIXfzFP5LTyN38rT+W08g9/OM/kdPIvfybP5
XTyH381z+T08j9/L8/l9vIDfzwv5A7yIP8iL+UO8hD/MS/kjfC5/lM/jj/H5
/HG+gD/BF/IneRl/ii/iT/PF/Bm+hD/Ll/Ln+DL+PC/nL/Dl/EVewV/ilfxl
voK/wqv4q7yav8Zr+Ou8lr/B6/ibfCV/i6/ib/PV/B2+hr/L1/L3+Dr+Pl/P
P+D1/EPewD/ijfxjvoF/wjfyT/km/hnfzD/nW/gXvIl/ybfyr/g2/jVv5t/w
Fv4t386/4zv497yV/8B38h95G/+J7+I/83b+C9/Nf+Ud/De+h//OO/kffC//
k3fxv3g3/5vv4//wHv4v38//x3v5f7zfm31/AO/PD+QB/CAeyA/mA/ghfCA/
lA/ih/HB/HAexI/gwfxIPoQfxUP40XwoP4aH8mP5MH4cH86P52H8BD6Cn8hH
8pP4KH4yD+en8NH8VB7BT+Nj+Ok8kp/Bo/iZfCw/i0fzs/k4fg4fz8/lE/h5
fCI/n8fwC3gsv5BP4hfxyfxiPoVfwqfyS3kcv4xP45fz6fwKPoNfyWfyq3g8
v5rP4tfw2fxaPodfxxP49TyR38CT+I08md/EU/jNPJXfwtP4rTyd38Yz+O08
k9/Bs/idPJvfxXP43TyX38Pz+L08n9/HC/j9vJA/wIv4g7yYP8RL+MO89P//
fxajVm0=
      "], {{{}, {}, 
        Annotation[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[1, 180]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Line[CompressedData["
1:eJwl3EMQIMqSAMA/tm3btm3btm3btm3btm3b9pvNiT1k9K1vreqqStCwXcW2
Af73v/8Nj/S///0bAxKIwAQhKMEITghCEorQhCEs4QhPBCJiqv9FJgpRiUZ0
YhCTWMQmDnGJR3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZy
kJNc5CYPeclHfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQ
k1rUpg51qUd9GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc5nHfBawkEUsZglLWcZyVrCSVaxmDWtZx3o2sJFNbGYLW9nGdnawk13s
Zg972cd+DnCQQxzmCEc5xnFOcJJTnOYMZznHeS5wkUtc5gpXucZ1bnCTW9zm
Dne5x30e8JBHPOYJT3nGc17wkle85g1vecd7PvCRT3zmC1/5xnd+8JNf/OYP
//GXf4s/AAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCVaEQnBjGJRWzi
EJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVsZCcHOclFbvKQ
l3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpUpwY1qUVt6lCX
etSnAQ1pRGOa0JRmNKcFLWlFa9rwb/NuR3s60JFOdKYLXelGd3rQk170pg99
6Ud/BjCQQQxmCEMZxnBGMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZ
x3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nH
fg5wkEMc5ghHOcZxTnCSU5zmDGc5x3kucJFLXOYKV7nGdW5wk1vc5g53ucd9
HvCQRzzmCU95xnNe8JJXvOYNb3nHez7wkU985gtf+cZ3fvCTX/zmD//xl38H
fwACEojABCEowQhOCEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu8YhP
AhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5yE8B
ClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWoTwMa
0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93oTg960ove9KEv/ejPAAYy
iMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKI
xSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vYzwEOcojD
HOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jPAx7yiMc8
4SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84T/+8u/SH4CABCIw
QQhKMIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJ
SEoykpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUo
SjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhK
M5rTgpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3fehLP/ozgIEMYjBDGMow
hjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKW
s4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjKMY5z
gpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvOC
l7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+I+//HvwByAggQhMEIISjOCE
ICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM5KQg
JalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozilKAk
pShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWt
aE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM4YxgJKMY
zRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jN
GtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSnOM0Z
znKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94zRve
8o73fOAjn/jMF77yje/84Ce/+M0f/uMv/4J9AQhIIAIThKAEIzghCEkoQhOG
sIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0
pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKU
ozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGtrSj
PR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8
E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b
2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4
yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jI
Jz7zha984zs/+MkvfvOH//jLv0B/AAISiMAEISjBCE4IQhKK0IQhLOEITwQi
EonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKS
icxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJ
ylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onO
dKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclM
YSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxh
K9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq
17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic984Svf
+M4PfvKL3/zhP/7y75MvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCVbnSn
Bz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcG
M5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc7
2cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5
xW3ucJd73OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nF
b/7wH3/598EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKITg5jE
IjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spODnOQi
N3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2
dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570ojd9
6Es/+jOAgQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxiNnOY
yzzms4CFLGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3e9jL
PvZzgIMc4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3uMs9
7vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4j7/8
S+4JQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe
8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5
KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVp
QEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/RnA
QAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBC
FrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEO
cZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7x
mCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/8x1/+JfYFICCB
CEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQgIYlI
TBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAghShM
EYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGNaEwT
mtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCG
MozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpay
jOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM
45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8ozn
vOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zR/+4y//knoDEJBABCYIQQlG
cEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQkEQkJglJSUZy
UpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQQhSmCEUpRnFK
UJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBGNKYJTWlGc1rQ
kla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYPfelHfwYwkEEMZghDGcZwRjCS
UYxmDGMZx3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJWsJJV
rGYNa1nHejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5wklOc
5gxnOcd5LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zm
DW95x3s+8JFPfOYLX/nGd37wk1/85g//8Zd/Cf0BCEggAhOEoAQjOCEISShC
E4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJKlKT
hrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkpSlOG
spSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSjOS1oSSta04a2
tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGM
YzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxj
PRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8
F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f
+MgnPvOFr3zjOz/4yS9+84f/+Mu/Yp4ABCQQgQlCUIIRnBCEJBShCUNYwhGe
CEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rSkZ4M
ZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWcpRngpU
pBKVqUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0pBWtaUNb2tGeDnSk
E53pQle60Z0e9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQS
k5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb
2cJWtrGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5
wlWucZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nC
V77xnR/85Be/+cN//OVfIV8AAhKIwAQhKMEITghCEorQhCEs4QhPBCISichE
ISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3pSE8GMpKJzGQh
K9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUoTwUqUonKVKEq
1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orWtKEt7WhPBzrSic50oSvd
6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxhKtOY
zgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jO
Dnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4N
bnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+
8ovf/OE//vKviDcAAQlEYIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcG
MYlFbOIQl3jEJwEJSURikpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5
yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSnBjWp
RW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelF
b/rQl370ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs
5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72
sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5w
l3vc5wEPecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vAf
f/lXwB+AgAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGI
Szzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echL
PvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs9
6tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6
M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOaz
gIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOA
gxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CH
POIxT3jKM57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/iPv/xr3hGA
gAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CE
JCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIU
ojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSi
MU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6M4CBDGIw
QxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFL
WMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4
yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jK
M57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/iPv/xr3BOAgAQiMEEI
SjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIxSUhK
MpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBFKEox
ilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1oSjOa
04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYz
gpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOC
laxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjGOc4KT
nOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jKM57zgpe8
4jVveMs73vOBj3ziM1/4yje+84Of/OI3f/iPv/xr2hWAgAQiMEEISjCCE4KQ
hCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSk
IjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBFKEoxilOCkpSi
NGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1
bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKsEj/3x/u/wCB
/FL0
           "]]}, "Charting`Private`Tag#1"]}}], <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 5000.}, {0., 1.2}}, 
        "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 180]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 180]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
fwkfxV/G3f/f/wewsiyN
              "]]}, "Charting`Private`Tag#1"]}}, "GCFlag" -> True|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Epilog->{
    InsetBox[
     FormBox["\"BUSY/COLLISION\"", TraditionalForm], {2500, 1.1}], 
    InsetBox[
     FormBox["\"IDLE\"", TraditionalForm], {2500, 0.1}]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"Channel State\"", HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"Time Slot\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Channel Utilization\"", TraditionalForm],
  PlotRange->{{0., 5000.}, {0., 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.959217185853609*^9, 3.959217200917842*^9}},
 CellLabel->
  "Out[153]=",ExpressionUUID->"5be37f51-4f9d-451d-b0bc-8a0359d774ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Simulation", " ", "parameters", " ", "from", " ", "Metcalfe"}], 
    "-", 
    RowBox[{"Boggs", " ", "1976", " ", "paper"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"experimentalEthernet", "=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<channelRate\>\"", "->", 
       RowBox[{"3", "*", 
        RowBox[{"10", "^", "6"}]}]}], ",", 
      RowBox[{"(*", 
       RowBox[{"C", "=", 
        RowBox[{"3", " ", "Mbps"}]}], "*)"}], 
      RowBox[{"\"\<slotTime\>\"", "->", 
       RowBox[{"16", "*", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}]}], ",", 
      RowBox[{"(*", 
       RowBox[{"T", "=", 
        RowBox[{"16", " ", "\[Mu]s"}]}], "*)"}], 
      RowBox[{"\"\<packetSizes\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"4096", ",", "1024", ",", "512", ",", "48"}], "}"}]}], ",", 
      RowBox[{"(*", 
       RowBox[{"P", " ", "in", " ", "bits"}], "*)"}], 
      RowBox[{"\"\<stations\>\"", "->", "256"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Max", " ", "stations"}], "*)"}], 
      RowBox[{"\"\<cableLength\>\"", "->", "1000"}], ",", 
      RowBox[{"(*", 
       RowBox[{"1", " ", "km", " ", "cable"}], "*)"}], 
      RowBox[{"\"\<propSpeed\>\"", "->", 
       RowBox[{"2", "*", 
        RowBox[{"10", "^", "8"}]}]}]}], "         ", 
     RowBox[{"(*", 
      RowBox[{"Signal", " ", "propagation", " ", "speed"}], "*)"}], "|>"}]}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Station", " ", "data", " ", "structure"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"createStation", "[", "id_", "]"}], ":=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<ID\>\"", "->", "id"}], ",", 
      RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
      RowBox[{"(*", 
       RowBox[{"IDLE", ",", "BACKOFF", ",", "TRANSMITTING", ",", "JAMMING"}], 
       "*)"}], 
      RowBox[{"\"\<BackoffExp\>\"", "->", "0"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Backoff", " ", "exponent", " ", "k"}], "*)"}], 
      RowBox[{"\"\<BackoffCounter\>\"", "->", "0"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Current", " ", "backoff", " ", "count"}], "*)"}], 
      RowBox[{"\"\<PacketQueue\>\"", "->", "1"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "Always", " ", "backlogged", " ", "per", " ", "Table", " ", "1"}], 
       "*)"}], 
      RowBox[{"\"\<TransmitStart\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<TransmitEnd\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<VulnerableEnd\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<CollisionCount\>\"", "->", "0"}], ",", 
      RowBox[{"\"\<SuccessfulTx\>\"", "->", "0"}]}], "|>"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Initialize", " ", "simulation"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"initializeSimulation", "[", 
     RowBox[{"numStations_", ",", "packetSize_", ",", "simTime_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"channelRate", "=", 
         RowBox[{"experimentalEthernet", "[", "\"\<channelRate\>\"", "]"}]}], 
        ",", 
        RowBox[{"slotTime", "=", 
         RowBox[{"experimentalEthernet", "[", "\"\<slotTime\>\"", "]"}]}], 
        ",", 
        RowBox[{"dt", "=", 
         RowBox[{"10", "^", 
          RowBox[{"-", "6"}]}]}]}], "  ", 
       RowBox[{"(*", 
        RowBox[{"1", " ", "\[Mu]s", " ", "time", " ", "step"}], "*)"}], "}"}],
       ",", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Stations\>\"", "->", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"createStation", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"\"\<EtherState\>\"", "->", "\"\<IDLE\>\""}], ",", 
        RowBox[{"(*", 
         RowBox[{"IDLE", ",", "BUSY", ",", "COLLISION"}], "*)"}], 
        RowBox[{"\"\<CurrentTime\>\"", "->", "0"}], ",", 
        RowBox[{"\"\<SimEndTime\>\"", "->", "simTime"}], ",", 
        RowBox[{"\"\<TimeStep\>\"", "->", "dt"}], ",", 
        RowBox[{"\"\<PacketSize\>\"", "->", "packetSize"}], ",", 
        RowBox[{"\"\<TxTime\>\"", "->", 
         RowBox[{"N", "[", 
          RowBox[{"packetSize", "/", "channelRate"}], "]"}]}], ",", 
        RowBox[{"\"\<JamTime\>\"", "->", 
         RowBox[{"N", "[", 
          RowBox[{"32", "/", "channelRate"}], "]"}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"32", "-", 
          RowBox[{"bit", " ", "jam", " ", "signal"}]}], "*)"}], 
        RowBox[{"\"\<SlotTime\>\"", "->", "slotTime"}], ",", 
        RowBox[{"\"\<EventLog\>\"", "->", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"\"\<BusyTime\>\"", "->", "0"}], ",", 
        RowBox[{"\"\<CollisionEvents\>\"", "->", "0"}]}], "|>"}]}], "]"}]}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Update", " ", "station", " ", "state", " ", "machine"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"updateStation", "[", 
     RowBox[{"station_", ",", "sim_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"time", "=", 
         RowBox[{"sim", "[", "\"\<CurrentTime\>\"", "]"}]}], ",", 
        RowBox[{"dt", "=", 
         RowBox[{"sim", "[", "\"\<TimeStep\>\"", "]"}]}], ",", 
        RowBox[{"state", "=", 
         RowBox[{"station", "[", "\"\<State\>\"", "]"}]}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"Which", "[", 
        RowBox[{"(*", 
         RowBox[{"Handle", " ", "TRANSMITTING", " ", "state"}], "*)"}], 
        RowBox[{
         RowBox[{"state", "==", "\"\<TRANSMITTING\>\""}], ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"time", ">=", 
             RowBox[{"station", "[", "\"\<TransmitEnd\>\"", "]"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
              "\"\<IDLE\>\""}], ";", "\n", 
             RowBox[{
              RowBox[{"station", "[", "\"\<SuccessfulTx\>\"", "]"}], "++"}], 
             ";", "\n", 
             RowBox[{"AppendTo", "[", 
              RowBox[{
               RowBox[{"sim", "[", "\"\<EventLog\>\"", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"time", ",", 
                 RowBox[{"station", "[", "\"\<ID\>\"", "]"}], ",", 
                 "\"\<TX_COMPLETE\>\""}], "}"}]}], "]"}], ";", "\n", 
             RowBox[{"Return", "[", "station", "]"}]}]}], "]"}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"time", "<", 
              RowBox[{"station", "[", "\"\<VulnerableEnd\>\"", "]"}]}], "&&", 
             
             RowBox[{
              RowBox[{"sim", "[", "\"\<EtherState\>\"", "]"}], "==", 
              "\"\<COLLISION\>\""}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
              "\"\<JAMMING\>\""}], ";", "\n", 
             RowBox[{
              RowBox[{"station", "[", "\"\<JamEnd\>\"", "]"}], "=", 
              RowBox[{"time", "+", 
               RowBox[{"sim", "[", "\"\<JamTime\>\"", "]"}]}]}], ";", "\n", 
             RowBox[{
              RowBox[{"station", "[", "\"\<CollisionCount\>\"", "]"}], "++"}],
              ";", "\n", 
             RowBox[{"AppendTo", "[", 
              RowBox[{
               RowBox[{"sim", "[", "\"\<EventLog\>\"", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"time", ",", 
                 RowBox[{"station", "[", "\"\<ID\>\"", "]"}], ",", 
                 "\"\<COLLISION_DETECTED\>\""}], "}"}]}], "]"}], ";"}]}], 
           "]"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{"Handle", " ", "JAMMING", " ", "state"}], "*)"}], 
         RowBox[{"state", "==", "\"\<JAMMING\>\""}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"time", ">=", 
            RowBox[{"station", "[", "\"\<JamEnd\>\"", "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
             "\"\<BACKOFF\>\""}], ";", "\n", 
            RowBox[{
             RowBox[{"station", "[", "\"\<BackoffExp\>\"", "]"}], "=", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"station", "[", "\"\<BackoffExp\>\"", "]"}], "+", 
                "1"}], ",", "10"}], "]"}]}], ";", "\n", 
            RowBox[{
             RowBox[{"station", "[", "\"\<BackoffCounter\>\"", "]"}], "=", 
             RowBox[{
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"2", "^", 
                   RowBox[{"station", "[", "\"\<BackoffExp\>\"", "]"}]}], "-",
                   "1"}]}], "}"}], "]"}], "*", 
              RowBox[{"sim", "[", "\"\<SlotTime\>\"", "]"}]}]}], ";"}]}], 
          "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Handle", " ", "BACKOFF", " ", "state"}], "*)"}], 
         RowBox[{
          RowBox[{"state", "==", "\"\<BACKOFF\>\""}], "||", 
          RowBox[{"state", "==", "\"\<WAITING\>\""}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"station", "[", "\"\<BackoffCounter\>\"", "]"}], "-=", 
           "dt"}], ";", "\n", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<BackoffCounter\>\"", "]"}], "<=", 
             "0"}], ",", 
            RowBox[{
             RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
             "\"\<IDLE\>\""}]}], "]"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Handle", " ", "IDLE", " ", "state"}], "-", 
           RowBox[{"attempt", " ", "transmission"}]}], "*)"}], 
         RowBox[{
          RowBox[{"state", "==", "\"\<IDLE\>\""}], "&&", 
          RowBox[{
           RowBox[{"station", "[", "\"\<PacketQueue\>\"", "]"}], ">", "0"}]}],
          ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"sim", "[", "\"\<EtherState\>\"", "]"}], "==", 
            "\"\<IDLE\>\""}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<State\>\"", "]"}], "=", 
             "\"\<TRANSMITTING\>\""}], ";", "\n", 
            RowBox[{
             RowBox[{"station", "[", "\"\<TransmitStart\>\"", "]"}], "=", 
             "time"}], ";", "\n", 
            RowBox[{
             RowBox[{"station", "[", "\"\<TransmitEnd\>\"", "]"}], "=", 
             RowBox[{"time", "+", 
              RowBox[{"sim", "[", "\"\<TxTime\>\"", "]"}]}]}], ";", "\n", 
            RowBox[{
             RowBox[{"station", "[", "\"\<VulnerableEnd\>\"", "]"}], "=", 
             RowBox[{"time", "+", 
              RowBox[{"sim", "[", "\"\<SlotTime\>\"", "]"}]}]}], ";", "\n", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"sim", "[", "\"\<EventLog\>\"", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"time", ",", 
                RowBox[{"station", "[", "\"\<ID\>\"", "]"}], ",", 
                "\"\<TX_START\>\""}], "}"}]}], "]"}], ";"}]}], "]"}]}], "]"}],
        ";", "\n", "station"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Main", " ", "simulation", " ", "loop"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"runEthernetSimulation", "[", "sim_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"activeStations", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"numStations", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"sim", "[", "\"\<Stations\>\"", "]"}], "]"}]}], ",", 
        RowBox[{"time", "=", 
         RowBox[{"sim", "[", "\"\<CurrentTime\>\"", "]"}]}], ",", 
        RowBox[{"dt", "=", 
         RowBox[{"sim", "[", "\"\<TimeStep\>\"", "]"}]}], ",", 
        RowBox[{"log", "=", 
         RowBox[{"sim", "[", "\"\<EventLog\>\"", "]"}]}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"time", "<", 
          RowBox[{"sim", "[", "\"\<SimEndTime\>\"", "]"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "Reset", " ", "ether", " ", "state", " ", "for", " ", "this", " ", 
           "timestep"}], "*)"}], 
         RowBox[{
          RowBox[{"activeStations", "=", 
           RowBox[{"{", "}"}]}], ";", "\n", 
          RowBox[{
           RowBox[{"sim", "[", "\"\<CurrentTime\>\"", "]"}], "=", "time"}], 
          ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Update", " ", "all", " ", "stations"}], "*)"}], 
          RowBox[{
           RowBox[{"sim", "[", "\"\<Stations\>\"", "]"}], "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"updateStation", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"sim", "[", "\"\<Stations\>\"", "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "sim"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}]}], ";", "\n", 
          
          RowBox[{"(*", 
           RowBox[{"Find", " ", "active", " ", "stations"}], "*)"}], 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<TRANSMITTING\>\"", ",", "\"\<JAMMING\>\""}], 
                 "}"}], ",", 
                RowBox[{"station", "[", "\"\<State\>\"", "]"}]}], "]"}], ",", 
              
              RowBox[{"AppendTo", "[", 
               RowBox[{"activeStations", ",", 
                RowBox[{"station", "[", "\"\<ID\>\"", "]"}]}], "]"}]}], "]"}],
             ",", 
            RowBox[{"{", 
             RowBox[{"station", ",", 
              RowBox[{"sim", "[", "\"\<Stations\>\"", "]"}]}], "}"}]}], "]"}],
           ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Update", " ", "ether", " ", "state"}], "*)"}], 
          RowBox[{
           RowBox[{"sim", "[", "\"\<EtherState\>\"", "]"}], "=", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "activeStations", "]"}], "==", "0"}], 
             ",", "\"\<IDLE\>\"", ",", 
             RowBox[{
              RowBox[{"Length", "[", "activeStations", "]"}], "==", "1"}], 
             ",", "\"\<BUSY\>\"", ",", "True", ",", "\"\<COLLISION\>\""}], 
            "]"}]}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{
           "Record", " ", "busy", " ", "time", " ", "for", " ", "successful", 
            " ", "transmissions"}], "*)"}], 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"sim", "[", "\"\<EtherState\>\"", "]"}], "==", 
             "\"\<BUSY\>\""}], ",", 
            RowBox[{
             RowBox[{"sim", "[", "\"\<BusyTime\>\"", "]"}], "+=", "dt"}]}], 
           "]"}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Count", " ", "collisions"}], "*)"}], 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"sim", "[", "\"\<EtherState\>\"", "]"}], "==", 
              "\"\<COLLISION\>\""}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", "activeStations", "]"}], ">", "1"}]}], 
            ",", 
            RowBox[{
             RowBox[{
              RowBox[{"sim", "[", "\"\<CollisionEvents\>\"", "]"}], "++"}], 
             ";"}]}], "]"}], ";", "\n", 
          RowBox[{"time", "+=", "dt"}], ";"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Calculate", " ", "final", " ", "metrics"}], "*)"}], 
       RowBox[{"efficiency", "=", 
        RowBox[{
         RowBox[{"sim", "[", "\"\<BusyTime\>\"", "]"}], "/", 
         RowBox[{"sim", "[", "\"\<SimEndTime\>\"", "]"}]}]}], ";", "\n", 
       RowBox[{"totalPackets", "=", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"station", "[", "\"\<SuccessfulTx\>\"", "]"}], "&"}], "/@", 
          RowBox[{"sim", "[", "\"\<Stations\>\"", "]"}]}], "]"}]}], ";", "\n", 
       RowBox[{"avgLatency", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"totalPackets", ">", "0"}], ",", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", "\"\<TransmitEnd\>\"", "]"}], "-", 
               RowBox[{"#", "[", "\"\<TransmitStart\>\"", "]"}]}], "&"}], "/@", 
             RowBox[{"sim", "[", "\"\<Stations\>\"", "]"}]}], "]"}], "/", 
           "totalPackets"}], ",", "0"}], "]"}]}], ";", "\n", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Efficiency\>\"", "->", "efficiency"}], ",", 
         RowBox[{"\"\<TotalPackets\>\"", "->", "totalPackets"}], ",", 
         RowBox[{"\"\<AvgLatency\>\"", "->", "avgLatency"}], ",", 
         RowBox[{"\"\<CollisionCount\>\"", "->", 
          RowBox[{"sim", "[", "\"\<CollisionEvents\>\"", "]"}]}], ",", 
         RowBox[{"\"\<EventLog\>\"", "->", 
          RowBox[{"sim", "[", "\"\<EventLog\>\"", "]"}]}], ",", 
         RowBox[{"\"\<Stations\>\"", "->", 
          RowBox[{"sim", "[", "\"\<Stations\>\"", "]"}]}]}], "|>"}]}]}], 
     "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Simulation", " ", "controller", " ", "and", " ", "visualizer"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EthernetSimulationInterface", "[", "]"}], ":=", 
    RowBox[{"DynamicModule", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"numStations", "=", "2"}], ",", 
        RowBox[{"packetSize", "=", "4096"}], ",", 
        RowBox[{"simTime", "=", "0.1"}], ",", 
        RowBox[{"results", "=", "None"}], ",", 
        RowBox[{"simRunning", "=", "False"}], ",", 
        RowBox[{"progress", "=", "0"}], ",", "currentParams", ",", 
        RowBox[{"efficiencyPlot", "=", "Null"}], ",", 
        RowBox[{"latencyPlot", "=", "Null"}]}], "}"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Stations (Q)\>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"Dynamic", "[", "numStations", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "256", ",", "1"}], "}"}]}], "]"}], ",", 
              RowBox[{"Dynamic", "[", "numStations", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Packet Size (bits)\>\"", ",", 
              RowBox[{"PopupMenu", "[", 
               RowBox[{
                RowBox[{"Dynamic", "[", "packetSize", "]"}], ",", 
                RowBox[{
                "experimentalEthernet", "[", "\"\<packetSizes\>\"", "]"}]}], 
               "]"}], ",", 
              RowBox[{"Dynamic", "[", "packetSize", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Sim Time (s)\>\"", ",", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"Dynamic", "[", "simTime", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.01", ",", "1", ",", "0.01"}], "}"}]}], "]"}], ",", 
              RowBox[{"Dynamic", "[", "simTime", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{"\"\<Run Simulation\>\"", ",", 
                RowBox[{
                 RowBox[{"simRunning", "=", "True"}], ";", "\n", 
                 RowBox[{"currentParams", "=", 
                  RowBox[{"{", 
                   RowBox[{"numStations", ",", "packetSize", ",", "simTime"}],
                    "}"}]}], ";", "\n", 
                 RowBox[{"results", "=", 
                  RowBox[{"runEthernetSimulation", "[", 
                   RowBox[{"initializeSimulation", "[", 
                    RowBox[{
                    "numStations", ",", "packetSize", ",", "simTime"}], "]"}],
                    "]"}]}], ";", "\n", 
                 RowBox[{"simRunning", "=", "False"}], ";", "\n", 
                 RowBox[{"efficiencyPlot", "=", 
                  RowBox[{"ListLinePlot", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"q", ",", 
                    RowBox[{
                    RowBox[{"runEthernetSimulation", "[", 
                    RowBox[{"initializeSimulation", "[", 
                    RowBox[{"q", ",", "packetSize", ",", "simTime"}], "]"}], 
                    "]"}], "[", "\"\<Efficiency\>\"", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"q", ",", "1", ",", "numStations"}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{
                    "PlotLabel", "->", 
                    "\"\<Efficiency vs Station Count\>\""}], ",", 
                    RowBox[{"AxesLabel", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Stations (Q)\>\"", ",", "\"\<Efficiency\>\""}], 
                    "}"}]}]}], "]"}]}], ";", "\n", 
                 RowBox[{"latencyPlot", "=", 
                  RowBox[{"ListLinePlot", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"q", ",", 
                    RowBox[{
                    RowBox[{"runEthernetSimulation", "[", 
                    RowBox[{"initializeSimulation", "[", 
                    RowBox[{"q", ",", "packetSize", ",", "simTime"}], "]"}], 
                    "]"}], "[", "\"\<AvgLatency\>\"", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"q", ",", "1", ",", "numStations"}], "}"}]}], 
                    "]"}], ",", 
                    RowBox[{
                    "PlotLabel", "->", 
                    "\"\<Average Latency vs Station Count\>\""}], ",", 
                    RowBox[{"AxesLabel", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Stations (Q)\>\"", ",", "\"\<Latency (s)\>\""}], 
                    "}"}]}]}], "]"}]}], ";"}]}], "]"}], ",", "SpanFromLeft"}],
              "}"}]}], "}"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"simRunning", ",", 
           RowBox[{"ProgressIndicator", "[", 
            RowBox[{"Appearance", "->", "\"\<Indeterminate\>\""}], "]"}], ",",
            "Nothing"}], "]"}], ",", 
         RowBox[{"Dynamic", "@", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"results", "=!=", "None"}], ",", 
            RowBox[{"Column", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Grid", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<Efficiency\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"results", "[", "\"\<Efficiency\>\"", "]"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"5", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Total Packets\>\"", ",", 
                    RowBox[{"results", "[", "\"\<TotalPackets\>\"", "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Collisions\>\"", ",", 
                    RowBox[{"results", "[", "\"\<CollisionCount\>\"", "]"}]}],
                     "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Avg Latency (ms)\>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"results", "[", "\"\<AvgLatency\>\"", "]"}], "*", 
                    "1000"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}]}], "]"}]}], "}"}]}], "}"}],
                  ",", 
                 RowBox[{"Frame", "->", "All"}]}], "]"}], ",", 
               "efficiencyPlot", ",", "latencyPlot"}], "}"}], "]"}], ",", 
            RowBox[{"Placeholder", "[", 
             RowBox[{"TextCell", "[", 
              RowBox[{
              "\"\<Run simulation to see results\>\"", ",", 
               "\"\<Italic\>\""}], "]"}], "]"}]}], "]"}]}]}], "}"}], "]"}]}], 
     "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Launch", " ", "the", " ", "simulation", " ", "interface"}], 
   "*)"}]}], "\n", 
 RowBox[{"EthernetSimulationInterface", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.959217213928524*^9, 3.959217213929823*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"a7ba88c5-eb5e-4d22-bdbf-398b03d613e5"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`numStations$$ = 2, $CellContext`packetSize$$ =
   4096, $CellContext`simTime$$ = 0.1, $CellContext`results$$ = <|
  "Efficiency" -> 0., "TotalPackets" -> 
   2 EthernetSimulation`station["SuccessfulTx"], "AvgLatency" -> 
   If[2 EthernetSimulation`station["SuccessfulTx"] > 0, Total[
       Map[#["TransmitEnd"] - #["TransmitStart"]& , 
        <|"Stations" -> {<|
           "ID" -> 1, "State" -> "IDLE", "BackoffExp" -> 0, "BackoffCounter" -> 
            0, "PacketQueue" -> 1, "TransmitStart" -> 0, "TransmitEnd" -> 0, 
            "VulnerableEnd" -> 0, "CollisionCount" -> 0, "SuccessfulTx" -> 
            0|>, <|"ID" -> 2, "State" -> "IDLE", "BackoffExp" -> 0, 
            "BackoffCounter" -> 0, "PacketQueue" -> 1, "TransmitStart" -> 0, 
            "TransmitEnd" -> 0, "VulnerableEnd" -> 0, "CollisionCount" -> 0, 
            "SuccessfulTx" -> 0|>}, "EtherState" -> "IDLE", "CurrentTime" -> 
         0, "SimEndTime" -> 0.1, "TimeStep" -> Rational[1, 1000000], 
         "PacketSize" -> 4096, "TxTime" -> 0.0013653333333333334`, "JamTime" -> 
         0.000010666666666666667`, "SlotTime" -> Rational[1, 62500], 
         "EventLog" -> {}, "BusyTime" -> 0, "CollisionEvents" -> 0|>[
        "Stations"]]]/$CellContext`totalPackets, 0], "CollisionCount" -> 0, 
   "EventLog" -> {}, 
   "Stations" -> {<|
     "ID" -> 1, "State" -> "IDLE", "BackoffExp" -> 0, "BackoffCounter" -> 0, 
      "PacketQueue" -> 1, "TransmitStart" -> 0, "TransmitEnd" -> 0, 
      "VulnerableEnd" -> 0, "CollisionCount" -> 0, "SuccessfulTx" -> 0|>, <|
     "ID" -> 2, "State" -> "IDLE", "BackoffExp" -> 0, "BackoffCounter" -> 0, 
      "PacketQueue" -> 1, "TransmitStart" -> 0, "TransmitEnd" -> 0, 
      "VulnerableEnd" -> 0, "CollisionCount" -> 0, "SuccessfulTx" -> 
      0|>}|>, $CellContext`simRunning$$ = False, $CellContext`progress$$ = 
  0, $CellContext`currentParams$$ = {
  2, 4096, 0.1}, $CellContext`efficiencyPlot$$ = 
  Null, $CellContext`latencyPlot$$ = Null}, 
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {"\<\"Stations (Q)\"\>", 
          SliderBox[Dynamic[$CellContext`numStations$$], {1, 256, 1}], 
          DynamicBox[ToBoxes[$CellContext`numStations$$, StandardForm],
           ImageSizeCache->{9., {0., 12.}}]},
         {"\<\"Packet Size (bits)\"\>", 
          
          PopupMenuBox[Dynamic[$CellContext`packetSize$$], {4096->"4096", 
           1024->"1024", 512->"512", 48->"48"}], 
          DynamicBox[ToBoxes[$CellContext`packetSize$$, StandardForm],
           ImageSizeCache->{40., {1., 12.}}]},
         {"\<\"Sim Time (s)\"\>", 
          SliderBox[Dynamic[$CellContext`simTime$$], {0.01, 1, 0.01}], 
          DynamicBox[ToBoxes[$CellContext`simTime$$, StandardForm],
           ImageSizeCache->{22., {1., 12.}}]},
         {
          ButtonBox["\<\"Run Simulation\"\>",
           Appearance->Automatic,
           
           ButtonFunction:>($CellContext`simRunning$$ = 
             True; $CellContext`currentParams$$ = \
{$CellContext`numStations$$, $CellContext`packetSize$$, \
$CellContext`simTime$$}; $CellContext`results$$ = \
$CellContext`runEthernetSimulation[
               $CellContext`initializeSimulation[$CellContext`numStations$$, \
$CellContext`packetSize$$, $CellContext`simTime$$]]; \
$CellContext`simRunning$$ = False; $CellContext`efficiencyPlot$$ = 
             ListLinePlot[
               Table[{$CellContext`q, 
                 $CellContext`runEthernetSimulation[
                  $CellContext`initializeSimulation[$CellContext`q, \
$CellContext`packetSize$$, $CellContext`simTime$$]][
                 "Efficiency"]}, {$CellContext`q, 
                 1, $CellContext`numStations$$}], PlotLabel -> 
               "Efficiency vs Station Count", 
               AxesLabel -> {
                "Stations (Q)", "Efficiency"}]; $CellContext`latencyPlot$$ = 
             ListLinePlot[
               Table[{$CellContext`q, 
                 $CellContext`runEthernetSimulation[
                  $CellContext`initializeSimulation[$CellContext`q, \
$CellContext`packetSize$$, $CellContext`simTime$$]][
                 "AvgLatency"]}, {$CellContext`q, 
                 1, $CellContext`numStations$$}], PlotLabel -> 
               "Average Latency vs Station Count", 
               AxesLabel -> {"Stations (Q)", "Latency (s)"}]; Null),
           Evaluator->Automatic,
           Method->"Preemptive"], "\[SpanFromLeft]", "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]},
     {
      DynamicBox[ToBoxes[
        If[$CellContext`results$$ =!= None, 
         Column[{
           Grid[{{"Efficiency", 
              NumberForm[
               $CellContext`results$$["Efficiency"], {5, 4}]}, {
             "Total Packets", 
              $CellContext`results$$["TotalPackets"]}, {"Collisions", 
              $CellContext`results$$["CollisionCount"]}, {
             "Avg Latency (ms)", 
              NumberForm[$CellContext`results$$["AvgLatency"] 1000, {5, 3}]}},
             Frame -> 
            All], $CellContext`efficiencyPlot$$, $CellContext`latencyPlot$$}], 
         Placeholder[
          TextCell["Run simulation to see results", "Italic"]]], StandardForm],
       ImageSizeCache->{630., {284.17974853515625`, 293.82025146484375`}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.9592172140654373`*^9},
 CellLabel->
  "Out[303]=",ExpressionUUID->"084cc375-0b63-4a04-b265-3646ab3dcf39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Ethernet", " ", "Simulation", " ", "Parameters"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"numStations", "=", "5"}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{
    "Number", " ", "of", " ", "stations", " ", "on", " ", "the", " ", 
     "network"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"cableLength", "=", "1000"}], ";"}], "        ", 
   RowBox[{"(*", 
    RowBox[{"Cable", " ", "length", " ", "in", " ", "meters"}], "*)"}], "\n", 
   
   RowBox[{
    RowBox[{"bitRate", "=", 
     RowBox[{"3", "*", 
      RowBox[{"10", "^", "6"}]}]}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{"3", " ", "Mbps", " ", "transmission", " ", "rate"}], "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"packetSize", "=", "4096"}], ";"}], "         ", 
   RowBox[{"(*", 
    RowBox[{"Packet", " ", "size", " ", "in", " ", "bits"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"propSpeed", "=", 
     RowBox[{"2", "*", 
      RowBox[{"10", "^", "8"}]}]}], ";"}], "        ", 
   RowBox[{"(*", 
    RowBox[{"Signal", " ", "propagation", " ", 
     RowBox[{"speed", ":", 
      RowBox[{
       RowBox[{"2", "/", "3"}], " ", "speed", " ", "of", " ", "light"}]}]}], 
    "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Derived", " ", "parameters"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"propDelay", "=", 
     RowBox[{"cableLength", "/", "propSpeed"}]}], ";"}], "   ", 
   RowBox[{"(*", 
    RowBox[{"End", "-", "to", "-", 
     RowBox[{"end", " ", "propagation", " ", "delay"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"slotTime", "=", 
     RowBox[{"2", "*", "propDelay"}]}], ";"}], "              ", 
   RowBox[{"(*", 
    RowBox[{"Collision", " ", "detection", " ", "slot", " ", "time"}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"txTime", "=", 
     RowBox[{"packetSize", "/", "bitRate"}]}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{"Packet", " ", "transmission", " ", "time"}], "*)"}], "\n", "\n", 
   
   RowBox[{"(*", 
    RowBox[{"Station", " ", "states"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"stations", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<id\>\"", "->", "i"}], ",", 
         RowBox[{"\"\<backoff\>\"", "->", "0"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Current", " ", "backoff", " ", "counter"}], "*)"}], 
         RowBox[{"\"\<collisionCount\>\"", "->", "0"}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "consecutive", " ", "collisions"}], 
          "*)"}], 
         RowBox[{"\"\<queue\>\"", "->", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{"Packet", " ", "queue"}], "*)"}], 
         RowBox[{"\"\<state\>\"", "->", "\"\<IDLE\>\""}], ",", 
         RowBox[{"(*", 
          RowBox[{"Current", " ", "state"}], "*)"}], 
         RowBox[{"\"\<txStartTime\>\"", "->", 
          RowBox[{"-", "1"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{"Transmission", " ", "start", " ", "time"}], "*)"}], 
         RowBox[{"\"\<successCount\>\"", "->", "0"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Successful", " ", "transmissions"}], "*)"}], 
         RowBox[{"\"\<collisionEvents\>\"", "->", "0"}]}], "           ", 
        RowBox[{"(*", 
         RowBox[{"Collision", " ", "events"}], "*)"}], "|>"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Network", " ", "state"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"networkState", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<currentTime\>\"", "->", "0.0"}], ",", 
       RowBox[{"\"\<channelState\>\"", "->", "\"\<IDLE\>\""}], ",", 
       RowBox[{"(*", 
        RowBox[{"IDLE", ",", "BUSY", ",", "COLLISION"}], "*)"}], 
       RowBox[{"\"\<activeTransmissions\>\"", "->", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"Currently", " ", "transmitting", " ", "stations"}], "*)"}], 
       RowBox[{"\"\<eventLog\>\"", "->", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"Log", " ", "of", " ", "all", " ", "network", " ", "events"}],
         "*)"}], 
       RowBox[{"\"\<throughput\>\"", "->", "0.0"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Successful", " ", "bits", " ", "per", " ", "second"}], 
        "*)"}], 
       RowBox[{"\"\<efficiency\>\"", "->", "0.0"}]}], "              ", 
      RowBox[{"(*", 
       RowBox[{"Channel", " ", "utilization", " ", "efficiency"}], "*)"}], 
      "|>"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Helper", " ", "Functions"}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Initialize", " ", "a", " ", "new", " ", "packet", " ", "for", " ", 
     "transmission"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"createPacket", "[", "]"}], ":=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<id\>\"", "->", 
        RowBox[{"CreateUUID", "[", "]"}]}], ",", 
       RowBox[{"\"\<size\>\"", "->", "packetSize"}], ",", 
       RowBox[{"\"\<createTime\>\"", "->", 
        RowBox[{"networkState", "[", "\"\<currentTime\>\"", "]"}]}], ",", 
       RowBox[{"\"\<txStartTime\>\"", "->", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\"\<txEndTime\>\"", "->", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\"\<status\>\"", "->", "\"\<QUEUED\>\""}]}], "|>"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Binary", " ", "exponential", " ", "backoff", " ", "algorithm"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"calculateBackoff", "[", "station_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", ",", "backoffWindow"}], "}"}], ",", 
       RowBox[{
        RowBox[{"k", "=", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"station", "[", "\"\<collisionCount\>\"", "]"}], ",", 
           "10"}], "]"}]}], ";", "\n", 
        RowBox[{"backoffWindow", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "^", "k"}], ")"}], "-", "1"}]}], ";", "\n", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "backoffWindow"}], "}"}], "]"}]}]}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Carrier", " ", 
     RowBox[{"sense", ":", 
      RowBox[{
      "Check", " ", "if", " ", "channel", " ", "is", " ", "idle"}]}]}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"channelIsIdle", "[", "]"}], ":=", 
    RowBox[{
     RowBox[{"networkState", "[", "\"\<channelState\>\"", "]"}], "==", 
     "\"\<IDLE\>\""}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Detect", " ", 
     RowBox[{"collisions", ":", 
      RowBox[{
      "Multiple", " ", "transmissions", " ", "within", " ", "vulnerable", " ",
        "period"}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"detectCollisions", "[", "]"}], ":=", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"networkState", "[", "\"\<activeTransmissions\>\"", "]"}], 
      "]"}], ">", "1"}]}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Process", " ", "events", " ", "at", " ", "each", " ", "time", " ", 
     "step"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"processTimeStep", "[", "dt_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Update", " ", "network", " ", "time"}], "*)"}], 
       RowBox[{
        RowBox[{
         RowBox[{"networkState", "[", "\"\<currentTime\>\"", "]"}], "+=", 
         "dt"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
         "Check", " ", "for", " ", "completed", " ", "transmissions"}], 
         "*)"}], 
        RowBox[{"processCompletedTransmissions", "[", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Check", " ", "for", " ", "collisions"}], "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"networkState", "[", "\"\<channelState\>\"", "]"}], "==", 
           "\"\<BUSY\>\""}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"detectCollisions", "[", "]"}], ",", 
            RowBox[{"handleCollision", "[", "]"}]}], "]"}]}], "]"}], ";", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{"Process", " ", "station", " ", "state", " ", "machines"}], 
         "*)"}], 
        RowBox[{"processStations", "[", "dt", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Schedule", " ", "new", " ", "packets"}], "*)"}], 
        RowBox[{"scheduleNewPackets", "[", "]"}], ";"}]}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Process", " ", "completed", " ", "transmissions"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"processCompletedTransmissions", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"completed", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"now", "=", 
          RowBox[{"networkState", "[", "\"\<currentTime\>\"", "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Find", " ", "completed", " ", "transmissions"}], "*)"}], 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<state\>\"", "]"}], "==", 
              "\"\<TRANSMITTING\>\""}], "&&", 
             RowBox[{"now", ">=", 
              RowBox[{
               RowBox[{"station", "[", "\"\<txStartTime\>\"", "]"}], "+", 
               "txTime"}]}]}], ",", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"completed", ",", 
               RowBox[{"station", "[", "\"\<id\>\"", "]"}]}], "]"}], ";", 
             "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", 
                RowBox[{"[", 
                 RowBox[{"station", "[", "\"\<id\>\"", "]"}], "]"}], "]"}], 
               "[", "\"\<state\>\"", "]"}], "=", "\"\<IDLE\>\""}], ";", "\n", 
             
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", 
                RowBox[{"[", 
                 RowBox[{"station", "[", "\"\<id\>\"", "]"}], "]"}], "]"}], 
               "[", "\"\<successCount\>\"", "]"}], "++"}], ";", "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"stations", "[", 
                RowBox[{"[", 
                 RowBox[{"station", "[", "\"\<id\>\"", "]"}], "]"}], "]"}], 
               "[", "\"\<collisionCount\>\"", "]"}], "=", "0"}], ";", "\n", 
             RowBox[{"LogEvent", "[", 
              RowBox[{"\"\<TRANSMISSION_COMPLETE\>\"", ",", 
               RowBox[{"station", "[", "\"\<id\>\"", "]"}]}], "]"}]}], ","}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"station", ",", "stations"}], "}"}]}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
         "Remove", " ", "completed", " ", "from", " ", "active", " ", 
          "transmissions"}], "*)"}], 
        RowBox[{
         RowBox[{"networkState", "[", "\"\<activeTransmissions\>\"", "]"}], 
         "=", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"networkState", "[", "\"\<activeTransmissions\>\"", "]"}], 
           ",", 
           RowBox[{"Alternatives", "@@", "completed"}]}], "]"}]}], ";", "\n", 
        
        RowBox[{"(*", 
         RowBox[{"Update", " ", "channel", " ", "state"}], "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"networkState", "[", "\"\<activeTransmissions\>\"", "]"}], 
           "==", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"networkState", "[", "\"\<channelState\>\"", "]"}], "=", 
            "\"\<IDLE\>\""}], ";"}]}], "]"}], ";"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Handle", " ", "collision", " ", "event"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"handleCollision", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"networkState", "[", "\"\<channelState\>\"", "]"}], "=", 
         "\"\<COLLISION\>\""}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Abort", " ", "all", " ", "active", " ", "transmissions"}], 
         "*)"}], 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "id", "]"}], "]"}], "[", "\"\<state\>\"", "]"}], 
            "=", "\"\<BACKOFF\>\""}], ";", "\n", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "id", "]"}], "]"}], "[", "\"\<collisionCount\>\"", 
             "]"}], "++"}], ";", "\n", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "id", "]"}], "]"}], "[", "\"\<collisionEvents\>\"",
              "]"}], "++"}], ";", "\n", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "id", "]"}], "]"}], "[", "\"\<backoff\>\"", "]"}], 
            "=", 
            RowBox[{"calculateBackoff", "[", 
             RowBox[{"stations", "[", 
              RowBox[{"[", "id", "]"}], "]"}], "]"}]}], ";", "\n", 
           RowBox[{"LogEvent", "[", 
            RowBox[{"\"\<COLLISION\>\"", ",", "id"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"id", ",", 
            RowBox[{
            "networkState", "[", "\"\<activeTransmissions\>\"", "]"}]}], 
           "}"}]}], "]"}], ";", "\n", 
        RowBox[{
         RowBox[{"networkState", "[", "\"\<activeTransmissions\>\"", "]"}], 
         "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{
         RowBox[{"networkState", "[", "\"\<channelState\>\"", "]"}], "=", 
         "\"\<IDLE\>\""}], ";"}]}], "  ", 
      RowBox[{"(*", 
       RowBox[{
       "Channel", " ", "becomes", " ", "idle", " ", "after", " ", 
        "collision"}], "*)"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Process", " ", "station", " ", "state", " ", "machines"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"processStations", "[", "dt_", "]"}], ":=", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"station", "=", 
         RowBox[{"stations", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"Switch", "[", 
         RowBox[{
          RowBox[{"station", "[", "\"\<state\>\"", "]"}], ",", 
          "\"\<BACKOFF\>\"", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"channelIsIdle", "[", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<backoff\>\"", "]"}], "=", 
              RowBox[{"Max", "[", 
               RowBox[{"0", ",", 
                RowBox[{
                 RowBox[{"station", "[", "\"\<backoff\>\"", "]"}], "-", 
                 RowBox[{"dt", "/", "slotTime"}]}]}], "]"}]}], ";", "\n", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"station", "[", "\"\<backoff\>\"", "]"}], "<=", "0"}],
                ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"station", "[", "\"\<state\>\"", "]"}], "=", 
                 "\"\<IDLE\>\""}], ";"}]}], "]"}]}]}], "]"}], ",", 
          "\"\<IDLE\>\"", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "]"}], ">", 
              "0"}], "&&", 
             RowBox[{"channelIsIdle", "[", "]"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"station", "[", "\"\<state\>\"", "]"}], "=", 
              "\"\<TRANSMITTING\>\""}], ";", "\n", 
             RowBox[{
              RowBox[{"station", "[", "\"\<txStartTime\>\"", "]"}], "=", 
              RowBox[{"networkState", "[", "\"\<currentTime\>\"", "]"}]}], 
             ";", "\n", 
             RowBox[{"AppendTo", "[", 
              RowBox[{
               RowBox[{
               "networkState", "[", "\"\<activeTransmissions\>\"", "]"}], ",", 
               RowBox[{"station", "[", "\"\<id\>\"", "]"}]}], "]"}], ";", 
             "\n", 
             RowBox[{
              RowBox[{"networkState", "[", "\"\<channelState\>\"", "]"}], 
              "=", "\"\<BUSY\>\""}], ";", "\n", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"station", "[", "\"\<queue\>\"", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<txStartTime\>\"", 
               "]"}], "=", 
              RowBox[{"networkState", "[", "\"\<currentTime\>\"", "]"}]}], 
             ";", "\n", 
             RowBox[{"LogEvent", "[", 
              RowBox[{"\"\<TRANSMISSION_START\>\"", ",", 
               RowBox[{"station", "[", "\"\<id\>\"", "]"}]}], "]"}], ";"}]}], 
           "]"}], ",", "\"\<TRANSMITTING\>\"", ",", 
          RowBox[{"(*", 
           RowBox[{
           "Already", " ", "handled", " ", "in", " ", 
            "processCompletedTransmissions"}], "*)"}], "Null"}], "]"}], ";", 
        "\n", 
        RowBox[{
         RowBox[{"stations", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", "station"}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Schedule", " ", "new", " ", "packets", " ", "for", " ", "transmission"}],
     "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"scheduleNewPackets", "[", "]"}], ":=", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"RandomReal", "[", "]"}], "<", "0.1"}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "Probability", " ", "to", " ", "generate", " ", "new", " ", 
           "packet"}], "*)"}], 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<queue\>\"", "]"}], 
            ",", 
            RowBox[{"createPacket", "[", "]"}]}], "]"}], ";", "\n", 
          RowBox[{"LogEvent", "[", 
           RowBox[{"\"\<PACKET_QUEUED\>\"", ",", "i"}], "]"}], ";"}]}], "]"}],
        ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Log", " ", "network", " ", "events"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"LogEvent", "[", 
      RowBox[{"eventType_", ",", "stationID_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "event", "}"}], ",", 
       RowBox[{
        RowBox[{"event", "=", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<time\>\"", "->", 
            RowBox[{"networkState", "[", "\"\<currentTime\>\"", "]"}]}], ",", 
           
           RowBox[{"\"\<type\>\"", "->", "eventType"}], ",", 
           RowBox[{"\"\<station\>\"", "->", "stationID"}]}], "|>"}]}], ";", 
        "\n", 
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"networkState", "[", "\"\<eventLog\>\"", "]"}], ",", 
          "event"}], "]"}], ";"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Simulation", " ", "Initialization"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"initializeSimulation", "[", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"networkState", "=", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<currentTime\>\"", "->", "0.0"}], ",", 
          RowBox[{"\"\<channelState\>\"", "->", "\"\<IDLE\>\""}], ",", 
          RowBox[{"\"\<activeTransmissions\>\"", "->", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"\"\<eventLog\>\"", "->", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"\"\<throughput\>\"", "->", "0.0"}], ",", 
          RowBox[{"\"\<efficiency\>\"", "->", "0.0"}]}], "|>"}]}], ";", "\n", 
       
       RowBox[{"stations", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<id\>\"", "->", "i"}], ",", 
            RowBox[{"\"\<backoff\>\"", "->", "0"}], ",", 
            RowBox[{"\"\<collisionCount\>\"", "->", "0"}], ",", 
            RowBox[{"\"\<queue\>\"", "->", 
             RowBox[{"{", 
              RowBox[{"createPacket", "[", "]"}], "}"}]}], ",", 
            RowBox[{"\"\<state\>\"", "->", "\"\<IDLE\>\""}], ",", 
            RowBox[{"\"\<txStartTime\>\"", "->", 
             RowBox[{"-", "1"}]}], ",", 
            RowBox[{"\"\<successCount\>\"", "->", "0"}], ",", 
            RowBox[{"\"\<collisionEvents\>\"", "->", "0"}]}], "|>"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numStations"}], "}"}]}], "]"}]}], ";"}], 
      ")"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Run", " ", "Simulation"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"runSimulation", "[", "duration_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"initializeSimulation", "[", "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Simulation", " ", "time", " ", "step"}], "=", 
          RowBox[{
           RowBox[{"1", "/", "10"}], " ", "of", " ", "slot", " ", "time"}]}], 
         "*)"}], 
        RowBox[{"timeStep", "=", 
         RowBox[{"slotTime", "/", "10"}]}], ";", "\n", 
        RowBox[{"steps", "=", 
         RowBox[{"duration", "/", "timeStep"}]}], ";", "\n", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"processTimeStep", "[", "timeStep", "]"}], ",", 
          RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Calculate", " ", "performance", " ", "metrics"}], "*)"}], 
        RowBox[{"totalPackets", "=", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"stations", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "\"\<successCount\>\""}], "]"}], "]"}], 
             "+", 
             RowBox[{"Total", "[", 
              RowBox[{"stations", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "\"\<collisionEvents\>\""}], "]"}], "]"}],
               "]"}]}], ";", "\n", 
            RowBox[{"successRate", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"totalPackets", ">", "0"}], ",", 
               RowBox[{
                RowBox[{"Total", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"stations", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "\"\<successCount\>\""}], "]"}], 
                    "]"}], "/", "totalPackets"}], ",", "0"}], "]"}], ";", 
                "\n", 
                RowBox[{
                 RowBox[{"networkState", "[", "\"\<throughput\>\"", "]"}], 
                 "=", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "\"\<successCount\>\""}], "]"}], 
                    "]"}], "*", "packetSize"}], "]"}], ")"}], "/", 
                  "duration"}]}], ";", "\n", 
                RowBox[{
                 RowBox[{"networkState", "[", "\"\<efficiency\>\"", "]"}], 
                 "=", 
                 RowBox[{
                  RowBox[{"networkState", "[", "\"\<throughput\>\"", "]"}], 
                  "/", "bitRate"}]}], ";"}]}], "]"}]}]}], "]"}], "\n", "\n", 
          RowBox[{"(*", 
           RowBox[{"Return", " ", "results"}], "*)"}], "\n", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<stations\>\"", "->", "stations"}], ",", 
            RowBox[{"\"\<networkState\>\"", "->", "networkState"}], ",", 
            RowBox[{"\"\<parameters\>\"", "->", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<numStations\>\"", "->", "numStations"}], ",", 
               RowBox[{"\"\<cableLength\>\"", "->", "cableLength"}], ",", 
               RowBox[{"\"\<bitRate\>\"", "->", "bitRate"}], ",", 
               RowBox[{"\"\<packetSize\>\"", "->", "packetSize"}], ",", 
               RowBox[{"\"\<propDelay\>\"", "->", "propDelay"}], ",", 
               RowBox[{"\"\<slotTime\>\"", "->", "slotTime"}], ",", 
               RowBox[{"\"\<txTime\>\"", "->", "txTime"}]}], "|>"}]}]}], 
           "|>"}]}]}]}]}], "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Run", " ", "a", " ", "sample", " ", "simulation", " ", "for", " ", "0.1",
      " ", "seconds"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"simulationResult", "=", 
     RowBox[{"runSimulation", "[", "0.1", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.959217235718176*^9, 3.9592172546121683`*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"8eb66808-59a0-4935-af79-87f82d9512c2"],

Cell[BoxData[
 TemplateBox[{
  "Association", "setps", 
   "\"\\!\\(\\*RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\\\
\"id\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"\\\\\\\"a1e0025c-3801-468f-b1de-e52c759ae2f1\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"size\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"4096\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"createTime\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"0.`\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\"txStartTime\\\\\\\"\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"txEndTime\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"-\\\", \\\"1\\\"}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"status\\\\\\\
\"\\\", \\\"\[Rule]\\\", \\\"\\\\\\\"QUEUED\\\\\\\"\\\"}]}], \\\"\
\[RightAssociation]\\\"}]\\) in the part assignment is not a symbol.\"", 2, 
   347, 52, 19024688865372878773, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.95921725526444*^9},
 CellLabel->
  "During evaluation of \
In[325]:=",ExpressionUUID->"29d3a657-e24a-466f-b7dd-9de41012d3f0"],

Cell[BoxData[
 TemplateBox[{
  "Association", "setps", 
   "\"\\!\\(\\*RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\\\
\"id\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"3\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"backoff\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"collisionCount\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"queue\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"\[RightAssociation]\\\"}], \\\"}\\\
\"}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"state\\\\\\\"\\\", \\\"\[Rule]\\\", \\\
\"\\\\\\\"IDLE\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"txStartTime\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\
\", \\\"1\\\"}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"successCount\\\\\\\"\\\", \
\\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"collisionEvents\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"0\\\"}]}], \\\"\[RightAssociation]\\\"}]\\) in the part assignment is not \
a symbol.\"", 2, 347, 53, 19024688865372878773, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9592172552699423`*^9},
 CellLabel->
  "During evaluation of \
In[325]:=",ExpressionUUID->"2abc3f77-67d9-43c5-aa08-777cf1d1404f"],

Cell[BoxData[
 TemplateBox[{
  "Association", "setps", 
   "\"\\!\\(\\*RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\\\
\"id\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"3\\\"}], \\\",\\\", RowBox[{\\\"\\\\\\\
\"backoff\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"collisionCount\\\\\\\"\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"queue\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"\[RightAssociation]\\\"}], \\\"}\\\
\"}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"state\\\\\\\"\\\", \\\"\[Rule]\\\", \\\
\"\\\\\\\"IDLE\\\\\\\"\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"txStartTime\\\\\\\"\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\
\", \\\"1\\\"}]}], \\\",\\\", RowBox[{\\\"\\\\\\\"successCount\\\\\\\"\\\", \
\\\"\[Rule]\\\", \\\"0\\\"}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"collisionEvents\\\\\\\"\\\", \\\"\[Rule]\\\", \
\\\"0\\\"}]}], \\\"\[RightAssociation]\\\"}]\\) in the part assignment is not \
a symbol.\"", 2, 347, 54, 19024688865372878773, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959217255272771*^9},
 CellLabel->
  "During evaluation of \
In[325]:=",ExpressionUUID->"c9313276-d908-4ca7-a1d5-905909dfcf05"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Association\\\", \\\"::\
\\\", \\\"setps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 347, 55, 19024688865372878773, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9592172552754183`*^9},
 CellLabel->
  "During evaluation of \
In[325]:=",ExpressionUUID->"2046cfd1-999b-46af-9683-13afccec31e2"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.9592172579762173`*^9},
 CellLabel->
  "Out[347]=",ExpressionUUID->"2ef0f8ad-5d0f-4712-b312-77dc7da0ea1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Ethernet", " ", "Simulation", " ", "Parameters"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"nStations", "=", "10"}], ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{"Number", " ", "of", " ", "stations"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"dataBits", "=", "4096"}], ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{"Data", " ", "packet", " ", "size", " ", "in", " ", "bits"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"ackBits", "=", "64"}], ";"}], "              ", 
   RowBox[{"(*", 
    RowBox[{"ACK", " ", "packet", " ", "size", " ", "in", " ", "bits"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"slotTime", "=", "16*^-6"}], ";"}], "         ", 
   RowBox[{"(*", 
    RowBox[{"Slot", " ", "time", " ", "in", " ", "seconds", " ", 
     RowBox[{"(", 
      RowBox[{"16", " ", "\[Mu]s"}], ")"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"dataRate", "=", "3*^6"}], ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{"Data", " ", 
     RowBox[{"rate", ":", 
      RowBox[{"3", " ", "Mbps"}]}]}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Derived", " ", "parameters"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"bitsPerSlot", "=", 
     RowBox[{"dataRate", "*", "slotTime"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"48", " ", 
     RowBox[{"bits", "/", "slot"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"dataSlots", "=", 
     RowBox[{"Ceiling", "[", 
      RowBox[{"dataBits", "/", "bitsPerSlot"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"86", " ", "slots"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"ackSlots", "=", 
     RowBox[{"Ceiling", "[", 
      RowBox[{"ackBits", "/", "bitsPerSlot"}], "]"}]}], ";"}], "   ", 
   RowBox[{"(*", 
    RowBox[{"2", " ", "slots"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"totalSlots", "=", "100000"}], ";"}], "        ", 
   RowBox[{"(*", 
    RowBox[{"Total", " ", "simulation", " ", "slots"}], "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"InitializeSimulation", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Station", " ", "state", " ", "arrays"}], "*)"}], 
       RowBox[{
        RowBox[{"state", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"\"\<READY\>\"", ",", 
           RowBox[{"{", "nStations", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"queue", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "<=", "nStations"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\"\<DATA\>\"", ",", 
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"i", ",", "nStations"}], "]"}], "+", "1"}]}], "}"}],
               "}"}], ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"backoffCounter", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "nStations", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"attempts", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "nStations", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"lastDataSendTime", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"{", "nStations", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Event", " ", "lists"}], "*)"}], 
        RowBox[{"ackEvents", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"endEvents", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"(*", "Statistics", "*)"}], 
        RowBox[{"dataPacketsSent", "=", "0"}], ";", "\n", 
        RowBox[{"ackPacketsSent", "=", "0"}], ";", "\n", 
        RowBox[{"collisions", "=", "0"}], ";", "\n", 
        RowBox[{"rttList", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Simulation", " ", "tracking"}], "*)"}], 
        RowBox[{"channelBusy", "=", "0"}], ";", "\n", 
        RowBox[{"{", 
         RowBox[{
         "state", ",", "queue", ",", "backoffCounter", ",", "attempts", ",", 
          "lastDataSendTime", ",", "ackEvents", ",", "endEvents", ",", 
          "dataPacketsSent", ",", "ackPacketsSent", ",", "collisions", ",", 
          "rttList", ",", "channelBusy"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RunSimulation", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "st", ",", "q", ",", "bc", ",", "att", ",", "ldt", ",", "aev", ",", 
         "eev", ",", "dps", ",", "aps", ",", "col", ",", "rtt", ",", "chb", 
         ",", "currentSlot", ",", "S", ",", "packet", ",", "dest", ",", 
         "duration", ",", "expo"}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Initialize", " ", "variables"}], "*)"}], 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "st", ",", "q", ",", "bc", ",", "att", ",", "ldt", ",", "aev", ",", 
           "eev", ",", "dps", ",", "aps", ",", "col", ",", "rtt", ",", 
           "chb"}], "}"}], "=", 
         RowBox[{"InitializeSimulation", "[", "]"}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Main", " ", "simulation", " ", "loop"}], "*)"}], 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"currentSlot", "=", "0"}], ",", 
          RowBox[{"currentSlot", "<", "totalSlots"}], ",", 
          RowBox[{"currentSlot", "++"}], ",", 
          RowBox[{"(*", 
           RowBox[{"Process", " ", "ACK", " ", "generation", " ", "events"}], 
           "*)"}], 
          RowBox[{
           RowBox[{"ackThisSlot", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"aev", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "==", "currentSlot"}], 
               "&"}]}], "]"}]}], ";", "\n", 
           RowBox[{"aev", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"aev", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ">", "currentSlot"}], 
               "&"}]}], "]"}]}], ";", "\n", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"q", "[", 
               RowBox[{"[", 
                RowBox[{"event", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "=", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{"q", "[", 
                 RowBox[{"[", 
                  RowBox[{"event", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<ACK\>\"", ",", 
                  RowBox[{"event", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"event", ",", "ackThisSlot"}], "}"}]}], "]"}], ";", 
           "\n", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Process", " ", "end"}], "-", "of", "-", 
             RowBox[{"transmission", " ", "events"}]}], "*)"}], 
           RowBox[{"endThisSlot", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"eev", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "==", "currentSlot"}], 
               "&"}]}], "]"}]}], ";", "\n", 
           RowBox[{"eev", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"eev", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ">", "currentSlot"}], 
               "&"}]}], "]"}]}], ";", "\n", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"station", "=", 
               RowBox[{"event", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", 
              RowBox[{"packet", "=", 
               RowBox[{"event", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ";", "\n", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"packet", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "==", "\"\<DATA\>\""}], ",", 
                RowBox[{"(*", 
                 RowBox[{
                 "Schedule", " ", "ACK", " ", "for", " ", "data", " ", 
                  "packet"}], "*)"}], 
                RowBox[{
                 RowBox[{"aev", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"aev", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"currentSlot", "+", "1"}], ",", 
                    RowBox[{"packet", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "station"}], "}"}]}],
                    "]"}]}], ";", "\n", 
                 RowBox[{
                  RowBox[{"st", "[", 
                   RowBox[{"[", "station", "]"}], "]"}], "=", 
                  "\"\<WAITING_ACK\>\""}]}], ",", 
                RowBox[{"(*", 
                 RowBox[{"ACK", " ", "packet", " ", "processing"}], "*)"}], 
                RowBox[{
                 RowBox[{
                  RowBox[{"st", "[", 
                   RowBox[{"[", "station", "]"}], "]"}], "=", 
                  "\"\<READY\>\""}], ";", "\n", 
                 RowBox[{"dest", "=", 
                  RowBox[{"packet", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", 
                 RowBox[{
                  RowBox[{"st", "[", 
                   RowBox[{"[", "dest", "]"}], "]"}], "=", "\"\<READY\>\""}], 
                 ";", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Destination", " ", "station", " ", "becomes", " ", 
                   "READY"}], "*)"}], 
                 RowBox[{"rtt", "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{"rtt", ",", 
                    RowBox[{"currentSlot", "-", 
                    RowBox[{"ldt", "[", 
                    RowBox[{"[", "dest", "]"}], "]"}]}]}], "]"}]}], ";", "\n", 
                 RowBox[{"(*", 
                  RowBox[{
                  "Generate", " ", "new", " ", "data", " ", "packet", " ", 
                   "for", " ", "destination"}], "*)"}], 
                 RowBox[{
                  RowBox[{"q", "[", 
                   RowBox[{"[", "dest", "]"}], "]"}], "=", 
                  RowBox[{"Append", "[", 
                   RowBox[{
                    RowBox[{"q", "[", 
                    RowBox[{"[", "dest", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<DATA\>\"", ",", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"dest", ",", "nStations"}], "]"}], "+", "1"}]}], 
                    "}"}]}], "]"}]}]}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"event", ",", "endThisSlot"}], "}"}]}], "]"}], ";", 
           "\n", 
           RowBox[{"(*", 
            RowBox[{
            "Update", " ", "backoff", " ", "counters", " ", "and", " ", 
             "find", " ", "contenders"}], "*)"}], 
           RowBox[{"S", "=", 
            RowBox[{"{", "}"}]}], ";", "\n", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"st", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "==", "\"\<READY\>\""}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"bc", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ">", "0"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"bc", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                   RowBox[{
                    RowBox[{"bc", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", "1"}]}], ";", "\n", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"bc", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "==", "0"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"S", ",", "i"}], "]"}]}], "]"}]}], ",", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"S", ",", "i"}], "]"}]}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Handle", " ", "transmission", " ", "attempts"}], "*)"}], 
           
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "S", "]"}], ">", "0"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "S", "]"}], "==", "1"}], ",", 
               RowBox[{
                RowBox[{"i", "=", 
                 RowBox[{"First", "[", "S", "]"}]}], ";", "\n", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"q", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ">", "0"}], ",", 
                  RowBox[{
                   RowBox[{"packet", "=", 
                    RowBox[{"First", "[", 
                    RowBox[{"q", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", "\n", 
                   RowBox[{
                    RowBox[{"q", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{"Rest", "[", 
                    RowBox[{"q", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", "\n", 
                   RowBox[{"dest", "=", 
                    RowBox[{"packet", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"packet", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", "\"\<DATA\>\""}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ldt", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", "currentSlot"}], ";",
                     "\n", 
                    RowBox[{"duration", "=", "dataSlots"}], ";", "\n", 
                    RowBox[{"dps", "=", 
                    RowBox[{"dps", "+", "1"}]}], ";", "\n", 
                    RowBox[{"eev", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"eev", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"currentSlot", "+", "duration"}], ",", "i", ",", 
                    "packet"}], "}"}]}], "]"}]}], ";", "\n", 
                    RowBox[{
                    RowBox[{"st", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    "\"\<TRANSMITTING\>\""}], ";", "\n", 
                    RowBox[{"chb", "+=", "duration"}]}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Track", " ", "channel", " ", "busy", " ", "time"}], 
                    "*)"}], 
                    RowBox[{"(*", 
                    RowBox[{"ACK", " ", "packet"}], "*)"}], 
                    RowBox[{
                    RowBox[{"duration", "=", "ackSlots"}], ";", "\n", 
                    RowBox[{"aps", "=", 
                    RowBox[{"aps", "+", "1"}]}], ";", "\n", 
                    RowBox[{"eev", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"eev", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"currentSlot", "+", "duration"}], ",", "i", ",", 
                    "packet"}], "}"}]}], "]"}]}], ";", "\n", 
                    RowBox[{
                    RowBox[{"st", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    "\"\<TRANSMITTING\>\""}], ";", "\n", 
                    RowBox[{"chb", "+=", "duration"}]}]}], "  ", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Track", " ", "channel", " ", "busy", " ", "time"}], 
                    "*)"}], "]"}]}]}], "]"}]}], ",", 
               RowBox[{"(*", 
                RowBox[{"Collision", " ", "handling"}], "*)"}], 
               RowBox[{
                RowBox[{"col", "=", 
                 RowBox[{"col", "+", 
                  RowBox[{"Length", "[", "S", "]"}]}]}], ";", "\n", 
                RowBox[{"Do", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"att", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"att", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", "1"}]}], ";", "\n", 
                   RowBox[{"expo", "=", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"att", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "10"}], "]"}]}], ";",
                    "\n", 
                   RowBox[{
                    RowBox[{"bc", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"2", "^", "expo"}], "-", "1"}]}], "}"}], 
                    "]"}]}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "S"}], "}"}]}], "]"}]}]}], "]"}]}], 
            "]"}]}]}], "]"}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{"Return", " ", "results"}], "*)"}], 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<DataPacketsSent\>\"", "->", "dps"}], ",", 
          RowBox[{"\"\<AckPacketsSent\>\"", "->", "aps"}], ",", 
          RowBox[{"\"\<Collisions\>\"", "->", "col"}], ",", 
          RowBox[{"\"\<AverageRTT\>\"", "->", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "rtt", "]"}], ">", "0"}], ",", 
             RowBox[{"Mean", "[", "rtt", "]"}], ",", "0"}], "]"}]}], ",", 
          RowBox[{"\"\<ChannelUtilization\>\"", "->", 
           RowBox[{"N", "[", 
            RowBox[{"chb", "/", "totalSlots"}], "]"}]}], ",", 
          RowBox[{"\"\<Throughput\>\"", "->", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"dps", "*", "dataBits"}], "+", 
               RowBox[{"aps", "*", "ackBits"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"totalSlots", "*", "slotTime"}], ")"}]}], "]"}]}], ",", 
          
          RowBox[{"\"\<RTTList\>\"", "->", "rtt"}]}], "|>"}]}]}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Run", " ", "the", " ", "simulation", " ", "and", " ", "display", " ", 
     "results"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"result", "=", 
     RowBox[{"RunSimulation", "[", "]"}]}], ";"}], "\n", 
   RowBox[{"TableForm", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Data Packets Sent\>\"", ",", 
         RowBox[{"result", "[", "\"\<DataPacketsSent\>\"", "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\"\<ACK Packets Sent\>\"", ",", 
         RowBox[{"result", "[", "\"\<AckPacketsSent\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Collisions\>\"", ",", 
         RowBox[{"result", "[", "\"\<Collisions\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Average RTT (slots)\>\"", ",", 
         RowBox[{"result", "[", "\"\<AverageRTT\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Channel Utilization\>\"", ",", 
         RowBox[{
          RowBox[{"NumberForm", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"result", "[", "\"\<ChannelUtilization\>\"", "]"}], "*", 
             "100"}], ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", "1"}], "}"}]}], "]"}], "<>", "\"\<%\>\""}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Throughput (Mbps)\>\"", ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"result", "[", "\"\<Throughput\>\"", "]"}], "/", 
            RowBox[{"10", "^", "6"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"TableHeadings", "->", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Metric\>\"", ",", "\"\<Value\>\""}], "}"}]}], "}"}]}]}],
     "]"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", "RTT", " ", "distribution"}], "*)"}], "\n", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"result", "[", "\"\<RTTList\>\"", "]"}], "]"}], ">", "0"}], 
     ",", 
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"result", "[", "\"\<RTTList\>\"", "]"}], ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<RTT (slots)\>\"", ",", "\"\<Frequency\>\""}], "}"}]}], 
       ",", 
       RowBox[{"PlotLabel", "->", "\"\<Round-Trip Time Distribution\>\""}], 
       ",", 
       RowBox[{"ImageSize", "->", "400"}], ",", 
       RowBox[{"ChartStyle", "->", "\"\<TemperatureMap\>\""}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.959217281669559*^9, 3.959217281670883*^9}},
 CellLabel->
  "In[510]:=",ExpressionUUID->"f1eae13c-e767-4e80-84be-603d68626ba2"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"0.9\\\\\\\"\\\", \\\"<>\\\", \\\"\\\\\\\"%\\\\\\\
\"\\\"}]\\).\"", 2, 522, 121, 19024688865372878773, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.959217282322082*^9},
 CellLabel->
  "During evaluation of \
In[510]:=",ExpressionUUID->"4527aabf-e834-4ce0-b264-1e6856dfe342"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Metric\"\>",
       HoldForm], 
      TagBox["\<\"Value\"\>",
       HoldForm]},
     {"\<\"Data Packets Sent\"\>", "10"},
     {"\<\"ACK Packets Sent\"\>", "0"},
     {"\<\"Collisions\"\>", "48"},
     {"\<\"Average RTT (slots)\"\>", "0"},
     {"\<\"Channel Utilization\"\>", 
      RowBox[{
       TagBox[
        InterpretationBox[
         StyleBox["\<\"0.9\"\>",
          ShowStringCharacters->False],
         0.86,
         AutoDelete->True],
        NumberForm[#, {3, 1}]& ], "<>", "\<\"%\"\>"}]},
     {"\<\"Throughput (Mbps)\"\>", 
      TagBox[
       InterpretationBox[
        StyleBox["\<\"0.03\"\>",
         ShowStringCharacters->False],
        0.025599999999999998`,
        AutoDelete->True],
       NumberForm[#, {4, 2}]& ]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {None, {"Metric", "Value"}}]]]], "Output",
 CellChangeTimes->{3.959217282326539*^9},
 CellLabel->
  "Out[522]//TableForm=",ExpressionUUID->"074ff673-827e-4c01-b3e8-\
d44665e09052"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"**", "**", "Simulation"}], " ", "Parameters"}], 
             "*****)"}], 
            RowBox[{
             RowBox[{
              RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n",
              "\n", 
             RowBox[{"(*", 
              RowBox[{"Physical", " ", "layer", " ", "constants"}], "*)"}], 
             "\n", 
             RowBox[{
              RowBox[{"propagationSpeed", "=", 
               RowBox[{
                RowBox[{"2", "/", "3"}], "*", "3*^8"}]}], ";"}], " ", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"2", "/", "3"}], " ", "speed", " ", "of", " ", "light",
                " ", "for", " ", "copper"}], "*)"}], "\n", 
             RowBox[{
              RowBox[{"bitRate", "=", "3*^6"}], ";"}], " ", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"3", " ", "Mbps"}], "-", 
               RowBox[{"Classic", " ", "Ethernet", " ", "rate"}]}], "*)"}], 
             "\n", 
             RowBox[{
              RowBox[{"slotTime", "=", "16*^-6"}], ";"}], " ", 
             RowBox[{"(*", 
              RowBox[{
              "Collision", " ", "detection", " ", "slot", " ", "time"}], 
              "*)"}], "\n", "\n", 
             RowBox[{"(*", 
              RowBox[{"Network", " ", "topology"}], "*)"}], "\n", 
             RowBox[{
              RowBox[{"nStations", "=", "8"}], ";"}], " ", 
             RowBox[{"(*", 
              RowBox[{"Contending", " ", "stations"}], "*)"}], "\n", 
             RowBox[{
              RowBox[{"cableLength", "=", "200"}], ";"}], " ", 
             RowBox[{"(*", 
              RowBox[{"Meters", "-", 
               RowBox[{"affects", " ", "propagation", " ", "delay"}]}], 
              "*)"}], "\n", "\n", 
             RowBox[{"(*", 
              RowBox[{"Packet", " ", "characteristics"}], "*)"}], "\n", 
             RowBox[{
              RowBox[{"dataPacketSize", "=", "4096"}], ";"}], " ", 
             RowBox[{"(*", 
              RowBox[{"Bits", "-", 
               RowBox[{"includes", " ", 
                RowBox[{"TCP", "/", "IP"}], " ", "headers"}]}], "*)"}], "\n", 
             
             RowBox[{
              RowBox[{"ackPacketSize", "=", "64"}], ";"}], " ", 
             RowBox[{"(*", 
              RowBox[{"Bits", "-", 
               RowBox[{"acknowledgment", " ", "packet", " ", "size"}]}], 
              "*)"}], "\n", 
             RowBox[{
              RowBox[{"packetRate", "=", "0.1"}], ";"}], " ", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
                RowBox[{"Packets", "/", "station"}], "/", "simulation"}], " ",
                "step"}], "*)"}], "\n", "\n", 
             RowBox[{"(*", 
              RowBox[{"TCP", " ", "behavior"}], "*)"}], "\n", 
             RowBox[{
              RowBox[{"ackTimeout", "=", "5*^-3"}], ";"}], " ", 
             RowBox[{"(*", 
              RowBox[{"Seconds", " ", "before", " ", "retransmission"}], 
              "*)"}], "\n", "\n", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"**", "**", "Helper"}], " ", "Functions"}], "*****)"}],
              "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"propagationDelay", "[", "distance_", "]"}], ":=", 
               RowBox[{"distance", "/", "propagationSpeed"}]}], ";"}], "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"transmissionTime", "[", "packetSize_", "]"}], ":=", 
               RowBox[{"packetSize", "/", "bitRate"}]}], ";"}], "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"backoffTime", "[", "attempt_", "]"}], ":=", 
               RowBox[{
                RowBox[{"RandomInteger", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{
                    RowBox[{"2", "^", 
                    RowBox[{"Min", "[", 
                    RowBox[{"attempt", ",", "10"}], "]"}]}], "-", "1"}]}], 
                  "}"}], "]"}], "*", "slotTime"}]}], ";"}], "\n", "\n", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"**", "**", "Station"}], " ", "Agent", " ", 
               "Definition"}], "*****)"}], "\n", 
             RowBox[{
              RowBox[{
               RowBox[{"createStation", "[", "id_", "]"}], ":=", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"<|", 
                  RowBox[{
                   RowBox[{"\"\<ID\>\"", "->", "id"}], ",", 
                   RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
                   RowBox[{"(*", 
                    RowBox[{
                    "IDLE", ",", "SENDING", ",", "BACKOFF", ",", "JAMMING"}], 
                    "*)"}], 
                   RowBox[{"\"\<Queue\>\"", "->", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"\"\<TxAttempts\>\"", "->", "0"}], ",", 
                   RowBox[{"\"\<BackoffCounter\>\"", "->", "0"}], ",", 
                   RowBox[{"\"\<OutstandingPackets\>\"", "->", 
                    RowBox[{"<|", "|>"}]}], ",", 
                   RowBox[{"\"\<RTTs\>\"", "->", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"\"\<Collisions\>\"", "->", "0"}], ",", 
                   RowBox[{"\"\<Stats\>\"", "->", 
                    RowBox[{"<|", 
                    RowBox[{
                    RowBox[{"\"\<Sent\>\"", "->", "0"}], ",", 
                    RowBox[{"\"\<Received\>\"", "->", "0"}], ",", 
                    RowBox[{"\"\<Lost\>\"", "->", "0"}]}], "|>"}]}]}], 
                  "|>"}]}], "]"}]}], ";"}], "\n", "\n", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"**", "**", "Event"}], " ", "Processing", " ", 
               "Engine"}], "*****)"}], "\n", 
             RowBox[{
              RowBox[{"processEvent", "[", 
               RowBox[{
               "event_", ",", "stations_", ",", "ether_", ",", 
                "currentTime_"}], "]"}], ":=", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{"Switch", "[", 
                 RowBox[{
                  RowBox[{"event", "[", "\"\<Type\>\"", "]"}], ",", 
                  "\"\<START_TX\>\"", ",", 
                  RowBox[{"Module", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"station", "=", 
                    RowBox[{"stations", "[", 
                    RowBox[{"[", 
                    RowBox[{"event", "[", "\"\<StationID\>\"", "]"}], "]"}], 
                    "]"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"station", "[", "\"\<State\>\"", "]"}], "===", 
                    "\"\<IDLE\>\""}], "&&", 
                    RowBox[{
                    RowBox[{"ether", "[", "\"\<State\>\"", "]"}], "===", 
                    "\"\<IDLE\>\""}]}], ",", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{"ether", "[", "\"\<Activity\>\"", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<SIGNAL_START\>\"", ",", 
                    RowBox[{"event", "[", "\"\<StationID\>\"", "]"}], ",", 
                    "currentTime", ",", 
                    RowBox[{"currentTime", "+", 
                    RowBox[{"transmissionTime", "[", 
                    RowBox[{"event", "[", "\"\<Size\>\"", "]"}], "]"}]}]}], 
                    "}"}]}], "]"}], ";", "\n", 
                    RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{"[", 
                    RowBox[{"event", "[", "\"\<StationID\>\"", "]"}], "]"}], 
                    "]"}], "=", 
                    RowBox[{"station", "[", 
                    RowBox[{"\"\<State\>\"", "->", "\"\<SENDING\>\""}], 
                    "]"}]}], ";", "\n", 
                    RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{"[", 
                    RowBox[{"event", "[", "\"\<StationID\>\"", "]"}], "]"}], 
                    "]"}], "=", 
                    RowBox[{"station", "[", 
                    RowBox[{"\"\<TxAttempts\>\"", "->", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<TxAttempts\>\"", "]"}], "+", 
                    "1"}]}], "]"}]}], ";", "\n", 
                    RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{"[", 
                    RowBox[{"event", "[", "\"\<StationID\>\"", "]"}], "]"}], 
                    "]"}], "=", 
                    RowBox[{"station", "[", 
                    RowBox[{"\"\<OutstandingPackets\>\"", "->", 
                    RowBox[{"AssociateTo", "[", 
                    RowBox[{
                    RowBox[{
                    "station", "[", "\"\<OutstandingPackets\>\"", "]"}], ",", 
                    
                    RowBox[{
                    RowBox[{"event", "[", "\"\<PacketID\>\"", "]"}], "->", 
                    "currentTime"}]}], "]"}]}], "]"}]}]}]}], "]"}], ",", 
                    "\"\<END_TX\>\"", ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"station", "=", 
                    RowBox[{"stations", "[", 
                    RowBox[{"[", 
                    RowBox[{"event", "[", "\"\<StationID\>\"", "]"}], "]"}], 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ether", "[", "\"\<State\>\"", "]"}], "=", 
                    "\"\<IDLE\>\""}], ";", "\n", 
                    RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{"[", 
                    RowBox[{"event", "[", "\"\<StationID\>\"", "]"}], "]"}], 
                    "]"}], "=", 
                    RowBox[{"station", "[", 
                    RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], "]"}]}], 
                    ";"}]}]}]}]}]}]}]}]}]}]}]}]}], "]"}], ",", 
           "\"\<COLLISION_DETECTED\>\"", ",", 
           RowBox[{"Module", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"station", "=", 
               RowBox[{"stations", "[", 
                RowBox[{"[", 
                 RowBox[{"event", "[", "\"\<StationID\>\"", "]"}], "]"}], 
                "]"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"stations", "[", 
                 RowBox[{"[", 
                  RowBox[{"event", "[", "\"\<StationID\>\"", "]"}], "]"}], 
                 "]"}], "=", 
                RowBox[{"station", "[", 
                 RowBox[{"\"\<State\>\"", "->", "\"\<JAMMING\>\""}], "]"}]}], 
               ";", "\n", 
               RowBox[{
                RowBox[{"stations", "[", 
                 RowBox[{"[", 
                  RowBox[{"event", "[", "\"\<StationID\>\"", "]"}], "]"}], 
                 "]"}], "=", 
                RowBox[{"station", "[", 
                 RowBox[{"\"\<Collisions\>\"", "->", 
                  RowBox[{
                   RowBox[{"station", "[", "\"\<Collisions\>\"", "]"}], "+", 
                   "1"}]}], "]"}]}], ";", "\n", 
               RowBox[{"AppendTo", "[", 
                RowBox[{
                 RowBox[{"ether", "[", "\"\<Activity\>\"", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<JAM_SIGNAL\>\"", ",", 
                   RowBox[{"event", "[", "\"\<StationID\>\"", "]"}], ",", 
                   "currentTime", ",", 
                   RowBox[{"currentTime", "+", "4*^-6"}]}], "}"}]}], " ", 
                RowBox[{"(*", 
                 RowBox[{"4", "\[Mu]s", " ", "jamming"}], "*)"}], "]"}], 
               ";"}]}]}]}]}], "]"}], ",", "\"\<ACK_RECEIVED\>\"", ",", 
         RowBox[{"Module", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"station", "=", 
             RowBox[{"stations", "[", 
              RowBox[{"[", 
               RowBox[{"event", "[", "\"\<StationID\>\"", "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"KeyExistsQ", "[", 
               RowBox[{
                RowBox[{"station", "[", "\"\<OutstandingPackets\>\"", "]"}], 
                ",", 
                RowBox[{"event", "[", "\"\<PacketID\>\"", "]"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{
                 RowBox[{"station", "[", "\"\<RTTs\>\"", "]"}], ",", 
                 RowBox[{"currentTime", "-", 
                  RowBox[{
                   RowBox[{
                   "station", "[", "\"\<OutstandingPackets\>\"", "]"}], "[", 
                   RowBox[{"event", "[", "\"\<PacketID\>\"", "]"}], "]"}]}]}],
                 "]"}], ";", "\n", 
               RowBox[{
                RowBox[{"stations", "[", 
                 RowBox[{"[", 
                  RowBox[{"event", "[", "\"\<StationID\>\"", "]"}], "]"}], 
                 "]"}], "=", 
                RowBox[{"station", "[", 
                 RowBox[{"\"\<OutstandingPackets\>\"", "->", 
                  RowBox[{"KeyDrop", "[", 
                   RowBox[{
                    RowBox[{
                    "station", "[", "\"\<OutstandingPackets\>\"", "]"}], ",", 
                    
                    RowBox[{"event", "[", "\"\<PacketID\>\"", "]"}]}], 
                   "]"}]}], "]"}]}], ";", "\n", 
               RowBox[{
                RowBox[{"stations", "[", 
                 RowBox[{"[", 
                  RowBox[{"event", "[", "\"\<StationID\>\"", "]"}], "]"}], 
                 "]"}], "=", 
                RowBox[{"station", "[", 
                 RowBox[{"\"\<Stats\>\"", ",", 
                  RowBox[{"\"\<Received\>\"", "->", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"station", "[", "\"\<Stats\>\"", "]"}], "[", 
                    "\"\<Received\>\"", "]"}], "+", "1"}]}]}], "]"}]}], 
               ";"}]}], "]"}]}]}]}]}], "]"}], "\n"}], "]"}], "\n"}], "]"}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "Main"}], " ", "Simulation", " ", "Loop"}], 
   "*****)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"simulateEthernet", "[", "steps_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"stations", ",", "ether", ",", 
        RowBox[{"currentTime", "=", "0"}], ",", "events", ",", 
        RowBox[{"packetCounter", "=", "1"}]}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Initialize", " ", "stations", " ", "and", " ", "ether"}], 
       "*)"}], 
      RowBox[{
       RowBox[{"stations", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"createStation", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}]}], ";", "\n", 
       RowBox[{"ether", "=", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], ",", 
          RowBox[{"\"\<Activity\>\"", "->", 
           RowBox[{"{", "}"}]}]}], "|>"}]}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Event", " ", "processing", " ", "loop"}], "*)"}], 
       RowBox[{"Do", "[", 
        RowBox[{"(*", 
         RowBox[{"Generate", " ", "new", " ", "packets"}], "*)"}], 
        RowBox[{
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"RandomReal", "[", "]"}], "<", "packetRate"}], ",", 
              RowBox[{
               RowBox[{"dest", "=", 
                RowBox[{"RandomChoice", "[", 
                 RowBox[{"DeleteCases", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", "nStations", "]"}], ",", "i"}], 
                  "]"}], "]"}]}], ";", "\n", 
               RowBox[{"packet", "=", 
                RowBox[{"<|", 
                 RowBox[{
                  RowBox[{"\"\<ID\>\"", "->", 
                   RowBox[{"packetCounter", "++"}]}], ",", 
                  RowBox[{"\"\<Source\>\"", "->", "i"}], ",", 
                  RowBox[{"\"\<Dest\>\"", "->", "dest"}], ",", 
                  RowBox[{"\"\<Size\>\"", "->", "dataPacketSize"}], ",", 
                  RowBox[{"\"\<SentTime\>\"", "->", 
                   RowBox[{"-", "1"}]}], ",", 
                  RowBox[{"\"\<Status\>\"", "->", "\"\<QUEUED\>\""}]}], 
                 "|>"}]}], ";", "\n", 
               RowBox[{
                RowBox[{"stations", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"stations", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"\"\<Queue\>\"", "->", 
                  RowBox[{"Append", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<Queue\>\"", 
                    "]"}], ",", "packet"}], "]"}]}], "]"}]}], ";"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Process", " ", "station", " ", "states"}], "*)"}], 
          RowBox[{"events", "=", 
           RowBox[{"{", "}"}]}], ";", "\n", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"station", "=", 
              RowBox[{"stations", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", 
             RowBox[{"Switch", "[", 
              RowBox[{
               RowBox[{"station", "[", "\"\<State\>\"", "]"}], ",", 
               "\"\<IDLE\>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", 
                   RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}], ">",
                   "0"}], ",", 
                 RowBox[{
                  RowBox[{"packet", "=", 
                   RowBox[{"First", "[", 
                    RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], 
                  ";", "\n", 
                  RowBox[{
                   RowBox[{"stations", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                   RowBox[{"station", "[", 
                    RowBox[{"\"\<Queue\>\"", "->", 
                    RowBox[{"Rest", "[", 
                    RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "]"}]}], 
                    "]"}]}], ";", "\n", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"events", ",", 
                    RowBox[{"<|", 
                    RowBox[{
                    RowBox[{"\"\<Type\>\"", "->", "\"\<START_TX\>\""}], ",", 
                    RowBox[{"\"\<StationID\>\"", "->", "i"}], ",", 
                    RowBox[{"\"\<PacketID\>\"", "->", 
                    RowBox[{"packet", "[", "\"\<ID\>\"", "]"}]}], ",", 
                    RowBox[{"\"\<Size\>\"", "->", 
                    RowBox[{"packet", "[", "\"\<Size\>\"", "]"}]}], ",", 
                    RowBox[{"\"\<Time\>\"", "->", "currentTime"}]}], "|>"}]}],
                    "]"}], ";"}]}], "]"}], ",", "\"\<SENDING\>\"", ",", 
               RowBox[{"(*", 
                RowBox[{"Check", " ", "for", " ", "collisions"}], "*)"}], 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Count", "[", 
                   RowBox[{
                    RowBox[{"ether", "[", "\"\<Activity\>\"", "]"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "start_", ",", "end_"}], 
                    "}"}], "/;", 
                    RowBox[{"start", "<=", "currentTime", "<=", "end"}]}]}], 
                   "]"}], ">", "1"}], ",", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"events", ",", 
                   RowBox[{"<|", 
                    RowBox[{
                    RowBox[{
                    "\"\<Type\>\"", "->", "\"\<COLLISION_DETECTED\>\""}], ",", 
                    RowBox[{"\"\<StationID\>\"", "->", "i"}]}], "|>"}]}], 
                  "]"}]}], "]"}], ",", "\"\<JAMMING\>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ether", "[", "\"\<State\>\"", "]"}], "===", 
                  "\"\<IDLE\>\""}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"stations", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                   RowBox[{"station", "[", 
                    RowBox[{"\"\<State\>\"", "->", "\"\<BACKOFF\>\""}], 
                    "]"}]}], ";", "\n", 
                  RowBox[{
                   RowBox[{"stations", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                   RowBox[{"station", "[", 
                    RowBox[{"\"\<BackoffCounter\>\"", "->", 
                    RowBox[{"backoffTime", "[", 
                    RowBox[{"station", "[", "\"\<TxAttempts\>\"", "]"}], 
                    "]"}]}], "]"}]}], ";"}]}], "]"}], ",", "\"\<BACKOFF\>\"", 
               ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"stations", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "=", 
                 RowBox[{"station", "[", 
                  RowBox[{"\"\<BackoffCounter\>\"", "->", 
                   RowBox[{
                    RowBox[{"station", "[", "\"\<BackoffCounter\>\"", "]"}], 
                    "-", "1"}]}], "]"}]}], ";", "\n", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"station", "[", "\"\<BackoffCounter\>\"", "]"}], "<=",
                    "0"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{"station", "[", 
                    RowBox[{"\"\<State\>\"", "->", "\"\<IDLE\>\""}], "]"}]}], 
                   ";"}]}], "]"}]}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Process", " ", "ACK", " ", "timeouts"}], "*)"}], 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"station", "=", 
              RowBox[{"stations", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", 
             RowBox[{"KeyValueMap", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"currentTime", "-", "#2"}], ">", "ackTimeout"}], 
                  ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{"station", "[", 
                    RowBox[{"\"\<Stats\>\"", ",", 
                    RowBox[{"\"\<Lost\>\"", "->", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"station", "[", "\"\<Stats\>\"", "]"}], "[", 
                    "\"\<Lost\>\"", "]"}], "+", "1"}]}]}], "]"}]}], ";", "\n", 
                   RowBox[{
                    RowBox[{"stations", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{"station", "[", 
                    RowBox[{"\"\<OutstandingPackets\>\"", "->", 
                    RowBox[{"KeyDrop", "[", 
                    RowBox[{
                    RowBox[{
                    "station", "[", "\"\<OutstandingPackets\>\"", "]"}], ",", 
                    "#1"}], "]"}]}], "]"}]}], ";", "\n", 
                   RowBox[{"(*", 
                    RowBox[{"Reschedule", " ", "packet"}], "*)"}], 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], ",", 
                    RowBox[{"<|", 
                    RowBox[{
                    RowBox[{"\"\<ID\>\"", "->", "#1"}], ",", 
                    RowBox[{"\"\<Size\>\"", "->", "dataPacketSize"}], ",", 
                    RowBox[{"\"\<Source\>\"", "->", "i"}], ",", 
                    RowBox[{"\"\<Dest\>\"", "->", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"station", "[", "\"\<Queue\>\"", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Dest\>\"", 
                    "]"}]}]}], "|>"}]}], "]"}], ";"}]}], "]"}], "&"}], ",", 
               RowBox[{"station", "[", "\"\<OutstandingPackets\>\"", "]"}]}], 
              "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Process", " ", "events"}], "*)"}], 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"processEvent", "[", 
             RowBox[{
             "event", ",", "stations", ",", "ether", ",", "currentTime"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"event", ",", "events"}], "}"}]}], "]"}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Update", " ", "ether", " ", "state"}], "*)"}], 
          RowBox[{
           RowBox[{"ether", "[", "\"\<State\>\"", "]"}], "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Count", "[", 
               RowBox[{
                RowBox[{"ether", "[", "\"\<Activity\>\"", "]"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"_", ",", "_", ",", "start_", ",", "end_"}], "}"}], 
                 "/;", 
                 RowBox[{"start", "<=", "currentTime", "<=", "end"}]}]}], 
               "]"}], ">", "0"}], ",", "\"\<BUSY\>\"", ",", "\"\<IDLE\>\""}], 
            "]"}]}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{"Advance", " ", "time"}], "*)"}], 
          RowBox[{"currentTime", "+=", 
           RowBox[{"10", "^", 
            RowBox[{"-", "6"}]}]}], ";"}], " ", 
         RowBox[{"(*", 
          RowBox[{"1", "\[Mu]s", " ", "time", " ", "step"}], "*)"}], ",", 
         RowBox[{"{", "steps", "}"}]}], "]"}], ";", "\n", 
       RowBox[{"(*", 
        RowBox[{"Return", " ", "simulation", " ", "results"}], "*)"}], 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Stations\>\"", "->", "stations"}], ",", 
         RowBox[{"\"\<EtherActivity\>\"", "->", 
          RowBox[{"ether", "[", "\"\<Activity\>\"", "]"}]}], ",", 
         RowBox[{"\"\<RoundTripTimes\>\"", "->", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"station", "[", "\"\<RTTs\>\"", "]"}], "&"}], "/@", 
            "stations"}], "]"}]}]}], "|>"}]}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"**", "**", "Run"}], " ", "Simulation"}], "&"}], " ", 
    "Visualize", " ", "Results"}], "*****)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"simResults", "=", 
    RowBox[{"simulateEthernet", "[", "5000", "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"5", "ms", " ", "simulation"}], "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Visualization", " ", "1"}], ":", 
    RowBox[{"Channel", " ", "Utilization"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"activityPlot", "=", 
    RowBox[{"TimelinePlot", "[", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"simResults", "[", "\"\<EtherActivity\>\"", "]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"type_", ",", "id_", ",", "start_", ",", "end_"}], "}"}], ":>", 
         RowBox[{"Labeled", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"start", ",", "end"}], "}"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{"\"\<STA \>\"", ",", "id", ",", 
                RowBox[{"Switch", "[", 
                 RowBox[{
                 "type", ",", "\"\<SIGNAL_START\>\"", ",", "\"\< TX\>\"", 
                  ",", "\"\<JAM_SIGNAL\>\"", ",", "\"\< JAM\>\""}], "]"}]}], 
               "}"}], "]"}], ",", "8"}], "]"}], ",", "Bottom"}], "]"}]}]}], 
       "]"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<Ethernet Channel Activity (CSMA/CD)\>\""}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Stations\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "->", "800"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Visualization", " ", "2"}], ":", 
    RowBox[{"Round", "-", 
     RowBox[{"Trip", " ", "Time", " ", "Distribution"}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rttHist", "=", 
    RowBox[{"Histogram", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"simResults", "[", "\"\<RoundTripTimes\>\"", "]"}], "*", 
       "1000"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Convert", " ", "to", " ", "ms"}], "*)"}], 
      RowBox[{"{", "0.1", "}"}], ",", 
      RowBox[{
      "PlotLabel", "->", "\"\<TCP-like Round-Trip Times over Ethernet\>\""}], 
      ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<RTT (ms)\>\"", ",", "\"\<Frequency\>\""}], "}"}]}], ",", 
      
      RowBox[{"ChartStyle", "->", "\"\<TemperatureMap\>\""}], ",", 
      RowBox[{"ImageSize", "->", "500"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Visualization", " ", "3"}], ":", 
    RowBox[{"Station", " ", "Statistics"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"statsGrid", "=", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"s", "=", 
              RowBox[{
               RowBox[{"simResults", "[", "\"\<Stations\>\"", "]"}], "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{
               RowBox[{"s", "[", "\"\<Stats\>\"", "]"}], "[", "\"\<Sent\>\"", 
               "]"}], ",", 
              RowBox[{
               RowBox[{"s", "[", "\"\<Stats\>\"", "]"}], "[", 
               "\"\<Received\>\"", "]"}], ",", 
              RowBox[{
               RowBox[{"s", "[", "\"\<Stats\>\"", "]"}], "[", "\"\<Lost\>\"", 
               "]"}], ",", 
              RowBox[{"s", "[", "\"\<Collisions\>\"", "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"s", "[", "\"\<RTTs\>\"", "]"}], "]"}], ">", "0"}], 
               "\[And]", 
               RowBox[{
                RowBox[{"Mean", "[", 
                 RowBox[{"s", "[", "\"\<RTTs\>\"", "]"}], "]"}], "*", 
                "1000"}]}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "nStations"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Station\>\"", ",", "\"\<Sent\>\"", ",", "\"\<Received\>\"", 
          ",", "\"\<Lost\>\"", ",", "\"\<Collisions\>\"", ",", 
          "\"\<Avg RTT (ms)\>\""}], "}"}]}], "]"}], ",", 
      RowBox[{"Frame", "->", "All"}], ",", 
      RowBox[{"Background", "->", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"LightBlue", ",", 
           RowBox[{"{", 
            RowBox[{"White", ",", "LightGray"}], "}"}]}], "}"}]}], "}"}]}], 
      ",", 
      RowBox[{"Alignment", "->", "Center"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Display", " ", "all", " ", "results"}], "*)"}]}], "\n", 
 RowBox[{"Column", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Half-Duplex Ethernet CSMA/CD Simulation Results\>\"", ",", 
      "\"\<Section\>\""}], "]"}], ",", "activityPlot", ",", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{"rttHist", ",", "statsGrid"}], "}"}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.959217311918635*^9, 3.959217311919794*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[732]:=",ExpressionUUID->"3f59097a-b3c6-40bf-b1a1-94c0627dc358"]
},
WindowSize->{763, 863},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"27db16e5-29aa-40be-bca8-e491423b794f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 40853, 1046, 6009, "Input",ExpressionUUID->"2f3b3aac-c6f1-4661-bf91-9bcf965836ad"],
Cell[41436, 1070, 5743, 149, 670, "Output",ExpressionUUID->"e77344d9-eb1b-47a2-9f3f-1a1ef21213ef"],
Cell[47182, 1221, 9470, 207, 868, "Output",ExpressionUUID->"b9e9e20d-5c2e-4931-8282-59844826a9ef"],
Cell[56655, 1430, 12821, 333, 842, "Output",ExpressionUUID->"89c109e7-b12e-4115-bf66-d2e626bacf24"],
Cell[69479, 1765, 1986, 56, 215, "Output",ExpressionUUID->"b9818899-7210-4fea-a1f5-76483b735b20"],
Cell[71468, 1823, 1584, 45, 251, "Output",ExpressionUUID->"c480d8cc-b0df-4b11-8ce2-70ebb27229b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73089, 1873, 27272, 674, 3995, "Input",ExpressionUUID->"9304f824-24e2-484b-a282-967fd963be52"],
Cell[100364, 2549, 226, 4, 28, "Print",ExpressionUUID->"5c0753ee-b835-4eb4-b9a1-9b1e2d63b15c"],
Cell[100593, 2555, 27383, 631, 899, "Output",ExpressionUUID->"dd45592a-5bff-4e2b-9fe5-de0657dee13f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128013, 3191, 20593, 560, 3275, "Input",ExpressionUUID->"6833db9b-be94-4d71-808c-ce7e9bf283fe"],
Cell[CellGroupData[{
Cell[148631, 3755, 348, 9, 28, "Print",ExpressionUUID->"193e63a3-57b5-4aa3-a051-914b3ae98ae3"],
Cell[148982, 3766, 339, 8, 28, "Print",ExpressionUUID->"8771b55b-33e2-4085-bda4-cb2d95898b5e"]
}, Open  ]],
Cell[149336, 3777, 2381, 46, 565, "Output",ExpressionUUID->"94e2ab91-68a1-445f-9b5b-cde38dbce03b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151754, 3828, 33605, 843, 4929, "Input",ExpressionUUID->"8592322d-40de-404a-abbc-16ea1aabff86"],
Cell[185362, 4673, 409, 9, 35, "Message",ExpressionUUID->"bc55b2fe-d66c-45f6-b390-1d662d8e4c07"],
Cell[CellGroupData[{
Cell[185796, 4686, 221, 4, 28, "Print",ExpressionUUID->"91aae255-5c6f-4864-bff8-9a28799d3ec1"],
Cell[186020, 4692, 227, 4, 28, "Print",ExpressionUUID->"9aabaf88-be15-493d-b99f-c33c0ca2b563"],
Cell[186250, 4698, 331, 8, 28, "Print",ExpressionUUID->"0f2340b8-2ac2-4f27-b2aa-daa0e625c0a9"],
Cell[186584, 4708, 325, 8, 28, "Print",ExpressionUUID->"bd516965-438f-4692-8094-deb021edb3b0"],
Cell[186912, 4718, 586, 16, 28, "Print",ExpressionUUID->"41c43923-e339-4742-848c-02582d4bb8f8"],
Cell[187501, 4736, 409, 9, 28, "Print",ExpressionUUID->"24ebf814-f21a-4f50-87d1-b8e921e6b863"],
Cell[187913, 4747, 397, 9, 28, "Print",ExpressionUUID->"bf707c5a-9885-4133-b2a9-34948e62a99c"],
Cell[188313, 4758, 183, 4, 28, "Print",ExpressionUUID->"aeba8be9-ec8d-4e68-a035-05615498cabd"],
Cell[188499, 4764, 217, 4, 28, "Print",ExpressionUUID->"2d70ded7-6bf5-4d9a-854e-98a60e8fd784"],
Cell[188719, 4770, 225, 4, 28, "Print",ExpressionUUID->"90ac055f-783c-46db-9f09-3a7211e3a389"],
Cell[188947, 4776, 329, 8, 28, "Print",ExpressionUUID->"b4ef4c6e-e3da-4efd-a561-48a845d36d50"],
Cell[189279, 4786, 321, 8, 28, "Print",ExpressionUUID->"4f195571-caa8-432f-9573-e7d7bbd71e74"],
Cell[189603, 4796, 554, 16, 28, "Print",ExpressionUUID->"4ebc8739-b235-4c19-a6a1-d16904e45a97"],
Cell[190160, 4814, 410, 9, 28, "Print",ExpressionUUID->"ef5fae72-c64a-4d3d-a6dd-6c0765eff026"],
Cell[190573, 4825, 397, 9, 28, "Print",ExpressionUUID->"a9ee59f1-d8f4-4b5a-85ad-53a68df05bb7"],
Cell[190973, 4836, 182, 4, 28, "Print",ExpressionUUID->"32e47cf9-34d6-442a-a646-a48d6d10fe81"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191204, 4846, 31303, 797, 4332, "Input",ExpressionUUID->"a6c729f7-fb3a-4fb1-a58e-c5110e4bf228"],
Cell[222510, 5645, 409, 9, 35, "Message",ExpressionUUID->"6b95747e-851a-4c56-bcf0-e01be168ab4f"],
Cell[222922, 5656, 161, 3, 59, "Output",ExpressionUUID->"0761fda4-aef4-4d50-a22e-a8a20b6b78d8"],
Cell[CellGroupData[{
Cell[223108, 5663, 438, 10, 48, "Print",ExpressionUUID->"89721fb4-f98d-4c7a-80e6-8765d1f725f2"],
Cell[223549, 5675, 211, 4, 52, "Print",ExpressionUUID->"c3ef703f-2516-4cc2-9dc8-0d2c2d3bbce2"]
}, Open  ]],
Cell[223775, 5682, 48788, 934, 269, "Output",ExpressionUUID->"187e9e4c-ebd5-4232-8ffb-6c9468530313"],
Cell[272566, 6618, 215, 4, 52, "Print",ExpressionUUID->"95104337-b61e-456b-9ab1-398de1a64557"],
Cell[272784, 6624, 170, 3, 59, "Output",ExpressionUUID->"8ee8a587-eb61-4d4b-89b8-665755f0daea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272991, 6632, 28283, 806, 4497, "Input",ExpressionUUID->"e3252a12-ab00-4df1-94bf-4d97b91cf540"],
Cell[CellGroupData[{
Cell[301299, 7442, 202, 4, 28, "Print",ExpressionUUID->"772a9d3b-fdd0-4c13-9ea5-b59bd3bb7b17"],
Cell[301504, 7448, 712, 23, 48, "Print",ExpressionUUID->"80ddb5f7-356f-4202-84d6-ad3368580d2f"],
Cell[302219, 7473, 317, 8, 28, "Print",ExpressionUUID->"dac665fc-e93c-4d67-8571-b941d118a5dc"],
Cell[302539, 7483, 341, 8, 28, "Print",ExpressionUUID->"c5962c66-8a5e-484b-8894-c4bafb3e02c8"],
Cell[302883, 7493, 315, 8, 28, "Print",ExpressionUUID->"c51a2be1-3f00-41fe-aea1-d635d1f2973a"],
Cell[303201, 7503, 719, 23, 48, "Print",ExpressionUUID->"ee68715b-b499-40d7-8efe-49aefc26e36d"],
Cell[303923, 7528, 528, 16, 28, "Print",ExpressionUUID->"e28e14ff-bb2b-4996-b492-99eaa2e5ff3f"],
Cell[304454, 7546, 702, 23, 48, "Print",ExpressionUUID->"23583199-7f5d-4d03-8a9d-64084e3eb716"]
}, Open  ]],
Cell[305171, 7572, 12075, 290, 375, "Output",ExpressionUUID->"77526708-3ae0-4276-9678-458a66d60dde"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317283, 7867, 35707, 932, 5124, "Input",ExpressionUUID->"e50e076b-22d4-4e20-9462-42f0b807b889"],
Cell[352993, 8801, 407, 9, 35, "Message",ExpressionUUID->"09142a5b-a4ee-4a12-a483-b234b8744e9a"],
Cell[353403, 8812, 1184, 20, 57, "Message",ExpressionUUID->"a00e50e4-3245-48e4-91cb-c02edd825ed7"],
Cell[354590, 8834, 1184, 20, 57, "Message",ExpressionUUID->"e9fc8a49-777f-443c-8103-745bde0f02cd"],
Cell[355777, 8856, 1184, 20, 57, "Message",ExpressionUUID->"4a8093b3-4c70-4bef-924b-fc426ef29b2d"],
Cell[356964, 8878, 462, 10, 35, "Message",ExpressionUUID->"53f2cb08-da6a-4bf6-9dad-b2a3e7dca6cd"],
Cell[CellGroupData[{
Cell[357451, 8892, 209, 4, 28, "Print",ExpressionUUID->"54b147e9-946f-4718-8c7e-96adb3bf6121"],
Cell[357663, 8898, 732, 23, 48, "Print",ExpressionUUID->"78efc2f6-565d-4a6d-a137-58e226d11a66"],
Cell[358398, 8923, 534, 16, 28, "Print",ExpressionUUID->"3555ad67-d0ee-4c9a-b941-9f6fb66d74ec"],
Cell[358935, 8941, 526, 16, 28, "Print",ExpressionUUID->"5c43bc8f-ca46-42d1-9811-e9d54dd33f18"],
Cell[359464, 8959, 325, 8, 28, "Print",ExpressionUUID->"f3e37ecd-0e3f-4da2-9c0c-31391dcdf282"],
Cell[359792, 8969, 327, 8, 28, "Print",ExpressionUUID->"ca98bf02-01d9-485c-af7c-a0a8bef0f3f7"]
}, Open  ]],
Cell[360134, 8980, 1405, 23, 81, "Message",ExpressionUUID->"fc1e8f85-94f7-4487-b4e9-14dbec4a2dea"],
Cell[361542, 9005, 12255, 335, 649, "Output",ExpressionUUID->"27cbd5f8-4b5f-4cbc-968d-97e2a10cec72"],
Cell[373800, 9342, 6136, 150, 411, "Output",ExpressionUUID->"5df468fb-49af-4029-899b-b319d49fa9e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379973, 9497, 27930, 738, 4642, "Input",ExpressionUUID->"5463c956-9294-460f-b9a0-e392c6591bd1"],
Cell[407906, 10237, 161, 3, 59, "Output",ExpressionUUID->"ad41465d-fbf3-4d23-9d48-4b522a82c361"],
Cell[CellGroupData[{
Cell[408092, 10244, 214, 4, 28, "Print",ExpressionUUID->"6fe29547-1228-4605-9b4d-3fd09acba736"],
Cell[408309, 10250, 534, 16, 28, "Print",ExpressionUUID->"e8325b8a-d82a-49e5-9147-9a53adc475ef"],
Cell[408846, 10268, 577, 16, 28, "Print",ExpressionUUID->"346e9bfe-9f4d-42be-8f27-188c0b78f11f"],
Cell[409426, 10286, 562, 16, 28, "Print",ExpressionUUID->"17d6e08b-ebd8-433d-8566-153ece2440bc"],
Cell[409991, 10304, 333, 8, 28, "Print",ExpressionUUID->"605555d5-aa2c-4ea0-939e-1eb5354f73a0"],
Cell[410327, 10314, 320, 8, 28, "Print",ExpressionUUID->"2474641e-e418-4f7a-b412-6bcb706e1a30"]
}, Open  ]],
Cell[410662, 10325, 726, 14, 78, "Message",ExpressionUUID->"8759a8d3-3acd-47c3-95ad-64192b2e3ecf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411425, 10344, 36703, 983, 5461, "Input",ExpressionUUID->"28758bb7-9c8b-43c8-9a72-7cf16cc48a9b"],
Cell[448131, 11329, 729, 14, 70, "Message",ExpressionUUID->"e43c31a1-d386-463d-b1c4-5b3767aba07b"],
Cell[CellGroupData[{
Cell[448885, 11347, 205, 4, 28, "Print",ExpressionUUID->"4d3d0fc5-032d-48ec-b8ed-dfe22da7c3a4"],
Cell[449093, 11353, 728, 23, 48, "Print",ExpressionUUID->"4dd677f5-115e-43e5-beb1-96c5ab6a14d6"],
Cell[449824, 11378, 575, 16, 29, "Print",ExpressionUUID->"d9c4ba16-84b3-46a0-b56e-ade5c8a2044c"],
Cell[450402, 11396, 529, 16, 29, "Print",ExpressionUUID->"e8f7729f-ae87-4f9a-82b0-151a7c574b86"]
}, Open  ]],
Cell[450946, 11415, 726, 14, 70, "Message",ExpressionUUID->"9cd1de4d-341d-4e0e-b87d-5f9388afcd77"],
Cell[451675, 11431, 541, 11, 57, "Message",ExpressionUUID->"c40ca36c-8ee8-4ff3-afa7-83ef652ce90a"],
Cell[452219, 11444, 541, 11, 57, "Message",ExpressionUUID->"591ecd04-22d8-4084-9a77-79d4b352a943"],
Cell[452763, 11457, 541, 11, 57, "Message",ExpressionUUID->"6a4e1746-baf0-4aa9-b33b-e6649f1d19fb"],
Cell[453307, 11470, 464, 10, 35, "Message",ExpressionUUID->"f1d27b00-c622-4559-9977-bbf8c674f04e"],
Cell[CellGroupData[{
Cell[453796, 11484, 205, 4, 52, "Print",ExpressionUUID->"f8138ae7-b6bc-4e34-8a5a-8949db980003"],
Cell[454004, 11490, 339, 8, 28, "Print",ExpressionUUID->"f5bc86cc-0939-424a-a290-1ef043dc62b4"],
Cell[454346, 11500, 323, 8, 28, "Print",ExpressionUUID->"11c7a83d-59ae-41e4-ae63-621c155f4197"],
Cell[454672, 11510, 538, 16, 28, "Print",ExpressionUUID->"9ff0af41-22d2-4d74-8fbe-def4870e5263"],
Cell[455213, 11528, 530, 16, 28, "Print",ExpressionUUID->"67f5b18f-d18d-4e31-86b4-d3710c791c78"]
}, Open  ]],
Cell[455758, 11547, 6752, 176, 431, "Output",ExpressionUUID->"d9a76452-b711-4b1e-ac2f-a17766a03161"],
Cell[462513, 11725, 6767, 177, 431, "Output",ExpressionUUID->"a287b200-d129-41a0-b8d8-eb93ee46cd99"],
Cell[469283, 11904, 698, 16, 99, "Output",ExpressionUUID->"a517df6b-9283-432e-9fb0-e69a876e89ce"],
Cell[469984, 11922, 689, 12, 78, "Message",ExpressionUUID->"aafde64d-6edb-47e1-b604-a431ea4a498f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470710, 11939, 25034, 626, 3441, "Input",ExpressionUUID->"4efc44e2-2f98-4d90-85b0-66b6483d58fd"],
Cell[495747, 12567, 10312, 238, 436, "Output",ExpressionUUID->"6f5ba634-2164-4c4f-881f-16d2ec139e6e"],
Cell[506062, 12807, 4943, 130, 444, "Output",ExpressionUUID->"bc6fc263-98e8-4171-9f86-362a81c7b8ea"],
Cell[CellGroupData[{
Cell[511030, 12941, 205, 4, 28, "Print",ExpressionUUID->"ab824785-bd0e-409e-86a2-ed473263f044"],
Cell[511238, 12947, 607, 13, 52, "Print",ExpressionUUID->"d39e1f9a-7f3a-49ff-a451-40def6b79c8c"],
Cell[511848, 12962, 327, 8, 52, "Print",ExpressionUUID->"8fa61928-e409-4e8e-aaef-2b2456e6f49e"],
Cell[512178, 12972, 322, 8, 28, "Print",ExpressionUUID->"54202ca6-ea3d-498b-a28c-08b76300ce9c"],
Cell[512503, 12982, 322, 8, 28, "Print",ExpressionUUID->"66ca73f3-49de-49c5-b771-66b6010a9505"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[512874, 12996, 34564, 888, 5581, "Input",ExpressionUUID->"8b0fb3b6-f20a-41fb-b6bd-2dba22b5bb92"],
Cell[547441, 13886, 496, 11, 46, "Message",ExpressionUUID->"41ee6805-9ad0-4a2c-981a-242157d25b06"],
Cell[CellGroupData[{
Cell[547962, 13901, 203, 4, 28, "Print",ExpressionUUID->"cdf2efba-2aca-4a37-8524-371383bd7cba"],
Cell[548168, 13907, 385, 9, 28, "Print",ExpressionUUID->"fb3a1a24-b1c6-4ca3-83f2-e7c353fe6e09"],
Cell[548556, 13918, 384, 9, 31, "Print",ExpressionUUID->"f960dc42-cd87-4b61-82dd-719e4f91562d"],
Cell[548943, 13929, 406, 9, 28, "Print",ExpressionUUID->"183183ae-0eff-433d-8eb5-67617b815aca"],
Cell[549352, 13940, 234, 5, 52, "Print",ExpressionUUID->"0a6013ee-c569-4530-8d29-0378cf485032"],
Cell[549589, 13947, 224, 4, 28, "Print",ExpressionUUID->"878b99af-74fa-4280-9e72-e4a780806009"],
Cell[549816, 13953, 420, 10, 28, "Print",ExpressionUUID->"8497bdeb-41ba-41a3-ac8a-1eb0011b1cc8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[550285, 13969, 30817, 767, 4186, "Input",ExpressionUUID->"c3a4fe16-3b52-4094-99d5-66db263844a1"],
Cell[581105, 14738, 465, 11, 47, "Message",ExpressionUUID->"b5e3c0f6-d31f-4a15-bf21-ffc67238afa3"],
Cell[CellGroupData[{
Cell[581595, 14753, 212, 4, 28, "Print",ExpressionUUID->"44625fec-1d04-46f7-a7e3-0b4fed8cc123"],
Cell[581810, 14759, 715, 23, 48, "Print",ExpressionUUID->"1fb374e4-d754-4704-bc2f-af3fba41ffc1"],
Cell[582528, 14784, 730, 23, 48, "Print",ExpressionUUID->"c57c18d6-e4ef-447f-aba2-1c1f1e9ea40c"],
Cell[583261, 14809, 538, 16, 28, "Print",ExpressionUUID->"407f258a-cb04-410f-8da5-d129ded8d33c"],
Cell[583802, 14827, 338, 8, 28, "Print",ExpressionUUID->"75905813-b521-42ca-814f-ac4960eb4497"],
Cell[584143, 14837, 339, 8, 28, "Print",ExpressionUUID->"5dc24dbf-0c70-4d8d-9658-187678d39309"],
Cell[584485, 14847, 222, 4, 52, "Print",ExpressionUUID->"436ca260-c43e-4bb3-8e1b-6d39d3334fa4"],
Cell[584710, 14853, 727, 23, 48, "Print",ExpressionUUID->"52dab6d4-c072-4e8d-aa6b-b10666e0a9d4"],
Cell[585440, 14878, 722, 23, 48, "Print",ExpressionUUID->"54fb86a1-3c35-4eb8-a4cf-9942ff8bcec9"],
Cell[586165, 14903, 720, 23, 48, "Print",ExpressionUUID->"76b2322d-0da5-4435-bbd8-0095ccb233f7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[586934, 14932, 36226, 964, 5313, "Input",ExpressionUUID->"7afee7a1-d7d6-496b-af49-20e674711316"],
Cell[623163, 15898, 749, 15, 70, "Message",ExpressionUUID->"f4cbb6c3-fa8c-43b0-8b4c-4ee629f62a45"],
Cell[623915, 15915, 1291, 22, 78, "Message",ExpressionUUID->"0d01bae9-e64a-4eaf-81f1-60f4927a04ff"],
Cell[625209, 15939, 1289, 22, 78, "Message",ExpressionUUID->"bc6a8980-7eaf-4df8-afd6-bb7fac5864f9"],
Cell[626501, 15963, 1288, 22, 78, "Message",ExpressionUUID->"712ba76c-af77-44df-885a-f57bf3fb26bd"],
Cell[627792, 15987, 462, 10, 35, "Message",ExpressionUUID->"d6c77644-91da-4261-b0e2-78fdbffe05c9"],
Cell[CellGroupData[{
Cell[628279, 16001, 326, 8, 28, "Print",ExpressionUUID->"b30e2514-9a05-4c42-8a91-bde6c8b71187"],
Cell[628608, 16011, 317, 8, 28, "Print",ExpressionUUID->"062eb537-2e90-40fe-8002-296f251ac490"]
}, Open  ]],
Cell[628940, 16022, 726, 14, 70, "Message",ExpressionUUID->"fa1b8bf6-b403-42a8-ba6b-28af224f44e1"],
Cell[CellGroupData[{
Cell[629691, 16040, 381, 9, 28, "Print",ExpressionUUID->"a764613d-0d1b-462e-8c04-9333e8a93608"],
Cell[630075, 16051, 204, 4, 28, "Print",ExpressionUUID->"968975f7-3645-4c30-b3ee-2299b3bc8ff3"]
}, Open  ]],
Cell[630294, 16058, 53868, 1003, 987, "Output",ExpressionUUID->"1c5216c1-5dea-4e8f-adaa-eabdc45b98a6"],
Cell[684165, 17063, 691, 12, 78, "Message",ExpressionUUID->"b9ec7828-67ad-4074-bb96-9dcfb2ef0259"]
}, Open  ]],
Cell[CellGroupData[{
Cell[684893, 17080, 24391, 631, 3705, "Input",ExpressionUUID->"962e724e-5d59-4f80-b78c-265d0235ce04"],
Cell[709287, 17713, 375, 9, 46, "Message",ExpressionUUID->"b1e3fd32-972f-402d-aa6b-c1b77e915c28"],
Cell[709665, 17724, 410, 10, 35, "Message",ExpressionUUID->"8ca13b66-2980-42eb-8c41-bf284ffed506"],
Cell[CellGroupData[{
Cell[710100, 17738, 204, 4, 28, "Print",ExpressionUUID->"5ed3343c-c885-4f8a-a2bb-d4faff25e7e4"],
Cell[710307, 17744, 223, 4, 28, "Print",ExpressionUUID->"c5bb3fa0-d460-4731-a5b2-75e9d39e907e"],
Cell[710533, 17750, 415, 9, 28, "Print",ExpressionUUID->"51e648e4-3667-4c45-96a0-055e59e5d593"],
Cell[710951, 17761, 313, 8, 28, "Print",ExpressionUUID->"78b87f29-9dde-4f1e-ae17-386f86be4241"],
Cell[711267, 17771, 339, 8, 28, "Print",ExpressionUUID->"3c3be467-aa98-44fc-ba9d-b3698d09e2e0"],
Cell[711609, 17781, 309, 8, 28, "Print",ExpressionUUID->"fbb0d875-fb49-4af9-a290-509b90db9a5d"],
Cell[711921, 17791, 373, 9, 28, "Print",ExpressionUUID->"1986fb44-0a3b-44b5-944d-f3bd7bbb8e60"],
Cell[712297, 17802, 386, 9, 28, "Print",ExpressionUUID->"8617979c-9969-4538-b2cf-26501bfd64ec"],
Cell[712686, 17813, 443, 11, 28, "Print",ExpressionUUID->"b334181a-d9c8-46c2-975d-8c3324766d72"],
Cell[713132, 17826, 351, 9, 28, "Print",ExpressionUUID->"5866c83f-7c09-494c-b3fe-b3c483e95f33"]
}, Open  ]],
Cell[713498, 17838, 10316, 240, 289, "Output",ExpressionUUID->"57532624-78e1-4f15-8548-26e32d68e60f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[723851, 18083, 21210, 585, 3562, "Input",ExpressionUUID->"9d8607f4-f2a0-408a-b414-913d21339ee0"],
Cell[745064, 18670, 407, 9, 35, "Message",ExpressionUUID->"da389032-9d52-4596-86c1-c6f5c484aeb8"],
Cell[CellGroupData[{
Cell[745496, 18683, 202, 4, 28, "Print",ExpressionUUID->"508cefd6-5231-431c-afd0-9700c161a13e"],
Cell[745701, 18689, 223, 4, 28, "Print",ExpressionUUID->"1c2504bd-3e52-4964-a6d2-b5a422700f23"],
Cell[745927, 18695, 304, 8, 28, "Print",ExpressionUUID->"5aea88e5-9df1-4ed7-90af-25ed87997328"],
Cell[746234, 18705, 709, 23, 48, "Print",ExpressionUUID->"1b1ed481-afa8-4681-a7c8-11182b9dcf23"],
Cell[746946, 18730, 329, 8, 28, "Print",ExpressionUUID->"d87a379b-74fa-459a-8ad8-8e36bcc3dfdc"],
Cell[747278, 18740, 323, 8, 28, "Print",ExpressionUUID->"7694f089-3f44-4170-bc9b-15bae0ead641"],
Cell[747604, 18750, 694, 23, 48, "Print",ExpressionUUID->"6a89767f-856a-4cd9-831d-10341c849ae3"],
Cell[748301, 18775, 719, 23, 48, "Print",ExpressionUUID->"b960dd3a-615c-485e-ad36-653dcf507d87"],
Cell[749023, 18800, 537, 16, 28, "Print",ExpressionUUID->"d1350c3f-4a6a-48e1-90a5-ca77f53c5490"],
Cell[749563, 18818, 223, 4, 28, "Print",ExpressionUUID->"3ae6e554-947f-4459-8aa1-f3fb7474d083"]
}, Open  ]],
Cell[749801, 18825, 15555, 352, 672, "Output",ExpressionUUID->"a571b181-3cd3-448a-a917-9fa5228f9139"]
}, Open  ]],
Cell[CellGroupData[{
Cell[765393, 19182, 27372, 694, 3921, "Input",ExpressionUUID->"79e741a4-d18d-4a47-9054-217af4c38fe1"],
Cell[CellGroupData[{
Cell[792790, 19880, 213, 4, 28, "Print",ExpressionUUID->"58cb6c7f-9c4b-4bed-8164-74dd3185d778"],
Cell[793006, 19886, 377, 9, 28, "Print",ExpressionUUID->"dc3dfbdd-4737-49d3-99a4-b8b7a5cc1427"],
Cell[793386, 19897, 360, 9, 28, "Print",ExpressionUUID->"719d5056-f3f9-4957-8769-fd30ecbc248a"],
Cell[793749, 19908, 421, 11, 28, "Print",ExpressionUUID->"6eddadc8-a326-4be0-a174-d7e2db6fb026"],
Cell[794173, 19921, 1584, 36, 83, "Print",ExpressionUUID->"dbecedb6-fce0-4d4d-ba29-cf8e487cf57b"]
}, Open  ]],
Cell[795772, 19960, 992, 27, 553, "Output",ExpressionUUID->"215e494f-30d4-4a88-a63b-1005f54ce595"]
}, Open  ]],
Cell[CellGroupData[{
Cell[796801, 19992, 31626, 797, 4429, "Input",ExpressionUUID->"5a6f0051-7556-4973-b0f9-6d2619d7f23d"],
Cell[828430, 20791, 13001, 322, 389, "Output",ExpressionUUID->"81b6c14a-0d33-4763-b843-54e81e7c81f4"],
Cell[841434, 21115, 3463, 79, 920, "Output",ExpressionUUID->"977515fd-c12f-44c4-8f43-11ab52eb9510"],
Cell[CellGroupData[{
Cell[844922, 21198, 202, 4, 28, "Print",ExpressionUUID->"359b66c4-bccd-4684-934b-702066e5cc98"],
Cell[845127, 21204, 337, 8, 28, "Print",ExpressionUUID->"04a97f7d-b9ea-4527-a712-d70f29e91783"],
Cell[845467, 21214, 309, 8, 28, "Print",ExpressionUUID->"a8881caf-c7d8-49e8-b55d-61403c90a101"],
Cell[845779, 21224, 381, 9, 28, "Print",ExpressionUUID->"30c169b0-1bba-4423-b139-98d8b4c8d2b0"],
Cell[846163, 21235, 332, 8, 28, "Print",ExpressionUUID->"acd4a07c-2b94-4af0-9b07-fcd71f358edc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[846544, 21249, 33974, 862, 5121, "Input",ExpressionUUID->"da620e12-43bb-481d-863f-98dd5ebb49e6"],
Cell[880521, 22113, 466, 11, 47, "Message",ExpressionUUID->"91d02bb3-83f3-40e3-8a26-f366b133ad48"],
Cell[880990, 22126, 452, 10, 35, "Message",ExpressionUUID->"a4f5646d-5fa6-46bb-af46-805e99c15beb"],
Cell[881445, 22138, 452, 10, 35, "Message",ExpressionUUID->"4f013504-f45b-43c8-9073-2e6aa54773f7"],
Cell[881900, 22150, 452, 10, 35, "Message",ExpressionUUID->"de5809cd-dd10-4014-880d-5e57665afb6d"],
Cell[882355, 22162, 464, 10, 35, "Message",ExpressionUUID->"88e1a1f1-0f5a-4376-8363-24e88a43bd7e"],
Cell[882822, 22174, 376, 9, 46, "Message",ExpressionUUID->"6e18c311-e946-458c-8251-8cbbdc6a81f7"],
Cell[883201, 22185, 411, 10, 35, "Message",ExpressionUUID->"b06e9b73-32c9-4681-b816-869dfddfe105"],
Cell[883615, 22197, 376, 9, 46, "Message",ExpressionUUID->"8ed35bb3-1f4d-4138-87a9-f1f93ecccf06"],
Cell[883994, 22208, 411, 10, 35, "Message",ExpressionUUID->"b66dd585-07c7-44ab-9820-81d1265b63d2"],
Cell[884408, 22220, 457, 11, 35, "Message",ExpressionUUID->"bb0de66c-3340-40af-8d3f-0960088185a9"],
Cell[884868, 22233, 459, 11, 35, "Message",ExpressionUUID->"6f77e1e9-8131-42b9-9e96-305a791e28e8"],
Cell[885330, 22246, 459, 10, 35, "Message",ExpressionUUID->"60e42427-5ac5-4aa8-9b3b-a4347cc45f72"],
Cell[885792, 22258, 463, 10, 35, "Message",ExpressionUUID->"0c37da04-636c-4fe5-a503-79951bcc32cc"],
Cell[886258, 22270, 2111, 62, 365, "Output",ExpressionUUID->"3479d004-2507-4bb0-92dc-7c756091689d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[888406, 22337, 33720, 824, 4354, "Input",ExpressionUUID->"3c3e7d55-5b26-448a-94d0-283f4ba2e5dd"],
Cell[CellGroupData[{
Cell[922151, 23165, 232, 4, 28, "Print",ExpressionUUID->"ff8d381c-d818-45d7-abd7-19c258b65dc5"],
Cell[922386, 23171, 340, 8, 28, "Print",ExpressionUUID->"25ecd12e-e0e9-4cdc-9c38-02bc927b0443"],
Cell[922729, 23181, 575, 16, 28, "Print",ExpressionUUID->"a616a5dd-cab8-487c-9db3-675e17b6ee51"],
Cell[923307, 23199, 570, 16, 28, "Print",ExpressionUUID->"94dc06d9-0560-468d-a526-1a322bb9e45f"],
Cell[923880, 23217, 360, 8, 28, "Print",ExpressionUUID->"0be893f0-f945-4860-b753-3096da903dce"],
Cell[924243, 23227, 344, 8, 28, "Print",ExpressionUUID->"1f58e9d9-2739-4043-86e5-559c80818f37"],
Cell[924590, 23237, 756, 23, 48, "Print",ExpressionUUID->"01119744-9e0a-46a8-9e77-ed86613c2930"],
Cell[925349, 23262, 346, 8, 28, "Print",ExpressionUUID->"e72d056a-524b-448d-93c6-acc0225cbcc5"]
}, Open  ]],
Cell[925710, 23273, 1722, 35, 154, "Output",ExpressionUUID->"794e4811-db3b-4021-945d-becf344d85a8"],
Cell[927435, 23310, 142624, 2425, 601, "Output",ExpressionUUID->"5be37f51-4f9d-451d-b0bc-8a0359d774ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1070096, 25740, 25210, 602, 3731, "Input",ExpressionUUID->"a7ba88c5-eb5e-4d22-bdbf-398b03d613e5"],
Cell[1095309, 26344, 5719, 112, 749, "Output",ExpressionUUID->"084cc375-0b63-4a04-b265-3646ab3dcf39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1101065, 26461, 25404, 649, 3729, "Input",ExpressionUUID->"8eb66808-59a0-4935-af79-87f82d9512c2"],
Cell[1126472, 27112, 1049, 19, 78, "Message",ExpressionUUID->"29d3a657-e24a-466f-b7dd-9de41012d3f0"],
Cell[1127524, 27133, 1316, 22, 78, "Message",ExpressionUUID->"2abc3f77-67d9-43c5-aa08-777cf1d1404f"],
Cell[1128843, 27157, 1314, 22, 78, "Message",ExpressionUUID->"c9313276-d908-4ca7-a1d5-905909dfcf05"],
Cell[1130160, 27181, 461, 10, 35, "Message",ExpressionUUID->"2046cfd1-999b-46af-9683-13afccec31e2"],
Cell[1130624, 27193, 162, 3, 41, "Output",ExpressionUUID->"2ef0f8ad-5d0f-4712-b312-77dc7da0ea1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1130823, 27201, 22141, 538, 2530, "Input",ExpressionUUID->"f1eae13c-e767-4e80-84be-603d68626ba2"],
Cell[1152967, 27741, 456, 10, 35, "Message",ExpressionUUID->"4527aabf-e834-4ce0-b264-1e6856dfe342"],
Cell[1153426, 27753, 1518, 47, 197, "Output",ExpressionUUID->"074ff673-827e-4c01-b3e8-d44665e09052"]
}, Open  ]],
Cell[1154959, 27803, 33117, 776, 4355, "Input",ExpressionUUID->"3f59097a-b3c6-40bf-b1a1-94c0627dc358"]
}
]
*)

