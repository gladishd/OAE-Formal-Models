(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    249791,       5473]
NotebookOptionsPosition[    239605,       5297]
NotebookOutlinePosition[    240085,       5315]
CellTagsIndexPosition[    240042,       5312]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
From Spanning Trees to Self-Healing Fabrics: A D\[CapitalAE]D\[CapitalAE]LUS \
Perspective\
\>", "Abstract",
 CellChangeTimes->{{3.9629906915537767`*^9, 3.962990692034157*^9}, {
  3.962990916438257*^9, 
  3.962990921659832*^9}},ExpressionUUID->"9d3b4621-422c-43fd-aada-\
d369c39956a5"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["This feed-back is in-valuable as it high-lights the central \
challenge of our work: bridging the ",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["gap between a dynamic, computational proof and a static, \
distributable artifact",
  FontWeight->"Plain",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox[". While the narrative flow of \[OpenCurlyDoubleQuote]self healing \
trees\[RightArrow]spanning trees\[RightArrow]path latency\[RightArrow]path \
diversity\[CloseCurlyDoubleQuote] ",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["is sound",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2],
  Background->RGBColor[1, 1, 0.85]],
 StyleBox[" and can be compressed into a more accessible PDF format for the \
FMS conference, the Mathematica notebook it-self is the formal specification \
. To answer David Johnston\[CloseCurlyQuote]s question, ",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["one does not simply",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2],
  Background->RGBColor[1, 1, 0.85]],
 StyleBox[" \[OpenCurlyDoubleQuote]ex-tract\[CloseCurlyDoubleQuote] state \
transition tables from this model; rather, the code defines the algorithmic \
rules from which state transitions emerge. The Graph Virtual Machine (GVM) \
executes these rules, based on the principles of Token Dynamics and \
Reversible Subtransactions, to manage the fabric in real-time. This ",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["specific",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2],
  Background->RGBColor[1, 1, 0.85]],
 StyleBox[" approach is our ",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["answer",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2],
  Background->RGBColor[1, 1, 0.85]],
 StyleBox[" to the temporal para-dox Dean Gladish identified: if any message \
is a \[OpenCurlyDoubleQuote]",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["post",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2],
  Background->RGBColor[1, 1, 0.85]],
 StyleBox["- thing that has ",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["already",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2],
  Background->RGBColor[1, 1, 0.85]],
 StyleBox[" occurred,\[CloseCurlyDoubleQuote] then one-way communication is ",
  
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["f",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2],
  Background->RGBColor[1, 1, 0.85]],
 StyleBox["undamentally ",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["f",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2],
  Background->RGBColor[1, 1, 0.85]],
 StyleBox["lawed . Our system is built on verifiable, two-way interactions \
that estab-lish Common Knowledge, much like two pointers converging \
algorithmically. The task a-head is to distill this living, computational \
essay into a concise presentation that proves our core thesis: that a \
resilient N2N Lattice managed by a GVM is ",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["the only",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2],
  Background->RGBColor[1, 1, 0.85]],
 StyleBox[" foundation for a ",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["truly",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2],
  Background->RGBColor[1, 1, 0.85]],
 StyleBox[" atomic ",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["and",
  FontWeight->"Plain",
  FontColor->RGBColor[1, 0.5, 0.5]],
 StyleBox[" reliable net-work.",
  FontWeight->"Plain",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 "\n\nThis Mathematica script provides a formal analysis of network topology, \
serving as a \[OpenCurlyDoubleQuote]Code as Proof\[CloseCurlyDoubleQuote] for \
the principles presented at the Future of Memory and Storage (FMS) \
conference. It explores the fundamental differences between a resilient mesh \
fabric and the brittle, tree-based structures common in conventional \
networking. The code visualizes the core problem that Open Atomic Ethernet \
solves: the loss of path diversity and the creation of high-latency, fragile \
routes when relying on classical protocols."
}], "Subsection",
 CellChangeTimes->{{3.962990697399872*^9, 3.962990698066004*^9}, 
   3.9629909279466743`*^9, {3.962994015978826*^9, 3.9629940171911573`*^9}, {
   3.962994053251643*^9, 3.962994082953413*^9}, {3.962994156297483*^9, 
   3.962994184428547*^9}, {3.9629942157437963`*^9, 3.9629942397613173`*^9}, {
   3.962994276127275*^9, 3.962994282688868*^9}, {3.962994313768201*^9, 
   3.962994341303912*^9}, {3.962994373521082*^9, 3.962994377562861*^9}},
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[
  0, 1, 1],ExpressionUUID->"4d443358-7374-41bc-8953-1607acf91698"],

Cell[CellGroupData[{

Cell[TextData[{
 "The script begins by defining a graph that represents the physical network \
fabric, or what we refer to as the ",
 StyleBox["N2N Lattice",
  FontWeight->"Bold"],
 ". In this model, each vertex is an autonomous ",
 StyleBox["CELL",
  FontWeight->"Bold"],
 "\[LongDash]a unit of compute, storage, and packet forwarding\[LongDash]and \
the weighted edges represent the latency of the direct, neighbor-to-neighbor \
links. This graph is the \[OpenCurlyDoubleQuote]groundplane\
\[CloseCurlyDoubleQuote] upon which our ",
 StyleBox["scouting",
  FontWeight->"Bold"],
 " protocols operate to discover topology without the need for centralized \
switches or routers. By distributing forwarding capabilities to every node, \
we eliminate the bottlenecks that cause congestion and packet loss in \
traditional Clos architectures."
}], "Subsubsection",
 CellChangeTimes->{{3.96299070335322*^9, 3.962990704491493*^9}, 
   3.9629909312290487`*^9},ExpressionUUID->"9c634be0-f118-4f67-9feb-\
e68b0acee65d"],

Cell[TextData[{
 "The `FindSpanningTree` function simulates the conventional approach of \
protocols like STP, which prune the rich physical graph into a single, \
loop-free tree. The output image clearly shows this \
\[OpenCurlyDoubleQuote]Minimum Spanning Tree (Optimal Path)\
\[CloseCurlyDoubleQuote]. While this prevents broadcast storms, it discards \
the network\[CloseCurlyQuote]s inherent resilience and forces a single point \
of failure for many paths. This aligns with the core D\[CapitalAE]D\
\[CapitalAE]LUS argument that you cannot build reliability on top of an \
unreliable network foundation; forcing a single tree structure does not solve \
the underlying problem of atomicity when links can fail.\n\nThe script\
\[CloseCurlyQuote]s primary insight comes from the `FindPath` analysis, which \
calculates all possible paths between two nodes (1 and 7). The resulting \
table demonstrates the rich ",
 StyleBox["path",
  FontWeight->"Bold"],
 " ",
 StyleBox["diversity",
  FontWeight->"Bold"],
 " that a mesh fabric offers. This diversity is the key to a ",
 StyleBox["self-healing network",
  FontWeight->"Bold"],
 ", as it provides multiple alternative routes that can be used for \
immediate, local failover. This is precisely what Dugan Hammock\
\[CloseCurlyQuote]s path discovery simulations for FMS demonstrate: a network \
that can respond to failures in real-time by rerouting traffic through its \
known topology. In the D\[CapitalAE]D\[CapitalAE]LUS architecture, this \
knowledge is managed by the ",
 StyleBox["Graph",
  FontWeight->"Bold"],
 " ",
 StyleBox["Virtual",
  FontWeight->"Bold"],
 " ",
 StyleBox["Machine",
  FontWeight->"Bold"],
 " ",
 StyleBox["(GVM)",
  FontWeight->"Bold"],
 ", which maintains a ",
 StyleBox["TRAPH",
  FontWeight->"Bold"],
 " (a collection of such trees) to ensure continuous connectivity.\n\n\
Finally, while the script uses simple integers for link latency, it\
\[CloseCurlyQuote]s crucial to understand the physical reality they \
represent. The very concept of \[OpenCurlyDoubleQuote]one-way latency\
\[CloseCurlyDoubleQuote] is an illusion, as it assumes one can measure the \
one-way speed of light, a physical impossibility \
([https://youtu.be/pTn6Ewhb27k?si=JXWLS6DBmp_q8PyH](https://youtu.be/\
pTn6Ewhb27k?si=JXWLS6DBmp_q8PyH)). True performance is measured not in \
one-way delays but in the time required to complete a deterministic, ",
 StyleBox["reversible",
  FontWeight->"Bold"],
 " ",
 StyleBox["interaction",
  FontWeight->"Bold"],
 ". The multiple paths discovered in this script provide the physical \
substrate for these reliable interactions, enabling ",
 StyleBox["Reversible",
  FontWeight->"Bold"],
 " ",
 StyleBox["Subtransactions",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Token Dynamics",
  FontWeight->"Bold"],
 " that establish ",
 StyleBox["Common Knowledge",
  FontWeight->"Bold"],
 " without relying on the flawed notion of globally synchronized time."
}], "Text",
 CellChangeTimes->{{3.962990708929163*^9, 3.9629907092792273`*^9}, {
  3.962990844256055*^9, 
  3.9629909339161367`*^9}},ExpressionUUID->"f0c06137-c800-4910-b0e9-\
de5aa20a32fc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", " ", "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", 
       " ", "6", ",", " ", "7", ",", " ", "8", ",", " ", 
       RowBox[{"UndirectedEdge", "[", 
        RowBox[{"1", ",", " ", "2"}], "]"}], ",", " ", 
       RowBox[{"UndirectedEdge", "[", 
        RowBox[{"2", ",", " ", "3"}], "]"}], ",", " ", 
       RowBox[{"UndirectedEdge", "[", 
        RowBox[{"4", ",", " ", "5"}], "]"}], ",", " ", 
       RowBox[{"UndirectedEdge", "[", 
        RowBox[{"5", ",", " ", "6"}], "]"}], ",", " ", 
       RowBox[{"UndirectedEdge", "[", 
        RowBox[{"6", ",", " ", "7"}], "]"}], ",", " ", 
       RowBox[{"UndirectedEdge", "[", 
        RowBox[{"1", ",", " ", "8"}], "]"}], ",", " ", 
       RowBox[{"UndirectedEdge", "[", 
        RowBox[{"2", ",", " ", "6"}], "]"}], ",", " ", 
       RowBox[{"UndirectedEdge", "[", 
        RowBox[{"2", ",", " ", "8"}], "]"}], ",", " ", 
       RowBox[{"UndirectedEdge", "[", 
        RowBox[{"8", ",", " ", "4"}], "]"}], ",", " ", 
       RowBox[{"UndirectedEdge", "[", 
        RowBox[{"3", ",", " ", "7"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DirectedEdge", "[", 
        RowBox[{
         RowBox[{"UndirectedEdge", "[", 
          RowBox[{"1", ",", " ", "2"}], "]"}], ",", " ", "6"}], "]"}], ",", 
       " ", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{
         RowBox[{"UndirectedEdge", "[", 
          RowBox[{"2", ",", " ", "3"}], "]"}], ",", " ", "1"}], "]"}], ",", 
       " ", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{
         RowBox[{"UndirectedEdge", "[", 
          RowBox[{"4", ",", " ", "5"}], "]"}], ",", " ", "1"}], "]"}], ",", 
       " ", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{
         RowBox[{"UndirectedEdge", "[", 
          RowBox[{"5", ",", " ", "6"}], "]"}], ",", " ", "2"}], "]"}], ",", 
       " ", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{
         RowBox[{"UndirectedEdge", "[", 
          RowBox[{"6", ",", " ", "7"}], "]"}], ",", " ", "2"}], "]"}], ",", 
       " ", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{
         RowBox[{"UndirectedEdge", "[", 
          RowBox[{"1", ",", " ", "8"}], "]"}], ",", " ", "4"}], "]"}], ",", 
       " ", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{
         RowBox[{"UndirectedEdge", "[", 
          RowBox[{"2", ",", " ", "6"}], "]"}], ",", " ", "3"}], "]"}], ",", 
       " ", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{
         RowBox[{"UndirectedEdge", "[", 
          RowBox[{"2", ",", " ", "8"}], "]"}], ",", " ", "1"}], "]"}], ",", 
       " ", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{
         RowBox[{"UndirectedEdge", "[", 
          RowBox[{"8", ",", " ", "4"}], "]"}], ",", " ", "5"}], "]"}], ",", 
       " ", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{
         RowBox[{"UndirectedEdge", "[", 
          RowBox[{"3", ",", " ", "7"}], "]"}], ",", " ", "6"}], "]"}]}], 
      "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EdgeLabels", " ", "->", " ", 
        RowBox[{"{", "\"\<EdgeWeight\>\"", "}"}]}], ",", " ", 
       RowBox[{"EdgeWeight", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
         "6", ",", " ", "1", ",", " ", "1", ",", " ", "2", ",", " ", "2", ",",
           " ", "4", ",", " ", "3", ",", " ", "1", ",", " ", "5", ",", " ", 
          "6"}], "}"}]}], ",", " ", 
       RowBox[{
       "GraphLayout", " ", "->", " ", "\"\<SpringElectricalEmbedding\>\""}], 
       ",", " ", 
       RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
       RowBox[{
       "PlotLabel", " ", "->", " ", 
        "\"\<Initial Resilient Mesh Network with Link Latencies\>\""}], ",", 
       " ", 
       RowBox[{"VertexLabels", " ", "->", " ", 
        RowBox[{"{", "\"\<Name\>\"", "}"}]}], ",", " ", 
       RowBox[{"VertexSize", " ", "->", " ", 
        RowBox[{"{", "Large", "}"}]}], ",", " ", 
       RowBox[{"VertexStyle", " ", "->", " ", 
        RowBox[{"{", "LightBlue", "}"}]}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mstEdges", "=", 
   RowBox[{"FindSpanningTree", "[", "g", "]"}]}], ";"}], "\n", 
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", "mstEdges", ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Minimum Spanning Tree (Optimal Path)\>\""}], 
   ",", 
   RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"pathLatency", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"g", ",", "#1"}], "}"}], ",", "EdgeWeight"}], "]"}], "&"}], 
      ")"}], "/@", "mstEdges"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Total Path Latency of the Minimum Spanning Tree: \>\"", ",", 
    "pathLatency"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"shortestPath", "=", 
   RowBox[{"FindShortestPath", "[", 
    RowBox[{"g", ",", "1", ",", "7"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"shortestPathLatency", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"g", ",", "#1"}], "}"}], ",", "EdgeWeight"}], "]"}], "&"}], 
      ")"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"shortestPath", ",", "2", ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", 
   RowBox[{"PathGraph", "[", "shortestPath", "]"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Shortest Path Between Node 1 and 7\>\""}], 
   ",", 
   RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Shortest path: \>\"", ",", "shortestPath"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Latency of shortest path: \>\"", ",", "shortestPathLatency"}],
    "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"allPaths", "=", 
   RowBox[{"FindPath", "[", 
    RowBox[{"g", ",", "1", ",", "7", ",", "\[Infinity]", ",", "All"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pathData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"path", ",", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"g", ",", "#1"}], "}"}], ",", "EdgeWeight"}], "]"}], 
           "&"}], ")"}], "/@", 
         RowBox[{"Partition", "[", 
          RowBox[{"path", ",", "2", ",", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"path", ",", "allPaths"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{"pathData", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Path\>\"", ",", "\"\<Total Latency\>\""}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"LightGray", ",", "White"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.962989416828628*^9, 3.962989416830139*^9}, 
   3.962989545226231*^9},
 CellLabel->
  "In[559]:=",ExpressionUUID->"485382e2-0d8b-4095-986c-0b4285f6e94f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 
       UndirectedEdge[1, 2], 
       UndirectedEdge[2, 3], 
       UndirectedEdge[4, 5], 
       UndirectedEdge[5, 6], 
       UndirectedEdge[6, 7], 
       UndirectedEdge[1, 8], 
       UndirectedEdge[2, 6], 
       UndirectedEdge[2, 8], 
       UndirectedEdge[8, 4], 
       UndirectedEdge[3, 7]}, {{{9, 6}, {10, 1}, {11, 1}, {12, 2}, {13, 2}, {
       14, 4}, {15, 3}, {16, 1}, {17, 5}, {18, 6}}, Null}, {
      EdgeLabels -> {"EdgeWeight"}, 
       EdgeWeight -> {6, 1, 1, 2, 2, 4, 3, 1, 5, 6}, GraphHighlight -> {6, 
         UndirectedEdge[3, 7], 7, 
         UndirectedEdge[1, 8], 
         UndirectedEdge[2, 3], 1, 
         UndirectedEdge[2, 6], 3, 4, 
         UndirectedEdge[2, 8], 
         UndirectedEdge[4, 5], 2, 
         UndirectedEdge[5, 6], 
         UndirectedEdge[8, 4], 
         UndirectedEdge[6, 7], 
         DirectedEdge[
          UndirectedEdge[8, 4], 5], 
         DirectedEdge[
          UndirectedEdge[2, 8], 1], 
         DirectedEdge[
          UndirectedEdge[6, 7], 2], 
         DirectedEdge[
          UndirectedEdge[3, 7], 6], 
         DirectedEdge[
          UndirectedEdge[1, 8], 4], 
         UndirectedEdge[1, 2], 8, 
         DirectedEdge[
          UndirectedEdge[2, 6], 3], 5}, GraphHighlightStyle -> {"Thick"}, 
       GraphLayout -> "SpringElectricalEmbedding", ImageSize -> Large, 
       PlotLabel -> "Minimum Spanning Tree (Optimal Path)", 
       VertexLabels -> {"Name"}, VertexSize -> {Large}, VertexStyle -> {
         RGBColor[0.87, 0.94, 1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[{{2.160024531986568, -2.308705125054743}, {
          1.1593357631739976`, -2.3087051250547392`}}, 0.06401000268645474], 
         InsetBox["6", {1.659680147580283, -2.308705125054741}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1.8924062945339768`, -0.17804191475576814`}, {
          1.021572220009265, -0.6683999992819973}}, 0.06401000268645474], 
         InsetBox["1", {1.456989257271621, -0.42322095701888274}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1.0127410306772138`, -1.668605098190188}, {
          1.021572220009265, -0.6683999992819973}}, 0.06401000268645474], 
         InsetBox["1", {1.0171566253432394, -1.1685025487360927}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2.160024531986568, -1.9886551116224653`}, {
          1.1593357631739976`, -1.9886551116224618`}}, 0.06401000268645474], 
         InsetBox["2", {1.659680147580283, -1.9886551116224636}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0.16002500671613695`, -1.9886551116224653`}, {
           1.1593357631739976`, -1.9886551116224618`}}, 0.06401000268645474]},
          InsetBox["2", {0.6596803849450672, -1.9886551116224636}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0.16002500671613684`, -3.268855165351564}, {
           1.1600250067161368`, -3.268855165351564}}, 0.06401000268645474]}, 
         InsetBox["4", {0.6600250067161368, -3.268855165351564}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0.16002500671613684`, -2.94880515191929}, {
           1.1600250067161368`, -2.94880515191929}}, 0.06401000268645474]}, 
         InsetBox["3", {0.6600250067161368, -2.94880515191929}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0.16002500671613684`, -0.16002500671613684`}, {
           1.021572220009265, -0.6683999992819973}}, 0.06401000268645474]}, 
         InsetBox["1", {0.5907986133627009, -0.4142125029990671}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0.16002500671613684`, -2.6287551384870165`}, {
           1.1600250067161368`, -2.6287551384870165`}}, 0.06401000268645474]},
          InsetBox["5", {0.6600250067161368, -2.6287551384870165}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0.16002500671613695`, -2.308705125054743}, {
           1.1593357631739976`, -2.3087051250547392`}}, 0.06401000268645474]},
          InsetBox["6", {0.6596803849450672, -2.308705125054741}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {RGBColor[0.87, 0.94, 1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{1.021572220009265, -0.6683999992819973}, 
           0.06401000268645474]}, 
         InsetBox["1", {1.0224795445482142, -0.5787905888818384}, 
          ImageScaled[{0.4924063943619068, -0.2499615571170386}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{1.1593357631739976`, -1.9886551116224618`}, 
           0.06401000268645474]}, 
         InsetBox["2", {1.1593357631739976, -1.899041107861425}, ImageScaled[{0.49999999999999967, -0.25}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{1.1600250067161368`, -2.94880515191929}, 
           0.06401000268645474]}, 
         InsetBox["3", {1.2496390104771735, -2.94880515191929}, ImageScaled[{-0.25, 0.5000000000000002}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{1.1600250067161368`, -3.268855165351564}, 
           0.06401000268645474]}, 
         InsetBox["4", {1.2496390104771735, -3.268855165351564}, ImageScaled[{-0.25, 0.5000000000000002}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{1.1600250067161368`, -2.6287551384870165`}, 
           0.06401000268645474]}, 
         InsetBox["5", {1.2496390104771735, -2.6287551384870165}, 
          ImageScaled[{-0.25, 0.5000000000000002}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{1.1593357631739976`, -2.3087051250547392`}, 
           0.06401000268645474]}, 
         InsetBox["6", {1.1593357631739976, -2.219091121293703}, ImageScaled[{0.49999999999999967, -0.25}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{1.6000415196170386`, -3.268855165351564}, 
           0.06401000268645474]}, 
         InsetBox["7", 
          Offset[{2, 2}, {1.6640515223034933, -3.204845162665109}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{2.0400580325179405`, -3.268855165351564}, 
           0.06401000268645474]}, 
         InsetBox["8", 
          Offset[{2, 2}, {2.1040680352043952, -3.204845162665109}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{2.160024531986568, -2.308705125054743}, 
           0.06401000268645474]}, InsetBox[
          RowBox[{"1", "\[UndirectedEdge]", "2"}], {2.2496385357476045, -2.3087051250547432},
           ImageScaled[{-0.25, 0.5000000000000029}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{1.8924062945339768`, -0.17804191475576814`}, 
           0.06401000268645474]}, InsetBox[
          RowBox[{"2", "\[UndirectedEdge]", "3"}], {1.9704919694111562, -0.13407264083569376},
           ImageScaled[{-0.1535167909030275, 0.13201113602744885}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{1.0127410306772138`, -1.668605098190188}, 
           0.06401000268645474]}, InsetBox[
          RowBox[{"4", "\[UndirectedEdge]", "5"}], {1.0119498255645796, -1.7582156090946173},
           ImageScaled[{0.5066217757222182, 1.24997076748783}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{2.160024531986568, -1.9886551116224653`}, 
           0.06401000268645474]}, InsetBox[
          RowBox[{"5", "\[UndirectedEdge]", "6"}], {2.2496385357476045, -1.9886551116224656},
           ImageScaled[{-0.25, 0.5000000000000029}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{0.16002500671613695`, -1.9886551116224653`}, 
           0.06401000268645474]}, InsetBox[
          RowBox[{"6", "\[UndirectedEdge]", "7"}], {0.07041100295510033, -1.9886551116224656},
           ImageScaled[{1.25, 0.5000000000000024}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{0.16002500671613684`, -3.268855165351564}, 
           0.06401000268645474]}, InsetBox[
          RowBox[{"1", "\[UndirectedEdge]", "8"}], {0.07041100295510022, -3.268855165351564},
           ImageScaled[{1.25, 0.49999999999999983}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{0.16002500671613684`, -2.94880515191929}, 
           0.06401000268645474]}, InsetBox[
          RowBox[{"2", "\[UndirectedEdge]", "6"}], {0.07041100295510022, -2.94880515191929},
           ImageScaled[{1.25, 0.49999999999999983}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{0.16002500671613684`, -0.16002500671613684`}, 
           0.06401000268645474]}, InsetBox[
          RowBox[{"2", "\[UndirectedEdge]", "8"}], {0.08284565646663153, -0.11448362372058794},
           ImageScaled[{1.1459315537500472, 0.11885379725091083}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{0.16002500671613684`, -2.6287551384870165`}, 
           0.06401000268645474]}, InsetBox[
          RowBox[{"8", "\[UndirectedEdge]", "4"}], {0.07041100295510022, -2.6287551384870165},
           ImageScaled[{1.25, 0.49999999999999983}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{0.16002500671613695`, -2.308705125054743}, 
           0.06401000268645474]}, InsetBox[
          RowBox[{"3", "\[UndirectedEdge]", "7"}], {0.07041100295510033, -2.3087051250547432},
           ImageScaled[{1.25, 0.5000000000000024}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox[
   "\"Minimum Spanning Tree (Optimal Path)\"", TraditionalForm]]], "Output",
 CellChangeTimes->{{3.962989390687581*^9, 3.9629894171136923`*^9}, 
   3.9629895456173983`*^9, 3.962990041954493*^9},
 CellLabel->
  "Out[561]=",ExpressionUUID->"cc4d737c-2dcf-48d9-ab84-45324c8070fe"],

Cell[BoxData[
 TemplateBox[{
  "Total", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Total\\\", \\\"[\\\", \
GraphicsBox[NamespaceBox[\\\"NetworkGraphics\\\", \
DynamicModuleBox[List[Set[Typeset`graph, HoldComplete[Graph[List[1, 2, 3, 4, \
5, 6, 7, 8, UndirectedEdge[1, 2], UndirectedEdge[2, 3], UndirectedEdge[4, 5], \
UndirectedEdge[5, 6], UndirectedEdge[6, 7], UndirectedEdge[1, 8], \
UndirectedEdge[2, 6], UndirectedEdge[2, 8], UndirectedEdge[8, 4], \
UndirectedEdge[3, 7]], List[SparseArray[Automatic, List[18, 18], 0, List[1, \
List[List[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6], \
List[List[2], List[4], List[3], List[1], List[5], List[6]]], Pattern]], \
Null], List[Rule[EdgeLabels, List[\\\"EdgeWeight\\\"]], Rule[EdgeWeight, \
List[2, 4, 3, 1, 5, 6]], Rule[GraphLayout, \
\\\"SpringElectricalEmbedding\\\"], Rule[ImageSize, Large], Rule[PlotLabel, \
\\\"Initial Resilient Mesh Network with Link Latencies\\\"], \
Rule[VertexLabels, List[\\\"Name\\\"]], Rule[VertexSize, List[Large]], \
Rule[VertexStyle, List[RGBColor[0.87`, 0.94`, 1]]]]]]]], \
TagBox[GraphicsGroupBox[List[List[Arrowheads[Medium], \
Directive[Opacity[0.7`], Hue[0.6`, 0.7`, 0.5`]], \
List[ArrowBox[List[List[0.06251000000000007`, -0.06251`], List[1.06251`, \
-0.06251`]], 0.025003999999999995`], InsetBox[FormBox[\\\"2\\\", \
TraditionalForm], List[0.5625100000000001`, -0.06251`], \
ImageScaled[List[0.5`, 0.5`]], Rule[BaseStyle, \\\"Graphics\\\"]]], \
List[ArrowBox[List[List[0.06251000000000007`, -0.31255`], List[1.06251`, \
-0.31255`]], 0.025003999999999995`], InsetBox[FormBox[\\\"4\\\", \
TraditionalForm], List[0.5625100000000001`, -0.31255`], \
ImageScaled[List[0.5`, 0.5`]], Rule[BaseStyle, \\\"Graphics\\\"]]], \
List[ArrowBox[List[List[0.06251000000000007`, -0.18752999999999997`], \
List[1.06251`, -0.18752999999999997`]], 0.025003999999999995`], \
InsetBox[FormBox[\\\"3\\\", TraditionalForm], List[0.5625100000000001`, \
-0.18752999999999997`], ImageScaled[List[0.5`, 0.5`]], Rule[BaseStyle, \
\\\"Graphics\\\"]]], List[ArrowBox[List[List[0.06251000000000007`, \
-0.6876099999999999`], List[1.06251`, -0.6876099999999999`]], \
0.025003999999999995`], InsetBox[FormBox[\\\"1\\\", TraditionalForm], \
List[0.5625100000000001`, -0.6876099999999999`], ImageScaled[List[0.5`, \
0.5`]], Rule[BaseStyle, \\\"Graphics\\\"]]], \
List[ArrowBox[List[List[0.06251000000000007`, -0.43756999999999996`], \
List[1.06251`, -0.43756999999999996`]], 0.025003999999999995`], \
InsetBox[FormBox[\\\"5\\\", TraditionalForm], List[0.5625100000000001`, \
-0.43756999999999996`], ImageScaled[List[0.5`, 0.5`]], Rule[BaseStyle, \
\\\"Graphics\\\"]]], List[ArrowBox[List[List[0.06251000000000007`, \
-0.5625899999999999`], List[1.06251`, -0.5625899999999999`]], \
0.025003999999999995`], InsetBox[FormBox[\\\"6\\\", TraditionalForm], \
List[0.5625100000000001`, -0.5625899999999999`], ImageScaled[List[0.5`, \
0.5`]], Rule[BaseStyle, \\\"Graphics\\\"]]]], List[Directive[Hue[0.6`, 0.2`, \
0.8`], EdgeForm[Directive[GrayLevel[0], Opacity[0.7`]]]], RGBColor[0.87`, \
0.94`, 1], List[DiskBox[List[1.06251`, -0.6876099999999999`], \
0.025003999999999995`], InsetBox[FormBox[\\\"1\\\", TraditionalForm], \
List[1.0975156000000001`, -0.6876099999999999`], ImageScaled[List[-0.25`, \
0.5000000000000002`]], Rule[BaseStyle, \\\"Graphics\\\"]]], \
List[DiskBox[List[1.06251`, -0.06251`], 0.025003999999999995`], \
InsetBox[FormBox[\\\"2\\\", TraditionalForm], List[1.0975156000000001`, \
-0.06251000000000001`], ImageScaled[List[-0.25`, 0.5000000000000002`]], \
Rule[BaseStyle, \\\"Graphics\\\"]]], List[DiskBox[List[1.06251`, \
-0.18752999999999997`], 0.025003999999999995`], InsetBox[FormBox[\\\"3\\\", \
TraditionalForm], List[1.0975156000000001`, -0.18752999999999997`], \
ImageScaled[List[-0.25`, 0.5000000000000002`]], Rule[BaseStyle, \
\\\"Graphics\\\"]]], List[DiskBox[List[1.06251`, -0.31255`], \
0.025003999999999995`], InsetBox[FormBox[\\\"4\\\", TraditionalForm], \
List[1.0975156000000001`, -0.31255`], ImageScaled[List[-0.25`, \
0.5000000000000002`]], Rule[BaseStyle, \\\"Graphics\\\"]]], \
List[DiskBox[List[1.06251`, -0.43756999999999996`], 0.025003999999999995`], \
InsetBox[FormBox[\\\"5\\\", TraditionalForm], List[1.0975156000000001`, \
-0.43756999999999996`], ImageScaled[List[-0.25`, 0.5000000000000002`]], \
Rule[BaseStyle, \\\"Graphics\\\"]]], List[DiskBox[List[1.06251`, \
-0.5625899999999999`], 0.025003999999999995`], InsetBox[FormBox[\\\"6\\\", \
TraditionalForm], List[1.0975156000000001`, -0.5625899999999999`], \
ImageScaled[List[-0.25`, 0.5000000000000002`]], Rule[BaseStyle, \
\\\"Graphics\\\"]]], List[DiskBox[List[0.25001333333333337`, -0.81263`], \
0.025003999999999995`], InsetBox[FormBox[\\\"7\\\", TraditionalForm], \
Offset[List[2, 2], List[0.27501733333333334`, -0.7876259999999999`]], \
ImageScaled[List[0, 0]], Rule[BaseStyle, \\\"Graphics\\\"]]], \
List[DiskBox[List[0.4375166666666667`, -0.81263`], 0.025003999999999995`], \
InsetBox[FormBox[\\\"8\\\", TraditionalForm], Offset[List[2, 2], \
List[0.4625206666666667`, -0.7876259999999999`]], ImageScaled[List[0, 0]], \
Rule[BaseStyle, \\\"Graphics\\\"]]], List[DiskBox[List[0.62502`, -0.81263`], \
0.025003999999999995`], InsetBox[FormBox[RowBox[List[\\\"1\\\", \
\\\"\\\\[UndirectedEdge]\\\", \\\"2\\\"]], TraditionalForm], Offset[List[2, \
2], List[0.650024`, -0.7876259999999999`]], ImageScaled[List[0, 0]], \
Rule[BaseStyle, \\\"Graphics\\\"]]], List[DiskBox[List[0.8125233333333334`, \
-0.81263`], 0.025003999999999995`], InsetBox[FormBox[RowBox[List[\\\"2\\\", \
\\\"\\\\[UndirectedEdge]\\\", \\\"3\\\"]], TraditionalForm], Offset[List[2, \
2], List[0.8375273333333334`, -0.7876259999999999`]], ImageScaled[List[0, \
0]], Rule[BaseStyle, \\\"Graphics\\\"]]], \
List[DiskBox[List[1.0000266666666668`, -0.81263`], 0.025003999999999995`], \
InsetBox[FormBox[RowBox[List[\\\"4\\\", \\\"\\\\[UndirectedEdge]\\\", \\\"5\\\
\"]], TraditionalForm], Offset[List[2, 2], List[1.0250306666666669`, \
-0.7876259999999999`]], ImageScaled[List[0, 0]], Rule[BaseStyle, \\\"Graphics\
\\\"]]], List[DiskBox[List[0.06251`, -0.81263`], 0.025003999999999995`], \
InsetBox[FormBox[RowBox[List[\\\"5\\\", \\\"\\\\[UndirectedEdge]\\\", \\\"6\\\
\"]], TraditionalForm], Offset[List[2, 2], List[0.087514`, \
-0.7876259999999999`]], ImageScaled[List[0, 0]], Rule[BaseStyle, \\\"Graphics\
\\\"]]], List[DiskBox[List[0.06251000000000007`, -0.06251`], \
0.025003999999999995`], InsetBox[FormBox[RowBox[List[\\\"6\\\", \
\\\"\\\\[UndirectedEdge]\\\", \\\"7\\\"]], TraditionalForm], \
List[0.027504400000000068`, -0.06250999999999998`], ImageScaled[List[1.25`, \
0.49999999999999983`]], Rule[BaseStyle, \\\"Graphics\\\"]]], \
List[DiskBox[List[0.06251000000000007`, -0.31255`], 0.025003999999999995`], \
InsetBox[FormBox[RowBox[List[\\\"1\\\", \\\"\\\\[UndirectedEdge]\\\", \\\"8\\\
\"]], TraditionalForm], List[0.027504400000000068`, -0.31255`], \
ImageScaled[List[1.25`, 0.49999999999999983`]], Rule[BaseStyle, \
\\\"Graphics\\\"]]], List[DiskBox[List[0.06251000000000007`, \
-0.18752999999999997`], 0.025003999999999995`], InsetBox[FormBox[RowBox[List[\
\\\"2\\\", \\\"\\\\[UndirectedEdge]\\\", \\\"6\\\"]], TraditionalForm], \
List[0.027504400000000068`, -0.18752999999999997`], ImageScaled[List[1.25`, \
0.49999999999999983`]], Rule[BaseStyle, \\\"Graphics\\\"]]], \
List[DiskBox[List[0.06251000000000007`, -0.6876099999999999`], \
0.025003999999999995`], InsetBox[FormBox[RowBox[List[\\\"2\\\", \
\\\"\\\\[UndirectedEdge]\\\", \\\"8\\\"]], TraditionalForm], \
List[0.027504400000000068`, -0.6876099999999999`], ImageScaled[List[1.25`, \
0.49999999999999983`]], Rule[BaseStyle, \\\"Graphics\\\"]]], \
List[DiskBox[List[0.06251000000000007`, -0.43756999999999996`], \
0.025003999999999995`], InsetBox[FormBox[RowBox[List[\\\"8\\\", \
\\\"\\\\[UndirectedEdge]\\\", \\\"4\\\"]], TraditionalForm], \
List[0.027504400000000068`, -0.43756999999999996`], ImageScaled[List[1.25`, \
0.49999999999999983`]], Rule[BaseStyle, \\\"Graphics\\\"]]], \
List[DiskBox[List[0.06251000000000007`, -0.5625899999999999`], \
0.025003999999999995`], InsetBox[FormBox[RowBox[List[\\\"3\\\", \
\\\"\\\\[UndirectedEdge]\\\", \\\"7\\\"]], TraditionalForm], \
List[0.027504400000000068`, -0.5625899999999999`], ImageScaled[List[1.25`, \
0.49999999999999983`]], Rule[BaseStyle, \\\"Graphics\\\"]]]]]], \
MouseAppearanceTag[\\\"NetworkGraphics\\\"]], Rule[AllowKernelInitialization, \
False]]], List[Rule[FormatType, TraditionalForm], Rule[FrameTicks, None], \
Rule[ImageSize, Large], Rule[PlotLabel, FormBox[\\\"\\\\\\\"Initial Resilient \
Mesh Network with Link Latencies\\\\\\\"\\\", TraditionalForm]], \
Rule[DefaultBaseStyle, \\\"NetworkGraphics\\\"]]], \\\"]\\\"}]\\).\"", 2, 562,
    93, 19049408607000978632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.962989417206348*^9, 3.962989545704585*^9, 
  3.962990042030498*^9},
 CellLabel->
  "During evaluation of \
In[559]:=",ExpressionUUID->"1d91fa6b-960c-4f8b-ac64-2737630f1d4d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Path Latency of the Minimum Spanning Tree: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"Total", "[", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 
          UndirectedEdge[1, 2], 
          UndirectedEdge[2, 3], 
          UndirectedEdge[4, 5], 
          UndirectedEdge[5, 6], 
          UndirectedEdge[6, 7], 
          UndirectedEdge[1, 8], 
          UndirectedEdge[2, 6], 
          UndirectedEdge[2, 8], 
          UndirectedEdge[8, 4], 
          UndirectedEdge[3, 7]}, {
          SparseArray[
          Automatic, {18, 18}, 0, {
           1, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6}, {{
             2}, {4}, {3}, {1}, {5}, {6}}}, Pattern}], Null}, {
         EdgeLabels -> {"EdgeWeight"}, EdgeWeight -> {2, 4, 3, 1, 5, 6}, 
          GraphLayout -> "SpringElectricalEmbedding", ImageSize -> Large, 
          PlotLabel -> "Initial Resilient Mesh Network with Link Latencies", 
          VertexLabels -> {"Name"}, VertexSize -> {Large}, VertexStyle -> {
            RGBColor[0.87, 0.94, 1]}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
           Medium], {
            ArrowBox[{{0.06251000000000007, -0.06251}, {1.06251, -0.06251}}, 
             0.025003999999999995`], 
            InsetBox["2", {0.5625100000000001, -0.06251}, ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            ArrowBox[{{0.06251000000000007, -0.31255}, {1.06251, -0.31255}}, 
             0.025003999999999995`], 
            InsetBox["4", {0.5625100000000001, -0.31255}, ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            ArrowBox[{{0.06251000000000007, -0.18752999999999997`}, {
             1.06251, -0.18752999999999997`}}, 0.025003999999999995`], 
            InsetBox["3", {0.5625100000000001, -0.18752999999999997}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            ArrowBox[{{0.06251000000000007, -0.6876099999999999}, {
             1.06251, -0.6876099999999999}}, 0.025003999999999995`], 
            InsetBox["1", {0.5625100000000001, -0.6876099999999999}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            ArrowBox[{{0.06251000000000007, -0.43756999999999996`}, {
             1.06251, -0.43756999999999996`}}, 0.025003999999999995`], 
            InsetBox["5", {0.5625100000000001, -0.43756999999999996}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}, {
            ArrowBox[{{0.06251000000000007, -0.5625899999999999}, {
             1.06251, -0.5625899999999999}}, 0.025003999999999995`], 
            InsetBox["6", {0.5625100000000001, -0.5625899999999999}, 
             ImageScaled[{0.5, 0.5}],
             BaseStyle->"Graphics"]}}, 
          {RGBColor[0.87, 0.94, 1], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {
            DiskBox[{1.06251, -0.6876099999999999}, 0.025003999999999995], 
            InsetBox["1", {1.0975156000000001, -0.6876099999999999}, 
             ImageScaled[{-0.25, 0.5000000000000002}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.06251, -0.06251}, 0.025003999999999995], 
            InsetBox["2", {1.0975156000000001, -0.06251000000000001}, 
             ImageScaled[{-0.25, 0.5000000000000002}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.06251, -0.18752999999999997`}, 0.025003999999999995], 
            InsetBox["3", {1.0975156000000001, -0.18752999999999997}, 
             ImageScaled[{-0.25, 0.5000000000000002}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.06251, -0.31255}, 0.025003999999999995], 
            InsetBox["4", {1.0975156000000001, -0.31255}, ImageScaled[{-0.25, 0.5000000000000002}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.06251, -0.43756999999999996`}, 0.025003999999999995], 
            InsetBox["5", {1.0975156000000001, -0.43756999999999996}, 
             ImageScaled[{-0.25, 0.5000000000000002}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.06251, -0.5625899999999999}, 0.025003999999999995], 
            InsetBox["6", {1.0975156000000001, -0.5625899999999999}, 
             ImageScaled[{-0.25, 0.5000000000000002}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.25001333333333337`, -0.81263}, 0.025003999999999995], 
            InsetBox["7", 
             Offset[{2, 2}, {0.27501733333333334, -0.7876259999999999}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.4375166666666667, -0.81263}, 0.025003999999999995], 
            InsetBox["8", 
             Offset[{2, 2}, {0.4625206666666667, -0.7876259999999999}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.62502, -0.81263}, 0.025003999999999995], InsetBox[
             RowBox[{"1", "\[UndirectedEdge]", "2"}], 
             Offset[{2, 2}, {0.650024, -0.7876259999999999}], ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.8125233333333334, -0.81263}, 0.025003999999999995], 
            InsetBox[
             RowBox[{"2", "\[UndirectedEdge]", "3"}], 
             Offset[{2, 2}, {0.8375273333333334, -0.7876259999999999}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.0000266666666668`, -0.81263}, 0.025003999999999995], 
            InsetBox[
             RowBox[{"4", "\[UndirectedEdge]", "5"}], 
             Offset[{2, 2}, {1.0250306666666669, -0.7876259999999999}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.06251, -0.81263}, 0.025003999999999995], InsetBox[
             RowBox[{"5", "\[UndirectedEdge]", "6"}], 
             Offset[{2, 2}, {0.087514, -0.7876259999999999}], ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.06251000000000007, -0.06251}, 0.025003999999999995], 
            InsetBox[
             RowBox[{"6", "\[UndirectedEdge]", "7"}], {0.027504400000000068, -0.06250999999999998},
              ImageScaled[{1.25, 0.49999999999999983}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.06251000000000007, -0.31255}, 0.025003999999999995], 
            InsetBox[
             RowBox[{"1", "\[UndirectedEdge]", "8"}], {0.027504400000000068, -0.31255},
              ImageScaled[{1.25, 0.49999999999999983}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.06251000000000007, -0.18752999999999997`}, 
             0.025003999999999995], InsetBox[
             RowBox[{"2", "\[UndirectedEdge]", "6"}], {0.027504400000000068, -0.18752999999999997},
              ImageScaled[{1.25, 0.49999999999999983}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.06251000000000007, -0.6876099999999999}, 
             0.025003999999999995], InsetBox[
             RowBox[{"2", "\[UndirectedEdge]", "8"}], {0.027504400000000068, -0.6876099999999999},
              ImageScaled[{1.25, 0.49999999999999983}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.06251000000000007, -0.43756999999999996`}, 
             0.025003999999999995], InsetBox[
             RowBox[{"8", "\[UndirectedEdge]", "4"}], {0.027504400000000068, -0.43756999999999996},
              ImageScaled[{1.25, 0.49999999999999983}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.06251000000000007, -0.5625899999999999}, 
             0.025003999999999995], InsetBox[
             RowBox[{"3", "\[UndirectedEdge]", "7"}], {0.027504400000000068, -0.5625899999999999},
              ImageScaled[{1.25, 0.49999999999999983}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->"NetworkGraphics",
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageSize->Large,
     PlotLabel->FormBox[
      "\"Initial Resilient Mesh Network with Link Latencies\"", 
       TraditionalForm]], "]"}]}],
  SequenceForm["Total Path Latency of the Minimum Spanning Tree: ", 
   Total[
    Graph[{1, 2, 3, 4, 5, 6, 7, 8, 
      UndirectedEdge[1, 2], 
      UndirectedEdge[2, 3], 
      UndirectedEdge[4, 5], 
      UndirectedEdge[5, 6], 
      UndirectedEdge[6, 7], 
      UndirectedEdge[1, 8], 
      UndirectedEdge[2, 6], 
      UndirectedEdge[2, 8], 
      UndirectedEdge[8, 4], 
      UndirectedEdge[3, 7]}, {
      SparseArray[
      Automatic, {18, 18}, 0, {
       1, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6}, {{2}, {
         4}, {3}, {1}, {5}, {6}}}, Pattern}], Null}, {
     EdgeLabels -> {"EdgeWeight"}, EdgeWeight -> {2, 4, 3, 1, 5, 6}, 
      GraphLayout -> "SpringElectricalEmbedding", ImageSize -> Large, 
      PlotLabel -> "Initial Resilient Mesh Network with Link Latencies", 
      VertexLabels -> {"Name"}, VertexSize -> {Large}, VertexStyle -> {
        RGBColor[0.87, 0.94, 1]}}]]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.962989390696129*^9, 3.962989417219955*^9}, 
   3.962989545754238*^9, 3.962990042044331*^9},
 CellLabel->
  "During evaluation of \
In[559]:=",ExpressionUUID->"6a02f34b-c466-40c8-98cc-3cf391e88b2f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 
       UndirectedEdge[1, 2], 
       UndirectedEdge[2, 3], 
       UndirectedEdge[4, 5], 
       UndirectedEdge[5, 6], 
       UndirectedEdge[6, 7], 
       UndirectedEdge[1, 8], 
       UndirectedEdge[2, 6], 
       UndirectedEdge[2, 8], 
       UndirectedEdge[8, 4], 
       UndirectedEdge[3, 7]}, {{{9, 6}, {10, 1}, {11, 1}, {12, 2}, {13, 2}, {
       14, 4}, {15, 3}, {16, 1}, {17, 5}, {18, 6}}, Null}, {
      EdgeLabels -> {"EdgeWeight"}, 
       EdgeWeight -> {6, 1, 1, 2, 2, 4, 3, 1, 5, 6}, 
       GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
       "SpringElectricalEmbedding", ImageSize -> Large, PlotLabel -> 
       "Shortest Path Between Node 1 and 7", VertexLabels -> {"Name"}, 
       VertexSize -> {Large}, VertexStyle -> {
         RGBColor[0.87, 0.94, 1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[{{2.160024531986568, -2.308705125054743}, {
          1.1593357631739976`, -2.3087051250547392`}}, 0.06401000268645474], 
         InsetBox["6", {1.659680147580283, -2.308705125054741}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1.8924062945339768`, -0.17804191475576814`}, {
          1.021572220009265, -0.6683999992819973}}, 0.06401000268645474], 
         InsetBox["1", {1.456989257271621, -0.42322095701888274}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1.0127410306772138`, -1.668605098190188}, {
          1.021572220009265, -0.6683999992819973}}, 0.06401000268645474], 
         InsetBox["1", {1.0171566253432394, -1.1685025487360927}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2.160024531986568, -1.9886551116224653`}, {
          1.1593357631739976`, -1.9886551116224618`}}, 0.06401000268645474], 
         InsetBox["2", {1.659680147580283, -1.9886551116224636}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.16002500671613695`, -1.9886551116224653`}, {
          1.1593357631739976`, -1.9886551116224618`}}, 0.06401000268645474], 
         InsetBox["2", {0.6596803849450672, -1.9886551116224636}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.16002500671613684`, -3.268855165351564}, {
          1.1600250067161368`, -3.268855165351564}}, 0.06401000268645474], 
         InsetBox["4", {0.6600250067161368, -3.268855165351564}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.16002500671613684`, -2.94880515191929}, {
          1.1600250067161368`, -2.94880515191929}}, 0.06401000268645474], 
         InsetBox["3", {0.6600250067161368, -2.94880515191929}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.16002500671613684`, -0.16002500671613684`}, {
          1.021572220009265, -0.6683999992819973}}, 0.06401000268645474], 
         InsetBox["1", {0.5907986133627009, -0.4142125029990671}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.16002500671613684`, -2.6287551384870165`}, {
          1.1600250067161368`, -2.6287551384870165`}}, 0.06401000268645474], 
         InsetBox["5", {0.6600250067161368, -2.6287551384870165}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.16002500671613695`, -2.308705125054743}, {
          1.1593357631739976`, -2.3087051250547392`}}, 0.06401000268645474], 
         InsetBox["6", {0.6596803849450672, -2.308705125054741}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {RGBColor[0.87, 0.94, 1], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{1.021572220009265, -0.6683999992819973}, 
          0.06401000268645474], 
         InsetBox["1", {1.0224795445482142, -0.5787905888818384}, 
          ImageScaled[{0.4924063943619068, -0.2499615571170386}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1593357631739976`, -1.9886551116224618`}, 
          0.06401000268645474], 
         InsetBox["2", {1.1593357631739976, -1.899041107861425}, ImageScaled[{0.49999999999999967, -0.25}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1600250067161368`, -2.94880515191929}, 
          0.06401000268645474], 
         InsetBox["3", {1.2496390104771735, -2.94880515191929}, ImageScaled[{-0.25, 0.5000000000000002}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1600250067161368`, -3.268855165351564}, 
          0.06401000268645474], 
         InsetBox["4", {1.2496390104771735, -3.268855165351564}, ImageScaled[{-0.25, 0.5000000000000002}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1600250067161368`, -2.6287551384870165`}, 
          0.06401000268645474], 
         InsetBox["5", {1.2496390104771735, -2.6287551384870165}, 
          ImageScaled[{-0.25, 0.5000000000000002}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1593357631739976`, -2.3087051250547392`}, 
          0.06401000268645474], 
         InsetBox["6", {1.1593357631739976, -2.219091121293703}, ImageScaled[{0.49999999999999967, -0.25}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.6000415196170386`, -3.268855165351564}, 
          0.06401000268645474], 
         InsetBox["7", 
          Offset[{2, 2}, {1.6640515223034933, -3.204845162665109}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0400580325179405`, -3.268855165351564}, 
          0.06401000268645474], 
         InsetBox["8", 
          Offset[{2, 2}, {2.1040680352043952, -3.204845162665109}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.160024531986568, -2.308705125054743}, 
          0.06401000268645474], InsetBox[
          RowBox[{"1", "\[UndirectedEdge]", "2"}], {2.2496385357476045, -2.3087051250547432},
           ImageScaled[{-0.25, 0.5000000000000029}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8924062945339768`, -0.17804191475576814`}, 
          0.06401000268645474], InsetBox[
          RowBox[{"2", "\[UndirectedEdge]", "3"}], {1.9704919694111562, -0.13407264083569376},
           ImageScaled[{-0.1535167909030275, 0.13201113602744885}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0127410306772138`, -1.668605098190188}, 
          0.06401000268645474], InsetBox[
          RowBox[{"4", "\[UndirectedEdge]", "5"}], {1.0119498255645796, -1.7582156090946173},
           ImageScaled[{0.5066217757222182, 1.24997076748783}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.160024531986568, -1.9886551116224653`}, 
          0.06401000268645474], InsetBox[
          RowBox[{"5", "\[UndirectedEdge]", "6"}], {2.2496385357476045, -1.9886551116224656},
           ImageScaled[{-0.25, 0.5000000000000029}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.16002500671613695`, -1.9886551116224653`}, 
          0.06401000268645474], InsetBox[
          RowBox[{"6", "\[UndirectedEdge]", "7"}], {0.07041100295510033, -1.9886551116224656},
           ImageScaled[{1.25, 0.5000000000000024}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.16002500671613684`, -3.268855165351564}, 
          0.06401000268645474], InsetBox[
          RowBox[{"1", "\[UndirectedEdge]", "8"}], {0.07041100295510022, -3.268855165351564},
           ImageScaled[{1.25, 0.49999999999999983}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.16002500671613684`, -2.94880515191929}, 
          0.06401000268645474], InsetBox[
          RowBox[{"2", "\[UndirectedEdge]", "6"}], {0.07041100295510022, -2.94880515191929},
           ImageScaled[{1.25, 0.49999999999999983}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.16002500671613684`, -0.16002500671613684`}, 
          0.06401000268645474], InsetBox[
          RowBox[{"2", "\[UndirectedEdge]", "8"}], {0.08284565646663153, -0.11448362372058794},
           ImageScaled[{1.1459315537500472, 0.11885379725091083}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.16002500671613684`, -2.6287551384870165`}, 
          0.06401000268645474], InsetBox[
          RowBox[{"8", "\[UndirectedEdge]", "4"}], {0.07041100295510022, -2.6287551384870165},
           ImageScaled[{1.25, 0.49999999999999983}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.16002500671613695`, -2.308705125054743}, 
          0.06401000268645474], InsetBox[
          RowBox[{"3", "\[UndirectedEdge]", "7"}], {0.07041100295510033, -2.3087051250547432},
           ImageScaled[{1.25, 0.5000000000000024}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox[
   "\"Shortest Path Between Node 1 and 7\"", TraditionalForm]]], "Output",
 CellChangeTimes->{{3.962989390687581*^9, 3.9629894171136923`*^9}, 
   3.9629895456173983`*^9, 3.9629900420673*^9},
 CellLabel->
  "Out[566]=",ExpressionUUID->"08d66d94-7530-44df-8c88-e1da2ec8d621"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Shortest path: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "}"}]}],
  SequenceForm["Shortest path: ", {}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.962989390696129*^9, 3.962989417219955*^9}, 
   3.962989545754238*^9, 3.96299004207283*^9},
 CellLabel->
  "During evaluation of \
In[559]:=",ExpressionUUID->"e10f9525-6c44-4a2c-9222-a2f9147e2046"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Latency of shortest path: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Latency of shortest path: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.962989390696129*^9, 3.962989417219955*^9}, 
   3.962989545754238*^9, 3.962990042073284*^9},
 CellLabel->
  "During evaluation of \
In[559]:=",ExpressionUUID->"4705ab76-0916-4b67-b389-546d2cc073ad"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Path\"\>", "\<\"Total Latency\"\>"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       GrayLevel[0.85], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.962989390687581*^9, 3.9629894171136923`*^9}, 
   3.9629895456173983`*^9, 3.962990042073832*^9},
 CellLabel->
  "Out[571]=",ExpressionUUID->"7fdd2c40-a3e4-4350-8816-db3eecce81cb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The FindSpanningTree function simulates the conventional approach of \
protocols like STP, which prune the rich physical graph into a single, \
loop-free tree. The output image highlights this \
\[OpenCurlyDoubleQuote]Minimum Spanning Tree (Optimal Path)\
\[CloseCurlyDoubleQuote]. This classical method is fundamentally flawed \
because it discards the network\[CloseCurlyQuote]s inherent resilience. As \
Paul Borrill argues, \[OpenCurlyDoubleQuote]You cannot add reliability on top \
of an unreliable network\[CloseCurlyDoubleQuote], and forcing traffic onto a \
single, brittle tree creates single points of failure. When a link in this \
tree breaks, applications are forced to use timeouts to distinguish between a \
node that is dead and one that is \[OpenCurlyDoubleQuote]just slow to \
respond,\[CloseCurlyDoubleQuote] leading to the long tail latencies and \
transaction failures that make today\[CloseCurlyQuote]s networks unsafe for \
atomic operations. This reliance on timeouts and retries results in a \
\[OpenCurlyDoubleQuote]loss of Shannon information\[CloseCurlyDoubleQuote], \
which is the root cause of data corruption and inconsistency in distributed \
systems.\
\>", "Chapter",
 CellChangeTimes->{{3.9629906915537767`*^9, 3.962990692034157*^9}, 
   3.962991037472992*^9, 3.9629911087683973`*^9},
 FontSize->14,ExpressionUUID->"5d936cf1-8ff8-4406-b3e4-4e54de14f311"],

Cell[CellGroupData[{

Cell["\<\
This Mathematica script serves as a \[OpenCurlyDoubleQuote]Code as Proof\
\[CloseCurlyDoubleQuote] analysis, providing the formal foundation for the \
presentations on Open Atomic Ethernet at the upcoming FMS (Future of Memory \
and Storage) conference. It visualizes the core architectural argument: the \
superiority of a resilient, switchless mesh fabric over the brittle, \
tree-based topologies common in conventional networking. The code \
demonstrates how to achieve transactional integrity by leveraging the \
inherent path diversity of the physical network, moving beyond the \
limitations of classical protocols that lead to data loss and corruption.\
\>", "Subsection",
 CellChangeTimes->{{3.962990697399872*^9, 3.962990698066004*^9}, {
  3.962991041670515*^9, 3.9629910478437243`*^9}},
 FontSize->12,ExpressionUUID->"50fff699-74c8-4bc3-b379-2b5ccd1a88d4"],

Cell[CellGroupData[{

Cell["\<\
The script begins by defining a graph that represents the physical network \
fabric, what we refer to as the N2N Lattice. In this model, each vertex is an \
autonomous CELL, or an \[OpenCurlyDoubleQuote]XPU,\[CloseCurlyDoubleQuote] \
and the weighted edges signify the latency of the direct, \
neighbor-to-neighbor links. This is not a traditional network with \
centralized switches; instead, \[OpenCurlyDoubleQuote]every one of these dots \
on the screen is actually a GPU, and it\[CloseCurlyQuote]s talking to its \
neighbors\[CloseCurlyDoubleQuote]. Every node has the ability to both compute \
on packets and forward them. This \[OpenCurlyDoubleQuote]sea of XPUs\
\[CloseCurlyDoubleQuote] forms the groundplane for the \
\[OpenCurlyDoubleQuote]path discovery\[CloseCurlyDoubleQuote] algorithms that \
allow the network to self-organize without centralized control.\
\>", "Subsubsection",
 CellChangeTimes->{{3.96299070335322*^9, 3.962990704491493*^9}, 
   3.9629910490614023`*^9, {3.962991093942431*^9, 3.962991096928961*^9}},
 FontSize->12,ExpressionUUID->"80899919-86f9-423e-bca4-9ab804149372"],

Cell["\<\
The script\[CloseCurlyQuote]s most critical insight comes from the FindPath \
analysis, which calculates all possible paths between two nodes. The \
resulting table of paths and their latencies demonstrates the rich path \
diversity inherent in the physical mesh. This is the essence of \
\[OpenCurlyDoubleQuote]scouting\[CloseCurlyDoubleQuote] rather than routing; \
the goal is to discover all available topological resources. This diversity \
is what enables a self-healing network. As Dugan Hammock\[CloseCurlyQuote]s \
simulations show, with knowledge of these alternate paths, the network can \
\[OpenCurlyDoubleQuote]respond to failures in real time without dropping \
packets\[CloseCurlyDoubleQuote] by simply rerouting traffic along a different \
known route. This allows the fabric to handle link failures in microseconds, \
providing the foundation for \[OpenCurlyDoubleQuote]Transactional Integrity \
at Layer 2\[CloseCurlyDoubleQuote] and making the network truly \
\[OpenCurlyDoubleQuote]safe for transactions\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.962990708929163*^9, 3.9629907092792273`*^9}, {
  3.962991051595783*^9, 
  3.962991107344252*^9}},ExpressionUUID->"473b869b-1180-485d-93d5-\
747c322bf828"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"latencies", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "\[UndirectedEdge]", "2"}], "\[Rule]", "6"}], ",", 
     RowBox[{
      RowBox[{"2", "\[UndirectedEdge]", "3"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"4", "\[UndirectedEdge]", "5"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"5", "\[UndirectedEdge]", "6"}], "\[Rule]", "2"}], ",", 
     RowBox[{
      RowBox[{"6", "\[UndirectedEdge]", "7"}], "\[Rule]", "2"}], ",", 
     RowBox[{
      RowBox[{"1", "\[UndirectedEdge]", "8"}], "\[Rule]", "4"}], ",", 
     RowBox[{
      RowBox[{"2", "\[UndirectedEdge]", "6"}], "\[Rule]", "3"}], ",", 
     RowBox[{
      RowBox[{"2", "\[UndirectedEdge]", "8"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"8", "\[UndirectedEdge]", "4"}], "\[Rule]", "5"}], ",", 
     RowBox[{
      RowBox[{"3", "\[UndirectedEdge]", "7"}], "\[Rule]", "6"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Range", "[", "8", "]"}], ",", 
     RowBox[{"Keys", "[", "latencies", "]"}], ",", 
     RowBox[{"EdgeWeight", "\[Rule]", 
      RowBox[{"Values", "[", "latencies", "]"}]}], ",", 
     RowBox[{"EdgeLabels", "\[Rule]", "\"\<EdgeWeight\>\""}], ",", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<SpringElectricalEmbedding\>\""}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Initial Resilient Mesh Network with Link Latencies\>\""}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
     RowBox[{"VertexSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"VertexStyle", "\[Rule]", "LightBlue"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"mst", "=", 
   RowBox[{"FindSpanningTree", "[", "g", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mst\[CapitalLambda]", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"g", ",", "#1"}], "}"}], ",", "EdgeWeight"}], "]"}], "&"}], 
      ")"}], "/@", 
     RowBox[{"EdgeList", "[", "mst", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Total latency of the minimum spanning tree: \>\"", ",", 
    "mst\[CapitalLambda]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HighlightGraph", "[", 
   RowBox[{"g", ",", "mst", ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", "\"\<Minimum Spanning Tree (Optimal Path)\>\""}], 
    ",", 
    RowBox[{"GraphHighlightStyle", "\[Rule]", 
     RowBox[{"{", "\"\<Thick\>\"", "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"shortestPath", "=", 
   RowBox[{"FindShortestPath", "[", 
    RowBox[{"g", ",", "1", ",", "7"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"edgeify", "[", "seq_List", "]"}], ":=", 
   RowBox[{"UndirectedEdge", "@@", "seq"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"short\[CapitalLambda]", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"PropertyValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"g", ",", 
        RowBox[{"edgeify", "/@", 
         RowBox[{"Partition", "[", 
          RowBox[{"shortestPath", ",", "2", ",", "1"}], "]"}]}]}], "}"}], ",",
       "EdgeWeight"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Shortest path: \>\"", ",", "shortestPath"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Latency of shortest path: \>\"", ",", "short\[CapitalLambda]"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HighlightGraph", "[", 
   RowBox[{"g", ",", 
    RowBox[{"PathGraph", "[", "shortestPath", "]"}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", "\"\<Shortest Path Between Node 1 and 7\>\""}], 
    ",", 
    RowBox[{"GraphHighlightStyle", "\[Rule]", 
     RowBox[{"{", "\"\<Thick\>\"", "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"latencyOf", "[", "path_", "]"}], ":=", 
   RowBox[{"Total", "[", 
    RowBox[{"PropertyValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"g", ",", 
        RowBox[{"edgeify", "/@", 
         RowBox[{"Partition", "[", 
          RowBox[{"path", ",", "2", ",", "1"}], "]"}]}]}], "}"}], ",", 
      "EdgeWeight"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"allPaths", "=", 
   RowBox[{"FindPath", "[", 
    RowBox[{"g", ",", "1", ",", "7", ",", "\[Infinity]", ",", "All"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pathTable", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", 
        RowBox[{"latencyOf", "[", "#1", "]"}]}], "}"}], "&"}], ")"}], "/@", 
    "allPaths"}]}], ";"}], "\n", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{"pathTable", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Path\>\"", ",", "\"\<Total Latency\>\""}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"LightGray", ",", "White"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9629894808162813`*^9, 3.962989480817699*^9}, 
   3.962989548618135*^9},
 CellLabel->
  "In[572]:=",ExpressionUUID->"a0f08b5a-4b59-4005-8e21-6e4b0a188b0e"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total latency of the minimum spanning tree: \"\>", 
   "\[InvisibleSpace]", "14"}],
  SequenceForm["Total latency of the minimum spanning tree: ", 14],
  Editable->False]], "Print",
 CellChangeTimes->{3.962989481537572*^9, 3.962989548903882*^9, 
  3.962990049489566*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"841456d1-c482-4765-8961-4f6691b3f174"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Shortest path: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "8", ",", "2", ",", "6", ",", "7"}], "}"}]}],
  SequenceForm["Shortest path: ", {1, 8, 2, 6, 7}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962989481537572*^9, 3.962989548903882*^9, 
  3.9629900494906197`*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"39af036b-1a40-47c6-b9b9-70545f9b2424"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Latency of shortest path: \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Latency of shortest path: ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.962989481537572*^9, 3.962989548903882*^9, 
  3.962990049491358*^9},
 CellLabel->
  "During evaluation of \
In[572]:=",ExpressionUUID->"01caf88f-72d7-4231-a2c6-49477264dece"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Path\"\>", "\<\"Total Latency\"\>"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "6", ",", "7"}], "}"}], "11"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "7"}], "}"}], "13"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "8", ",", "2", ",", "6", ",", "7"}], "}"}], "10"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "8", ",", "2", ",", "3", ",", "7"}], "}"}], "12"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "8", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}], 
     "14"},
    {
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "8", ",", "4", ",", "5", ",", "6", ",", "7"}], 
      "}"}], "17"},
    {
     RowBox[{"{", 
      RowBox[{
      "1", ",", "8", ",", "4", ",", "5", ",", "6", ",", "2", ",", "3", ",", 
       "7"}], "}"}], "22"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       GrayLevel[0.85], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.962989481540193*^9, 3.962989548905819*^9, 
  3.9629900494920073`*^9},
 CellLabel->
  "Out[588]=",ExpressionUUID->"9330908f-2390-4d28-b85c-8cf65b21fd14"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The output from this Mathematica notebook serves as the quantitative \
\[OpenCurlyDoubleQuote]Code as Proof\[CloseCurlyDoubleQuote] that validates \
the architectural principles of Open Atomic Ethernet, providing the concrete \
data for our presentations at the Future of Memory and Storage (FMS) \
conference. The results highlight the tangible performance and resilience \
benefits of a graph-aware network, demonstrating a clear departure from the \
fragile models of conventional Ethernet.\
\>", "Chapter",
 CellChangeTimes->{{3.9629906915537767`*^9, 3.962990692034157*^9}, {
  3.962991192297077*^9, 3.962991203597259*^9}},
 FontSize->14,ExpressionUUID->"8504e43b-361b-44cb-9a3f-5cfacf1a2db3"],

Cell[CellGroupData[{

Cell["\<\
The script first calculates the total latency of the Minimum Spanning Tree \
(MST) as 14 units. This represents the so-called \
\[OpenCurlyDoubleQuote]optimal path\[CloseCurlyDoubleQuote] in a network \
running a classical protocol like STP, which prunes redundant links to create \
a single, loop-free topology. This approach, however, is fundamentally \
flawed. It attempts to impose order on what is an inherently \
\[OpenCurlyDoubleQuote]unreliable network,\[CloseCurlyDoubleQuote] but as \
Paul Borrill states, \[OpenCurlyDoubleQuote]You cannot add reliability on top \
of an unreliable network\[CloseCurlyDoubleQuote]. By discarding the very \
links that provide resilience, this model creates a brittle system vulnerable \
to single points of failure.
\
\>", "Subsection",
 CellChangeTimes->{{3.962990697399872*^9, 3.962990698066004*^9}, {
  3.962991204699297*^9, 3.962991220912168*^9}},
 FontSize->14,ExpressionUUID->"51f38f9d-4387-4c14-ab11-f74919ca202e"],

Cell[CellGroupData[{

Cell["\<\
The analysis then reveals the true shortest path between Node 1 and Node 7 is \
{1, 8, 2, 6, 7}, with a significantly lower latency of 10 units. A \
conventional network, locked into its single spanning tree, would be blind to \
this more efficient route. This demonstrates the power of \
\[OpenCurlyDoubleQuote]scouting\[CloseCurlyDoubleQuote] the full topology \
over classical routing. A Graph Virtual Machine (GVM) operating on the \
complete N2N Lattice would identify and utilize this optimal path, whereas a \
traditional protocol would have already pruned away the necessary links.\
\>", "Subsubsection",
 CellChangeTimes->{{3.96299070335322*^9, 3.962990704491493*^9}, {
  3.962991210487309*^9, 3.962991219272389*^9}},
 FontSize->14,ExpressionUUID->"9efc28cd-e259-4a51-8f85-c6ddd490c85f"],

Cell["\<\
The final grid output is the most critical result, enumerating seven distinct \
paths between nodes 1 and 7 with latencies ranging from 10 to 22. This table \
is a formal representation of the path diversity that a resilient mesh fabric \
provides and that classical protocols destroy. This list represents a \
pre-computed set of recovery options that enables a self-healing network. As \
demonstrated in Dugan Hammock\[CloseCurlyQuote]s FMS presentation on path \
discovery, if the primary path with latency 10 fails, the network can \
\[OpenCurlyDoubleQuote]respond to failures in real time without dropping \
packets\[CloseCurlyDoubleQuote] by instantly rerouting traffic onto the \
next-best path. This local recovery mechanism avoids the slow, global \
reconvergence events that plague traditional systems.

These results provide definitive proof of the D\[CapitalAE]D\[CapitalAE]LUS \
approach. By embracing the full graph, we gain access to lower-latency paths \
and the rich path diversity required for a truly self-healing fabric. This \
architecture avoids the \[OpenCurlyDoubleQuote]smash and restart\
\[CloseCurlyDoubleQuote] logic of timeouts, which cause a \
\[OpenCurlyDoubleQuote]loss of Shannon information\[CloseCurlyDoubleQuote]. \
Instead, it provides the foundation for Reversible Subtransactions and the \
deterministic network needed to achieve \[OpenCurlyDoubleQuote]Transactional \
Integrity at Layer 2\[CloseCurlyDoubleQuote], finally making networks \
\[OpenCurlyDoubleQuote]safe for transactions\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.962990708929163*^9, 3.9629907092792273`*^9}, {
   3.962991213071539*^9, 3.962991215432423*^9}, 3.962993880079193*^9},
 FontSize->14,ExpressionUUID->"5ba309c0-694f-4144-8b53-5d1cac449462"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"8", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "7"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"weights", "=", 
   RowBox[{"{", 
    RowBox[{
    "6", ",", "1", ",", "1", ",", "2", ",", "2", ",", "4", ",", "3", ",", "1",
      ",", "5", ",", "6"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ewRules", "=", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{"edges", ",", "weights"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Range", "[", "8", "]"}], ",", "edges", ",", 
     RowBox[{"EdgeWeight", "\[Rule]", "weights"}], ",", 
     RowBox[{"EdgeLabels", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#1", "\[Rule]", 
         RowBox[{"ewRules", "[", "#1", "]"}]}], "&"}], ")"}]}], ",", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<SpringElectricalEmbedding\>\""}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Initial Resilient Mesh Network with Link Latencies\>\""}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
     RowBox[{"VertexSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"VertexStyle", "\[Rule]", "LightBlue"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"mstEdges", "=", 
   RowBox[{"FindSpanningTree", "[", "g", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mstLatency", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"g", ",", "#1"}], "}"}], ",", "EdgeWeight"}], "]"}], "&"}], 
      ")"}], "/@", 
     RowBox[{"EdgeList", "[", "mstEdges", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HighlightGraph", "[", 
   RowBox[{"g", ",", "mstEdges", ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", "\"\<Minimum Spanning Tree (Optimal Path)\>\""}], 
    ",", 
    RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Total path latency of the minimum-spanning tree: \>\"", ",", 
    "mstLatency"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"shortestPath", "=", 
   RowBox[{"FindShortestPath", "[", 
    RowBox[{"g", ",", "1", ",", "7"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"shortestPathLatency", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"g", ",", 
           RowBox[{"UndirectedEdge", "@@", "#1"}]}], "}"}], ",", 
         "EdgeWeight"}], "]"}], "&"}], ")"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"shortestPath", ",", "2", ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"HighlightGraph", "[", 
   RowBox[{"g", ",", 
    RowBox[{"PathGraph", "[", "shortestPath", "]"}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", "\"\<Shortest Path Between Node 1 and 7\>\""}], 
    ",", 
    RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Shortest path: \>\"", ",", "shortestPath"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Latency of shortest path: \>\"", ",", "shortestPathLatency"}],
    "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"allPaths", "=", 
   RowBox[{"FindPath", "[", 
    RowBox[{"g", ",", "1", ",", "7", ",", "\[Infinity]", ",", "All"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pathData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"path", ",", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"g", ",", 
               RowBox[{"UndirectedEdge", "@@", "#1"}]}], "}"}], ",", 
             "EdgeWeight"}], "]"}], "&"}], ")"}], "/@", 
         RowBox[{"Partition", "[", 
          RowBox[{"path", ",", "2", ",", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"path", ",", "allPaths"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{"pathData", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Path\>\"", ",", "\"\<Total Latency\>\""}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"LightGray", ",", "White"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.962989507140573*^9, 3.9629895071419973`*^9}, 
   3.9629895503811283`*^9, 3.962990534150161*^9},
 CellLabel->
  "In[1007]:=",ExpressionUUID->"b139740d-b940-4afd-a5b1-dafab9a818c6"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total path latency of the minimum-spanning tree: \"\>", 
   "\[InvisibleSpace]", "14"}],
  SequenceForm["Total path latency of the minimum-spanning tree: ", 14],
  Editable->False]], "Print",
 CellChangeTimes->{{3.962989492386191*^9, 3.962989507411852*^9}, 
   3.962989550651132*^9, 3.962990054281673*^9, 3.962990534492021*^9},
 CellLabel->
  "During evaluation of \
In[1007]:=",ExpressionUUID->"3fbe7044-ecbe-4782-ab61-8e2f5f28a8eb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Shortest path: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "8", ",", "2", ",", "6", ",", "7"}], "}"}]}],
  SequenceForm["Shortest path: ", {1, 8, 2, 6, 7}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.962989492386191*^9, 3.962989507411852*^9}, 
   3.962989550651132*^9, 3.962990054281673*^9, 3.962990534493091*^9},
 CellLabel->
  "During evaluation of \
In[1007]:=",ExpressionUUID->"06634f6d-510e-457b-a990-023fc599b9e6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Latency of shortest path: \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Latency of shortest path: ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{{3.962989492386191*^9, 3.962989507411852*^9}, 
   3.962989550651132*^9, 3.962990054281673*^9, 3.962990534493926*^9},
 CellLabel->
  "During evaluation of \
In[1007]:=",ExpressionUUID->"bd8ffc79-343f-4bc5-8512-741e314d4c7a"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Path\"\>", "\<\"Total Latency\"\>"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "6", ",", "7"}], "}"}], "11"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "7"}], "}"}], "13"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "8", ",", "2", ",", "6", ",", "7"}], "}"}], "10"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "8", ",", "2", ",", "3", ",", "7"}], "}"}], "12"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "8", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}], 
     "14"},
    {
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "8", ",", "4", ",", "5", ",", "6", ",", "7"}], 
      "}"}], "17"},
    {
     RowBox[{"{", 
      RowBox[{
      "1", ",", "8", ",", "4", ",", "5", ",", "6", ",", "2", ",", "3", ",", 
       "7"}], "}"}], "22"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       GrayLevel[0.85], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.962989492389559*^9, 3.962989507415835*^9}, 
   3.962989550653183*^9, 3.962990054284129*^9, 3.9629905344947367`*^9},
 CellLabel->
  "Out[1022]=",ExpressionUUID->"3e4cc4f8-49ba-46d8-b53f-5c9fc959690f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Groundplane vs. The Brittle Tree", "Chapter",
 CellChangeTimes->{{3.9629906915537767`*^9, 3.962990692034157*^9}, {
  3.9629912845598927`*^9, 
  3.962991285037301*^9}},ExpressionUUID->"71b407b8-545d-4a28-9a1a-\
bde683c4a298"],

Cell["\<\
This Mathematica notebook provides the formal \[OpenCurlyDoubleQuote]Code as \
Proof\[CloseCurlyDoubleQuote] for the architectural principles of Open Atomic \
Ethernet, visualizing the tangible benefits of a graph-aware network. The \
output demonstrates the core arguments being prepared for our presentations \
at the FMS (Future of Memory and Storage) conference, contrasting the \
resilience of a true mesh fabric with the fragility of conventional, \
tree-based network topologies.\
\>", "Text",
 CellChangeTimes->{{3.962990708929163*^9, 3.9629907092792273`*^9}, {
  3.962991303039302*^9, 
  3.962991303789819*^9}},ExpressionUUID->"aa1a7960-9002-4717-9695-\
262d1e2edcd9"],

Cell[CellGroupData[{

Cell["Quantifying the Cost of Convention", "Subsection",
 CellChangeTimes->{{3.962990697399872*^9, 3.962990698066004*^9}, {
  3.962991290267622*^9, 
  3.962991295333774*^9}},ExpressionUUID->"a291308f-0383-4b2a-9977-\
d15c402704e4"],

Cell["\<\
The initial visualization, \[OpenCurlyDoubleQuote]Initial Resilient Mesh \
Network,\[CloseCurlyDoubleQuote] represents the physical fabric of our system\
\[LongDash]the N2N Lattice or groundplane. In this model, each vertex is an \
autonomous CELL with its own processing and forwarding capabilities, \
connected by links with varying latencies. This is the foundation for the \
\[OpenCurlyDoubleQuote]path discovery\[CloseCurlyDoubleQuote] protocols that \
allow the network to self-organize. The subsequent graph, \
\[OpenCurlyDoubleQuote]Minimum Spanning Tree,\[CloseCurlyDoubleQuote] \
simulates the action of classical protocols like STP. To avoid loops, STP \
prunes this rich fabric into a single, fragile tree, discarding valuable \
connectivity. This approach is fundamentally flawed; as Paul Borrill states, \
\[OpenCurlyDoubleQuote]You cannot add reliability on top of an unreliable \
network\[CloseCurlyDoubleQuote]. Simply forcing a tree structure does not \
make the network reliable; it only makes it less resilient.\
\>", "Text",
 CellChangeTimes->{{3.962990708929163*^9, 3.9629907092792273`*^9}, {
  3.962991307280127*^9, 
  3.962991309075389*^9}},ExpressionUUID->"4e2a2b64-d3ce-4e9b-a0b2-\
023cf8ccf434"],

Cell[CellGroupData[{

Cell["Path Diversity: The Foundation of a Self-Healing Fabric", \
"Subsubsection",
 CellChangeTimes->{{3.96299070335322*^9, 3.962990704491493*^9}, {
  3.962991294108355*^9, 
  3.9629913128220787`*^9}},ExpressionUUID->"4d75cdc0-0141-4760-bc08-\
03c523455ef1"],

Cell["\<\
The output quantifies the severe cost of this classical approach. The total \
latency of the Minimum Spanning Tree is calculated as 14 units. However, the \
script then finds the true shortest path between Node 1 and Node 7 is {1, 8, \
2, 6, 7}, with a significantly lower latency of 10 units. A conventional \
network, locked into its rigid spanning tree, would be blind to this more \
efficient route and would force traffic along a path that is 40% slower. This \
illustrates the power of \[OpenCurlyDoubleQuote]scouting\
\[CloseCurlyDoubleQuote] the entire topology, a task managed by the Graph \
Virtual Machine (GVM), which can identify and utilize these optimal paths \
that traditional routing ignores.

The final grid output is the most critical result. It enumerates seven \
distinct paths between Node 1 and Node 7, with latencies ranging from the \
optimal 10 up to 22. This table is the formal proof of the path diversity \
inherent in the N2N Lattice. This diversity is the essential resource for \
building a self-healing network. As demonstrated in our FMS presentation \
rehearsals, if the primary path fails, the system can use its local \
topological knowledge to \[OpenCurlyDoubleQuote]respond to failures in real \
time without dropping packets\[CloseCurlyDoubleQuote] by immediately \
rerouting traffic to the next-best path. This local recovery is the \
foundation for achieving \[OpenCurlyDoubleQuote]Transactional Integrity at \
Layer 2\[CloseCurlyDoubleQuote], creating a network that is truly \
\[OpenCurlyDoubleQuote]safe for transactions\[CloseCurlyDoubleQuote] by \
eliminating the timeouts and retries that corrupt data in traditional systems.\
\>", "Text",
 CellChangeTimes->{{3.962990708929163*^9, 3.9629907092792273`*^9}, {
  3.962991313545858*^9, 
  3.9629913192037487`*^9}},ExpressionUUID->"3beb9dec-098b-4fd0-ad2b-\
d7b92dba82fd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"vertices", "=", 
   RowBox[{"Range", "[", "8", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"8", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "7"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"weights", "=", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "\[UndirectedEdge]", "2"}], "\[Rule]", "6"}], ",", 
     RowBox[{
      RowBox[{"2", "\[UndirectedEdge]", "3"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"4", "\[UndirectedEdge]", "5"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"5", "\[UndirectedEdge]", "6"}], "\[Rule]", "2"}], ",", 
     RowBox[{
      RowBox[{"6", "\[UndirectedEdge]", "7"}], "\[Rule]", "2"}], ",", 
     RowBox[{
      RowBox[{"1", "\[UndirectedEdge]", "8"}], "\[Rule]", "4"}], ",", 
     RowBox[{
      RowBox[{"2", "\[UndirectedEdge]", "6"}], "\[Rule]", "3"}], ",", 
     RowBox[{
      RowBox[{"2", "\[UndirectedEdge]", "8"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"8", "\[UndirectedEdge]", "4"}], "\[Rule]", "5"}], ",", 
     RowBox[{
      RowBox[{"3", "\[UndirectedEdge]", "7"}], "\[Rule]", "6"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"vertices", ",", "edges", ",", 
     RowBox[{"EdgeWeight", "\[Rule]", 
      RowBox[{"weights", "/@", "edges"}]}], ",", 
     RowBox[{"EdgeLabels", "\[Rule]", "\"\<EdgeWeight\>\""}], ",", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<SpringElectricalEmbedding\>\""}], 
     ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Initial Resilient Mesh Network with Link Latencies\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
     RowBox[{"VertexSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"VertexStyle", "\[Rule]", "LightBlue"}]}], "]"}]}], 
  ";"}], "\n", "g", "\n", 
 RowBox[{
  RowBox[{"mstEdges", "=", 
   RowBox[{"FindSpanningTree", "[", "g", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HighlightGraph", "[", 
   RowBox[{"g", ",", "mstEdges", ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", "\"\<Minimum Spanning Tree (Optimal Path)\>\""}], 
    ",", 
    RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mstLatency", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"g", ",", "#1"}], "}"}], ",", "EdgeWeight"}], "]"}], "&"}], 
      ")"}], "/@", 
     RowBox[{"EdgeList", "[", "mstEdges", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Total Path Latency of the Minimum Spanning Tree: \>\"", ",", 
    "mstLatency"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"shortestPath", "=", 
   RowBox[{"FindShortestPath", "[", 
    RowBox[{"g", ",", "1", ",", "7"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"shortestPathLatency", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"g", ",", 
           RowBox[{"UndirectedEdge", "@@", "#1"}]}], "}"}], ",", 
         "EdgeWeight"}], "]"}], "&"}], ")"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"shortestPath", ",", "2", ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"HighlightGraph", "[", 
   RowBox[{"g", ",", 
    RowBox[{"PathGraph", "[", "shortestPath", "]"}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", "\"\<Shortest Path Between Node 1 and 7\>\""}], 
    ",", 
    RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Shortest path: \>\"", ",", "shortestPath"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Latency of shortest path: \>\"", ",", "shortestPathLatency"}],
    "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"latencyOfPath", "[", "path_List", "]"}], ":=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"g", ",", 
           RowBox[{"UndirectedEdge", "@@", "#1"}]}], "}"}], ",", 
         "EdgeWeight"}], "]"}], "&"}], ")"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"path", ",", "2", ",", "1"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"allPaths", "=", 
   RowBox[{"FindPath", "[", 
    RowBox[{"g", ",", "1", ",", "7", ",", "\[Infinity]", ",", "All"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pathData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"path", ",", 
       RowBox[{"latencyOfPath", "[", "path", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"path", ",", "allPaths"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{"pathData", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Path\>\"", ",", "\"\<Total Latency\>\""}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"LightGray", ",", "White"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.962989527541831*^9, 3.962989552086392*^9}},
 CellLabel->
  "In[624]:=",ExpressionUUID->"b7c2e636-b9d1-4fac-bff4-bfbce878e750"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
      Null, {{1, 2}, {2, 3}, {4, 5}, {5, 6}, {6, 7}, {1, 8}, {2, 6}, {2, 8}, {
       8, 4}, {3, 7}}}, {
      EdgeLabels -> {"EdgeWeight"}, 
       EdgeWeight -> {6, 1, 1, 2, 2, 4, 3, 1, 5, 6}, GraphLayout -> 
       "SpringElectricalEmbedding", ImageSize -> Large, PlotLabel -> 
       "Initial Resilient Mesh Network with Link Latencies", 
       VertexLabels -> {"Name"}, VertexSize -> {Large}, VertexStyle -> {
         RGBColor[0.87, 0.94, 1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{0.7874292183869905, 2.282338350993489}, {
           1.4494817759566068`, 1.5633886334061187`}}, 0.16619017154690865`]},
          InsetBox["6", {1.1184554971717986, 1.922863492199804}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.7874292183869905, 2.282338350993489}, {
           0.4206139154923685, 1.5367339910732296`}}, 0.16619017154690865`]}, 
         InsetBox["4", {0.6040215669396796, 1.9095361710333594}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.4494817759566068`, 1.5633886334061187`}, {
           2.53033349960291, 1.5146751543609822`}}, 0.16619017154690865`]}, 
         InsetBox["1", {1.9899076377797584, 1.5390318938835503}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.4494817759566068`, 1.5633886334061187`}, {
           1.713461957970749, 0.5124299802235102}}, 0.16619017154690865`]}, 
         InsetBox["3", {1.5814718669636778, 1.0379093068148144}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.4494817759566068`, 1.5633886334061187`}, {
           0.4206139154923685, 1.5367339910732296`}}, 0.16619017154690865`]}, 
         InsetBox["1", {0.9350478457244876, 1.550061312239674}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.53033349960291, 1.5146751543609822`}, {
           2.715615719362974, 0.6697660880737124}}, 0.16619017154690865`]}, 
         InsetBox["6", {2.622974609482942, 1.0922206212173473}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.5892903099366924}, {0.7553183798852724, 0.}}, 
           0.16619017154690865`]}, 
         InsetBox["1", {0.3776591899426362, 0.2946451549683462}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.5892903099366924}, {0.4206139154923685, 
           1.5367339910732296`}}, 0.16619017154690865`]}, 
         InsetBox["5", {0.21030695774618424, 1.063012150504961}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.7553183798852724, 0.}, {1.713461957970749, 
           0.5124299802235102}}, 0.16619017154690865`]}, 
         InsetBox["2", {1.2343901689280108, 0.2562149901117551}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.713461957970749, 0.5124299802235102}, {
           2.715615719362974, 0.6697660880737124}}, 0.16619017154690865`]}, 
         InsetBox["2", {2.2145388386668614, 0.5910980341486113}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {RGBColor[0.87, 0.94, 1], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{0.7874292183869905, 2.282338350993489}, 
          0.16619017154690865], 
         InsetBox["1", {0.754153987379291, 2.5126128357159923}, ImageScaled[{0.6072627607598087, -0.24229017247582096}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.4494817759566068`, 1.5633886334061187`}, 
          0.16619017154690865], 
         InsetBox["2", {1.5476999751493925, 1.7743074914064325}, ImageScaled[{0.18339347667226524, -0.17989727855487447}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.53033349960291, 1.5146751543609822`}, 
          0.16619017154690865], 
         InsetBox["3", {2.680217648775872, 1.6926311071682079}, ImageScaled[{0.016848203677178653, -0.07364130056162366}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.5892903099366924}, 0.16619017154690865], 
         InsetBox["4", {-0.2257056392893671, 0.5328054119036046}, 
          ImageScaled[{1.2275624918616836, 0.6820791598069849}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7553183798852724, 0.}, 0.16619017154690865], 
         InsetBox["5", {0.7353994983252323, -0.23181203046914392}, 
          ImageScaled[{0.5642085467981627, 1.247246453667107}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.713461957970749, 0.5124299802235102}, 
          0.16619017154690865], 
         InsetBox["6", {1.7874055749754425, 0.2918264425884727}, ImageScaled[{0.2616426314619996, 1.2111158589594524}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.715615719362974, 0.6697660880737124}, 
          0.16619017154690865], 
         InsetBox["7", {2.9076963712548096, 0.5384702294884636}, ImageScaled[{-0.11917229081579328, 0.9232324116675408}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.4206139154923685, 1.5367339910732296`}, 
          0.16619017154690865], 
         InsetBox["8", {0.20986221576636935, 1.635310359313455}, ImageScaled[{1.179358443588329, 0.18223891817083215}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox[
   "\"Initial Resilient Mesh Network with Link Latencies\"", 
    TraditionalForm]]], "Output",
 CellChangeTimes->{{3.96298952818955*^9, 3.962989552332428*^9}, {
  3.96299005872241*^9, 3.962990085555931*^9}},
 CellLabel->
  "Out[629]=",ExpressionUUID->"7e43a922-e27f-4e1d-93db-999a4856efa9"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Path Latency of the Minimum Spanning Tree: \"\>", 
   "\[InvisibleSpace]", "14"}],
  SequenceForm["Total Path Latency of the Minimum Spanning Tree: ", 14],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9629895281946173`*^9, 3.962989552337268*^9}, {
  3.962990058725944*^9, 3.9629900855602627`*^9}},
 CellLabel->
  "During evaluation of \
In[624]:=",ExpressionUUID->"9760a87f-5654-4fba-8f4b-c0fa93729673"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Shortest path: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "8", ",", "2", ",", "6", ",", "7"}], "}"}]}],
  SequenceForm["Shortest path: ", {1, 8, 2, 6, 7}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9629895281946173`*^9, 3.962989552337268*^9}, {
  3.962990058725944*^9, 3.962990085560882*^9}},
 CellLabel->
  "During evaluation of \
In[624]:=",ExpressionUUID->"62be9d55-1c53-45cf-be1c-09c8d4c57872"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Latency of shortest path: \"\>", "\[InvisibleSpace]", "10"}],
  SequenceForm["Latency of shortest path: ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{{3.9629895281946173`*^9, 3.962989552337268*^9}, {
  3.962990058725944*^9, 3.962990085561421*^9}},
 CellLabel->
  "During evaluation of \
In[624]:=",ExpressionUUID->"28a7a28d-55a6-4147-aac8-4ea2a1a17baf"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Path\"\>", "\<\"Total Latency\"\>"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "6", ",", "7"}], "}"}], "11"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "7"}], "}"}], "13"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "8", ",", "2", ",", "6", ",", "7"}], "}"}], "10"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "8", ",", "2", ",", "3", ",", "7"}], "}"}], "12"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "8", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}], 
     "14"},
    {
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "8", ",", "4", ",", "5", ",", "6", ",", "7"}], 
      "}"}], "17"},
    {
     RowBox[{"{", 
      RowBox[{
      "1", ",", "8", ",", "4", ",", "5", ",", "6", ",", "2", ",", "3", ",", 
       "7"}], "}"}], "22"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       GrayLevel[0.85], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.96298952818955*^9, 3.962989552332428*^9}, {
  3.96299005872241*^9, 3.962990085561953*^9}},
 CellLabel->
  "Out[642]=",ExpressionUUID->"48dada53-824a-4b69-b640-5465321cdfdb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Conventional Network: A Brittle Abstraction", "Chapter",
 CellChangeTimes->{{3.9629906915537767`*^9, 3.962990692034157*^9}, {
  3.962993435685848*^9, 3.962993436142797*^9}},
 FontSize->24,ExpressionUUID->"0d59fedc-7835-4579-b452-d22cf084f762"],

Cell[CellGroupData[{

Cell["\<\
This Mathematica notebook serves as a specifically \
D\[CapitalAE]D\[CapitalAE]LUS-esque \[OpenCurlyDoubleQuote]Code as Proof\
\[CloseCurlyDoubleQuote] demonstration, moving beyond static analysis to \
simulate the core self-healing capabilities of the \
D\[CapitalAE]D\[CapitalAE]LUS architecture. It formally contrasts the \
fragility of a conventional network running a spanning tree protocol with the \
resilience of a graph-aware N2N Lattice, providing a concrete, visual \
argument for the FMS (Future of Memory and Storage) conference.

The script begins by defining the n2nLattice, which represents the true \
physical groundplane of interconnected CELLs. It then simulates the action of \
a classical protocol like STP by calculating a single spanningTree. The \
Manipulate function provides the most critical insight: when a link on this \
conventional spanning tree is selected to fail, the output correctly reports \
\[OpenCurlyDoubleQuote]Conventional Path: BROKEN (Nodes are partitioned)\
\[CloseCurlyDoubleQuote]. This demonstrates the fundamental fragility of a \
pruned graph; the loss of a single critical link severs communication, \
forcing a slow, network-wide reconvergence. This is the reality that makes \
today\[CloseCurlyQuote]s networks unsafe for transactions, as they cannot \
guarantee continuous connectivity.\
\>", "Subsection",
 CellChangeTimes->{{3.962990697399872*^9, 3.962990698066004*^9}, {
  3.962993438920848*^9, 3.962993483713566*^9}},
 FontSize->16,ExpressionUUID->"d3b0f5bf-9de6-4867-9b55-c94f0c9822f5"],

Cell[CellGroupData[{

Cell["The D\[CapitalAE]D\[CapitalAE]LUS Approach: Autonomous Self-Healing", \
"Subsubsection",
 CellChangeTimes->{{3.96299070335322*^9, 3.962990704491493*^9}, {
  3.962993451304429*^9, 
  3.9629934588844547`*^9}},ExpressionUUID->"72ad9ff0-45f7-4edb-940b-\
fc52edf04395"],

Cell[TextData[{
 "In stark contrast, the \[OpenCurlyDoubleQuote]D\[CapitalAE]D\[CapitalAE]LUS \
Self-Heals\[CloseCurlyDoubleQuote] portion of the simulation shows the system\
\[CloseCurlyQuote]s ability to recover instantly from the same failure. This \
is not a theoretical ideal but a direct consequence of the architecture. The \
Graph Virtual Machine (GVM), which manages the fabric\[CloseCurlyQuote]s \
topology, maintains knowledge of the complete N2N Lattice through a \
collection of trees known as a TRAPH. Upon detecting a link failure, the GVM \
uses this pre-existing topological awareness to immediately reroute traffic \
along a known, alternative path. As demonstrated in our FMS presentation \
rehearsals, the network is able to \[OpenCurlyDoubleQuote]respond to failures \
in real time without dropping packets\[CloseCurlyDoubleQuote] because the \
recovery is a local, deterministic decision, not a global, probabilistic \
event.\n\n",
 StyleBox["Path Diversity: The Foundation of Resilience\n",
  FontWeight->"Bold"],
 "\nThe \[OpenCurlyDoubleQuote]Path Diversity \
Analysis\[CloseCurlyDoubleQuote] at the end of the notebook provides the data \
that underpins this self-healing capability. The table lists multiple \
distinct paths between two nodes, each with a different latency. This is the \
rich path diversity that the D\[CapitalAE]D\[CapitalAE]LUS architecture \
preserves and leverages. The final graph visually compares the \
\[OpenCurlyDoubleQuote]Optimal Path (Red)\[CloseCurlyDoubleQuote] found by \
scouting the full lattice against the \[OpenCurlyDoubleQuote]Conventional \
Path (Blue Dashed)\[CloseCurlyDoubleQuote] that is locked into the \
inefficient spanning tree. This proves that the D\[CapitalAE]D\[CapitalAE]LUS \
approach is not only more resilient but also more performant. This foundation \
is essential, as \[OpenCurlyDoubleQuote]You cannot add reliability on top of \
an unreliable network\[CloseCurlyDoubleQuote]. By building on a foundation of \
resilient, redundant paths, we can provide the Reversible Subtransactions and \
\[OpenCurlyDoubleQuote]Transactional Integrity at Layer 2\
\[CloseCurlyDoubleQuote] needed to finally eliminate the data-corrupting \
timeouts and retries that plague modern distributed systems."
}], "Text",
 CellChangeTimes->{{3.962990708929163*^9, 3.9629907092792273`*^9}, {
  3.9629934547204943`*^9, 3.962993460381143*^9}, {3.962993502030962*^9, 
  3.962993506065751*^9}, {3.962993881766486*^9, 
  3.9629938834987917`*^9}},ExpressionUUID->"a41a5d15-c914-423e-9f02-\
4a8f90820d7f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\n", 
 RowBox[{
  RowBox[{"vertexList", "=", 
   RowBox[{"Range", "[", "8", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edgesWithWeights", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "\[TwoWayRule]", "2"}], "\[Rule]", "10"}], ",", 
     RowBox[{
      RowBox[{"1", "\[TwoWayRule]", "3"}], "\[Rule]", "12"}], ",", 
     RowBox[{
      RowBox[{"2", "\[TwoWayRule]", "4"}], "\[Rule]", "10"}], ",", 
     RowBox[{
      RowBox[{"3", "\[TwoWayRule]", "4"}], "\[Rule]", "8"}], ",", 
     RowBox[{
      RowBox[{"3", "\[TwoWayRule]", "5"}], "\[Rule]", "22"}], ",", 
     RowBox[{
      RowBox[{"4", "\[TwoWayRule]", "6"}], "\[Rule]", "15"}], ",", 
     RowBox[{
      RowBox[{"5", "\[TwoWayRule]", "6"}], "\[Rule]", "9"}], ",", 
     RowBox[{
      RowBox[{"5", "\[TwoWayRule]", "7"}], "\[Rule]", "10"}], ",", 
     RowBox[{
      RowBox[{"6", "\[TwoWayRule]", "8"}], "\[Rule]", "10"}], ",", 
     RowBox[{
      RowBox[{"7", "\[TwoWayRule]", "8"}], "\[Rule]", "7"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"UndirectedEdge", "@@@", 
    RowBox[{"First", "/@", "edgesWithWeights"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"weights", "=", 
   RowBox[{"Last", "/@", "edgesWithWeights"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n2nLattice", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"vertexList", ",", "edges", ",", 
     RowBox[{"EdgeWeight", "\[Rule]", "weights"}], ",", 
     RowBox[{"EdgeLabels", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{"\"\<EdgeWeight\>\"", ",", "Center"}], "]"}]}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
     RowBox[{"VertexSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<SpringElectricalEmbedding\>\""}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Physical N2N Lattice (The Full Graph)\>\"", ",", "18", ",", 
        "Bold"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"spanningTree", "=", 
   RowBox[{"FindSpanningTree", "[", "n2nLattice", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HighlightGraph", "[", 
   RowBox[{"n2nLattice", ",", "spanningTree", ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Conventional Ethernet: The Spanning Tree\>\"", ",", "18", ",", 
       "Bold"}], "]"}]}], ",", 
    RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"conventionalPath", "=", 
   RowBox[{"FindShortestPath", "[", 
    RowBox[{"spanningTree", ",", "1", ",", "8"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"conventionalLatency", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n2nLattice", ",", 
           RowBox[{"UndirectedEdge", "@@", "#1"}]}], "}"}], ",", 
         "EdgeWeight"}], "]"}], "&"}], ")"}], "/@", 
     RowBox[{"Partition", "[", 
      RowBox[{"conventionalPath", ",", "2", ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Conventional Path from 1 to 8: \>\"", ",", "conventionalPath"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Total Latency: \>\"", ",", "conventionalLatency", ",", 
    "\"\< units\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "failedLattice", ",", "healedPath", ",", "healedLatency", ",", 
        "failedSpanningTree"}], "}"}], ",", 
      RowBox[{
       RowBox[{"failedLattice", "=", 
        RowBox[{"EdgeDelete", "[", 
         RowBox[{"n2nLattice", ",", "failedEdge"}], "]"}]}], ";", 
       RowBox[{"failedSpanningTree", "=", 
        RowBox[{"EdgeDelete", "[", 
         RowBox[{"spanningTree", ",", "failedEdge"}], "]"}]}], ";", 
       RowBox[{"healedPath", "=", 
        RowBox[{"FindShortestPath", "[", 
         RowBox[{"failedLattice", ",", "1", ",", "8"}], "]"}]}], ";", 
       RowBox[{"healedLatency", "=", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"PropertyValue", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"failedLattice", ",", 
                RowBox[{"UndirectedEdge", "@@", "#1"}]}], "}"}], ",", 
              "EdgeWeight"}], "]"}], "&"}], ")"}], "/@", 
          RowBox[{"Partition", "[", 
           RowBox[{"healedPath", ",", "2", ",", "1"}], "]"}]}], "]"}]}], ";", 
       
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"HighlightGraph", "[", 
             RowBox[{"failedLattice", ",", "failedSpanningTree", ",", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<Conventional Network Fails\>\"", ",", "14", ",", 
                 "Bold"}], "]"}]}], ",", 
              RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], 
              ",", 
              RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
            RowBox[{"HighlightGraph", "[", 
             RowBox[{"failedLattice", ",", "healedPath", ",", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<D\[CapitalAE]D\[CapitalAE]LUS Self-Heals\>\"", ",", "14",
                  ",", "Bold"}], "]"}]}], ",", 
              RowBox[{"GraphHighlightStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<Thick\>\"", ",", "Red"}], "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"\[SpanFromLeft]", ",", 
            RowBox[{"Pane", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                
                InterpretationBox[
                 "\"\<When link \\!\\(\\*RowBox[{\\\"failedEdge\\\"}]\\) \
fails:\\nConventional Path: BROKEN (Nodes are partitioned)\\nDaedaelus Healed \
Path: \\!\\(\\*RowBox[{\\\"healedPath\\\"}]\\)\\nNew Latency: \
\\!\\(\\*RowBox[{\\\"healedLatency\\\"}]\\) units\>\"",
                 StringForm[
                 "When link `` fails:\nConventional Path: BROKEN (Nodes are \
partitioned)\nDaedaelus Healed Path: ``\nNew Latency: `` units", \
$CellContext`failedEdge, $CellContext`healedPath, $CellContext`healedLatency],
                 
                 Editable->False], ",", "14"}], "]"}], ",", 
              RowBox[{"ImageMargins", "\[Rule]", "10"}]}], "]"}]}], "}"}]}], 
         "}"}], "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"failedEdge", ",", 
        RowBox[{"4", "\[TwoWayRule]", "6"}], ",", 
        "\"\<Select Link to Fail:\>\""}], "}"}], ",", 
      RowBox[{"EdgeList", "[", "spanningTree", "]"}]}], "}"}], ",", 
    RowBox[{"ControlPlacement", "\[Rule]", "Top"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"allPaths", "=", 
   RowBox[{"FindPath", "[", 
    RowBox[{"n2nLattice", ",", "1", ",", "8", ",", "\[Infinity]", ",", "5"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pathLatencies", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"PropertyValue", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"n2nLattice", ",", 
              RowBox[{"UndirectedEdge", "@@", "#1"}]}], "}"}], ",", 
            "EdgeWeight"}], "]"}], "&"}], ")"}], "/@", 
        RowBox[{"Partition", "[", 
         RowBox[{"#1", ",", "2", ",", "1"}], "]"}]}], "]"}], "&"}], ")"}], "/@",
     "allPaths"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pathResults", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<Path \>\"", "<>", 
         RowBox[{"ToString", "[", "#2", "]"}]}], ",", "#1", ",", "#3"}], 
       "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"allPaths", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "allPaths", "]"}], "]"}], ",", 
       "pathLatencies"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"optimalPath", "=", 
   RowBox[{"allPaths", "\[LeftDoubleBracket]", 
    RowBox[{"First", "[", 
     RowBox[{"Ordering", "[", "pathLatencies", "]"}], "]"}], 
    "\[RightDoubleBracket]"}]}], ";"}], "\n", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Path Diversity Analysis (Node 1 to 8)\>\"", ",", "16", ",", 
         "Bold"}], "]"}], ",", "\[SpanFromLeft]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TableForm", "[", 
        RowBox[{"pathResults", ",", 
         RowBox[{"TableHeadings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"None", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Label\>\"", ",", "\"\<Route\>\"", ",", 
              "\"\<Total Latency\>\""}], "}"}]}], "}"}]}]}], "]"}], ",", 
       RowBox[{"HighlightGraph", "[", 
        RowBox[{"n2nLattice", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"optimalPath", ",", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Thick"}], "}"}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"conventionalPath", ",", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", "Dashed", ",", "Thick"}], "}"}]}], "]"}]}],
           "}"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Optimal Path (Red) vs. Conventional Path (Blue Dashed)\>\"", 
            ",", "12"}], "]"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.96298975869928*^9, 3.962989758700563*^9}, 
   3.962990530084412*^9, 
   3.9629938856171417`*^9},ExpressionUUID->"9a73af3b-bcf7-4c9c-bf94-\
c97dd2abae20"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Conventional Path from 1 to 8: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "6", ",", "5", ",", "7", ",", "8"}],
     "}"}]}],
  SequenceForm["Conventional Path from 1 to 8: ", {1, 2, 4, 6, 5, 7, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{3.962989758956938*^9, 3.9629900904043627`*^9, 
  3.962990530365218*^9, 3.962990625543138*^9},
 CellLabel->
  "During evaluation of \
In[1036]:=",ExpressionUUID->"6742134f-ac3c-453f-8103-d4a5e026fa93"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Latency: \"\>", "\[InvisibleSpace]", "61", 
   "\[InvisibleSpace]", "\<\" units\"\>"}],
  SequenceForm["Total Latency: ", 61, " units"],
  Editable->False]], "Print",
 CellChangeTimes->{3.962989758956938*^9, 3.9629900904043627`*^9, 
  3.962990530365218*^9, 3.9629906255438128`*^9},
 CellLabel->
  "During evaluation of \
In[1036]:=",ExpressionUUID->"2f15f536-e2ab-46b4-8974-49adae947d91"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Path Diversity Analysis (Node 1 to 8)\"\>",
      StripOnInput->False,
      FontSize->16,
      FontWeight->Bold], "\[SpanFromLeft]"},
    {
     InterpretationBox[GridBox[{
        {"\<\"Label\"\>", "\<\"Route\"\>", "\<\"Total Latency\"\>"},
        {"\<\"Path 1\"\>", GridBox[{
           {"1"},
           {"2"},
           {"4"},
           {"6"},
           {"8"}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.1]}, 
              Offset[0.2]}}], "45"},
        {"\<\"Path 2\"\>", GridBox[{
           {"1"},
           {"3"},
           {"4"},
           {"6"},
           {"5"},
           {"7"},
           {"8"}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.1]}, 
              Offset[0.2]}}], "61"},
        {"\<\"Path 3\"\>", GridBox[{
           {"1"},
           {"2"},
           {"4"},
           {"6"},
           {"5"},
           {"7"},
           {"8"}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.1]}, 
              Offset[0.2]}}], "61"},
        {"\<\"Path 4\"\>", GridBox[{
           {"1"},
           {"2"},
           {"4"},
           {"3"},
           {"5"},
           {"7"},
           {"8"}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.1]}, 
              Offset[0.2]}}], "67"},
        {"\<\"Path 5\"\>", GridBox[{
           {"1"},
           {"2"},
           {"4"},
           {"3"},
           {"5"},
           {"6"},
           {"8"}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.1]}, 
              Offset[0.2]}}], "69"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[2.0999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      TableForm[{{"Path 1", {1, 2, 4, 6, 8}, 45}, {
        "Path 2", {1, 3, 4, 6, 5, 7, 8}, 61}, {
        "Path 3", {1, 2, 4, 6, 5, 7, 8}, 61}, {
        "Path 4", {1, 2, 4, 3, 5, 7, 8}, 67}, {
        "Path 5", {1, 2, 4, 3, 5, 6, 8}, 69}}, 
       TableHeadings -> {None, {"Label", "Route", "Total Latency"}}]], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
          Null, {{1, 2}, {1, 3}, {2, 4}, {3, 4}, {3, 5}, {4, 6}, {5, 6}, {5, 
           7}, {6, 8}, {7, 8}}}, {EdgeLabels -> {
             Placed["EdgeWeight", Center]}, 
           EdgeWeight -> {10, 12, 10, 8, 22, 15, 9, 10, 10, 7}, 
           GraphHighlight -> {5, 7, 4, 2, 6, 8, 1}, 
           GraphHighlightStyle -> {7 -> {VertexStyle -> {{
                  RGBColor[0, 0, 1], 
                  Dashing[{Small, Small}], 
                  Thickness[Large]}}}, 5 -> {VertexStyle -> {{
                  RGBColor[0, 0, 1], 
                  Dashing[{Small, Small}], 
                  Thickness[Large]}}}, 8 -> {VertexStyle -> Directive[
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], 
                 Thickness[Large]]}, 4 -> {VertexStyle -> Directive[
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], 
                 Thickness[Large]]}, 6 -> {VertexStyle -> Directive[
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], 
                 Thickness[Large]]}, 1 -> {VertexStyle -> Directive[
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], 
                 Thickness[Large]]}, 2 -> {VertexStyle -> Directive[
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], 
                 Thickness[Large]]}}, GraphLayout -> 
           "SpringElectricalEmbedding", ImageSize -> Medium, PlotLabel -> 
           Style["Optimal Path (Red) vs. Conventional Path (Blue Dashed)", 
             12], VertexLabels -> {"Name"}, VertexSize -> {Medium}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
             {Arrowheads[0.], 
              ArrowBox[{{3.242815771633792, 0.8612539307029448}, {
               3.243816537417133, 0.02202427038161403}}, 
               0.08392255487433631]}, 
             InsetBox["10", {3.2433161545254627, 0.4416391005422794}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{3.242815771633792, 0.8612539307029448}, {
               2.2026505320046637`, 0.882857586787589}}, 
               0.08392255487433631]}, 
             InsetBox["12", {2.722733151819228, 0.8720557587452669}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{3.243816537417133, 0.02202427038161403}, {
               2.203255855074624, 0.00015390966695744135`}}, 
               0.08392255487433631]}, 
             InsetBox["10", {2.7235361962458784, 0.011089090024285736}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{2.2026505320046637`, 0.882857586787589}, {
               2.203255855074624, 0.00015390966695744135`}}, 
               0.08392255487433631]}, 
             InsetBox["8", {2.202953193539644, 0.4415057482272732}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{2.2026505320046637`, 0.882857586787589}, {
               1.0415917146248654`, 0.882832660005294}}, 
               0.08392255487433631]}, 
             InsetBox["22", {1.6221211233147645, 0.8828451233964415}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{2.203255855074624, 0.00015390966695744135`}, {
               1.0419938218043123`, 0.}}, 0.08392255487433631]}, 
             InsetBox["15", {1.6226248384394681, 0.00007695483347872067}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{1.0415917146248654`, 0.882832660005294}, {
               1.0419938218043123`, 0.}}, 0.08392255487433631]}, 
             InsetBox["9", {1.0417927682145889, 0.441416330002647}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{1.0415917146248654`, 0.882832660005294}, {0., 
               0.8609535946850294}}, 0.08392255487433631]}, 
             InsetBox["10", {0.5207958573124327, 0.8718931273451618}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{1.0419938218043123`, 0.}, {0.0004916713489675484, 
               0.02172818996774889}}, 0.08392255487433631]}, 
             InsetBox["10", {0.5212427465766399, 0.010864094983874445}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{0., 0.8609535946850294}, {0.0004916713489675484, 
               0.02172818996774889}}, 0.08392255487433631]}, 
             InsetBox["7", {0.0002458356744837742, 0.4413408923263892}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
             {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
              DiskBox[{3.242815771633792, 0.8612539307029448}, 
               0.08392255487433631]}, 
             InsetBox["1", {3.3267039647377303, 0.9435159613268174}, 
              ImageScaled[{-0.03549493954075211, -0.025114434886574277}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
              DiskBox[{3.243816537417133, 0.02202427038161403}, 
               0.08392255487433631]}, 
             InsetBox["2", {3.3278129668030147, -0.060127238886500206}, 
              ImageScaled[{-0.03618585895516835, 1.0244089288489548}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2.2026505320046637`, 0.882857586787589}, 
              0.08392255487433631], 
             InsetBox["3", {2.203869191040555, 1.0003428432871209}, 
              ImageScaled[{0.4922207676360749, -0.24995965461071834}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
              DiskBox[{2.203255855074624, 0.00015390966695744135`}, 
               0.08392255487433631]}, 
             InsetBox["4", {2.204498146994626, -0.11733109931458041}, 
              ImageScaled[{0.49206990862505295, 1.2499580745953636}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
              DiskBox[{1.0415917146248654`, 0.882832660005294}, 
               0.08392255487433631]}, 
             InsetBox["5", {1.0403566779830666, 1.0003177454804297}, 
              ImageScaled[{0.5078837777684784, -0.24995856288737528}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
              DiskBox[{1.0419938218043123`, 0.}, 0.08392255487433631]}, 
             InsetBox["6", {1.0407762316965754, -0.11748526758251895}, 
              ImageScaled[{0.5077724089291106, 1.2499597253582613}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
              DiskBox[{0., 0.8609535946850294}, 0.08392255487433631]}, 
             InsetBox["7", {-0.0839709970091135, 0.9431310994287364}, 
              ImageScaled[{1.0360235129973383, -0.024574869312276704}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
              DiskBox[{0.0004916713489675484, 0.02172818996774889}, 
               0.08392255487433631]}, 
             InsetBox["8", {-0.08342528729131093, -0.06050449621707866}, 
              ImageScaled[{1.0356785625104883, 1.0249271165282823}],
              BaseStyle->"Graphics"]}}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->"NetworkGraphics",
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->Medium,
      PlotLabel->FormBox[
        StyleBox[
        "\"Optimal Path (Red) vs. Conventional Path (Blue Dashed)\"", 12, 
         StripOnInput -> False], TraditionalForm]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.9629897589885178`*^9, 3.962990090434433*^9, 
  3.962990530385853*^9, 3.962990625569807*^9},
 CellLabel->
  "Out[1053]=",ExpressionUUID->"8d5e4d9d-ade0-4a2b-9192-ee9eaa9d56fc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Conventional Network\[CloseCurlyQuote]s Fragility and \
Inefficiency", "Chapter",
 CellChangeTimes->{{3.9629906915537767`*^9, 3.962990692034157*^9}, {
  3.962993613656554*^9, 3.9629936144376507`*^9}},
 FontSize->24,ExpressionUUID->"c363efe5-8572-4160-821a-5aa3e8a4eca0"],

Cell[CellGroupData[{

Cell["\<\
This Mathematica notebook provides another \[OpenCurlyDoubleQuote]Code as \
Proof\[CloseCurlyDoubleQuote] analysis, demonstrating the universal \
advantages of the D\[CapitalAE]D\[CapitalAE]LUS architecture across different \
network topologies. It serves as a formal model for our presentations at the \
FMS (Future of Memory and Storage) conference, showing how a resilient, \
graph-aware fabric provides superior performance and self-healing \
capabilities compared to the brittle abstractions of conventional networking.

The analysis begins by defining the physical N2N Lattice of interconnected \
CELLs and then simulates the effect of a classical protocol like STP by \
calculating a single spanningTree. The output clearly shows that the \
conventionalPath from Node 1 to 8 on this tree has a total latency of 61 \
units. The Manipulate visualization powerfully demonstrates the fragility of \
this approach: when a critical link on this path fails (e.g., 4 <-> 6), the \
output correctly states \[OpenCurlyDoubleQuote]Conventional Path: BROKEN \
(Nodes are partitioned)\[CloseCurlyDoubleQuote]. This illustrates the core \
problem that makes traditional networks unsafe for atomic operations; a \
single point of failure can sever communication, forcing slow, \
application-level timeouts and retries. This confirms the D\[CapitalAE]D\
\[CapitalAE]LUS principle that \[OpenCurlyDoubleQuote]You cannot add \
reliability on top of an unreliable network\[CloseCurlyDoubleQuote].\
\>", "Subsection",
 CellChangeTimes->{{3.962990697399872*^9, 3.962990698066004*^9}, {
  3.962993617973096*^9, 3.962993625905259*^9}, {3.962993890399871*^9, 
  3.96299389175662*^9}},
 FontSize->14,ExpressionUUID->"af88faf5-eb15-4172-b373-019c0ecf2f3e"],

Cell[CellGroupData[{

Cell["Path Diversity and the True Optimal Path", "Subsubsection",
 CellChangeTimes->{{3.96299070335322*^9, 3.962990704491493*^9}, {
  3.962993627559806*^9, 
  3.962993629893796*^9}},ExpressionUUID->"eb2f19aa-5bff-4681-91f7-\
615595d400bb"],

Cell[TextData[{
 "The \[OpenCurlyDoubleQuote]Path Diversity Analysis\[CloseCurlyDoubleQuote] \
section reveals the profound inefficiency of the conventional model. By \
\[OpenCurlyDoubleQuote]scouting\[CloseCurlyDoubleQuote] the full topology\
\[LongDash]a task managed by the Graph Virtual Machine (GVM)\[LongDash]the \
script uncovers five distinct paths between Node 1 and Node 8. The most \
crucial finding is that the true \[OpenCurlyDoubleQuote]Optimal Path\
\[CloseCurlyDoubleQuote] has a latency of only 46 units. This is a 25% \
performance improvement over the path that a conventional network would be \
locked into. An STP-based network is blind to this superior route because it \
proactively prunes the very links that would create it.\n\n",
 StyleBox["Self-Healing through Local Knowledge\n",
  FontWeight->"Bold"],
 "\nThe diversity of paths is not merely a performance benefit; it is the \
foundation of a resilient, self-healing fabric. The table of paths represents \
the GVM\[CloseCurlyQuote]s pre-computed recovery options within its TRAPH. \
The \[OpenCurlyDoubleQuote]D\[CapitalAE]D\[CapitalAE]LUS Self-Heals\
\[CloseCurlyDoubleQuote] visualization in the Manipulate block is a direct \
consequence of this knowledge. When the conventional path breaks, the GVM \
does not need to initiate a slow, global reconvergence. Instead, it uses its \
local knowledge of the graph to instantly switch to a known alternate route. \
This is how the network can \[OpenCurlyDoubleQuote]respond to failures in \
real time without dropping packets\[CloseCurlyDoubleQuote]. This local, \
deterministic recovery mechanism eliminates the timeouts that cause a \
\[OpenCurlyDoubleQuote]loss of Shannon information\[CloseCurlyDoubleQuote] \
and data corruption in distributed systems. By providing \
\[OpenCurlyDoubleQuote]Transactional Integrity at Layer 2\
\[CloseCurlyDoubleQuote], this architecture is fundamentally \
\[OpenCurlyDoubleQuote]safe for transactions\[CloseCurlyDoubleQuote]."
}], "Text",
 CellChangeTimes->{{3.962990708929163*^9, 3.9629907092792273`*^9}, {
   3.962993630920035*^9, 3.96299363860832*^9}, 
   3.9629938932691927`*^9},ExpressionUUID->"1efe2ff5-be30-48d8-95a9-\
9da7d8d3df20"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"n2nLattice", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", " ", "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", 
      " ", "6", ",", " ", "7", ",", " ", "8"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"1", ",", " ", "2"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"1", ",", " ", "3"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"2", ",", " ", "4"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"3", ",", " ", "4"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"3", ",", " ", "5"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"4", ",", " ", "6"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"5", ",", " ", "6"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"5", ",", " ", "7"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"6", ",", " ", "8"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"7", ",", " ", "8"}], "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeLabels", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<EdgeWeight\>\"", ",", " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"6", ",", " ", "8"}], "]"}], " ", "->", " ", "10"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"2", ",", " ", "4"}], "]"}], " ", "->", " ", "10"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"5", ",", " ", "7"}], "]"}], " ", "->", " ", "10"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"1", ",", " ", "2"}], "]"}], " ", "->", " ", "10"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"7", ",", " ", "8"}], "]"}], " ", "->", " ", "7"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"4", ",", " ", "6"}], "]"}], " ", "->", " ", "15"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"5", ",", " ", "6"}], "]"}], " ", "->", " ", "9"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"3", ",", " ", "5"}], "]"}], " ", "->", " ", "22"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"3", ",", " ", "4"}], "]"}], " ", "->", " ", "8"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"1", ",", " ", "3"}], "]"}], " ", "->", " ", "12"}]}], 
        "}"}]}], ",", " ", 
      RowBox[{
      "GraphLayout", " ", "->", " ", "\"\<SpringElectricalEmbedding\>\""}], 
      ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
      RowBox[{"PlotLabel", " ", "->", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Physical N2N Lattice (The Full Graph)\>\"", ",", " ", "18", ",", 
         " ", "Bold"}], "]"}]}], ",", " ", 
      RowBox[{"VertexLabels", " ", "->", " ", 
       RowBox[{"{", "\"\<Name\>\"", "}"}]}], ",", " ", 
      RowBox[{"VertexSize", " ", "->", " ", 
       RowBox[{"{", "Medium", "}"}]}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"spanningTree", "=", 
  RowBox[{"FindSpanningTree", "[", "n2nLattice", "]"}]}], "\n", 
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"n2nLattice", ",", "spanningTree", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Conventional Ethernet: The Spanning Tree\>\"", ",", "18", ",", 
      "Bold"}], "]"}]}], ",", 
   RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "\n", 
 RowBox[{"conventionalPath", "=", 
  RowBox[{"FindShortestPath", "[", 
   RowBox[{"spanningTree", ",", "1", ",", "8"}], "]"}]}], "\n", 
 RowBox[{"conventionalLatency", "=", 
  RowBox[{"GraphDistance", "[", 
   RowBox[{"spanningTree", ",", "1", ",", "8"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Conventional Path from 1 to 8: \>\"", ",", "conventionalPath"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Total Latency: \>\"", ",", "conventionalLatency", ",", 
    "\"\< units\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "failedLattice", ",", "healedPath", ",", "healedLatency", ",", 
       "failedSpanningTree"}], "}"}], ",", 
     RowBox[{
      RowBox[{"failedLattice", "=", 
       RowBox[{"EdgeDelete", "[", 
        RowBox[{"n2nLattice", ",", "failedEdge"}], "]"}]}], ";", 
      RowBox[{"failedSpanningTree", "=", 
       RowBox[{"EdgeDelete", "[", 
        RowBox[{"spanningTree", ",", "failedEdge"}], "]"}]}], ";", 
      RowBox[{"healedPath", "=", 
       RowBox[{"FindShortestPath", "[", 
        RowBox[{"failedLattice", ",", "1", ",", "8"}], "]"}]}], ";", 
      RowBox[{"healedLatency", "=", 
       RowBox[{"GraphDistance", "[", 
        RowBox[{"failedLattice", ",", "1", ",", "8"}], "]"}]}], ";", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"HighlightGraph", "[", 
            RowBox[{"failedLattice", ",", "failedSpanningTree", ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<Conventional Network Fails\>\"", ",", "14", ",", "Bold"}],
                "]"}]}], ",", 
             RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
           RowBox[{"HighlightGraph", "[", 
            RowBox[{"failedLattice", ",", "healedPath", ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<D\[CapitalAE]D\[CapitalAE]LUS Self-Heals\>\"", ",", "14", 
                ",", "Bold"}], "]"}]}], ",", 
             RowBox[{"GraphHighlightStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<Thick\>\"", ",", "Red"}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[SpanFromLeft]", ",", 
           RowBox[{"Pane", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               
               InterpretationBox[
                "\"\<When link \\!\\(\\*RowBox[{\\\"failedEdge\\\"}]\\) \
fails:\\nConventional Path: BROKEN (Nodes are partitioned)\\nDaedaelus Healed \
Path: \\!\\(\\*RowBox[{\\\"healedPath\\\"}]\\)\\nNew Latency: \
\\!\\(\\*RowBox[{\\\"healedLatency\\\"}]\\) units\>\"",
                StringForm[
                "When link `` fails:\nConventional Path: BROKEN (Nodes are \
partitioned)\nDaedaelus Healed Path: ``\nNew Latency: `` units", \
$CellContext`failedEdge, $CellContext`healedPath, $CellContext`healedLatency],
                
                Editable->False], ",", "14"}], "]"}], ",", 
             RowBox[{"ImageMargins", "\[Rule]", "10"}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"failedEdge", ",", 
       RowBox[{"4", "\[TwoWayRule]", "6"}], ",", 
       "\"\<Select Link to Fail:\>\""}], "}"}], ",", 
     RowBox[{"EdgeList", "[", "spanningTree", "]"}]}], "}"}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Top"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"allPaths", "=", 
   RowBox[{"FindPath", "[", 
    RowBox[{"n2nLattice", ",", "1", ",", "8", ",", "\[Infinity]", ",", "5"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pathLatencies", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"PropertyValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"n2nLattice", ",", "#1"}], "}"}], ",", "EdgeWeight"}], 
          "]"}], "&"}], ")"}], "/@", 
       RowBox[{"Partition", "[", 
        RowBox[{"path", ",", "2", ",", "1"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"path", ",", "allPaths"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pathResults", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Path \>\"", ",", "i", ",", "\"\<: \>\""}], "}"}], ",", 
         
         RowBox[{
         "allPaths", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
         "]"}], ",", 
       RowBox[{
       "pathLatencies", "\[LeftDoubleBracket]", "i", 
        "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "allPaths", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"optimalPath", "=", 
   RowBox[{"First", "[", "allPaths", "]"}]}], ";"}], "\n", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Path Diversity Analysis (Node 1 to 8)\>\"", ",", "16", ",", 
         "Bold"}], "]"}], ",", "\[SpanFromLeft]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TableForm", "[", 
        RowBox[{"pathResults", ",", 
         RowBox[{"TableHeadings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"None", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Path\>\"", ",", "\"\<Total Latency\>\""}], "}"}]}], 
           "}"}]}]}], "]"}], ",", 
       RowBox[{"HighlightGraph", "[", 
        RowBox[{"n2nLattice", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"optimalPath", ",", "Red", ",", "Thick"}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"conventionalPath", ",", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", "Dashed", ",", "Thick"}], "}"}]}], "]"}]}],
           "}"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Optimal Path (Red) vs. Conventional Path (Blue Dashed)\>\"", 
            ",", "12"}], "]"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.962990226436495*^9, 3.9629902264377604`*^9}, 
   3.962990269092944*^9, 
   3.962993894489312*^9},ExpressionUUID->"7f8f8ec8-b19f-4593-8fba-\
23d33b13f030"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
      Null, {{1, 2}, {1, 3}, {2, 4}, {3, 4}, {3, 5}, {4, 6}, {5, 6}, {5, 7}, {
       6, 8}, {7, 8}}}, {
      EdgeLabels -> {
        "EdgeWeight", UndirectedEdge[6, 8] -> 10, UndirectedEdge[2, 4] -> 10, 
         UndirectedEdge[5, 7] -> 10, UndirectedEdge[1, 2] -> 10, 
         UndirectedEdge[7, 8] -> 7, UndirectedEdge[4, 6] -> 15, 
         UndirectedEdge[5, 6] -> 9, UndirectedEdge[3, 5] -> 22, 
         UndirectedEdge[3, 4] -> 8, UndirectedEdge[1, 3] -> 12}, GraphLayout -> 
       "SpringElectricalEmbedding", ImageSize -> Large, PlotLabel -> 
       Style["Physical N2N Lattice (The Full Graph)", 18, Bold], 
       VertexLabels -> {"Name"}, VertexSize -> {Medium}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{3.242815771633792, 0.8612539307029448}, {
           3.243816537417133, 0.02202427038161403}}, 0.08392255487433631]}, 
         InsetBox["10", {3.2433161545254627, 0.4416391005422794}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{3.242815771633792, 0.8612539307029448}, {
           2.2026505320046637`, 0.882857586787589}}, 0.08392255487433631]}, 
         InsetBox["12", {2.722733151819228, 0.8720557587452669}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{3.243816537417133, 0.02202427038161403}, {
           2.203255855074624, 0.00015390966695744135`}}, 
           0.08392255487433631]}, 
         InsetBox["10", {2.7235361962458784, 0.011089090024285736}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.2026505320046637`, 0.882857586787589}, {
           2.203255855074624, 0.00015390966695744135`}}, 
           0.08392255487433631]}, 
         InsetBox["8", {2.202953193539644, 0.4415057482272732}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.2026505320046637`, 0.882857586787589}, {
           1.0415917146248654`, 0.882832660005294}}, 0.08392255487433631]}, 
         InsetBox["22", {1.6221211233147645, 0.8828451233964415}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.203255855074624, 0.00015390966695744135`}, {
           1.0419938218043123`, 0.}}, 0.08392255487433631]}, 
         InsetBox["15", {1.6226248384394681, 0.00007695483347872067}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.0415917146248654`, 0.882832660005294}, {
           1.0419938218043123`, 0.}}, 0.08392255487433631]}, 
         InsetBox["9", {1.0417927682145889, 0.441416330002647}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.0415917146248654`, 0.882832660005294}, {0., 
           0.8609535946850294}}, 0.08392255487433631]}, 
         InsetBox["10", {0.5207958573124327, 0.8718931273451618}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.0419938218043123`, 0.}, {0.0004916713489675484, 
           0.02172818996774889}}, 0.08392255487433631]}, 
         InsetBox["10", {0.5212427465766399, 0.010864094983874445}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.8609535946850294}, {0.0004916713489675484, 
           0.02172818996774889}}, 0.08392255487433631]}, 
         InsetBox["7", {0.0002458356744837742, 0.4413408923263892}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{3.242815771633792, 0.8612539307029448}, 
          0.08392255487433631], 
         InsetBox["1", {3.3267039647377303, 0.9435159613268174}, ImageScaled[{-0.03549493954075211, -0.025114434886574277}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.243816537417133, 0.02202427038161403}, 
          0.08392255487433631], 
         InsetBox["2", {3.3278129668030147, -0.060127238886500206}, 
          ImageScaled[{-0.03618585895516835, 1.0244089288489548}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.2026505320046637`, 0.882857586787589}, 
          0.08392255487433631], 
         InsetBox["3", {2.203869191040555, 1.0003428432871209}, ImageScaled[{0.4922207676360749, -0.24995965461071834}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.203255855074624, 0.00015390966695744135`}, 
          0.08392255487433631], 
         InsetBox["4", {2.204498146994626, -0.11733109931458041}, 
          ImageScaled[{0.49206990862505295, 1.2499580745953636}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0415917146248654`, 0.882832660005294}, 
          0.08392255487433631], 
         InsetBox["5", {1.0403566779830666, 1.0003177454804297}, ImageScaled[{0.5078837777684784, -0.24995856288737528}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0419938218043123`, 0.}, 0.08392255487433631], 
         InsetBox["6", {1.0407762316965754, -0.11748526758251895}, 
          ImageScaled[{0.5077724089291106, 1.2499597253582613}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.8609535946850294}, 0.08392255487433631], 
         InsetBox["7", {-0.0839709970091135, 0.9431310994287364}, 
          ImageScaled[{1.0360235129973383, -0.024574869312276704}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.0004916713489675484, 0.02172818996774889}, 
          0.08392255487433631], 
         InsetBox["8", {-0.08342528729131093, -0.06050449621707866}, 
          ImageScaled[{1.0356785625104883, 1.0249271165282823}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox[
    StyleBox[
    "\"Physical N2N Lattice (The Full Graph)\"", 18, Bold, StripOnInput -> 
     False], TraditionalForm]]], "Output",
 CellChangeTimes->{
  3.962990173590193*^9, {3.962990211082795*^9, 3.9629902267130117`*^9}, 
   3.9629902694040823`*^9, 3.9629904610637903`*^9, 3.962990505317026*^9},
 CellLabel->
  "Out[976]=",ExpressionUUID->"23b107ab-2f4f-4dc2-87ef-dbd89181f7fc"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
       SparseArray[
       Automatic, {8, 8}, 0, {
        1, {{0, 2, 4, 6, 8, 10, 12, 13, 14}, {{2}, {3}, {1}, {4}, {1}, {5}, {
          2}, {6}, {3}, {7}, {4}, {8}, {5}, {6}}}, Pattern}]}, {
      EdgeLabels -> {
        "EdgeWeight", UndirectedEdge[6, 8] -> 10, UndirectedEdge[2, 4] -> 10, 
         UndirectedEdge[5, 7] -> 10, UndirectedEdge[1, 2] -> 10, 
         UndirectedEdge[4, 6] -> 15, UndirectedEdge[3, 5] -> 22, 
         UndirectedEdge[1, 3] -> 12}, GraphLayout -> 
       "SpringElectricalEmbedding", ImageSize -> Large, PlotLabel -> 
       Style["Physical N2N Lattice (The Full Graph)", 18, Bold], 
       VertexLabels -> {"Name"}, VertexSize -> {Medium}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{2.930678609052742, 0.}, {4.031743176468, 
           0.00011046137892506316`}}, 0.084394958369788]}, 
         InsetBox["10", {3.481210892760371, 0.00005523068946253158}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.930678609052742, 0.}, {1.8510875527117163`, 
           0.00023346290618827918`}}, 0.084394958369788]}, 
         InsetBox["12", {2.390883080882229, 0.00011673145309413959}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{4.031743176468, 0.00011046137892506316`}, {
           5.111429320071948, 0.0003382005630293638}}, 0.084394958369788]}, 
         InsetBox["10", {4.571586248269973, 0.00022433097097721347}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.8510875527117163`, 0.00023346290618827918`}, {
           0.843949477087103, 0.0005844902246605191}}, 0.084394958369788]}, 
         InsetBox["22", {1.3475185148994098, 0.00040897656542439916}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{5.111429320071948, 0.0003382005630293638}, {
           6.119290054411028, 0.000626737426368224}}, 0.084394958369788]}, 
         InsetBox["15", {5.615359687241488, 0.0004824689946987939}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.843949477087103, 0.0005844902246605191}, {0., 
           0.0010086932777449752`}}, 0.084394958369788]}, 
         InsetBox["10", {0.4219747385435515, 0.0007965917512027472}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{6.119290054411028, 0.000626737426368224}, {
           6.964308475814067, 0.0009099080537993828}}, 0.084394958369788]}, 
         InsetBox["10", {6.541799265112548, 0.0007683227400838034}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{2.930678609052742, 0.}, 0.084394958369788], 
         InsetBox["1", {2.9306717603828267, -0.1181529415192135}, 
          ImageScaled[{0.500043473335167, 1.249999998740046}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.031743176468, 0.00011046137892506316`}, 
          0.084394958369788], 
         InsetBox["2", {4.031761564211726, -0.11804247890796686}, 
          ImageScaled[{0.4998832800301545, 1.2499999909176323}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8510875527117163`, 0.00023346290618827918`}, 
          0.084394958369788], 
         InsetBox["3", {1.8510541868742734, -0.11791947410033671}, 
          ImageScaled[{0.5002117964878275, 1.2499999700948312}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.111429320071948, 0.0003382005630293638}, 
          0.084394958369788], 
         InsetBox["4", {5.111458693917567, -0.11781473750337743}, 
          ImageScaled[{0.49981354349799556, 1.2499999768226482}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.843949477087103, 0.0005844902246605191}, 
          0.084394958369788], 
         InsetBox["5", {0.8438991923957326, -0.11756844079271535}, 
          ImageScaled[{0.500319192378789, 1.2499999320774804}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.119290054411028, 0.000626737426368224}, 
          0.084394958369788], 
         InsetBox["6", {6.119326764073619, -0.11752619858855964}, 
          ImageScaled[{0.4997669778970988, 1.2499999638004655}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.0010086932777449752`}, 0.084394958369788], 
         InsetBox["7", {-0.11815292679219441, 0.0010680817051767766}, 
          ImageScaled[{1.2499999052572757, 0.49962301979175183}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.964308475814067, 0.0009099080537993828}, 
          0.084394958369788], 
         InsetBox["8", {7.082461410897722, 0.0009495017950872098}, 
          ImageScaled[{-0.24999995788902618, 0.49974867061679423}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox[
    StyleBox[
    "\"Physical N2N Lattice (The Full Graph)\"", 18, Bold, StripOnInput -> 
     False], TraditionalForm]]], "Output",
 CellChangeTimes->{
  3.962990173590193*^9, {3.962990211082795*^9, 3.9629902267130117`*^9}, 
   3.9629902694040823`*^9, 3.9629904610637903`*^9, 3.962990505365803*^9},
 CellLabel->
  "Out[977]=",ExpressionUUID->"ba97d261-3c13-4017-8a97-de893443b5ed"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
      Null, {{1, 2}, {1, 3}, {2, 4}, {3, 4}, {3, 5}, {4, 6}, {5, 6}, {5, 7}, {
       6, 8}, {7, 8}}}, {
      EdgeLabels -> {
        "EdgeWeight", UndirectedEdge[1, 2] -> 10, UndirectedEdge[5, 7] -> 10, 
         UndirectedEdge[3, 4] -> 8, UndirectedEdge[2, 4] -> 10, 
         UndirectedEdge[4, 6] -> 15, UndirectedEdge[7, 8] -> 7, 
         UndirectedEdge[1, 3] -> 12, UndirectedEdge[6, 8] -> 10, 
         UndirectedEdge[5, 6] -> 9, UndirectedEdge[3, 5] -> 22}, 
       GraphHighlight -> {6, 7, 1, 4, 3, 
         UndirectedEdge[5, 7], 
         UndirectedEdge[4, 6], 2, 
         UndirectedEdge[6, 8], 
         UndirectedEdge[3, 5], 
         UndirectedEdge[2, 4], 
         UndirectedEdge[1, 2], 8, 
         UndirectedEdge[1, 3], 5}, GraphHighlightStyle -> {"Thick"}, 
       GraphLayout -> "SpringElectricalEmbedding", ImageSize -> Large, 
       PlotLabel -> 
       Style["Conventional Ethernet: The Spanning Tree", 18, Bold], 
       VertexLabels -> {"Name"}, VertexSize -> {Medium}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{3.242815771633792, 0.8612539307029448}, {
            3.243816537417133, 0.02202427038161403}}, 0.08392255487433631]}}, 
         InsetBox["10", {3.2433161545254627, 0.4416391005422794}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{3.242815771633792, 0.8612539307029448}, {
            2.2026505320046637`, 0.882857586787589}}, 0.08392255487433631]}}, 
         InsetBox["12", {2.722733151819228, 0.8720557587452669}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{3.243816537417133, 0.02202427038161403}, {
            2.203255855074624, 0.00015390966695744135`}}, 
            0.08392255487433631]}}, 
         InsetBox["10", {2.7235361962458784, 0.011089090024285736}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.2026505320046637`, 0.882857586787589}, {
           2.203255855074624, 0.00015390966695744135`}}, 
           0.08392255487433631]}, 
         InsetBox["8", {2.202953193539644, 0.4415057482272732}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{2.2026505320046637`, 0.882857586787589}, {
            1.0415917146248654`, 0.882832660005294}}, 0.08392255487433631]}}, 
         InsetBox["22", {1.6221211233147645, 0.8828451233964415}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{2.203255855074624, 0.00015390966695744135`}, {
            1.0419938218043123`, 0.}}, 0.08392255487433631]}}, 
         InsetBox["15", {1.6226248384394681, 0.00007695483347872067}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.0415917146248654`, 0.882832660005294}, {
           1.0419938218043123`, 0.}}, 0.08392255487433631]}, 
         InsetBox["9", {1.0417927682145889, 0.441416330002647}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.0415917146248654`, 0.882832660005294}, {0., 
            0.8609535946850294}}, 0.08392255487433631]}}, 
         InsetBox["10", {0.5207958573124327, 0.8718931273451618}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.0419938218043123`, 0.}, {0.0004916713489675484, 
            0.02172818996774889}}, 0.08392255487433631]}}, 
         InsetBox["10", {0.5212427465766399, 0.010864094983874445}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.8609535946850294}, {0.0004916713489675484, 
           0.02172818996774889}}, 0.08392255487433631]}, 
         InsetBox["7", {0.0002458356744837742, 0.4413408923263892}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{3.242815771633792, 0.8612539307029448}, 
           0.08392255487433631]}, 
         InsetBox["1", {3.3267039647377303, 0.9435159613268174}, ImageScaled[{-0.03549493954075211, -0.025114434886574277}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{3.243816537417133, 0.02202427038161403}, 
           0.08392255487433631]}, 
         InsetBox["2", {3.3278129668030147, -0.060127238886500206}, 
          ImageScaled[{-0.03618585895516835, 1.0244089288489548}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{2.2026505320046637`, 0.882857586787589}, 
           0.08392255487433631]}, 
         InsetBox["3", {2.203869191040555, 1.0003428432871209}, ImageScaled[{0.4922207676360749, -0.24995965461071834}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{2.203255855074624, 0.00015390966695744135`}, 
           0.08392255487433631]}, 
         InsetBox["4", {2.204498146994626, -0.11733109931458041}, 
          ImageScaled[{0.49206990862505295, 1.2499580745953636}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{1.0415917146248654`, 0.882832660005294}, 
           0.08392255487433631]}, 
         InsetBox["5", {1.0403566779830666, 1.0003177454804297}, ImageScaled[{0.5078837777684784, -0.24995856288737528}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{1.0419938218043123`, 0.}, 0.08392255487433631]}, 
         InsetBox["6", {1.0407762316965754, -0.11748526758251895}, 
          ImageScaled[{0.5077724089291106, 1.2499597253582613}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{0., 0.8609535946850294}, 0.08392255487433631]}, 
         InsetBox["7", {-0.0839709970091135, 0.9431310994287364}, 
          ImageScaled[{1.0360235129973383, -0.024574869312276704}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{0.0004916713489675484, 0.02172818996774889}, 
           0.08392255487433631]}, 
         InsetBox["8", {-0.08342528729131093, -0.06050449621707866}, 
          ImageScaled[{1.0356785625104883, 1.0249271165282823}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox[
    StyleBox[
    "\"Conventional Ethernet: The Spanning Tree\"", 18, Bold, StripOnInput -> 
     False], TraditionalForm]]], "Output",
 CellChangeTimes->{
  3.962990173590193*^9, {3.962990211082795*^9, 3.9629902267130117`*^9}, 
   3.9629902694040823`*^9, 3.9629904610637903`*^9, 3.962990505399225*^9},
 CellLabel->
  "Out[978]=",ExpressionUUID->"0bdb4e07-fd04-43fc-b31c-4aeb23f2cb58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "4", ",", "6", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{
  3.962990173590193*^9, {3.962990211082795*^9, 3.9629902267130117`*^9}, 
   3.9629902694040823`*^9, 3.9629904610637903`*^9, 3.962990505402323*^9},
 CellLabel->
  "Out[979]=",ExpressionUUID->"b1654110-d0fb-4e70-b12c-f14725d78942"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.962990173590193*^9, {3.962990211082795*^9, 3.9629902267130117`*^9}, 
   3.9629902694040823`*^9, 3.9629904610637903`*^9, 3.962990505402954*^9},
 CellLabel->
  "Out[980]=",ExpressionUUID->"610698ee-950e-4e6e-be4d-a90d8b239efc"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Conventional Path from 1 to 8: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "6", ",", "8"}], "}"}]}],
  SequenceForm["Conventional Path from 1 to 8: ", {1, 2, 4, 6, 8}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.962990173673564*^9, {3.962990211170163*^9, 3.962990226795475*^9}, 
   3.962990269490664*^9, 3.9629904611450787`*^9, 3.962990505403569*^9},
 CellLabel->
  "During evaluation of \
In[976]:=",ExpressionUUID->"e3e0ed29-f73a-41fa-80a3-4f55e557f880"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Latency: \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\" units\"\>"}],
  SequenceForm["Total Latency: ", 4, " units"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.962990173673564*^9, {3.962990211170163*^9, 3.962990226795475*^9}, 
   3.962990269490664*^9, 3.9629904611450787`*^9, 3.9629905054040327`*^9},
 CellLabel->
  "During evaluation of \
In[976]:=",ExpressionUUID->"514c2e21-8f91-4382-bd6e-15fa0a5a2283"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`failedEdge$$ = UndirectedEdge[5, 7], 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`failedEdge$$], 
       TwoWayRule[4, 6], "Select Link to Fail:"}, {
       UndirectedEdge[1, 2], 
       UndirectedEdge[1, 3], 
       UndirectedEdge[2, 4], 
       UndirectedEdge[3, 5], 
       UndirectedEdge[4, 6], 
       UndirectedEdge[5, 7], 
       UndirectedEdge[6, 8]}, ControlType -> PopupMenu}}, Typeset`size$$ = {
    907., {156.17974853515625`, 165.82025146484375`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`failedEdge$$ = TwoWayRule[4, 6]}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`failedLattice$, $CellContext`healedPath$, \
$CellContext`healedLatency$, $CellContext`failedSpanningTree$}, \
$CellContext`failedLattice$ = 
         EdgeDelete[$CellContext`n2nLattice, $CellContext`failedEdge$$]; \
$CellContext`failedSpanningTree$ = 
         EdgeDelete[$CellContext`spanningTree, $CellContext`failedEdge$$]; \
$CellContext`healedPath$ = 
         FindShortestPath[$CellContext`failedLattice$, 1, 
           8]; $CellContext`healedLatency$ = 
         GraphDistance[$CellContext`failedLattice$, 1, 8]; Grid[{{
            
            HighlightGraph[$CellContext`failedLattice$, \
$CellContext`failedSpanningTree$, PlotLabel -> 
             Style["Conventional Network Fails", 14, Bold], 
             GraphHighlightStyle -> "Thick", ImageSize -> Medium], 
            
            HighlightGraph[$CellContext`failedLattice$, \
$CellContext`healedPath$, PlotLabel -> 
             Style["Daedaelus Self-Heals", 14, Bold], 
             GraphHighlightStyle -> {"Thick", Red}, ImageSize -> 
             Medium]}, {$CellContext`\[SpanFromLeft], 
            Pane[
             Style[
              StringForm[
              "When link `` fails:\nConventional Path: BROKEN (Nodes are \
partitioned)\nDaedaelus Healed Path: ``\nNew Latency: `` units", \
$CellContext`failedEdge$$, $CellContext`healedPath$, \
$CellContext`healedLatency$], 14], ImageMargins -> 10]}}]], 
      "Specifications" :> {{{$CellContext`failedEdge$$, 
          TwoWayRule[4, 6], "Select Link to Fail:"}, {
          UndirectedEdge[1, 2], 
          UndirectedEdge[1, 3], 
          UndirectedEdge[2, 4], 
          UndirectedEdge[3, 5], 
          UndirectedEdge[4, 6], 
          UndirectedEdge[5, 7], 
          UndirectedEdge[6, 8]}}}, "Options" :> {ControlPlacement -> Top}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{961., {211., 220.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.962990173590193*^9, {3.962990211082795*^9, 3.9629902267130117`*^9}, 
   3.962990269404083*^9, 3.9629904610637903`*^9, 3.962990505407771*^9},
 CellLabel->
  "Out[983]=",ExpressionUUID->"b7773693-d176-4c05-a443-d28c8d1639b6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Path Diversity Analysis (Node 1 to 8)\"\>",
      StripOnInput->False,
      FontSize->16,
      FontWeight->Bold], "\[SpanFromLeft]"},
    {
     InterpretationBox[GridBox[{
        {"\<\"Path\"\>", "\<\"Total Latency\"\>"},
        {
         TemplateBox[{
           RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "4", ",", "6", ",", "8"}], "}"}], 
           "\"Path \"", "1", "\": \""},
          "RowWithSeparator"], GridBox[{
           {
            RowBox[{"4", " ", "$Failed"}]},
           {
            RowBox[{"4", " ", "$Failed"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.1]}, 
              Offset[0.2]}}]},
        {
         TemplateBox[{
           RowBox[{"{", 
             
             RowBox[{"1", ",", "3", ",", "4", ",", "6", ",", "5", ",", "7", 
               ",", "8"}], "}"}], "\"Path \"", "2", "\": \""},
          "RowWithSeparator"], GridBox[{
           {
            RowBox[{"6", " ", "$Failed"}]},
           {
            RowBox[{"6", " ", "$Failed"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.1]}, 
              Offset[0.2]}}]},
        {
         TemplateBox[{
           RowBox[{"{", 
             
             RowBox[{"1", ",", "2", ",", "4", ",", "6", ",", "5", ",", "7", 
               ",", "8"}], "}"}], "\"Path \"", "3", "\": \""},
          "RowWithSeparator"], GridBox[{
           {
            RowBox[{"6", " ", "$Failed"}]},
           {
            RowBox[{"6", " ", "$Failed"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.1]}, 
              Offset[0.2]}}]},
        {
         TemplateBox[{
           RowBox[{"{", 
             
             RowBox[{"1", ",", "2", ",", "4", ",", "3", ",", "5", ",", "7", 
               ",", "8"}], "}"}], "\"Path \"", "4", "\": \""},
          "RowWithSeparator"], GridBox[{
           {
            RowBox[{"6", " ", "$Failed"}]},
           {
            RowBox[{"6", " ", "$Failed"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.1]}, 
              Offset[0.2]}}]},
        {
         TemplateBox[{
           RowBox[{"{", 
             
             RowBox[{"1", ",", "2", ",", "4", ",", "3", ",", "5", ",", "6", 
               ",", "8"}], "}"}], "\"Path \"", "5", "\": \""},
          "RowWithSeparator"], GridBox[{
           {
            RowBox[{"6", " ", "$Failed"}]},
           {
            RowBox[{"6", " ", "$Failed"}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.1]}, 
              Offset[0.2]}}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[2.0999999999999996`]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      TableForm[{{
         Row[{"Path ", 1, ": "}, {1, 2, 4, 6, 8}], {4 $Failed, 4 $Failed}}, {
         Row[{"Path ", 2, ": "}, {1, 3, 4, 6, 5, 7, 8}], {
         6 $Failed, 6 $Failed}}, {
         Row[{"Path ", 3, ": "}, {1, 2, 4, 6, 5, 7, 8}], {
         6 $Failed, 6 $Failed}}, {
         Row[{"Path ", 4, ": "}, {1, 2, 4, 3, 5, 7, 8}], {
         6 $Failed, 6 $Failed}}, {
         Row[{"Path ", 5, ": "}, {1, 2, 4, 3, 5, 6, 8}], {
         6 $Failed, 6 $Failed}}}, 
       TableHeadings -> {None, {"Path", "Total Latency"}}]], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
          Null, {{1, 2}, {1, 3}, {2, 4}, {3, 4}, {3, 5}, {4, 6}, {5, 6}, {5, 
           7}, {6, 8}, {7, 8}}}, {
          EdgeLabels -> {
            "EdgeWeight", UndirectedEdge[1, 2] -> 10, UndirectedEdge[5, 7] -> 
             10, UndirectedEdge[3, 4] -> 8, UndirectedEdge[2, 4] -> 10, 
             UndirectedEdge[4, 6] -> 15, UndirectedEdge[7, 8] -> 7, 
             UndirectedEdge[1, 3] -> 12, UndirectedEdge[6, 8] -> 10, 
             UndirectedEdge[5, 6] -> 9, UndirectedEdge[3, 5] -> 22}, 
           GraphHighlight -> {6, 1, 4, 2, 8}, 
           GraphHighlightStyle -> {1 -> {VertexStyle -> Directive[
                 EdgeForm[
                  Directive[
                   Hue[0, 1, 0.8], 
                   Opacity[1]]], 
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], 
                 Thickness[Large]]}, 4 -> {VertexStyle -> Directive[
                 EdgeForm[
                  Directive[
                   Hue[0, 1, 0.8], 
                   Opacity[1]]], 
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], 
                 Thickness[Large]]}, 2 -> {VertexStyle -> Directive[
                 EdgeForm[
                  Directive[
                   Hue[0, 1, 0.8], 
                   Opacity[1]]], 
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], 
                 Thickness[Large]]}, 8 -> {VertexStyle -> Directive[
                 EdgeForm[
                  Directive[
                   Hue[0, 1, 0.8], 
                   Opacity[1]]], 
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], 
                 Thickness[Large]]}, 6 -> {VertexStyle -> Directive[
                 EdgeForm[
                  Directive[
                   Hue[0, 1, 0.8], 
                   Opacity[1]]], 
                 RGBColor[0, 0, 1], 
                 Dashing[{Small, Small}], 
                 Thickness[Large]]}}, GraphLayout -> 
           "SpringElectricalEmbedding", ImageSize -> Medium, PlotLabel -> 
           Style["Optimal Path (Red) vs. Conventional Path (Blue Dashed)", 
             12], VertexLabels -> {"Name"}, VertexSize -> {Medium}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
             {Arrowheads[0.], 
              ArrowBox[{{3.242815771633792, 0.8612539307029448}, {
               3.243816537417133, 0.02202427038161403}}, 
               0.08392255487433631]}, 
             InsetBox["10", {3.2433161545254627, 0.4416391005422794}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{3.242815771633792, 0.8612539307029448}, {
               2.2026505320046637`, 0.882857586787589}}, 
               0.08392255487433631]}, 
             InsetBox["12", {2.722733151819228, 0.8720557587452669}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{3.243816537417133, 0.02202427038161403}, {
               2.203255855074624, 0.00015390966695744135`}}, 
               0.08392255487433631]}, 
             InsetBox["10", {2.7235361962458784, 0.011089090024285736}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{2.2026505320046637`, 0.882857586787589}, {
               2.203255855074624, 0.00015390966695744135`}}, 
               0.08392255487433631]}, 
             InsetBox["8", {2.202953193539644, 0.4415057482272732}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{2.2026505320046637`, 0.882857586787589}, {
               1.0415917146248654`, 0.882832660005294}}, 
               0.08392255487433631]}, 
             InsetBox["22", {1.6221211233147645, 0.8828451233964415}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{2.203255855074624, 0.00015390966695744135`}, {
               1.0419938218043123`, 0.}}, 0.08392255487433631]}, 
             InsetBox["15", {1.6226248384394681, 0.00007695483347872067}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{1.0415917146248654`, 0.882832660005294}, {
               1.0419938218043123`, 0.}}, 0.08392255487433631]}, 
             InsetBox["9", {1.0417927682145889, 0.441416330002647}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{1.0415917146248654`, 0.882832660005294}, {0., 
               0.8609535946850294}}, 0.08392255487433631]}, 
             InsetBox["10", {0.5207958573124327, 0.8718931273451618}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{1.0419938218043123`, 0.}, {0.0004916713489675484, 
               0.02172818996774889}}, 0.08392255487433631]}, 
             InsetBox["10", {0.5212427465766399, 0.010864094983874445}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}, {
             {Arrowheads[0.], 
              ArrowBox[{{0., 0.8609535946850294}, {0.0004916713489675484, 
               0.02172818996774889}}, 0.08392255487433631]}, 
             InsetBox["7", {0.0002458356744837742, 0.4413408923263892}, 
              ImageScaled[{0.5, 0.5}],
              BaseStyle->"Graphics"]}}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
             {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
              EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
              DiskBox[{3.242815771633792, 0.8612539307029448}, 
               0.08392255487433631]}, 
             InsetBox["1", {3.3267039647377303, 0.9435159613268174}, 
              ImageScaled[{-0.03549493954075211, -0.025114434886574277}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
              EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
              DiskBox[{3.243816537417133, 0.02202427038161403}, 
               0.08392255487433631]}, 
             InsetBox["2", {3.3278129668030147, -0.060127238886500206}, 
              ImageScaled[{-0.03618585895516835, 1.0244089288489548}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2.2026505320046637`, 0.882857586787589}, 
              0.08392255487433631], 
             InsetBox["3", {2.203869191040555, 1.0003428432871209}, 
              ImageScaled[{0.4922207676360749, -0.24995965461071834}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
              EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
              DiskBox[{2.203255855074624, 0.00015390966695744135`}, 
               0.08392255487433631]}, 
             InsetBox["4", {2.204498146994626, -0.11733109931458041}, 
              ImageScaled[{0.49206990862505295, 1.2499580745953636}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1.0415917146248654`, 0.882832660005294}, 
              0.08392255487433631], 
             InsetBox["5", {1.0403566779830666, 1.0003177454804297}, 
              ImageScaled[{0.5078837777684784, -0.24995856288737528}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
              EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
              DiskBox[{1.0419938218043123`, 0.}, 0.08392255487433631]}, 
             InsetBox["6", {1.0407762316965754, -0.11748526758251895}, 
              ImageScaled[{0.5077724089291106, 1.2499597253582613}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{0., 0.8609535946850294}, 0.08392255487433631], 
             InsetBox["7", {-0.0839709970091135, 0.9431310994287364}, 
              ImageScaled[{1.0360235129973383, -0.024574869312276704}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
              EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
              DiskBox[{0.0004916713489675484, 0.02172818996774889}, 
               0.08392255487433631]}, 
             InsetBox["8", {-0.08342528729131093, -0.06050449621707866}, 
              ImageScaled[{1.0356785625104883, 1.0249271165282823}],
              BaseStyle->"Graphics"]}}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->"NetworkGraphics",
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->Medium,
      PlotLabel->FormBox[
        StyleBox[
        "\"Optimal Path (Red) vs. Conventional Path (Blue Dashed)\"", 12, 
         StripOnInput -> False], TraditionalForm]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.962990173590193*^9, {3.962990211082795*^9, 3.9629902267130117`*^9}, 
   3.9629902694040823`*^9, 3.9629904610637903`*^9, 3.9629905054898043`*^9},
 CellLabel->
  "Out[988]=",ExpressionUUID->"ba7d73df-2c94-43bf-b12e-eecaa32a76eb"],

Cell[BoxData[
 TemplateBox[{
  "EdgeDelete", "inv", 
   "\"The argument \\!\\(\\*RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \
\\\"3\\\"}]\\) in \\!\\(\\*PaneBox[\\\"\\\\\\\"EdgeDelete[Graph[<8>, <7>], 1 \
\[UndirectedEdge] 3]\\\\\\\"\\\", Rule[BaselinePosition, Baseline]]\\) is not \
a valid \\!\\(\\*RowBox[{\\\"\\\\\\\"edge\\\\\\\"\\\"}]\\).\"", 2, 1054, 105, 
   19049408607000978632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.962993680763486*^9},
 CellLabel->"",ExpressionUUID->"10aa32bd-827d-4e55-ba32-e077e6de7455"],

Cell[BoxData[
 TemplateBox[{
  "EdgeDelete", "inv", 
   "\"The argument \\!\\(\\*RowBox[{\\\"3\\\", \\\"\[UndirectedEdge]\\\", \
\\\"5\\\"}]\\) in \\!\\(\\*PaneBox[\\\"\\\\\\\"EdgeDelete[Graph[<8>, <7>], 3 \
\[UndirectedEdge] 5]\\\\\\\"\\\", Rule[BaselinePosition, Baseline]]\\) is not \
a valid \\!\\(\\*RowBox[{\\\"\\\\\\\"edge\\\\\\\"\\\"}]\\).\"", 2, 1054, 106, 
   19049408607000978632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.96299368874267*^9},
 CellLabel->"",ExpressionUUID->"99c4f93c-fe49-4b01-89ec-40ff7879b765"],

Cell[BoxData[
 TemplateBox[{
  "EdgeDelete", "inv", 
   "\"The argument \\!\\(\\*RowBox[{\\\"6\\\", \\\"\[UndirectedEdge]\\\", \
\\\"8\\\"}]\\) in \\!\\(\\*PaneBox[\\\"\\\\\\\"EdgeDelete[Graph[<8>, <7>], 6 \
\[UndirectedEdge] 8]\\\\\\\"\\\", Rule[BaselinePosition, Baseline]]\\) is not \
a valid \\!\\(\\*RowBox[{\\\"\\\\\\\"edge\\\\\\\"\\\"}]\\).\"", 2, 1054, 107, 
   19049408607000978632, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.962993691098916*^9},
 CellLabel->"",ExpressionUUID->"22f8d520-2536-4059-b406-64d645be9de3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Conventional Network: A Brittle Abstraction", "Chapter",
 CellChangeTimes->{{3.9629906915537767`*^9, 3.962990692034157*^9}, {
  3.962993744545586*^9, 3.962993744878037*^9}},
 FontSize->24,ExpressionUUID->"91b40fbe-8c5a-4063-b07e-f242b008f934"],

Cell[CellGroupData[{

Cell["\<\
This Mathematica notebook provides another \[OpenCurlyDoubleQuote]Code as \
Proof\[CloseCurlyDoubleQuote] analysis, demonstrating the universal \
advantages of the D\[CapitalAE]D\[CapitalAE]LUS architecture across different \
network topologies. It serves as a formal model for our presentations at the \
FMS (Future of Memory and Storage) conference, showing how a resilient, \
graph-aware fabric provides superior performance and self-healing \
capabilities compared to the brittle abstractions of conventional networking.

The analysis begins by defining the physical N2N Lattice, which represents \
the true groundplane of interconnected CELLs. It then simulates the effect of \
a classical protocol like STP by calculating a single spanningTree. The \
output clearly shows that the conventionalPath from Node 1 to 8 on this tree \
has a total latency of 61 units. The Manipulate function provides the most \
critical insight: when a link on this conventional spanning tree is selected \
to fail, the output correctly reports \[OpenCurlyDoubleQuote]Conventional \
Path: BROKEN (Nodes are partitioned)\[CloseCurlyDoubleQuote]. This \
demonstrates the fragility of a pruned graph; the loss of a single critical \
link severs communication, forcing a slow, network-wide reconvergence. This \
is the reality that makes today\[CloseCurlyQuote]s networks unsafe for \
transactions, as they cannot guarantee continuous connectivity.\
\>", "Subsection",
 CellChangeTimes->{{3.962990697399872*^9, 3.962990698066004*^9}, {
   3.962993753935828*^9, 3.9629937594212093`*^9}, 3.962993899660507*^9},
 FontSize->16,ExpressionUUID->"ee5bfa41-cd24-42bb-875b-656e15d56c32"],

Cell[CellGroupData[{

Cell["The D\[CapitalAE]D\[CapitalAE]LUS Approach: Autonomous Self-Healing", \
"Subsubsection",
 CellChangeTimes->{{3.96299070335322*^9, 3.962990704491493*^9}, {
   3.962993767046782*^9, 3.9629937674095984`*^9}, 
   3.962993901485828*^9},ExpressionUUID->"e2a7b5dc-222e-4df6-be23-\
51dded85f74f"],

Cell[TextData[{
 "In stark contrast, the \[OpenCurlyDoubleQuote]D\[CapitalAE]D\[CapitalAE]LUS \
Self-Heals\[CloseCurlyDoubleQuote] portion of the simulation shows the system\
\[CloseCurlyQuote]s ability to recover instantly from the same failure. This \
is not a theoretical ideal but a direct consequence of the architecture. The \
Graph Virtual Machine (GVM), which manages the fabric\[CloseCurlyQuote]s \
topology, maintains knowledge of the complete N2N Lattice through a \
collection of trees known as a TRAPH. Upon detecting a link failure, the GVM \
uses this pre-existing topological awareness to immediately reroute traffic \
along a known, alternative path. As demonstrated in our FMS presentation \
rehearsals, the network is able to \[OpenCurlyDoubleQuote]respond to failures \
in real time without dropping packets\[CloseCurlyDoubleQuote] because the \
recovery is a local, deterministic decision, not a global, probabilistic \
event.\n\n",
 StyleBox["Path Diversity: The Foundation of Resilience\n",
  FontWeight->"Bold"],
 "\nThe \[OpenCurlyDoubleQuote]Path Diversity \
Analysis\[CloseCurlyDoubleQuote] at the end of the notebook provides the data \
that underpins this self-healing capability. The table lists multiple \
distinct paths between two nodes, each with a different latency. This is the \
rich path diversity that the D\[CapitalAE]D\[CapitalAE]LUS architecture \
preserves and leverages. The final graph visually compares the \
\[OpenCurlyDoubleQuote]Optimal Path (Red)\[CloseCurlyDoubleQuote] found by \
scouting the full lattice against the \[OpenCurlyDoubleQuote]Conventional \
Path (Blue Dashed)\[CloseCurlyDoubleQuote] that is locked into the \
inefficient spanning tree. This proves that the D\[CapitalAE]D\[CapitalAE]LUS \
approach is not only more resilient but also more performant. The optimal \
path\[CloseCurlyQuote]s latency of 46 is a significant improvement over the \
conventional path\[CloseCurlyQuote]s 61. This is essential, as \
\[OpenCurlyDoubleQuote]You cannot add reliability on top of an unreliable \
network\[CloseCurlyDoubleQuote]. By building on a foundation of resilient, \
redundant paths, we can provide the Reversible Subtransactions and \
\[OpenCurlyDoubleQuote]Transactional Integrity at Layer 2\
\[CloseCurlyDoubleQuote] needed to finally eliminate the data-corrupting \
timeouts and retries that plague modern distributed systems."
}], "Text",
 CellChangeTimes->{{3.962990708929163*^9, 3.9629907092792273`*^9}, {
  3.962993770163225*^9, 3.962993777238233*^9}, {3.962993902752393*^9, 
  3.9629939109864807`*^9}},ExpressionUUID->"4d02a1a7-a5a1-4b8c-872b-\
bf24504e0009"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"g", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", " ", "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", 
      " ", "6", ",", " ", "7", ",", " ", "8"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"1", ",", " ", "2"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"2", ",", " ", "3"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"4", ",", " ", "5"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"5", ",", " ", "6"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"6", ",", " ", "7"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"1", ",", " ", "8"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"2", ",", " ", "6"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"2", ",", " ", "8"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"8", ",", " ", "4"}], "]"}], ",", " ", 
      RowBox[{"UndirectedEdge", "[", 
       RowBox[{"3", ",", " ", "7"}], "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeLabels", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<EdgeWeight\>\"", ",", " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"2", ",", " ", "3"}], "]"}], " ", "->", " ", "1"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"6", ",", " ", "7"}], "]"}], " ", "->", " ", "2"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"1", ",", " ", "8"}], "]"}], " ", "->", " ", "4"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"4", ",", " ", "5"}], "]"}], " ", "->", " ", "1"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"3", ",", " ", "7"}], "]"}], " ", "->", " ", "6"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"1", ",", " ", "2"}], "]"}], " ", "->", " ", "6"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"2", ",", " ", "8"}], "]"}], " ", "->", " ", "1"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"2", ",", " ", "6"}], "]"}], " ", "->", " ", "3"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"5", ",", " ", "6"}], "]"}], " ", "->", " ", "2"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"UndirectedEdge", "[", 
           RowBox[{"8", ",", " ", "4"}], "]"}], " ", "->", " ", "5"}]}], 
        "}"}]}], ",", " ", 
      RowBox[{
      "GraphLayout", " ", "->", " ", "\"\<SpringElectricalEmbedding\>\""}], 
      ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
      RowBox[{
      "PlotLabel", " ", "->", " ", 
       "\"\<Initial Resilient Mesh Network with Link Latencies\>\""}], ",", 
      " ", 
      RowBox[{"VertexLabels", " ", "->", " ", 
       RowBox[{"{", "\"\<Name\>\"", "}"}]}], ",", " ", 
      RowBox[{"VertexSize", " ", "->", " ", 
       RowBox[{"{", "Large", "}"}]}], ",", " ", 
      RowBox[{"VertexStyle", " ", "->", " ", 
       RowBox[{"{", "LightBlue", "}"}]}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"mstEdges", "=", 
  RowBox[{"FindSpanningTree", "[", "g", "]"}]}], "\n", 
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", "mstEdges", ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Minimum Spanning Tree (Optimal Path)\>\""}], 
   ",", 
   RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "\n", 
 RowBox[{"pathLatency", "=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"PropertyValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"g", ",", "#1"}], "}"}], ",", "EdgeWeight"}], "]"}], "&"}], 
     ")"}], "/@", 
    RowBox[{"EdgeList", "[", "mstEdges", "]"}]}], "]"}]}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Total Path Latency of the Minimum Spanning Tree: \>\"", ",", 
   "pathLatency"}], "]"}], "\n", 
 RowBox[{"shortestPath", "=", 
  RowBox[{"FindShortestPath", "[", 
   RowBox[{"g", ",", "1", ",", "7"}], "]"}]}], "\n", 
 RowBox[{"shortestPathLatency", "=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"PropertyValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"g", ",", "#1"}], "}"}], ",", "EdgeWeight"}], "]"}], "&"}], 
     ")"}], "/@", 
    RowBox[{"Partition", "[", 
     RowBox[{"shortestPath", ",", "2", ",", "1"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", 
   RowBox[{"PathGraph", "[", "shortestPath", "]"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Shortest Path Between Node 1 and 7\>\""}], 
   ",", 
   RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Shortest path: \>\"", ",", "shortestPath"}], "]"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Latency of shortest path: \>\"", ",", "shortestPathLatency"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{"allPaths", "=", 
   RowBox[{"FindPath", "[", 
    RowBox[{"g", ",", "1", ",", "7", ",", "\[Infinity]", ",", "All"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pathData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"path", ",", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"PropertyValue", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"g", ",", "#1"}], "}"}], ",", "EdgeWeight"}], "]"}], 
           "&"}], ")"}], "/@", 
         RowBox[{"Partition", "[", 
          RowBox[{"path", ",", "2", ",", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"path", ",", "allPaths"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{"pathData", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Path\>\"", ",", "\"\<Total Latency\>\""}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"LightGray", ",", "White"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9629903318357477`*^9, 3.9629903318371572`*^9}, 
   3.962990464840372*^9},
 CellLabel->
  "In[1023]:=",ExpressionUUID->"e39806c4-f0c1-403b-b585-69b302b88d35"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
      Null, {{1, 2}, {2, 3}, {4, 5}, {5, 6}, {6, 7}, {1, 8}, {2, 6}, {2, 8}, {
       8, 4}, {3, 7}}}, {
      EdgeLabels -> {
        "EdgeWeight", UndirectedEdge[2, 3] -> 1, UndirectedEdge[6, 7] -> 2, 
         UndirectedEdge[1, 8] -> 4, UndirectedEdge[4, 5] -> 1, 
         UndirectedEdge[1, 2] -> 6, UndirectedEdge[3, 7] -> 6, 
         UndirectedEdge[2, 6] -> 3, UndirectedEdge[2, 8] -> 1, 
         UndirectedEdge[5, 6] -> 2, UndirectedEdge[8, 4] -> 5}, GraphLayout -> 
       "SpringElectricalEmbedding", ImageSize -> Large, PlotLabel -> 
       "Initial Resilient Mesh Network with Link Latencies", 
       VertexLabels -> {"Name"}, VertexSize -> {Large}, VertexStyle -> {
         RGBColor[0.87, 0.94, 1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{0.7874292183869905, 2.282338350993489}, {
           1.4494817759566068`, 1.5633886334061187`}}, 0.16619017154690865`]},
          InsetBox["6", {1.1184554971717986, 1.922863492199804}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.7874292183869905, 2.282338350993489}, {
           0.4206139154923685, 1.5367339910732296`}}, 0.16619017154690865`]}, 
         InsetBox["4", {0.6040215669396796, 1.9095361710333594}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.4494817759566068`, 1.5633886334061187`}, {
           2.53033349960291, 1.5146751543609822`}}, 0.16619017154690865`]}, 
         InsetBox["1", {1.9899076377797584, 1.5390318938835503}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.4494817759566068`, 1.5633886334061187`}, {
           1.713461957970749, 0.5124299802235102}}, 0.16619017154690865`]}, 
         InsetBox["3", {1.5814718669636778, 1.0379093068148144}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.4494817759566068`, 1.5633886334061187`}, {
           0.4206139154923685, 1.5367339910732296`}}, 0.16619017154690865`]}, 
         InsetBox["1", {0.9350478457244876, 1.550061312239674}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.53033349960291, 1.5146751543609822`}, {
           2.715615719362974, 0.6697660880737124}}, 0.16619017154690865`]}, 
         InsetBox["6", {2.622974609482942, 1.0922206212173473}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.5892903099366924}, {0.7553183798852724, 0.}}, 
           0.16619017154690865`]}, 
         InsetBox["1", {0.3776591899426362, 0.2946451549683462}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.5892903099366924}, {0.4206139154923685, 
           1.5367339910732296`}}, 0.16619017154690865`]}, 
         InsetBox["5", {0.21030695774618424, 1.063012150504961}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.7553183798852724, 0.}, {1.713461957970749, 
           0.5124299802235102}}, 0.16619017154690865`]}, 
         InsetBox["2", {1.2343901689280108, 0.2562149901117551}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.713461957970749, 0.5124299802235102}, {
           2.715615719362974, 0.6697660880737124}}, 0.16619017154690865`]}, 
         InsetBox["2", {2.2145388386668614, 0.5910980341486113}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {RGBColor[0.87, 0.94, 1], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{0.7874292183869905, 2.282338350993489}, 
          0.16619017154690865], 
         InsetBox["1", {0.754153987379291, 2.5126128357159923}, ImageScaled[{0.6072627607598087, -0.24229017247582096}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.4494817759566068`, 1.5633886334061187`}, 
          0.16619017154690865], 
         InsetBox["2", {1.5476999751493925, 1.7743074914064325}, ImageScaled[{0.18339347667226524, -0.17989727855487447}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.53033349960291, 1.5146751543609822`}, 
          0.16619017154690865], 
         InsetBox["3", {2.680217648775872, 1.6926311071682079}, ImageScaled[{0.016848203677178653, -0.07364130056162366}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.5892903099366924}, 0.16619017154690865], 
         InsetBox["4", {-0.2257056392893671, 0.5328054119036046}, 
          ImageScaled[{1.2275624918616836, 0.6820791598069849}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7553183798852724, 0.}, 0.16619017154690865], 
         InsetBox["5", {0.7353994983252323, -0.23181203046914392}, 
          ImageScaled[{0.5642085467981627, 1.247246453667107}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.713461957970749, 0.5124299802235102}, 
          0.16619017154690865], 
         InsetBox["6", {1.7874055749754425, 0.2918264425884727}, ImageScaled[{0.2616426314619996, 1.2111158589594524}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.715615719362974, 0.6697660880737124}, 
          0.16619017154690865], 
         InsetBox["7", {2.9076963712548096, 0.5384702294884636}, ImageScaled[{-0.11917229081579328, 0.9232324116675408}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.4206139154923685, 1.5367339910732296`}, 
          0.16619017154690865], 
         InsetBox["8", {0.20986221576636935, 1.635310359313455}, ImageScaled[{1.179358443588329, 0.18223891817083215}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox[
   "\"Initial Resilient Mesh Network with Link Latencies\"", 
    TraditionalForm]]], "Output",
 CellChangeTimes->{
  3.962990332376996*^9, {3.96299045648328*^9, 3.9629904652224283`*^9}, 
   3.962990568034862*^9},
 CellLabel->
  "Out[1023]=",ExpressionUUID->"e80d19d9-80a9-461c-bf0a-fe4c1dc59376"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
       SparseArray[
       Automatic, {8, 8}, 0, {
        1, {{0, 2, 5, 7, 8, 9, 11, 12, 14}, {{2}, {8}, {1}, {3}, {6}, {2}, {
          7}, {8}, {6}, {2}, {5}, {3}, {1}, {4}}}, Pattern}]}, {
      EdgeLabels -> {
        "EdgeWeight", UndirectedEdge[2, 3] -> 1, UndirectedEdge[1, 8] -> 4, 
         UndirectedEdge[3, 7] -> 6, UndirectedEdge[1, 2] -> 6, 
         UndirectedEdge[2, 6] -> 3, UndirectedEdge[5, 6] -> 2, 
         UndirectedEdge[8, 4] -> 5}, GraphLayout -> 
       "SpringElectricalEmbedding", ImageSize -> Large, PlotLabel -> 
       "Initial Resilient Mesh Network with Link Latencies", 
       VertexLabels -> {"Name"}, VertexSize -> {Large}, VertexStyle -> {
         RGBColor[0.87, 0.94, 1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{2.3122492683421783`, 1.562433486942548}, {
           1.1604368655884216`, 1.5630054388766716`}}, 0.17267105640285008`]},
          InsetBox["6", {1.7363430669653, 1.5627194629096097}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.3122492683421783`, 1.562433486942548}, {
           3.361350635313382, 1.5627815396273108`}}, 0.17267105640285008`]}, 
         InsetBox["4", {2.83679995182778, 1.5626075132849295}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.1604368655884216`, 1.5630054388766716`}, {
           0.5316415956620287, 2.426956184109775}}, 0.17267105640285008`]}, 
         InsetBox["1", {0.8460392306252251, 1.9949808114932233}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.1604368655884216`, 1.5630054388766716`}, {
           0.5302841097794373, 0.7014410500909232}}, 0.17267105640285008`]}, 
         InsetBox["3", {0.8453604876839295, 1.1322232444837974}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.5316415956620287, 2.426956184109775}, {
           0.003866133600409105, 3.130080585542789}}, 0.17267105640285008`]}, 
         InsetBox["6", {0.2677538646312189, 2.778518384826282}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{4.22470531478881, 1.5638015444246343`}, {
           3.361350635313382, 1.5627815396273108`}}, 0.17267105640285008`]}, 
         InsetBox["5", {3.7930279750510962, 1.5632915420259725}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.}, {0.5302841097794373, 0.7014410500909232}}, 
           0.17267105640285008`]}, 
         InsetBox["2", {0.26514205488971865, 0.3507205250454616}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {RGBColor[0.87, 0.94, 1], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{2.3122492683421783`, 1.562433486942548}, 
          0.17267105640285008], 
         InsetBox["1", {2.312229348500859, 1.3206940087992762}, ImageScaled[{0.5000618015768603, 1.2499999974537102}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1604368655884216`, 1.5630054388766716`}, 
          0.17267105640285008], 
         InsetBox["2", {1.2697886559194933, 1.3474128563484902}, ImageScaled[{0.16073459287748115, 1.168878900496937}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5316415956620287, 2.426956184109775}, 
          0.17267105640285008], 
         InsetBox["3", {0.7260407049848234, 2.570646691744363}, ImageScaled[{-0.10312586349958397, 0.05419825844005377}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.22470531478881, 1.5638015444246343`}, 
          0.17267105640285008], 
         InsetBox["4", {4.466444625041929, 1.5640871457678849}, ImageScaled[{-0.2499994765722453, 0.4991139179733659}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.17267105640285008], 
         InsetBox["5", {-0.14578217842202046, -0.192835505403729}, 
          ImageScaled[{0.9522911784417403, 1.098274761212423}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5302841097794373, 0.7014410500909232}, 
          0.17267105640285008], 
         InsetBox["6", {0.7242675249657722, 0.5571898444722961}, ImageScaled[{-0.1018361668241341, 0.9475413146318818}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.003866133600409105, 3.130080585542789}, 
          0.17267105640285008], 
         InsetBox["7", {-0.14125359318841896, 3.3234151157915712}, 
          ImageScaled[{0.9502359132983572, -0.09982299253729365}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.361350635313382, 1.5627815396273108`}, 
          0.17267105640285008], 
         InsetBox["8", {3.3615335360684298, 1.3210421298549382}, ImageScaled[{0.4994325479360108, 1.2499997853320726}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox[
   "\"Initial Resilient Mesh Network with Link Latencies\"", 
    TraditionalForm]]], "Output",
 CellChangeTimes->{
  3.962990332376996*^9, {3.96299045648328*^9, 3.9629904652224283`*^9}, 
   3.962990568102455*^9},
 CellLabel->
  "Out[1024]=",ExpressionUUID->"e144c3d9-f270-4f48-8eea-d2d9c49b0512"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
      Null, {{1, 2}, {2, 3}, {4, 5}, {5, 6}, {6, 7}, {1, 8}, {2, 6}, {2, 8}, {
       8, 4}, {3, 7}}}, {
      EdgeLabels -> {
        "EdgeWeight", UndirectedEdge[1, 2] -> 6, UndirectedEdge[4, 5] -> 1, 
         UndirectedEdge[3, 7] -> 6, UndirectedEdge[1, 8] -> 4, 
         UndirectedEdge[6, 7] -> 2, UndirectedEdge[5, 6] -> 2, 
         UndirectedEdge[2, 6] -> 3, UndirectedEdge[8, 4] -> 5, 
         UndirectedEdge[2, 3] -> 1, UndirectedEdge[2, 8] -> 1}, 
       GraphHighlight -> {6, 
         UndirectedEdge[3, 7], 7, 
         UndirectedEdge[1, 8], 
         UndirectedEdge[2, 3], 1, 
         UndirectedEdge[2, 6], 4, 3, 
         UndirectedEdge[5, 6], 2, 
         UndirectedEdge[8, 4], 
         UndirectedEdge[1, 2], 8, 5}, GraphHighlightStyle -> {"Thick"}, 
       GraphLayout -> "SpringElectricalEmbedding", ImageSize -> Large, 
       PlotLabel -> "Minimum Spanning Tree (Optimal Path)", 
       VertexLabels -> {"Name"}, VertexSize -> {Large}, VertexStyle -> {
         RGBColor[0.87, 0.94, 1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.7874292183869905, 2.282338350993489}, {
            1.4494817759566068`, 1.5633886334061187`}}, 
            0.16619017154690865`]}}, 
         InsetBox["6", {1.1184554971717986, 1.922863492199804}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.7874292183869905, 2.282338350993489}, {
            0.4206139154923685, 1.5367339910732296`}}, 
            0.16619017154690865`]}}, 
         InsetBox["4", {0.6040215669396796, 1.9095361710333594}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.4494817759566068`, 1.5633886334061187`}, {
            2.53033349960291, 1.5146751543609822`}}, 0.16619017154690865`]}}, 
         InsetBox["1", {1.9899076377797584, 1.5390318938835503}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.4494817759566068`, 1.5633886334061187`}, {
            1.713461957970749, 0.5124299802235102}}, 0.16619017154690865`]}}, 
         InsetBox["3", {1.5814718669636778, 1.0379093068148144}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.4494817759566068`, 1.5633886334061187`}, {
           0.4206139154923685, 1.5367339910732296`}}, 0.16619017154690865`]}, 
         InsetBox["1", {0.9350478457244876, 1.550061312239674}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{2.53033349960291, 1.5146751543609822`}, {
            2.715615719362974, 0.6697660880737124}}, 0.16619017154690865`]}}, 
         InsetBox["6", {2.622974609482942, 1.0922206212173473}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.5892903099366924}, {0.7553183798852724, 0.}}, 
           0.16619017154690865`]}, 
         InsetBox["1", {0.3776591899426362, 0.2946451549683462}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 0.5892903099366924}, {0.4206139154923685, 
            1.5367339910732296`}}, 0.16619017154690865`]}}, 
         InsetBox["5", {0.21030695774618424, 1.063012150504961}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.7553183798852724, 0.}, {1.713461957970749, 
            0.5124299802235102}}, 0.16619017154690865`]}}, 
         InsetBox["2", {1.2343901689280108, 0.2562149901117551}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.713461957970749, 0.5124299802235102}, {
           2.715615719362974, 0.6697660880737124}}, 0.16619017154690865`]}, 
         InsetBox["2", {2.2145388386668614, 0.5910980341486113}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {RGBColor[0.87, 0.94, 1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{0.7874292183869905, 2.282338350993489}, 
           0.16619017154690865]}, 
         InsetBox["1", {0.754153987379291, 2.5126128357159923}, ImageScaled[{0.6072627607598087, -0.24229017247582096}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{1.4494817759566068`, 1.5633886334061187`}, 
           0.16619017154690865]}, 
         InsetBox["2", {1.5476999751493925, 1.7743074914064325}, ImageScaled[{0.18339347667226524, -0.17989727855487447}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{2.53033349960291, 1.5146751543609822`}, 
           0.16619017154690865]}, 
         InsetBox["3", {2.680217648775872, 1.6926311071682079}, ImageScaled[{0.016848203677178653, -0.07364130056162366}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{0., 0.5892903099366924}, 0.16619017154690865]}, 
         InsetBox["4", {-0.2257056392893671, 0.5328054119036046}, 
          ImageScaled[{1.2275624918616836, 0.6820791598069849}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{0.7553183798852724, 0.}, 0.16619017154690865]}, 
         InsetBox["5", {0.7353994983252323, -0.23181203046914392}, 
          ImageScaled[{0.5642085467981627, 1.247246453667107}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{1.713461957970749, 0.5124299802235102}, 
           0.16619017154690865]}, 
         InsetBox["6", {1.7874055749754425, 0.2918264425884727}, ImageScaled[{0.2616426314619996, 1.2111158589594524}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{2.715615719362974, 0.6697660880737124}, 
           0.16619017154690865]}, 
         InsetBox["7", {2.9076963712548096, 0.5384702294884636}, ImageScaled[{-0.11917229081579328, 0.9232324116675408}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{0.4206139154923685, 1.5367339910732296`}, 
           0.16619017154690865]}, 
         InsetBox["8", {0.20986221576636935, 1.635310359313455}, ImageScaled[{1.179358443588329, 0.18223891817083215}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox[
   "\"Minimum Spanning Tree (Optimal Path)\"", TraditionalForm]]], "Output",
 CellChangeTimes->{
  3.962990332376996*^9, {3.96299045648328*^9, 3.9629904652224283`*^9}, 
   3.962990568121056*^9},
 CellLabel->
  "Out[1025]=",ExpressionUUID->"367675f6-b9b8-43bc-8402-9cc405779f08"],

Cell[BoxData[
 RowBox[{"7", " ", "$Failed"}]], "Output",
 CellChangeTimes->{
  3.962990332376996*^9, {3.96299045648328*^9, 3.9629904652224283`*^9}, 
   3.962990568125231*^9},
 CellLabel->
  "Out[1026]=",ExpressionUUID->"fc401ae9-1619-4791-b570-8d3d0da7eafe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Path Latency of the Minimum Spanning Tree: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"7", " ", "$Failed"}]}],
  SequenceForm["Total Path Latency of the Minimum Spanning Tree: ", 7 $Failed],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9629903324607964`*^9, {3.962990456579673*^9, 3.9629904653285007`*^9}, 
   3.962990568125832*^9},
 CellLabel->
  "During evaluation of \
In[1023]:=",ExpressionUUID->"49b72e54-0256-4b69-b511-96f61b94124f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{
  3.962990332376996*^9, {3.96299045648328*^9, 3.9629904652224283`*^9}, 
   3.962990568126255*^9},
 CellLabel->
  "Out[1028]=",ExpressionUUID->"28aba98b-60c6-47c7-91ff-1a19630cf754"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"3", " ", "$Failed"}], ",", 
   RowBox[{"3", " ", "$Failed"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.962990332376996*^9, {3.96299045648328*^9, 3.9629904652224283`*^9}, 
   3.9629905681267443`*^9},
 CellLabel->
  "Out[1029]=",ExpressionUUID->"5f4e38e8-f267-46a0-813c-300b97cc72db"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
      Null, {{1, 2}, {2, 3}, {4, 5}, {5, 6}, {6, 7}, {1, 8}, {2, 6}, {2, 8}, {
       8, 4}, {3, 7}}}, {
      EdgeLabels -> {
        "EdgeWeight", UndirectedEdge[1, 2] -> 6, UndirectedEdge[4, 5] -> 1, 
         UndirectedEdge[3, 7] -> 6, UndirectedEdge[1, 8] -> 4, 
         UndirectedEdge[6, 7] -> 2, UndirectedEdge[5, 6] -> 2, 
         UndirectedEdge[2, 6] -> 3, UndirectedEdge[8, 4] -> 5, 
         UndirectedEdge[2, 3] -> 1, UndirectedEdge[2, 8] -> 1}, 
       GraphHighlight -> {
         UndirectedEdge[3, 7], 7, 
         UndirectedEdge[2, 3], 1, 3, 2, 
         UndirectedEdge[1, 2]}, GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
       "SpringElectricalEmbedding", ImageSize -> Large, PlotLabel -> 
       "Shortest Path Between Node 1 and 7", VertexLabels -> {"Name"}, 
       VertexSize -> {Large}, VertexStyle -> {
         RGBColor[0.87, 0.94, 1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{0.7874292183869905, 2.282338350993489}, {
            1.4494817759566068`, 1.5633886334061187`}}, 
            0.16619017154690865`]}}, 
         InsetBox["6", {1.1184554971717986, 1.922863492199804}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.7874292183869905, 2.282338350993489}, {
           0.4206139154923685, 1.5367339910732296`}}, 0.16619017154690865`]}, 
         InsetBox["4", {0.6040215669396796, 1.9095361710333594}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{1.4494817759566068`, 1.5633886334061187`}, {
            2.53033349960291, 1.5146751543609822`}}, 0.16619017154690865`]}}, 
         InsetBox["1", {1.9899076377797584, 1.5390318938835503}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.4494817759566068`, 1.5633886334061187`}, {
           1.713461957970749, 0.5124299802235102}}, 0.16619017154690865`]}, 
         InsetBox["3", {1.5814718669636778, 1.0379093068148144}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.4494817759566068`, 1.5633886334061187`}, {
           0.4206139154923685, 1.5367339910732296`}}, 0.16619017154690865`]}, 
         InsetBox["1", {0.9350478457244876, 1.550061312239674}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          {Arrowheads[0.], 
           ArrowBox[{{2.53033349960291, 1.5146751543609822`}, {
            2.715615719362974, 0.6697660880737124}}, 0.16619017154690865`]}}, 
         InsetBox["6", {2.622974609482942, 1.0922206212173473}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.5892903099366924}, {0.7553183798852724, 0.}}, 
           0.16619017154690865`]}, 
         InsetBox["1", {0.3776591899426362, 0.2946451549683462}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.5892903099366924}, {0.4206139154923685, 
           1.5367339910732296`}}, 0.16619017154690865`]}, 
         InsetBox["5", {0.21030695774618424, 1.063012150504961}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.7553183798852724, 0.}, {1.713461957970749, 
           0.5124299802235102}}, 0.16619017154690865`]}, 
         InsetBox["2", {1.2343901689280108, 0.2562149901117551}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.713461957970749, 0.5124299802235102}, {
           2.715615719362974, 0.6697660880737124}}, 0.16619017154690865`]}, 
         InsetBox["2", {2.2145388386668614, 0.5910980341486113}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {RGBColor[0.87, 0.94, 1], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{0.7874292183869905, 2.282338350993489}, 
           0.16619017154690865]}, 
         InsetBox["1", {0.754153987379291, 2.5126128357159923}, ImageScaled[{0.6072627607598087, -0.24229017247582096}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{1.4494817759566068`, 1.5633886334061187`}, 
           0.16619017154690865]}, 
         InsetBox["2", {1.5476999751493925, 1.7743074914064325}, ImageScaled[{0.18339347667226524, -0.17989727855487447}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{2.53033349960291, 1.5146751543609822`}, 
           0.16619017154690865]}, 
         InsetBox["3", {2.680217648775872, 1.6926311071682079}, ImageScaled[{0.016848203677178653, -0.07364130056162366}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.5892903099366924}, 0.16619017154690865], 
         InsetBox["4", {-0.2257056392893671, 0.5328054119036046}, 
          ImageScaled[{1.2275624918616836, 0.6820791598069849}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7553183798852724, 0.}, 0.16619017154690865], 
         InsetBox["5", {0.7353994983252323, -0.23181203046914392}, 
          ImageScaled[{0.5642085467981627, 1.247246453667107}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.713461957970749, 0.5124299802235102}, 
          0.16619017154690865], 
         InsetBox["6", {1.7874055749754425, 0.2918264425884727}, ImageScaled[{0.2616426314619996, 1.2111158589594524}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
          Thickness[Large]}], 
          DiskBox[{2.715615719362974, 0.6697660880737124}, 
           0.16619017154690865]}, 
         InsetBox["7", {2.9076963712548096, 0.5384702294884636}, ImageScaled[{-0.11917229081579328, 0.9232324116675408}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.4206139154923685, 1.5367339910732296`}, 
          0.16619017154690865], 
         InsetBox["8", {0.20986221576636935, 1.635310359313455}, ImageScaled[{1.179358443588329, 0.18223891817083215}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox[
   "\"Shortest Path Between Node 1 and 7\"", TraditionalForm]]], "Output",
 CellChangeTimes->{
  3.962990332376996*^9, {3.96299045648328*^9, 3.9629904652224283`*^9}, 
   3.962990568140922*^9},
 CellLabel->
  "Out[1030]=",ExpressionUUID->"123b6618-0448-449d-881b-7879c1a664d9"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Shortest path: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "7"}], "}"}]}],
  SequenceForm["Shortest path: ", {1, 2, 3, 7}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9629903324607964`*^9, {3.962990456579673*^9, 3.9629904653285007`*^9}, 
   3.962990568144079*^9},
 CellLabel->
  "During evaluation of \
In[1023]:=",ExpressionUUID->"325021ca-2ca9-48b4-b790-856036316bfe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Latency of shortest path: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", " ", "$Failed"}], ",", 
     RowBox[{"3", " ", "$Failed"}]}], "}"}]}],
  SequenceForm["Latency of shortest path: ", {3 $Failed, 3 $Failed}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9629903324607964`*^9, {3.962990456579673*^9, 3.9629904653285007`*^9}, 
   3.962990568144499*^9},
 CellLabel->
  "During evaluation of \
In[1023]:=",ExpressionUUID->"d13cc1ee-0ac1-4306-8ebc-e930fb423fe4"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Path\"\>", "\<\"Total Latency\"\>"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "6", ",", "7"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", " ", "$Failed"}], ",", 
       RowBox[{"3", " ", "$Failed"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "7"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", " ", "$Failed"}], ",", 
       RowBox[{"3", " ", "$Failed"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "8", ",", "2", ",", "6", ",", "7"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"4", " ", "$Failed"}], ",", 
       RowBox[{"4", " ", "$Failed"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "8", ",", "2", ",", "3", ",", "7"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"4", " ", "$Failed"}], ",", 
       RowBox[{"4", " ", "$Failed"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "8", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}], 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"5", " ", "$Failed"}], ",", 
       RowBox[{"5", " ", "$Failed"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "8", ",", "4", ",", "5", ",", "6", ",", "7"}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"6", " ", "$Failed"}], ",", 
       RowBox[{"6", " ", "$Failed"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "1", ",", "8", ",", "4", ",", "5", ",", "6", ",", "2", ",", "3", ",", 
       "7"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"7", " ", "$Failed"}], ",", 
       RowBox[{"7", " ", "$Failed"}]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       GrayLevel[0.85], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.962990332376996*^9, {3.96299045648328*^9, 3.9629904652224283`*^9}, 
   3.962990568145232*^9},
 CellLabel->
  "Out[1035]=",ExpressionUUID->"9173cdf8-7352-4a25-adc4-166506212c14"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Conventional Network: A Brittle Abstraction", "Chapter",
 CellChangeTimes->{{3.9629906915537767`*^9, 3.962990692034157*^9}, {
  3.9629938493957863`*^9, 3.9629938502071533`*^9}},
 FontSize->24,ExpressionUUID->"270445a5-c7de-4174-8d86-e25d77aecea8"],

Cell[CellGroupData[{

Cell["\<\
This Mathematica notebook provides another \[OpenCurlyDoubleQuote]Code as \
Proof\[CloseCurlyDoubleQuote] analysis, demonstrating the universal \
advantages of the D\[CapitalAE]D\[CapitalAE]LUS architecture across different \
network topologies. It serves as a formal model for our presentations at the \
FMS (Future of Memory and Storage) conference, showing how a resilient, \
graph-aware fabric provides superior performance and self-healing \
capabilities compared to the brittle abstractions of conventional networking.

The analysis begins by defining the physical N2N Lattice, which represents \
the true groundplane of interconnected CELLs. It then simulates the effect of \
a classical protocol like STP by calculating a single spanningTree. The \
output clearly shows that the conventionalPath from Node 1 to 8 on this tree \
has a total latency of 61 units. The Manipulate visualization powerfully \
demonstrates the fragility of this approach: when a critical link on this \
path fails (e.g., 4 <-> 6), the output correctly reports \
\[OpenCurlyDoubleQuote]Conventional Path: BROKEN (Nodes are partitioned)\
\[CloseCurlyDoubleQuote]. This demonstrates the brittleness that makes \
conventional networks unsafe for atomic operations; a single point of failure \
can sever communication, forcing slow, application-level timeouts and \
retries. This confirms the D\[CapitalAE]D\[CapitalAE]LUS principle that \
\[OpenCurlyDoubleQuote]You cannot add reliability on top of an unreliable \
network\[CloseCurlyDoubleQuote].\
\>", "Subsection",
 CellChangeTimes->{{3.962990697399872*^9, 3.962990698066004*^9}, {
  3.9629938462714853`*^9, 3.962993858674864*^9}, {3.962993912210031*^9, 
  3.962993913681849*^9}},
 FontSize->16,ExpressionUUID->"cf5fc9ee-f90e-4757-a67c-2307c632788d"],

Cell[CellGroupData[{

Cell["The D\[CapitalAE]D\[CapitalAE]LUS Approach: Autonomous Self-Healing", \
"Subsubsection",
 CellChangeTimes->{{3.96299070335322*^9, 3.962990704491493*^9}, {
   3.962993861929474*^9, 3.9629938623611183`*^9}, 
   3.962993915058586*^9},ExpressionUUID->"da783bf8-39fb-4588-bdc8-\
fa841b06fefa"],

Cell[TextData[{
 "In stark contrast, the \[OpenCurlyDoubleQuote]D\[CapitalAE]D\[CapitalAE]LUS \
Self-Heals\[CloseCurlyDoubleQuote] portion of the simulation shows the system\
\[CloseCurlyQuote]s ability to recover instantly from the same failure. This \
is not a theoretical ideal but a direct consequence of the architecture. The \
Graph Virtual Machine (GVM), which manages the fabric\[CloseCurlyQuote]s \
topology, maintains knowledge of the complete N2N Lattice through a \
collection of trees known as a TRAPH. Upon detecting a link failure, the GVM \
uses this pre-existing topological awareness to immediately reroute traffic \
along a known, alternative path. As demonstrated in our FMS presentation \
rehearsals, the network is able to \[OpenCurlyDoubleQuote]respond to failures \
in real time without dropping packets\[CloseCurlyDoubleQuote] because the \
recovery is a local, deterministic decision, not a global, probabilistic \
event.\n\n",
 StyleBox["Path Diversity: The Foundation of Resilience\n",
  FontWeight->"Bold"],
 "\nThe \[OpenCurlyDoubleQuote]Path Diversity \
Analysis\[CloseCurlyDoubleQuote] at the end of the notebook provides the data \
that underpins this self-healing capability. The table lists multiple \
distinct paths between two nodes, each with a different latency. This is the \
rich path diversity that the D\[CapitalAE]D\[CapitalAE]LUS architecture \
preserves and leverages. The final graph visually compares the \
\[OpenCurlyDoubleQuote]Optimal Path (Red)\[CloseCurlyDoubleQuote] found by \
scouting the full lattice against the \[OpenCurlyDoubleQuote]Conventional \
Path (Blue Dashed)\[CloseCurlyDoubleQuote] that is locked into the \
inefficient spanning tree. This proves that the D\[CapitalAE]D\[CapitalAE]LUS \
approach is not only more resilient but also more performant. The optimal \
path\[CloseCurlyQuote]s latency of 46 is a significant improvement over the \
conventional path\[CloseCurlyQuote]s 61. This is essential, as \
\[OpenCurlyDoubleQuote]You cannot add reliability on top of an unreliable \
network\[CloseCurlyDoubleQuote]. By building on a foundation of resilient, \
redundant paths, we can provide the Reversible Subtransactions and \
\[OpenCurlyDoubleQuote]Transactional Integrity at Layer 2\
\[CloseCurlyDoubleQuote] needed to finally eliminate the data-corrupting \
timeouts and retries that plague modern distributed systems."
}], "Text",
 CellChangeTimes->{{3.962990708929163*^9, 3.9629907092792273`*^9}, {
   3.962993865791662*^9, 3.962993876324918*^9}, 
   3.962993916545415*^9},ExpressionUUID->"65c99995-5ade-47cf-98d5-\
0b1c308d0911"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{940, 864},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrivateNotebookOptions->{"CloudPublishPath"->"/Published/self headling \
trees.nb"},
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f0eed111-01e3-4e2d-a5ef-81360a1eba3f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 295, 7, 77, "Abstract",ExpressionUUID->"9d3b4621-422c-43fd-aada-d369c39956a5"],
Cell[CellGroupData[{
Cell[878, 31, 5043, 121, 634, "Subsection",ExpressionUUID->"4d443358-7374-41bc-8953-1607acf91698"],
Cell[CellGroupData[{
Cell[5946, 156, 1010, 21, 282, "Subsubsection",ExpressionUUID->"9c634be0-f118-4f67-9feb-e68b0acee65d"],
Cell[6959, 179, 3141, 74, 734, "Text",ExpressionUUID->"f0c06137-c800-4910-b0e9-de5aa20a32fc"],
Cell[CellGroupData[{
Cell[10125, 257, 7619, 207, 777, "Input",ExpressionUUID->"485382e2-0d8b-4095-986c-0b4285f6e94f"],
Cell[17747, 466, 12314, 235, 921, "Output",ExpressionUUID->"cc4d737c-2dcf-48d9-ab84-45324c8070fe"],
Cell[30064, 703, 9051, 134, 553, "Message",ExpressionUUID->"1d91fa6b-960c-4f8b-ac64-2737630f1d4d"],
Cell[39118, 839, 9343, 180, 592, "Print",ExpressionUUID->"6a02f34b-c466-40c8-98cc-3cf391e88b2f"],
Cell[48464, 1021, 9268, 172, 921, "Output",ExpressionUUID->"08d66d94-7530-44df-8c88-e1da2ec8d621"],
Cell[CellGroupData[{
Cell[57757, 1197, 405, 10, 28, "Print",ExpressionUUID->"e10f9525-6c44-4a2c-9222-a2f9147e2046"],
Cell[58165, 1209, 408, 9, 28, "Print",ExpressionUUID->"4705ab76-0916-4b67-b389-546d2cc073ad"]
}, Open  ]],
Cell[58588, 1221, 572, 14, 47, "Output",ExpressionUUID->"7fdd2c40-a3e4-4350-8816-db3eecce81cb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59221, 1242, 1398, 21, 251, "Chapter",ExpressionUUID->"5d936cf1-8ff8-4406-b3e4-4e54de14f311"],
Cell[CellGroupData[{
Cell[60644, 1267, 877, 13, 140, "Subsection",ExpressionUUID->"50fff699-74c8-4bc3-b379-2b5ccd1a88d4"],
Cell[CellGroupData[{
Cell[61546, 1284, 1111, 16, 152, "Subsubsection",ExpressionUUID->"80899919-86f9-423e-bca4-9ab804149372"],
Cell[62660, 1302, 1249, 19, 274, "Text",ExpressionUUID->"473b869b-1180-485d-93d5-747c322bf828"],
Cell[CellGroupData[{
Cell[63934, 1325, 5529, 157, 633, "Input",ExpressionUUID->"a0f08b5a-4b59-4005-8e21-6e4b0a188b0e"],
Cell[CellGroupData[{
Cell[69488, 1486, 425, 10, 28, "Print",ExpressionUUID->"841456d1-c482-4765-8961-4f6691b3f174"],
Cell[69916, 1498, 456, 11, 28, "Print",ExpressionUUID->"39af036b-1a40-47c6-b9b9-70545f9b2424"],
Cell[70375, 1511, 385, 9, 28, "Print",ExpressionUUID->"01caf88f-72d7-4231-a2c6-49477264dece"]
}, Open  ]],
Cell[70775, 1523, 1320, 40, 221, "Output",ExpressionUUID->"9330908f-2390-4d28-b85c-8cf65b21fd14"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72168, 1571, 707, 11, 139, "Chapter",ExpressionUUID->"8504e43b-361b-44cb-9a3f-5cfacf1a2db3"],
Cell[CellGroupData[{
Cell[72900, 1586, 974, 16, 204, "Subsection",ExpressionUUID->"51f38f9d-4387-4c14-ab11-f74919ca202e"],
Cell[CellGroupData[{
Cell[73899, 1606, 806, 12, 145, "Subsubsection",ExpressionUUID->"9efc28cd-e259-4a51-8f85-c6ddd490c85f"],
Cell[74708, 1620, 1783, 26, 363, "Text",ExpressionUUID->"5ba309c0-694f-4144-8b53-5d1cac449462"],
Cell[CellGroupData[{
Cell[76516, 1650, 5441, 153, 681, "Input",ExpressionUUID->"b139740d-b940-4afd-a5b1-dafab9a818c6"],
Cell[CellGroupData[{
Cell[81982, 1807, 483, 10, 28, "Print",ExpressionUUID->"3fbe7044-ecbe-4782-ab61-8e2f5f28a8eb"],
Cell[82468, 1819, 502, 11, 28, "Print",ExpressionUUID->"06634f6d-510e-457b-a990-023fc599b9e6"],
Cell[82973, 1832, 433, 9, 28, "Print",ExpressionUUID->"bd8ffc79-343f-4bc5-8512-741e314d4c7a"]
}, Open  ]],
Cell[83421, 1844, 1368, 40, 239, "Output",ExpressionUUID->"3e4cc4f8-49ba-46d8-b53f-5c9fc959690f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84862, 1892, 234, 4, 86, "Chapter",ExpressionUUID->"71b407b8-545d-4a28-9a1a-bde683c4a298"],
Cell[85099, 1898, 687, 12, 159, "Text",ExpressionUUID->"aa1a7960-9002-4717-9695-262d1e2edcd9"],
Cell[CellGroupData[{
Cell[85811, 1914, 231, 4, 67, "Subsection",ExpressionUUID->"a291308f-0383-4b2a-9977-d15c402704e4"],
Cell[86045, 1920, 1232, 19, 274, "Text",ExpressionUUID->"4e2a2b64-d3ce-4e9b-a0b2-023cf8ccf434"],
Cell[CellGroupData[{
Cell[87302, 1943, 258, 5, 56, "Subsubsection",ExpressionUUID->"4d75cdc0-0141-4760-bc08-03c523455ef1"],
Cell[87563, 1950, 1877, 29, 476, "Text",ExpressionUUID->"3beb9dec-098b-4fd0-ad2b-d7b92dba82fd"],
Cell[CellGroupData[{
Cell[89465, 1983, 6176, 171, 729, "Input",ExpressionUUID->"b7c2e636-b9d1-4fac-bff4-bfbce878e750"],
Cell[95644, 2156, 6148, 111, 681, "Output",ExpressionUUID->"7e43a922-e27f-4e1d-93db-999a4856efa9"],
Cell[CellGroupData[{
Cell[101817, 2271, 465, 10, 28, "Print",ExpressionUUID->"9760a87f-5654-4fba-8f4b-c0fa93729673"],
Cell[102285, 2283, 482, 11, 28, "Print",ExpressionUUID->"62be9d55-1c53-45cf-be1c-09c8d4c57872"],
Cell[102770, 2296, 413, 9, 28, "Print",ExpressionUUID->"28a7a28d-55a6-4147-aac8-4ea2a1a17baf"]
}, Open  ]],
Cell[103198, 2308, 1342, 40, 221, "Output",ExpressionUUID->"48dada53-824a-4b69-b640-5465321cdfdb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104613, 2356, 253, 3, 71, "Chapter",ExpressionUUID->"0d59fedc-7835-4579-b452-d22cf084f762"],
Cell[CellGroupData[{
Cell[104891, 2363, 1555, 24, 416, "Subsection",ExpressionUUID->"d3b0f5bf-9de6-4867-9b55-c94f0c9822f5"],
Cell[CellGroupData[{
Cell[106471, 2391, 270, 5, 56, "Subsubsection",ExpressionUUID->"72ad9ff0-45f7-4edb-940b-fc52edf04395"],
Cell[106744, 2398, 2559, 38, 619, "Text",ExpressionUUID->"a41a5d15-c914-423e-9f02-4a8f90820d7f"],
Cell[CellGroupData[{
Cell[109328, 2440, 10473, 274, 1401, "Input",ExpressionUUID->"9a73af3b-bcf7-4c9c-bf94-c97dd2abae20"],
Cell[CellGroupData[{
Cell[119826, 2718, 542, 12, 28, "Print",ExpressionUUID->"6742134f-ac3c-453f-8103-d4a5e026fa93"],
Cell[120371, 2732, 443, 10, 28, "Print",ExpressionUUID->"2f15f536-e2ab-46b4-8974-49adae947d91"]
}, Open  ]],
Cell[120829, 2745, 12331, 273, 675, "Output",ExpressionUUID->"8d5e4d9d-ade0-4a2b-9192-ee9eaa9d56fc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[133233, 3026, 280, 4, 71, "Chapter",ExpressionUUID->"c363efe5-8572-4160-821a-5aa3e8a4eca0"],
Cell[CellGroupData[{
Cell[133538, 3034, 1747, 26, 374, "Subsection",ExpressionUUID->"af88faf5-eb15-4172-b373-019c0ecf2f3e"],
Cell[CellGroupData[{
Cell[135310, 3064, 239, 4, 56, "Subsubsection",ExpressionUUID->"eb2f19aa-5bff-4681-91f7-615595d400bb"],
Cell[135552, 3070, 2208, 33, 533, "Text",ExpressionUUID->"1efe2ff5-be30-48d8-95a9-9da7d8d3df20"],
Cell[CellGroupData[{
Cell[137785, 3107, 10917, 278, 1353, "Input",ExpressionUUID->"7f8f8ec8-b19f-4593-8fba-23d33b13f030"],
Cell[148705, 3387, 6627, 128, 312, "Output",ExpressionUUID->"23b107ab-2f4f-4dc2-87ef-dbd89181f7fc"],
Cell[155335, 3517, 5767, 114, 100, "Output",ExpressionUUID->"ba97d261-3c13-4017-8a97-de893443b5ed"],
Cell[161105, 3633, 8240, 159, 312, "Output",ExpressionUUID->"0bdb4e07-fd04-43fc-b31c-4aeb23f2cb58"],
Cell[169348, 3794, 353, 7, 41, "Output",ExpressionUUID->"b1654110-d0fb-4e70-b12c-f14725d78942"],
Cell[169704, 3803, 278, 5, 41, "Output",ExpressionUUID->"610698ee-950e-4e6e-be4d-a90d8b239efc"],
Cell[CellGroupData[{
Cell[170007, 3812, 560, 12, 28, "Print",ExpressionUUID->"e3e0ed29-f73a-41fa-80a3-4f55e557f880"],
Cell[170570, 3826, 490, 11, 28, "Print",ExpressionUUID->"514c2e21-8f91-4382-bd6e-15fa0a5a2283"]
}, Open  ]],
Cell[171075, 3840, 3755, 80, 454, "Output",ExpressionUUID->"b7773693-d176-4c05-a443-d28c8d1639b6"],
Cell[174833, 3922, 14287, 316, 277, "Output",ExpressionUUID->"ba7d73df-2c94-43bf-b12e-eecaa32a76eb"],
Cell[189123, 4240, 555, 10, 35, "Message",ExpressionUUID->"10aa32bd-827d-4e55-ba32-e077e6de7455"],
Cell[189681, 4252, 554, 10, 35, "Message",ExpressionUUID->"99c4f93c-fe49-4b01-89ec-40ff7879b765"],
Cell[190238, 4264, 555, 10, 35, "Message",ExpressionUUID->"22f8d520-2536-4059-b406-64d645be9de3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[190866, 4282, 253, 3, 71, "Chapter",ExpressionUUID->"91b40fbe-8c5a-4063-b07e-f242b008f934"],
Cell[CellGroupData[{
Cell[191144, 4289, 1669, 24, 443, "Subsection",ExpressionUUID->"ee5bfa41-cd24-42bb-875b-656e15d56c32"],
Cell[CellGroupData[{
Cell[192838, 4317, 294, 5, 56, "Subsubsection",ExpressionUUID->"e2a7b5dc-222e-4df6-be23-51dded85f74f"],
Cell[193135, 4324, 2630, 39, 648, "Text",ExpressionUUID->"4d02a1a7-a5a1-4b8c-872b-bf24504e0009"],
Cell[CellGroupData[{
Cell[195790, 4367, 6846, 183, 777, "Input",ExpressionUUID->"e39806c4-f0c1-403b-b585-69b302b88d35"],
Cell[202639, 4552, 6419, 116, 699, "Output",ExpressionUUID->"e80d19d9-80a9-461c-bf0a-fe4c1dc59376"],
Cell[209061, 4670, 5576, 103, 613, "Output",ExpressionUUID->"e144c3d9-f270-4f48-8eea-d2d9c49b0512"],
Cell[214640, 4775, 8010, 147, 699, "Output",ExpressionUUID->"367675f6-b9b8-43bc-8402-9cc405779f08"],
Cell[222653, 4924, 258, 6, 59, "Output",ExpressionUUID->"fc401ae9-1619-4791-b570-8d3d0da7eafe"],
Cell[222914, 4932, 504, 12, 28, "Print",ExpressionUUID->"49b72e54-0256-4b69-b511-96f61b94124f"],
Cell[223421, 4946, 295, 7, 59, "Output",ExpressionUUID->"28aba98b-60c6-47c7-91ff-1a19630cf754"],
Cell[223719, 4955, 337, 9, 59, "Output",ExpressionUUID->"5f4e38e8-f267-46a0-813c-300b97cc72db"],
Cell[224059, 4966, 7175, 130, 699, "Output",ExpressionUUID->"123b6618-0448-449d-881b-7879c1a664d9"],
Cell[CellGroupData[{
Cell[231259, 5100, 474, 12, 28, "Print",ExpressionUUID->"325021ca-2ca9-48b4-b790-856036316bfe"],
Cell[231736, 5114, 550, 14, 28, "Print",ExpressionUUID->"d13cc1ee-0ac1-4306-8ebc-e930fb423fe4"]
}, Open  ]],
Cell[232301, 5131, 2188, 69, 239, "Output",ExpressionUUID->"9173cdf8-7352-4a25-adc4-166506212c14"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[234562, 5208, 257, 3, 71, "Chapter",ExpressionUUID->"270445a5-c7de-4174-8d86-e25d77aecea8"],
Cell[CellGroupData[{
Cell[234844, 5215, 1793, 27, 443, "Subsection",ExpressionUUID->"cf5fc9ee-f90e-4757-a67c-2307c632788d"],
Cell[CellGroupData[{
Cell[236662, 5246, 294, 5, 56, "Subsubsection",ExpressionUUID->"da783bf8-39fb-4588-bdc8-fa841b06fefa"],
Cell[236959, 5253, 2606, 39, 648, "Text",ExpressionUUID->"65c99995-5ade-47cf-98d5-0b1c308d0911"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

